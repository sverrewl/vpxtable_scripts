'oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
'oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
'oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
'oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
'oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
'ooooooooooooooooooooooooooooooooooooooooooooooc,,:oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
'oooooooooooooooooooooooooooooooooooooooooool:.   .':looooooooooooooooccooooooooool;cooooooooooooooooool:,';coooooooooooooooooooooooooooooooooooooooooo
'oooooooooooooooooooooooooooooooooooooooool;.        .,clooooooooooool,.;cccccccc:'.;oooooooooooooooc;'..   .':looooooooooooooooooooooooooooooooooooooo
'oooooooooooooooooooooooooooooooooooooool;.             .,:loooooooool. .......'''..;oooooooooolc;'..          .;looooooooooooooooooooooooooooooooooooo
'oooooooooooooooooooooooooooooooooooool;....';:cool:'      ..';:cloooc.             ,ooolc:;,'..                 .:looooooooooooooooooooooooooooooooooo
'oooooooooooooooooooooooooooooooooool:. ..;kNWMMMMMWK:          ....'.              .'....                  .;oc.  .:oooooooooooooooooooooooooooooooooo
'ooooooooooooooooooooooooooooooooooc'    'xNMMMMMMMMMO. .                 .     ..                 .  .'.   ,kWNd.  .,coooooooooooooooooooooooooooooooo
'ooooooooooooooooooooooooooooooool,.   .cKWMMWK0NMMMMK,.;.      .       .',.    ...               .   .c'    .xNWk'   .:ooooooooooooooooooooooooooooooo
'ooooooooooooooooooooooooooooooool,.   .cKWMMWK0NMMMMK,.;.      .       .',.    ...               .   .c'    .xNWk'   .:ooooooooooooooooooooooooooooooo
'oooooooooooooooooooooooooooooooc.    .xNMMMXo..dWMMMk'cd;'''..:,      .:xdlc:;:cl,         ..        'o;     .oNWKc   .,looooooooooooooooooooooooooooo
'oooooooooooooooooooooooooooool;.    ;0WMMWk,  .xWMW0;,0WNNNNXXO'       .lkOkxdxkl.         c: ';.  ..lO:       cXMNd.   .coooooooooooooooooooooooooooo
'ooooooooooooooooooooooooooool'    .lXMMWKc. .;kNWKd'.xWNOkXMMWd.        .:dxdll:.         .xc ;kookKXWNl        :XMWk.   .:ooooooooooooooooooooooooooo
'oooooooooooooooooooooooooooc.    .xNMMW0l;:oOXXOl.  lNWd..dWMX;..          ...    ..      :0: 'OMMMMMMMk.  .c;   :KMWO'   .;looooooooooooooooooooooooo
'oooooooooooooooooooooooooo:.    ,OWMMMMNNWWNx:..   cXWx.  lWMk':xc::::;,'....    ';..    .xK; .kMMMWWMMK, .dNXl.  :KMW0,    ,loooooooooooooooooooooooo
'ooooooooooooooooooooooooo;.    :KMMMWWMMMMMNo. .. :KWk.  .dWNc,OMWMMMWWWNNXKK0Okkl.,'    cXK; .xMMNkOWMNl  lNMNO:. cXMW0,    'looooooooooooooooooooooo
'oooooooooooooooooooooooo;.    cXMMWOl:ckWMMMK, ..cKWO'   ,KMO';k0KXNMMMMWNXKKKKKd.;d,   ,0MX; .xMMNc;0MMO. .kWMMW0l;oXMW0,    'coooooooooooooooooooooo
'ooooooooooooooooooooooo;.   .lNMMXo.   ,KMMMK; .oXWO'   .xWNl   ...dWMMXo'.......:KK,  .xWMX; .dMMX: cNMNl  :XMMMMWXOKWMM0,    'looooooooooooooooooooo
'oooooooooooooooooooooo;.   .dNMM0;  .  ,KMMMO..oNMWkllod0WMO.     .dWMNl        cXMNc .dWMMX; .xMMX; .kMM0' .dWMMMMMMMMMMWO'    'loooooooooooooooooooo
'ooooooooooooooooooooo;.   .xWMM0,      lNMMXc.dNMMMWMMMMMMNl      ;KMMO'      .dNMMWx.cNMMMX: .xMMO.  lNMWd. 'OMMWNNWMMMMMWk.    ,looooooooooooooooooo
'oooooooooooooooooooo:.   .kWMMK;      ;KMMXo;kWWKxc:oKMMMM0'     .kWMWd.     'kWMMMM0xKMMMMNc .kMM0lldKWMMX:  :XMWk;ckXWMMMWx.   .:ooooooooooooooooooo
'oooooooooooooooooooc.   .kWMMNl      ,0MW0cc0WXd'   .xMMMWo      cNMMX;    .;0WWWMMMWWN0KWMNc .kMMNOoldKWMWO. .dWMK, .,o0WMMWd.   .coooooooooooooooooo
'ooooooooooooooooool'   .kWMMMNc    .:0WXo'cKWO,.    .kMMM0'     'OMMWx.  .cOXW0c:OWMMNd'dWMWl .kMNo.   ,kWMWo. '0MWx.   .lKWMWd.   ,looooooooooooooooo
'oooooooooooooooooo,   .oXWMMMMKl,;o0NXd' .kNx.  .   ;XMMNl      oNMMX;  .oNMWx.  ;KMWd..xMMWl .kMK,    .,KMMK;  lNMNc     .dNMWd.  .:ooooooooooooooooo
'ooooooooooooooooo:.   ,:,lKWMMMWNNXOl.    ';.      .xWMMO'     ,0WNNd. .xWNXd.    oXx. .kMMNl .xMK,     .kMMWk. .OMM0,      ;0WWx.  'loooooooooooooooo
'ooooooooooooooool'        .cdkOxoc'                :XMMNl     .od;''. 'OWWd,.     .,.  '0MMNc  'cc.      oWMW0,  oX0d,       .d0xc. .:oooooooooooooooo
'ooooooooooooooooc......                           .kMMM0'     .'.     :XWx.            ,KMMNc            :XXo.   .,.           .  .  'looooooooooooooo
'oooooooooooooooolclloll:,.                       .oNMMWo              .co.             :XMMX:            .xd.                        .cooooooooooooooo
'oooooooooooooooooooooooool:'                     .;ccdx,                               ;OOOk,             ,,            ..,;;;;,'..   ;ooooooooooooooo
'oooooooooooooooooooooooooooo:.    ..',,,'..           .                                 .  .                          .:looooooooolc;':ooooooooooooooo
'oooooooooooooooooooooooooooooc,,;cloooooool:,.        ........                           ...                 .......,:oooooooooooooooooooooooooooooooo
'oooooooooooooooooooooooooooooooooooooooooooool;. ..,;cloooooolc;'.                 .';:cclllcc:;'..     ..,:cloooooooooooooooooooooooooooooooooooooooo
'ooooooooooooooooooooooooooooooooooooooooooooooolccooooooooooooooolc,.           .;clooooooooooooool:'..,cooooooooooooooooooooooooooooooooooooooooooooo
'ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooool;.      .'cooooooooooooooooooooollooooooooooooooooooooooooooooooooooooooooooooooo
'ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooool;. ..,coooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
'ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooc:looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
'oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
'oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
'oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
' ****************************************************************
'                         VISUAL PINBALL X
'                   Batman 66 Script
'            By Daphishbowl and Mr H.
'                            Version 1.2.1
'
' Special thanks to:
'   Harlan          Pup help, graphics, sounds
'   MPT3K         Gameplay, videos, real table comparison, sound and testing
'   Dimi          Video resources
'   Flipstream        Awesome Gameplay videos
'   EbIsLit         Playfield scan
'   Nailbuster        Massive Pup help (and VPX code tips!)
'   Rik           Massive Testing
'   TerryRed        DOF and lots of support
'   wAxx          Awesome Physics and detail tweaks
'   Joey          Backglass graphics
'   DJRobX          Turntable help
'   Sixtoe          VR Room
'   G5K           Turntable help
'   Pinballfan2018      Table support
'   VPW           nFozzy fixes and details (Benji, Apophis, iaakki, Astronasty, Bord, Sixtoe)
'   Alpha/Beta Testers    Too many to list
' ****************************************************************


' UPDATE LOG

' 1.2.3 mcarter78 - Organized layers, updated flipper triggers
' 1.2.4 iaakki - readded physics codes, adjusted flipper physics, reworked slings
' 1.2.5 mcarter78 - Slingshot corrections, replace posts, sleeves & rubbers, reshape plunger rest, added fleep code & collections
' 1.2.6 iaakki - some script cleanup, tgGordon target rework, side STD's redone using roth physics, target prims redone, slings made more sensitive
' 1.2.7 Sixtoe - Tweaked right catwomen ramps, layby, and layout bits
' 1.2.8 mcarter78 - Added fleep sound files to manager, new ball rolling sounds, ramp rolling sounds (WIP)
' 1.2.9 iaakki - Slight change to flip start angles (TV target shots improved), reworked flip polarities and strenght to make ramp backhand shots ok again, reduced slings a hair.
' 1.2.10 iaakki - Flipper primitives added. Various objects tied to GI lights. Standalone patch applied. Few other tweaks
' 1.2.11 iaakki - Magned made slightly larger and strenght reduced, sandwich sleeves redone and physics adjusted, rotating targets added to targets-collection which only has non-roth targets now, slings reduced even further
' 1.2.12 iaakki - getballs calls reduced, flip angles reworked one-more-time, polarity fiddled, bounces reduced all around, RotatingPFA elasticity increased 0.1 > 0.4
' 1.2.13 iaakki - Sling tweaks, flip collision fixes, BOT revert for rollingupdate, sling bottom rubbers takesn out from dPosts collection, anti-skijump and anti-speed mods added to inlanes
' 1.2.14 iaakki - Left orb rework, flip strength increased, ssh sounds cleaned up, collection cleanup, apron cards from carny_priest,
' 1.2.15 iaakki - Wall014 made collidable to prevent hop to plungerlane, various ssf fixes, game audios muted for now, uncomment lines to turn them on, ballball collisions fixed, Only diverter sounds missing afaik.
' 1.2.16 iaakki - diverter animations and ssf sounds added and lighting fixed. Overall sounds restored.
' 1.2.17 iaakki - reflections tuned down, craneBall hit sounds fixed
' 1.2.18 iaakki - Trough redone. No more destroyed balls. Drain area secured for narnia balls. Apron height 50 -> 100
' 1.2.19 iaakki - pf mesh redone, sling animations fixed, top kicker hole reworked, fixes to multiple plywood sides in PF holes
' 1.2.20 hauntfreaks - pf shadows
' 1.2.21 iaakki - Improvement to top kicker, disabled ball shadows on trough
' 1.2.22 iaakki - Insert edge issues solved using blocker wall under the PF. Some pf hole edges improved. Refraction probes added and some lighting quirks fixed
' 1.2.24 iaakki - fixing some pf lighting issues
' 1.2.25 iaakki - fixed some rubber sounds
' 1.2.26 Dough Nut/DGrimmReaper - VR Mega Room and Animated VR buttons
' 1.2.28 iaakki - Reworked DOF calls, disabled VR room by default, flip tuned one-more-time, Plunger lane switch hole fixed
' 1.2.29 iaakki - Flipper DOF fix?

Option Explicit
SetLocale 1033          ' Force US format so math works out
Randomize

Const bUsePlungerForSternKey  = False ' Defaults to Right Magna Button but you can use Plunger button also
Const kBallSearchEnabled    = True  '  Do ball search if ball gets lost
Const kBallSearchTimeout    = 20000 '  Start ball search after 18 seconds of no activity
Const DMDMode         = 2   ' 0=None, 2=PUP (make sure you set PuPDMDDriverType below)
Const doCallouts        = False ' Play random callouts during the game

Const FontScale         = 1   ' Scales the PupFonts up/down for different sized DMDs
Const FontScaleDmd        = 1   ' Scales the SlimDMDFonts up/down for different sized DMDs
Const osbactive         = 0   ' Orbital Scoreboard: Set to 0 for off, 1 for only player 1 to be sent, 2 for all scores to be sent.
Const bladeArt          = 0   ' 0=Off (Black wood), 1=On (Art), 2=Sideblades Off.
Const showRails         = 1   ' 0=Off, 1=ON - Show rails on top of sideblades
Const AttractSilent       = 0   ' 0 = audio and DOF played during attract sequence, 1 = no audio and no DOF during attract sequence(after first play)
Const AlternatePhysics      = 0   ' 0=Default Physics, 1=Mod Physics - See which flipper physics option you like best
Const HasRealTiltBob      = 0   ' 0=No Tilt Bob, 1=Real TiltBob
Const CreditsDelay        = 4000  ' If you have issues with the credits not showing up, setting this to 2000 might help on some cabs

'///////////////////////-----VR Room-----///////////////////////
Const VRRoom          = 0   '0=VR Room off, 1=360 Room, 2=Minimal Room, 3=Ultra Minimal, 4=MEGA Room
Const VRBats          = 0   '0=No Bats, 1=BATS!

' SCORBIT:
Const     ScorbitActive     = 0   ' Is Scorbit Active
Const     ScorbitShowClaimQR  = 1   ' If Scorbit is active this will show a QR Code in the bottom left on ball 1 that allows player to claim the active player from the app
Const     ScorbitClaimSmall   = 0   ' Make Claim QR Code smaller for high res backglass
Const     ScorbitUploadLog    = 1   ' Store local log and upload after the game is over
Const     ScorbitAlternateUUID  = 0   ' Force Alternate UUID from Windows Machine and saves it in VPX Users directory (C:\Visual Pinball\User\ScorbitUUID.dat)


Const KeepLogs=True           ' Set True to save debug log file (Testers Only)

'**************************
'   PinUp Player USER Config
'**************************
Dim bSingleScreen:bSingleScreen=True     ' when Playfield is in landscape and single screen this will allow PUP to work properly
dim PuPDMDDriverType: PuPDMDDriverType=0   ' 0=LCD DMD, 2=FullDMD
dim useHighResDMD:useHighResDMD=False    ' if you have a high res FullDMD this will make some animtions look better
dim useRealDMDScale : useRealDMDScale=0    ' 0 or 1 for RealDMD scaling.  Choose which one you prefer.
dim useDMDVideos    : useDMDVideos=True    ' true or false to use DMD splash videos.
dim b5x4Mode    : b5x4Mode=False     ' Using 5x4 Screen

'***********TABLE VOLUME LEVELS *********
' [Value is from 0 to 1 where 1 is full volume.
' NOTE: you can go past 1 to amplify sounds]
Const cVolBGVideo = 1.5 ' Volume for Video Clips
Const cVolBGMusic = .8  ' Volume for Music
Const cVolDef   = .5  ' Default volume for callouts (Voice callouts)
Const cVolSfx   = .2  ' Volume for Game Sound effects  (Hitting targets, raps, etc)
Const cVolTable = 1   ' Volume for table Sound effects (Kickers, flippers, bumpers, etc)

'Const cVolBGVideo = 0 ' Volume for Video Clips
'Const cVolBGMusic = 0  ' Volume for Music
'Const cVolDef  = 0 ' Default volume for callouts (Voice callouts)
'Const cVolSfx  = 0 ' Volume for Game Sound effects  (Hitting targets, raps, etc)
'Const cVolTable = 0    ' Volume for table Sound effects (Kickers, flippers, bumpers, etc)



Dim VolumeDial : VolumeDial = 0.8             ' Overall Mechanical sound effect volume. Recommended values should be no greater than 1.
Dim BallRollVolume : BallRollVolume = 0.5     ' Level of ball rolling volume. Value between 0 and 1
Dim RampRollVolume : RampRollVolume = 0.5     ' Level of ramp rolling volume. Value between 0 and 1

'**************************
'   Online Multiplayer Config
'**************************
Dim VPXMPUser:VPXMPUser=""
Dim bVPXMPEnabled:bVPXMPEnabled=False

Const BallSize = 49 ' 50  ' 52
Const Ballmass = 1.3

Dim WshShell
Set WshShell = CreateObject("WScript.Shell")

' SERVICE Key Definitions
Const ServiceCancelKey  = 8     ' 7 key
Const ServiceUpKey    = 9     ' 8 key
Const ServiceDownKey  = 10    ' 9 key
Const ServiceEnterKey   = 11    ' 0 key

Sub AlwaysOnTop(appName, regExpTitle, setOnTop)
' @description: Makes a window always on top if setOnTop is true, else makes it normal again. Will wait up to 10 seconds for window to load.
' @author: Jeremy England (SimplyCoded)
  If (setOnTop) Then setOnTop = "-1" Else setOnTop = "-2"
  CreateObject("wscript.shell").Run "powershell -Command """ & _
  "$Code = Add-Type -MemberDefinition '" & vbcrlf & _
  "  [DllImport(\""user32.dll\"")] public static extern bool SetWindowPos(IntPtr hWnd, IntPtr hWndInsertAfter, int X,int Y, int cx, int cy, uint uFlags);" & vbcrlf & _
  "  [DllImport(\""user32.dll\"")] public static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);" & vbcrlf & _
  "  public static void AlwaysOnTop (IntPtr fHandle, int insertAfter) {" & vbcrlf & _
  "    if (insertAfter == -1) { ShowWindow(fHandle, 4); }" & vbcrlf & _
  "    SetWindowPos(fHandle, new IntPtr(insertAfter), 0, 0, 0, 0, 3);" & vbcrlf & _
  "  }' -Name PS -PassThru" & vbcrlf & _
  "for ($s=0;$s -le 9; $s++){$hWnd = (GPS " & appName & " -EA 0 | ? {$_.MainWindowTitle -Match '" & regExpTitle & "'}).MainWindowHandle;Start-Sleep 1;if ($hWnd){break}}" & vbcrlf & _
  "$Code::AlwaysOnTop($hWnd, " & setOnTop & ")""", 0, True
End Sub

' Load the core.vbs for supporting Subs and functions
LoadCoreFiles

Sub LoadCoreFiles
    On Error Resume Next
    ExecuteGlobal GetTextFile("core.vbs")
    If Err Then MsgBox "Can't open core.vbs"
    ExecuteGlobal GetTextFile("controller.vbs")
    If Err Then MsgBox "You need the controller.vbs in order to run this table, available in the vp10 package"
    On Error Goto 0

  '============================'  Orbital Scoreboard'============================
  if osbactive = 1 or osbactive = 2 Then
    On Error Resume Next
    ExecuteGlobal GetTextFile("osb.vbs")
    On Error Goto 0
  end if

End Sub


'******************************************************
'           STANDARD DEFINITIONS
'******************************************************

' Define Global Variables

'If using Visual PinMAME (VPM), place the ROM/game name in the constant below,
'both for VPM, and DOF to load the right DOF config from the Configtool, whether it's a VPM or an Original table

Const cGameName = "b66_orig"
Const TableName = "b66_orig"
Const myVersion = "1.2.1"
Const MaxPlayers = 4      ' Max Players = 4 for now
If Table1.ShowDT = false then
  Scoretext.Visible = false
End If

const kBatPhoneColor = "yellow"

Dim BallSaverTime
Const MaxMultiplier = 10 'limit to 10x in this game
Const BallsPerGame = 3   ' 3 or 5
Const MaxMultiballs = 6  ' max number of balls during multiballs
Const tnob = 9        'was 6

Dim PlayersPlayingGame
Dim CurrentPlayer
Dim Credits
Dim BonusMultiplier       ' End of Ball Bonus Multiplier
Dim VMBMultiplier       ' Villain Multiball Multiplier
Dim PlayMultiplier        ' Playfield Multiplier
Dim PlayMultiplierCnt     ' Playfield Multiplier how many times did we hit it
Dim bPlayMultiplierScene    ' Is the PFM Multiplier Scene up (Helps me disable other things)
Dim TUTMultiplier       ' Tut mode Multiplier (Main channel)

Dim ModeMultiplier        ' Mode Multiplier for current mode
Dim ShotMultiplier        ' Multiplier for this shot only
Dim ModePoints
Dim bDesktop
Dim bFirstPlay        ' First time play the full intro video with sound
Dim bVMajSeasonSelectReady  ' Wait until the Batman intro has played before wecan try and select Major Villian Alternat Seasons

Dim PlayfieldMultiplier   ' 0=Off, 1=Ready (Atomic Pile flashing), 2=Active

Dim BonusModeHits(9)    ' Holds the total # of hits during game play
Dim BonusModeTotal(9)   ' Holds the total bonus during gameplay
Dim BonusModeValue(9)   ' Holds the bonus value that will get added to the next mode bonus (When values increment)

Dim bSkillshotsReady(3)   ' 0-ShooterLanes, 1-Penguin, 2-Super Skillshot
Dim bSuperSkillShotReady1 ' Tracks if they held it through the shooter lane
Dim SuperSkillShotTime    ' Start 5 second timeout from when this is set
Dim SkillShotLaneStates(3)  ' Stores the state of the lane lights (top to bottom)
Dim SaveUpperLaneStates(3)  ' Stores the state of the upper lanes
Dim BumperLevel       ' How much bumpers are worth
Dim BumperHits        ' How many Hits to increase
Dim bTableDisabled      ' Disable table on Tilt/Reset

Dim bGameInPlay
Dim Tilted
Dim TotalGamesPlayed
Dim mBalls2Eject
Dim bCreatedBall
Dim bAutoPlunger
Dim bAutoPlunged
Dim bInstantInfo
Dim bInstantInfoIdx
Dim bFreePlay
Dim bShowMatch
Dim bBallInPlungerLane
dim bOnTheFirstBall
Dim bBallSaverActive
Dim BallSaverActiveBuffer   ' Allows lanes to kick in ball saver
Dim bBallSaverReady
Dim bMultiBallMode
Dim bMusicOn
Dim bDisableVisualProgress
Dim bCheckGadgetSpecialEnabled  ' Special mode for gadget in bat saucer to open gate

Dim SpinnerBaseValue      ' Base scoring for the spinner
Dim BonusPoints(4)      '
Dim BonusHeldPoints(4)
Dim BallsRemaining(4)
Dim ExtraBallsLit(4)      ' Extra Ball state so we dont loose it
Dim ExtraBallsAwards(4)
Dim bExtraBallSceneActive   ' Are we showing extra ball scene
Dim bAddABallGiven
Dim LastScore(4)        ' save off the last scores
Dim Score(4)
Dim ScoreSave(4)        ' Detect if score changed before updating
Dim ScoreSize(4)
Dim HighScore(5)
Dim HighScoreName(5)
Dim StatName(30)
Dim StatScore(31)
Dim TiltCount(4)
Dim TiltSensitivity
Dim Tilt
Dim bResetCurrentGame
dim plungerIM
Dim LastSwitchHit
Dim LastSwitchHit2      ' The switch 2 switches ago
Dim PlungerSwitchHit    ' Which light was on on plunger lane
Dim BallsOnPlayfield
Dim BallsInLockVirtual    ' VirtualBall Locks
Dim BallsInLock     ' These are actually locked on the table
Dim BallsOutlaneDrainCnt
Dim BallsOutlaneDrainIgnoreCnt


Dim CatLight(6)     ' Stores the state of the cat lights

Dim BallSearchCnt

Const kMaxLightSeq=3
Dim myLightSeqIdx(3)
Dim myLightSeqCtr(3)

Dim bSSLaneLightsEnabled' Are the skillshot lights in the plunger lanes doing their sequence
Dim BatusiCompletions ' How many rounds of Batusi did we complete
Dim BatusiPops      ' How batusi pops left to relight
Dim BatusiPopsMax   ' Total batusi pops to relight on reset
Dim bSceneFinished
Dim bSceneCollect   ' Are we waiting for the to choose to collect or play
dim bSceneCollectEnd_Wait
Dim mechJoker, mechCrane
Dim triggerBall1
Dim triggerBall2
Dim triggerBall3
Dim triggerBall4
Dim triggerBall5
Dim triggerBall6cr
Dim triggerBall7
Dim spinnerBall1
Dim spinnerBall2
Dim postBall1
Dim postBall2
Dim craneBall
Dim LockedBall1
Dim LockedBall2
Dim LockedBall3
Dim bBackGateIsOpen     ' Stores if the back gate is open (Also true if it is virtually Open)
Dim bBallLockInit
Dim bLockIsLitCallout   ' Did we play the lockIsLitCallout
Dim mMagnaSave
Dim PupAniFolder      ' Which folder size do we pick for animated gifs (They look better if you resize for desktop vs cab)
Dim VRBatsOn
VRBatsOn = false

' Turntable constants
Const kTT_TV = -8
Const kTT_Phone = 49
Const kTT_Phone2 = 120
Const kTT_Batcave = 174

Dim swGadget:set swGadget = new TTDummy:swGadget.name="swGadget"
Dim cTT_TV:set cTT_TV = new TTDummy:cTT_TV.name="cTT_TV"
Dim cTT_Phone:set cTT_Phone = new TTDummy:cTT_Phone.name="cTT_Phone"
Dim cTT_Phone2:set cTT_Phone2 = new TTDummy:cTT_Phone2.name="cTT_Phone2"
Dim cTT_Batcave:set cTT_Batcave = new TTDummy:cTT_Batcave.name="cTT_Batcave"
Dim swBatcave:set swBatcave = new TTDummy:swBatcave.name="swBatcave"
Dim swBatmobile:set swBatmobile = new TTDummy:swBatmobile.name="swBatmobile"                ' Hit BatMobile
Dim swBatmobileRotate:set swBatmobileRotate = new TTDummy:swBatmobileRotate.name="swBatmobileRotate"
Dim swGeneral:set swGeneral = new TTDummy:swGeneral.name="swGeneral"
Dim swSpinner:set swSpinner = new TTDummy:swSpinner.name="swSpinner"
Class TTDummy
  private lname
  Public Property Get name()
    name = lname
  End Property
  Public Property Let name(value)
    lname = value
  End Property
End Class

Class cLightState
  Public color
  Public state
End Class

Const kLightCatArrow1 = 0
Const kLightCatArrow2 = 1
const kLightCat1    = 2
const kLightCat2    = 3
const kLightCat3    = 4
const kLightCat4    = 5
const kLightCat5    = 6
const kLightCat6    = 7

const kLightJokerArrow  = 8
const kLightJokerJ    = 9
const kLightJokerO    = 10
const kLightJokerK    = 11
const kLightJokerE    = 12
const kLightJokerR    = 13

const kLightRiddlerArrow1=14
const kLightRiddlerArrow2=15
const kLightRiddlerO1 = 16
const kLightRiddlerO2 = 17

const kLightPengScoop = 18
const kLightPengArrow = 19
const kLightSuperJArrow = 20

const kMaxLights    = 21

dim LightMap()            ' Mapping of lights to indexes
Sub SetupLightMap()
  Redim LightMap(kMaxLights)
  set LightMap(kLightCatArrow1)=lArrowCat1
  set LightMap(kLightCatArrow2)=lArrowCat2

  set LightMap(kLightJokerArrow)=lArrowJoker
  set LightMap(kLightJokerJ)=lJokerJ
  set LightMap(kLightJokerO)=lJokerO
  set LightMap(kLightJokerK)=lJokerK
  set LightMap(kLightJokerE)=lJokerE
  set LightMap(kLightJokerR)=lJokerR

  set LightMap(kLightRiddlerO1)=lRiddlerOrbit1
  set LightMap(kLightRiddlerO2)=lRiddlerOrbit2
  set LightMap(kLightRiddlerArrow1)=lArrowRiddler1
  set LightMap(kLightRiddlerArrow2)=lArrowRiddler2

  set LightMap(kLightPengScoop)=LightPengScoop
  set LightMap(kLightPengArrow)=lArrowPenguin
  set LightMap(kLightSuperJArrow)=lArrowSuperJ

End Sub
SetupLightMap


Dim pupOrange:pupOrange = RGB(247, 170, 51)
Dim pupWhite :pupWhite  = RGB(255, 255, 255)


' FFMPEG Notes
' Extend a video to 4 seconds (Extends last Frame)
' ffmpeg -i joker-wait.mp4 -vf tpad=stop_mode=clone:stop_duration=4 joker-wait2.mp4
'
' Concat videos
' ffmpeg -f concat -i list.txt -c copy joker-13.mp4
'   list.txt:   file 'S1E005_Clips.S1E005_00-15-34-17.mp4'
'         file 'S1E005_Clips.S1E005_00-15-36-08.mp4'
'         file 'S1E005_Clips.S1E005_00-15-37-16.mp4'
'
' Make video from section of another clip
' ffmpeg -ss 3 -i start.mp4 -c:v libx264 -c:a aac start2.mp4
'

dim SceneMap(29, 46, 3)  ' Villain #, Progress#, [Scene 1, Scene1Len, Scene wait]   ' kMAX_MODES+1
Sub SetupSceneMap()
  dim i,j
  dim curVillain
  For i = 0 to kMAX_MODES       ' Default to "" for no video, -1 for no length
    for j = 0 to 45
      SceneMap(i,j,0) = ""
      SceneMap(i,j,1) = -1
      SceneMap(i,j,2) = ""
    Next
  Next

  ' ******************************************************************************
  ' **************************       Penguin - Season1    ***********************
  ' ******************************************************************************
  curVillain = kMajV_S1Peng
  SceneMap(curVillain, 1, 0) = "SceneMVQualProgress "&curVillain&", ""Shoot Crane 1 More Time"", ""To Battle The Penguin!"", ""[SCORE]"" "
  SceneMap(curVillain, 1, 1) = 3000
  SceneMap(curVillain, 1, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 2, 0) = "SceneMVBatPhone "&curVillain&", 1, ""video-Penguin"" "
  SceneMap(curVillain, 2, 1) = 3800
  SceneMap(curVillain, 2, 2) = "SceneMVBatPhone "&curVillain&", 1, """" "

  SceneMap(curVillain, 3, 0) = "SceneGeneralPengS1W1Start ""^^^^12:[HURRYUP]^^^^"" "
  SceneMap(curVillain, 3, 1) = -1
  SceneMap(curVillain, 3, 2) = ""

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 4, 1) = 1880
  SceneMap(curVillain, 4, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait1.mp4"", ""^^^^^^^^Collect All Umbrellas"" "

  SceneMap(curVillain, 5, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = 2400
  SceneMap(curVillain, 5, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait1.mp4"", ""^^^^^^^^Collect All Umbrellas"" "

  SceneMap(curVillain, 6, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 6, 1) = 2200
  SceneMap(curVillain, 6, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait1.mp4"", ""^^^^^^^^Collect All Umbrellas"" "

  SceneMap(curVillain, 7, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 7, 1) = 3000
  SceneMap(curVillain, 7, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait1.mp4"", ""^^^^^^^^Collect All Umbrellas"" "

  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p6.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 8, 1) = 4066
  SceneMap(curVillain, 8, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait1.mp4"", ""^^^^^^^^Collect All Umbrellas"" "

  ' WAIT 1
  SceneMap(curVillain, 9, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""penguin-w1b.mp4"", ""^^^All Penguin Scores^[MMULT]x^^^^"" "
  SceneMap(curVillain, 9, 1) = 2000
  SceneMap(curVillain, 9, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait2.mp4"", ""^^^^^^^^Shoot For The Batcave"" "

  SceneMap(curVillain, 10, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p7.mp4"", ""^^^^^^^^"" "
  SceneMap(curVillain, 10, 1) = 3133
  SceneMap(curVillain, 10, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait2.mp4"", ""^^^^^^^^Shoot For The Batcave"" "

  SceneMap(curVillain, 11, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p8.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 11, 1) = 3436
  SceneMap(curVillain, 11, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait2.mp4"", ""^^^^^^^^Shoot For The Batcave"" "

  SceneMap(curVillain, 12, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p9.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 12, 1) = 2766
  SceneMap(curVillain, 12, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait2.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  ' WAIT 2
  SceneMap(curVillain, 13, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""penguin-w2b.mp4"", ""^^^All Penguin Scores^[MMULT]x^^^^"" "
  SceneMap(curVillain, 13, 1) = 5707
  SceneMap(curVillain, 13, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait3.mp4"", ""^^^^^^^Shoot GADGET Targets^To Escape"" "

  SceneMap(curVillain, 14, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p10.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 14, 1) = 7857
  SceneMap(curVillain, 14, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait3.mp4"", ""^^^^^^^^Shoot Penguin Hole"" "

  SceneMap(curVillain, 15, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p11.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 15, 1) = 2734
  SceneMap(curVillain, 15, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait3.mp4"", ""^^^^^^^^Shoot For The Batcave"" "

  SceneMap(curVillain, 16, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p12.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 16, 1) = 3297
  SceneMap(curVillain, 16, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait3.mp4"", ""^^^^^^^^Shoot For The Batcave"" "

  SceneMap(curVillain, 17, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p13.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 17, 1) = 1466
  SceneMap(curVillain, 17, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait3.mp4"", ""^^^^^^^^Shoot For The Batcave"" "

  SceneMap(curVillain, 18, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p14.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 18, 1) = 3784
  SceneMap(curVillain, 18, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait3.mp4"", ""^^^^^^^^Shoot For The Batcave"" "

  SceneMap(curVillain, 19, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p15.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 19, 1) = 4800
  SceneMap(curVillain, 19, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait3.mp4"", ""^^^^^^^^Shoot For The Batcave"" "

  SceneMap(curVillain, 20, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p16.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 20, 1) = 5266
  SceneMap(curVillain, 20, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait3.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  ' WAIT 3
  SceneMap(curVillain, 21, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""penguin-w3b.mp4"", ""^^^All Penguin Scores^[MMULT]x^^^^"" "
  SceneMap(curVillain, 21, 1) = 2021
  SceneMap(curVillain, 21, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait4.mp4"", ""^^^^^^^5 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 22, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p17.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 22, 1) = 1346
  SceneMap(curVillain, 22, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait4.mp4"", ""^^^^^^^5 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 23, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p18.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 23, 1) = 1091
  SceneMap(curVillain, 23, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait4.mp4"", ""^^^^^^^4 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 24, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p19.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 24, 1) = 1533
  SceneMap(curVillain, 24, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait4.mp4"", ""^^^^^^^3 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 25, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p20.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 25, 1) = 766
  SceneMap(curVillain, 25, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait4.mp4"", ""^^^^^^^2 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 26, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p21.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 26, 1) = 1060
  SceneMap(curVillain, 26, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait4.mp4"", ""^^^^^^^1 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 27, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin"", ""p22.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 27, 1) = 2466
  SceneMap(curVillain, 27, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin"", ""wait4.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "


  ' ******************************************************************************
  ' **************************       Penguin - Season2     ***********************
  ' ******************************************************************************
  curVillain = kMajV_S2Peng
  SceneMap(curVillain, 1, 0) = "SceneMVQualProgress "&curVillain&", ""Shoot Crane 1 More Time"", ""To Battle The Penguin!"", ""[SCORE]"" "
  SceneMap(curVillain, 1, 1) = 3000
  SceneMap(curVillain, 1, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 2, 0) = "SceneMVBatPhone "&curVillain&", 1, ""video-Penguin2"" "
  SceneMap(curVillain, 2, 1) = 3800
  SceneMap(curVillain, 2, 2) = "SceneMVBatPhone "&curVillain&", 2, """" "

  SceneMap(curVillain, 3, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin2"", ""batphone3.mp4"", ""^^^^12:[HURRYUP]^^^^"" "
  SceneMap(curVillain, 3, 1) = 4621
  SceneMap(curVillain, 3, 2) = "SceneGeneralPengS2W1aStart "&curVillain&" "

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Penguin2"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 4, 1) = 1066
  SceneMap(curVillain, 4, 2) = "SceneGeneralPengS2W1aStart "&curVillain&" "

  SceneMap(curVillain, 5, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Penguin2"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = 400
  SceneMap(curVillain, 5, 2) = "SceneGeneralPengS2W1aStart "&curVillain&" "

  SceneMap(curVillain, 6, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Penguin2"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 6, 1) = 466
  SceneMap(curVillain, 6, 2) = "SceneGeneralPengS2W1aStart "&curVillain&" "

  SceneMap(curVillain, 7, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Penguin2"", ""p4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 7, 1) = 1233
  SceneMap(curVillain, 7, 2) = "SceneGeneralPengS2W1aStart "&curVillain&" "

  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Penguin2"", ""p5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 8, 1) = 3066
  SceneMap(curVillain, 8, 2) = "SceneGeneralPengS2W1aStart "&curVillain&" "

  ' WAIT 1
  SceneMap(curVillain, 9, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin2"", ""penguin2-w1b.mp4"", ""^^^All Penguin Scores^[MMULT]x^^^^"" "
  SceneMap(curVillain, 9, 1) = 3600
  SceneMap(curVillain, 9, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin2"", ""wait1.mp4"", ""^^^^^^^Shoot 'Gadget' Targets^To Escape"" "

  SceneMap(curVillain, 10, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin2"", ""p6.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 10, 1) = 1400
  SceneMap(curVillain, 10, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin2"", ""wait1.mp4"", ""^^^^^^^Shoot 'Gadget' Targets^To Escape"" "

  SceneMap(curVillain, 11, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin2"", ""p7.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 11, 1) = 1233
  SceneMap(curVillain, 11, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin2"", ""wait1.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 12, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin2"", ""p8.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 12, 1) = 3466
  SceneMap(curVillain, 12, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin2"", ""wait1.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 13, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin2"", ""p9.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 13, 1) = 3000
  SceneMap(curVillain, 13, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin2"", ""wait1.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 14, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin2"", ""p10.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 14, 1) = 2933
  SceneMap(curVillain, 14, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin2"", ""wait1.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 15, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin2"", ""p11.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 15, 1) = 3066
  SceneMap(curVillain, 15, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin2"", ""wait1.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 16, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin2"", ""p12.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 16, 1) = 3466
  SceneMap(curVillain, 16, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Penguin2"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  ' WAIT2
  SceneMap(curVillain, 17, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin2"", ""penguin2-w2b.mp4"", ""^^^All Penguin Scores^[MMULT]x^^^^"" "
  SceneMap(curVillain, 17, 1) = 4040
  SceneMap(curVillain, 17, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Penguin2"", ""wait2.mp4"", ""^^^^^^^4 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 18, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin2"", ""p13.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 18, 1) = 2533
  SceneMap(curVillain, 18, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Penguin2"", ""wait2.mp4"", ""^^^^^^^4 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 19, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin2"", ""p14.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 19, 1) = 2136
  SceneMap(curVillain, 19, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Penguin2"", ""wait2.mp4"", ""^^^^^^^3 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 20, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin2"", ""p15.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 20, 1) = 2866
  SceneMap(curVillain, 20, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Penguin2"", ""wait2.mp4"", ""^^^^^^^2 Shot^To Light Super Jackpot"" "

  SceneMap(curVillain, 21, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin2"", ""p16.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 21, 1) = 2666
  SceneMap(curVillain, 21, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Penguin2"", ""wait2.mp4"", ""^^^^^^^1 Shot^To Light Super Jackpot"" "

  SceneMap(curVillain, 22, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Penguin2"", ""p17.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 22, 1) = 1266
  SceneMap(curVillain, 22, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Penguin2"", ""wait2.mp4"",  ""^^^^^^^^Super Jackpot Is Lit"" "



  ' ******************************************************************************
  ' **************************       RIDDLER - Season1    ***********************
  ' ******************************************************************************
  curVillain = kMajV_S1Riddler
  SceneMap(curVillain, 1, 0) = "SceneMVQualProgress "&curVillain&", ""Shoot Orbit 1 More Time"", ""To Battle The Riddler!"", ""[SCORE]"" "
  SceneMap(curVillain, 1, 1) = 3000
  SceneMap(curVillain, 1, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 2, 0) = "SceneMVBatPhone "&curVillain&", 1, ""video-Riddler"" "
  SceneMap(curVillain, 2, 1) = 4760
  SceneMap(curVillain, 2, 2) = "SceneMVBatPhone "&curVillain&", 1, """" "

  SceneMap(curVillain, 3, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""batphone2.mp4"", ""^^^^12:[HURRYUP]^^^^"" "
  SceneMap(curVillain, 3, 1) = 2933
  SceneMap(curVillain, 3, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait1.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 4, 1) = 3833
  SceneMap(curVillain, 4, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait1.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 5, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = 1233
  SceneMap(curVillain, 5, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait1.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 6, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 6, 1) = 2466
  SceneMap(curVillain, 6, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait1.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 7, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""p4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 7, 1) = 835
  SceneMap(curVillain, 7, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "


  ' WAIT 1
  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""riddler-w1b.mp4"", ""^^^All Riddler Scores^[MMULT]x^^^^"" "
  SceneMap(curVillain, 8, 1) = 4481
  SceneMap(curVillain, 8, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait2.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 9, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""p5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 9, 1) = 1466
  SceneMap(curVillain, 9, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait2.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 10, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""p6.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 10, 1) = 3200
  SceneMap(curVillain, 10, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait2.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 11, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""p7.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 11, 1) = 3200
  SceneMap(curVillain, 11, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait2.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 12, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""p8.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 12, 1) = 1966
  SceneMap(curVillain, 12, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait2.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 13, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""p9.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 13, 1) = 5000
  SceneMap(curVillain, 13, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait2.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 14, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""p10.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 14, 1) = 5400
  SceneMap(curVillain, 14, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait2.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  ' WAIT 2
  SceneMap(curVillain, 15, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""riddler-w2b.mp4"", ""^^^All Riddler Scores^[MMULT]x^^^^"" "
  SceneMap(curVillain, 15, 1) = 6037
  SceneMap(curVillain, 15, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait3.mp4"", ""^^^^^^^5 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 16, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""p11.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 16, 1) = 2933
  SceneMap(curVillain, 16, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait3.mp4"", ""^^^^^^^4 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 17, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Riddler"", ""p12.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 17, 1) = 1566
  SceneMap(curVillain, 17, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait3.mp4"", ""^^^^^^^3 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 18, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""p13.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 18, 1) = 2932
  SceneMap(curVillain, 18, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait3.mp4"", ""^^^^^^^2 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 19, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""p14.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 19, 1) = 2233
  SceneMap(curVillain, 19, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait3.mp4"", ""^^^^^^^1 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 20, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""p15.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 20, 1) = 1566
  SceneMap(curVillain, 20, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait3.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  ' Extra since we are done once they hit the scoop
  SceneMap(curVillain, 21, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""a0.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 21, 1) = 766
  SceneMap(curVillain, 21, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait3.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  SceneMap(curVillain, 22, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""a1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 22, 1) = 292
  SceneMap(curVillain, 22, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait3.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  SceneMap(curVillain, 23, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""a2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 23, 1) = 1400
  SceneMap(curVillain, 23, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait3.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  SceneMap(curVillain, 24, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""a3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 24, 1) = 441
  SceneMap(curVillain, 24, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait3.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  SceneMap(curVillain, 25, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""a4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 25, 1) = 2466
  SceneMap(curVillain, 25, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait3.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  SceneMap(curVillain, 26, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler"", ""a5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 26, 1) = 882
  SceneMap(curVillain, 26, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler"", ""wait3.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "



  ' ******************************************************************************
  ' **************************       RIDDLER - Season2    ***********************
  ' ******************************************************************************
  curVillain = kMajV_S2Riddler
  SceneMap(curVillain, 1, 0) = "SceneMVQualProgress "&curVillain&", ""Shoot Orbit 1 More Time"", ""To Battle The Riddler!"", ""[SCORE]"" "
  SceneMap(curVillain, 1, 1) = 3000
  SceneMap(curVillain, 1, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 2, 0) = "SceneMVBatPhone "&curVillain&", 1, ""video-Riddler2"" "
  SceneMap(curVillain, 2, 1) = 4736
  SceneMap(curVillain, 2, 2) = "SceneMVBatPhone "&curVillain&", 1, """" "


  SceneMap(curVillain, 3, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler2"", ""batphone2.mp4"", ""^^^^12:[HURRYUP]^^^^"" "
  SceneMap(curVillain, 3, 1) = 2933
  SceneMap(curVillain, 3, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler2"", ""wait1.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler2"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 4, 1) = 2233
  SceneMap(curVillain, 4, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler2"", ""wait1.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 5, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler2"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = 2366
  SceneMap(curVillain, 5, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler2"", ""wait1.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 6, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler2"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 6, 1) = 2233
  SceneMap(curVillain, 6, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler2"", ""wait1.mp4"", ""^^^^^^^^Shoot Flashing Arrows"" "

  SceneMap(curVillain, 7, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler2"", ""p4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 7, 1) = 2166
  SceneMap(curVillain, 7, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Riddler2"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  ' WAIT 1
  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler2"", ""riddler2-w1b.mp4"", ""^^^All Riddler Scores^[MMULT]x^^^^"" "
  SceneMap(curVillain, 8, 1) = 10449
  SceneMap(curVillain, 8, 2) = "SceneGeneralRiddlerS2W1Start "&curVillain&" "

  SceneMap(curVillain, 9, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler2"", ""p5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 9, 1) = 1200
  SceneMap(curVillain, 9, 2) = "SceneGeneralRiddlerS2W1Start "&curVillain&" "

  SceneMap(curVillain, 10, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler2"", ""p6.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 10, 1) = 743
  SceneMap(curVillain, 10, 2) = "SceneGeneralRiddlerS2W1Start "&curVillain&" "

  SceneMap(curVillain, 11, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler2"", ""p7.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 11, 1) = 833
  SceneMap(curVillain, 11, 2) = "SceneGeneralRiddlerS2W1Start "&curVillain&" "

  SceneMap(curVillain, 12, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler2"", ""p8.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 12, 1) = 1166
  SceneMap(curVillain, 12, 2) = "SceneGeneralRiddlerS2W1Start "&curVillain&" "

  SceneMap(curVillain, 13, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler2"", ""p9.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 13, 1) = 3866
  SceneMap(curVillain, 13, 2) = "SceneGeneralRiddlerS2W1Start "&curVillain&" "

  SceneMap(curVillain, 14, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler2"", ""p5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 14, 1) = 1200
  SceneMap(curVillain, 14, 2) = "SceneGeneralRiddlerS2W1Start "&curVillain&" "

  SceneMap(curVillain, 15, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler2"", ""p6.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 15, 1) = 743
  SceneMap(curVillain, 15, 2) = "SceneGeneralRiddlerS2W1Start "&curVillain&" "

  SceneMap(curVillain, 16, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler2"", ""p7.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 16, 1) = 833
  SceneMap(curVillain, 16, 2) = "SceneGeneralRiddlerS2W1Start "&curVillain&" "

  SceneMap(curVillain, 17, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler2"", ""p8.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 17, 1) = 1166
  SceneMap(curVillain, 17, 2) = "SceneGeneralRiddlerS2W1Start "&curVillain&" "

  SceneMap(curVillain, 18, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Riddler2"", ""p9.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 18, 1) = 3866
  SceneMap(curVillain, 18, 2) = "SceneGeneralRiddlerS2W1Start "&curVillain&" "



  ' ******************************************************************************
  ' **************************       CATWOMAN - Season1    ***********************
  ' ******************************************************************************
  curVillain = kMajV_S1CatWoman
  SceneMap(curVillain, 1, 0) = "SceneMVQualProgress "&curVillain&", ""Complete CAT On Both Ramps"", ""To Face Catwoman!"", ""[SCORE]"" "
  SceneMap(curVillain, 1, 1) = 3000
  SceneMap(curVillain, 1, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 2, 0) = "SceneMVQualProgress "&curVillain&", ""Complete CAT On Both Ramps"", ""To Face Catwoman!"", ""[SCORE]"" "
  SceneMap(curVillain, 2, 1) = 3000
  SceneMap(curVillain, 2, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 3, 0) = "SceneMVQualProgress "&curVillain&", ""Complete CAT On Both Ramps"", ""To Face Catwoman!"", ""[SCORE]"" "
  SceneMap(curVillain, 3, 1) = 3000
  SceneMap(curVillain, 3, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 4, 0) = "SceneMVQualProgress "&curVillain&", ""Complete CAT On Both Ramps"", ""To Face Catwoman!"", ""[SCORE]"" "
  SceneMap(curVillain, 4, 1) = 3000
  SceneMap(curVillain, 4, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 5, 0) = "SceneMVQualProgress "&curVillain&", ""Complete CAT On Both Ramps"", ""To Face Catwoman!"", ""[SCORE]"" "
  SceneMap(curVillain, 5, 1) = 3000
  SceneMap(curVillain, 5, 2) = "SceneIdle "&curVillain

' SceneMap(curVillain, 6, 0) = "SceneMVQualProgress "&curVillain&", ""Complete CAT On Both Ramps"", ""To Face Catwoman!"", ""[SCORE]"" "
' SceneMap(curVillain, 6, 1) = 3000
' SceneMap(curVillain, 6, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 6, 0) = "SceneMVBatPhone "&curVillain&", 1, ""video-Catwoman"" "
  SceneMap(curVillain, 6, 1) = 2933
  SceneMap(curVillain, 6, 2) = "SceneMVBatPhone "&curVillain&", 1, """" "

  SceneMap(curVillain, 7, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""batphone2.mp4"", ""^^^^12:[HURRYUP]^^^^"" "
  SceneMap(curVillain, 7, 1) = 1200
  SceneMap(curVillain, 7, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait1.mp4"", ""^^^^^^^^Complete 'CAT' Ramps"" "

  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 8, 1) = 1741
  SceneMap(curVillain, 8, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait1.mp4"", ""^^^^^^^^Complete 'CAT' Ramps"" "

  SceneMap(curVillain, 9, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 9, 1) = 4866
  SceneMap(curVillain, 9, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait1.mp4"", ""^^^^^^^^Complete 'CAT' Ramps"" "

  SceneMap(curVillain, 10, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 10, 1) = 1602
  SceneMap(curVillain, 10, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait1.mp4"", ""^^^^^^^^Complete 'CAT' Ramps"" "

  SceneMap(curVillain, 11, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 11, 1) = 1741
  SceneMap(curVillain, 11, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait1.mp4"", ""^^^^^^^^Complete 'CAT' Ramps"" "

  SceneMap(curVillain, 12, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 12, 1) = 2233
  SceneMap(curVillain, 12, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait1.mp4"", ""^^^^^^^^Complete 'CAT' Ramps"" "

  SceneMap(curVillain, 13, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p6.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 13, 1) = 5437
  SceneMap(curVillain, 13, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  SceneMap(curVillain, 14, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p7.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 14, 1) = 1184
  SceneMap(curVillain, 14, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  SceneMap(curVillain, 15, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p8.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 15, 1) = 733
  SceneMap(curVillain, 15, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  SceneMap(curVillain, 16, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p9.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 16, 1) = 2438
  SceneMap(curVillain, 16, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  SceneMap(curVillain, 17, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p10.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 17, 1) = 1600
  SceneMap(curVillain, 17, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  SceneMap(curVillain, 18, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p11.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 18, 1) = 2366
  SceneMap(curVillain, 18, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  SceneMap(curVillain, 19, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p12.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 19, 1) = 5269
  SceneMap(curVillain, 19, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait1.mp4"", ""^^^^^^^^"" "

  ' Wave 1 WAIT
  SceneMap(curVillain, 20, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""catwoman-w1b.mp4"", ""^^^All Catwoman Scores^[MMULT]X^^^^"" "
  SceneMap(curVillain, 20, 1) = 4300
  SceneMap(curVillain, 20, 2) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""wait2.mp4"", ""^^^^^^^Shoot Left 'CAT' Ramp^To Break In"" "

  SceneMap(curVillain, 21, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p13.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 21, 1) = 6969
  SceneMap(curVillain, 21, 2) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""wait2.mp4"", ""^^^^^^^^Shoot Right 'CAT' Ramp"" "

  SceneMap(curVillain, 22, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Catwoman"", ""p14.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 22, 1) = 2533
  SceneMap(curVillain, 22, 2) = "SceneGeneralCatS1W1aStart "&curVillain&" "                       ' Gadget

  SceneMap(curVillain, 23, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Catwoman"", ""p15.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 23, 1) = 3766
  SceneMap(curVillain, 23, 2) = "SceneGeneralCatS1W1bStart "&curVillain&" "                       ' Gadget

  SceneMap(curVillain, 24, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Catwoman"", ""p16.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 24, 1) = 3436
  SceneMap(curVillain, 24, 2) = "SceneGeneralCatS1W1cStart "&curVillain&" "                       ' Gadget

  SceneMap(curVillain, 25, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Catwoman"", ""p17.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 25, 1) = 4600
  SceneMap(curVillain, 25, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait3.mp4"", ""^^^^^^^^Shoot Penguin Hole"" "

  SceneMap(curVillain, 26, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Catwoman"", ""p18.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 26, 1) = 3066
  SceneMap(curVillain, 26, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait4.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  ' Wave 2 WAIT
  SceneMap(curVillain, 27, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""catwoman-w2b.mp4"", ""^^^All Catwoman Scores^[MMULT]X^^^^"" "
  SceneMap(curVillain, 27, 1) = 3033
  SceneMap(curVillain, 27, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Catwoman"", ""wait5.mp4"", ""^^^^^^^Shoot Right 'CAT' Ramp^To Escape"" "

  SceneMap(curVillain, 28, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p19.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 28, 1) = 3733
  SceneMap(curVillain, 28, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait6.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 29, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p20.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 29, 1) = 2345
  SceneMap(curVillain, 29, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait6.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 30, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p21.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 30, 1) = 650
  SceneMap(curVillain, 30, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait6.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 31, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p22.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 31, 1) = 2566
  SceneMap(curVillain, 31, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait6.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 32, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p23.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 32, 1) = 1233
  SceneMap(curVillain, 32, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait6.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 33, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p24.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 33, 1) = 1000
  SceneMap(curVillain, 33, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait6.mp4"", ""^^^^^^^^Shoot Penguine Hole"" "

  SceneMap(curVillain, 34, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p25.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 34, 1) = 2000
  SceneMap(curVillain, 34, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait6.mp4"", ""^^^^^^^^Shoot Penguine Hole"" "

  SceneMap(curVillain, 35, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p26.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 35, 1) = 6177
  SceneMap(curVillain, 35, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman"", ""wait6.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  ' Wave 3 WAIT
  SceneMap(curVillain, 36, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""catwoman-w3b.mp4"", ""^^^All Catwoman Scores^[MMULT]X^^^^"" "
  SceneMap(curVillain, 36, 1) = 3600
  SceneMap(curVillain, 36, 2) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""wait7.mp4"", ""^^^^^^^^5 Shots^To Catch Catwoman"" "

  SceneMap(curVillain, 37, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p27.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 37, 1) = 3766
  SceneMap(curVillain, 37, 2) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""wait7.mp4"", ""^^^^^^^^4 Shots^To Catch Catwoman"" "

  SceneMap(curVillain, 38, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p28.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 38, 1) = 4466
  SceneMap(curVillain, 38, 2) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""wait7.mp4"", ""^^^^^^^^3 Shots^To Catch Catwoman"" "

  SceneMap(curVillain, 39, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p29.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 39, 1) = 3800
  SceneMap(curVillain, 39, 2) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""wait7.mp4"", ""^^^^^^^^2 Shots^To Catch Catwoman"" "

  SceneMap(curVillain, 40, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p30.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 40, 1) = 2766
  SceneMap(curVillain, 40, 2) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""wait7.mp4"", ""^^^^^^^^1 Shots^To Catch Catwoman"" "

  SceneMap(curVillain, 41, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""p31.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 41, 1) = 2600
  SceneMap(curVillain, 41, 2) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman"", ""wait7.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "


  ' ******************************************************************************
  ' **************************       CATWOMAN - Season2    ***********************
  ' ******************************************************************************
  curVillain = kMajV_S2CatWoman
  SceneMap(curVillain, 1, 0) = "SceneMVQualProgress "&curVillain&", ""Complete CAT On Both Ramps"", ""To Face Catwoman!"", ""[SCORE]"" "
  SceneMap(curVillain, 1, 1) = 3000
  SceneMap(curVillain, 1, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 2, 0) = "SceneMVQualProgress "&curVillain&", ""Complete CAT On Both Ramps"", ""To Face Catwoman!"", ""[SCORE]"" "
  SceneMap(curVillain, 2, 1) = 3000
  SceneMap(curVillain, 2, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 3, 0) = "SceneMVQualProgress "&curVillain&", ""Complete CAT On Both Ramps"", ""To Face Catwoman!"", ""[SCORE]"" "
  SceneMap(curVillain, 3, 1) = 3000
  SceneMap(curVillain, 3, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 4, 0) = "SceneMVQualProgress "&curVillain&", ""Complete CAT On Both Ramps"", ""To Face Catwoman!"", ""[SCORE]"" "
  SceneMap(curVillain, 4, 1) = 3000
  SceneMap(curVillain, 4, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 5, 0) = "SceneMVQualProgress "&curVillain&", ""Complete CAT On Both Ramps"", ""To Face Catwoman!"", ""[SCORE]"" "
  SceneMap(curVillain, 5, 1) = 3000
  SceneMap(curVillain, 5, 2) = "SceneIdle "&curVillain

' SceneMap(curVillain, 6, 0) = "SceneMVQualProgress "&curVillain&", ""Complete CAT On Both Ramps"", ""To Face Catwoman!"", ""[SCORE]"" "
' SceneMap(curVillain, 6, 1) = 3000
' SceneMap(curVillain, 6, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 6, 0) = "SceneMVBatPhone "&curVillain&", 1, ""video-Catwoman2"" "
  SceneMap(curVillain, 6, 1) = 2930
  SceneMap(curVillain, 6, 2) = "SceneMVBatPhone "&curVillain&", 1, """" "

  SceneMap(curVillain, 7, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""batphone2.mp4"", ""^^^^12:[HURRYUP]^^^^"" "
  SceneMap(curVillain, 7, 1) = 1200
  SceneMap(curVillain, 7, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman2"", ""wait1.mp4"", ""^^^^^^^^Complete 'CAT' Ramps"" "

  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""catwoman-p1.mp4"", ""^^^^12:[SCORE]^^^^"" "               'video 2148
  SceneMap(curVillain, 8, 1) = 1200
  SceneMap(curVillain, 8, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman2"", ""wait1.mp4"", ""^^^^^^^^Complete 'CAT' Ramps"" "

  SceneMap(curVillain, 9, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""catwoman-p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 9, 1) = 2366
  SceneMap(curVillain, 9, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman2"", ""wait1.mp4"", ""^^^^^^^^Complete 'CAT' Ramps"" "

  SceneMap(curVillain, 10, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""catwoman-p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 10, 1) = 4400
  SceneMap(curVillain, 10, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman2"", ""wait1.mp4"", ""^^^^^^^^Complete 'CAT' Ramps"" "

  SceneMap(curVillain, 11, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""catwoman-p4.mp4"", ""^^^^12:[SCORE]^^^^"" "                'video 2148
  SceneMap(curVillain, 11, 1) = 1834
  SceneMap(curVillain, 11, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman2"", ""wait1.mp4"", ""^^^^^^^^Complete 'CAT' Ramps"" "

  SceneMap(curVillain, 12, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""catwoman-p5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 12, 1) = 2800
  SceneMap(curVillain, 12, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman2"", ""wait1.mp4"", ""^^^^^^^^Complete 'CAT' Ramps"" "

  SceneMap(curVillain, 13, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""catwoman-p6.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 13, 1) = 3181
  SceneMap(curVillain, 13, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman2"", ""wait1.mp4"", ""^^^^^^^^Shoot Flashing Shots"" "

  SceneMap(curVillain, 14, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""catwoman-p7.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 14, 1) = 3507
  SceneMap(curVillain, 14, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman2"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  ' Wave 1 WAIT
  SceneMap(curVillain, 15, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""catwoman2-w1b.mp4"", ""^^^^^^^^"" "
  SceneMap(curVillain, 15, 1) = 2366
' SceneMap(curVillain, 15, 2) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""catwoman-p8.mp4"", ""^^^All Catwoman Scores^[MMULT]X^^^^"":SceneGeneralCatS2W2Start "&curVillain&" "
  SceneMap(curVillain, 15, 2) = "SceneGeneralCatS2W2Start "&curVillain&", [MMULT], True "

  SceneMap(curVillain, 16, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""catwoman-p15.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 16, 1) = 4852
  SceneMap(curVillain, 16, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Catwoman2"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  ' Wave 2 WAIT
  SceneMap(curVillain, 17, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""catwoman2-w2b.mp4"", ""^^^All Catwoman Scores^[MMULT]X^^^^"" "
  SceneMap(curVillain, 17, 1) = 1400
  SceneMap(curVillain, 17, 2) = "SceneGeneralCatS2W3Start "&curVillain&" "

  SceneMap(curVillain, 18, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""a1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 18, 1) = 1033
  SceneMap(curVillain, 18, 2) = "SceneGeneralCatS2W3Start "&curVillain&" "

  SceneMap(curVillain, 19, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""a2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 19, 1) = 743
  SceneMap(curVillain, 19, 2) = "SceneGeneralCatS2W3Start "&curVillain&" "

  SceneMap(curVillain, 20, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""a3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 20, 1) = 800
  SceneMap(curVillain, 20, 2) = "SceneGeneralCatS2W3Start "&curVillain&" "

  SceneMap(curVillain, 21, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""a4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 21, 1) = 696
  SceneMap(curVillain, 21, 2) = "SceneGeneralCatS2W3Start "&curVillain&" "

  SceneMap(curVillain, 22, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Catwoman2"", ""a5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 22, 1) = 2866
  SceneMap(curVillain, 22, 2) = "SceneGeneralCatS2W3Start "&curVillain&" "


  ' ******************************************************************************
  ' **************************     JOKER Season1    ******************************
  ' ******************************************************************************
  curVillain = kMajV_S1Joker
  SceneMap(curVillain, 1, 0) = "SceneMVQualProgress "&curVillain&", ""Shoot TV 5 More Times"", ""To Battle The Joker!"", ""[SCORE]"" "
  SceneMap(curVillain, 1, 1) = 3000
  SceneMap(curVillain, 1, 2) = "StartLastScene "

  SceneMap(curVillain, 2, 0) = "SceneMVQualProgress "&curVillain&", ""Shoot TV 4 More Times"", ""To Battle The Joker!"", ""[SCORE]"" "
  SceneMap(curVillain, 2, 1) = 3000
  SceneMap(curVillain, 2, 2) = "StartLastScene "

  SceneMap(curVillain, 3, 0) = "SceneMVQualProgress "&curVillain&", ""Shoot TV 3 More Times"", ""To Battle The Joker!"", ""[SCORE]"" "
  SceneMap(curVillain, 3, 1) = 3000
  SceneMap(curVillain, 3, 2) = "StartLastScene "

  SceneMap(curVillain, 4, 0) = "SceneMVQualProgress "&curVillain&", ""Shoot TV 2 More Times"", ""To Battle The Joker!"", ""[SCORE]"" "
  SceneMap(curVillain, 4, 1) = 3000
  SceneMap(curVillain, 4, 2) = "StartLastScene "

  SceneMap(curVillain, 5, 0) = "SceneMVQualProgress "&curVillain&", ""Shoot TV 1 More Time"", ""To Battle The Joker!"", ""[SCORE]"" "
  SceneMap(curVillain, 5, 1) = 3000
  SceneMap(curVillain, 5, 2) = "StartLastScene "

  SceneMap(curVillain, 6, 0) = "SceneMVBatPhone "&curVillain&", 1, ""video-Joker"" "
  SceneMap(curVillain, 6, 1) = 3800
  SceneMap(curVillain, 6, 2) = "SceneMVBatPhone "&curVillain&", 1, """" "

  SceneMap(curVillain, 7, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""batphone2.mp4"", ""^^^^12:[HURRYUP]^^^^"" "
  SceneMap(curVillain, 7, 1) = 3436
  SceneMap(curVillain, 7, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Joker"", ""wait1.mp4"", ""^^^^^^^^Shoot For The Batcave"" "

  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 8, 1) = 5233
  SceneMap(curVillain, 8, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait1.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 9, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 9, 1) = 2766
  SceneMap(curVillain, 9, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait1.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 10, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 10, 1) = 2200
  SceneMap(curVillain, 10, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait1.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 11, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 11, 1) = 5133
  SceneMap(curVillain, 11, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait1.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 12, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 12, 1) = 4643
  SceneMap(curVillain, 12, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait1.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 13, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p6.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 13, 1) = 650
  SceneMap(curVillain, 13, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot is Lit"" "

  SceneMap(curVillain, 14, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p7.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 14, 1) = 766
  SceneMap(curVillain, 14, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot is Lit"" "

  SceneMap(curVillain, 15, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p8.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 15, 1) = 1566
  SceneMap(curVillain, 15, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot is Lit"" "

  SceneMap(curVillain, 16, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p9.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 16, 1) = 650
  SceneMap(curVillain, 16, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot is Lit"" "

  SceneMap(curVillain, 17, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p10.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 17, 1) = 766
  SceneMap(curVillain, 17, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot is Lit"" "

  SceneMap(curVillain, 18, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p11.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 18, 1) = 1566
  SceneMap(curVillain, 18, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait1.mp4"", ""^^^^^^^^Super Jackpot is Lit"" "

  ' WAVE 1 WAIT
  SceneMap(curVillain, 19, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-w1b.mp4"", ""^^^All Joker Scores^[MMULT]X^^^^"" "
  SceneMap(curVillain, 19, 1) = 2566
  SceneMap(curVillain, 19, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""joker-p12.mp4"", ""^^^^^^^Shoot GADGET Targets^To Escape"" "

  SceneMap(curVillain, 20, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p13.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 20, 1) = 3634
  SceneMap(curVillain, 20, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait2.mp4"", ""^^^^^^^^Shoot For The Batcave"" "

  SceneMap(curVillain, 21, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p14.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 21, 1) = 1733
  SceneMap(curVillain, 21, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait2.mp4"", ""^^^^^^^^Shoot Penguin Hole"" "

  SceneMap(curVillain, 22, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p15.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 22, 1) = 5600
  SceneMap(curVillain, 22, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait2.mp4"", ""^^^^^^^^Shoot For The Batcave"" "

  SceneMap(curVillain, 23, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p16.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 23, 1) = 4736
  SceneMap(curVillain, 23, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait2.mp4"", ""^^^^^^^^Shoot For The Batcave"" "

  SceneMap(curVillain, 24, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p17.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 24, 1) = 2866
  SceneMap(curVillain, 24, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait2.mp4"", ""^^^^^^^^Shoot GADGET Targets"" "

  SceneMap(curVillain, 25, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p18.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 25, 1) = 3633
  SceneMap(curVillain, 25, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait2.mp4"", ""^^^^^^^^Shoot For The Batcave"" "

  SceneMap(curVillain, 26, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p19.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 26, 1) = 2533
  SceneMap(curVillain, 26, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait2.mp4"", ""^^^^^^^^Shoot For The Batcave"" "

  SceneMap(curVillain, 27, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p20.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 27, 1) = 3482
  SceneMap(curVillain, 27, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait2.mp4"", ""^^^^^^^^Shoot Penguin Hole"" "

  SceneMap(curVillain, 28, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p21.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 28, 1) = 2000
  SceneMap(curVillain, 28, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 29, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p22.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 29, 1) = 1933
  SceneMap(curVillain, 29, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 30, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p23.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 30, 1) = 4800
  SceneMap(curVillain, 30, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 31, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p24.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 31, 1) = 3200
  SceneMap(curVillain, 31, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 32, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p25.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 32, 1) = 3366
  SceneMap(curVillain, 32, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 33, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p26.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 33, 1) = 5766
  SceneMap(curVillain, 33, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait2.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "


  ' WAVE 2 WAIT
  SceneMap(curVillain, 34, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-w2b.mp4"", ""^^^All Joker Scores^[MMULT]X^^^^"" "
  SceneMap(curVillain, 34, 1) = 2633
  SceneMap(curVillain, 34, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait3.mp4"", ""^^^^^^^5 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 35, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p27.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 35, 1) = 1346
  SceneMap(curVillain, 35, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait3.mp4"", ""^^^^^^^4 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 36, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p28.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 36, 1) = 2647
  SceneMap(curVillain, 36, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait3.mp4"", ""^^^^^^^3 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 37, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p29.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 37, 1) = 2298
  SceneMap(curVillain, 37, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait3.mp4"", ""^^^^^^^2 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 38, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p30.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 38, 1) = 4249
  SceneMap(curVillain, 38, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait3.mp4"", ""^^^^^^^1 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 39, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p31.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 39, 1) = 1666
  SceneMap(curVillain, 39, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait3.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  ' These continure for additional hits
  SceneMap(curVillain, 40, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p32.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 40, 1) = 696
  SceneMap(curVillain, 40, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait3.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  SceneMap(curVillain, 41, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p33.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 41, 1) = 4040
  SceneMap(curVillain, 41, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait3.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  SceneMap(curVillain, 42, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p34.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 42, 1) = 2200
  SceneMap(curVillain, 42, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait3.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  SceneMap(curVillain, 43, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p35.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 43, 1) = 2200
  SceneMap(curVillain, 43, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait3.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  SceneMap(curVillain, 44, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p36.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 44, 1) = 533
  SceneMap(curVillain, 44, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait3.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "

  SceneMap(curVillain, 45, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker"", ""joker-p37.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 45, 1) = 1366
  SceneMap(curVillain, 45, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker"", ""wait3.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "


  ' ******************************************************************************
  ' **************************     JOKER Season2    ******************************
  ' ******************************************************************************
  curVillain = kMajV_S2Joker
  SceneMap(curVillain, 1, 0) = "SceneMVQualProgress "&curVillain&", ""Shoot TV 5 More Times"", ""To Battle The Joker!"", ""[SCORE]"" "
  SceneMap(curVillain, 1, 1) = 3000
  SceneMap(curVillain, 1, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 2, 0) = "SceneMVQualProgress "&curVillain&", ""Shoot TV 4 More Times"", ""To Battle The Joker!"", ""[SCORE]"" "
  SceneMap(curVillain, 2, 1) = 3000
  SceneMap(curVillain, 2, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 3, 0) = "SceneMVQualProgress "&curVillain&", ""Shoot TV 3 More Times"", ""To Battle The Joker!"", ""[SCORE]"" "
  SceneMap(curVillain, 3, 1) = 3000
  SceneMap(curVillain, 3, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 4, 0) = "SceneMVQualProgress "&curVillain&", ""Shoot TV 2 More Times"", ""To Battle The Joker!"", ""[SCORE]"" "
  SceneMap(curVillain, 4, 1) = 3000
  SceneMap(curVillain, 4, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 5, 0) = "SceneMVQualProgress "&curVillain&", ""Shoot TV 1 More Time"", ""To Battle The Joker!"", ""[SCORE]"" "
  SceneMap(curVillain, 5, 1) = 3000
  SceneMap(curVillain, 5, 2) = "SceneIdle "&curVillain

  SceneMap(curVillain, 6, 0) = "SceneMVBatPhone "&curVillain&", 1, ""video-Joker2"" "
  SceneMap(curVillain, 6, 1) = 3250
  SceneMap(curVillain, 6, 2) = "SceneMVBatPhone "&curVillain&", 1, """" "


  SceneMap(curVillain, 7, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Joker2"", ""batphone2.mp4"", ""^^^^12:[HURRYUP]^^^^"" "
  SceneMap(curVillain, 7, 1) = 3436
  SceneMap(curVillain, 7, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Joker2"", ""wait1.mp4"", ""^^^^^^^^Shoot For The Batcave"" "

  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Joker2"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 8, 1) = 7834
  SceneMap(curVillain, 8, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Joker2"", ""wait2.mp4"", ""^^^^^^^^[PCNT]% - Shoot Flashing Shots"" "

  SceneMap(curVillain, 9, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Joker2"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 9, 1) = 1741
  SceneMap(curVillain, 9, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Joker2"", ""wait2.mp4"", ""^^^^^^^^[PCNT]% - Shoot Flashing Shots"" "

  SceneMap(curVillain, 10, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Joker2"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 10, 1) = 1666
  SceneMap(curVillain, 10, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Joker2"", ""wait2.mp4"", ""^^^^^^^^[PCNT]% - Shoot Flashing Shots"" "

  SceneMap(curVillain, 11, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Joker2"", ""p4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 11, 1) = 2600
  SceneMap(curVillain, 11, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Joker2"", ""wait2.mp4"", ""^^^^^^^^[PCNT]% - Shoot Flashing Shots"" "

  SceneMap(curVillain, 12, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Joker2"", ""p5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 12, 1) = 2066
  SceneMap(curVillain, 12, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Joker2"", ""wait2.mp4"", ""^^^^^^^^[PCNT]% - Shoot Flashing Shots"" "

  SceneMap(curVillain, 13, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Joker2"", ""p6.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 13, 1) = 2000
  SceneMap(curVillain, 13, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Joker2"", ""wait2.mp4"", ""^^^^^^^^[PCNT]% - Shoot Flashing Shots"" "

  SceneMap(curVillain, 14, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Joker2"", ""p7.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 14, 1) = 2266
  SceneMap(curVillain, 14, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Joker2"", ""wait2.mp4"", ""^^^^^^^^[PCNT]% - Shoot Flashing Shots"" "

  SceneMap(curVillain, 15, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Joker2"", ""p8.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 15, 1) = 3552
  SceneMap(curVillain, 15, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Joker2"", ""wait2.mp4"", ""^^^^^^^^[PCNT]% - Shoot Flashing Shots"" "

  SceneMap(curVillain, 16, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Joker2"", ""p9.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 16, 1) = 5247
  SceneMap(curVillain, 16, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Joker2"", ""wait2.mp4"", ""^^^^^^^^[PCNT]% - Shoot Flashing Shots"" "

  SceneMap(curVillain, 17, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Joker2"", ""p10.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 17, 1) = 4066
  SceneMap(curVillain, 17, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Joker2"", ""wait2.mp4"", ""^^^^^^^^[PCNT]% - Shoot Flashing Shots"" "

  SceneMap(curVillain, 18, 0) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Joker2"", ""wait2.mp4"", ""^^^^^^^^Super Jackpot Is Lit"" "
  SceneMap(curVillain, 18, 1) = -1
  SceneMap(curVillain, 18, 2) = ""

  ' WAVE 2 WAIT (https://youtu.be/k_rf7QXnrog?t=1413)
  SceneMap(curVillain, 19, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Joker2"", ""joker2-w1b.mp4"", ""^^^All Joker Scores^[MMULT]X^^^^"" "
  SceneMap(curVillain, 19, 1) = 4000
  SceneMap(curVillain, 19, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker2"", ""wait3.mp4"",  ""^^^^^^^5 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 20, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Joker2"", ""p11.mp4"", ""^^^^12:[SCORE]^^^^"" "         '
  SceneMap(curVillain, 20, 1) = 1866
  SceneMap(curVillain, 20, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker2"", ""wait3.mp4"",  ""^^^^^^^4 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 21, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Joker2"", ""p12.mp4"", ""^^^^12:[SCORE]^^^^"" "         '
  SceneMap(curVillain, 21, 1) = 1266
  SceneMap(curVillain, 21, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker2"", ""wait3.mp4"",  ""^^^^^^^3 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 22, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Joker2"", ""p13.mp4"", ""^^^^12:[SCORE]^^^^"" "         '
  SceneMap(curVillain, 22, 1) = 3366
  SceneMap(curVillain, 22, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker2"", ""wait3.mp4"",  ""^^^^^^^2 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 23, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Joker2"", ""p14.mp4"", ""^^^^12:[SCORE]^^^^"" "         '
  SceneMap(curVillain, 23, 1) = 2200
  SceneMap(curVillain, 23, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker2"", ""wait3.mp4"",  ""^^^^^^^1 Shots^To Light Super Jackpot"" "

  SceneMap(curVillain, 24, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-Joker2"", ""p15.mp4"", ""^^^^12:[SCORE]^^^^"" "         '
  SceneMap(curVillain, 24, 1) = 966
  SceneMap(curVillain, 24, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Joker2"", ""wait3.mp4"",  ""^^^^^^^^Super Jackpot Is Lit"" "


                ' ******************************************************************************
                ' **************************                             ***********************
                ' **************************        MINOR VILLAINS       ***********************
                ' **************************                             ***********************
                ' ******************************************************************************


  ' ******************************************************************************
  ' **************************           Mad Hatter        ***********************
  ' ******************************************************************************
  curVillain = kMinV_S1MadHatter
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter1"", ""start.mp4"", ""^^12:The^^12:Thirteenth^^12:Hat^^"" "
  SceneMap(curVillain, 1, 1) = 3297
  SceneMap(curVillain, 1, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter1"", ""wait1.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 2, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter1"", ""p0.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 2, 1) = 2733
  SceneMap(curVillain, 2, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter1"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 3, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter1"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 3, 1) = 3599
  SceneMap(curVillain, 3, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter1"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter1"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 4, 1) = 998
  SceneMap(curVillain, 4, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter1"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 5, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter1"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = 835
  SceneMap(curVillain, 5, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter1"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 6, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter1"", ""p4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 6, 1) = 533
  SceneMap(curVillain, 6, 2) = "SceneHatterS1Wait1 "

  SceneMap(curVillain, 7, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter1"", ""p5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 7, 1) = 1333
  SceneMap(curVillain, 7, 2) = "SceneHatterS1Wait2 "

  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter1"", ""p6.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 8, 1) = 1741
  SceneMap(curVillain, 8, 2) = "SceneHatterS1Wait2 "


  ' ******************************************************************************
  ' **************************             Tut1            ***********************
  ' ******************************************************************************
  ' https://youtu.be/QOUXBt30DIQ?t=5708
  curVillain = kMinV_S1KingTut
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut1"", ""start.mp4"", ""^^^10:Shoot Flashing Shots^^10:To Finish^^^"" "
  SceneMap(curVillain, 1, 1) = 6400
  SceneMap(curVillain, 1, 2) = "SceneTutS1Wait True "

  SceneMap(curVillain, 2, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut1"", ""p0.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 2, 1) = 5537
  SceneMap(curVillain, 2, 2) = "SceneTutS1Wait False "

  SceneMap(curVillain, 3, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut1"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 3, 1) = 3200
  SceneMap(curVillain, 3, 2) = "SceneTutS1Wait False "

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut1"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 4, 1) = 1833
  SceneMap(curVillain, 4, 2) = "SceneTutS1Wait False "

  SceneMap(curVillain, 5, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut1"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = 3000
  SceneMap(curVillain, 5, 2) = "SceneTutS1Wait False "

  SceneMap(curVillain, 6, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut1"", ""p4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 6, 1) = 3250
  SceneMap(curVillain, 6, 2) = "SceneTutS1Wait False "


  SceneMap(curVillain, 7, 0) = "SceneTutS1Wait2 True"  ' Center shot
  SceneMap(curVillain, 7, 1) = -1
  SceneMap(curVillain, 7, 2) = ""


  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut1"", ""p5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 8, 1) = 2066
  SceneMap(curVillain, 8, 2) = "SceneTutS1Wait2 False "

  SceneMap(curVillain, 9, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut1"", ""p6.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 9, 1) = 5766
  SceneMap(curVillain, 9, 2) = "SceneTutS1Wait2 False "

  SceneMap(curVillain, 10, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut1"", ""p7.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 10, 1) = 1666
  SceneMap(curVillain, 10, 2) = "SceneTutS1Wait2 False "

  SceneMap(curVillain, 11, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut1"", ""p8.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 11, 1) = 4643
  SceneMap(curVillain, 11, 2) = "SceneTutS1Wait2 False "



  ' ******************************************************************************
  ' **************************           Bookworm          ***********************
  ' ******************************************************************************
  curVillain = kMinV_S1Bookworm
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Bookworm"", ""start.mp4"", ""^^12:The^^12:Bookworm^^12:Turns^^"" "
  SceneMap(curVillain, 1, 1) = 2438
  SceneMap(curVillain, 1, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Bookworm"", ""wait1.mp4"", ""^^^^^^^^Shoot Turntable"" "

  SceneMap(curVillain, 2, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Bookworm"", ""p0.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 2, 1) = 9126
  SceneMap(curVillain, 2, 2) = "SceneBookwormWait1 True "     ' Complete Flashing Shots

  SceneMap(curVillain, 3, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Bookworm"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 3, 1) = 2766
  SceneMap(curVillain, 3, 2) = "SceneBookwormWait1 False "

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Bookworm"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 4, 1) = 2933
  SceneMap(curVillain, 4, 2) = "SceneBookwormWait1 False "

  SceneMap(curVillain, 5, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Bookworm"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = 2345
  SceneMap(curVillain, 5, 2) = "SceneBookwormWait1 False "

  SceneMap(curVillain, 6, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Bookworm"", ""p4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 6, 1) = 5642
  SceneMap(curVillain, 6, 2) = "SceneBookwormWait1 False "

  SceneMap(curVillain, 7, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Bookworm"", ""p5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 7, 1) = 3600
  SceneMap(curVillain, 7, 2) = "SceneBookwormWait1 False "

  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Bookworm"", ""p6.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 8, 1) = 7803
  SceneMap(curVillain, 8, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Bookworm"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 9, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Bookworm"", ""p7.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 9, 1) = 4202
  SceneMap(curVillain, 9, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Bookworm"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 10, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Bookworm"", ""p8.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 10, 1) = 4040
  SceneMap(curVillain, 10, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Bookworm"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 11, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Bookworm"", ""p9.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 11, 1) = 5642
  SceneMap(curVillain, 12, 2) = "SceneBookwormWait2 True "


  ' ******************************************************************************
  ' **************************          S2 Tut1            ***********************
  ' ******************************************************************************
  ' https://youtu.be/k_rf7QXnrog?t=1785   (At the end he switches to main Screen)
  curVillain = kMinV_S2KingTut1
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut2"", ""start.mp4"", ""^^^12:The Spell^^12:Of Tut^^^"" "
  SceneMap(curVillain, 1, 1) = 2089
  SceneMap(curVillain, 1, 2) = "SceneTutS2Wait1 True "

  SceneMap(curVillain, 2, 0) = "SceneTutS2Wait1 False "
  SceneMap(curVillain, 2, 1) = -1
  SceneMap(curVillain, 2, 2) = ""

  SceneMap(curVillain, 3, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut2"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 3, 1) = 7082
  SceneMap(curVillain, 3, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut2"", ""wait1.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut2"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 4, 1) = 3833
  SceneMap(curVillain, 4, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut2"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 5, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut2"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = 2400
  SceneMap(curVillain, 5, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut2"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 6, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut2"", ""p4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 6, 1) = 2647
  SceneMap(curVillain, 6, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut2"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 7, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut2"", ""p5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 7, 1) = 4466
  SceneMap(curVillain, 7, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut2"", ""wait3.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut2"", ""p6.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 8, 1) = 4566
  SceneMap(curVillain, 8, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut2"", ""wait3.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 9, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut2"", ""p7.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 9, 1) = 1000
  SceneMap(curVillain, 9, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut2"", ""wait3.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 10, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut2"", ""p8.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 10, 1) = 2693
  SceneMap(curVillain, 10, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut2"", ""wait3.mp4"", ""^^^^^^^^Complete Flashing Shots"" "


  ' ******************************************************************************
  ' **************************          S2 Egghead         ***********************
  ' ******************************************************************************
  curVillain = kMinV_S2EggHead
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Egg1"", ""start.mp4"", ""^^12:An Egg^^12:Grows^^12:In Gothom^^"" "
  SceneMap(curVillain, 1, 1) = 2633
  SceneMap(curVillain, 1, 2) = "SceneEggS2Wait1 "

  SceneMap(curVillain, 2, 0) = "SceneEggS2Wait2 "
  SceneMap(curVillain, 2, 1) = -1
  SceneMap(curVillain, 2, 2) = ""


  ' ******************************************************************************
  ' **************************          S2 Mr Freeze       ***********************
  ' ******************************************************************************
  curVillain = kMinV_S2MrFreeze
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Freeze"", ""start.mp4"", ""^^^^12:Green Ice^^^^"" "
  SceneMap(curVillain, 1, 1) = 1787
  SceneMap(curVillain, 1, 2) = "SceneFreezeS2Wait1 "

  SceneMap(curVillain, 2, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Freeze"", ""p0.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 2, 1) = 7161
  SceneMap(curVillain, 2, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Freeze"", ""wait1.mp4"", ""^^^^^^^^Shoot Flashing Shots"" "

  SceneMap(curVillain, 3, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Freeze"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 3, 1) = 2948
  SceneMap(curVillain, 3, 2) = "SceneFreezeS2Wait2 True "

  SceneMap(curVillain, 4, 0) = "SceneFreezeS2Wait2 False "
  SceneMap(curVillain, 4, 1) = -1
  SceneMap(curVillain, 4, 2) = ""

  SceneMap(curVillain, 5, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Freeze"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = 6133
  SceneMap(curVillain, 5, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Freeze"", ""wait2.mp4"", ""^^^^^^^^Shoot Flashing Shots"" "

  ' ******************************************************************************
  ' **************************          S2 Shame          ***********************
  ' ******************************************************************************
  curVillain = kMinV_S2Shame
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Shame1"", ""start.mp4"", ""^^12:Come Back,^^12:Shame^^^^"" "
  SceneMap(curVillain, 1, 1) = 2136
  SceneMap(curVillain, 1, 2) = "SceneShameS2Wait1 "

  SceneMap(curVillain, 2, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Shame1"", ""p0.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 2, 1) = 3433
  SceneMap(curVillain, 2, 2) = "SceneShameS2Wait1 "

  SceneMap(curVillain, 3, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Shame1"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 3, 1) = 2833
  SceneMap(curVillain, 3, 2) = "SceneShameS2Wait1 "

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Shame1"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 4, 1) = 1800
  SceneMap(curVillain, 4, 2) = "SceneShameS2Wait1 "

  SceneMap(curVillain, 5, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Shame1"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = 2345
  SceneMap(curVillain, 5, 2) = "SceneShameS2Wait2 True "

  SceneMap(curVillain, 6, 0) = "SceneShameS2Wait2 False "
  SceneMap(curVillain, 6, 1) = -1
  SceneMap(curVillain, 6, 2) = ""

  SceneMap(curVillain, 7, 0) = "SceneShameS2Wait2 False "
  SceneMap(curVillain, 7, 1) = -1
  SceneMap(curVillain, 7, 2) = ""

  SceneMap(curVillain, 8, 0) = "SceneShameS2Wait2 False "
  SceneMap(curVillain, 8, 1) = -1
  SceneMap(curVillain, 8, 2) = ""

  SceneMap(curVillain, 9, 0) = "SceneShameS2Wait2 False "
  SceneMap(curVillain, 9, 1) = -1
  SceneMap(curVillain, 9, 2) = ""

  SceneMap(curVillain, 10, 0) = "SceneShameS2Wait2 False "
  SceneMap(curVillain, 10, 1) = -1
  SceneMap(curVillain, 10, 2) = ""

  SceneMap(curVillain, 11, 0) = "SceneShameS2Wait2 False "
  SceneMap(curVillain, 11, 1) = -1
  SceneMap(curVillain, 11, 2) = ""

  ' ******************************************************************************
  ' **************************          S2 Mad Hatter      ***********************
  ' ******************************************************************************
  curVillain = kMinV_S2MadHatter
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter2"", ""start.mp4"", ""^^12:The^^12:Contaminated^^12:Cowl^^"" "
  SceneMap(curVillain, 1, 1) = 6400
  SceneMap(curVillain, 1, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter2"", ""wait1.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 2, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter2"", ""p0.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 2, 1) = 3766
  SceneMap(curVillain, 2, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter2"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 3, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter2"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 3, 1) = 3033
  SceneMap(curVillain, 3, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter2"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter2"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 4, 1) = 3866
  SceneMap(curVillain, 4, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter2"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 5, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter2"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = 1006
  SceneMap(curVillain, 5, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter2"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 6, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter2"", ""p4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 6, 1) = 3436
  SceneMap(curVillain, 6, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter2"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 7, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter2"", ""p5.mp4"", ""^^^^12:[SCORE]^^^^"" "            ' PINK shot
  SceneMap(curVillain, 7, 1) = 2266
  SceneMap(curVillain, 7, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter2"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "    ' 3 Random Shots

  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter2"", ""p7.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 8, 1) = 833
  SceneMap(curVillain, 8, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter2"", ""wait3.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 9, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter2"", ""p8.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 9, 1) = 5897
  SceneMap(curVillain, 9, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter2"", ""wait3.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 10, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter2"", ""p9.mp4"", ""^^^^12:[SCORE]^^^^"" "           ' Light 4 shots
  SceneMap(curVillain, 10, 1) = 1064
  SceneMap(curVillain, 10, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter2"", ""wait4.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 11, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter2"", ""p10.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 11, 1) = 2089
  SceneMap(curVillain, 11, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter2"", ""wait5.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 12, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter2"", ""p11.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 12, 1) = 3003
  SceneMap(curVillain, 12, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter2"", ""wait5.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 13, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Hatter2"", ""p12.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 13, 1) = 1184
  SceneMap(curVillain, 13, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Hatter2"", ""wait5.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  ' ******************************************************************************
  ' **************************            S2 Tut2          ***********************
  ' ******************************************************************************
  curVillain = kMinV_S2KingTut2
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut3"", ""start.mp4"", ""^^^12:King Tut's^^12:Coup^^^"" "
  SceneMap(curVillain, 1, 1) = 2433
  SceneMap(curVillain, 1, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut3"", ""wait1.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 2, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut3"", ""p0.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 2, 1) = 5800
  SceneMap(curVillain, 2, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut3"", ""wait1.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 3, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut3"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 3, 1) = 4933
  SceneMap(curVillain, 3, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut3"", ""wait1.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut3"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "           ' Start Next Wave
  SceneMap(curVillain, 4, 1) = 7297
  SceneMap(curVillain, 4, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut3"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 5, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut3"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = 9287
  SceneMap(curVillain, 5, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut3"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 6, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut3"", ""p4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 6, 1) = 3000
  SceneMap(curVillain, 6, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut3"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 7, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut3"", ""p5.mp4"", ""^^^^12:[SCORE]^^^^"" "           ' Start Next Wave
  SceneMap(curVillain, 7, 1) = 4170
  SceneMap(curVillain, 7, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut3"", ""wait3.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut3"", ""p6.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 8, 1) = 2602
  SceneMap(curVillain, 8, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut3"", ""wait3.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 9, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut3"", ""p7.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 9, 1) = 3272
  SceneMap(curVillain, 9, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut3"", ""wait3.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 10, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut3"", ""p8.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 10, 1) = 998
  SceneMap(curVillain, 10, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut3"", ""wait3.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  ' ******************************************************************************
  ' **************************            S3 Tut1          ***********************
  ' ******************************************************************************
  curVillain = kMinV_S3KingTut1
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut4"", ""start.mp4"", ""^12:The^^12:Unkindest^^12:Tut^^12:of All^"" "
  SceneMap(curVillain, 1, 1) = 8600
  SceneMap(curVillain, 1, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut4"", ""wait1.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 2, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut4"", ""p0.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 2, 1) = 3645
  SceneMap(curVillain, 2, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut4"", ""wait1.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 3, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut4"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 3, 1) = 3041
  SceneMap(curVillain, 3, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut4"", ""wait1.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut4"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 4, 1) = 4040
  SceneMap(curVillain, 4, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut4"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 5, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut4"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = 3266
  SceneMap(curVillain, 5, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut4"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 6, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut4"", ""p4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 6, 1) = 4966
  SceneMap(curVillain, 6, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut4"", ""wait2.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 7, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut4"", ""p5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 7, 1) = 4435
  SceneMap(curVillain, 7, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Tut4"", ""wait3.mp4"", ""^^^^^^^^Complete Flashing Shots"" "

  SceneMap(curVillain, 8, 0) = "SceneTutS3Wait True "
  SceneMap(curVillain, 8, 1) = -1
  SceneMap(curVillain, 8, 2) = ""

  SceneMap(curVillain, 9, 0) = "SceneTutS3Wait False "
  SceneMap(curVillain, 9, 1) = -1
  SceneMap(curVillain, 9, 2) = ""

  SceneMap(curVillain, 10, 0) = "SceneTutS3Wait False "
  SceneMap(curVillain, 10, 1) = -1
  SceneMap(curVillain, 10, 2) = ""

  ' ******************************************************************************
  ' **************************          S3 Egghead1        ***********************
  ' ******************************************************************************
  curVillain = kMinV_S3EggHead1
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Egg2"", ""start.mp4"", ""^^12:The^^12:OGG^^12:And I^^"" "
  SceneMap(curVillain, 1, 1) = 2600
  SceneMap(curVillain, 1, 2) = "SceneEggS3Wait1 "

  SceneMap(curVillain, 2, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Egg2"", ""p0.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 2, 1) = 6467
  SceneMap(curVillain, 2, 2) = "SceneEggS3Wait2"

  SceneMap(curVillain, 3, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Egg2"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 3, 1) = 6167
  SceneMap(curVillain, 3, 2) = "SceneEggS3Wait2"

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Egg2"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 4, 1) = 6606
  SceneMap(curVillain, 4, 2) = "SceneEggS3Wait2"



  ' ******************************************************************************
  ' **************************          S3 Egghead2        ***********************
  ' ******************************************************************************
  curVillain = kMinV_S3EggHead2
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Egg3"", ""start.mp4"", ""^^12:The^^12:OGG^^12:Couple^^"" "
  SceneMap(curVillain, 1, 1) = 4066
  SceneMap(curVillain, 1, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Egg3"", ""wait1.mp4"", ""^^^^^^^Shoot Left Orbit To Advance^All Targets 350,000"" "

  SceneMap(curVillain, 2, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Egg3"", ""p0.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 2, 1) = 6246
  SceneMap(curVillain, 2, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Egg3"", ""wait1.mp4"", ""^^^^^^^Shoot Left Orbit To Advance^All Targets 350,000"" "

  SceneMap(curVillain, 3, 0) = "SceneEgg2_S3Wait1 ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 3, 1) = -1
  SceneMap(curVillain, 3, 2) = ""

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Egg3"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 4, 1) = 8602
  SceneMap(curVillain, 4, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Egg3"", ""wait1.mp4"", ""^^^^^^^Shoot Left Orbit To Advance^All Targets 375,000"" "

  SceneMap(curVillain, 5, 0) = "SceneEgg2_S3Wait2 ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = -1
  SceneMap(curVillain, 5, 2) = ""

  SceneMap(curVillain, 6, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Egg3"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 6, 1) = 2252
  SceneMap(curVillain, 6, 2) = "SceneGeneralStart3 "&curVillain&", 1, 0, ""video-Egg3"", ""wait1.mp4"", ""^^^^^^^Shoot Left Orbit To Advance^All Targets 375,000"" "



  ' ******************************************************************************
  ' **************************          S3 Shame           ***********************
  ' ******************************************************************************
  curVillain = kMinV_S3Shame
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Shame2"", ""start.mp4"", ""^^12:The^^12:Great^^12:Escape^^"" "
  SceneMap(curVillain, 1, 1) = 2600
  SceneMap(curVillain, 1, 2) = "SceneShameS3Wait1 "

  SceneMap(curVillain, 2, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Shame2"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 2, 1) = 2000
  SceneMap(curVillain, 2, 2) = "SceneShameS3Wait1 "

  SceneMap(curVillain, 3, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Shame2"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 3, 1) = 1666
  SceneMap(curVillain, 3, 2) = "SceneShameS3Wait1 "

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Shame2"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 4, 1) = 1266
  SceneMap(curVillain, 4, 2) = "SceneShameS3Wait1 "

  SceneMap(curVillain, 5, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Shame2"", ""p4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = 3041
  SceneMap(curVillain, 5, 2) = "SceneShameS3Wait2 True "

  SceneMap(curVillain, 6, 0) = "SceneShameS3Wait2 False "
  SceneMap(curVillain, 6, 1) = -1
  SceneMap(curVillain, 6, 2) = ""

  SceneMap(curVillain, 7, 0) = "SceneShameS3Wait2 False "
  SceneMap(curVillain, 7, 1) = -1
  SceneMap(curVillain, 7, 2) = ""

  SceneMap(curVillain, 8, 0) = "SceneShameS3Wait2 False "
  SceneMap(curVillain, 8, 1) = -1
  SceneMap(curVillain, 8, 2) = ""

  SceneMap(curVillain, 9, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Shame2"", ""p5.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 9, 1) = 6933
  SceneMap(curVillain, 9, 2) = "SceneShameS3Wait3 """" "

  SceneMap(curVillain, 10, 0) = "SceneShameS3Wait3 ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 10, 1) = -1
  SceneMap(curVillain, 10, 2) = ""


  ' ******************************************************************************
  ' **************************            S3 Tut2          ***********************
  ' ******************************************************************************
  curVillain = kMinV_S3KingTut2
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut5"", ""start.mp4"", ""^^12:I'll Be^^12:A Mummy's^^12:Uncle^^"" "
  SceneMap(curVillain, 1, 1) = 7433
  SceneMap(curVillain, 1, 2) = "SceneTut2_S3Wait1 "

  SceneMap(curVillain, 2, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut5"", ""p0.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 2, 1) = 2600
  SceneMap(curVillain, 2, 2) = "SceneTut2_S3Wait2 """" "

  SceneMap(curVillain, 3, 0) = "SceneTut2_S3Wait2 ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 3, 1) = -1
  SceneMap(curVillain, 3, 2) = ""

  SceneMap(curVillain, 4, 0) = "SceneTut2_S3Wait2 ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 4, 1) = -1
  SceneMap(curVillain, 4, 2) = ""

  SceneMap(curVillain, 5, 0) = "SceneTut2_S3Wait2 ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = -1
  SceneMap(curVillain, 5, 2) = ""

  SceneMap(curVillain, 6, 0) = "SceneTut2_S3Wait2 ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 6, 1) = -1
  SceneMap(curVillain, 6, 2) = ""

  SceneMap(curVillain, 7, 0) = "SceneTut2_S3Wait2 ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 7, 1) = -1
  SceneMap(curVillain, 7, 2) = ""

  SceneMap(curVillain, 8, 0) = "SceneTut2_S3Wait3 ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 8, 1) = -1
  SceneMap(curVillain, 8, 2) = ""

  SceneMap(curVillain, 9, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Tut5"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 9, 1) = 3566
  SceneMap(curVillain, 9, 2) = "SceneTut2_S3Wait3 """" "



  ' Insert Priority (https://youtu.be/k_rf7QXnrog?t=1779)
  ' 1) Main Channel
  ' 2) Wizard
  ' 3) Minor
  ' 4) Major


' NOTE If you stack a Minor (BLUE) While another Blue (Bat shoot) is enabled the minor shots turn Purple (https://youtu.be/k_rf7QXnrog?t=2035)
  'Hatter S1
  ' https://youtu.be/QOHDq9Tw5hE?t=804
  ' https://youtu.be/k_rf7QXnrog?t=3397
  'Hatter S2
  ' https://youtu.be/QOUXBt30DIQ?t=2149
  ' https://youtu.be/QOHDq9Tw5hE?t=1525
  'Bookworm
  ' https://youtu.be/k_rf7QXnrog?t=151
  'TutS1 (The Curse Of Tut)
  ' https://youtu.be/QOUXBt30DIQ?t=5705
  ' https://youtu.be/k_rf7QXnrog?t=1436
  ' https://youtu.be/GzqKmzh6gps?t=1133
  'TutS2-1
  ' https://youtu.be/k_rf7QXnrog?t=1785
  'TutS3-1 (King Tuts Coup)
  ' https://youtu.be/QOUXBt30DIQ?t=7858
  ' https://youtu.be/GzqKmzh6gps?t=1516
  'TitS3-1 (The Unkindest Tut of All)
  ' https://youtu.be/QOHDq9Tw5hE?t=6797
  ' https://youtu.be/k_rf7QXnrog?t=2050
  'TutS3-3 (I'll be a mummys Uncle)
  ' https://youtu.be/k_rf7QXnrog?t=678
  ' https://youtu.be/QOHDq9Tw5hE?t=6080
  ' https://youtu.be/GzqKmzh6gps?t=1676
  'MR Freeze
  ' https://youtu.be/QOUXBt30DIQ?t=3043
  ' https://youtu.be/QOUXBt30DIQ?t=5875
  ' https://youtu.be/k_rf7QXnrog?t=297
  'ShameS2 (Come Back Shame)
  ' https://youtu.be/QOUXBt30DIQ?t=3678
  ' https://youtu.be/QOUXBt30DIQ?t=4802
  ' https://youtu.be/k_rf7QXnrog?t=1103
  'ShameS3 (The Great Escape)
  ' https://youtu.be/QOUXBt30DIQ?t=3426
  ' https://youtu.be/k_rf7QXnrog?t=2315

  'EggS3-1 (An Egg Grows in Gotham)
  ' https://youtu.be/y2tuz3YcSXM?t=1065
  'EggS3-2 (The Ogg Couple)
  ' https://youtu.be/k_rf7QXnrog?t=3126

  ' ******************************************************************************
  ' **************************       Villain Escape        ***********************
  ' ******************************************************************************
  curVillain = kWiz_VillainEscape
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 1, ""video-VESC"", ""start.mp4"", ""^^^^12:Villain Escape^^^^"" "
  SceneMap(curVillain, 1, 1) = 1966
  SceneMap(curVillain, 1, 2) = "SceneVESC_Wait1 True"

  SceneMap(curVillain, 2, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-VESC"", ""p0.mp4"", ""^^^^^^^^"" "
  SceneMap(curVillain, 2, 1) = 2566
  SceneMap(curVillain, 2, 2) = "SceneVESC_Wait1 False"

  SceneMap(curVillain, 3, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-VESC"", ""p1.mp4"", ""^^^^^^^^"" "
  SceneMap(curVillain, 3, 1) = 1833
  SceneMap(curVillain, 3, 2) = "SceneVESC_Wait1 False"

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-VESC"", ""p2.mp4"", ""^^^^^^^^"" "
  SceneMap(curVillain, 4, 1) = 5388
  SceneMap(curVillain, 4, 2) = "SceneVESC_Wait2 "

  SceneMap(curVillain, 5, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-VESC"", ""p3.mp4"", ""^^^^^^^^"" "
  SceneMap(curVillain, 5, 1) = 1067
  SceneMap(curVillain, 5, 2) = "SceneVESC_Wait2 "

  ' ******************************************************************************
  ' **************************       Batusi        ***********************
  ' ******************************************************************************
  curVillain = kWiz_Batusi
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Batusi"", ""start.mp4"", ""^^^12:Batusi^^12:Multiball^^^"" "
  SceneMap(curVillain, 1, 1) = 2766
  SceneMap(curVillain, 1, 2) = "SceneBatusi_Wait1 True "

  SceneMap(curVillain, 2, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Batusi"", ""p0.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 2, 1) = 1466
  SceneMap(curVillain, 2, 2) = "SceneBatusi_Wait1 False "

  SceneMap(curVillain, 3, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Batusi"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 3, 1) = 2647
  SceneMap(curVillain, 3, 2) = "SceneBatusi_Wait1 False "

  SceneMap(curVillain, 4, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Batusi"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 4, 1) = 3000
  SceneMap(curVillain, 4, 2) = "SceneBatusi_Wait1 False "

  SceneMap(curVillain, 5, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Batusi"", ""p3.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 5, 1) = 2800
  SceneMap(curVillain, 5, 2) = "SceneBatusi_Wait1 False "

  SceneMap(curVillain, 6, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Batusi"", ""p0.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 6, 1) = 1466
  SceneMap(curVillain, 6, 2) = "SceneBatusi_Wait1 False "

  SceneMap(curVillain, 7, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Batusi"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 7, 1) = 2647
  SceneMap(curVillain, 7, 2) = "SceneBatusi_Wait1 False "

  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Batusi"", ""p2.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 8, 1) = 3000
  SceneMap(curVillain, 8, 2) = "SceneBatusi_Wait1 False "

  SceneMap(curVillain, 9, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Batusi"", ""p4.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 9, 1) = 3200
  SceneMap(curVillain, 9, 2) = "SceneBatusi_Wait1 False "


  ' ******************************************************************************
  ' **************************       GasAttack        ***********************
  ' ******************************************************************************
  curVillain = kWiz_GasAttack
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Gas"", ""start.mp4"", ""^^^12:Gas Attack^^12:Multiball^^^"" "
  SceneMap(curVillain, 1, 1) = 3482
  SceneMap(curVillain, 1, 2) = "SceneGas_Wait1 True, """" "

  SceneMap(curVillain, 2, 0) = "SceneGas_Wait1 False, ""[SCORE]"" "
  SceneMap(curVillain, 2, 1) = -1
  SceneMap(curVillain, 2, 2) = ""

  SceneMap(curVillain, 3, 0) = "SceneGas_Wait1 False, ""[SCORE]"" "
  SceneMap(curVillain, 3, 1) = -1
  SceneMap(curVillain, 3, 2) = ""

  SceneMap(curVillain, 4, 0) = "SceneGas_Wait1 False, ""[SCORE]"" "
  SceneMap(curVillain, 4, 1) = -1
  SceneMap(curVillain, 4, 2) = ""

  SceneMap(curVillain, 5, 0) = "SceneGas_Wait1 False, ""[SCORE]"" "
  SceneMap(curVillain, 5, 1) = -1
  SceneMap(curVillain, 5, 2) = ""

  SceneMap(curVillain, 6, 0) = "SceneGas_Wait1 False, ""[SCORE]"" "
  SceneMap(curVillain, 6, 1) = -1
  SceneMap(curVillain, 6, 2) = ""

  SceneMap(curVillain, 7, 0) = "SceneGas_Wait1 False, ""[SCORE]"" "     ' Super Jackpot is lit
  SceneMap(curVillain, 7, 1) = -1
  SceneMap(curVillain, 7, 2) = ""

  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Gas"", ""SJP.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 8, 1) = 1000
  SceneMap(curVillain, 8, 2) = ""

  ' ******************************************************************************
  ' **************************       HolyMB        ***********************
  ' ******************************************************************************
  curVillain = kWiz_Holy
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Holy"", ""start.mp4"", ""^^^12:Robin's Holy^^12:Multiball^^^"" "
  SceneMap(curVillain, 1, 1) = 1633
  SceneMap(curVillain, 1, 2) = "SceneHoly_Wait1 True, """" "
' SceneMap(curVillain, 1, 2) = "SceneGeneralStart3 "&curVillain&", 1, 1, ""video-Holy"", ""wait1.mp4"", ""^^^^^^^2 Shots To Light Super Jackpot^Super Jackpot=1,000,000"" "

  SceneMap(curVillain, 2, 0) = "SceneHoly_Wait1 False, ""[SCORE]"" "
  SceneMap(curVillain, 2, 1) = -1
  SceneMap(curVillain, 2, 2) = ""

  SceneMap(curVillain, 3, 0) = "SceneHoly_Wait1 False, ""[SCORE]"" "
  SceneMap(curVillain, 3, 1) = -1
  SceneMap(curVillain, 3, 2) = ""

  SceneMap(curVillain, 4, 0) = "SceneHoly_Wait1 False, ""[SCORE]"" "
  SceneMap(curVillain, 4, 1) = -1
  SceneMap(curVillain, 4, 2) = ""

  SceneMap(curVillain, 5, 0) = "SceneHoly_Wait1 False, ""[SCORE]"" "
  SceneMap(curVillain, 5, 1) = -1
  SceneMap(curVillain, 5, 2) = ""

  SceneMap(curVillain, 6, 0) = "SceneHoly_Wait1 False, ""[SCORE]"" "
  SceneMap(curVillain, 6, 1) = -1
  SceneMap(curVillain, 6, 2) = ""

  SceneMap(curVillain, 7, 0) = "SceneHoly_Wait1 False, ""[SCORE]"" "      ' Super Jackpot is lit
  SceneMap(curVillain, 7, 1) = -1
  SceneMap(curVillain, 7, 2) = ""

  SceneMap(curVillain, 8, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-Holy"", ""SJP.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 8, 1) = 1000
  SceneMap(curVillain, 8, 2) = ""


  ' ******************************************************************************
  ' **************************            Villain MB          ***********************
  ' ******************************************************************************
  curVillain = kWiz_VillainMB
  SceneMap(curVillain, 1, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-VMB"", ""start.mp4"", ""^^^^^^^^"" "
  SceneMap(curVillain, 1, 1) = 2837
  SceneMap(curVillain, 1, 2) = "SceneVMB_Wait1 True "

  SceneMap(curVillain, 2, 0) = "SceneVMB_Wait1 False "
  SceneMap(curVillain, 2, 1) = -1
  SceneMap(curVillain, 2, 2) = ""

  ' ******************************************************************************
  ' **************************            Bat Turn         ***********************
  ' ******************************************************************************
  curVillain = kWiz_BatTurn
  SceneMap(curVillain, 1, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 1, 1) = -1
  SceneMap(curVillain, 1, 2) = ""

  SceneMap(curVillain, 2, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 2, 1) = -1
  SceneMap(curVillain, 2, 2) = ""

  SceneMap(curVillain, 3, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 3, 1) = -1
  SceneMap(curVillain, 3, 2) = ""

  SceneMap(curVillain, 4, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 4, 1) = -1
  SceneMap(curVillain, 4, 2) = ""

  SceneMap(curVillain, 5, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 5, 1) = -1
  SceneMap(curVillain, 5, 2) = ""

  SceneMap(curVillain, 6, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 6, 1) = -1
  SceneMap(curVillain, 6, 2) = ""

  SceneMap(curVillain, 7, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 7, 1) = -1
  SceneMap(curVillain, 7, 2) = ""

  SceneMap(curVillain, 8, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 8, 1) = -1
  SceneMap(curVillain, 8, 2) = ""

  SceneMap(curVillain, 9, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 9, 1) = -1
  SceneMap(curVillain, 9, 2) = ""

  SceneMap(curVillain, 10, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 10, 1) = -1
  SceneMap(curVillain, 10, 2) = ""

  SceneMap(curVillain, 11, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 11, 1) = -1
  SceneMap(curVillain, 11, 2) = ""

  SceneMap(curVillain, 12, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 12, 1) = -1
  SceneMap(curVillain, 12, 2) = ""

  SceneMap(curVillain, 13, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 13, 1) = -1
  SceneMap(curVillain, 13, 2) = ""

  SceneMap(curVillain, 14, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 14, 1) = -1
  SceneMap(curVillain, 14, 2) = ""

  SceneMap(curVillain, 15, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 15, 1) = -1
  SceneMap(curVillain, 15, 2) = ""

  SceneMap(curVillain, 16, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 16, 1) = -1
  SceneMap(curVillain, 16, 2) = ""

  SceneMap(curVillain, 17, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 17, 1) = -1
  SceneMap(curVillain, 17, 2) = ""

  SceneMap(curVillain, 18, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 18, 1) = -1
  SceneMap(curVillain, 18, 2) = ""

  SceneMap(curVillain, 19, 0) = "BatTurnProgress True "
  SceneMap(curVillain, 19, 1) = -1
  SceneMap(curVillain, 19, 2) = ""

  SceneMap(curVillain, 20, 0) = "BatTurnProgress True "   ' BatTurn Is Lit
  SceneMap(curVillain, 20, 1) = -1
  SceneMap(curVillain, 20, 2) = ""

  SceneMap(curVillain, 21, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-BT"", ""start.mp4"", ""^^^12:Start^^12:Bat Turn^^^"" "
  SceneMap(curVillain, 21, 1) = 1602
  SceneMap(curVillain, 21, 2) = "SceneBT_Wait True"

  SceneMap(curVillain, 22, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-BT"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 22, 1) = 2333
  SceneMap(curVillain, 22, 2) = "SceneBT_Wait False"

  SceneMap(curVillain, 23, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-BT"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 23, 1) = 2333
  SceneMap(curVillain, 23, 2) = "SceneBT_Wait False"

  SceneMap(curVillain, 24, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-BT"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 24, 1) = 2333
  SceneMap(curVillain, 24, 2) = "SceneBT_Wait False"

  SceneMap(curVillain, 25, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-BT"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 25, 1) = 2333
  SceneMap(curVillain, 25, 2) = "SceneBT_Wait False"

  SceneMap(curVillain, 26, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-BT"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 26, 1) = 2333
  SceneMap(curVillain, 26, 2) = "SceneBT_Wait False"

  SceneMap(curVillain, 27, 0) = "SceneGeneralStart3 "&curVillain&", 0, 0, ""video-BT"", ""p1.mp4"", ""^^^^12:[SCORE]^^^^"" "
  SceneMap(curVillain, 27, 1) = 2333
  SceneMap(curVillain, 27, 2) = "SceneBT_Wait False"
End Sub
SetupSceneMap()

Sub SceneGeneralWait(screen)    ' General wait screen

  PuPlayer.LabelSet screen,"GeneralTop1","",1,""
  PuPlayer.LabelSet screen,"GeneralTop2","",1,""
  PuPlayer.LabelSet screen,"GeneralCenter1","", 1, ""
  PuPlayer.LabelSet screen,"GeneralCenter2","", 1, ""
  PuPlayer.LabelSet screen,"GeneralBottom1","", 1, ""
  PuPlayer.LabelSet screen,"GeneralBottom2","",1,""

  PuPlayer.LabelSet screen,"GeneralTop3","", 1,""
  PuPlayer.LabelSet screen,"GeneralCenter3","", 1,""
  PuPlayer.LabelSet screen,"GeneralBottom3","",1,""

  if InBonus then exit sub    ' Causes glitch on bonus scene when drain while batphone is flashing.  Because IncreaseBatPhone is called when we queue a villain that adds a timer to StartLastScene

  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""1.1.mp4"", """" ", 2043, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""1.2.mp4"", """" ", 2533, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""1.3.mp4"", """" ", 2566, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""1.4.mp4"", """" ", 2766, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""1.5.mp4"", """" ", 2666, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""1.6.mp4"", """" ", 4000, 1

  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""2.1.mp4"", """" ", 3933, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""2.2.mp4"", """" ", 5688, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""2.3.mp4"", """" ", 2200, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""2.4.mp4"", """" ", 2633, 1

  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""3.1.mp4"", """" ", 3366, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""3.2.mp4"", """" ", 4899, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""4.1.mp4"", """" ", 2800, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""4.2.mp4"", """" ", 3436, 1

  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""5.1.mp4"", """" ", 2545, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""5.2.mp4"", """" ", 2628, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""5.3.mp4"", """" ", 2795, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""5.4.mp4"", """" ", 5673, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""5.5.mp4"", """" ", 2294, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""5.6.mp4"", """" ", 2628, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""5.7.mp4"", """" ", 3629, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""5.8.mp4"", """" ", 3045, 1
  QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""AttractMode"", ""5.9.mp4"", """" ", 9677, 1
  QueueSceneS screen, "SceneGeneralWait "&screen&" ", -1, 1

End Sub



' Play random progress and then wait
Sub SceneEgg2_S3Wait1(Msg1)
  Dim Msg2
  Dim Shots
  Dim JackpotValue
  dim start
  JackpotValue=PlayerState(CurrentPlayer).Jackpot(kMinV_S3EggHead2)
  Msg2="""^^^^^^^All Shots="& FormatScore(JackpotValue) &"^Shoot Flashing Shots"""

  if Msg1 <> "" then
    Msg1 = """" & Msg1 & """"
    start = INT(RND*4)
    select case start
      case 0:
        QueueSceneV kMinV_S3EggHead2, "SceneGeneralStart3 "&kMinV_S3EggHead2&", 0, 1, ""video-Egg3"", ""a1.mp4"", "&Msg1&" ", 1400, 1
      case 1:
        QueueSceneV kMinV_S3EggHead2, "SceneGeneralStart3 "&kMinV_S3EggHead2&", 0, 1, ""video-Egg3"", ""a2.mp4"", "&Msg1&" ", 650, 1
      case 2:
        QueueSceneV kMinV_S3EggHead2, "SceneGeneralStart3 "&kMinV_S3EggHead2&", 0, 1, ""video-Egg3"", ""a3.mp4"", "&Msg1&" ", 833, 1
      case 3:
        QueueSceneV kMinV_S3EggHead2, "SceneGeneralStart3 "&kMinV_S3EggHead2&", 0, 1, ""video-Egg3"", ""a4.mp4"", "&Msg1&" ", 650, 1
    End Select
  End if
  QueueSceneV kMinV_S3EggHead2, "SceneGeneralStart3 "&kMinV_S3EggHead2&", 1, 1, ""video-Egg3"", ""wait1.mp4"", "&Msg2&" ", -1, 1
End Sub


' Play random progress and then wait
Sub SceneEgg2_S3Wait2(Msg1)
  Dim Msg2
  Dim Shots
  Dim JackpotValue
  dim start
  JackpotValue=PlayerState(CurrentPlayer).Jackpot(kMinV_S3EggHead2)
  Msg2="""^^^^^^^All Shots="& FormatScore(JackpotValue) &"^Shoot Flashing Shots"""

  if Msg1 <> "" then
    Msg1 = """" & Msg1 & """"
    start = INT(RND*4)
    select case start
      case 0:
        QueueSceneV kMinV_S3EggHead2, "SceneGeneralStart3 "&kMinV_S3EggHead2&", 0, 1, ""video-Egg3"", ""b1.mp4"", "&Msg1&" ", 966, 1
      case 1:
        QueueSceneV kMinV_S3EggHead2, "SceneGeneralStart3 "&kMinV_S3EggHead2&", 0, 1, ""video-Egg3"", ""b2.mp4"", "&Msg1&" ", 1233, 1
      case 2:
        QueueSceneV kMinV_S3EggHead2, "SceneGeneralStart3 "&kMinV_S3EggHead2&", 0, 1, ""video-Egg3"", ""b3.mp4"", "&Msg1&" ", 4766, 1
      case 3:
        QueueSceneV kMinV_S3EggHead2, "SceneGeneralStart3 "&kMinV_S3EggHead2&", 0, 1, ""video-Egg3"", ""b4.mp4"", "&Msg1&" ", 1866, 1
    End Select
  End if
  QueueSceneV kMinV_S3EggHead2, "SceneGeneralStart3 "&kMinV_S3EggHead2&", 1, 1, ""video-Egg3"", ""wait1.mp4"", "&Msg2&" ", -1, 1
End Sub



Sub SceneEggS3Wait1()
  Dim Msg
  Dim JackpotValue
  Dim JackpotBase
  JackpotValue=7300000
  JackpotBase=PlayerState(CurrentPlayer).Villains(kMinV_S3EggHead1).JackpotBase
  PlayerState(CurrentPlayer).Villains(kMinV_S3EggHead1).JackpotValue = JackpotValue

  Msg="""^^^All Targets^^300,000^^^"""
  QueueSceneV kMinV_S3EggHead1, "SceneGeneralStart3 "&kMinV_S3EggHead1&", 0, 0, ""video-Egg2"", ""start2.mp4"", "&Msg&" ", 1787, 1
  Msg="""^^^^^^^Jackpot Is Lit For "& FormatScore(JackpotValue) & "^All Targets "& FormatScore(JackpotBase)&""""
  QueueSceneV kMinV_S3EggHead1, "SceneGeneralStart3 "&kMinV_S3EggHead1&", 1, 1, ""video-Egg2"", ""wait1.mp4"", "&Msg&" ", -1, 1
End Sub


Sub SceneEggS3Wait2()
  Dim Msg
  Dim JackpotValue
  Dim JackpotBase
  JackpotValue=PlayerState(CurrentPlayer).Jackpot(kMinV_S3EggHead1)
  JackpotBase=PlayerState(CurrentPlayer).Villains(kMinV_S3EggHead1).JackpotBase

  Msg="""^^^^^^^Jackpot Is Lit For "& FormatScore(JackpotValue) & "^All Targets "& FormatScore(JackpotBase)&""""
  QueueSceneV kMinV_S3EggHead1, "SceneGeneralStart3 "&kMinV_S3EggHead1&", 1, 1, ""video-Egg2"", ""wait1.mp4"", "&Msg&" ", -1, 1
End Sub


' Randomize All shots
Sub SceneShameS3Wait1()
  Dim Msg
  Dim Shots
  Dim JackpotValue
  dim start
  Shots=5-PlayerState(CurrentPlayer).TProgress(kMinV_S3Shame)
  JackpotValue=PlayerState(CurrentPlayer).Jackpot(kMinV_S3Shame)
  Msg="""^^^^^^^"&Shots&" More - All Shots="& FormatScore(JackpotValue) &"^Shoot Flashing Shots"""

  start = INT(RND*18)
  select case start
    case 0:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a1.mp4"", "&Msg&" ", 3250, 1
    case 1:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a2.mp4"", "&Msg&" ", 743, 1
    case 2:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a3.mp4"", "&Msg&" ", 2166, 1
    case 3:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a4.mp4"", "&Msg&" ", 4000, 1
    case 4:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a5.mp4"", "&Msg&" ", 3600, 1
    case 5:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a6.mp4"", "&Msg&" ", 998, 1
    case 6:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a7.mp4"", "&Msg&" ", 3366, 1
    case 7:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a8.mp4"", "&Msg&" ", 441, 1
    case 8:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a9.mp4"", "&Msg&" ", 2066, 1
    case 9:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a10.mp4"","&Msg&" ", 766, 1
    case 10:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a11.mp4"", "&Msg&" ", 4733, 1
    case 11:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a12.mp4"", "&Msg&" ", 2345, 1
    case 12:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a13.mp4"", "&Msg&" ", 1834, 1
    case 13:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a14.mp4"", "&Msg&" ", 1950, 1
    case 14:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a15.mp4"", "&Msg&" ", 952, 1
    case 15:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a16.mp4"", "&Msg&" ", 2366, 1
    case 16:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a17.mp4"", "&Msg&" ", 600, 1
    case 17:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""a18.mp4"", "&Msg&" ", 3866, 1
  End Select
  QueueSceneV kMinV_S3Shame, "SceneShameS3Wait1 ", -1, 1
End Sub

' Randomize All shots
Dim bSceneShameS3Wait2ShowScore
Sub SceneShameS3Wait2(bInit)
  Dim Msg
  Dim Shots
  Dim JackpotValue
  dim start
  Shots=9-PlayerState(CurrentPlayer).TProgress(kMinV_S3Shame)
  JackpotValue=PlayerState(CurrentPlayer).Jackpot(kMinV_S3Shame)
  If bSceneShameS2Wait2ShowScore and bInit=False then
    Msg="""^^^^12:"&FormatScore(JackpotValue)&"^^^^"""
  else
    Msg="""^^^^^^^"&Shots&" More - All Shots="& FormatScore(JackpotValue) &"^Shoot Flashing Shots"""
  End if

  if bInit then
    start = 0
  else
    start = INT(RND*5)+1
  End if
  bSceneShameS3Wait2ShowScore=False

  select case start
    case 0:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""b0.mp4"", "&Msg&" ", 4733, 1
    case 1:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""b1.mp4"", "&Msg&" ", 1602, 1
    case 2:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""b2.mp4"", "&Msg&" ", 866, 1
    case 3:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""b3.mp4"", "&Msg&" ", 3134, 1
    case 4:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""b4.mp4"", "&Msg&" ", 1266, 1
    case 5:
      QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""b5.mp4"", "&Msg&" ", 1787, 1
  End Select
  QueueSceneV kMinV_S3Shame, "SceneShameS3Wait2 False ", -1, 1
End Sub

' Randomize All shots
Sub SceneShameS3Wait3(Msg1)
  Dim Msg2
  Dim Shots
  Dim JackpotValue
  dim start
  Shots=9-PlayerState(CurrentPlayer).TProgress(kMinV_S3Shame)
  JackpotValue=PlayerState(CurrentPlayer).Jackpot(kMinV_S3Shame)
  Msg2="""^^^^^^^All Shots="& FormatScore(JackpotValue) &"^Shoot Flashing Shots"""

  'WriteToLog "     ", "SceneShameS3Wait3:" & Msg1

  if Msg1 <> "" then
    Msg1 = """" & Msg1 & """"
    start = INT(RND*10)
    select case start
      case 0:
        QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""c1.mp4"", "&Msg1&" ", 487, 1
      case 1:
        QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""c2.mp4"", "&Msg1&" ", 566, 1
      case 2:
        QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""c3.mp4"", "&Msg1&" ", 2966, 1
      case 3:
        QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""c4.mp4"", "&Msg1&" ", 7500, 1
      case 4:
        QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""c5.mp4"", "&Msg1&" ", 5688, 1
      case 5:
        QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""c6.mp4"", "&Msg1&" ", 3134, 1
      case 6:
        QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""c7.mp4"", "&Msg1&" ", 7639, 1
      case 7:
        QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""c8.mp4"", "&Msg1&" ", 696, 1
      case 8:
        QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""c9.mp4"", "&Msg1&" ", 5642, 1
      case 9:
        QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 0, 1, ""video-Shame2"", ""c10.mp4"", "&Msg1&" ", 7433, 1
    End Select
  End if
  QueueSceneV kMinV_S3Shame, "SceneGeneralStart3 "&kMinV_S3Shame&", 1, 1, ""video-Shame2"", ""wait1.mp4"", "&Msg2&" ", -1, 1
End Sub


Sub SceneTut2_S3Wait1()
  Dim Msg:Msg="""^^^^^^^^Complete Flashing Shots"""
  QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""a1.mp4"", "&Msg&" ", 1346, 1
  QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""a2.mp4"", "&Msg&" ", 4366, 1
  QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""a3.mp4"", "&Msg&" ", 3645, 1
  QueueSceneV kMinV_S3KingTut2, "SceneTut2_S3Wait1 ", -1, 1
End Sub


Sub SceneTut2_S3Wait2(Msg1)
  Dim Msg2
  Dim Shots
  dim start
  Msg2="""^^^^^^^^Complete Flashing Shots"""

  if Msg1 <> "" then
    Msg1 = """" & Msg1 & """"
  else
    Msg1 = Msg2
  End if

  start = INT(RND*18)
  select case start
    case 0:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b1.mp4"", "&Msg1&" ", 3041, 1
    case 1:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b2.mp4"", "&Msg1&" ", 2166, 1
    case 2:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b3.mp4"", "&Msg1&" ", 1400, 1
    case 3:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b4.mp4"", "&Msg1&" ", 3666, 1
    case 4:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b5.mp4"", "&Msg1&" ", 2433, 1
    case 5:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b6.mp4"", "&Msg1&" ", 952, 1
    case 6:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b7.mp4"", "&Msg1&" ", 1346, 1
    case 7:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b8.mp4"", "&Msg1&" ", 2833, 1
    case 8:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b9.mp4"", "&Msg1&" ", 1091, 1
    case 9:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b10.mp4"", "&Msg1&" ", 1787, 1
    case 10:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b11.mp4"", "&Msg1&" ", 1044, 1
    case 11:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b12.mp4"", "&Msg1&" ", 3466, 1
    case 12:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b13.mp4"", "&Msg1&" ", 5766, 1
    case 13:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b14.mp4"", "&Msg1&" ", 2136, 1
    case 14:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b15.mp4"", "&Msg1&" ", 696, 1
    case 15:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b16.mp4"", "&Msg1&" ", 1602, 1
    case 16:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b17.mp4"", "&Msg1&" ", 1393, 1
    case 17:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""b18.mp4"", "&Msg1&" ", 2345, 1
  End Select
  QueueSceneV kMinV_S3KingTut2, "SceneTut2_S3Wait2 """" ", -1, 1
End Sub


Sub SceneVESC_Wait1(bInit)
  Dim Msg1
  Dim Shots
  dim start
  dim jp1
  dim jp2
  jp1=PlayerState(CurrentPlayer).VillainEscapeEverythingTotal
  jp2=PlayerState(CurrentPlayer).Villains(kWiz_VillainEscape).JackpotValue
  Msg1="""^^^^^^^Everything="&FormatScore(jp1)&"^Villain Value="&FormatScore(jp2)&""""

  if bInit then
    start=0
  else
    start = INT(RND*11) + 1
  End if

  select case start
    case 0:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 0, ""video-VESC"", ""start2.mp4"", ""^^^Defeat All Villains^To^Light Super Jackpot^^^"" ", 7000, 1
      QueueSceneV2 kWiz_VillainEscape, "StartVillainEscapeKick", -1, 1, True
    case 1:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 1, ""video-VESC"", ""a0.mp4"", "&Msg1&" ", 3738, 1
    case 2:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 1, ""video-VESC"", ""a1.mp4"", "&Msg1&" ", 3566, 1
    case 3:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 1, ""video-VESC"", ""a2.mp4"", "&Msg1&" ", 10000, 1
    case 4:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 1, ""video-VESC"", ""a3.mp4"", "&Msg1&" ", 1833, 1
    case 5:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 1, ""video-VESC"", ""a4.mp4"", "&Msg1&" ", 3466, 1
    case 6:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 1, ""video-VESC"", ""a5.mp4"", "&Msg1&" ", 2666, 1
    case 7:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 1, ""video-VESC"", ""a6.mp4"", "&Msg1&" ", 9450, 1
    case 8:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 1, ""video-VESC"", ""a7.mp4"", "&Msg1&" ", 3866, 1
    case 9:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 1, ""video-VESC"", ""a8.mp4"", "&Msg1&" ", 3933, 1
    case 10:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 1, ""video-VESC"", ""a9.mp4"", "&Msg1&" ", 4551, 1
    case 11:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 1, ""video-VESC"", ""a10.mp4"","&Msg1&" ", 2182, 1

  End Select
  QueueSceneV kWiz_VillainEscape, "SceneVESC_Wait1 False ", -1, 1
End Sub


Sub SceneVESC_Wait2()
  Dim Msg1
  Dim Shots
  dim start
  dim jp1
  dim jp2
  jp1=PlayerState(CurrentPlayer).VillainEscapeEverythingTotal
  jp2=PlayerState(CurrentPlayer).Villains(kWiz_VillainEscape).JackpotValue
  Msg1="""^^^^^^^Defeat All Villains^Next Shot="&FormatScore(jp2)&""""

  start = INT(RND*5)
  select case start
    case 0:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 0, ""video-VESC"", ""b0.mp4"", "&Msg1&" ", 2438, 1
    case 1:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 1, ""video-VESC"", ""b1.mp4"", "&Msg1&" ", 2000, 1
    case 2:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 1, ""video-VESC"", ""b2.mp4"", "&Msg1&" ", 4000, 1
    case 3:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 1, ""video-VESC"", ""b3.mp4"", "&Msg1&" ", 2866, 1
    case 4:
      QueueSceneV kWiz_VillainEscape, "SceneGeneralStart3 "&kWiz_VillainEscape&", 0, 1, ""video-VESC"", ""b4.mp4"", "&Msg1&" ", 2200, 1
  End Select
  QueueSceneV kWiz_VillainEscape, "SceneVESC_Wait2 ", -1, 1
End Sub


Sub SceneBatusi_Wait1(bInit)
  dim jp1
  Dim jp2
  Dim cnt
  if bInit then PlayerState(CurrentPlayer).SetProgress(kWiz_Batusi)=3     ' Start with 5 shots
  cnt=8-PlayerState(CurrentPlayer).TProgress(kWiz_Batusi)
  jp1=PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotBase
  jp2=PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotValue

  if bInit then
    QueueSceneV kWiz_Batusi, "SceneGeneralStart3 "&kWiz_Batusi&", 1, 1, ""video-Batusi"", ""wait1.mp4"", ""^^^^^^^Pop Bumpers Light Shots^Shots Light Super Jackpot"" ", 2000, 1
    QueueSceneV kWiz_Batusi, "SceneGeneralStart3 "&kWiz_Batusi&", 0, 0, ""video-Batusi"", ""start2.mp4"", ""^^^^^^^Pop Bumpers Light Shots^Shots Light Super Jackpot"" ", 2800, 1
    QueueSceneV kWiz_Batusi, "SceneGeneralStart3 "&kWiz_Batusi&", 1, 1, ""video-Batusi"", ""wait1.mp4"", ""^^^^^^^"&cnt&" More Shots="&FormatScore(jp1)&"^4:Super Jackpot="&FormatScore(jp2)&""" ", -1, 1
  Elseif cnt=0 then
    QueueSceneV kWiz_Batusi, "SceneGeneralStart3 "&kWiz_Batusi&", 1, 1, ""video-Batusi"", ""wait1.mp4"", ""^^^^^^6:Super Jackpot Is Lit^Super Jackpot="&FormatScore(jp2)&"^4:Shoot Bat Signal"" ", -1, 1
  else
    QueueSceneV kWiz_Batusi, "SceneGeneralStart3 "&kWiz_Batusi&", 1, 1, ""video-Batusi"", ""wait1.mp4"", ""^^^^^^^"&cnt&" More Shots="&FormatScore(jp1)&"^4:Super Jackpot="&FormatScore(jp2)&""" ", -1, 1
  End if
End Sub

Sub SceneGas_Wait1(bInit, score)
  dim jp1
  Dim jp2
  Dim cnt
  Dim start
  Dim Msg1
  if bInit then PlayerState(CurrentPlayer).SetProgress(kWiz_GasAttack)=2      ' Start with 5 shots
  cnt=7-PlayerState(CurrentPlayer).TProgress(kWiz_GasAttack)
  jp1=PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).JackpotBase
  jp2=PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).JackpotValue

  if bInit then
    QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 1, 1, ""video-Gas"", ""wait1.mp4"", ""^^^^Collect Jackpots^To Light Super Jackpot^^^"" ", 2000, 1
    QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 1, 1, ""video-Gas"", ""wait1.mp4"", ""^^^^^^^"&cnt&" Shots To Light Super Jackpot^Super Jackpot="&FormatScore(jp2)&""" ", -1, 1
  else
    EndHurryUp3 True
    Msg1 = """^^^^12:"&score&"^^^^"""

    start = INT(RND*14)
    select case start
      case 0:
        QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 0, 0, ""video-Gas"", ""p1.mp4"", "&Msg1&" ", 2933, 1
      case 1:
        QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 0, 0, ""video-Gas"", ""p2.mp4"", "&Msg1&" ", 2466, 1
      case 2:
        QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 0, 0, ""video-Gas"", ""p3.mp4"", "&Msg1&" ", 2833, 1
      case 3:
        QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 0, 0, ""video-Gas"", ""p4.mp4"", "&Msg1&" ", 2633, 1
      case 4:
        QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 0, 0, ""video-Gas"", ""p5.mp4"", "&Msg1&" ", 1533, 1
      case 5:
        QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 0, 0, ""video-Gas"", ""p6.mp4"", "&Msg1&" ", 2345, 1
      case 6:
        QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 0, 0, ""video-Gas"", ""p7.mp4"", "&Msg1&" ", 1566, 1
      case 7:
        QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 0, 0, ""video-Gas"", ""p8.mp4"", "&Msg1&" ", 2136, 1
      case 8:
        QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 0, 0, ""video-Gas"", ""p9.mp4"", "&Msg1&" ",  2033, 1
      case 9:
        QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 0, 0, ""video-Gas"", ""p10.mp4"", "&Msg1&" ", 2800, 1
      case 10:
        QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 0, 0, ""video-Gas"", ""p11.mp4"", "&Msg1&" ", 3400, 1
      case 11:
        QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 0, 0, ""video-Gas"", ""p12.mp4"", "&Msg1&" ", 866, 1
      case 12:
        QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 0, 0, ""video-Gas"", ""p13.mp4"", "&Msg1&" ", 2739, 1
      case 13:
        QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 0, 0, ""video-Gas"", ""p14.mp4"", "&Msg1&" ", 1741, 1
    End Select
    if cnt=0 then
      QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 1, 1, ""video-Gas"", ""wait1.mp4"", ""^^^^^^^Super Jackpot Is Lit^Super Jackpot="&FormatScore(jp2)&""" ", -1, 1
    Else
      ' Restart hurryup and start end scene
      QueueSceneV kWiz_GasAttack, "StartHurryUp3 kWiz_GasAttack, PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).JackpotBase ", -1, 1
      QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 1, 1, ""video-Gas"", ""wait1.mp4"", ""^^^^^^^"&cnt&" Shots To Light Super Jackpot^Super Jackpot="&FormatScore(jp1)&""" ", -1, 1
    End if
  End if

end Sub

Sub SceneHoly_Wait1(bInit, score)
  dim jp1
  Dim jp2
  Dim cnt
  Dim start
  Dim Msg1
  if bInit then PlayerState(CurrentPlayer).SetProgress(kWiz_Holy)=5     ' Start with 2 shots
  cnt=7-PlayerState(CurrentPlayer).TProgress(kWiz_Holy)
  jp1=PlayerState(CurrentPlayer).Villains(kWiz_Holy).JackpotBase
  'jp2=PlayerState(CurrentPlayer).Villains(kWiz_Holy).JackpotValue

  if bInit then
    QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 1, 1, ""video-Holy"", ""wait0.mp4"", ""^^^^Collect Jackpots^To Light Super Jackpot^^^"" ", 2000, 1
    QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 1, 1, ""video-Holy"", ""wait1.mp4"", ""^^^^^^^4:"&cnt&" Shots To Light Super Jackpot^4:Super Jackpot="&FormatScore(jp1)&""" ", -1, 1
  Elseif cnt=0 then
    QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 1, 1, ""video-Holy"", ""wait1.mp4"", ""^^^^^^^6:Super Jackpot Is Lit^Super Jackpot="&FormatScore(jp1)&""" ", -1, 1
  else
'   QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 1, 1, ""video-Holy"", ""wait1.mp4"", ""^^^^^^^4:"&cnt&" Shots To Light Super Jackpot^4:Super Jackpot="&FormatScore(jp1)&""" ", -1, 1
    Msg1 = """^^^^12:"&score&"^^^^"""

    start = INT(RND*17)
    select case start
      case 0:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p1.mp4"", "&Msg1&" ", 1602, 1
      case 1:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p2.mp4"", "&Msg1&" ", 1966, 1
      case 2:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p3.mp4"", "&Msg1&" ", 1933, 1
      case 3:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p4.mp4"", "&Msg1&" ", 1233, 1
      case 4:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p5.mp4"", "&Msg1&" ", 2133, 1
      case 5:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p6.mp4"", "&Msg1&" ", 1766, 1
      case 6:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p7.mp4"", "&Msg1&" ", 1091, 1
      case 7:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p8.mp4"", "&Msg1&" ", 1466, 1
      case 8:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p9.mp4"", "&Msg1&" ",  666, 1
      case 9:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p10.mp4"", "&Msg1&" ", 1666, 1
      case 10:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p11.mp4"", "&Msg1&" ", 1833, 1
      case 11:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p12.mp4"", "&Msg1&" ", 1000, 1
      case 12:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p13.mp4"", "&Msg1&" ", 1393, 1
      case 13:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p14.mp4"", "&Msg1&" ", 1233, 1
      case 14:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p15.mp4"", "&Msg1&" ", 1439, 1
      case 15:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p16.mp4"", "&Msg1&" ", 2000, 1
      case 16:
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 0, 0, ""video-Holy"", ""p17.mp4"", "&Msg1&" ", 2089, 1
    End Select
    QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 1, 1, ""video-Holy"", ""wait1.mp4"", ""^^^^^^^4:"&cnt&" Shots To Light Super Jackpot^4:Super Jackpot="&FormatScore(jp1)&""" ", -1, 1
  End if


End Sub


Sub tmrBallTroughDelay_Timer
  if INT(RND*2) = 0 then
    PlaySoundVol "b66-holy-multiball", VolDef
  Else
    PlaySoundVol "b66-Multiball", VolDef
  End if
  ImageGrowShow "VMB.gif", True, 3500, ""
  EmptyBallLock
'VR BATS - Hook up to a light or something
  If VRBatsOn = false and VRBats = 1 Then RunBats(): VRBatsOn = True
'VR Bats End
  tmrBallTroughDelay.Enabled = False
End Sub

Sub SceneVMB_Wait1(bInit)
  Dim Msg1
  Dim Shots
  dim start
  Msg1="""^^^^^^^^"""

  if bInit then
    start=0
  else
    start = INT(RND*20) + 1
  End if

  select case start
    case 0:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 0, ""video-VMB"", ""a1.mp4"", "&Msg1&" ", 5100, 1
    case 1:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a2.mp4"", "&Msg1&" ", 2666, 1
    case 2:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a3.mp4"", "&Msg1&" ", 4533, 1
    case 3:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a4.mp4"", "&Msg1&" ", 4266, 1
    case 4:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a5.mp4"", "&Msg1&" ", 1200, 1
    case 5:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a6.mp4"", "&Msg1&" ", 4435, 1
    case 6:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a7.mp4"", "&Msg1&" ", 2136, 1
    case 7:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a8.mp4"", "&Msg1&" ", 1346, 1
    case 8:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a9.mp4"", "&Msg1&" ", 9636, 1
    case 9:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a10.mp4"","&Msg1&" ", 2266, 1
    case 10:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a11.mp4"", "&Msg1&" ", 5766, 1
    case 11:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a12.mp4"", "&Msg1&" ", 2466, 1
    case 12:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a13.mp4"", "&Msg1&" ", 3433, 1
    case 13:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a14.mp4"", "&Msg1&" ", 600, 1
    case 14:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a15.mp4"", "&Msg1&" ", 2466, 1
    case 15:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a16.mp4"", "&Msg1&" ", 666, 1
    case 16:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a17.mp4"", "&Msg1&" ", 4333, 1
    case 17:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a18.mp4"", "&Msg1&" ", 4333, 1
    case 18:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a19.mp4"", "&Msg1&" ", 1137, 1
    case 19:
      QueueSceneV kWiz_VillainMB, "SceneGeneralStart3 "&kWiz_VillainMB&", 0, 1, ""video-VMB"", ""a20.mp4"", "&Msg1&" ", 2136, 1

  End Select
  QueueSceneV kWiz_VillainMB, "SceneVMB_Wait1 False ", -1, 1

End Sub

Dim SceneBT_WaitPos
Sub SceneBT_Wait(bInit)
  Dim Msg1

  if PlayerState(CurrentPlayer).getPupScreen(kWiz_BatTurn)=-1 then exit sub ' Stop the loop just in case

  if bInit then
    PlaySoundVol "b66-brace-for-batturn", VolDef    ' 0x637
    SceneBT_WaitPos=0
    Msg1="""^^^Batmobile Adds Time,^Increases Hurry-Up Score,^And Re-Lights All Shots^^^"""
  Else
    if tmrHurryUp2.Enabled then
'     Msg1="""^^^^^^"&PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).JackpotBase
      Msg1=""""""   ' Set this to blank so we dont set the messages later
      PuPlayer.LabelSet Hurry2UpScreen,"GeneralCenter3", "", 1,"{'mt':2,'color':"&pupOrange&",'size':7}"
      PuPlayer.LabelSet Hurry2UpScreen,"GeneralCenter1", "", 1,"{'mt':2,'color':"&pupOrange&",'size':7}"
'     PuPlayer.LabelSet Hurry2UpScreen,"GeneralCenter2", "", 1,"{'mt':2,'color':"&pupOrange&",'size':7}"
      PuPlayer.LabelSet Hurry2UpScreen,"GeneralBottom1", "Shoot Flashing Arrows", 1,"{'mt':2,'color':"&pupOrange&",'size':7}"
      PuPlayer.LabelSet Hurry2UpScreen,"GeneralBottom2", "To Collect Parachutes", 1,"{'mt':2,'color':"&pupOrange&",'size':7}"
    Else
      Msg1="""^^^^^12:"&FormatScore(PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).JackpotBase)&"^^Shoot Flashing Arrows^To Collect Parachutes"""
'     Msg1="""^^^^^^^^"""
    End if
    SceneBT_WaitPos=SceneBT_WaitPos+1
    if SceneBT_WaitPos > 5 then SceneBT_WaitPos=1
  End if

''WriteToLog "     ", "SceneTutS3WaitPos:" & SceneBT_WaitPos
  select case SceneBT_WaitPos
    case 0:
      QueueSceneV kWiz_BatTurn, "SceneGeneralStart3 "&kWiz_BatTurn&", 0, 0, ""video-BT"", ""start2.mp4"", "&Msg1&" ", 2667, 1
    case 1:
      QueueSceneV kWiz_BatTurn, "SceneGeneralStart3 "&kWiz_BatTurn&", 0, 1, ""video-BT"", ""a1.mp4"", "&Msg1&" ", 1602, 1
    case 2:
      QueueSceneV kWiz_BatTurn, "SceneGeneralStart3 "&kWiz_BatTurn&", 0, 1, ""video-BT"", ""a2.mp4"", "&Msg1&" ", 2166, 1
    case 3:
      QueueSceneV kWiz_BatTurn, "SceneGeneralStart3 "&kWiz_BatTurn&", 0, 1, ""video-BT"", ""a3.mp4"", "&Msg1&" ", 1400, 1
    case 4:
      QueueSceneV kWiz_BatTurn, "SceneGeneralStart3 "&kWiz_BatTurn&", 0, 1, ""video-BT"", ""a4.mp4"", "&Msg1&" ", 882, 1
    case 5:
      QueueSceneV kWiz_BatTurn, "SceneGeneralStart3 "&kWiz_BatTurn&", 0, 1, ""video-BT"", ""a5.mp4"", "&Msg1&" ", 998, 1
    case 6:
      QueueSceneV kWiz_BatTurn, "SceneGeneralStart3 "&kWiz_BatTurn&", 0, 1, ""video-BT"", ""a6.mp4"", "&Msg1&" ", 1000, 1
    case 7:
      QueueSceneV kWiz_BatTurn, "SceneGeneralStart3 "&kWiz_BatTurn&", 0, 1, ""video-BT"", ""a7.mp4"", "&Msg1&" ", 766, 1
    case 8:
      QueueSceneV kWiz_BatTurn, "SceneGeneralStart3 "&kWiz_BatTurn&", 0, 1, ""video-BT"", ""a8.mp4"", "&Msg1&" ", 743, 1
  End Select
  QueueSceneV kWiz_BatTurn, "SceneBT_Wait False ", -1, 1


End Sub

Dim SceneTut2_S3Wait3Pos
Sub SceneTut2_S3Wait3(Msg1)
  Dim Msg2:Msg2="""^^^^^^^^Complete Flashing Shots"""
  dim i

  if PlayerState(CurrentPlayer).getPupScreen(kMinV_S3KingTut2)=-1 then exit sub ' Stop the loop just in case


  if Msg1 <> "" then
    Msg1 = """" & Msg1 & """"
    SceneTut2_S3Wait3Pos=0
  else
    Msg1 = Msg2
    SceneTut2_S3Wait3Pos=SceneTut2_S3Wait3Pos+1
  End if

'WriteToLog "     ", "SceneTutS3WaitPos:" & SceneTut2_S3Wait3Pos
  select case SceneTut2_S3Wait3Pos
    case 0:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""c1.mp4"", "&Msg1&" ", 2600, 1
    case 1:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""c2.mp4"", "&Msg1&" ", 833, 1
    case 2:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""c3.mp4"", "&Msg1&" ", 1633, 1
    case 3:
      QueueSceneV kMinV_S3KingTut2, "SceneGeneralStart3 "&kMinV_S3KingTut2&", 0, 1, ""video-Tut5"", ""c4.mp4"", "&Msg1&" ", 4766, 1
  End Select
  QueueSceneV kMinV_S3KingTut2, "SceneTut2_S3Wait3 """" ", -1, 1

  if SceneTut2_S3Wait3Pos = 3 then  SceneTut2_S3Wait3Pos=2  ' Loop on last one

End Sub




' Randomize All shots
Sub SceneShameS2Wait1()
  Dim Msg
  Dim Shots
  Dim JackpotValue
  dim start
  Shots=5-PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame)
  JackpotValue=PlayerState(CurrentPlayer).Jackpot(kMinV_S2Shame)
  Msg="""^^^^^^    Everything=32,500    ^"&Shots&" More Targets="& FormatScore(JackpotValue) &"^Shoot Flashing Standup Targets"""

  start = INT(RND*10)
  select case start
    case 0:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""a1.mp4"", "&Msg&" ", 1602, 1
    case 1:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""a2.mp4"", "&Msg&" ", 1066, 1
    case 2:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""a3.mp4"", "&Msg&" ", 2466, 1
    case 3:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""a4.mp4"", "&Msg&" ", 1602, 1
    case 4:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""a5.mp4"", "&Msg&" ", 1000, 1
    case 5:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""a6.mp4"", "&Msg&" ", 1346, 1
    case 6:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""a7.mp4"", "&Msg&" ", 3200, 1
    case 7:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""a8.mp4"", "&Msg&" ", 1033, 1
    case 8:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""a9.mp4"", "&Msg&" ", 1366, 1
    case 9:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""a10.mp4"","&Msg&" ", 1346, 1
  End Select
  QueueSceneV kMinV_S2Shame, "SceneShameS2Wait1 ", -1, 1
End Sub


' Play the first one on init and then Randomize the rest
Dim bSceneShameS2Wait2ShowScore
Sub SceneShameS2Wait2(bInit)
  Dim Msg
  Dim Shots
  Dim JackpotValue
  dim start
  Shots=10-PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame)
  JackpotValue=PlayerState(CurrentPlayer).Jackpot(kMinV_S2Shame)

  If bSceneShameS2Wait2ShowScore and bInit=False then
    Msg="""^^^^12:"&FormatScore(JackpotValue)&"^^^^"""
  elseif PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame) < 10 then
    Msg="""^^^^^^^"&Shots&" More Shots="&FormatScore(JackpotValue)&"^ Shoot Flashing Shots """
  Else
    Msg="""^^^^^^^All Shots=1,711,250^Completed - Shoot Flashing Shots"""
  End if

  if bInit then
    start = -1
  else
    start = INT(RND*11)
  End if
  bSceneShameS2Wait2ShowScore=False

  select case start
    case -1:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 0, ""video-Shame1"", ""b1.mp4"", "&Msg&" ", 2739, 1
    case 0:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""b2.mp4"", "&Msg&" ", 1066, 1
    case 1:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""b3.mp4"", "&Msg&" ", 1866, 1
    case 2:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""b4.mp4"", "&Msg&" ", 1066, 1
    case 3:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""b5.mp4"", "&Msg&" ", 3866, 1
    case 4:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""b6.mp4"", "&Msg&" ", 835, 1
    case 5:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""b7.mp4"", "&Msg&" ", 487, 1
    case 6:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""b8.mp4"", "&Msg&" ", 3738, 1
    case 7:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""b9.mp4"", "&Msg&" ", 3966, 1
    case 8:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""b10.mp4"","&Msg&" ", 1602, 1
    case 9:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""b11.mp4"","&Msg&" ", 2948, 1
    case 10:
      QueueSceneV kMinV_S2Shame, "SceneGeneralStart3 "&kMinV_S2Shame&", 0, 1, ""video-Shame1"", ""b12.mp4"","&Msg&" ", 966, 1
  End Select
  QueueSceneV kMinV_S2Shame, "SceneShameS2Wait2 False ", -1, 1
End Sub


Sub SceneFreezeS2Wait1()
  Dim Msg
  Msg="""^^^Unfreeze^All Frozen Shots^To Finish^^^"""
  QueueSceneV kMinV_S2MrFreeze, "SceneGeneralStart3 "&kMinV_S2MrFreeze&", 0, 0, ""video-Freeze"", ""start2.mp4"", "&Msg&" ", 4566, 1
  QueueSceneV kMinV_S2MrFreeze, "SceneGeneralStart3 "&kMinV_S2MrFreeze&", 0, 0, ""video-Freeze"", ""start3.mp4"", "&Msg&" ", 1166, 1
  Msg="""^^^^^^^^Shoot Flashing Shots"""
  QueueSceneV kMinV_S2MrFreeze, "SceneGeneralStart3 "&kMinV_S2MrFreeze&", 1, 1, ""video-Freeze"", ""wait1.mp4"", "&Msg&" ", -1, 1
End Sub

Sub SceneFreezeS2Wait2(bInit)
  Dim JackpotValue
  Dim Msg
  dim start
  Msg="""^^^Unfreeze^All Frozen Shots^To Finish^^^"""

  if bInit then
    start = -1
  else
    start = INT(RND*6)
  End if
  select case start
    case -1:
      QueueSceneV kMinV_S2MrFreeze, "SceneGeneralStart3 "&kMinV_S2MrFreeze&", 0, 0, ""video-Freeze"", ""a1.mp4"", "&Msg&" ", 3266, 1
    case 0:
      QueueSceneV kMinV_S2MrFreeze, "SceneGeneralStart3 "&kMinV_S2MrFreeze&", 0, 1, ""video-Freeze"", ""a2.mp4"", "&Msg&" ", 2136, 1
    case 1:
      QueueSceneV kMinV_S2MrFreeze, "SceneGeneralStart3 "&kMinV_S2MrFreeze&", 0, 1, ""video-Freeze"", ""a3.mp4"", "&Msg&" ", 2066, 1
    case 2:
      QueueSceneV kMinV_S2MrFreeze, "SceneGeneralStart3 "&kMinV_S2MrFreeze&", 0, 1, ""video-Freeze"", ""a4.mp4"", "&Msg&" ", 2000, 1
    case 3:
      QueueSceneV kMinV_S2MrFreeze, "SceneGeneralStart3 "&kMinV_S2MrFreeze&", 0, 1, ""video-Freeze"", ""a5.mp4"", "&Msg&" ", 4736, 1
    case 4:
      QueueSceneV kMinV_S2MrFreeze, "SceneGeneralStart3 "&kMinV_S2MrFreeze&", 0, 1, ""video-Freeze"", ""a6.mp4"", "&Msg&" ", 1602, 1
    case 5:
      QueueSceneV kMinV_S2MrFreeze, "SceneGeneralStart3 "&kMinV_S2MrFreeze&", 0, 1, ""video-Freeze"", ""a7.mp4"", "&Msg&" ", 2647, 1
  End Select
  QueueSceneV kMinV_S2MrFreeze, "SceneFreezeS2Wait2 False ", -1, 1
End Sub

Sub SceneEggS2Wait1()
  Dim JackpotValue
  Dim Msg
  dim start

  JackpotValue=PlayerState(CurrentPlayer).Jackpot(kMinV_S2EggHead)
  Msg="""^^^^^^^4:Gadget Button Lights Jackpot="& FormatScore(JackpotValue) &"^All Targets 300,000"""

' if PlayerState(CurrentPlayer).TProgress(kMinV_S2EggHead) >=8 then Msg="""^^^^^Super Jackpot Is Lit"""

  start = INT(RND*6)
  select case start
    case 0:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""a1.mp4"", "&Msg&" ", 800, 1
    case 1:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""a2.mp4"", "&Msg&" ", 882, 1
    case 2:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""a3.mp4"", "&Msg&" ", 966, 1
    case 3:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""a4.mp4"", "&Msg&" ", 743, 1
    case 4:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""a5.mp4"", "&Msg&" ", 743, 1
    case 5:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""a6.mp4"", "&Msg&" ", 1000, 1
  End Select
  QueueSceneV kMinV_S2EggHead, "SceneEggS2Wait1 ", -1, 1
End Sub

Sub SceneEggS2Wait2()
  Dim JackpotValue
  Dim Msg
  dim start

  JackpotValue=PlayerState(CurrentPlayer).Jackpot(kMinV_S2EggHead)
  Msg="""^^^^^^^Jackpot Is Lit For="& FormatScore(JackpotValue) &"^All Targets 300,000"""

' if PlayerState(CurrentPlayer).TProgress(kMinV_S2EggHead) >=8 then Msg="""^^^^^Super Jackpot Is Lit"""

  start = INT(RND*12)
  select case start
    case 0:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""b1.mp4"", "&Msg&" ", 1000, 1
    case 1:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""b2.mp4"", "&Msg&" ", 1439, 1
    case 2:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""b3.mp4"", "&Msg&" ", 1566, 1
    case 3:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""b4.mp4"", "&Msg&" ", 1800, 1
    case 4:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""b5.mp4"", "&Msg&" ", 1137, 1
    case 5:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""b6.mp4"", "&Msg&" ", 2438, 1
    case 6:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""b7.mp4"", "&Msg&" ", 433, 1
    case 7:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""b8.mp4"", "&Msg&" ", 2200, 1
    case 8:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""b9.mp4"", "&Msg&" ", 1137, 1
    case 9:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""b10.mp4"", "&Msg&" ", 600, 1
    case 10:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""b11.mp4"", "&Msg&" ", 1233, 1
    case 11:
      QueueSceneV kMinV_S2EggHead, "SceneGeneralStart3 "&kMinV_S2EggHead&", 0, 1, ""video-Egg1"", ""b12.mp4"", "&Msg&" ", 1741, 1
  End Select
  QueueSceneV kMinV_S2EggHead, "SceneEggS2Wait2 ", -1, 1
End Sub






Dim SceneTutS3WaitPos
Sub SceneTutS3Wait(bInit)
  Dim Msg:Msg="""^^^^^^^^Complete Flashing Shots"""
  dim i

  if PlayerState(CurrentPlayer).getPupScreen(kMinV_S3KingTut1)=-1 then exit sub ' Stop the loop just in case

  if bInit then
    SceneTutS3WaitPos=0
  else
    SceneTutS3WaitPos=SceneTutS3WaitPos+1
  End if


'WriteToLog "     ", "SceneTutS3WaitPos:" & SceneTutS3WaitPos
  select case SceneTutS3WaitPos
    case 0:
      QueueSceneV kMinV_S3KingTut1, "SceneGeneralStart3 "&kMinV_S3KingTut1&", 0, 1, ""video-Tut4"", ""a0.mp4"", "&Msg&" ", 2600, 1
    case 1:
      QueueSceneV kMinV_S3KingTut1, "SceneGeneralStart3 "&kMinV_S3KingTut1&", 0, 1, ""video-Tut4"", ""a1.mp4"", "&Msg&" ", 743, 1
    case 2:
      QueueSceneV kMinV_S3KingTut1, "SceneGeneralStart3 "&kMinV_S3KingTut1&", 0, 1, ""video-Tut4"", ""a2.mp4"", "&Msg&" ", 1366, 1
    case 3:
      QueueSceneV kMinV_S3KingTut1, "SceneGeneralStart3 "&kMinV_S3KingTut1&", 0, 1, ""video-Tut4"", ""a3.mp4"", "&Msg&" ", 2600, 1
    case 4:
      QueueSceneV kMinV_S3KingTut1, "SceneGeneralStart3 "&kMinV_S3KingTut1&", 0, 1, ""video-Tut4"", ""a4.mp4"", "&Msg&" ", 1233, 1
    case 5:
      QueueSceneV kMinV_S3KingTut1, "SceneGeneralStart3 "&kMinV_S3KingTut1&", 0, 1, ""video-Tut4"", ""a5.mp4"", "&Msg&" ", 1433, 1
    case 6:
      QueueSceneV kMinV_S3KingTut1, "SceneGeneralStart3 "&kMinV_S3KingTut1&", 0, 1, ""video-Tut4"", ""a6.mp4"", "&Msg&" ", 2066, 1
    case 7:
      QueueSceneV kMinV_S3KingTut1, "SceneGeneralStart3 "&kMinV_S3KingTut1&", 0, 1, ""video-Tut4"", ""a7.mp4"", "&Msg&" ", 2266, 1
    case 8:
      QueueSceneV kMinV_S3KingTut1, "SceneGeneralStart3 "&kMinV_S3KingTut1&", 0, 1, ""video-Tut4"", ""a8.mp4"", "&Msg&" ", 2200, 1
    case 9:
      QueueSceneV kMinV_S3KingTut1, "SceneGeneralStart3 "&kMinV_S3KingTut1&", 0, 1, ""video-Tut4"", ""a9.mp4"", "&Msg&" ", 2433, 1
    case 10:
      QueueSceneV kMinV_S3KingTut1, "SceneGeneralStart3 "&kMinV_S3KingTut1&", 0, 1, ""video-Tut4"", ""a10.mp4"", "&Msg&" ", 1766, 1
    case 11:
      QueueSceneV kMinV_S3KingTut1, "SceneGeneralStart3 "&kMinV_S3KingTut1&", 0, 1, ""video-Tut4"", ""a11.mp4"", "&Msg&" ", 1000, 1
    case 12:
      QueueSceneV kMinV_S3KingTut1, "SceneGeneralStart3 "&kMinV_S3KingTut1&", 0, 1, ""video-Tut4"", ""a12.mp4"", "&Msg&" ", 1266, 1
    case 13:
      QueueSceneV kMinV_S3KingTut1, "SceneGeneralStart3 "&kMinV_S3KingTut1&", 0, 1, ""video-Tut4"", ""a13.mp4"", "&Msg&" ", 1000, 1
    case 14:
      QueueSceneV kMinV_S3KingTut1, "SceneGeneralStart3 "&kMinV_S3KingTut1&", 0, 1, ""video-Tut4"", ""a14.mp4"", "&Msg&" ", 1000, 1
  End Select
  QueueSceneV kMinV_S3KingTut1, "SceneTutS3Wait False ", -1, 1

  if SceneTutS3WaitPos = 14 then  SceneTutS3WaitPos=8   ' Loop

End Sub


Dim SceneBookwormWait1Pos
Sub SceneBookwormWait1(bInit)
  Dim Msg:Msg="""^^^^^^^^Complete Flashing Shots"""
  dim i

  if PlayerState(CurrentPlayer).getPupScreen(kMinV_S1Bookworm)=-1 then exit sub ' Stop the loop just in case

  if bInit then
    SceneBookwormWait1Pos=0
  else
    SceneBookwormWait1Pos=SceneBookwormWait1Pos+1
  End if


'WriteToLog "     ", "SceneBookwormWait1Pos Pos:" & SceneBookwormWait1Pos
  select case SceneBookwormWait1Pos
    case 0:
      QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 "&kMinV_S1Bookworm&", 0, 1, ""video-Bookworm"", ""a1.mp4"", "&Msg&" ", 3000, 1
    case 1:
      QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 "&kMinV_S1Bookworm&", 0, 1, ""video-Bookworm"", ""a2.mp4"", "&Msg&" ", 6640, 1
    case 2:
      QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 "&kMinV_S1Bookworm&", 0, 1, ""video-Bookworm"", ""a3.mp4"", "&Msg&" ", 6366, 1
    case 3:
      QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 "&kMinV_S1Bookworm&", 0, 1, ""video-Bookworm"", ""a4.mp4"", "&Msg&" ", 3000, 1
    case 4:
      QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 "&kMinV_S1Bookworm&", 0, 1, ""video-Bookworm"", ""a5.mp4"", "&Msg&" ", 3200, 1
    case 5:
      QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 "&kMinV_S1Bookworm&", 0, 1, ""video-Bookworm"", ""a6.mp4"", "&Msg&" ", 11981, 1
  End Select
  QueueSceneV kMinV_S1Bookworm, "SceneBookwormWait1 False ", -1, 1

  if SceneBookwormWait1Pos = 5 then SceneBookwormWait1Pos=-1  ' Loop

End Sub




Sub SceneHatterS1Wait1()
  Dim Msg:Msg="""^^^^^^^^Complete Flashing Shots"""
  QueueSceneV kMinV_S1MadHatter, "SceneGeneralStart3 "&kMinV_S1MadHatter&", 0, 1, ""video-Hatter1"", ""a1.mp4"", "&Msg&" ", 3599, 1
  QueueSceneV kMinV_S1MadHatter, "SceneGeneralStart3 "&kMinV_S1MadHatter&", 0, 1, ""video-Hatter1"", ""a2.mp4"", "&Msg&" ", 1266, 1
  QueueSceneV kMinV_S1MadHatter, "SceneGeneralStart3 "&kMinV_S1MadHatter&", 0, 1, ""video-Hatter1"", ""a3.mp4"", "&Msg&" ", 1602, 1
  QueueSceneV kMinV_S1MadHatter, "SceneGeneralStart3 "&kMinV_S1MadHatter&", 0, 1, ""video-Hatter1"", ""a4.mp4"", "&Msg&" ",  835, 1
  QueueSceneV kMinV_S1MadHatter, "SceneGeneralStart3 "&kMinV_S1MadHatter&", 0, 1, ""video-Hatter1"", ""a5.mp4"", "&Msg&" ", 3833, 1
  QueueSceneV kMinV_S1MadHatter, "SceneGeneralStart3 "&kMinV_S1MadHatter&", 1, 1, ""video-Hatter1"", ""a6.mp4"", "&Msg&" ", 3482, 1
End Sub

Sub SceneHatterS1Wait2()
  Dim Msg:Msg="""^^^^^^^^Complete Flashing Shots"""
  QueueSceneV kMinV_S1MadHatter, "SceneGeneralStart3 "&kMinV_S1MadHatter&", 0, 1, ""video-Hatter1"", ""b1.mp4"", "&Msg&" ", 2466, 1
  QueueSceneV kMinV_S1MadHatter, "SceneGeneralStart3 "&kMinV_S1MadHatter&", 0, 1, ""video-Hatter1"", ""b2.mp4"", "&Msg&" ", 2647, 1
  QueueSceneV kMinV_S1MadHatter, "SceneHatterS1Wait2 ", -1, 1
End Sub

Dim SceneTutS2Wait1Pos
Sub SceneTutS2Wait1(bInit)
  Dim Msg:Msg="""^^^^Complete Shots To Finish^^^^"""
  dim i

  if PlayerState(CurrentPlayer).getPupScreen(kMinV_S2KingTut1)=-1 then exit sub ' Stop the loop just in case

  if bInit then
    SceneTutS2Wait1Pos=0
  else
    SceneTutS2Wait1Pos=SceneTutS2Wait1Pos+1
  End if


'WriteToLog "     ", "SceneTutS2Wait1 Pos:" & SceneTutS2Wait1Pos
  select case SceneTutS2Wait1Pos
    case 0:
      QueueSceneV kMinV_S2KingTut1, "SceneGeneralStart3 "&kMinV_S2KingTut1&", 0, 1, ""video-Tut2"", ""a0.mp4"", "&Msg&" ", 7685, 1
    case 1:
      QueueSceneV kMinV_S2KingTut1, "SceneGeneralStart3 "&kMinV_S2KingTut1&", 0, 1, ""video-Tut2"", ""a1.mp4"", "&Msg&" ", 3482, 1
    case 2:
      QueueSceneV kMinV_S2KingTut1, "SceneGeneralStart3 "&kMinV_S2KingTut1&", 0, 1, ""video-Tut2"", ""a2.mp4"", "&Msg&" ", 3599, 1
    case 3:
      QueueSceneV kMinV_S2KingTut1, "SceneGeneralStart3 "&kMinV_S2KingTut1&", 0, 1, ""video-Tut2"", ""a3.mp4"", "&Msg&" ", 4000, 1
    case 4:
      QueueSceneV kMinV_S2KingTut1, "SceneGeneralStart3 "&kMinV_S2KingTut1&", 0, 1, ""video-Tut2"", ""a4.mp4"", "&Msg&" ", 5688, 1
    case 5:
      QueueSceneV kMinV_S2KingTut1, "SceneGeneralStart3 "&kMinV_S2KingTut1&", 0, 1, ""video-Tut2"", ""a5.mp4"", "&Msg&" ", 3766, 1
    case 6:
      QueueSceneV kMinV_S2KingTut1, "SceneGeneralStart3 "&kMinV_S2KingTut1&", 0, 1, ""video-Tut2"", ""a6.mp4"", "&Msg&" ", 2766, 1
    case 7:
      QueueSceneV kMinV_S2KingTut1, "SceneGeneralStart3 "&kMinV_S2KingTut1&", 0, 1, ""video-Tut2"", ""a7.mp4"", "&Msg&" ", 2266, 1
    case 8:
      QueueSceneV kMinV_S2KingTut1, "SceneGeneralStart3 "&kMinV_S2KingTut1&", 0, 1, ""video-Tut2"", ""a8.mp4"", "&Msg&" ", 2345, 1
    case 9:
      QueueSceneV kMinV_S2KingTut1, "SceneGeneralStart3 "&kMinV_S2KingTut1&", 0, 1, ""video-Tut2"", ""a9.mp4"", "&Msg&" ", 1233, 1
  End Select
  QueueSceneV kMinV_S2KingTut1, "SceneTutS2Wait1 False ", -1, 1

  if SceneTutS2Wait1Pos = 9 then  SceneTutS2Wait1Pos=6  ' Loop last 3

End Sub

Dim SceneBookwormWait2Pos
Sub SceneBookwormWait2(bInit)
  Dim Msg:Msg="""^^^^^^^^Complete Flashing Shots"""
  dim i

  if PlayerState(CurrentPlayer).getPupScreen(kMinV_S1Bookworm)=-1 then exit sub ' Stop the loop just in case

  if bInit then
    SceneBookwormWait2Pos=0
  else
    SceneBookwormWait2Pos=SceneBookwormWait2Pos+1
  End if


'WriteToLog "     ", "SceneBookwormWait2Pos Pos:" & SceneBookwormWait2Pos
  select case SceneBookwormWait2Pos
    case 0:
      QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 "&kMinV_S1Bookworm&", 0, 1, ""video-Bookworm"", ""b1.mp4"", "&Msg&" ", 2766, 1
    case 1:
      QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 "&kMinV_S1Bookworm&", 0, 1, ""video-Bookworm"", ""b2.mp4"", "&Msg&" ", 4690, 1
    case 2:
      QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 "&kMinV_S1Bookworm&", 0, 1, ""video-Bookworm"", ""b3.mp4"", "&Msg&" ", 533, 1
    case 3:
      QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 "&kMinV_S1Bookworm&", 0, 1, ""video-Bookworm"", ""b4.mp4"", "&Msg&" ", 5038, 1
    case 4:
      QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 "&kMinV_S1Bookworm&", 0, 1, ""video-Bookworm"", ""b5.mp4"", "&Msg&" ", 2043, 1
    case 5:
      QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 "&kMinV_S1Bookworm&", 0, 1, ""video-Bookworm"", ""b6.mp4"", "&Msg&" ", 1633, 1
    case 6:
      QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 "&kMinV_S1Bookworm&", 0, 1, ""video-Bookworm"", ""b7.mp4"", "&Msg&" ", 3166, 1
  End Select
  QueueSceneV kMinV_S1Bookworm, "SceneBookwormWait2 False ", -1, 1

  if SceneBookwormWait2Pos = 6 then SceneBookwormWait2Pos=0   ' Loop (Skip first)

End Sub


Dim SceneTutS1WaitPos
Sub SceneTutS1Wait(bInit)
  Dim Msg:Msg="""^^^^^^^^Complete Flashing Shots"""
  dim i

  if PlayerState(CurrentPlayer).getPupScreen(kMinV_S1KingTut)=-1 then exit sub  ' Stop the loop just in case

  if bInit then
    SceneTutS1WaitPos=0
  else
    SceneTutS1WaitPos=SceneTutS1WaitPos+(INT(RND*2)+1)    ' Randomly choose next or skip
  End if
  SceneTutS1WaitPos=SceneTutS1WaitPos mod 5

  'if PlayerState(CurrentPlayer).TProgress(kMajV_S2Peng) >=8 then Msg="""^^^^^Super Jackpot Is Lit"""
'WriteToLog "     ", "SceneTutS1Wait Pos:" & SceneTutS1WaitPos
  select case SceneTutS1WaitPos
    case 0:
      QueueSceneV kMinV_S1KingTut, "SceneGeneralStart3 "&kMinV_S1KingTut&", 0, 1, ""video-Tut1"", ""a1.mp4"", "&Msg&" ", 3738, 1
    case 1:
      QueueSceneV kMinV_S1KingTut, "SceneGeneralStart3 "&kMinV_S1KingTut&", 0, 1, ""video-Tut1"", ""a2.mp4"", "&Msg&" ", 6600, 1
    case 2:
      QueueSceneV kMinV_S1KingTut, "SceneGeneralStart3 "&kMinV_S1KingTut&", 0, 1, ""video-Tut1"", ""a3.mp4"", "&Msg&" ", 3800, 1
  End Select
  QueueSceneV kMinV_S1KingTut, "SceneTutS1Wait False ", -1, 1

End Sub

Dim SceneTutS1Wait2Pos
Sub SceneTutS1Wait2(bInit)
  Dim Msg:Msg="""^^^^^^^^Complete Flashing Shots"""
  dim i

  if PlayerState(CurrentPlayer).getPupScreen(kMinV_S1KingTut)=-1 then exit sub  ' Stop the loop just in case

  if bInit then
    SceneTutS1Wait2Pos=0
  else
    SceneTutS1Wait2Pos=SceneTutS1Wait2Pos+1
  End if
  if SceneTutS1Wait2Pos = 8 then  SceneTutS1Wait2Pos=6          ' loop on last 2


'WriteToLog "     ", "SceneTutS1Wait2 Pos:" & SceneTutS1Wait2Pos
  select case SceneTutS1Wait2Pos
    case 0:
      QueueSceneV kMinV_S1KingTut, "SceneGeneralStart3 "&kMinV_S1KingTut&", 0, 1, ""video-Tut1"", ""b0.mp4"", "&Msg&" ", 4202, 1
    case 1:
      QueueSceneV kMinV_S1KingTut, "SceneGeneralStart3 "&kMinV_S1KingTut&", 0, 1, ""video-Tut1"", ""b1.mp4"", "&Msg&" ", 5433, 1
    case 2:
      QueueSceneV kMinV_S1KingTut, "SceneGeneralStart3 "&kMinV_S1KingTut&", 0, 1, ""video-Tut1"", ""b2.mp4"", "&Msg&" ", 3466, 1
    case 3:
      QueueSceneV kMinV_S1KingTut, "SceneGeneralStart3 "&kMinV_S1KingTut&", 0, 1, ""video-Tut1"", ""b3.mp4"", "&Msg&" ", 1137, 1
    case 4:
      QueueSceneV kMinV_S1KingTut, "SceneGeneralStart3 "&kMinV_S1KingTut&", 0, 1, ""video-Tut1"", ""b4.mp4"", "&Msg&" ", 2345, 1
    case 5:
      QueueSceneV kMinV_S1KingTut, "SceneGeneralStart3 "&kMinV_S1KingTut&", 0, 1, ""video-Tut1"", ""b5.mp4"", "&Msg&" ", 2633, 1
    case 6:
      QueueSceneV kMinV_S1KingTut, "SceneGeneralStart3 "&kMinV_S1KingTut&", 0, 1, ""video-Tut1"", ""b6.mp4"", "&Msg&" ", 1602, 1
    case 7:
      QueueSceneV kMinV_S1KingTut, "SceneGeneralStart3 "&kMinV_S1KingTut&", 0, 1, ""video-Tut1"", ""b7.mp4"", "&Msg&" ", 5085, 1
  End Select
  QueueSceneV kMinV_S1KingTut, "SceneTutS1Wait2 False ", -1, 1

End Sub

Sub SceneGeneralPengS1W1Start(Msg1)
  Dim Msg:Msg="""^^^^^^^^Collect All Umbrellas"""

  QueueSceneV kMajV_S1Peng, "SceneGeneralStart3 "&kMajV_S1Peng&", 0, 0, ""video-Penguin"", ""batphone2.mp4"", """&Msg1&""" ", 2252, 1
  QueueSceneV kMajV_S1Peng, "SceneGeneralStart3 "&kMajV_S1Peng&", 0, 0, ""video-Penguin"", ""p1.mp4"", "&Msg&" ", 7082, 1
  QueueSceneV kMajV_S1Peng, "SceneGeneralStart3 "&kMajV_S1Peng&", 1, 0, ""video-Penguin"", ""wait1.mp4"", "&Msg&" ", -1, 1
End Sub

Sub SceneGeneralPengS2W1aStart(villain)
  Dim Msg:Msg="""^^^^^Collect All Umbrellas"""
  dim i
  dim start
  Dim Screen
  Screen = PlayerState(CurrentPlayer).getPupScreen(villain)

  if PlayerState(CurrentPlayer).TProgress(kMajV_S2Peng) >=8 then Msg="""^^^^^Super Jackpot Is Lit"""

  start = INT(RND*5)
  for i = start to start+4
    select case (i mod 5)
      case 0:
        QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""video-Penguin2"", ""a1.mp4"", "&Msg&" ", 1833, 1
      case 1:
        QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""video-Penguin2"", ""a2.mp4"", "&Msg&" ", 2266, 1
      case 2:
        QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""video-Penguin2"", ""a3.mp4"", "&Msg&" ", 3343, 1
      case 3:
        QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""video-Penguin2"", ""a4.mp4"", "&Msg&" ", 1666, 1
      case 4:
        QueueSceneS screen, "SceneGeneralStart2 "&screen&", 0, 1, ""video-Penguin2"", ""a5.mp4"", "&Msg&" ", 3134, 1
    End Select
  Next
  QueueSceneS screen, "SceneGeneralPengS2W1aStart "&villain&" ", -1, 1
End Sub


Sub SceneGeneralRiddlerS2W1Start(villain)
  Dim Msg
  Dim Screen
  Screen = PlayerState(CurrentPlayer).getPupScreen(villain)

  if PlayerState(CurrentPlayer).TProgress(kMajV_S2Riddler) < 13 then
    Msg="""^^^^" & 13 - PlayerState(CurrentPlayer).TProgress(kMajV_S2Riddler) & " Shots^To Light Super Jackpot"""
  Else
    Msg="""^^^^^Super Jackpot Is Lit"""
  End If

  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Riddler2"", ""a1.mp4"", "&Msg&" ", 1433, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Riddler2"", ""a2.mp4"", "&Msg&" ", 4600, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Riddler2"", ""a3.mp4"", "&Msg&" ", 2438, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Riddler2"", ""a4.mp4"", "&Msg&" ", 2166, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Riddler2"", ""a5.mp4"", "&Msg&" ", 866, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Riddler2"", ""a6.mp4"", "&Msg&" ", 1000, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Riddler2"", ""a7.mp4"", "&Msg&" ", 1950, 1
  QueueSceneS screen, "SceneGeneralRiddlerS2W1Start "&villain&" ", -1, 1
End Sub

Sub SceneGeneralCatS1W1aStart(villain)  ' Season1 Wave 1a
  Dim Screen
  Screen = PlayerState(CurrentPlayer).getPupScreen(villain)
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""a2.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 1666, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""a3.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 1633, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""a4.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 2800, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""a5.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 1033, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""a6.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 1633, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""a7.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 3000, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""a8.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 2766, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""a9.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 3134, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""a10.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 1633, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""a11.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 3250, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""a12.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 2433, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""a13.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 1633, 1
  QueueSceneS screen, "SceneGeneralCatS1W1aStart "&villain&" ", -1, 1
End Sub

Sub SceneGeneralCatS1W1bStart(villain)  ' Season1 Wave 1b
  Dim Screen
  Screen = PlayerState(CurrentPlayer).getPupScreen(villain)
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""b1.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 2089, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""b2.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 4266, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""b3.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 800, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""b4.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 2433, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""b5.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 2400, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""b6.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 1439, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""b7.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 1044, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""b8.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 1137, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""b9.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 2400, 1
  QueueSceneS screen, "SceneGeneralCatS1W1bStart "&villain&" ", -1, 1
End Sub

Sub SceneGeneralCatS1W1cStart(villain)  ' Season1 Wave 1c
  Dim Screen
  Screen = PlayerState(CurrentPlayer).getPupScreen(villain)
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""c1.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 7366, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""c2.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 2833, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""c3.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 5201, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""c4.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 4202, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""c5.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 2043, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""c6.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 3066, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman"", ""c7.mp4"", ""^^^^^Shoot 'Gadget' Targets"" ", 1366, 1
  QueueSceneS screen, "SceneGeneralCatS1W1cStart "&villain&" ", -1, 1
End Sub

Sub SceneGeneralCatS2W2Start(villain, Multiplier, bInit)  ' Season2 Wave 2
  Dim Screen
  Screen = PlayerState(CurrentPlayer).getPupScreen(villain)

  if bInit then
    QueueSceneS screen, "SceneGeneralStart3 "&villain&", 0, 0, ""video-Catwoman2"", ""catwoman-p8.mp4"", ""^^^All Catwoman Scores^" & Multiplier & "X^^^^"" ", 2800, 1
  else
    QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman2"", ""catwoman-p9.mp4"", ""^^^^^Shoot Flashing Shots"" ", 3266, 1
    QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman2"", ""catwoman-p10.mp4"", ""^^^^^Shoot Flashing Shots"" ", 1393, 1
    QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman2"", ""catwoman-p11.mp4"", ""^^^^^Shoot Flashing Shots"" ", 1666, 1
    QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman2"", ""catwoman-p12.mp4"", ""^^^^^Shoot Flashing Shots"" ", 2600, 1
    QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman2"", ""catwoman-p13.mp4"", ""^^^^^Shoot Flashing Shots"" ", 3436, 1
    QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman2"", ""catwoman-p14.mp4"", ""^^^^^Shoot Flashing Shots"" ", 2533, 1
  End if
  QueueSceneS screen, "SceneGeneralCatS2W2Start "&villain&", """", False ", -1, 1
End Sub

Sub SceneGeneralCatS2W3Start(villain) ' Season2 Wave 3
  Dim Shots
  Dim Msg
  Dim Screen
  Screen = PlayerState(CurrentPlayer).getPupScreen(villain)

  Shots=22-PlayerState(CurrentPlayer).TProgress(kMajV_S2CatWoman)
  if Shots=0 then
    Msg = "^^^^^Super Jackpot Is Lit"
  else
    Msg = "^^^^"&Shots&" Shots^To Capture Catwoman"
  End if

  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman2"", ""catwoman-p16.mp4"", """&Msg&""" ", 1200, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman2"", ""catwoman-p17.mp4"", """&Msg&""" ", 2000, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman2"", ""catwoman-p18.mp4"", """&Msg&""" ", 2066, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman2"", ""catwoman-p19.mp4"", """&Msg&""" ", 3233, 1
  QueueSceneS screen, "SceneGeneralStart2 "&Screen&", 0, 1, ""video-Catwoman2"", ""catwoman-p20.mp4"", """&Msg&""" ", 4466, 1
  QueueSceneS screen, "SceneGeneralCatS2W3Start "&villain&" ", -1, 1
End Sub



Sub SceneGeneralStart2(screen, bLoop, bMute, VideoPath, VideoName, Messages)  ' TopMsg1^TopMsg2^MiddleMsg1^MiddleMsg2^BottomMsg1^BottomMsg2
  Dim vol
  dim msgs, bSkipMessages
  if Messages <> "" then
    msgs = Split(Messages, "^")
    bSkipMessages=False
  Else
    bSkipMessages=True
  End if

  if bMute then   ' These videos are muted
    vol=0
  Else
    vol=1
  End If

' playclear screen  ' This causes flicker because we call the stop between screens
  if bSkipMessages = False then
    PuPlayer.LabelSet screen,"GeneralTop1",msgs(0),1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
    PuPlayer.LabelSet screen,"GeneralTop2",msgs(1), 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
    PuPlayer.LabelSet screen,"GeneralCenter1",msgs(2), 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
    PuPlayer.LabelSet screen,"GeneralCenter2",msgs(3), 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
    PuPlayer.LabelSet screen,"GeneralBottom1",msgs(4), 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
    PuPlayer.LabelSet screen,"GeneralBottom2",msgs(5), 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
    PuPlayer.LabelSet screen,"GeneralTop3","",    1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
    PuPlayer.LabelSet screen,"GeneralCenter3","",   1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
    PuPlayer.LabelSet screen,"GeneralBottom3","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  End if
  playmedia VideoName, VideoPath, screen, "", -1, "", vol, 1
  if bLoop then
    'PuPlayer.SetBackGround screen, 1
    PuPlayer.SetLoop screen, 1
  End If
End Sub

Class clsPopups
  Public Enabled
  Public Field
  Public Message
  Public Start
  Public EndPos
  Public Step
  Public Image
  Public SlideVar   ' Which variable do we change xpos or ypos
  Public textSize
  Public textXpos
  Public labelYpos
  Public textOffset
  Public Visible
End Class
dim ii
Dim Popups(10)    ' [Size][Enabled, Field, Message, Start, End, Step, Image, Text-xPos, label-ypos, textOffset]
For ii=0 to 10
  Set Popups(ii)=new clsPopups
  Popups(ii).Enabled = False
  Popups(ii).visible = False
Next


Sub ShowPopupLabel(idx, Messages, bHide, lblColor)  ' Positions 0=Bottom,1=RightMed,2=RightSmall,3=Top,4=LeftTall,5=LeftMedCenter,6=RightMedCenter,7=LeftRoundedCorner

  ' Choose color
  Dim cColor:cColor="popOrange"
  if lblColor<>"" then
    cColor="pop"&lblColor
  else  ' Popups are colored base on Mode on the main screen
    if PlayerState(CurrentPlayer).isActive(kWiz_VillainMB) and sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kWiz_VillainMB) then
      cColor="popWhite"
    elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Joker)=2 or  PlayerState(CurrentPlayer).isQual(kMajV_S2Joker)=2 then
      cColor="popRed"
    elseif PlayerState(CurrentPlayer).isQual(kMajV_S1CatWoman)=2 or PlayerState(CurrentPlayer).isQual(kMajV_S2CatWoman)=2 then
      cColor="popPink"
    elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Peng)=2 or  PlayerState(CurrentPlayer).isQual(kMajV_S2Peng)=2 then
      cColor="popPurple"
    elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Riddler)=2 or  PlayerState(CurrentPlayer).isQual(kMajV_S2Riddler)=2 then
      cColor="popGreen"
    elseif PlayerState(CurrentPlayer).isActive(kMinV_S1Bookworm) then   ' I think they might all have a different color
      cColor="popGreen"
    End if
  End if

  ' show popup
  select case idx
    case 0: ShowLabelB1 Messages, bHide, cColor
    case 1: ShowLabelR1 Messages, bHide, cColor
    case 2: ShowLabelR2 Messages, bHide, cColor
    case 3: ShowLabelT1 Messages, bHide, cColor
    case 4: ShowLabelL4 Messages, bHide, cColor
    case 5: ShowLabelL5 Messages, bHide, cColor
    case 6: ShowLabelR6 Messages, bHide, cColor
    case 7: ShowLabelL6 Messages, bHide, cColor

  End Select
End Sub

Sub ShowLabelR6(Messages, bHide, lblColor)
  Dim idx:idx=6
  Dim idxImg:idxImg=1
  if bHide then
    if Popups(idx).Visible = True then      ' If it is already displayed
      tmrPopupsDisplay idx, True
    else                    ' Not displayed yet.. wait a sec
      vpmTimer.AddTimer 20, "tmrPopupsDisplay "&idx&", True '"
    End if
  elseif bHide=False then
    puPlayer.LabelSet pBackglass,"PopRBg", "PupOverlays\\" & lblColor & idxImg & ".png",0,"{'mt':2,'width':25, 'height':24.5, 'yalign':0, 'ypos':20,'xpos':99}"

    Popups(idx).Field = "PopR"
    Popups(idx).Message = Messages
    Popups(idx).Start = 99
    Popups(idx).EndPos = 74.5
    Popups(idx).Step = -2.4
    Popups(idx).Image = "PupOverlays\\"&lblColor&idxImg&".png"
    Popups(idx).SlideVar = "xpos"
    Popups(idx).textSize = 3
    Popups(idx).textXPos = 87
    Popups(idx).labelYpos = 22
    Popups(idx).textOffset = 4
    Popups(idx).Enabled = True    ' Enable it last
    tmrPopups.Enabled = True
  End if
End Sub


Sub ShowLabelL5(Messages, bHide, lblColor)
  Dim idx:idx=5
  Dim idxImg:idxImg=1
  if bHide then
'WriteToLog "     ", "HideLabel:"
    if Popups(idx).Visible = True then      ' If it is already displayed
      tmrPopupsDisplay idx, True
    else                    ' Not displayed yet.. wait a sec
      vpmTimer.AddTimer 20, "tmrPopupsDisplay "&idx&", True '"
    End if
  elseif bHide=False then
'WriteToLog "     ", "AddLabel:"
    puPlayer.LabelSet pBackglass,"PopLBg", "PupOverlays\\" & lblColor & idxImg &".png",0,"{'mt':2,'width':25, 'height':24.5, 'yalign':0, 'ypos':20,'xpos':0}"

    Popups(idx).Field = "PopL"
    Popups(idx).Message = Messages
    Popups(idx).Start = -1
    Popups(idx).EndPos = 26
    Popups(idx).Step = 6
    Popups(idx).Image = "PupOverlays\\"&lblColor&idxImg&".png"
    Popups(idx).SlideVar = "xpos"
    Popups(idx).textSize = 3.5
    Popups(idx).textXPos = 13.5
    Popups(idx).labelYpos = 25
    Popups(idx).textOffset = 5.5
    Popups(idx).Enabled = True    ' Enable it last
    tmrPopups.Enabled = True
  End if
End Sub

Sub ShowLabelL6(Messages, bHide, lblColor)
  Dim idx:idx=5
  Dim idxImg:idxImg=5
  if bHide then
'WriteToLog "     ", "HideLabel:"
    if Popups(idx).Visible = True then      ' If it is already displayed
      tmrPopupsDisplay idx, True
    else                    ' Not displayed yet.. wait a sec
      vpmTimer.AddTimer 20, "tmrPopupsDisplay "&idx&", True '"
    End if
  elseif bHide=False then
'WriteToLog "     ", "AddLabel:"
    puPlayer.LabelSet pBackglass,"PopLBg", "PupOverlays\\" & lblColor & idxImg &".png",0,"{'mt':2,'width':28, 'height':48, 'yalign':0, 'ypos':10,'xpos':0}"

    Popups(idx).Field = "PopL"
    Popups(idx).Message = Messages
    Popups(idx).Start = -1
    Popups(idx).EndPos = 26
    Popups(idx).Step = 6
    Popups(idx).Image = "PupOverlays\\"&lblColor&idxImg&".png"
    Popups(idx).SlideVar = "xpos"
    Popups(idx).textSize = 2
    Popups(idx).textXPos = 12
    Popups(idx).labelYpos = 28
    Popups(idx).textOffset = 3.5
    Popups(idx).Enabled = True    ' Enable it last
    tmrPopups.Enabled = True
  End if
End Sub


Sub ShowLabelB1(Messages, bHide, lblColor)      ' Slide in label from Bottom
  Dim idx:idx=0
  Dim idxImg:idxImg=3
  Dim Count
  if bHide then
    if Popups(idx).Visible = True then      ' If it is already displayed
      tmrPopupsDisplay idx, True
    else                    ' Not displayed yet.. wait a sec
      vpmTimer.AddTimer 20, "tmrPopupsDisplay "&idx&", True '"
    End if
  elseif bHide=False then
    puPlayer.LabelSet pBackglass,"PopTBg", "PupOverlays\\" & lblColor & idxImg & ".png",0,"{'mt':2,'width':54, 'height':35,'yalign':0, 'ypos':0,'xpos':50}"

    Count=(Len(Messages) - Len(Replace(Messages, "^", ""))) / Len("^")

    Popups(idx).Field = "PopT"
    Popups(idx).Message = Messages
    Popups(idx).Start = 100
    Popups(idx).EndPos = 69
    Popups(idx).Step = -2.4
    Popups(idx).Image = "PupOverlays\\"&lblColor&idxImg&".png"
    Popups(idx).SlideVar = "ypos"
    if Count=1 then           ' Only 2 Rows
      Popups(idx).textSize = 5
      Popups(idx).textOffset = 7
      Popups(idx).labelYpos = 80
    Else
      Popups(idx).textSize = 4
      Popups(idx).textOffset = 7
      Popups(idx).labelYpos = 77
    End if
    Popups(idx).textXPos = 50
    Popups(idx).Enabled = True    ' Enable it last
    tmrPopups.Enabled = True
  End if
End Sub

Sub ShowLabelT1(Messages, bHide, lblColor)
  Dim idx:idx=3
  if bHide then
    if Popups(idx).Visible = True then      ' If it is already displayed
      tmrPopupsDisplay idx, True
    else                    ' Not displayed yet.. wait a sec
      vpmTimer.AddTimer 20, "tmrPopupsDisplay "&idx&", True '"
    End if
  elseif bHide=False then
    puPlayer.LabelSet pBackglass,"PopTBg", "PupOverlays\\" & lblColor & idx & ".png",0,"{'mt':2,'width':54, 'height':30, 'yalign':2, 'ypos':0,'xpos':50}"

    Popups(idx).Field = "PopT"
    Popups(idx).Message = Messages
    Popups(idx).Start = 0
    Popups(idx).EndPos = 27
    Popups(idx).Step = 2.4
    Popups(idx).Image = "PupOverlays\\"&lblColor&idx&".png"
    Popups(idx).SlideVar = "ypos"
    Popups(idx).textSize = 4.5
    Popups(idx).textXPos = 50
    Popups(idx).labelYpos = 3
    Popups(idx).textOffset = 7
    Popups(idx).Enabled = True    ' Enable it last
    tmrPopups.Enabled = True
  End if
End Sub

Sub ShowLabelR1(Messages, bHide, lblColor)
  Dim idx:idx=1
  if bHide then
    if Popups(idx).Visible = True then      ' If it is already displayed
      tmrPopupsDisplay idx, True
    else                    ' Not displayed yet.. wait a sec
      vpmTimer.AddTimer 20, "tmrPopupsDisplay "&idx&", True '"
    End if
  elseif bHide=False then
    puPlayer.LabelSet pBackglass,"PopRBg", "PupOverlays\\" & lblColor & idx & ".png",0,"{'mt':2,'width':25, 'height':24.5, 'ypos':50,'xpos':99}"

    Popups(idx).Field = "PopR"
    Popups(idx).Message = Messages
    Popups(idx).Start = 99
    Popups(idx).EndPos = 74.5
    Popups(idx).Step = -2.4
    Popups(idx).Image = "PupOverlays\\"&lblColor&idx&".png"
    Popups(idx).SlideVar = "xpos"
    Popups(idx).textSize = 3
    Popups(idx).textXPos = 87
    Popups(idx).labelYpos = 52
    Popups(idx).textOffset = 4
    Popups(idx).Enabled = True    ' Enable it last
    tmrPopups.Enabled = True
  End if
End Sub

Sub ShowLabelR2(Messages, bHide, lblColor)
  Dim idx:idx=2
  if bHide then
    if Popups(idx).Visible = True then      ' If it is already displayed
      tmrPopupsDisplay idx, True
    else                    ' Not displayed yet.. wait a sec
      vpmTimer.AddTimer 20, "tmrPopupsDisplay "&idx&", True '"
    End if
  elseif bHide=False then
    puPlayer.LabelSet pBackglass,"PopRBg", "PupOverlays\\" & lblColor & idx & ".png",0,"{'mt':2,'width':25, 'height':29, 'ypos':33.5,'xpos':99, 'yalign':0}"

    Popups(idx).Field = "PopR"
    Popups(idx).Message = Messages
    Popups(idx).Start = 99
    Popups(idx).EndPos = 74.5
    Popups(idx).Step = -2.4
    Popups(idx).Image = "PupOverlays\\"&lblColor&idx&".png"
    Popups(idx).SlideVar = "xpos"
    Popups(idx).textSize = 2.4
    Popups(idx).textXPos = 87
    Popups(idx).labelYpos = 42
    Popups(idx).textOffset = 4
    Popups(idx).Enabled = True    ' Enable it last
    tmrPopups.Enabled = True
  End if
End Sub

Sub ShowLabelL4(Messages, bHide, lblColor)
  Dim idx:idx=4
  if bHide then
'WriteToLog "     ", "HideLabel:"
    if Popups(idx).Visible = True then      ' If it is already displayed
      tmrPopupsDisplay idx, True
    else                    ' Not displayed yet.. wait a sec
      vpmTimer.AddTimer 20, "tmrPopupsDisplay "&idx&", True '"
    End if
  elseif bHide=False then
'WriteToLog "     ", "AddLabel:"
    puPlayer.LabelSet pBackglass,"PopLBg", "PupOverlays\\" & lblColor & idx &".png",0,"{'mt':2,'width':32, 'height':63, 'ypos':19,'xpos':0}"

    Popups(idx).Field = "PopL"
    Popups(idx).Message = Messages
    Popups(idx).Start = 0
    Popups(idx).EndPos = 33
    Popups(idx).Step = 6
    Popups(idx).Image = "PupOverlays\\"&lblColor&idx&".png"
    Popups(idx).SlideVar = "xpos"
    Popups(idx).textSize = 3.5
    Popups(idx).textXPos = 14.5
    Popups(idx).labelYpos = 27.5
    Popups(idx).textOffset = 5.5
    Popups(idx).Enabled = True    ' Enable it last
    tmrPopups.Enabled = True
  End if
End Sub


Sub tmrPopupsDisplay(idx, bHide)
  Dim visible:visible=1
  dim msgs
  Dim i
  Dim yPos
  Dim offset
''WriteToLog "     ", "Pupup Display: " & idx
  if Popups(idx).Message <> "" then
    msgs = Split(Popups(idx).Message, "^")
  Else
    msgs = Split("^^^^^^^", "^")
    bHide=True
  End if

  if bHide then
    msgs = Split("^^^^^^^", "^")
    Popups(idx).Visible = False
    visible=0
    Popups(idx).Enabled = False
''WriteToLog "     ", "HIDE!!! " & Popups(idx).Field&"Bg" & "  " & visible
    puPlayer.LabelSet pBackglass, Popups(idx).Field&"Bg", Popups(idx).Image, visible, ""
  Else
    Popups(idx).Visible = True
''WriteToLog "     ", "SHOW!!! " & Popups(idx).Field&"Bg" & "  " & visible
  End if

  yPos=Popups(idx).labelYpos
  offset=Popups(idx).textOffset

  for i = 0 to 7
    if ubound(msgs)>=i then
      puPlayer.LabelSet pBackglass,Popups(idx).Field&i+1, msgs(i)   , visible, "{'mt':2,'size':"&Popups(idx).textSize&",'ypos':"&yPos&",'xpos':"&Popups(idx).textXPos&"}":yPos=yPos+offset
    End if
  Next

' puPlayer.LabelSet pBackglass,Popups(idx).Field&"1", msgs(0)   , visible, "{'mt':2,'ypos':"&yPos&",'xpos':"&Popups(idx).textXPos&"}":yPos=yPos+offset
' puPlayer.LabelSet pBackglass,Popups(idx).Field&"2", msgs(1)   , visible, "{'mt':2,'ypos':"&yPos&",'xpos':"&Popups(idx).textXPos&"}":yPos=yPos+offset
' puPlayer.LabelSet pBackglass,Popups(idx).Field&"3", msgs(2)   , visible, "{'mt':2,'ypos':"&yPos&",'xpos':"&Popups(idx).textXPos&"}":yPos=yPos+offset
' puPlayer.LabelSet pBackglass,Popups(idx).Field&"4", msgs(3)   , visible, "{'mt':2,'ypos':"&yPos&",'xpos':"&Popups(idx).textXPos&"}":yPos=yPos+offset
' puPlayer.LabelSet pBackglass,Popups(idx).Field&"5", msgs(4)   , visible, "{'mt':2,'ypos':"&yPos&",'xpos':"&Popups(idx).textXPos&"}":yPos=yPos+offset
' if ubound(msgs)=7 then
'   puPlayer.LabelSet pBackglass,Popups(idx).Field&"6", msgs(5)   , visible, "{'mt':2,'ypos':"&yPos&",'xpos':"&Popups(idx).textXPos&"}":yPos=yPos+offset
'   puPlayer.LabelSet pBackglass,Popups(idx).Field&"7", msgs(6)   , visible, "{'mt':2,'ypos':"&yPos&",'xpos':"&Popups(idx).textXPos&"}":yPos=yPos+offset
'   puPlayer.LabelSet pBackglass,Popups(idx).Field&"8", msgs(7)   , visible, "{'mt':2,'ypos':"&yPos&",'xpos':"&Popups(idx).textXPos&"}":yPos=yPos+offset
' End If
End Sub

Sub tmrPopups_Timer()
  dim i
  Dim bEnabled:bEnabled=False
  For i = 0 to 9
    if Popups(i).Enabled = True then ' Enabled
'WriteToLog "     ", "PopupTimer: " & i & " Enabled:" & Popups(i).Enabled
      bEnabled=True
      Popups(i).Start=Popups(i).Start+Popups(i).Step
'     puPlayer.LabelSet pBackglass, Popups(i).Field&"Bg", Popups(i).Image, 1, "{'mt':2,'"&Popups(i).SlideVar&"':"&Popups(i).Start&"}"
      if Popups(i).Start<Popups(i).EndPos and Popups(i).Step<0 then
        Popups(i).Start=Popups(i).EndPos
        Execute "tmrPopupsDisplay " & i & ",False '"
        Popups(i).Enabled = False
      Elseif Popups(i).Start>Popups(i).EndPos and Popups(i).Step>0 then
        Popups(i).Start=Popups(i).EndPos
        Execute "tmrPopupsDisplay " & i & ",False '"
        Popups(i).Enabled = False
      End if
      puPlayer.LabelSet pBackglass, Popups(i).Field&"Bg", Popups(i).Image, 1, "{'mt':2,'"&Popups(i).SlideVar&"':"&Popups(i).Start&"}"
    End if
  Next

  if bEnabled=False then tmrPopups.Enabled=False
End Sub


Sub SceneGeneralStart3(villain, bLoop, bMute, VideoPath, VideoName, Messages) 'TopMsg1^TopMsg2^TopMsg3^MiddleMsg1^MiddleMsg2^MiddleMsg3^BottomMsg1^BottomMsg2^BottomMsg3
  Dim vol
  dim msgs, bSkipMessages
  Dim Screen
  dim fontSize(9)
  Dim i
  Dim tmp

  if Messages <> "" then                  ' Split messages and sizes
    msgs = Split(Messages, "^")
    bSkipMessages=False
    for i = 0 to 8
      tmp = Split(msgs(i),":")
      if ubound(tmp)=1 then
        if IsNumeric(tmp(0)) then           ' Make sure it is a number for font size
          fontSize(i)=tmp(0)
          msgs(i)=tmp(1)
        Else
          fontSize(i)=6
        End if
      else
        if len(msgs(i))>=25 then fontSize(i)=3.5    ' Shrink fonts for Shame an others if they dont specify a size
        fontSize(i)=6
      End if
      if msgs(i)<>"" then msgs(i)=" "&msgs(i)&" "   ' Add space around it so shadows are not cut off
    Next
  Else
    bSkipMessages=True
  End if

  if bMute then   ' These videos are muted
    vol=0
  Else
    vol=1
  End If

  if villain=-1 then    ' Default to the current screen
    Screen=sSwapPos
  else
    Screen = PlayerState(CurrentPlayer).getPupScreen(villain)
    if Screen=-1 then
      'WriteToLog "     ", "ERROR.  Screen not assigned anyore but still displaying  !!!!!!!!!!!!!!!"
      exit sub
    End if
  End if

  if bSkipMessages = False then
    PuPlayer.LabelSet Screen,"GeneralTop1",msgs(0),1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':"&fontSize(0)&"}"
    PuPlayer.LabelSet Screen,"GeneralTop2",msgs(1),1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':"&fontSize(1)&"}"
    PuPlayer.LabelSet Screen,"GeneralTop3",msgs(2),1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':"&fontSize(2)&"}"
    PuPlayer.LabelSet Screen,"GeneralCenter3",msgs(3),1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':"&fontSize(3)&"}"
    PuPlayer.LabelSet Screen,"GeneralCenter1",msgs(4), 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':"&fontSize(4)&"}"
    PuPlayer.LabelSet Screen,"GeneralCenter2",msgs(5), 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':"&fontSize(5)&"}"
    PuPlayer.LabelSet Screen,"GeneralBottom3",msgs(6), 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':"&fontSize(6)&"}"
    PuPlayer.LabelSet Screen,"GeneralBottom1",msgs(7), 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':"&fontSize(7)&"}"
    PuPlayer.LabelSet Screen,"GeneralBottom2",msgs(8), 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':"&fontSize(8)&"}"
  End if
  if VideoName <> "" then     ' Allows us to just set text without changing video
    playclear Screen
    playmedia VideoName, VideoPath, Screen, "", -1, "", vol, 1
    if bLoop then
      'PuPlayer.SetBackGround screen, 1
      PuPlayer.SetLoop Screen, 1
    End If
  End if
End Sub

Sub SceneGeneralStart3Color(villain, bLoop, bMute, VideoPath, VideoName, Messages, MsgColors) 'TopMsg1^TopMsg2^TopMsg3^MiddleMsg1^MiddleMsg2^MiddleMsg3^BottomMsg1^BottomMsg2^BottomMsg3
  Dim vol
  dim msgs, bSkipMessages
  dim colors
  Dim Screen
  dim fontSize(9)
  Dim i
  Dim tmp

'WriteToLog "     ", "MSG:" & Messages
'WriteToLog "     ", "Colors:" & MsgColors

  if MsgColors<> "" then
    colors = Split(MsgColors, "^")
  else
    colors = Split("^^^^^^^^", "^")
  End if
  for i = 0 to 8
    if colors(i)="" then colors(i)=RGB(247, 170, 51)
  Next

  if Messages <> "" then                  ' Split messages and sizes
    msgs = Split(Messages, "^")
    bSkipMessages=False
    for i = 0 to 8
      tmp = Split(msgs(i),";")
      if ubound(tmp)=1 then
        if IsNumeric(tmp(0)) then           ' Make sure it is a number for font size
          fontSize(i)=tmp(0)
          msgs(i)=tmp(1)
        Else
          fontSize(i)=6
        End if
      else
        if len(msgs(i))>=25 then fontSize(i)=3.5    ' Shrink fonts for Shame an others if they dont specify a size
        fontSize(i)=6
      End if
      if msgs(i)<>"" then msgs(i)=" "&msgs(i)&" "   ' Add space around it so shadows are not cut off
    Next
  Else
    bSkipMessages=True
  End if

  if bMute then   ' These videos are muted
    vol=0
  Else
    vol=1
  End If

  if villain=-1 then    ' Default to the current screen
    Screen=sSwapPos
  else
    Screen = PlayerState(CurrentPlayer).getPupScreen(villain)
    if Screen=-1 then
      'WriteToLog "     ", "ERROR.  Screen not assigned anyore but still displaying  !!!!!!!!!!!!!!!"
      exit sub
    End if
  End if

  if bSkipMessages = False then
    PuPlayer.LabelSet Screen,"GeneralTop1",msgs(0),1,"{'mt':2,'color':"&colors(0)&",'size':"&fontSize(0)&"}"
    PuPlayer.LabelSet Screen,"GeneralTop2",msgs(1),1,"{'mt':2,'color':"&colors(1)&",'size':"&fontSize(1)&"}"
    PuPlayer.LabelSet Screen,"GeneralTop3",msgs(2),1,"{'mt':2,'color':"&colors(2)&",'size':"&fontSize(2)&"}"
    PuPlayer.LabelSet Screen,"GeneralCenter3",msgs(3),1,"{'mt':2,'color':"&colors(3)&",'size':"&fontSize(3)&"}"
    PuPlayer.LabelSet Screen,"GeneralCenter1",msgs(4), 1,"{'mt':2,'color':"&colors(4)&",'size':"&fontSize(4)&"}"
    PuPlayer.LabelSet Screen,"GeneralCenter2",msgs(5), 1,"{'mt':2,'color':"&colors(5)&",'size':"&fontSize(5)&"}"
    PuPlayer.LabelSet Screen,"GeneralBottom3",msgs(6), 1,"{'mt':2,'color':"&colors(6)&",'size':"&fontSize(6)&"}"
    PuPlayer.LabelSet Screen,"GeneralBottom1",msgs(7), 1,"{'mt':2,'color':"&colors(7)&",'size':"&fontSize(7)&"}"
    PuPlayer.LabelSet Screen,"GeneralBottom2",msgs(8), 1,"{'mt':2,'color':"&colors(8)&",'size':"&fontSize(8)&"}"
  End if
  if VideoName <> "" then     ' Allows us to just set text without changing video
    playclear Screen
    playmedia VideoName, VideoPath, Screen, "", -1, "", vol, 1
    if bLoop then
      'PuPlayer.SetBackGround screen, 1
      PuPlayer.SetLoop Screen, 1
    End If
  End if
End Sub

Sub SceneGeneralStart(screen, bLoop, VideoPath, VideoName, TopMsg, BottomMsg)
  Dim vol
  if videoName="joker-p15.mp4" then   ' These videos are muted
    vol=0
  Else
    vol=1
  End If

' PuPlayer.playlistplayex pMVideo,"video-Joker","joker-p1.mp4", 1, 1
'   PuPlayer.LabelSet pMVideo,"GeneralTop1",TopMsg,1,""
  playclear screen
  PuPlayer.LabelSet screen,"GeneralTop1",TopMsg,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralTop2","", 1, ""
  PuPlayer.LabelSet screen,"GeneralCenter1","", 1, ""
  PuPlayer.LabelSet screen,"GeneralCenter2","", 1, ""
  PuPlayer.LabelSet screen,"GeneralBottom1","", 1, ""
  PuPlayer.LabelSet screen,"GeneralBottom2",BottomMsg,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"

  PuPlayer.LabelSet screen,"GeneralTop3","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter3","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralBottom3","",1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  playmedia VideoName, VideoPath, screen, "", -1, "", vol, 1
  if bLoop then
    'PuPlayer.SetBackGround screen, 1
    PuPlayer.SetLoop screen, 1
  End If
End Sub

Sub SceneMVBatPhone(villain, idx, dir)
  Dim Screen

  Screen = PlayerState(CurrentPlayer).getPupScreen(villain)
  playclear screen
  PuPlayer.LabelSet screen,"GeneralTop1","Shoot The Bat Phone!",1, "{'mt':2,'color':"&RGB(255,0,0)&",'size':7}"
  PuPlayer.LabelSet screen,"GeneralTop3",FormatScore(tmrHurryUp.UserValue),1,"{'mt':2,'color':"&RGB(255,0,0)&",'size':7}"
  PuPlayer.LabelSet screen,"GeneralCenter1","", 1, ""
  PuPlayer.LabelSet screen,"GeneralCenter2","", 1, ""
  PuPlayer.LabelSet screen,"GeneralBottom1","", 1, ""
  PuPlayer.LabelSet screen,"GeneralBottom2","",1,""

  PuPlayer.LabelSet screen,"GeneralTop2","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter3","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralBottom3","",1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  if dir ="" then
    playmedia "batphone"&idx&".mp4", "video-batphone", screen, "", -1, "", 0, 1
    PuPlayer.SetLoop screen, 1
  else
    playmedia "batphone"&idx&".mp4", dir, screen, "", -1, "", 0, 1
  End if
End Sub


Dim DoBatPoleSeqGordonIdx
Sub DoBatPoleSeqGordon()
  Dim Villain
  Dim TmpStr
  Dim Len1
  Dim Len2
  Dim curScore

'WriteToLog "     ", "DoBatPoleSeqGordon:" & PlayerState(CurrentPlayer).isQual(kMajV_S1Joker) & " idx:" & DoBatPoleSeqGordonIdx

  if PlayerState(CurrentPlayer).isQual(kMajV_S1Joker)>=1 then
    TmpStr="Joker"
    Villain=kMajV_S1Joker
    Len1=1966
    Len2=1834
  elseif PlayerState(CurrentPlayer).isQual(kMajV_S2Joker)>=1 then
    TmpStr="Joker2"
    Villain=kMajV_S2Joker
    Len1=1666
    Len2=2345
  elseif PlayerState(CurrentPlayer).isQual(kMajV_S1CatWoman)>=1 then
    TmpStr="Catwoman"
    Villain=kMajV_S1CatWoman
    Len1=1666
    Len2=2345
  elseif PlayerState(CurrentPlayer).isQual(kMajV_S2CatWoman)>=1 then
    TmpStr="Catwoman2"
    Villain=kMajV_S2CatWoman
    Len1=1666
    Len2=2345
  elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Peng)>=1 then
    TmpStr="Penguin"
    Villain=kMajV_S1Peng
    Len1=1666
    Len2=2345
  elseif PlayerState(CurrentPlayer).isQual(kMajV_S2Peng)>=1 then
    TmpStr="Penguin2"
    Villain=kMajV_S2Peng
    Len1=1666
    Len2=2345
  elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Riddler)>=1 then
    TmpStr="Riddler"
    Villain=kMajV_S1Riddler
    Len1=2136
    Len2=1950
  elseif PlayerState(CurrentPlayer).isQual(kMajV_S2Riddler)>=1 then
    TmpStr="Riddler2"
    Villain=kMajV_S2Riddler
    Len1=6640
    Len2=2345
  End if

  QueueFlushS sSwapPos
  curScore = BonusAddMode(Villain, -1, False)
  if DoBatPoleSeqGordonIdx=0 then
    QueueSceneS sSwapPos, "SceneBatPoleSeqGordon sSwapPos, "&DoBatPoleSeqGordonIdx&"," & curScore & ",""" & TmpStr & """ ", Len1, 1
  else
    QueueSceneS sSwapPos, "SceneBatPoleSeqGordon sSwapPos, "&DoBatPoleSeqGordonIdx&"," & curScore & ",""" & TmpStr & """ ", Len2, 1
    SetLightColor lArrowCommissG, "red", 0
  End if
  QueueSceneS sSwapPos, "StartLastScene ", -1, 1
  DoBatPoleSeqGordonIdx=DoBatPoleSeqGordonIdx+1
End Sub


Sub SceneBatPoleSeqGordon(Screen, idx, score, dir)
  playclear screen
  if idx = 0 then
    BonusMultiplier=BonusMultiplier+2
    PuPlayer.LabelSet screen,"GeneralTop1",""       ,1,"{'mt':2,'color':"& pupOrange &",'size':6}"
    PuPlayer.LabelSet screen,"GeneralTop2",""       ,1,"{'mt':2,'color':"& pupOrange &",'size':6}"
    PuPlayer.LabelSet screen,"GeneralTop3","+2 Bonus X"   ,1,"{'mt':2,'color':"& pupOrange &",'size':11}"
    PuPlayer.LabelSet screen,"GeneralCenter3",""      ,1,"{'mt':2,'color':"& pupOrange &",'size':6}"
    PuPlayer.LabelSet screen,"GeneralCenter1",FormatScore(Score), 1,"{'mt':2,'color':"& pupOrange &",'size':12}"
    PuPlayer.LabelSet screen,"GeneralCenter2",""      ,1,"{'mt':2,'color':"& pupOrange &",'size':6}"
    PuPlayer.LabelSet screen,"GeneralBottom3","1 Hit To Finish", 1,"{'mt':2,'color':"& pupOrange &",'size':10}"
    PuPlayer.LabelSet screen,"GeneralBottom1",""      , 1,"{'mt':2,'color':"& pupOrange &",'size':6}"
    PuPlayer.LabelSet screen,"GeneralBottom2",""      , 1,"{'mt':2,'color':"& pupOrange &",'size':6}"
  else
    BonusMultiplier=BonusMultiplier+2
    VMBMultiplier=VMBMultiplier+1
    PuPlayer.LabelSet screen,"GeneralTop1",""       ,1,"{'mt':2,'color':"& pupOrange &",'size':6}"
    PuPlayer.LabelSet screen,"GeneralTop2",""       ,1,"{'mt':2,'color':"& pupOrange &",'size':6}"
    PuPlayer.LabelSet screen,"GeneralTop3","+2 Bonus X"   ,1,"{'mt':2,'color':"& pupOrange &",'size':12}"
    PuPlayer.LabelSet screen,"GeneralCenter3",""      ,1,"{'mt':2,'color':"& pupOrange &",'size':6}"
    PuPlayer.LabelSet screen,"GeneralCenter1",FormatScore(Score), 1,"{'mt':2,'color':"& pupOrange &",'size':11}"
    PuPlayer.LabelSet screen,"GeneralCenter2",""      ,1,"{'mt':2,'color':"& pupOrange &",'size':6}"
    PuPlayer.LabelSet screen,"GeneralBottom3","Multiball Scores " & VMBMultiplier & "X", 1,"{'mt':2,'color':"& pupOrange &",'size':10}"
    PuPlayer.LabelSet screen,"GeneralBottom1",""      , 1,"{'mt':2,'color':"& pupOrange &",'size':6}"
    PuPlayer.LabelSet screen,"GeneralBottom2",""      , 1,"{'mt':2,'color':"& pupOrange &",'size':6}"
  End if
  playmedia "batpoleG"&idx+1&".mp4", "video-"&dir, screen, "", -1, "", 1, 1
End Sub


Sub SceneSkillshot(screen, idx, score)
  playclear screen
  PuPlayer.LabelSet screen,"GeneralTop1","" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralTop2","" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralTop3","" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter3","",1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter1","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter2","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  if idx = 2 then
    PuPlayer.LabelSet screen,"GeneralBottom3","Super Skill Shot", 1,"{'mt':2,'color':"&RGB(101, 210, 244)&",'size':10}"
  elseif idx = 1 then
    PuPlayer.LabelSet screen,"GeneralBottom3","Penguin Skill Shot", 1,"{'mt':2,'color':"&RGB(101, 210, 244)&",'size':10}"
  else
    PuPlayer.LabelSet screen,"GeneralBottom3","Skill Shot", 1,"{'mt':2,'color':"&RGB(101, 210, 244)&",'size':10}"
  End if
  PuPlayer.LabelSet screen,"GeneralBottom1","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralBottom2", FormatScore(score), 1,"{'mt':2,'color':"&RGB(253, 252, 6)&",'size':10}"
  playmedia "sshot1.mp4", "PuPVideos", screen, "", -1, "", 0, 1
End Sub

Sub ScenePFMStart(screen, idx)
  playclear screen
  PuPlayer.LabelSet screen,"GeneralTop1","" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralTop2","" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralTop3","" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter3","",1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
' PuPlayer.LabelSet screen,"GeneralCenter1","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
' PuPlayer.LabelSet screen,"GeneralCenter2","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralBottom1","", 1,"{'mt':2,'color':" & pupOrange & ",'size':10}"
  PuPlayer.LabelSet screen,"GeneralBottom2","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralBottom3","", 1,"{'mt':2,'color':"&RGB(253, 252, 6)&",'size':10}"
  if idx=0 then
    playmedia "PFM.mp4", "PuPVideos", screen, "", -1, "", 0, 1
  else
    playmedia "PFM1.mp4", "PuPVideos", screen, "", -1, "", 0, 1
  End if

End Sub

Sub SceneSpinner(screen)
  playclear screen
  PuPlayer.LabelSet screen,"GeneralTop1","" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralTop2","" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralTop3","" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter3","",1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
' PuPlayer.LabelSet screen,"GeneralCenter1","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
' PuPlayer.LabelSet screen,"GeneralCenter2","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralBottom1","", 1,"{'mt':2,'color':" & pupOrange & ",'size':10}"
  PuPlayer.LabelSet screen,"GeneralBottom2","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralBottom3","", 1,"{'mt':2,'color':"&RGB(253, 252, 6)&",'size':10}"
  playmedia "BatClimb.mp4", "PuPVideos", screen, "", -1, "", 0, 1

End Sub

Sub SceneHatterAdd(screen)
  playclear screen
  PuPlayer.LabelSet screen,"GeneralTop1","" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralTop2","" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralTop3","" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter3","Super-Instant Mesmerizer",1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':7}"
  PuPlayer.LabelSet screen,"GeneralCenter1","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter2","1 Shot Added", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':7}"
  PuPlayer.LabelSet screen,"GeneralBottom1","", 1,"{'mt':2,'color':" & pupOrange & ",'size':10}"
  PuPlayer.LabelSet screen,"GeneralBottom2","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralBottom3","", 1,"{'mt':2,'color':"&RGB(253, 252, 6)&",'size':10}"
  playmedia "pAdd.mp4", "video-Hatter1", screen, "", -1, "", 1, 1

End Sub

Sub SceneBallLock(screen, idx)
  playclear screen
  PuPlayer.LabelSet screen,"GeneralTop1","" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralTop2","" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralTop3","" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter3","",1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter1","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter2","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  if idx=0 then
    AddScore 25000    ' 25K for starting Lock
    ShowPopupLabel 5,"25,000^BATCAVE LOCK^LIT", False, ""
    ShowPopupLabel 6,"ACCESS^TO^BALL LOCK^VIA^RIGHT ORBIT", False, ""
    vpmTimer.AddTimer 3000, "ShowPopupLabel 5,"""", True, """" '"
    vpmTimer.AddTimer 20000, "ShowPopupLabel 6,"""", True, """" '"
    PuPlayer.LabelSet screen,"GeneralBottom1","Lock Is Lit!", 1,"{'mt':2,'color':" & pupOrange & ",'size':10}"
  else
    PlaySoundVol "sfx-ball-locked", VolSfx
    PuPlayer.LabelSet screen,"GeneralBottom1","Ball " & idx & " Locked!", 1,"{'mt':2,'color':" & pupOrange & ",'size':10}"
  End if
  PuPlayer.LabelSet screen,"GeneralBottom2","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralBottom3","", 1,"{'mt':2,'color':"&RGB(253, 252, 6)&",'size':10}"
  playmedia "lock" & idx & ".mp4", "video-VMB", screen, "", -1, "", 0, 1
End Sub

Sub DoBallLockScene(screen, idx)
  dim vidLen
  dim queueLen
  if idx=0 then
    vidLen=3504
  elseif idx=1 then
    vidLen=3295
  elseif idx=2 then
    vidLen=3421
  else    ' Invalid
    exit sub
  End if

  queueLen=getQueueTimeS(screen)
' QueueFlushS screen
  QueueSceneS screen, "SceneBallLock " & screen & ", " & idx & " ", vidLen, 0
  if queueLen = 0 then
    QueueSceneS screen, "StartLastScene ", -1, 0
  End if
End Sub


Sub DoPFMScene(screen, idx)
  dim vidLen
  dim queueLen

  queueLen=getQueueTimeS(screen)
  if idx=0 then
    QueueSceneS screen, "ScenePFMStart " & screen & ", " & idx, 1961, 0
  else
    QueueSceneS screen, "ScenePFMStart " & screen & ", " & idx, 1669, 0
  End if
  if queueLen = 0 then
    QueueSceneS screen, "StartLastScene ", -1, 0
  End if
End Sub

Sub DoSpinnerScene(screen)
  dim queueLen

  queueLen=getQueueTimeS(screen)
  QueueSceneS screen, "SceneSpinner  " & screen, 5000, 0
  if queueLen = 0 then
    QueueSceneS screen, "StartLastScene ", -1, 0
  End if
End Sub


' Add anigif to black backdrop
' (OLD) ffmpeg -i Black800x600.mp4  -ignore_loop 0 -i Joker.gif -filter_complex "[0][1] overlay=(main_w-overlay_w)/2:(main_h-overlay_h)/2:shortest=1" -pix_fmt yuv420p Joker.mp4
' ffmpeg -i black800x600.mp4 -ignore_loop 0 -i Joker.gif -filter_complex "[1:v]scale=412:412 [ovrl],[0:v][ovrl]overlay=(main_w-overlay_w)/2:(main_h-overlay_h)/2:shortest=1" -pix_fmt yuv420p Joker.mp4
'
' Create 800x600 black image
' ffmpeg -t 3 -f lavfi -i color=c=black:s=800x600 -c:v libx264 -tune stillimage -pix_fmt yuv420p black800x600.mp4
'
Sub SceneMVQualProgress(villain, TopMsg1, TopMsg2, BottomMsg)
  Dim anigif
  Dim screen
  Dim txtColor
  Dim MVName
' select case MVName
'   case "Riddler": txtColor=RGB(24,176,69) ' Green
'   case "Joker": txtColor=RGB(229,56,148)  ' Magenta
'   case "Catwoman": txtColor=RGB(243,227,3) ' Yellow
'   case "Penguin": txtColor=RGB(168,87,166)  ' purple
' End Select

'WriteToLog "     ", "MVQualProgress:(" & villain & ")" & PlayerState(CurrentPlayer).getPupScreen(villain)

  Screen = PlayerState(CurrentPlayer).getPupScreen(villain)

  Select case Villain
    case kMajV_S1CatWoman, kMajV_S2CatWoman: txtColor=RGB(243,227,3):MVName="Catwoman"  ' Yellow
    case kMajV_S1Joker, kMajV_S2Joker: txtColor=RGB(229,56,148):MVName="Joker"      ' Magenta
    case kMajV_S1Riddler, kMajV_S2Riddler: txtColor=RGB(24,176,69):MVName="Riddler"   ' Green
    case kMajV_S1Peng, kMajV_S2Peng: txtColor=RGB(168,87,166):MVName="Penguin"      ' Purple
  End Select

  playclear screen
  ' Hack to not show labels over bat belt (Really should need this but for some reason it shows over the bt belt so check to be sure)
  PuPlayer.LabelSet screen,"GeneralTop1",TopMsg1,1,"{'mt':2,'color':"&txtColor&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralTop2",TopMsg2,1,"{'mt':2,'color':"&txtColor&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter1","", 1, ""
  PuPlayer.LabelSet screen,"GeneralCenter2","", 1, ""
  PuPlayer.LabelSet screen,"GeneralBottom1","", 1, ""
  PuPlayer.LabelSet screen,"GeneralBottom2",BottomMsg,1,"{'mt':2,'color':"&txtColor&",'size':9}"

  PuPlayer.LabelSet screen,"GeneralTop3","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter3","", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
  PuPlayer.LabelSet screen,"GeneralBottom3","",1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"

  playmedia MVName & ".mp4", "video-" & MVName, screen, "", -1, "", 1, 1
  PuPlayer.SetLoop screen, 1

  ' RESIZED 50% for CAB, 25% for Desktop - https://ezgif.com/resize/ezgif-3-e4ba49c010cb.gif
' anigif="video-Joker\\MV-burst-1" & MVName & ".gif"
' puPlayer.LabelSet screen,"AniGif", anigif, 1,"{'mt':2,'ypos':50,'xpos':50,'anigif':100,'pagenum':1}"
' puPlayer.LabelSet screen,"AniGif", anigif, 1,"{'mt':2,'color':111111,'ypos':45,'xpos':50,'width':55, 'height':75, 'anigif':100,'pagenum':1}"

End Sub



Sub SceneIdle(villain)
  Dim anigif
  Dim Screen

  Screen = PlayerState(CurrentPlayer).getPupScreen(villain)
  StartLastSceneScreen Screen

' anigif="PuPOverlays\\clear.png"
' puPlayer.LabelSet screen,"AniGif", anigif, 0,"{'mt':2,'color':111111,'ypos':50,'xpos':50,'width':50, 'height':60, 'anigif':100,'pagenum':1}"

' Screen = PlayerState(CurrentPlayer).getPupScreen(villain)
' playclear screen
' ClearAllText screen
'
' playmedia "idle-1.mp4", "PuPVideos", screen, "", -1, "", 0, 1
' PuPlayer.SetLoop screen, 1
' anigif="PuPOverlays\\clear.png"
' puPlayer.LabelSet screen,"AniGif", anigif, 0,"{'mt':2,'color':111111,'ypos':50,'xpos':50,'width':50, 'height':60, 'anigif':100,'pagenum':1}"
End Sub

Sub ClearAllText(screen)  ' Clear alll text and reset sizes
  PuPlayer.LabelSet screen,"GeneralTop1"," ",1,"{'mt':2,'size':6}"
  PuPlayer.LabelSet screen,"GeneralTop2"," ",1,"{'mt':2,'size':6}"
  PuPlayer.LabelSet screen,"GeneralTop3"," ", 1,"{'mt':2,'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter1"," ", 1, "{'mt':2,'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter2"," ", 1, "{'mt':2,'size':6}"
  PuPlayer.LabelSet screen,"GeneralCenter3"," ", 1,"{'mt':2,'size':6}"
  PuPlayer.LabelSet screen,"GeneralBottom1"," ", 1, "{'mt':2,'size':6}"
  PuPlayer.LabelSet screen,"GeneralBottom2"," ",1,"{'mt':2,'size':6}"
  PuPlayer.LabelSet screen,"GeneralBottom3"," ",1,"{'mt':2,'size':6}"
End Sub

Sub ClearCombo()  ' Clear Current combo
  puPlayer.LabelSet pBackglass,"ComboText1", "" ,1,"{'mt':2, 'ypos':70}"
  puPlayer.LabelSet pBackglass,"ComboText2", "" ,1,"{'mt':2, 'ypos':80}"
  puPlayer.LabelSet pBackglass,"ComboText3", "" ,1,"{'mt':2, 'ypos':90}"
  puPlayer.LabelSet pBackglass,"VehicleIcon", "PuPOverlays\\clear.png" ,1,""
End Sub

Sub tmrCombo_Timer()
  tmrCombo.Enabled = False
  PlayerState(CurrentPlayer).comboWay=1
  LastSwitchHit="dummy"
End Sub


Dim SceneCollectVilIdx
Dim SceneCollectVilCnt
Dim SceneCollectScreen
Dim SceneCollectStr
Dim SceneCollectSnd
Dim SceneCollectShotMultiplier:SceneCollectShotMultiplier=1
Sub SceneCollect(screen, villainIdx, cnt)
  Dim BonusStr
WriteToLog "     ", "Scene Collect" & screen

' If PlayerState(CurrentPlayer).bMinorActive then   ' Dont collect when in minor Villain
  If bMultiBallMode then                ' Dont collect when in multiball
    PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightSuperJArrow, "", 2
    'WriteToLog "     ", "Skip Collect - In Multiball"
    Exit Sub
  End if

  tmrSceneCollect.Interval = 15000
  tmrSceneCollect.enabled = True
  PauseTimersForce 99000            ' pause timers for a long time
  SceneCollectVilIdx=villainIdx
  SceneCollectVilCnt=cnt
  SceneCollectScreen=screen
  bSceneCollect = True
  bSceneCollectEnd_Wait=False
  QueueFlushS screen
  playclear screen
  if villainIdx=kMajV_S1Joker then SceneCollectStr="joker":SceneCollectSnd="joker"
  if villainIdx=kMajV_S1CatWoman then SceneCollectStr="catwoman":SceneCollectSnd="catwoman"
  if villainIdx=kMajV_S1Riddler then SceneCollectStr="riddler":SceneCollectSnd="riddler"
  if villainIdx=kMajV_S1Peng then SceneCollectStr="penguin":SceneCollectSnd="penguin"

  if villainIdx=kMajV_S2Joker then SceneCollectStr="joker2":SceneCollectSnd="joker"
  if villainIdx=kMajV_S2CatWoman then SceneCollectStr="catwoman2":SceneCollectSnd="catwoman"
  if villainIdx=kMajV_S2Riddler then SceneCollectStr="riddler2":SceneCollectSnd="riddler"
  if villainIdx=kMajV_S2Peng then SceneCollectStr="penguin2":SceneCollectSnd="penguin"

  SceneCollectShotMultiplier=ShotMultiplier         ' Need to save this since it goes away after the function is called
  BonusStr=""
  if PlayerState(CurrentPlayer).Villains(SceneCollectVilIdx).PupScreen = sSwapPos and TUTMultiplier * PlayMultiplier * SceneCollectShotMultiplier <> 1 then
    BonusStr = " x" & TUTMultiplier * PlayMultiplier * SceneCollectShotMultiplier
  elseif PlayMultiplier * SceneCollectShotMultiplier <> 1 then
    BonusStr = " x" & PlayMultiplier * SceneCollectShotMultiplier
  End if

  PlaySoundLoopVol "sfx-collect-" & SceneCollectSnd, VolSfx
  pausemedia pMusic
  PuPlayer.LabelShowPage screen, 2,0,""
  puPlayer.LabelSet screen,"ArrowLeft", "PuPOverlays\\Collect1a.gif",  1,"{'mt':2,'ypos':5,'xpos':0,'width':18, 'height':25, 'anigif':100}"
  puPlayer.LabelSet screen,"ArrowRight", "PuPOverlays\\Collect2a.gif", 1,"{'mt':2,'ypos':70,'xpos':80,'width':18, 'height':25, 'anigif':100}"
  puPlayer.LabelSet screen,"txtLeft1", "Collect " & FormatScore(GetBonusTotal(villainIdx)) & BonusStr,      1, "{'mt':2,'ypos':11,'xpos':18,'size':5}"
  puPlayer.LabelSet screen,"txtLeft2", "(Press Left Flipper Button)", 1, "{'mt':2,'ypos':18,'xpos':18,'size':5}"
  puPlayer.LabelSet screen,"txtRight1", "Continue",             1, "{'mt':2,'ypos':76,'xpos':80,'size':5}"
  puPlayer.LabelSet screen,"txtRight2", "(Press Right Flipper Button)",   1, "{'mt':2,'ypos':82,'xpos':80,'size':5}"

  playmedia SceneCollectStr & "-w"&cnt+1&"a.mp4", "video-" & SceneCollectStr, screen, "", -1, "", 0, 1
  PuPlayer.SetLoop screen, 1
End Sub

Sub tmrSceneCollect_Timer()
  tmrSceneCollect.Enabled = False
  if bSceneCollect then
    SceneCollectEnd(LeftFlipperKey)
  End if
End Sub

Sub SceneCollectEnd(keycode)
  Dim BonusStr
  dim bFinish:bFinish=False
  if bSceneCollect and bSceneCollectEnd_Wait=False then
'WriteToLog "     ", "SceneCollectEnd: " & keycode & " " & bSceneCollect & " idx:" & SceneCollectVilIdx & " cnt:" & SceneCollectVilCnt

    BonusStr=""
    if PlayerState(CurrentPlayer).Villains(SceneCollectVilIdx).PupScreen = sSwapPos and TUTMultiplier * PlayMultiplier * SceneCollectShotMultiplier <> 1 then
      BonusStr = " x" & TUTMultiplier * PlayMultiplier * SceneCollectShotMultiplier
    elseif PlayMultiplier * SceneCollectShotMultiplier <> 1 then
      BonusStr = " x" & PlayMultiplier * SceneCollectShotMultiplier
    End if

    If keycode = LeftFlipperKey Then
      puPlayer.LabelSet SceneCollectScreen,"ArrowLeft", "PuPOverlays\\Collect1b.gif",  1,"{'mt':2,'ypos':5,'xpos':0,'width':18, 'height':25, 'anigif':100}"
      puPlayer.LabelSet SceneCollectScreen,"ArrowRight", "PuPOverlays\\Collect2a.gif", 0,"{'mt':2,'ypos':70,'xpos':80,'width':18, 'height':25, 'anigif':100}"
      puPlayer.LabelSet SceneCollectScreen,"txtLeft1", "Collect " & FormatScore(GetBonusTotal(SceneCollectVilIdx)) & BonusStr,      1, "{'mt':2,'ypos':11,'xpos':18}"
      puPlayer.LabelSet SceneCollectScreen,"txtLeft2", "(Press Left Flipper Button)", 1, "{'mt':2,'ypos':18,'xpos':18}"
      puPlayer.LabelSet SceneCollectScreen,"txtRight1", "",             1, "{'mt':2,'ypos':76,'xpos':80}"
      puPlayer.LabelSet SceneCollectScreen,"txtRight2", "",   1, "{'mt':2,'ypos':82,'xpos':80}"
      ModeMultiplier=1
      bFinish=True
    elseif keycode = RightFlipperKey Then

      puPlayer.LabelSet SceneCollectScreen,"ArrowLeft", "PuPOverlays\\Collect1a.gif",  0,"{'mt':2,'ypos':5,'xpos':0,'width':18, 'height':25, 'anigif':100}"
      puPlayer.LabelSet SceneCollectScreen,"ArrowRight", "PuPOverlays\\Collect2b.gif", 1,"{'mt':2,'ypos':70,'xpos':80,'width':18, 'height':25, 'anigif':100}"
      puPlayer.LabelSet SceneCollectScreen,"txtLeft1", "",                1, "{'mt':2,'ypos':11,'xpos':18}"
      puPlayer.LabelSet SceneCollectScreen,"txtLeft2", "",                1, "{'mt':2,'ypos':18,'xpos':18}"
      puPlayer.LabelSet SceneCollectScreen,"txtRight1", "Continue",             1, "{'mt':2,'ypos':76,'xpos':80}"
      puPlayer.LabelSet SceneCollectScreen,"txtRight2", "(Press Right Flipper Button)",   1, "{'mt':2,'ypos':82,'xpos':80}"
      ModeMultiplier=ModeMultiplier+1
      bFinish=True
    End if

    if bFinish Then
      bSceneCollectEnd_Wait=True
      tmrSceneCollect.Enabled = False
      StopSound "sfx-collect-" & SceneCollectSnd
      PlaySoundVol "sfx-collect-continue", VolSfx
      vpmTimer.AddTimer 1500, "SceneCollectEnd2 " & keycode & " '"
    End if
  End If

End Sub


Sub SceneCollectEnd2(keycode)
  Dim timeout
  timeout=3000
'WriteToLog "     ", "SceneCollectEnd2: " & keycode & " " & bSceneCollect & " idx:" & SceneCollectVilIdx & " cnt:" & SceneCollectVilCnt
  if bSceneCollect then
    bSceneCollect = False
    PauseTimersForce -1       ' This will re-enable the timers after a short pause
    CheckGadget False

    ' Clear Screen
    puPlayer.LabelSet SceneCollectScreen,"ArrowLeft", "PuPOverlays\\clear.gif",  1,"{'mt':2,'ypos':5,'xpos':0,'width':18, 'height':25, 'anigif':100}"
    puPlayer.LabelSet SceneCollectScreen,"ArrowRight", "PuPOverlays\\clear.gif", 1,"{'mt':2,'ypos':70,'xpos':80,'width':18, 'height':25, 'anigif':100}"
    PuPlayer.LabelShowPage SceneCollectScreen, 1,0,""
    resumemedia pMusic

    If keycode = LeftFlipperKey Then
      SceneMVEnd SceneCollectVilIdx   ' Show End Scene, Kick the ball
      bSceneFinished=False                  '    clear this since we shortcycled the finish scene
    elseif keycode = RightFlipperKey Then
      if SceneCollectVilIdx=kMajV_S1Joker then
        If SceneCollectVilCnt=0 then
          PlayerState(CurrentPlayer).SeTProgress(kMajV_S1Joker)=18
          PlayerState(CurrentPlayer).AddProgress kMajV_S1Joker

          ' Move to Wave 3
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightPengArrow, "purple", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightJokerArrow, "purple", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightRiddlerArrow1, "purple", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightRiddlerArrow2, "purple", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightCatArrow1, "purple", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightCatArrow2, "purple", 0
          GadgetsFlash()
        Else
          PlayerState(CurrentPlayer).SeTProgress(kMajV_S1Joker)=33
          PlayerState(CurrentPlayer).AddProgress kMajV_S1Joker
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightPengArrow, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightJokerArrow, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightRiddlerArrow1, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightRiddlerArrow2, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightCatArrow1, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightCatArrow2, "purple", 2
        End If
      elseif SceneCollectVilIdx=kMajV_S2Joker then
        If SceneCollectVilCnt=0 then
          PlayerState(CurrentPlayer).AddProgress kMajV_S2Joker

          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightPengArrow, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightJokerArrow, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightRiddlerArrow1, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightRiddlerArrow2, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightCatArrow1, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightCatArrow2, "purple", 2
        End If

      elseif SceneCollectVilIdx=kMajV_S1CatWoman then
        If SceneCollectVilCnt=0 then
          PlayerState(CurrentPlayer).AddProgress kMajV_S1CatWoman
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1CatWoman, kLightCatArrow1, "white", 2
        ElseIf SceneCollectVilCnt=1 then
          PlayerState(CurrentPlayer).AddProgress kMajV_S1CatWoman
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1CatWoman, kLightCatArrow2, "white", 2
        Else
          PlayerState(CurrentPlayer).AddProgress kMajV_S1CatWoman
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1CatWoman, kLightJokerArrow, "white", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1CatWoman, kLightCatArrow1, "white", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1CatWoman, kLightCatArrow2, "white", 2
        End If
      elseif SceneCollectVilIdx=kMajV_S2CatWoman then
        If SceneCollectVilCnt=0 then
          PlayerState(CurrentPlayer).AddProgress kMajV_S2CatWoman
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightRiddlerArrow1, "white", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightRiddlerArrow2, "white", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightCatArrow1, "white", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightCatArrow2, "white", 2
        ElseIf SceneCollectVilCnt=1 then
          PlayerState(CurrentPlayer).AddProgress kMajV_S2CatWoman
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightJokerArrow, "white", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightRiddlerArrow1, "white", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightRiddlerArrow2, "white", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightCatArrow1, "white", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightCatArrow2, "white", 2
        End If
      elseif SceneCollectVilIdx=kMajV_S1Riddler then
        If SceneCollectVilCnt=0 then
          PlayerState(CurrentPlayer).AddProgress kMajV_S1Riddler
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow1, "green", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow2, "green", 2
        ElseIf SceneCollectVilCnt=1 then
          PlayerState(CurrentPlayer).AddProgress kMajV_S1Riddler
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow1, "green", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow2, "green", 2
        End If
      elseif SceneCollectVilIdx=kMajV_S2Riddler then
        If SceneCollectVilCnt=0 then
          PlayerState(CurrentPlayer).AddProgress kMajV_S2Riddler
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerArrow1, "green", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerArrow2, "green", 2
        End If
      elseif SceneCollectVilIdx=kMajV_S1Peng then
        PlayerState(CurrentPlayer).AddProgress kMajV_S1Peng
        If SceneCollectVilCnt=0 then
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightJokerArrow, "purple", 2
          vpmTimer.AddTimer 2500, "PlayerState(CurrentPlayer).AddProgress kMajV_S1Peng '"       ' TBD See how this is really triggered??
        ElseIf SceneCollectVilCnt=1 then
          GadgetsFlash()
        ElseIf SceneCollectVilCnt=2 then
          StartCrane(True)
        End If
      elseif SceneCollectVilIdx=kMajV_S2Peng then
        PlayerState(CurrentPlayer).AddProgress kMajV_S2Peng
        If SceneCollectVilCnt=0 then
          GadgetsFlash()
        ElseIf SceneCollectVilCnt=1 then
          StartCrane(True)
        End If
      End if
'WriteToLog "     ", "Kick Ball"

      If PlayerState(CurrentPlayer).Villains(SceneCollectVilIdx).PupScreen<>sSwapPos then StartLastScene    ' If we are not the main screen clean it up
      SetBGMusic

      if SceneMap(SceneCollectVilIdx, PlayerState(CurrentPlayer).TProgress(SceneCollectVilIdx), 1) <> -1 then
        timeout=SceneMap(SceneCollectVilIdx, PlayerState(CurrentPlayer).TProgress(SceneCollectVilIdx), 1)
      End If

      vpmtimer.addtimer timeout, "KickerPengKick(False) '"
    End If
  End If
End Sub

Sub SceneMVEnd(villainIdx)        'EndMajorEnd Villain End Sequence
'WriteToLog "     ", "SceneMVEnd: " & villainIdx
  dim tmpStr
  Dim nextQual
  Dim FinishLen
  Dim calloutIdx
  Dim calloutName
  Dim screen
  Dim finishedCnt
  Dim i
  Dim FinishText
  Dim finishVolume:finishVolume=1
  dim TotalMultiplier:TotalMultiplier=1

  screen=PlayerState(CurrentPlayer).getPupScreen(villainIdx)
  ModeMultiplier=1              ' Reset
  bSceneFinished=True             ' Set this so we dont kick until scenes are finished\

  if SceneCollectShotMultiplier<>1 then ShotMultiplier = SceneCollectShotMultiplier     ' Put this back in case we were holding a shot multiplier
  ' Add Jackpot Score
  AddScoreMode2 villainIdx, GetBonusTotal(villainIdx), True

  calloutIdx=INT(RND*3)+1
  calloutName="b66-VillainEnd" & calloutIdx

  if PlayerState(CurrentPlayer).Villains(villainIdx).PupScreen = sSwapPos and TUTMultiplier * PlayMultiplier * ShotMultiplier <> 1 then
    TotalMultiplier = TUTMultiplier * PlayMultiplier * ShotMultiplier
  elseif PlayMultiplier * ShotMultiplier <> 1 then
    TotalMultiplier = PlayMultiplier * ShotMultiplier
  End if
  if SceneCollectShotMultiplier<>1 then ShotMultiplier = 1                  ' Put this back in case we were holding a shot multiplier
  SceneCollectShotMultiplier=1

  PuPlayer.LabelSet screen,"GeneralTop1","",1,""
  PuPlayer.LabelSet screen,"GeneralTop2","",1,""
  PuPlayer.LabelSet screen,"GeneralCenter3","SUPER JACKPOT", 1, "{'mt':2,'size':11,'color':" & pupWhite & "}"
  PuPlayer.LabelSet screen,"GeneralCenter1","", 1, ""
  PuPlayer.LabelSet screen,"GeneralCenter2",FormatScore(GetBonusTotal(villainIdx) * TotalMultiplier), 1, "{'mt':2,'size':11}"
  PuPlayer.LabelSet screen,"GeneralBottom1","", 1, ""
  PuPlayer.LabelSet screen,"GeneralBottom2","",1,""
  PlayerState(CurrentPlayer).setFinished(villainIdx) = True           ' MajorV is Finished
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightSuperJArrow, "", 0
  PlayerState(CurrentPlayer).RestoreAllLights
  DOF 622, DOFPulse 'Super Jackpot

  ' Save off high score
  if PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal > PlayerState(CurrentPlayer).Villains(villainIdx).ModeHSTotal then
    PlayerState(CurrentPlayer).Villains(villainIdx).ModeHSTotal = PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal
  End if

  ' Cancel Playfield Multiplier (PFM) if it is waiting to be started
  if PlayfieldMultiplier=1 then
    PlayfieldMultiplier=0
    bFlash1Enabled = False
    DOF 128, DOFOff 'Beacon Off
  End if

  ' Turn off all my lights so we can requalify
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightPengArrow, "white", 0
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightJokerArrow, "white", 0
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightRiddlerArrow1, "white", 0
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightRiddlerArrow2, "white", 0
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow1, "white", 0
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow2, "white", 0

  ' Turn off Locks
  PlayerState(CurrentPlayer).SetBallLockStates 0, PlayerState(CurrentPlayer).BallLockStates(0)    ' Back in MajorVillain Restore Lock states
  PlayerState(CurrentPlayer).SetBallLockStates 1, PlayerState(CurrentPlayer).BallLockStates(1)
  PlayerState(CurrentPlayer).SetBallLockStates 2, PlayerState(CurrentPlayer).BallLockStates(2)

  ' Turn off Bat Turn if we didnt start it
  EnableBatTurn False

  FinishLen=3000
  if villainIdx=kMajV_S1Joker then
    FinishText="The Joker Total:"
    tmpStr="joker"
    SetDefPulse lJoker
    SetLightColor lJoker, "", 1
    FinishLen=3766
    PlayerState(CurrentPlayer).SetProgress(villainIdx) = 1          ' Make it harder
    PlayerState(CurrentPlayer).SetProgress(kMajV_S2Joker) = 1       ' Make it harder
    PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Joker)=True

    PlayerState(CurrentPlayer).SeasonIdx(kMajV_Joker)=kMajV_S2Joker   ' Select Alternate
    PlayerState(CurrentPlayer).setActive(kMajV_S1Joker)=False
    PlayerState(CurrentPlayer).setActive(kMajV_S2Joker)=True

  elseif villainIdx=kMajV_S2Joker then
    FinishText="The Joker Total:"
    tmrPenMagnetCancel
    tmpStr="joker2"
    SetDefPulse lJoker
    SetLightColor lJoker, "", 1
    FinishLen=2439
    PlayerState(CurrentPlayer).SetProgress(villainIdx) = 1          ' Make it harder
    PlayerState(CurrentPlayer).SetProgress(kMajV_S1Joker) = 1       ' Make it harder
    PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Joker)=True

    PlayerState(CurrentPlayer).SeasonIdx(kMajV_Joker)=kMajV_S1Joker   ' Select Alternate
    PlayerState(CurrentPlayer).setActive(kMajV_S1Joker)=True
    PlayerState(CurrentPlayer).setActive(kMajV_S2Joker)=False

  elseif villainIdx=kMajV_S1CatWoman then
    FinishText="Catwoman Total:"
    if calloutIdx=3 then calloutName=calloutName&"She"
    tmpStr="catwoman"
    SetDefPulse lCatwoman
    SetLightColor lCatwoman, "", 1
    FinishLen=6687
    PlayerState(CurrentPlayer).SetProgress(villainIdx) = 0        ' Make it harder
    PlayerState(CurrentPlayer).SetProgress(kMajV_S2CatWoman) = 0    ' Make it harder
    PlayerState(CurrentPlayer).VEscapeProgress(kMajV_CatWoman)=True
    PlayerState(CurrentPlayer).save_lCatStates(0)=2
    PlayerState(CurrentPlayer).save_lCatStates(1)=0
    PlayerState(CurrentPlayer).save_lCatStates(2)=0
    PlayerState(CurrentPlayer).save_lCatStates(3)=2
    PlayerState(CurrentPlayer).save_lCatStates(4)=0
    PlayerState(CurrentPlayer).save_lCatStates(5)=0

    PlayerState(CurrentPlayer).SeasonIdx(kMajV_CatWoman)=kMajV_S2CatWoman ' Select Alternate
    PlayerState(CurrentPlayer).setActive(kMajV_S1CatWoman)=False
    PlayerState(CurrentPlayer).setActive(kMajV_S2CatWoman)=True

  elseif villainIdx=kMajV_S2CatWoman then
    FinishText="Catwoman Total:"
    if calloutIdx=3 then calloutName=calloutName&"She"
    tmpStr="catwoman2"
    SetDefPulse lCatwoman
    SetLightColor lCatwoman, "", 1
    FinishLen=7705
    PlayerState(CurrentPlayer).SetProgress(villainIdx) = 0        ' Make it harder
    PlayerState(CurrentPlayer).SetProgress(kMajV_S1CatWoman) = 0    ' Make it harder
    PlayerState(CurrentPlayer).VEscapeProgress(kMajV_CatWoman)=True
    PlayerState(CurrentPlayer).save_lCatStates(0)=2
    PlayerState(CurrentPlayer).save_lCatStates(1)=0
    PlayerState(CurrentPlayer).save_lCatStates(2)=0
    PlayerState(CurrentPlayer).save_lCatStates(3)=2
    PlayerState(CurrentPlayer).save_lCatStates(4)=0
    PlayerState(CurrentPlayer).save_lCatStates(5)=0


    PlayerState(CurrentPlayer).SeasonIdx(kMajV_CatWoman)=kMajV_S1CatWoman ' Select Alternate
    PlayerState(CurrentPlayer).setActive(kMajV_S1CatWoman)=True
    PlayerState(CurrentPlayer).setActive(kMajV_S2CatWoman)=False

  elseif villainIdx=kMajV_S1Riddler then
    FinishText="The Riddler Total:"
    tmpStr="riddler"
    SetDefPulse lRiddler
    SetLightColor lRiddler, "", 1
    FinishLen=4800
    PlayerState(CurrentPlayer).SetProgress(villainIdx) = 0        ' Make it harder
    PlayerState(CurrentPlayer).SetProgress(kMajV_S2Riddler) = 0     ' Make it harder
    PlayerState(CurrentPlayer).Villains(villainIdx).LoopQualCnt=2
    PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Riddler)=True

    PlayerState(CurrentPlayer).SeasonIdx(kMajV_Riddler)=kMajV_S2Riddler ' Select Alternate
    PlayerState(CurrentPlayer).setActive(kMajV_S1Riddler)=False
    PlayerState(CurrentPlayer).setActive(kMajV_S2Riddler)=True

  elseif villainIdx=kMajV_S2Riddler then
    FinishText="The Riddler Total:"
    tmpStr="riddler2"
    SetDefPulse lRiddler
    SetLightColor lRiddler, "", 1
    FinishLen=3766
    finishVolume=0
    PlayerState(CurrentPlayer).SetProgress(villainIdx) = 0        ' Make it harder
    PlayerState(CurrentPlayer).SetProgress(kMajV_S1Riddler) = 0     ' Make it harder
    PlayerState(CurrentPlayer).Villains(villainIdx).LoopQualCnt=2
    PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Riddler)=True

    PlayerState(CurrentPlayer).SeasonIdx(kMajV_Riddler)=kMajV_S1Riddler ' Select Alternate
    PlayerState(CurrentPlayer).setActive(kMajV_S1Riddler)=True
    PlayerState(CurrentPlayer).setActive(kMajV_S2Riddler)=False

  elseif villainIdx=kMajV_S1Peng then
    FinishText="The Penguin Total:"
    tmpStr="penguin"
    SetDefPulse lPeng
    SetLightColor lPeng, "", 1
    FinishLen=3632
    PlayerState(CurrentPlayer).SetProgress(villainIdx) = 0        ' Make it harder
    PlayerState(CurrentPlayer).SetProgress(kMajV_S2Peng) = 0      ' Make it harder
    PlayerState(CurrentPlayer).Villains(villainIdx).LoopQualCnt=2
    PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Peng)=True

    PlayerState(CurrentPlayer).SeasonIdx(kMajV_Peng)=kMajV_S2Peng   ' Select Alternate
    PlayerState(CurrentPlayer).setActive(kMajV_S1Peng)=False
    PlayerState(CurrentPlayer).setActive(kMajV_S2Peng)=True

  elseif villainIdx=kMajV_S2Peng then
    FinishText="The Penguin Total:"
    tmpStr="penguin2"
    SetDefPulse lPeng
    SetLightColor lPeng, "", 1
    FinishLen=4066
    PlayerState(CurrentPlayer).SetProgress(villainIdx) = 0        ' Make it harder
    PlayerState(CurrentPlayer).SetProgress(kMajV_S1Peng) = 0      ' Make it harder
    PlayerState(CurrentPlayer).Villains(villainIdx).LoopQualCnt=2
    PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Peng)=True

    PlayerState(CurrentPlayer).SeasonIdx(kMajV_Peng)=kMajV_S1Peng   ' Select Alternate
    PlayerState(CurrentPlayer).setActive(kMajV_S1Peng)=True
    PlayerState(CurrentPlayer).setActive(kMajV_S2Peng)=False

  End If
  PlayerState(CurrentPlayer).setFinished(villainIdx) = False            ' Re-Enable

  QueueFlushS screen
  DOF 152, DOFPulse
  VPMTimer.AddTimer FinishLen+500, "PlaySoundVol """&calloutName&""", VolDef '"
  VPMTimer.AddTimer FinishLen+1000, "ShowMajorTotal " & screen & ",""" & FinishText & """, " & PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal & " '"
  QueueSceneS screen, "playclear "&screen&":playmedia ""finish.mp4"", ""video-" & tmpStr & """, "&screen&", """", -1, """", "&finishVolume&", 1 ", FinishLen, 0
  QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter3"","""", 1, ""{'mt':2,'size':6}"" ",  -1, 0
  QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter2"","""", 1, ""{'mt':2,'size':6}"" ",  -1, 0
  QueueSceneS screen, "playclear "&screen&":playmedia ""captured.mp4"", ""video-" & tmpStr & """, "&screen&", """", -1, """", 0, 1 ", 3000, 0
  QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter3"","""", 1, ""{'mt':2,'size':6}"" ",  -1, 0
  QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter2"","""", 1, ""{'mt':2,'size':6}"" ",  -1, 0

  PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal=0   ' Clear mode total after we called the ShowMajorTotal function

  ' Check ExtraBall
  finishedCnt=0
  for i = 0 to 3
    If PlayerState(CurrentPlayer).VEscapeProgress(i) then
      finishedCnt=finishedCnt+1
    End if
  Next
  if finishedCnt = 2 and PlayerState(CurrentPlayer).bExtraBallVillain=False then  ' Once you finish 2 you get extra ball
    PlayerState(CurrentPlayer).bExtraBallVillain=True
    LightExtraBall
  End if

' If PlayerState(CurrentPlayer).isAwardActive(PlayerState(CurrentPlayer).SeasonIdx(kMajV_Joker)) and _
'   PlayerState(CurrentPlayer).isAwardActive(PlayerState(CurrentPlayer).SeasonIdx(kMajV_Peng)) and _
'   PlayerState(CurrentPlayer).isAwardActive(PlayerState(CurrentPlayer).SeasonIdx(kMajV_CatWoman)) and _
'   PlayerState(CurrentPlayer).isAwardActive(PlayerState(CurrentPlayer).SeasonIdx(kMajV_Riddler)) then
  ' Villain Escape
  if PlayerState(CurrentPlayer).VEscapeProgress(kMajV_CatWoman) and PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Joker) and _
    PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Peng) and PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Riddler) then

    QualifyVillainEscape()

  End if

  ' See if another Villian is queued up to be qualified. If so activate it (Unless Villain Escape is Active)
  nextQual = PlayerState(CurrentPlayer).getNextQueueQual
  if nextQual<>-1 and PlayerState(CurrentPlayer).isEnabled(kWiz_VillainEscape)=False then
    PlayerState(CurrentPlayer).RemoveScreen(villainIdx)     ' remove the screen now
    TurnTable_Goto(kTT_Phone)

    SetMajorQualLights True     ' Setup the lights the way they were
    QueueSceneS screen, "PuPlayer.playlistplayex pBackglass, ""PuPOverlays"" ,""batsignal"&PlayerState(CurrentPlayer).numScreens&".png"",  1, 1 ", -1, 0
' We shouldnt need this
'   vpmtimer.addtimer 6000, "KickerPengKick(False) '"

    select case nextQual
      case kMajV_S1Joker:
        QueueSceneS screen, "ProgressJokerS1 (lArrowJoker) ", 3000, 1
      case kMajV_S2Joker:
        QueueSceneS screen, "ProgressJokerS2 (lArrowJoker) ", 3000, 1
      case kMajV_S1CatWoman
        QueueSceneS screen, "ProgressCatWomanS1 (lArrowCat1) ", 3000, 1
      case kMajV_S2CatWoman
        QueueSceneS screen, "ProgressCatWomanS2 (lArrowCat1) ", 3000, 1
      case kMajV_S1Riddler:
        QueueSceneS screen, "ProgressRiddlerS1 (lArrowRiddler1) ", 3000, 1
      case kMajV_S2Riddler:
        QueueSceneS screen, "ProgressRiddlerS2 (lArrowRiddler1) ", 3000, 1
      case kMajV_S1Peng:
        QueueSceneS screen, "ProgressPengS1 (lArrowPenguin) ", 3000, 1
      case kMajV_S2Peng:
        QueueSceneS screen, "ProgressPengS2 (lArrowPenguin) ", 3000, 1
    End Select
    SetVBackground
    QueueSceneS2 screen, "PlayerState(CurrentPlayer).QueueQualDelete " & nextQual & " ", -1, 1, True    ' Remove from the qualified queue
    QueueSceneS2 screen, "KickerPengKick(False) ", -1, 1, True
  Else
    TurnTable_Goto(kTT_TV)
'   SetVBackground
    'QueueSceneS screen, "PuPlayer.playlistplayex pBackglass, ""PuPOverlays"" ,""batsignal"&PlayerState(CurrentPlayer).numScreens&".png"",  1, 1 ", -1, 1
'   vpmtimer.addtimer 6000, "PlaySoundVol ""KickerPengKick(False):SetMajorQualLights True:StartLastScene'"
    QueueSceneS2 screen, "PlayerState(CurrentPlayer).RemoveScreen(" &villainIdx&") ", -1, 1, True
    QueueSceneS2 screen, "SetVBackground ", -1, 1, True

    ' Put light back unless VillainEscape is Qualified
    if PlayerState(CurrentPlayer).isEnabled(kWiz_VillainEscape)=False then
      QueueSceneS2 screen, "KickerPengKick(False):SetMajorQualLights True:StartLastScene ", -1, 1, True
    else
      QueueSceneS2 screen, "KickerPengKick(False):StartLastScene ", -1, 1, True
    End if
  End if
  PauseTimersForce FinishLen+4500 ' Add an extra second
  SetBGMusic

End Sub

Sub ShowMajorTotal(screen, TextStr, Total)
  PlaySoundVol "sfx-jail-bars", VolSfx
  PuPlayer.LabelSet screen,"GeneralCenter3",TextStr, 1, "{'mt':2,'size':11,'color':" & pupWhite & "}"
  PuPlayer.LabelSet screen,"GeneralCenter2",FormatScore(Total), 1, "{'mt':2,'size':11}"
End Sub


Sub SceneMinorEnd(bFinish)                    ' Minor End Minor Villain
  dim tmpStr
  Dim nextQual
  Dim Screen
  Dim FailStr
  Dim FailTotal
  Dim villainIdx
  Dim EggTxt1
  Dim i
  Dim FinishLen
  Dim SkipCustomFinish:SkipCustomFinish=False         ' Shame doesnt have an end scene

  FinishLen=3600
  tmrMinor.Enabled = False
  villainIdx=-1
  For i = kMinV_S1MadHatter to kMinV_S3KingTut2         ' End this villain
    If PlayerState(CurrentPlayer).isActive(i) then
      villainIdx=i
      exit for
    End if
  Next
'WriteToLog "     ", "SceneMinorEnd: " & villainIdx
  if villainIdx=-1 then exit sub        ' Not active minor villain

  PlayerState(CurrentPlayer).TakeJackpot=PlayerState(CurrentPlayer).TakeJackpot*2

  'bSceneFinished=True              ' Set this so we dont kick until scenes are finished
  if villainIdx=kMinV_S1MadHatter then
    tmrHatter.Enabled = False
    tmpStr="Hatter1"
    FailStr="Mad Hatter Total:"
    FailTotal= FormatScore(PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal)
    FinishLen=3250
    if bFinish then
      SetLightColor lSeason1, "", 1
      For i = kMinV_S1MadHatter to kMinV_S3KingTut2         ' Re-Enbled all failed villains
        PlayerState(CurrentPlayer).setEnabled(i) = True
      Next
    End if

  elseif villainIdx=kMinV_S1KingTut then
    tmpStr="Tut1"
    FailStr="King Tut Total:"
    FailTotal= FormatScore(PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal)
    FinishLen=2692
    if bFinish then SetLightColor lSeason1, "", 1:AddTUTMultiplier

  elseif villainIdx=kMinV_S1Bookworm then
    tmpStr="Bookworm"
    FailStr="Bookworm Total:"
    FailTotal=FormatScore(PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal)
    FinishLen=4640
    if bFinish then SetLightColor lSeason1, "", 1

  elseif villainIdx=kMinV_S2KingTut1 then
    tmpStr="Tut2"
    FailStr="King Tut Total:"
    FailTotal=FormatScore(PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal)
    if bFinish then SetLightColor lSeason2, "", 1:AddTUTMultiplier

  elseif villainIdx=kMinV_S2EggHead then
    tmpStr="Egg1"
    FailStr="Egghead Total:"
    FailTotal=FormatScore(PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal)
    FinishLen=2391
    if bFinish then SetLightColor lSeason2, "", 1

    BonusAddMode villainIdx, PlayerState(CurrentPlayer).Jackpot(villainIdx), False    ' Add to end of ball jackpot
    EggTxt1=FormatScore(PlayerState(CurrentPlayer).Jackpot(villainIdx))

  elseif villainIdx=kMinV_S2MrFreeze then
    tmpStr="Freeze"
    FailStr="Mr Freeze Total:"
    FailTotal=FormatScore(PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal)
    FinishLen=1719
    if bFinish then SetLightColor lSeason2, "", 1

  elseif villainIdx=kMinV_S2Shame then
    tmpStr="Shame1"
    FailStr="Shame Total:"
    FailTotal=FormatScore(PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal)

    if PlayerState(CurrentPlayer).TProgress(villainIdx)>=10 then bFinish=True:SkipCustomFinish=True     ' Shane is Multiball and ends differently

    if bFinish then
      SetLightColor lSeason2, "", 1
      PlayerState(CurrentPlayer).ShameCompletions=PlayerState(CurrentPlayer).ShameCompletions+1
    End if

      ' Restore
      SetLightColor lGadgetG1, "", PlayerState(CurrentPlayer).GadgetProgress(0)
      SetLightColor lGadgetA,  "", PlayerState(CurrentPlayer).GadgetProgress(1)
      SetLightColor lGadgetD,  "", PlayerState(CurrentPlayer).GadgetProgress(2)
      SetLightColor lGadgetG2, "", PlayerState(CurrentPlayer).GadgetProgress(3)
      SetLightColor lGadgetE,  "", PlayerState(CurrentPlayer).GadgetProgress(4)
      SetLightColor lGadgetT,  "", PlayerState(CurrentPlayer).GadgetProgress(5)

      SetLightColor lTV1, "", PlayerState(CurrentPlayer).TVProgress(0)
      SetLightColor lTV2,  "", PlayerState(CurrentPlayer).TVProgress(1)
      SetLightColor lTV3,  "", PlayerState(CurrentPlayer).TVProgress(2)

  elseif villainIdx=kMinV_S2MadHatter then
    tmpStr="Hatter2"
    FailStr="Mad Hatter Total:"
    FailTotal=FormatScore(PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal)
    if bFinish then SetLightColor lSeason2, "", 1

  elseif villainIdx=kMinV_S2KingTut2 then
    tmpStr="Tut3"
    FailStr="King Tut Total:"
    FailTotal=FormatScore(PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal)
    FinishLen=5340
    if bFinish then SetLightColor lSeason2, "", 1:AddTUTMultiplier

  elseif villainIdx=kMinV_S3KingTut1  then
    tmpStr="Tut4"
    FailStr="King Tut Total:"
    FailTotal=FormatScore(PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal)
    FinishLen=8765
    if bFinish then SetLightColor lSeason3, "", 1:AddTUTMultiplier

  elseif villainIdx=kMinV_S3EggHead1 then
    tmpStr="Egg2"
    FailStr="Egghead Total:"
    FailTotal=FormatScore(PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal)
    FinishLen=1433
    if bFinish then SetLightColor lSeason3, "", 1

    BonusAddMode villainIdx, PlayerState(CurrentPlayer).Jackpot(villainIdx), False    ' Add to end of ball jackpot
    EggTxt1=FormatScore(PlayerState(CurrentPlayer).Jackpot(villainIdx))

  elseif villainIdx=kMinV_S3EggHead2 then
    tmpStr="Egg3"
    FailStr="Egghead Total:"
    FailTotal=FormatScore(PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal)
    FinishLen=1233
    if bFinish then SetLightColor lSeason3, "", 1

    BonusAddMode villainIdx, PlayerState(CurrentPlayer).Jackpot(villainIdx), False    ' Add to end of ball jackpot
    EggTxt1=FormatScore(PlayerState(CurrentPlayer).Jackpot(villainIdx))

  elseif villainIdx=kMinV_S3Shame then
    tmpStr="Shame2"
    FailStr="Shame Total:"
    FailTotal=FormatScore(PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal)
    if PlayerState(CurrentPlayer).TProgress(villainIdx)>=9 then bFinish=True:SkipCustomFinish=True      ' Shane is Multiball and ends differently

    if bFinish then
      SetLightColor lSeason3, "", 1
      PlayerState(CurrentPlayer).ShameCompletions=PlayerState(CurrentPlayer).ShameCompletions+1
    End if

  elseif villainIdx=kMinV_S3KingTut2  then
    tmpStr="Tut5"
    FailStr="King Tut Total:"
    FailTotal=FormatScore(PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal)
    FinishLen=1741
    if bFinish then SetLightColor lSeason3, "", 1:AddTUTMultiplier

  End If

  ' Save to HS total for this mode and zero the total
  if PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal > PlayerState(CurrentPlayer).Villains(villainIdx).ModeHSTotal then
    PlayerState(CurrentPlayer).Villains(villainIdx).ModeHSTotal= PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal
  End if
  PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal=0

  ' Mode Cleanup
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightRiddlerArrow1, "white", 0
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightRiddlerArrow2, "white", 0
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightJokerArrow, "white", 0
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightPengArrow, "white", 0
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow1, "white", 0
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow2, "white", 0

  SetDefPulse(lTV1)
  SetDefPulse(lTV2)
  SetDefPulse(lTV3)
  lTV1.state =PlayerState(CurrentPlayer).TVProgress(0)
  lTV2.state =PlayerState(CurrentPlayer).TVProgress(1)
  lTV3.state =PlayerState(CurrentPlayer).TVProgress(2)

  PlayerState(CurrentPlayer).RestoreAllLights

  Screen = PlayerState(CurrentPlayer).getPupScreen(villainIdx)
  QueueFlushS screen
  ClearAllText screen

  ' Clear the progress unless Tut Is Enabled
  if Not(PlayerState(CurrentPlayer).isAwardActive(kMinV_S1KingTut) or PlayerState(CurrentPlayer).isAwardActive(kMinV_S2KingTut1) or _
    PlayerState(CurrentPlayer).isAwardActive(kMinV_S2KingTut2) or PlayerState(CurrentPlayer).isAwardActive(kMinV_S3KingTut1) or _
    PlayerState(CurrentPlayer).isAwardActive(kMinV_S3KingTut2)) then
    PlayerState(CurrentPlayer).SetProgress(villainIdx)=0
  End if

  if bFinish = False then
    PlaySoundVol "sfx-villain-fail", VolSfx
    DOF 158, DOFPulse 'Villain Fail
'   PuPlayer.LabelSet screen,"GeneralCenter3",FailStr, 1, "{'mt':2,'color':"&pupWhite&",'size':10}"
'   PuPlayer.LabelSet screen,"GeneralCenter2",FailTotal, 1, "{'mt':2,'color':"&pupOrange&",'size':10}"
'   QueueSceneS screen, "playclear "&screen&":playmedia ""fail.mp4"", ""video-" & tmpStr & """, "&screen&", """", -1, """", 0, 1 ", 3000, 0

    QueueSceneS screen, "playclear "&screen&":SceneGeneralStart3Color "&villainIdx&", 0, 1, ""video-" & tmpStr & """, ""fail.mp4"", ""^^^10;"&FailStr&"^^10;"&FailTotal&"^^^"", ""^^^"&pupWhite&"^^"&pupOrange&"^^^"" ", 3000, 0
    QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter3"","""", 1, ""{'mt':2,'color':"&pupOrange&"}"" ", -1, 0
    QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter2"","""", 1, ""{'mt':2,'color':"&pupOrange&"}"" ", -1, 0

  Else
    PlayerState(CurrentPlayer).setFinished(villainIdx) = True           ' MinorV is Finished

    if SkipCustomFinish=False then
      QueueSceneS screen, "playclear "&screen&":SceneGeneralStart3Color "&villainIdx&", 0, 0, ""video-" & tmpStr & """, ""finish.mp4"", ""^^^^^10;"&EggTxt1&"^^^"", """" ", FinishLen, 0
'     QueueSceneS screen, "playclear "&screen&":playmedia ""finish.mp4"", ""video-" & tmpStr & """, "&screen&", """", -1, """", 1, 1 ", FinishLen, 0
'     if EggTxt1<>"" then PuPlayer.LabelSet screen,"GeneralCenter2",FormatScore(PlayerState(CurrentPlayer).Jackpot(villainIdx)), 1, "{'mt':2,'color':"&pupOrange&",'size':10}"
    End if
    VPMTimer.AddTimer FinishLen+500, "PlaySoundVol ""sfx-jail-bars"", VolSfx '"
    QueueSceneS2 screen, "playclear "&screen&":PlaySoundVol ""sfx-villain-complete"", VolSfx", -1, 0, True
    QueueSceneS2 screen, "SceneGeneralStart3Color "&villainIdx&", 0, 1, ""video-" & tmpStr & """, ""captured.mp4"", ""^^^10;"&FailStr&"^^10;"&FailTotal&"^^^"", ""^^^"&pupWhite&"^^"&pupOrange&"^^^"" ", 3000, 0, True
'   PuPlayer.LabelSet screen,"GeneralCenter3",FailStr, 1, "{'mt':2,'color':"&pupWhite&",'size':10}"
'   PuPlayer.LabelSet screen,"GeneralCenter2",FailTotal, 1, "{'mt':2,'color':"&pupOrange&",'size':10}"
'   QueueSceneS screen, "playclear "&screen&":playmedia ""captured.mp4"", ""video-" & tmpStr & """, "&screen&", """", -1, """", 0, 1:PlaySoundVol ""sfx-jail-bars"", VolSfx:PlaySoundVol ""sfx-villain-complete"", VolSfx ", 3000, 0
    QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter3"","""", 1, ""{'mt':2,'color':"&pupOrange&"}"" ", -1, 0
    QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter2"","""", 1, ""{'mt':2,'color':"&pupOrange&"}"" ", -1, 0
    DOF 157, DOFPulse 'Villain Complete
    ' See if we completed all for a season if so unlock so we can do it again
    ' Season 1
    if PlayerState(CurrentPlayer).isFinished(kMinV_S1MadHatter) and PlayerState(CurrentPlayer).isFinished(kMinV_S1KingTut) and PlayerState(CurrentPlayer).isFinished(kMinV_S1Bookworm) Then
      PlayerState(CurrentPlayer).setFinished(kMinV_S1MadHatter)=False
      PlayerState(CurrentPlayer).setFinished(kMinV_S1KingTut)=False
      PlayerState(CurrentPlayer).setFinished(kMinV_S1Bookworm)=False
    End if
    ' Season 2
    if PlayerState(CurrentPlayer).isFinished(kMinV_S2KingTut1) and PlayerState(CurrentPlayer).isFinished(kMinV_S2EggHead) and PlayerState(CurrentPlayer).isFinished(kMinV_S2MrFreeze) and _
       PlayerState(CurrentPlayer).isFinished(kMinV_S2Shame) and PlayerState(CurrentPlayer).isFinished(kMinV_S2MadHatter) and PlayerState(CurrentPlayer).isFinished(kMinV_S2KingTut2) Then
      PlayerState(CurrentPlayer).setFinished(kMinV_S2KingTut1)=False
      PlayerState(CurrentPlayer).setFinished(kMinV_S2EggHead)=False
      PlayerState(CurrentPlayer).setFinished(kMinV_S2MrFreeze)=False
      PlayerState(CurrentPlayer).setFinished(kMinV_S2Shame)=False
      PlayerState(CurrentPlayer).setFinished(kMinV_S2MadHatter)=False
      PlayerState(CurrentPlayer).setFinished(kMinV_S2KingTut2)=False
    End if
    ' Season 3
    if PlayerState(CurrentPlayer).isFinished(kMinV_S3KingTut1) and PlayerState(CurrentPlayer).isFinished(kMinV_S3EggHead1) and PlayerState(CurrentPlayer).isFinished(kMinV_S3EggHead2) and _
       PlayerState(CurrentPlayer).isFinished(kMinV_S3Shame) and PlayerState(CurrentPlayer).isFinished(kMinV_S3KingTut2)  Then
      PlayerState(CurrentPlayer).setFinished(kMinV_S3KingTut1)=False
      PlayerState(CurrentPlayer).setFinished(kMinV_S3EggHead1)=False
      PlayerState(CurrentPlayer).setFinished(kMinV_S3EggHead2)=False
      PlayerState(CurrentPlayer).setFinished(kMinV_S3Shame)=False
      PlayerState(CurrentPlayer).setFinished(kMinV_S3KingTut2)=False
    End if

    ' Check MinorVillainWizardModes
    if lSeason1.state = 1 and lSeason2.state=1 and lSeason3.state=1 then
      SetSlowPulse lSeason1
      SetSlowPulse lSeason2
      SetSlowPulse lSeason3
      SetLightColor lSeason1, "", 2
      SetLightColor lSeason2, "", 2
      SetLightColor lSeason3, "", 2
      SetLightColor lBatman, "", 2
      SetLightColor lTV, "", 2
      SetLightFlasher flshBatSignal, 2
    End if

  End if

  ' Disable Mode unless you have Hatter
  if PlayerState(CurrentPlayer).isAwardActive(kMinV_S1MadHatter)=False and PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MadHatter)=False then
    PlayerState(CurrentPlayer).setEnabled(villainIdx) = False           ' Disabled It
  End if


  'if LastSwitchHit = "KickerPeng" then             ' We could be in multiball so this really doesnt work just need to kick it without sound
  ' QueueSceneS screen, "KickerPengKick(False) ", -1, 1
  'End if
  'QueueSceneS2 screen, "KickerPengKick True ", -1, 1, True   ' We shouldnt need to do this, If we do we can kick during a MajorV collect which is not correct
  QueueSceneS2 screen, "MinorEnd "&villainIdx&" ", 200, 1, True
  EndOfBallWaitTime = getQueueTimeS(screen)

End Sub



Sub SceneMinorVillainWizardEnd(bFinish)
'WriteToLog "     ", "SceneMinorVillainWizardEnd: " & MVWSelectIdx
  dim tmpStr
  Dim nextQual
  Dim Screen
  Dim FailStr
  Dim FailTotal
  Dim villainIdx
  Dim i
  Dim FinishLen

  FinishLen=3600
  villainIdx=-1
  For i = kWiz_Batusi to kWiz_Holy        ' End this wizard
    If PlayerState(CurrentPlayer).isActive(i) then
      villainIdx=i
      exit for
    End if
  Next
  if villainIdx=-1 then exit sub        ' Not active Wizard


'WriteToLog "     ", "villainIdx:" & villainIdx

  'bSceneFinished=True              ' Set this so we dont kick until scenes are finished
  if villainIdx=kWiz_Batusi  then
    tmpStr="Batusi"
    FailStr="Batusi Total:"
    FailTotal=FormatScore(PlayerState(CurrentPlayer).Villains(kWiz_Batusi).ModeTotal)
    FinishLen=1766

    SetLightColor lBatSignal, "", 0   ' Clear lights
    SetLightFlasher flshBatSignal, 0

  elseif villainIdx=kWiz_GasAttack then
    tmpStr="Gas"
    FailStr="Gas Attack Total:"
    FailTotal=FormatScore(PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).ModeTotal)
    FinishLen=2692

    EndHurryUp3 True
    tmrGasAttackRoving.Enabled = False


  elseif villainIdx=kWiz_Holy  then
    tmpStr="Holy"
    FailStr="Holy Multiball Total:"
    FailTotal=FormatScore(PlayerState(CurrentPlayer).Villains(kWiz_Holy).ModeTotal)
    FinishLen=4640

  End If

  if PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal > PlayerState(CurrentPlayer).Villains(villainIdx).ModeHSTotal then
    PlayerState(CurrentPlayer).Villains(villainIdx).ModeHSTotal = PlayerState(CurrentPlayer).Villains(villainIdx).ModeTotal
  End if


  ' Mode Cleanup
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightRiddlerArrow1, "white", 0
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightRiddlerArrow2, "white", 0
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightJokerArrow, "white", 0
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightPengArrow, "white", 0
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow1, "white", 0
  PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow2, "white", 0

  ClearAllText screen

  PlayerState(CurrentPlayer).RestoreAllLights

  Screen = PlayerState(CurrentPlayer).getPupScreen(villainIdx)
  if Screen=-1 then
    'WriteToLog "     ", "ERROR.  Screen not assigned anymore but still displaying  !!!!!!!!!!!!!!!"
    exit sub
  End if

  QueueFlushS screen

  PlayerState(CurrentPlayer).setEnabled(villainIdx) = False           ' Disabled It
  if bFinish = False then
    PuPlayer.LabelSet screen,"GeneralCenter3",FailStr, 1, "{'mt':2,'color':"&pupWhite&",'size':10}"
    PuPlayer.LabelSet screen,"GeneralCenter2",FailTotal, 1, "{'mt':2,'color':"&pupOrange&",'size':10}"
    QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter3"","""", 1, ""{'mt':2,'color':"&pupOrange&"}"" ", -1, 0
    QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter2"","""", 1, ""{'mt':2,'color':"&pupOrange&"}"" ", -1, 0
  Else
    PuPlayer.LabelSet screen,"GeneralCenter3",FailStr, 1, "{'mt':2,'color':"&pupWhite&",'size':10}"
    PuPlayer.LabelSet screen,"GeneralCenter2",FailTotal, 1, "{'mt':2,'color':"&pupOrange&",'size':10}"
    QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter3"","""", 1, ""{'mt':2,'color':"&pupOrange&"}"" ", -1, 0
    QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter2"","""", 1, ""{'mt':2,'color':"&pupOrange&"}"" ", -1, 0
    QueueSceneS screen, "playclear "&screen&":playmedia ""finish.mp4"", ""video-" & tmpStr & """, "&screen&", """", -1, """", 1, 1 ", FinishLen, 0
    PlayerState(CurrentPlayer).setFinished(villainIdx) = True           ' MinorV is Finished
  End if

  QueueSceneS2 screen, "KickerPengKick True ", -1, 1, True
  QueueSceneS2 screen, "SceneMinorVillainWizardEnd2 " & villainIdx & " ", 200, 1, True
  EndOfBallWaitTime = getQueueTimeS(screen)
'WriteToLog "     ", "EndOfBallWaitTime:" & EndOfBallWaitTime

End Sub

Sub SceneMinorVillainWizardEnd2(villainIdx)
' pDMDMulti2 pMVideo  ' Goto the main screen
  QueueFlushV(villainIdx)
  PlayerState(CurrentPlayer).setActive(villainIdx)=False
  PlayerState(CurrentPlayer).RemoveScreen(villainIdx)     ' remove the screen
  SetVBackground
End Sub


Sub StartBatusi2()
  Dim curScore
  ' Start Again
  BatusiCompletions=BatusiCompletions+1
  curScore=PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotValue
  PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotBase=PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotBase+250000
  PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotValue=1000000 + (250000*BatusiCompletions)
  PlayerState(CurrentPlayer).AddProgressScore kWiz_Batusi, curScore
  AddScoreMode kWiz_Batusi, curScore

  if BatusiCompletions=1 then
    PlayerState(CurrentPlayer).SetProgress(kWiz_Batusi)=2
  Else
    PlayerState(CurrentPlayer).SetProgress(kWiz_Batusi)=1
  End if

  if BatusiCompletions<=3 then                  ' First 3 JP award Add-a-ball
    AddMultiball 1
    EnableBallSaver BallSaverTime
  End if

  PlayerState(CurrentPlayer).setFinished(kWiz_Batusi)=True    ' Mark as finished once so the award is active
  PlayerState(CurrentPlayer).setFinished(kWiz_Batusi)=False

  SetLightColor lBatSignal, "", 0
  SetLightFlasher flshBatSignal, 0

  PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightRiddlerArrow1, "blue", 2
  PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightRiddlerArrow2, "blue", 2
  PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightCatArrow1, "blue", 2
  PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightCatArrow2, "blue", 2
  PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightJokerArrow, "blue", 2
  PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightPengArrow, "blue", 2

  VpmTimer.AddTimer 3200, "Kicker001_Hit '"
End Sub


Dim bMVWSelect
Dim MVWSelectIdx
bMVWSelect=False
Sub StartMinorVWizardSelect()
  Dim i
  bMVWSelect=True
  PuPlayer.LabelShowPage pMVideo, 4, 0,""   ' Show Blank Page so it doesnt overlap (We shouldnt need this but labels are popping over)
  PuPlayer.LabelShowPage pBackglass, 2,0,""
  PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"3_Multicolor_TVS.png",  1, 1

  ' Clear splash icons
  For i = 0 to 10
    puPlayer.LabelSet pBackglass,"SelectIcon"&i, "PuPOverlays\\clear.png",0,""
  Next

  PauseTimersForce DMDFet(kDMDFet_TVWizModeSelectTmr)*1000
  tmrSelectMinor.Interval = 1000
  tmrSelectMinor.UserValue = DMDFet(kDMDFet_TVWizModeSelectTmr)
  tmrSelectMinor.Enabled = True
  PuPlayer.LabelSet pBackglass,"SelectCountdown",tmrSelectMinor.UserValue,1,""
  PuPlayer.LabelSet pBackglass,"SelectTitle","Select Your Villain",1,""
  PlaySoundVol "sfx-minor-select", VolSfx
  pausemedia pMusic

'PlayerState(CurrentPlayer).setFinished(kWiz_Batusi)=True       ' test Code

  MVSelectPos=0
  MVWSelectIdx=2                            ' Start with the last one, and then simulate right flipper so it selects the next available one (in case first one is complete)
  SceneMinorVillainWizardSelect RightFlipperKey
End sub

Sub SceneMinorVillainWizardSelectEnd()
'WriteToLog "     ", "SceneMinorVillainWizardSelectEnd: " & MVWSelectIdx
  Dim SN
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bNoTimer:bNoTimer=False       ' Modes that dont have a timer
  if bMVWSelect=False then exit sub     ' Not in the mode

  ResetBallSearch
  PlaySoundVol "sfx-minor-choose", VolSfx
  bMVWSelect=False
  StopSound "sfx-minor-select"
  resumemedia pMusic

  ' Start the Minor Villain Wizard here by setting up the inserts
  Select case MVWSelectIdx    ' Change index to the actual index
    case 0: MVWSelectIdx = kWiz_Batusi  ' Batusi
      TurnTable_Goto(kTT_Batcave)
      BatusiCompletions=0
      BatusiPops=10
      BatusiPopsMax=10

      PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightRiddlerArrow1, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightRiddlerArrow2, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightCatArrow1, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightCatArrow2, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightJokerArrow, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightPengArrow, "blue", 2
      bAddABallGiven=False
      AddMultiball 5
      if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2Shame) or PlayerState(CurrentPlayer).isAwardActive(kMinV_S3Shame) Then  ' Extra ball
        AddMultiball PlayerState(CurrentPlayer).ShameCompletions
      End if

      EnableBallSaver 20

      PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotBase = 3250000
      PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotValue = 1000000
'S  Shots   SJP
'5  3250000   1000000
'4  3500000   4250000   ' Score=325000
'3  3750000   7750000   ' Score=350000
'2  4000000   11500000  ' Score=3750000

    case 1: MVWSelectIdx = kWiz_GasAttack
      TurnTable_Goto(kTT_TV)

      ' TBD Start Hurry Up
      bAddABallGiven=False
      AddMultiball 5
      if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2Shame) or PlayerState(CurrentPlayer).isAwardActive(kMinV_S3Shame) Then  ' Extra ball
        AddMultiball PlayerState(CurrentPlayer).ShameCompletions
      End if

      EnableBallSaver 20


      PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).JackpotBase = 5000000     ' 5Mil
      PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).JackpotValue = 1000000    ' 1M
      if PlayerState(CurrentPlayer).Villains(kWiz_Batusi).bPlayed then  ' Extra 2.5M
        PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotBase=PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotBase+2500000
      End if
      if PlayerState(CurrentPlayer).Villains(kWiz_Holy).bPlayed then    ' Extra 2.5M
        PlayerState(CurrentPlayer).Villains(kWiz_Holy).JackpotBase=PlayerState(CurrentPlayer).Villains(kWiz_Holy).JackpotBase+2500000
      End if

      StartHurryUp3 kWiz_GasAttack, PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).JackpotBase

    case 2: MVWSelectIdx = kWiz_Holy
      TurnTable_Goto(kTT_TV)
'     ' Pick 2 random ones
      rndIdx = INT(RND*6)       ' Random num between 0 and 5
      rndIdx2= INT(Rnd*6)
      while rndIdx = rndIdx2
        rndIdx2=Int(Rnd*6)
      wend
      if rndIdx=0 or rndIdx2=0 then PlayerState(CurrentPlayer).SSetLightColor kWiz_Holy, kLightRiddlerArrow1, "blue", 2
      if rndIdx=1 or rndIdx2=1 then PlayerState(CurrentPlayer).SSetLightColor kWiz_Holy, kLightRiddlerArrow2, "blue", 2
      if rndIdx=2 or rndIdx2=2 then PlayerState(CurrentPlayer).SSetLightColor kWiz_Holy, kLightCatArrow1, "blue", 2
      if rndIdx=3 or rndIdx2=3 then PlayerState(CurrentPlayer).SSetLightColor kWiz_Holy, kLightCatArrow2, "blue", 2
      if rndIdx=4 or rndIdx2=4 then PlayerState(CurrentPlayer).SSetLightColor kWiz_Holy, kLightJokerArrow, "blue", 2
      if rndIdx=5 or rndIdx2=5 then PlayerState(CurrentPlayer).SSetLightColor kWiz_Holy, kLightPengArrow, "blue", 2

      PlayerState(CurrentPlayer).Villains(kWiz_Holy).JackpotBase = 4000000
      PlayerState(CurrentPlayer).Villains(kWiz_Holy).LoopCnt=0

      bAddABallGiven=False
      AddMultiball 5
      if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2Shame) or PlayerState(CurrentPlayer).isAwardActive(kMinV_S3Shame) Then  ' Extra ball
        AddMultiball PlayerState(CurrentPlayer).ShameCompletions
      End if

      EnableBallSaver 20

  End Select

  PuPlayer.LabelShowPage pMVideo, 1, 0,""   ' Restore Page so it doesnt overlap (We shouldnt need this but labels are popping over)
  PuPlayer.LabelShowPage pBackglass, 1,0,""

  PlayerState(CurrentPlayer).AddScreen(MVWSelectIdx)            ' Add a screen
  pDMDMulti2 PlayerState(CurrentPlayer).getPupScreen(MVWSelectIdx)    ' Swap the new screen to the middle

  PlayerState(CurrentPlayer).setActive(MVWSelectIdx)=True
  PlayerState(CurrentPlayer).AddProgress(MVWSelectIdx)

  PlayerState(CurrentPlayer).RestoreAllLights()

  ' Start the hurryup After the screen is set
  if MVWSelectIdx = kWiz_GasAttack then
    PlayerState(CurrentPlayer).SSetLightColor kWiz_GasAttack, kLightJokerArrow, "pink", 2
  End if


' if bNoTimer=False then
'   tmrMinor.UserValue = 47       ' 45 + 2 grace period
'   tmrMinor.Interval = 1000
'   tmrMinor.Enabled = True
'
'   ' Save this so we kmow if things moved around
'   tmrMinorPos=0       ' Main Screen
'   DrawModeTimer tmrMinorPos, tmrMinor.UserValue, True, False
' End if
  SetVBackground      ' update the background
  SetBGMusic

' tmrSelectMinor.Enabled=False

  ' Clear the select mode
  SetDefPulse lSeason1
  SetDefPulse lSeason2
  SetDefPulse lSeason3
  SetLightColor lSeason1, "", 0
  SetLightColor lSeason2, "", 0
  SetLightColor lSeason3, "", 0
  SetLightColor lBatman, "", 0
  if PlayerState(CurrentPlayer).bTVReady = False then
    SetLightColor lTV, "", 0
  End if
  SetLightFlasher flshBatSignal, 0
  Kicker001_Hit
  'vpmtimer.addtimer 1000, "Kicker001.Kick -90, 10 '"
End Sub



Dim MVSelectIdx
Dim bMVSelect
Dim MVSelectDir
Dim MVSelectPos
bMVSelect=False
MVSelectDir=0 ' -1=Right,1=Left
MVSelectPos=0
MVSelectIdx=0
Sub SceneMinorvillainCollect()
'WriteToLog "     ", "SceneMinorvillainCollect"
  bMVSelect=True
  PlayerState(CurrentPlayer).ClearTVProgress()

  PuPlayer.LabelShowPage pMVideo, 4, 0,""   ' Show Blank Page so it doesnt overlap (We shouldnt need this but labels are popping over)
  PuPlayer.LabelShowPage pBackglass, 2,0,""
  PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"3_Multicolor_TVS.png",  1, 1

  SternButtonFlash "white", True

  PauseTimersForce DMDFet(kDMDFet_TVModeSelectTmr)*1000
  tmrSelectMinor.Interval = 1000
  tmrSelectMinor.UserValue = DMDFet(kDMDFet_TVModeSelectTmr)
  tmrSelectMinor.Enabled = True
  PuPlayer.LabelSet pBackglass,"SelectCountdown",tmrSelectMinor.UserValue,1,""
  PuPlayer.LabelSet pBackglass,"SelectTitle","Select Your Villain",1,""
  PlaySoundVol "sfx-minor-select", VolSfx
  pausemedia pMusic

' puPlayer.LabelSet pBackglass,"SelectIcon1", "mv-select\\tp-ico.png",1,"{'mt':2,'color':111111,'width':13, 'height':24,'yalign':0,'xalign':2,'ypos':60,'xpos':13}"
' puPlayer.LabelSet pBackglass,"SelectIcon2", "mv-select\\mh-s1-ico.png",1,"{'mt':2,'color':111111,'width':13, 'height':25,'yalign':0,'xalign':2,'ypos':75.5,'xpos':23.5}"
  MVSelectPos=3
  MVSelectIdx=0                 ' Start at Take Points
  SceneMinorvillainDraw()             ' Draw the current scene
  SceneMinorvillainSelect(RightFlipperKey)    ' Selects the next enabled one

End Sub

Sub tmrSelectMinor_Timer
  tmrSelectMinor.UserValue = tmrSelectMinor.UserValue -1
  if tmrSelectMinor.UserValue >=0 then
    PuPlayer.LabelSet pBackglass,"SelectCountdown", tmrSelectMinor.UserValue,1,""
  End If
  if tmrSelectMinor.UserValue = -2 then ' Grace
    if bMVSelect then
      SceneMinorvillainCollectEnd
    Else
      SceneMinorVillainWizardSelectEnd
    End if
  End If
End Sub

Sub SceneMinorvillainCollectEnd()                 ' They Selected a Minor Villain  MinorVillainStartMinorVillain
'WriteToLog "     ", "SceneMinorvillainCollectEnd: " & MVSelectIdx
  Dim SN
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bNoTimer:bNoTimer=False       ' Modes that dont have a timer like Shame
  if bMVSelect=False then exit sub    ' Not in the mode

  ResetBallSearch
  PlaySoundVol "sfx-minor-choose", VolSfx
  bMVSelect=False
  StopSound "sfx-minor-select"
  resumemedia pMusic

  ' Start the Minor Villain here by setting up the inserts
  Select case MVSelectIdx   ' Change index to the actual index
    case 0: ' This is Take Points
      MVSelectIdx = -1
      AddScore PlayerState(CurrentPlayer).TakeJackpot
      PlayerState(CurrentPlayer).TakeJackpot=750000

    case 1: MVSelectIdx = kMinV_S1MadHatter   ' 2 Random Shots
      rndIdx = INT(RND*6)       ' Random num between 0 and 5
      rndIdx2= INT(Rnd*6)
      while rndIdx = rndIdx2
        rndIdx2=Int(Rnd*6)
      wend
      if rndIdx=0 or rndIdx2=0 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightRiddlerArrow1, "blue", 2
      if rndIdx=1 or rndIdx2=1 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightRiddlerArrow2, "blue", 2
      if rndIdx=2 or rndIdx2=2 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightCatArrow1, "blue", 2
      if rndIdx=3 or rndIdx2=3 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightCatArrow2, "blue", 2
      if rndIdx=4 or rndIdx2=4 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightJokerArrow, "blue", 2
      if rndIdx=5 or rndIdx2=5 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightPengArrow, "blue", 2

      ' Start timer to light more in wave 1
      tmrHatter.UserValue=10
      tmrHatter.Interval=1000
      tmrHatter.Enabled = True

      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotValue = 3000000
      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotBase = 50000

    case 2: MVSelectIdx = kMinV_S1KingTut
      ' Pick a random one
      rndIdx = INT(RND*5)
      select case rndIdx
        case 0: PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightRiddlerArrow1, "blue", 2
        case 1: PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightRiddlerArrow2, "blue", 2
        case 2: PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightPengArrow, "blue", 2
        case 3: PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightCatArrow1, "blue", 2
        case 4: PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightCatArrow2, "blue", 2
      End Select

      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotValue = 3000000
      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotBase = 50000

    case 3: MVSelectIdx = kMinV_S1Bookworm
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S1Bookworm, kLightJokerArrow, "orange", 2

      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotValue = 3000000
      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotBase = 50000

    case 4: MVSelectIdx = kMinV_S2KingTut1    ' Pick 3 random shots
      rndIdx = INT(RND*6)       ' Random num between 0 and 5
      rndIdx2= INT(Rnd*6)
      rndIdx3= INT(Rnd*6)
      while rndIdx = rndIdx2
        rndIdx2=Int(Rnd*6)
      wend
      while rndIdx3 = rndIdx2 or rndIdx3 = rndIdx
        rndIdx3=Int(Rnd*6)
      wend
      ProgressS2Tut1Rnd=""    ' Store off the inverse so we can set for wave 2
      if rndIdx=0 or rndIdx2=0 or rndIdx3=0 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightRiddlerArrow1, "blue", 2 else ProgressS2Tut1Rnd=ProgressS2Tut1Rnd&"0"
      if rndIdx=1 or rndIdx2=1 or rndIdx3=1 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightRiddlerArrow2, "blue", 2 else ProgressS2Tut1Rnd=ProgressS2Tut1Rnd&"1"
      if rndIdx=2 or rndIdx2=2 or rndIdx3=2 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightCatArrow1, "blue", 2 else ProgressS2Tut1Rnd=ProgressS2Tut1Rnd&"2"
      if rndIdx=3 or rndIdx2=3 or rndIdx3=3 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightCatArrow2, "blue", 2 else ProgressS2Tut1Rnd=ProgressS2Tut1Rnd&"3"
      if rndIdx=4 or rndIdx2=4 or rndIdx3=4 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightJokerArrow, "blue", 2 else ProgressS2Tut1Rnd=ProgressS2Tut1Rnd&"4"
      if rndIdx=5 or rndIdx2=5 or rndIdx3=5 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightPengArrow, "blue", 2 else ProgressS2Tut1Rnd=ProgressS2Tut1Rnd&"5"

      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotValue = 3000000
      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotBase = 50000

    case 5: MVSelectIdx = kMinV_S2EggHead
      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotBase = 300000
      if PlayerState(CurrentPlayer).Gadgets <> 0 then   ' Must have a gadget to light this, See if they already have one
        PlayerState(CurrentPlayer).SetProgress(MVSelectIdx)=1
        ' Pick a random one
        rndIdx = INT(RND*6)
        select case rndIdx
          case 0: PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightRiddlerArrow1, "yellow", 2
          case 1: PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightRiddlerArrow2, "yellow", 2
          case 2: PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightJokerArrow, "yellow", 2
          case 3: PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightPengArrow, "yellow", 2
          case 4: PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightCatArrow1, "yellow", 2
          case 5: PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightCatArrow2, "yellow", 2
        End Select

      End if

    case 6: MVSelectIdx = kMinV_S2MrFreeze
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, kLightRiddlerArrow1, "red", 2
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, kLightCatArrow1, "red", 2
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, kLightJokerArrow, "blue", 1
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, kLightCatArrow2, "blue", 1
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, kLightPengArrow, "red", 2
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, kLightRiddlerArrow2, "red", 2

      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotValue = 3000000
      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotBase = 50000

    case 7: MVSelectIdx = kMinV_S2Shame
      SetLightColor lGadgetG2, "", 2
      SetLightColor lGadgetE, "", 2
      SetLightColor lTV2, "", 2
      ProgressS2ShamePos=0          ' Position 0 of the light (when bumpers shift them)
      PlayerState(CurrentPlayer).Villains(kMinV_S2Shame).JackpotValue = 630000

      bAddABallGiven=False

      if PlayerState(CurrentPlayer).Villains(MVSelectIdx).bPlayed=False then
        AddMultiball 1              ' Shame is multiball only the first time
        EnableBallSaver BallSaverTime*2
        bNoTimer=True             ' Shame doesnt have a timer first time
      End if
      if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2Shame) or PlayerState(CurrentPlayer).isAwardActive(kMinV_S3Shame) Then  ' Extra ball
        AddMultiball PlayerState(CurrentPlayer).ShameCompletions
        EnableBallSaver BallSaverTime*2
      End if

    case 8: MVSelectIdx = kMinV_S2MadHatter

      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightRiddlerArrow1, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightRiddlerArrow2, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightJokerArrow, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightPengArrow, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightCatArrow1, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightCatArrow2, "blue", 2

      ' Randomly Make one pink
      rndIdx = INT(RND*6)
      if rndIdx=0 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightRiddlerArrow1, "pink", 2:ProgressS2MadHatterPink=kLightRiddlerArrow1
      if rndIdx=1 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightRiddlerArrow2, "pink", 2:ProgressS2MadHatterPink=kLightRiddlerArrow2
      if rndIdx=2 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightCatArrow1, "pink", 2:ProgressS2MadHatterPink=kLightCatArrow1
      if rndIdx=3 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightCatArrow2, "pink", 2:ProgressS2MadHatterPink=kLightCatArrow2
      if rndIdx=4 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightJokerArrow, "pink", 2:ProgressS2MadHatterPink=kLightJokerArrow
      if rndIdx=5 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightPengArrow, "pink", 2:ProgressS2MadHatterPink=kLightPengArrow

      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotValue = 3000000
      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotBase = 50000


    case 9: MVSelectIdx = kMinV_S2KingTut2
      rndIdx = INT(RND*6)       ' Rhree Random Shots
      rndIdx2= INT(Rnd*6)
      rndIdx3= INT(Rnd*6)
      while rndIdx = rndIdx2
        rndIdx2=Int(Rnd*6)
      wend
      while rndIdx3 = rndIdx2 or rndIdx3 = rndIdx
        rndIdx3=Int(Rnd*6)
      wend
      ProgressS2Tut2Rnd=""    ' Store off the inverse so we can set for wave 2
      if rndIdx=0 or rndIdx2=0 or rndIdx3=0 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightRiddlerArrow1, "blue", 2 else ProgressS2Tut2Rnd=ProgressS2Tut2Rnd&"0"
      if rndIdx=1 or rndIdx2=1 or rndIdx3=1 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightRiddlerArrow2, "blue", 2 else ProgressS2Tut2Rnd=ProgressS2Tut2Rnd&"1"
      if rndIdx=2 or rndIdx2=2 or rndIdx3=2 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightCatArrow1, "blue", 2 else ProgressS2Tut2Rnd=ProgressS2Tut2Rnd&"2"
      if rndIdx=3 or rndIdx2=3 or rndIdx3=3 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightCatArrow2, "blue", 2 else ProgressS2Tut2Rnd=ProgressS2Tut2Rnd&"3"
      if rndIdx=4 or rndIdx2=4 or rndIdx3=4 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightJokerArrow, "blue", 2 else ProgressS2Tut2Rnd=ProgressS2Tut2Rnd&"4"
      if rndIdx=5 or rndIdx2=5 or rndIdx3=5 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightPengArrow, "blue", 2 else ProgressS2Tut2Rnd=ProgressS2Tut2Rnd&"5"

      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotValue = 3000000
      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotBase = 50000

    case 10: MVSelectIdx = kMinV_S3KingTut1
      rndIdx = INT(RND*6)       ' Rhree Random Shots
      rndIdx2= INT(Rnd*6)
      rndIdx3= INT(Rnd*6)
      while rndIdx = rndIdx2
        rndIdx2=Int(Rnd*6)
      wend
      while rndIdx3 = rndIdx2 or rndIdx3 = rndIdx
        rndIdx3=Int(Rnd*6)
      wend
      ProgressS3Tut1Rnd=""    ' Store off the inverse so we can set for wave 2
      if rndIdx=0 or rndIdx2=0 or rndIdx3=0 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightRiddlerArrow1, "blue", 2 else ProgressS3Tut1Rnd=ProgressS3Tut1Rnd&"0"
      if rndIdx=1 or rndIdx2=1 or rndIdx3=1 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightRiddlerArrow2, "blue", 2 else ProgressS3Tut1Rnd=ProgressS3Tut1Rnd&"1"
      if rndIdx=2 or rndIdx2=2 or rndIdx3=2 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightCatArrow1, "blue", 2 else ProgressS3Tut1Rnd=ProgressS3Tut1Rnd&"2"
      if rndIdx=3 or rndIdx2=3 or rndIdx3=3 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightCatArrow2, "blue", 2 else ProgressS3Tut1Rnd=ProgressS3Tut1Rnd&"3"
      if rndIdx=4 or rndIdx2=4 or rndIdx3=4 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightJokerArrow, "blue", 2 else ProgressS3Tut1Rnd=ProgressS3Tut1Rnd&"4"
      if rndIdx=5 or rndIdx2=5 or rndIdx3=5 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightPengArrow, "blue", 2 else ProgressS3Tut1Rnd=ProgressS3Tut1Rnd&"5"

      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotValue = 3000000
      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotBase = 50000

    case 11: MVSelectIdx = kMinV_S3EggHead1

      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotBase = 300000
      rndIdx = INT(RND*6)       ' 3 random shots
      rndIdx2= INT(Rnd*6)
      rndIdx3= INT(Rnd*6)
      while rndIdx = rndIdx2
        rndIdx2=Int(Rnd*6)
      wend
      while rndIdx3 = rndIdx2 or rndIdx3 = rndIdx
        rndIdx3=Int(Rnd*6)
      wend
      if rndIdx=0 or rndIdx2=0 or rndIdx3=0 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead1, kLightRiddlerArrow1, "yellow", 2
      if rndIdx=1 or rndIdx2=1 or rndIdx3=1 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead1, kLightRiddlerArrow2, "yellow", 2
      if rndIdx=2 or rndIdx2=2 or rndIdx3=2 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead1, kLightCatArrow1, "yellow", 2
      if rndIdx=3 or rndIdx2=3 or rndIdx3=3 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead1, kLightCatArrow2, "yellow", 2
      if rndIdx=4 or rndIdx2=4 or rndIdx3=4 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead1, kLightJokerArrow, "yellow", 2
      if rndIdx=5 or rndIdx2=5 or rndIdx3=5 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead1, kLightPengArrow, "yellow", 2

      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotValue = 3000000
      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotBase = 50000

    case 12: MVSelectIdx = kMinV_S3EggHead2
      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotValue = 350000
      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotBase = 0
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightRiddlerArrow1, "yellow", 2

    case 13: MVSelectIdx = kMinV_S3Shame
      bNoTimer=True             ' Shame doesnt have a timer
      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotValue = 1500000
      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotBase = 57500

      PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightRiddlerArrow1, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightRiddlerArrow2, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightJokerArrow, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightPengArrow, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightCatArrow1, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightCatArrow2, "blue", 2

      bAddABallGiven=False
      if PlayerState(CurrentPlayer).Villains(MVSelectIdx).bPlayed=False then
        AddMultiball 1              ' Shame is multiball only the first time
        EnableBallSaver BallSaverTime*2
        bNoTimer=True             ' Shame doesnt have a timer first time
      End if
      if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2Shame) or PlayerState(CurrentPlayer).isAwardActive(kMinV_S3Shame) Then  ' Extra ball
        AddMultiball PlayerState(CurrentPlayer).ShameCompletions
        EnableBallSaver BallSaverTime*2
      End if

    case 14: MVSelectIdx = kMinV_S3KingTut2

      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotValue = 3000000
      PlayerState(CurrentPlayer).Villains(MVSelectIdx).JackpotBase = 50000

      PlayerState(CurrentPlayer).SSetLightColor MVSelectIdx, kLightJokerArrow, "blue", 2

  End Select

  if MVSelectIdx <> kMinV_S2Shame then    ' Slow pulse the TVs unless we are in S2Shame since it uses the TV shots
    SetSlowPulse(lTV1)
    SetSlowPulse(lTV2)
    SetSlowPulse(lTV3)
    lTV1.state = 2
    lTV2.state = 2
    lTV3.state = 2
  End if

  PuPlayer.LabelShowPage pMVideo, 1, 0,""   ' Restore Page so it doesnt overlap (We shouldnt need this but labels are popping over)
  PuPlayer.LabelShowPage pBackglass, 1,0,""

  'if PlayerState(CurrentPlayer).bMajQual = False  then

  if MVSelectIdx <>  - 1 then                           ' We chose a minor Villain set things up
    PlayerState(CurrentPlayer).AddScreen(MVSelectIdx)     ' Add a screen
    pDMDMulti2 PlayerState(CurrentPlayer).getPupScreen(MVSelectIdx)   ' Swap the new screen to the middle

    PlayerState(CurrentPlayer).setActive(MVSelectIdx)=True
    PlayerState(CurrentPlayer).AddProgress(MVSelectIdx)

    PlayerState(CurrentPlayer).RestoreAllLights()

    if bNoTimer=False then
      tmrMinor.UserValue = 47       ' 45 + 2 grace period
      tmrMinor.Interval = 1000
      tmrMinor.Enabled = True

      ' Save this so we kmow if things moved around
      tmrMinorPos=0       ' Main Screen
      DrawModeTimer tmrMinorPos, tmrMinor.UserValue, True, False
    End if
  End if
  SetVBackground      ' update the background
  SetBGMusic

  tmrSelectMinor.Enabled=False

  Kicker001_Hit
' Call Kicker001_hit to continue sequence instead of here
' if PlayerState(CurrentPlayer).IsEnabled(kWiz_VillainEscape) then ' If we get here Start Villain Escape
'   ' Make sure they didnt pick shame
'   if MVSelectIdx<>kMinV_S2Shame and MVSelectIdx<>kMinV_S3Shame then
'     StartVillainEscape
'   End if
' End if
' vpmtimer.addtimer 1000, "Kicker001Kick False '"

End Sub

Dim tmrMinorPos
Sub tmrMinor_Timer()
  Dim i
  Dim imageField
  dim imageJSON
  dim textField
  dim textJSON

  Dim bDisabled:bDisabled=False
  if tmrPauseTimers.Enabled then bDisabled=True ' Dont change timer
  if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MrFreeze) then bDisabled=True   ' Mr Freeze Freezes Timers

  If bDisabled=False then tmrMinor.UserValue=tmrMinor.UserValue-1           ' Dont subtract if we are disabled but still call so we refresh in case focus moved

  if tmrMinor.UserValue>2 then
    if INT(tmrMinor.UserValue) = tmrMinor.UserValue then ' No Fraction
      DrawModeTimer tmrMinorPos, tmrMinor.UserValue-2, False, False
    End if
  else
    DrawModeTimer tmrMinorPos, "", True, True
    if tmrMinor.UserValue <=0 then
      SceneMinorEnd False       ' End this villain
    End if
  End if
End sub


Dim tmrBatTurnPos
Sub tmrBatTurn_Timer()

  Dim bDisabled:bDisabled=False
  if tmrPauseTimers.Enabled then bDisabled=True ' Dont change timer
  if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MrFreeze) then bDisabled=True   ' Mr Freeze Freezes Timers

  If bDisabled=False then tmrBatTurn.UserValue=tmrBatTurn.UserValue-1           ' Dont subtract if we are disabled but still call so we refresh in case focus moved

  if tmrBatTurn.UserValue>2 then
    if tmrBatTurn.UserValue=7 and bDisabled=False then PlaySoundVol "b66-time-is-running-out-robin", VolDef

    if INT(tmrBatTurn.UserValue) = tmrBatTurn.UserValue then ' No Fraction
      DrawModeTimer tmrBatTurnPos, tmrBatTurn.UserValue-2, False, False
    End if
  else
    if tmrBatTurn.UserValue=2 and bDisabled=False then PlaySoundVol "b66-gosh-batman-out-of-time", VolDef

    DrawModeTimer tmrBatTurnPos, "", True, True
    if tmrBatTurn.UserValue <=0 then
      EndBatTurn        ' End this mode
    End if
  End if
End sub


Dim tmrVillainEscapePos
Sub tmrVillainEscape_Timer()

  Dim bDisabled:bDisabled=False
  if tmrPauseTimers.Enabled then bDisabled=True ' Dont change timer
  if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MrFreeze) then bDisabled=True   ' Mr Freeze Freezes Timers

  If bDisabled=False then tmrVillainEscape.UserValue=tmrVillainEscape.UserValue-1           ' Dont subtract if we are disabled but still call so we refresh in case focus moved

  if tmrVillainEscape.UserValue>0 then                              ' No grace on this one
    if tmrVillainEscape.UserValue=19 or tmrVillainEscape.UserValue=9 then           ' Show intermediate scenes
      PlayerState(CurrentPlayer).AddProgress kWiz_VillainEscape
    End if

    if INT(tmrVillainEscape.UserValue) = tmrVillainEscape.UserValue then ' No Fraction
      DrawModeTimer tmrVillainEscapePos, tmrVillainEscape.UserValue, False, False
    End if
  else
    DrawModeTimer tmrVillainEscapePos, "", True, True
    StartVillainEscape2
  End if
End sub



Sub DrawModeTimer(ScreenPos, value, bDrawBG, bClear)

' puPlayer.LabelSet pBackglass,"L1MVTimerImg", "PuPOverlays\\timerTV.png" ,1,"{'mt':2,'color':111111, 'width':12, 'height':15,'yalign':0,'xalign':0,'ypos':1.2,'xpos':1}"
' puPlayer.LabelSet pBackglass,"R1MVTimerImg", "PuPOverlays\\timerTV.png" ,1,"{'mt':2,'color':111111, 'width':12, 'height':15,'yalign':0,'xalign':0,'ypos':12.2,'xpos':82}"
' puPlayer.LabelSet pBackglass,"L2MVTimerImg", "PuPOverlays\\timerTV.png" ,1,"{'mt':2,'color':111111, 'width':12, 'height':15,'yalign':0,'xalign':0,'ypos':43.2,'xpos':1}"
'
' puPlayer.LabelSet pBackglass,"L1MVTimer", "49" ,1,"{'mt':2,'size':4, 'xpos':7.5,  'ypos':10}"
' puPlayer.LabelSet pBackglass,"R1MVTimer", "46" ,1,"{'mt':2,'size':4, 'xpos':88.5, 'ypos':21}"
' puPlayer.LabelSet pBackglass,"L2MVTimer", "45" ,1,"{'mt':2,'size':4, 'xpos':7.5,  'ypos':52}"

'     puPlayer.LabelSet pBackglass,"MVTimer", "45", 1, "{'mt':2,'yalign':1,'xalign':1,'ypos':17,'xpos':73}"
'     if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MrFreeze) then
'       puPlayer.LabelSet pBackglass,"MVTimerImg", PupAniFolder & "\\tmrClockFrozen.gif" ,1,"{'mt':2,'color':111111, 'anigif':100, 'width':14, 'height':25,'yalign':0,'xalign':0,'ypos':3,'xpos':66.5}"
'     Else
'       puPlayer.LabelSet pBackglass,"MVTimerImg", PupAniFolder & "\\tmrClock.gif" ,1,"{'mt':2,'color':111111, 'anigif':100, 'width':10, 'height':20,'yalign':0,'xalign':0,'ypos':6,'xpos':68}"
'     End if

'WriteToLog "     ", "DrawModeTimer: " & ScreenPos & " " & value & " " & bDrawBG & " " & bClear
  Select case ScreenPos
    case 0:
      puPlayer.LabelSet pBackglass, "MVTimer", value, 1, "{'mt':2,'yalign':1,'xalign':1,'ypos':17,'xpos':73}"
      if bDrawBG Then
        if bClear then
          puPlayer.LabelSet pBackglass, "MVTimerImg", "PupOverlays\\clear.png" ,1, "{'mt':2,'color':111111, 'anigif':100, 'width':10, 'height':20,'yalign':0,'xalign':0,'ypos':6,'xpos':68}"
        else
          if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MrFreeze) then
            puPlayer.LabelSet pBackglass,"MVTimerImg", PupAniFolder & "\\tmrClockFrozen.gif" ,1,"{'mt':2,'color':111111, 'anigif':100, 'width':14, 'height':25,'yalign':0,'xalign':0,'ypos':3,'xpos':66.5}"
          Else
            puPlayer.LabelSet pBackglass,"MVTimerImg", PupAniFolder & "\\tmrClock.gif" ,1,"{'mt':2,'color':111111, 'anigif':100, 'width':10, 'height':20,'yalign':0,'xalign':0,'ypos':6,'xpos':68}"
          End if
        End if
      End if
    case 1:
      puPlayer.LabelSet pBackglass,"L1MVTimer", value ,1,"{'mt':2,'size':4, 'xpos':7.5,  'ypos':10}"
      if bClear then
        puPlayer.LabelSet pBackglass,"L1MVTimerImg", "PuPOverlays\\clear.png" ,1,"{'mt':2,'color':111111, 'width':12, 'height':15,'yalign':0,'xalign':0,'ypos':1.2,'xpos':1}"
      else
        if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MrFreeze) then
          puPlayer.LabelSet pBackglass,"L1MVTimerImg", "PuPOverlays\\timerTVFrozen.png" ,1,"{'mt':2,'color':111111, 'width':14, 'height':21.2,'yalign':0,'xalign':0,'ypos':1.2,'xpos':1}"
        Else
          puPlayer.LabelSet pBackglass,"L1MVTimerImg", "PuPOverlays\\timerTV.png" ,1,"{'mt':2,'color':111111, 'width':12, 'height':15,'yalign':0,'xalign':0,'ypos':1.2,'xpos':1}"
        End if
      End if
    case 2:
      puPlayer.LabelSet pBackglass,"R1MVTimer", value ,1,"{'mt':2,'size':4, 'xpos':88.5, 'ypos':21}"
      if bClear then
        puPlayer.LabelSet pBackglass,"R1MVTimerImg", "PuPOverlays\\clear.png" ,1,"{'mt':2,'color':111111, 'width':12, 'height':15,'yalign':0,'xalign':0,'ypos':12.2,'xpos':82}"
      else
        if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MrFreeze) then
          puPlayer.LabelSet pBackglass,"R1MVTimerImg", "PuPOverlays\\timerTVFrozen.png" ,1,"{'mt':2,'color':111111, 'width':14, 'height':21.2,'yalign':0,'xalign':0,'ypos':12.2,'xpos':82}"
        Else
          puPlayer.LabelSet pBackglass,"R1MVTimerImg", "PuPOverlays\\timerTV.png" ,1,"{'mt':2,'color':111111, 'width':12, 'height':15,'yalign':0,'xalign':0,'ypos':12.2,'xpos':82}"
        End if
      End if
    case 3:
      puPlayer.LabelSet pBackglass,"L2MVTimer", value ,1,"{'mt':2,'size':4, 'xpos':7.5,  'ypos':52}"
      if bClear then
        puPlayer.LabelSet pBackglass,"L2MVTimerImg", "PuPOverlays\\clear.png" ,1,"{'mt':2,'color':111111, 'width':12, 'height':15,'yalign':0,'xalign':0,'ypos':43.2,'xpos':1}"
      else
        if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MrFreeze) then
          puPlayer.LabelSet pBackglass,"L2MVTimerImg", "PuPOverlays\\timerTVFrozen.png" ,1,"{'mt':2,'color':111111, 'width':14, 'height':21.2,'yalign':0,'xalign':0,'ypos':43.2,'xpos':1}"
        Else
          puPlayer.LabelSet pBackglass,"L2MVTimerImg", "PuPOverlays\\timerTV.png" ,1,"{'mt':2,'color':111111, 'width':12, 'height':15,'yalign':0,'xalign':0,'ypos':43.2,'xpos':1}"
        End if
      End if
  End Select

End Sub

Sub ClearModeTimer(ScreenPos)

  Select case ScreenPos
    case 0:
      puPlayer.LabelSet pBackglass,"MVTimer", "", 1, "{'mt':2,'yalign':1,'xalign':1,'ypos':17,'xpos':73}"
      puPlayer.LabelSet pBackglass,"MVTimerImg", "PupOverlays\\clear.png" ,1,"{'mt':2,'color':111111, 'anigif':100, 'width':10, 'height':20,'yalign':0,'xalign':0,'ypos':6,'xpos':68}"

    case 1:
      puPlayer.LabelSet pBackglass,"L1MVTimer", "", 1, "{'mt':2,'yalign':1,'xalign':1,'ypos':17,'xpos':73}"
      puPlayer.LabelSet pBackglass,"L1MVTimerImg", "PupOverlays\\clear.png" ,1,"{'mt':2,'color':111111, 'anigif':100, 'width':10, 'height':20,'yalign':0,'xalign':0,'ypos':6,'xpos':68}"

    case 2:
      puPlayer.LabelSet pBackglass,"R1MVTimer", "", 1, "{'mt':2,'yalign':1,'xalign':1,'ypos':17,'xpos':73}"
      puPlayer.LabelSet pBackglass,"R1MVTimerImg", "PupOverlays\\clear.png" ,1,"{'mt':2,'color':111111, 'anigif':100, 'width':10, 'height':20,'yalign':0,'xalign':0,'ypos':6,'xpos':68}"

    case 3:
      puPlayer.LabelSet pBackglass,"L2MVTimer", "", 1, "{'mt':2,'yalign':1,'xalign':1,'ypos':17,'xpos':73}"
      puPlayer.LabelSet pBackglass,"L2MVTimerImg", "PupOverlays\\clear.png" ,1,"{'mt':2,'color':111111, 'anigif':100, 'width':10, 'height':20,'yalign':0,'xalign':0,'ypos':6,'xpos':68}"

  End Select

End Sub


Sub MinorEnd(villainIdx)
  Dim i
  Dim SN

  'WriteToLog "     ", "Minor End"
  if villainIdx=-1 then
    For i = kMinV_S1MadHatter to kMinV_S3KingTut2
      If PlayerState(CurrentPlayer).isActive(i) then
        villainIdx=i
        exit for
      End if
    Next
  End if

  ClearModeTimer tmrMinorPos
  QueueFlushV(villainIdx)
  PlayerState(CurrentPlayer).setActive(villainIdx)=False
  PlayerState(CurrentPlayer).RemoveScreen(villainIdx)           ' remove the screen
  if PlayerState(CurrentPlayer).numScreens=0 then StartLastScene      ' No screens active Make sure default TV Scene is playing

  SetVBackground
  if BallsOnPlayfield <> 0 then SetBGMusic          ' Dont end on a drain

End Sub


Sub SceneMinorvillainSelect(keycode)
  Dim bMove
  Dim i
  bMove=False

  if bMVSelect and (keycode = LeftFlipperKey or keycode = RightFlipperKey) then
    if tmrMVSelect.Enabled Then   ' Short cycle
      tmrMVSelect.Enabled=False
    End if

    tmrMVSelect.Interval = 1


    If keycode = LeftFlipperKey then
      PlaySoundVol "sfx-minor-next", VolSfx
      MVSelectDir=2
      'MVSelectIdx=MVSelectIdx-1
      for i = 1 to 14
        MVSelectIdx=MVSelectIdx-1
        if MVSelectIdx<0 then
          MVSelectIdx=14
          MVSelectPos=-57
        End if
        if PlayerState(CurrentPlayer).isEnabled(kMinV_S1MadHatter + MVSelectIdx -1) then Exit For   ' this one is good
        if MVSelectIdx=0 then
          MVSelectPos=3
          Exit For
        End if
      Next

      Select case MVSelectIdx
        case 1:bMove=True
        case 5:bMove=True
        case 6:bMove=True
        case 7:bMove=True
        case 11:bMove=True
        case 12:bMove=True
      End Select
    Else
      PlaySoundVol "sfx-minor-next", VolSfx
      MVSelectDir=-2
      'MVSelectIdx=MVSelectIdx+1
      for i = 1 to 14
        MVSelectIdx=MVSelectIdx+1
        if kMinV_S1MadHatter + MVSelectIdx -1>kMinV_S3KingTut2 then
          MVSelectIdx=0
          MVSelectPos=3
          Exit For
        End if

        Select case MVSelectIdx
          case 2:bMove=True
          case 6:bMove=True
          case 7:bMove=True
          case 8:bMove=True
          case 12:bMove=True
          case 13:bMove=True
        End Select

        if PlayerState(CurrentPlayer).isEnabled(kMinV_S1MadHatter + MVSelectIdx -1) then Exit For   ' this one is good
      Next

    End if

'WriteToLog "     ", "Idx:" & MVSelectIdx & "Dir:" & MVSelectDir
    if bMove then
      tmrMVSelect.UserValue = 5
      tmrMVSelect.Enabled = True
    Else
      SceneMinorvillainDraw()
    End if
  End if
End Sub

Sub tmrMVSelect_Timer()
'WriteToLog "     ", "MVTimer:" & tmrMVSelect.UserValue & " Dir:" & MVSelectDir & " Pos:" & MVSelectPos
  tmrMVSelect.UserValue = tmrMVSelect.UserValue -1
  MVSelectPos=MVSelectPos+MVSelectDir
  if MVSelectPos<-57 then MVSelectPos=3
  if MVSelectPos>=5 then MVSelectPos=-57
  if tmrMVSelect.UserValue<=0 then
    tmrMVSelect.Enabled=False
  End if
  SceneMinorvillainDraw()

End Sub

Sub SceneMinorvillainDraw()
' Test Code
'PlayerState(CurrentPlayer).Villains(kMinV_S1Bookworm).bFinished=True
'PlayerState(CurrentPlayer).Villains(kMinV_S2MadHatter).bFinished=True
'PlayerState(CurrentPlayer).Villains(kMinV_S3KingTut2).bFinished=True
  dim i
  dim x,x2,y
  dim visIndex
  dim suffix
  dim dims
  dim anigif
  dim folder

  y = 60
  x = MVSelectPos
  visIndex=0
  For i = 0 to 14
    x=x+10.5
    y=60+(i mod 2)*15.5
    if x>0 and x<=113 then
      if i=MVSelectIdx and tmrMVSelect.Enabled=False then   ' Selected one
        folder=PupAniFolder
        suffix="sel.gif"
        anigif=",'anigif':100"
        dims=",'width':16, 'height':27.5"   ' 40% resize from original (TBD check CAB)
        x2=x+2
        if x >= 100 then x2=x-2
        y=y-2

        puPlayer.LabelSet pBackglass,"SelectTv1", "mv-select\\tv1-masked.png",1,"{'mt':2,'color':111111,'width':27, 'height':36,'yalign':0,'xalign':0,'ypos':16.5,'xpos':3.3}"
        puPlayer.LabelSet pBackglass,"SelectTv2", "mv-select\\tv2-masked.png",1,"{'mt':2,'color':111111,'width':27, 'height':36,'yalign':0,'xalign':0,'ypos':16.5,'xpos':36.5}"
        puPlayer.LabelSet pBackglass,"SelectTv3", "mv-select\\tv3-masked.png",1,"{'mt':2,'color':111111,'width':27, 'height':36,'yalign':0,'xalign':0,'ypos':16.5,'xpos':70}"

        if MVSelectIdx <= 3 then  ' Season 1
          puPlayer.LabelSet pBackglass,"SelectTv1", "mv-select\\s"&i&"-tv.png",1,"{'mt':2,'color':111111,'width':27, 'height':36,'yalign':0,'xalign':0,'ypos':16.5,'xpos':3.3}"
        elseif MVSelectIdx <=9 then  ' Seasom 2
          puPlayer.LabelSet pBackglass,"SelectTv2", "mv-select\\s"&i&"-tv.png",1,"{'mt':2,'color':111111,'width':27, 'height':36,'yalign':0,'xalign':0,'ypos':16.5,'xpos':36.5}"
        else            ' Season 3
          puPlayer.LabelSet pBackglass,"SelectTv3", "mv-select\\s"&i&"-tv.png",1,"{'mt':2,'color':111111,'width':27, 'height':36,'yalign':0,'xalign':0,'ypos':16.5,'xpos':70}"
        End if

        if MVSelectIdx=0 then
          if PlayerState(CurrentPlayer).TakeJackpot < 10000000 then
            puPlayer.LabelSet pBackglass,"SelectTv1Txt", FormatScore(PlayerState(CurrentPlayer).TakeJackpot), 1,"{'mt':2,'color':"&pupWhite&", 'yalign':0,'xalign':1,'ypos':38,'xpos':16.8,'ztop':1,'size':6}"
          else
            puPlayer.LabelSet pBackglass,"SelectTv1Txt", FormatScore(PlayerState(CurrentPlayer).TakeJackpot), 1,"{'mt':2,'color':"&pupWhite&", 'yalign':0,'xalign':1,'ypos':38,'xpos':16.8,'ztop':1,'size':5}"
          End if
        else
          puPlayer.LabelSet pBackglass,"SelectTv1Txt", "",1,""
        End if

      Else                ' Others show static image
        folder="mv-select"
        x2=x
        suffix="ico.png"
        if i <> 0 then
          if PlayerState(CurrentPlayer).isEnabled(kMinV_S1MadHatter + i -1)=False then    ' Not Enabled Grey it out
            suffix="icoG.png"
          End if
        End If
        anigif=""
        dims=",'width':13, 'height':24"
      End if

      if x >= 100 then
''WriteToLog "     ", "<-Img:s" & i & "-ico.png X:" & x & " visIdx:" & visIndex
        puPlayer.LabelSet pBackglass,"SelectIcon"&visIndex, folder&"\\s"&i&"-"&suffix,1,"{'mt':2,'color':111111"&anigif&dims&",'yalign':0,'xalign':0,'ypos':"&y&",'xpos':"&x2-13&"}"
      Else
''WriteToLog "     ", "Img:s" & i & "-ico.png X:" & x & " visIdx:" & visIndex & " total:" & MVSelectPos
        puPlayer.LabelSet pBackglass,"SelectIcon"&visIndex, folder&"\\s"&i&"-"&suffix,1,"{'mt':2,'color':111111"&anigif&dims&",'yalign':0,'xalign':2,'ypos':"&y&",'xpos':"&x2&"}"
      End if
      visIndex=visIndex+1
    End if
  Next
  ' Hide the remaining ones
  For i = visIndex to 10
    puPlayer.LabelSet pBackglass,"SelectIcon"&i, "",0,"{'mt':2,'color':111111,'width':13, 'height':24,'yalign':0,'xalign':2,'ypos':"&y&",'xpos':"&x&"}"
  Next

End Sub

Sub SceneMinorVillainWizardSelect(keycode)
  Dim bDone
  Dim i
  bDone=False

  if bMVWSelect and (keycode = LeftFlipperKey or keycode = RightFlipperKey) then
    if tmrMVSelect.Enabled Then   ' Short cycle
      tmrMVSelect.Enabled=False
    End if
    tmrMVSelect.Interval = 1

    while bDone=False                   ' Loop until we get one that is selectable
      If keycode = LeftFlipperKey then
        PlaySoundVol "sfx-minor-next", VolSfx
        MVWSelectIdx=MVWSelectIdx-1
      Else
        PlaySoundVol "sfx-minor-next", VolSfx
        MVWSelectIdx=MVWSelectIdx+1
      End if
      if MVWSelectIdx>2 then MVWSelectIdx=0
      if MVWSelectIdx<0 then MVWSelectIdx=2

      if MVWSelectIdx=0 and PlayerState(CurrentPlayer).isAwardActive(kWiz_Batusi)=False then bDone=True
      if MVWSelectIdx=1 and PlayerState(CurrentPlayer).isAwardActive(kWiz_GasAttack)=False then bDone=True
      if MVWSelectIdx=2 and PlayerState(CurrentPlayer).isAwardActive(kWiz_Holy)=False then bDone=True
    Wend

'WriteToLog "     ", "Idx:" & MVWSelectIdx & "Dir:" & MVSelectDir
    SceneMinorVillainWizardDraw()
  End if
End Sub

Sub SceneMinorVillainWizardDraw()
  dim tvStr1:tvStr1="tv1-masked.png"
  dim tvStr2:tvStr2="tv2-masked.png"
  dim tvStr3:tvStr3="tv3-masked.png"


  if PlayerState(CurrentPlayer).isAwardActive(kWiz_Batusi) then
    tvStr1="tv-static.png"
  End if
  if PlayerState(CurrentPlayer).isAwardActive(kWiz_GasAttack) then
    tvStr2="tv-static.png"
  End if
  if PlayerState(CurrentPlayer).isAwardActive(kWiz_Holy) then
    tvStr3="tv-static.png"
  End if


  Select case MVWSelectIdx
    case 0:
      puPlayer.LabelSet pBackglass,"SelectTv1", "mv-select\\batusi-tv.png",1,"{'mt':2,'color':111111,'width':27, 'height':36,'yalign':0,'xalign':0,'ypos':16.5,'xpos':3.3}"
      puPlayer.LabelSet pBackglass,"SelectTv2", "mv-select\\" & tvStr2,1,"{'mt':2,'color':111111,'width':27, 'height':36,'yalign':0,'xalign':0,'ypos':16.5,'xpos':36.5}"
      puPlayer.LabelSet pBackglass,"SelectTv3", "mv-select\\" & tvStr3,1,"{'mt':2,'color':111111,'width':27, 'height':36,'yalign':0,'xalign':0,'ypos':16.5,'xpos':70}"
    case 1:
      puPlayer.LabelSet pBackglass,"SelectTv1", "mv-select\\" & tvStr1,1,"{'mt':2,'color':111111,'width':27, 'height':36,'yalign':0,'xalign':0,'ypos':16.5,'xpos':3.3}"
      puPlayer.LabelSet pBackglass,"SelectTv2", "mv-select\\gas-tv.png",1,"{'mt':2,'color':111111,'width':27, 'height':36,'yalign':0,'xalign':0,'ypos':16.5,'xpos':36.5}"
      puPlayer.LabelSet pBackglass,"SelectTv3", "mv-select\\" & tvStr3,1,"{'mt':2,'color':111111,'width':27, 'height':36,'yalign':0,'xalign':0,'ypos':16.5,'xpos':70}"
    case 2:
      puPlayer.LabelSet pBackglass,"SelectTv1", "mv-select\\" & tvStr1,1,"{'mt':2,'color':111111,'width':27, 'height':36,'yalign':0,'xalign':0,'ypos':16.5,'xpos':3.3}"
      puPlayer.LabelSet pBackglass,"SelectTv2", "mv-select\\" & tvStr2,1,"{'mt':2,'color':111111,'width':27, 'height':36,'yalign':0,'xalign':0,'ypos':16.5,'xpos':36.5}"
      puPlayer.LabelSet pBackglass,"SelectTv3", "mv-select\\holy-tv.png",1,"{'mt':2,'color':111111,'width':27, 'height':36,'yalign':0,'xalign':0,'ypos':16.5,'xpos':70}"
  End Select

  ' Show Static for ones that are complete

End Sub


Sub SetBGMusic()
  Dim i
  Dim bSet:bSet=False
  Dim TmpStr:TmpStr="b66_Song5"

  ' Wrong - Priority will be (Wizard, Minor, Major, Default)
  ' Music matches whatever screen is on the main
  for i = kMAX_MODES to 0 step -1
    if PlayerState(CurrentPlayer).isActive(i) and PlayerState(CurrentPlayer).Villains(i).pupScreen = sSwapPos then
      select case i
        case kMajV_S1Joker, kMajV_S2Joker:
          if PlayerState(CurrentPlayer).isQual(kMajV_S1Joker)=2 then
            TmpStr="Joker"
            bSet=True
          elseif PlayerState(CurrentPlayer).isQual(kMajV_S2Joker)=2 then
            TmpStr="Joker2"
            bSet=True
          End if
        case kMajV_S1CatWoman, kMajV_S2CatWoman:
          if PlayerState(CurrentPlayer).isQual(kMajV_S1CatWoman)=2 then
            TmpStr="Catwoman"
            bSet=True
          elseif PlayerState(CurrentPlayer).isQual(kMajV_S2CatWoman)=2 then
            TmpStr="Catwoman2"
            bSet=True
          End if
        case kMajV_S1Peng, kMajV_S2Peng:
          if PlayerState(CurrentPlayer).isQual(kMajV_S1Peng)=2 Then
            TmpStr="Penguin"
            bSet=True
          elseif PlayerState(CurrentPlayer).isQual(kMajV_S2Peng)=2 then
            TmpStr="Penguin2"
            bSet=True
          End if
        case kMajV_S1Riddler, kMajV_S2Riddler:
          if PlayerState(CurrentPlayer).isQual(kMajV_S1Riddler)=2 Then
            TmpStr="Riddler"
            bSet=True
          elseif PlayerState(CurrentPlayer).isQual(kMajV_S2Riddler)=2 then
            TmpStr="Riddler2"
            bSet=True
          End if
        case kMinV_S1MadHatter, kMinV_S2MadHatter:
          TmpStr="MadHatter"
          bSet=True
        case kMinV_S1KingTut, kMinV_S2KingTut1, kMinV_S2KingTut2, kMinV_S3KingTut1, kMinV_S3KingTut2 :
          TmpStr="Tut"
          bSet=True
        case kMinV_S1Bookworm:
          TmpStr="Bookworm"
          bSet=True
        case kMinV_S2EggHead, kMinV_S3EggHead1, kMinV_S3EggHead2 :
          TmpStr="Egghead"
          bSet=True
        case kMinV_S2MrFreeze:
          TmpStr="Freeze"
          bSet=True
        case kMinV_S2Shame, kMinV_S3Shame:
          TmpStr="Shame"
          bSet=True
        case kWiz_VillainMB:
          TmpStr="VMB"
          bSet=True
        case kWiz_BatTurn:
          if PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)>20 then
            TmpStr="BatTurn"
            bSet=True
          end if
        case kWiz_VillainEscape:    ' dont know music for these yet
          TmpStr="VESC"
          bSet=False
      End Select

if bset then WriteToLog "     ", "Match:" & i & " " & PlayerState(CurrentPlayer).isActive(i) & " " & PlayerState(CurrentPlayer).Villains(i).pupScreen & " " & sSwapPos
      if bSet Then Exit For

    End If
  Next

WriteToLog "     ", "Setting BG Music:" & TmpStr & ".mp3"
  playMusic TmpStr & ".mp3"

End Sub


Sub SetVBackground()
  Dim TmpStr
  Dim SN
  Dim i
  dim bSet:bSet=False

  SN = PlayerState(CurrentPlayer).numScreens
  TmpStr="batsignal"

  ' Find which screen is on the current and update the backdrop to match
  if SN = 0 then
    SN=1
  else
    for i = 0 to kMAX_MODES
      if PlayerState(CurrentPlayer).Villains(i).pupScreen <> -1 then
        If PlayerState(CurrentPlayer).getPupScreen(i) = sSwapPos then
          select case i
            case kMajV_S1Joker, kMajV_S2Joker:
              if PlayerState(CurrentPlayer).isQual(kMajV_S1Joker)=2 or  PlayerState(CurrentPlayer).isQual(kMajV_S2Joker)=2 then
                TmpStr="joker"
                bSet=True
              End if
              DOF_Undercab "Pink"
            case kMajV_S1CatWoman, kMajV_S2CatWoman:
              if PlayerState(CurrentPlayer).isQual(kMajV_S1CatWoman)=2 or PlayerState(CurrentPlayer).isQual(kMajV_S2CatWoman)=2 then
                TmpStr="catwoman"
                bSet=True
              End if
              DOF_Undercab "White"
            case kMajV_S1Peng, kMajV_S1Peng:
              if PlayerState(CurrentPlayer).isQual(kMajV_S1Peng)=2 or  PlayerState(CurrentPlayer).isQual(kMajV_S2Peng)=2 then
                TmpStr="penguin"
                bSet=True
              End if
              DOF_Undercab "Purple"
            case kMajV_S1Riddler, kMajV_S2Riddler:
              if PlayerState(CurrentPlayer).isQual(kMajV_S1Riddler)=2 or  PlayerState(CurrentPlayer).isQual(kMajV_S2Riddler)=2 then
                TmpStr="riddler"
                bSet=True
              End if
              DOF_Undercab "Green"
            case kMinV_S1MadHatter, kMinV_S2MadHatter:
              TmpStr="MadHatter"
              bSet=True
              DOF_Undercab "White"
            case kMinV_S1KingTut, kMinV_S2KingTut1, kMinV_S2KingTut2, kMinV_S3KingTut1, kMinV_S3KingTut2 :
              TmpStr="Tut"
              bSet=True
              DOF_Undercab "White"
            case kMinV_S1Bookworm:
              TmpStr="Bookworm"
              bSet=True
              DOF_Undercab "White"
            case kMinV_S2EggHead, kMinV_S3EggHead1, kMinV_S3EggHead2 :
              TmpStr="egghead"
              bSet=True
              DOF_Undercab "White"
            case kMinV_S2MrFreeze:
              TmpStr="freeze"
              bSet=True
              DOF_Undercab "White"
            case kMinV_S2Shame, kMinV_S3Shame:
              TmpStr="Shame"
              bSet=True
              DOF_Undercab "White"
            case kWiz_VillainMB:
              TmpStr="Pow"
              bSet=True
              DOF_Undercab "Blue"
            case kWiz_BatTurn:
              ' Doesnt change the current background - just matches major
              if PlayerState(CurrentPlayer).isQual(kMajV_S1Joker)=2 or  PlayerState(CurrentPlayer).isQual(kMajV_S2Joker)=2 then
                TmpStr="joker"
                DOF_Undercab "Pink"
              elseif PlayerState(CurrentPlayer).isQual(kMajV_S1CatWoman)=2 or PlayerState(CurrentPlayer).isQual(kMajV_S2CatWoman)=2 then
                TmpStr="catwoman"
                DOF_Undercab "White"
              elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Peng)=2 or  PlayerState(CurrentPlayer).isQual(kMajV_S2Peng)=2 then
                TmpStr="penguin"
                DOF_Undercab "Purple"
              elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Riddler)=2 or  PlayerState(CurrentPlayer).isQual(kMajV_S2Riddler)=2 then
                TmpStr="riddler"
                DOF_Undercab "Green"
              End if
              bSet=True
            case kWiz_VillainEscape, kWiz_Batusi, kWiz_Holy, kWiz_GasAttack:
              TmpStr="Pow"
              bSet=True
              DOF_Undercab "Orange"
          End Select

          if bSet then Exit For
        End if
      End If
    Next
  End if

'WriteToLog "     ", "SetVBackground:" & tmpStr & " " & SN
  PuPlayer.playlistplayex pBackglass, "PuPOverlays" , tmpStr &SN&".png" ,  1, 1
' UpdateNumberPlayers   ' Force Batman Graphic behind score (Dont need to do this anymore)

' Dim SN
' SN = PlayerState(CurrentPlayer).numScreens
' if PlayerState(CurrentPlayer).isQual(kMajV_S1Joker)=2 or  PlayerState(CurrentPlayer).isQual(kMajV_S2Joker)=2 then
'   PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"joker"&SN&".png",  1, 1
'
' elseif PlayerState(CurrentPlayer).isQual(kMajV_S1CatWoman)=2 or PlayerState(CurrentPlayer).isQual(kMajV_S2CatWoman)=2 then
'   PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"catwoman"&SN&".png",  1, 1
'
' elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Peng)=2 or  PlayerState(CurrentPlayer).isQual(kMajV_S2Peng)=2 then
'   PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"penguin"&SN&".png",  1, 1
'
' elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Riddler)=2 or  PlayerState(CurrentPlayer).isQual(kMajV_S2Riddler)=2 then
'   PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"riddler"&SN&".png",  1, 1
' End if
  'UpdateNumberPlayers    ' Refresh so the backdrop looks right

End Sub


sub DoMystery()
  Dim Award
  if bMultiBallMode and bAddABallGiven=False and BallsOnPlayfield<MaxMultiballs then
    if (PlayerState(CurrentPlayer).bMinorActive or _
       (PlayerState(CurrentPlayer).isActive(kWiz_BatTurn) and PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)<>20)) and PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MrFreeze)=False then
      SceneMystery(kMystery_AddABallPlusTime)
    Else
      SceneMystery(kMystery_AddABall)
    End if
    bAddABallGiven=True

  elseif (PlayerState(CurrentPlayer).bMinorActive or _
       (PlayerState(CurrentPlayer).isActive(kWiz_BatTurn) and PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)<>20)) and PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MrFreeze)=False then
    SceneMystery(kMystery_MoreTIME)

  elseif tmrHurryUp.Enabled and lBatPhone.TimerEnabled then ' We are on the batphone hurryup - Add to the hurryup
    SceneMystery(kMystery_BPhoneHurryUp)
  else
    ' TBD Add Defautl mystery awards
    if RND<(DMDStd(kDMDStd_ExtraBallPCT)/100.0) and PlayerState(CurrentPlayer).ExtraBallsAwarded < DMDStd(kDMDStd_ExtraBallLimit) then  ' Extra Ball
      SceneMystery(kMystery_ExtraBall)
    Else
      Award = INT(RND * 6)
      select case Award
        case 0:
          SceneMystery(kMystery_2X)
        case 1:
          SceneMystery(kMystery_Gadget)
        case 2:
          SceneMystery(kMystery_5M)
        case 3:
          SceneMystery(kMystery_HoldBonus)
        case 4:
          SceneMystery(kMystery_HoldBonusMult)
        case 5:
          SceneMystery(kMystery_LightShotMult)
      End Select
    End if
  End if
End Sub

Const kMystery_MoreTIME     =0
Const kMystery_AddABall     =2
Const kMystery_AddABallPlusTime =3

'Const kMystery_MoreTIME_BT     =4  ' BatTurn Add More Time (Combined with other ad times and Ball)
'Const kMystery_AddABallPlusTime_BT =5

Const kMystery_ExtraBall      =6
Const kMystery_2X         =7
Const kMystery_Gadget       =8
Const kMystery_HoldBonus      =9
Const kMystery_HoldBonusMult    =10
Const kMystery_LightShotMult    =11
Const kMystery_5M         =12
Const kMystery_BPhoneHurryUp    =13


Dim MysterySlope
Dim MysteryX
Dim MysteryY
Dim MysteryX2
Dim bMysteryTimerRedraw
Dim MysteryMessage1
Dim MysteryMessage2
Dim MysteryTypeSave
Sub SceneMystery(mysteryType)
'WriteToLog "     ", "SceneMystery: " & tmrMinorPos & "<>" & tmrBatTurnPos & "<>" & sSwapPos

  lMystery.state = 0
  bMysteryTimerRedraw=False

  PuPlayer.LabelShowPage pMVideo, 4, 0,""   ' Show Blank Page so it doesnt overlap (We shouldnt need this but labels are popping over)
  PuPlayer.LabelShowPage pBackglass, 4,0,""
  'PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"mystery-computer.png",  1, 1
  puPlayer.LabelSet pBackglass,"MapOverlay", "PuPOverlays\\mystery-computer.png" ,1,"{'mt':2,'color':111111, 'width':100, 'height':100,'yalign':0,'xalign':0,'ypos':0,'xpos':0}"
  puPlayer.LabelSet pBackglass,"Map", "PuPOverlays\\mystery-map.png" ,1,"{'mt':2,'color':111111, 'width':175, 'height':200,'yalign':1,'xalign':1,'ypos':60,'xpos':50}"
  puPlayer.LabelSet pBackglass,"Text1", "MYSTERY", 1, ""

  PlaySoundVol "sfx-mystery4", VolDef   ' I think I got it callout
  PlaySoundVol "sfx-mystery3", VolSfx   ' 0x11F
  playmedia "mystery-start.mp4", "PuPVideos", pOverVid, "", -1, "", 1, 1

  MysteryY=60
  MysteryX=50
  bDisableVisualProgress=True
  MysteryTypeSave=mysteryType

  select case mysteryType
    case kMystery_MoreTIME:
      MysteryX2=1
      MysteryMessage1="More Time"
      if tmrMinorPos = 0 then bMysteryTimerRedraw=True      ' Adding screen glitch causes the clock to need to be redrawn
      MysteryMessage2=""
      MysterySlope=1.2
      if tmrMinor.Enabled then tmrMinor.UserValue=tmrMinor.UserValue+20     ' Add 20 seconds to Minor Villain timer
      if tmrBatTurn.Enabled then tmrBatTurn.UserValue=tmrBatTurn.UserValue+20   ' Add 20 seconds to Bat Turn
      if tmrPFM.Enabled then tmrPFM.UserValue=tmrPFM.UserValue=+20        ' add 20 seconds to PFM

    case kMystery_AddABallPlusTime:
      MysteryX2=1
      MysteryMessage1="Add-A-Ball"
      MysteryMessage2="+ More Time"
      if tmrMinorPos = 0 then bMysteryTimerRedraw=True      ' Adding screen glitch causes the clock to need to be redrawn
      MysterySlope=1.2
      AddMultiball 1
      EnableBallSaver BallSaverTime
      if tmrMinor.Enabled then tmrMinor.UserValue=tmrMinor.UserValue+20     ' Add 20 seconds to Minor Villain timer
      if tmrBatTurn.Enabled then tmrBatTurn.UserValue=tmrBatTurn.UserValue+20   ' Add 20 seconds to Bat Turn
      if tmrPFM.Enabled then tmrPFM.UserValue=tmrPFM.UserValue=+20        ' add 20 seconds to PFM

    case kMystery_AddABall:
      MysteryX2=1
      MysteryMessage1="Add-A-Ball"
      MysteryMessage2=""
      MysterySlope=-1.2       ' TBD: Make go straight up
      AddMultiball 1
      EnableBallSaver BallSaverTime
'   case kMystery_MoreTIME_BT:
'     MysteryX2=1
'     MysteryMessage1="More Time"
'     if tmrBatTurnPos = 0 then bMysteryTimerRedraw=True      ' Adding screen glitch causes the clock to need to be redrawn
'     MysteryMessage2=""
'     MysterySlope=1.2
'     tmrBatTurn.UserValue=tmrBatTurn.UserValue+20    ' Add 20 seconds to timer
'
'   case kMystery_AddABallPlusTime_BT:
'     MysteryX2=1
'     MysteryMessage1="Add-A-Ball"
'     MysteryMessage2="+ More Time"
'     if tmrBatTurnPos = 0 then bMysteryTimerRedraw=True      ' Adding screen glitch causes the clock to need to be redrawn
'     MysterySlope=-1.2
'     AddMultiball 1
'     EnableBallSaver BallSaverTime
'     tmrBatTurn.UserValue=tmrBatTurn.UserValue+20    ' Add 20 seconds to timer

    case kMystery_ExtraBall:
      MysteryX2=1
      MysteryMessage1="Extra Ball"
      MysteryMessage2=""
      MysterySlope=-1.2
      LightExtraBall

    case kMystery_2X:
      MysteryX2=1
      MysteryMessage1="+2 Bonus X"
      MysteryMessage2=""
      MysterySlope=1.2
      BonusMultiplier=BonusMultiplier+2

    case kMystery_Gadget:
      MysteryX2=1
      MysteryMessage1="+1 Gadget"
      MysteryMessage2=""
      MysterySlope=0
      PlayerState(CurrentPlayer).AddGadget

    case kMystery_HoldBonus:
      MysteryX2=99
      MysteryMessage1="Hold Bonus"
      MysteryMessage2=""
      MysterySlope=-1.2
      PlayerState(CurrentPlayer).bHoldBonus=True

    case kMystery_HoldBonusMult:
      MysteryX2=1
      MysteryMessage1="Hold Bonus"
      MysteryMessage2="Multipliers"
      MysterySlope=-1.2
      PlayerState(CurrentPlayer).bHoldBonusMultiplier=True

    case kMystery_LightShotMult:
      MysteryX2=1
      MysteryMessage1="Light Shot"
      MysteryMessage2="Multipliers"
      MysterySlope=1.2

      ' Really should be a function but oh well
        PlayerState(CurrentPlayer).CommissGXCnt=0
        SetCommissGX(PlayerState(CurrentPlayer).CommissGXCnt)

        if PlayerState(CurrentPlayer).CommissGXCnt = 0 then
          CommissGX.state = 0
          if lCrane5x.state=0 then SetSlowPulse(lCrane5x):lCrane5x.BlinkPattern="10":lCrane5x.state = 2
          if lCrane4x.state=0 then SetSlowPulse(lCrane4x):lCrane4x.BlinkPattern="10":lCrane4x.state = 2
          if lCrane3x.state=0 then SetSlowPulse(lCrane3x):lCrane3x.BlinkPattern="10":lCrane3x.state = 2
          if lCrane2x.state=0 then SetSlowPulse(lCrane2x):lCrane2x.BlinkPattern="10":lCrane2x.state = 2
          if lCrane1x.state=0 then SetSlowPulse(lCrane1x):lCrane1x.BlinkPattern="10":lCrane1x.state = 2
        End If

    case kMystery_5M:
      MysteryX2=1
      MysteryMessage1="5,000,000"
      MysteryMessage2=""
      MysterySlope=1.2
      AddScore 5000000
    case kMystery_BPhoneHurryUp:
      MysteryX2=1
      MysteryMessage1="Increase~Bat Phone~Hurry Up"
      MysteryMessage2=""
      MysterySlope=-1.2
      tgGordon_Hit
  End Select

  tmrMystery.Interval = 50
  vpmTimer.AddTimer 1200, "tmrMystery.Enabled=True '"
  PauseTimersForce 1500

End Sub

Sub tmrMystery_Timer()
  Dim Done:Done=False
  if MysteryX2<MysteryX then
    MysteryX=MysteryX-1
    if MysteryX<=MysteryX2 then Done=True
  Else
    MysteryX=MysteryX+1
    if MysteryX>=MysteryX2 then Done=True
  End if
  PauseTimersForce 1000
  MysteryY=MysteryY+MysterySlope
  puPlayer.LabelSet pBackglass,"Map", "PuPOverlays\\mystery-map.png" ,1,"{'mt':2,'color':111111, 'width':175, 'height':200,'yalign':1,'xalign':1,'ypos':"&MysteryY&",'xpos':"&MysteryX&"}"
  if MysteryX<0 then MysteryX=0
  if MysteryX>100 then MysteryX=100
  if Done then

    StopSound "sfx-mystery3"
    PlaySoundVol "sfx-mystery2", VolSfx

    tmrMystery.Enabled=False
    puPlayer.LabelSet pBackglass,"Text1", MysteryMessage1, 1, ""
    puPlayer.LabelSet pBackglass,"Text2", MysteryMessage2, 1, ""
    vpmTimer.AddTimer 2000, "MysteryFinish '"
  End if
'WriteToLog "     ", "Mystery X/Y:" & MysteryX & " " & MysteryY & " Done:" & Done
End Sub

Sub MysteryFinish() ' After delay for message clean up and move on

  PauseTimersForce 1000
  PuPlayer.LabelShowPage pMVideo, 1, 0,""   ' Show Blank Page so it doesnt overlap (We shouldnt need this but labels are popping over)
  PuPlayer.LabelShowPage pBackglass, 1,0,""
  puPlayer.LabelSet pBackglass,"Text1", "", 1, ""
  puPlayer.LabelSet pBackglass,"Text2", "", 1, ""
  bDisableVisualProgress=False
  if bMysteryTimerRedraw then         ' Fix glitch when coming out of Mystery
    if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MrFreeze) then
      puPlayer.LabelSet pBackglass,"MVTimerImg", PupAniFolder & "\\tmrClockFrozen.gif" ,1,"{'mt':2,'color':111111, 'anigif':100, 'width':14, 'height':25,'yalign':0,'xalign':0,'ypos':3,'xpos':66.5}"
    Else
      puPlayer.LabelSet pBackglass,"MVTimerImg", PupAniFolder & "\\tmrClock.gif" ,1,"{'mt':2,'color':111111, 'anigif':100, 'width':10, 'height':20,'yalign':0,'xalign':0,'ypos':6,'xpos':68}"
    End if
    bMysteryTimerRedraw=False
  End if
  Kicker001_Hit
End Sub


Class Villain
  Public pupScreen        ' What screen are we on
  Public bEnabled         ' villain is able to be selected (Realy only for Minors since Majors are always True)
  Public bActive          ' Villian is currently active
  Public bPlayed          ' Have we played this villain (wither we finished or Not)
  Public bQual          ' villain Qualified
  Public bFinished        ' villain Completed
  Public bAwardActive       ' Is the minor Villain Award Active or did we finish a mode at least once
  Public waveIdx          ' Which wave we are on (Qualify, wave1, wave2, wave3...)
  ' Stage Progress
  Public lStates()        ' Stores the progress for the lights on this wave (Each index represents a PF Progress Light)
  Public LoopQualCnt        ' Hack to loop qual to make Majors Harder to qual
  Public LoopCnt          ' Used for looping modes
  Public Progress         ' Stores the total progress
  Public ProgressPercent      ' Stores the total progress percent
  Public JackpotValue       ' Total Jackpot Value
  Public JackpotBase        ' Base value added each time the jackpot increases
  Public ModeTotal        ' Total Score for this mode
  Public ModeHSTotal        ' Total HighScore for this mode

  Private Sub Class_Initialize(  )
    Dim i
    ReDim lStates(kMaxLights)
    For i = 0 to kMaxLights-1
      set lStates(i) = new cLightState
    Next
  End Sub
  Public Sub Reset()
    dim i, j

    ModeTotal=0
    ModeHSTotal=0
    LoopQualCnt=0
    LoopCnt=0
    JackpotValue=0
    JackpotBase=300000
    pupScreen = -1
    bQual=0
    bAwardActive = False
    bPlayed=False
    bActive = False
    bEnabled = True
    bFinished = False
    waveIdx=0
    For i = 0 to kMaxLights-1
''WriteToLog "     ", Typename(lStates(i))
      lStates(i).color = ""
      lStates(i).state = 0
    Next
    ' Reset all the waves/stages
    Progress=0
    ProgressPercent=0
  End Sub
End Class

Const kBonusHurryUp   = 0
Const kBonusCombo   = 1
Const kBonusGadget    = 2
Const kBonusJoker   = 3
Const kBonusCatwoman  = 4
Const kBonusRiddler   = 5
Const kBonusPenguin   = 6
Const kBonusEgg     = 7

Const kMajV_CatWoman  = 0
Const kMajV_Joker     = 1
Const kMajV_Peng    = 2
Const kMajV_Riddler   = 3

Const kMajV_S1CatWoman  = 0
Const kMajV_S1Joker   = 1
Const kMajV_S1Peng    = 2
Const kMajV_S1Riddler   = 3

Const kMajV_S2CatWoman  = 4
Const kMajV_S2Joker   = 5
Const kMajV_S2Peng    = 6
Const kMajV_S2Riddler   = 7

Const kMinV_S1MadHatter = 8
Const kMinV_S1KingTut   = 9
Const kMinV_S1Bookworm  = 10

Const kMinV_S2KingTut1  = 11
Const kMinV_S2EggHead = 12
Const kMinV_S2MrFreeze  = 13
Const kMinV_S2Shame   = 14
Const kMinV_S2MadHatter = 15
Const kMinV_S2KingTut2  = 16

Const kMinV_S3KingTut1  = 17
Const kMinV_S3EggHead1  = 18
Const kMinV_S3EggHead2  = 19
Const kMinV_S3Shame   = 20
Const kMinV_S3KingTut2  = 21

Const kWiz_VillainEscape= 22
Const kWiz_VillainMB  = 23
Const kWiz_BatTurn    = 24

Const kWiz_Batusi   = 25
Const kWiz_GasAttack  = 26
Const kWiz_Holy     = 27

Const kBatPoleSeq   = 28

const kMAX_MODES    = 28


'TBD: Need to add modes for the wizard, and Multiball

Dim bDebounce(29)       ' kMAX_MODES+1
Dim bDebounceTime(29)     ' kMAX_MODES+1
Dim bDebounceLight(29)      ' kMAX_MODES+1
Dim PlayerState(5)
Class TableState

  ' These should hold state of the current mode
  Public ActiveScreens(4)   ' Which screens are active
  Public numScreens     ' Number of screens being displayed
  Public comboCount
  Public comboWay       ' How many combos is a row
  Public comboWayMax      ' Max combos is a row
  Public comboScore     ' Current ComboScore
  Public VillainMBCnt     ' How many times have we done villain MB
  Public VEscapeProgress(4) ' How many Major Villains have we completed
  Public bFirstBall
  Public bFirstLaunch     ' We havent launched the first ball
  Public bMinorActive     ' are we in MinorVillainMode
  Public bMajQual       ' Is a major villain Qualified?
  Public QualQueueSize    ' Num items i nthe Qual Queue
  Public QualQueue(4)     ' if we qualify one and then qualify another we store it in the queue so once they finish we auto start
  Public SeasonIdx(4)     ' Which Season are we on for Major villains
  Public Villains(29)     ' villains kMAX_MODES+1
  Public GadgetProgress(6)
  Public Gadgets        ' Number of gadgets we have
  Public TVProgress(3)
  Public SkillshotsValue(3)   ' 0-ShooterLanes, 1-Penguin, 2-Super Skillshot
  Public bTVReady
  Public bTVCount       ' How many time did we hit TV Targets
  Public ProgressVMBMax   ' VillainMB shots to SJP
  Public VillainEscapeEverythingTotal ' Everything total for VillainEscape Calculated based on how well you completed everything
  Public BallLockStates(3)  ' Save what the ball lock states are
  Public ExtraBallsAwarded    ' How Many Extra Balls have we received
  Public bExtraBallVillain    ' have we awarded an extra  ball for completing 2 MajorV's

  Public TakeJackpot        ' Jackpot on MinorVillains Selection if you choose take bonus
  Public ShameCompletions     ' How many times did we complete Shame

  Public bHoldBonusMultiplier   ' End of Ball Bonus Multiplier
  Public bHoldBonus       ' End of Ball Bonus Multiplier
  Public bGadgetsFlashing     ' Store this so we can restore player to player

  Public BatPhoneHS       ' Store HighScore for BatPhone
  Public BonusHS          ' Store HightScore for Bonus

  Public SpinnerJP        ' Total Jackpot for Spinner
  Public SpinnerLevel       ' How many cycles of spinner we have done
  Public SpinnerLevelVal      ' 50k
  Public SpinnerLevelHits     ' How many hits so far (10 hits = next spinner level)

  Public save_BonusMultiplier
  Public save_TUTMultiplier   ' MultiplierFromTutMode
  Public TUTMultiplierTotal   ' Total tut Multiplier

  Public save_BallsInLockVirtual

  Public save_lCatStates(6)   ' Save which cat lights are qualified
  Public save_lCrane1
  Public save_lCrane2
  Public save_lCrane3
  Public save_lCrane4
  Public save_lCrane5
  Public save_tmrCrane
  Public save_TTPos     ' Save the turntable position

  Public save_lSeason1
  Public save_lSeason2
  Public save_lSeason3

  Public save_lArrowBatComp
  Public save_lArrowBatAnalyzer

  Public save_lLock1
  Public save_lLock2
  Public save_lLock3

  Public save_ExtraBall

  Public save_lBatSignal
  Public save_flshBatSignal
  Public save_lBatman
  Public save_tmrPengMagnet

  Public CommissGXCnt     ' Countdown for CommisGordon
  Public CommissGXHitCnt    ' How many times we completed
  Public CommissGXBonus(5)  ' ShotMultipliers for ComissG


  Private Sub Class_Initialize(  )
    Dim i, j
    For i = 0 to kMAX_MODES
      Set Villains(i) = new Villain
    Next
  End Sub

  Public Sub Reset()
    dim i, j, k

    bMinorActive=False
    bGadgetsFlashing=False
    bHoldBonusMultiplier=False
    bHoldBonus=False
    BatPhoneHS=0
    BonusHS=0
    ExtraBallsAwarded=0
    bExtraBallVillain=False
    TakeJackpot=750000
    numScreens=0
    VillainMBCnt=0
    QualQueueSize=0
    comboCount=0
    comboWay=1
    comboWayMax=0
    comboScore=0
    ShameCompletions=0
    ProgressVMBMax=12
    bMajQual=False
    bFirstBall = True
    bFirstLaunch = True
    bTVReady = False
    bTVCount=0
    For i = 0 to kMAX_MODES
      Villains(i).Reset()
      if i < 6 then GadgetProgress(i)=0
      if i < 3 then TVProgress(i) = 0
      if i < 3 then BallLockStates(i)=0
      if i < 4 then ActiveScreens(i)=False
      if i < 5 then CommissGXBonus(i)=1
      if i < 4 then VEscapeProgress(i)=False
    Next
    Gadgets=0

    save_BallsInLockVirtual=0

    SkillshotsValue(0)=600000
    SkillshotsValue(1)=1000000
    SkillshotsValue(2)=500000
    VillainEscapeEverythingTotal=0

    SpinnerJP=1000000
    SpinnerLevelVal=50000
    SpinnerLevel=DMDFet(kDMDFet_SpinStartLvl)
    SpinnerLevelHits=0

    save_lCrane1 = 0
    save_lCrane2 = 0
    save_lCrane3 = 0
    save_lCrane4 = 0
    save_lCrane5 = 0
    save_tmrPengMagnet=False
    TUTMultiplierTotal=1
    save_TUTMultiplier=1

    save_lCatStates(0)=1
    save_lCatStates(1)=1
    save_lCatStates(2)=2
    save_lCatStates(3)=1
    save_lCatStates(4)=1
    save_lCatStates(5)=2

    SeasonIdx(kMajV_Joker)    =kMajV_S1Joker
    SeasonIdx(kMajV_CatWoman) =kMajV_S1CatWoman
    SeasonIdx(kMajV_Riddler)  =kMajV_S1Riddler
    SeasonIdx(kMajV_Peng)   =kMajV_S1Peng

    ' *************************************************************
    ' Initialize SEASON1 for New Game
    Villains(kMajV_S1CatWoman).bActive = True
    Villains(kMajV_S1CatWoman).bEnabled = True
    'Villains(kMajV_S1CatWoman).pupScreen = pMVideo
    Villains(kMajV_S1CatWoman).Progress = 4 ' XX0  XX0
    SSetLightColor kMajV_S1CatWoman, kLightCatArrow1, "white", 0
    SSetLightColor kMajV_S1CatWoman, kLightCatArrow2, "white", 0
    SSetLightColor kMajV_S1CatWoman, kLightCat1, "white", 1
    SSetLightColor kMajV_S1CatWoman, kLightCat2, "white", 1
    SSetLightColor kMajV_S1CatWoman, kLightCat3, "white", 2
    SSetLightColor kMajV_S1CatWoman, kLightCat4, "white", 1
    SSetLightColor kMajV_S1CatWoman, kLightCat5, "white", 1
    SSetLightColor kMajV_S1CatWoman, kLightCat6, "white", 2

    Villains(kMajV_S1Joker).bActive = True
    Villains(kMajV_S1Joker).bEnabled = True
    'Villains(kMajV_S1Joker).pupScreen = pMVideo
    Villains(kMajV_S1Joker).Progress = 3 ' Season 0, Joker, Wave 0, JOK
    SSetLightColor kMajV_S1Joker, kLightJokerArrow, "red", 0
    SSetLightColor kMajV_S1Joker, kLightJokerJ, "", 1
    SSetLightColor kMajV_S1Joker, kLightJokerO, "", 1
    SSetLightColor kMajV_S1Joker, kLightJokerK, "", 1
    SSetLightColor kMajV_S1Joker, kLightJokerE, "", 2
    SSetLightColor kMajV_S1Joker, kLightJokerR, "", 0

    Villains(kMajV_S1Riddler).bActive = True
    Villains(kMajV_S1Riddler).bEnabled = True
    'Villains(kMajV_S1Riddler).pupScreen = pMVideo
    Villains(kMajV_S1Riddler).Progress = 0 '
    SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow1, "green", 0
    SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow2, "green", 0
    SSetLightColor kMajV_S1Riddler, kLightRiddlerO1, "", 1
    SSetLightColor kMajV_S1Riddler, kLightRiddlerO2, "", 1

    Villains(kMajV_S1Peng).bActive = True
    Villains(kMajV_S1Peng).bEnabled = True
    'Villains(kMajV_S1Peng).pupScreen = pMVideo
    Villains(kMajV_S1Peng).Progress = 0 '
    SSetLightColor kMajV_S1Peng, kLightPengScoop, "", 1
    SSetLightColor kMajV_S1Peng, kLightPengArrow, "white", 0

    ' *************************************************************
    ' Initialize SEASON2 for New Game (Same as season 1 ???)
    'Villains(kMajV_S2CatWoman).pupScreen = pMVideo
    Villains(kMajV_S2CatWoman).bActive = False
    Villains(kMajV_S2CatWoman).bEnabled = False
    Villains(kMajV_S2CatWoman).Progress = 4 ' XX0  XX0
    SSetLightColor kMajV_S2CatWoman, kLightCatArrow1, "white", 0
    SSetLightColor kMajV_S2CatWoman, kLightCatArrow2, "white", 0
    SSetLightColor kMajV_S2CatWoman, kLightCat1, "white", 1
    SSetLightColor kMajV_S2CatWoman, kLightCat2, "white", 1
    SSetLightColor kMajV_S2CatWoman, kLightCat3, "white", 2
    SSetLightColor kMajV_S2CatWoman, kLightCat4, "white", 1
    SSetLightColor kMajV_S2CatWoman, kLightCat5, "white", 1
    SSetLightColor kMajV_S2CatWoman, kLightCat6, "white", 2

    Villains(kMajV_S2Joker).bActive = False
    Villains(kMajV_S2Joker).bEnabled = False
    'Villains(kMajV_S2Joker).pupScreen = pMVideo
    Villains(kMajV_S2Joker).Progress = 3 ' Season 0, Joker, Wave 0, JOK
    SSetLightColor kMajV_S2Joker, kLightJokerArrow, "red", 0
    SSetLightColor kMajV_S2Joker, kLightJokerJ, "", 1
    SSetLightColor kMajV_S2Joker, kLightJokerO, "", 1
    SSetLightColor kMajV_S2Joker, kLightJokerK, "", 1
    SSetLightColor kMajV_S2Joker, kLightJokerE, "", 2
    SSetLightColor kMajV_S2Joker, kLightJokerR, "", 0

    Villains(kMajV_S2Riddler).bActive = False
    Villains(kMajV_S2Riddler).bEnabled = False
    'Villains(kMajV_S2Riddler).pupScreen = pMVideo
    Villains(kMajV_S2Riddler).Progress = 0 '
    SSetLightColor kMajV_S2Riddler, kLightRiddlerArrow1, "green", 0
    SSetLightColor kMajV_S2Riddler, kLightRiddlerArrow2, "green", 0
    SSetLightColor kMajV_S2Riddler, kLightRiddlerO1, "", 1
    SSetLightColor kMajV_S2Riddler, kLightRiddlerO2, "", 1

    Villains(kMajV_S2Peng).bActive = False
    Villains(kMajV_S2Peng).bEnabled = False
    'Villains(kMajV_S2Peng).pupScreen = pMVideo
    Villains(kMajV_S2Peng).Progress = 0 '
    SSetLightColor kMajV_S2Peng, kLightPengScoop, "", 1
    SSetLightColor kMajV_S2Peng, kLightPengArrow, "white", 0

    ' *************************************************************
    ' Initialize Other Lights for New Game

    Villains(kWiz_BatTurn).JackpotBase = 600000
    Villains(kWiz_BatTurn).JackpotValue = 0
    Villains(kWiz_BatTurn).Progress = 10
    'Villains(kWiz_BatTurn).pupScreen = pMVideo

    Villains(kWiz_VillainEscape).bEnabled = False
    Villains(kWiz_VillainMB).bEnabled = False

    ClearTVProgress
    CommissGXCnt=DMDFet(kDMDFet_ComissGShots)
    CommissGXHitCnt=0
  End Sub

  Public Property Get LightState(Villain, Index)
    LightState = Villains(Villain).lStates(Index).state
  End Property
  Public Property Let LightState(Villain, Index, state)
'WriteToLog "     ", "LightState:" & Villain & "  " & Index
    Villains(Villain).lStates(Index).state = state
    SetLightColorRestore Index
  End Property
  Public Sub SSetLightColor(Villain, Index, color, state)
'WriteToLog "     ", "SSetLightColor:" & Villain & "  " & Index

    Villains(Villain).lStates(Index).state = state
    Villains(Villain).lStates(Index).color = color
    SetLightColorRestore Index
  End Sub
  Public Sub SSetLightColorRestore(Index)
'WriteToLog "     ", "SSetLightColorRestore:" & Index
    SetLightColorRestore Index
  End Sub

  Public Sub SetBallLockStates(idx, state)
    BallLockStates(idx)=state
    if bMajQual=False and state=2 then state =0     ' Force blinking ones to off when not in a villain mode

    select case idx
      case 0: SetLightColor lLock1, "green", state
      case 1: SetLightColor lLock2, "green", state
      case 2: SetLightColor lLock3, "green", state
    End select

  End Sub

  Public Sub AddGadget()
    PlaySoundVol "sfx-gadget" & INT(RND*3)+1, VolSfx
    Gadgets=Gadgets+1
    CheckGadget False
  End Sub

  Public Sub AddCombo(direction)    ' 0=Right2Left, 1=LeftToRight
'WriteToLog "     ", "Add Combo:" & direction
    Dim image
    Dim newScore
    dim ExtraBallAt
    comboCount=comboCount+1
    comboWay=comboWay+1
    comboWayMax=comboWay
    BonusAddModeHit kBonusCombo

    ' Combos start off at 750K, each combo is 7500, 3way,4way... are 500K but dont add to the base value (Seems weird but that is what I saw on clips)
    if comboCount=1 then
      comboScore=750000
      newScore=comboScore
    else
      if comboWay>2 then        ' Adds 500K but doesnt add to the base
        newScore=500000
      else
        comboScore=comboScore+7500
        newScore=comboScore
      End if
    End if

    ' Award Extra Ball
    if comboCount=20 or comboCount=50 or comboCount=100 then
      LightExtraBall
    End if

    if comboCount < 20 then
      ExtraBallAt=20
    elseif comboCount < 50 then
      ExtraBallAt=50
    else
      ExtraBallAt=100
    End if

    image=PupAniFolder&"\\"
    select case comboCount
      Case 1,2,3,4,5,6,7,8,9
        image=image&"car"
      case 10,11,12,13,14,15,16,17,18,19
        image=image&"copter"
      case 20,21,22,23,24,25,26,27,28,29
        image=image&"boat"
      case 30,31,32,33,34,35,36,37,38,39
        image=image&"scooter"
      case else
        image=image&"bike"
    End Select

    if direction=0 then
      image=image&"-L.gif"
    else
      image=image&"-R.gif"
    End if
'WriteToLog "     ", "Add Combo:" & image

    AddScore newScore
    puPlayer.LabelSet pBackglass,"VehicleIcon", image ,1,"{'mt':2,'color':111111, 'anigif':100, 'width':100, 'height':100,'yalign':0,'xalign':0,'ypos':0,'xpos':0}"
    puPlayer.LabelSet pBackglass,"ComboText1", comboWay & "-Way Combo ("&comboCount&" Combos)"  ,1,"{'mt':2, 'size':6, 'ypos':74, 'ztop':1}"
    puPlayer.LabelSet pBackglass,"ComboText2",  FormatScore(newScore)         ,1,"{'mt':2, 'size':6, 'ypos':82, 'ztop':1}"
    puPlayer.LabelSet pBackglass,"ComboText3", "Extra Ball Lit At " & ExtraBallAt     ,1,"{'mt':2, 'size':6, 'ypos':90, 'ztop':1}"
'   vpmtimer.AddTimer 2500, "puPlayer.LabelSet pBackglass,""VehicleIcon"", ""\\PuPOverlays\\clear.png"" ,1,"""" '"
    vpmtimer.AddTimer 2500, "ClearCombo '"

    ' Kick off timer to clear combo
    tmrCombo.Enabled = False
    tmrCombo.Interval = 6000
    tmrCombo.Enabled = True
  End Sub

  Public Function AddJackpot2(Villain,  value)      ' Adds the Jackpot and Score if Villain is Enabled, Returns True if it added
    AddJackpot2=Villains(Villain).bActive
    if Villains(Villain).bActive then
      if value = -1 then value = Villains(Villain).JackpotBase
      AddScoreMode Villain, value
      Villains(Villain).JackpotValue=Villains(Villain).JackpotValue+value
    End if
  End Function
  Public Sub AddJackpot(Villain,  value)
    if value = -1 then value = Villains(Villain).JackpotBase
    Villains(Villain).JackpotValue=Villains(Villain).JackpotValue+value
  End Sub
  Public Function Jackpot(Villain)
    Jackpot = Villains(Villain).JackpotValue
  End Function


  Public Function getPupScreen(Villain)
    if Villains(Villain).pupScreen = -1 then '  and Villain<=kMajV_S2Riddler then
'WriteToLog "     ", "No Pup Screen, default to current"
      getPupScreen=sSwapPos         ' Default to the current screen
    Else
      getPupScreen=Villains(Villain).pupScreen
    End if
  End Function


  Public Sub AddScreen(Villain)
    Dim bIsMainUsed:bIsMainUsed=False
    Dim i
    Dim tmp
    if Villains(Villain).pupScreen <> -1 then
      'WriteToLog "     ", "ERROR: (" & Villain & ") " & Villains(Villain).pupScreen
      MsgBox "ERROR: Adding screen for active villain: " & Villain
      exit sub    ' Dont add a screen if we already have one
    End if
    if Villain >= kMinV_S1MadHatter and Villain <= kMinV_S3KingTut2 then bMinorActive=True:CheckGadget False

    ' See if pMVideo is assigned
    numScreens=numScreens+1
    if numScreens>4 then
      tmp="ERROR too many screens assigned. Please make a note on how you got here. V:" & Villain
      for i = 0 to kMAX_MODES         ' Go through all Major villains
        if Villains(i).pupScreen<>-1 then
          tmp=tmp & " [" & i & ":" & Villains(i).pupScreen & "] "
        End if
      Next
      MsgBox tmp
    End if

    for i = 0 to 3
      if ActiveScreens(i)=False then
        ActiveScreens(i)=True
        Villains(Villain).pupScreen = pMVideo+i
        Exit for
      End if
    Next
'WriteToLog "     ", "Adding Screen:" &Villain & " Screen=" & Villains(Villain).pupScreen & " NumScreens:" & numScreens

  End Sub
  Public Sub RemoveScreen(Villain)
'WriteToLog "     ", "Removing Screen:" & Villain & " " & Villains(Villain).pupScreen & " " & sSwapPos
    if Villains(Villain).pupScreen <> -1 then   ' Make sure it actually has a screen
      if Villain >= kMinV_S1MadHatter and Villain <= kMinV_S3KingTut2 then bMinorActive=False:CheckGadget False

      ClearAllText Villains(Villain).pupScreen        ' Clear all the text
      if numScreens=2 and Villains(Villain).pupScreen = sSwapPos then
        pDMDMulti2 -1 ' Goto the next screen
      elseif numScreens >=3 then                ' Redo screens if we have more than 3
        pDMDMulti2Last Villains(Villain).pupScreen
      elseif numScreens=1 then
        MainScreenVillainIdx=-1
      End if

      numScreens=numScreens-1
      if numScreens<0 then numScreens=0           ' Just in case
      ActiveScreens(Villains(Villain).pupScreen - pMVideo)=False    ' Add it back to the list of inactive screens
      Villains(Villain).pupScreen = -1
    End if
  End Sub

  Public Sub AddProgress(Villain)           ' Show Progress and displays score but doesnt add score to current score
    AddProgressScore Villain, -1
  End Sub
  Public Sub AddProgress2(Villain, bMustRun)      ' Show Progress and displays score but doesnt add score to current score
    AddProgressScore4 Villain, -1, True, -1, bMustRun
  End Sub

  Public Sub AddProgressScore(Villain, Score)     ' Show Progress and displays score but doesnt add score to current score
    AddProgressScore2 Villain, Score, True
  End sub

  Public Sub AddProgressScore2(Villain, Score, bFlush)  ' Show Progress and displays score but doesnt add score to current score
    AddProgressScore3 Villain, Score, bFlush, -1
  End Sub

  Public Sub AddProgressScore3(Villain, Score, bFlush, progressIdx) ' Show Progress and displays score but doesnt add score to current score
    AddProgressScore4 Villain, Score, bFlush, progressIdx, False
  End Sub

  Public Sub AddProgressScore4(Villain, Score, bFlush, progressIdx, bMustRun) ' Show Progress and displays score but doesnt add score to current score

    Dim idx
    dim tmpStr1
    dim tmpStr2
    dim Multiplier
    if Villains(Villain).PupScreen = sSwapPos then    ' Tut adds points to the current screen
      Multiplier=TUTMultiplier
    Else
      Multiplier=1
    End if

    'PlayerState(CurrentPlayer).IsActive(kWiz_VillainMB) Then     ' Is it all scores uring VMB or jsut the VMB ones?
    if villain = kWiz_VillainMB then    '  Add VMB Multiplier
      Multiplier = Multiplier * VMBMultiplier
    End If

    if villain<=kMajV_S2Riddler then                    ' Add on the mode bonus for MajorVillain shots
      Multiplier=Multiplier*ModeMultiplier
    End if


    ' Add to End Of Ball Bonus
    select case Villain
      case kMajV_S1CatWoman, kMajV_S2CatWoman : BonusAddModeHit kBonusCatwoman
      case kMajV_S1Joker, kMajV_S2Joker   : BonusAddModeHit kBonusJoker
      case kMajV_S1Riddler, kMajV_S2Riddler : BonusAddModeHit kBonusRiddler
      case kMajV_S1Peng, kMajV_S2Peng     : BonusAddModeHit kBonusPenguin
    End Select

    if bBatPoleSeqCanCancel and Villain<=kMajV_S2Riddler then tmrBatPoleSeq_Timer   ' Cancel the batcave time once we make any progress on Major Villains

    if progressIdx=-1 then
      Villains(Villain).Progress = Villains(Villain).Progress+1
      idx=Villains(Villain).Progress
    Else
      idx=progressIdx
    End if

'WriteToLog "     ", "AddProgress:" & Villain & " " & idx & " Score:" & score & " mult:" & Multiplier

    if Villain<=kMajV_S2Riddler and tmrHurryUp.Enabled = True then exit sub   ' If we are in batphone dont overwrite the screen (We should really use priority??)
    if bDisableVisualProgress then exit sub                   ' Disble visual progress so it doesnt overwrite display

    ' Typically we always flush the queue
    if bFlush then QueueFlushV Villain

    ' Do Symbol replacements

    tmpStr1 = Replace (SceneMap(Villain, idx, 0), "[MMULT]", ModeMultiplier)
    tmpStr2 = Replace (SceneMap(Villain, idx, 2), "[MMULT]", ModeMultiplier)

    tmpStr1 = Replace (tmpStr1, "[PCNT]", PlayerState(CurrentPlayer).TProgressPercent(Villain))
    tmpStr2 = Replace (tmpStr2, "[PCNT]", PlayerState(CurrentPlayer).TProgressPercent(Villain))

    tmpStr1 = Replace (tmpStr1, "[HURRYUP]", FormatScore(tmrHurryUp.UserValue*ShotMultiplier*PlayMultiplier*Multiplier))
    tmpStr2 = Replace (tmpStr2, "[HURRYUP]", FormatScore(tmrHurryUp.UserValue*ShotMultiplier*PlayMultiplier*Multiplier))

    if Score <> -1 then
      tmpStr1 = Replace (tmpStr1, "[SCORE]", FormatScore(Score*ShotMultiplier*PlayMultiplier*Multiplier))   ' Add in multipliers for visual
      tmpStr2 = Replace (tmpStr2, "[SCORE]", FormatScore(Score*ShotMultiplier*PlayMultiplier*Multiplier))
    End if

    if tmpStr1<> "" then QueueSceneV2 Villain, tmpStr1, SceneMap(Villain, idx, 1), 1, bMustRun
    if tmpStr2<> "" then QueueSceneV2 Villain, tmpStr2, -1, 1, bMustRun
  End Sub


  Public Sub AddProgressPercent(Villain,  value)
    Villains(Villain).ProgressPercent = Villains(Villain).ProgressPercent + value
    if Villains(Villain).ProgressPercent > 100 then Villains(Villain).ProgressPercent=100
  End Sub
  Public Function TProgressPercent(Villain)
    TProgressPercent = Villains(Villain).ProgressPercent
  End Function
  Public Property Let SetProgress(Villain,  value)
    Villains(Villain).Progress = value
  End Property
  Public Function TProgress(Villain)
    TProgress = Villains(Villain).Progress
  End Function

  Public Function getNextQueueQual()    ' Returns -1 if empty
    if QualQueueSize>0 then
      getNextQueueQual = QualQueue(QualQueueSize-1)
    Else
      getNextQueueQual = -1
    End if
  End Function


  Public Function bIsQueueQual(Villain)       ' AM I queued up
    Dim i
    For i = 0 to QualQueueSize-1        ' See if current is already in the queue, if so remove it
      if QualQueue(i)=Villain then
        bIsQueueQual=True
        Exit Function
      End If
    Next
    bIsQueueQual=False
  End Function

  Public Sub QueueQualDelete(Villain)         ' Queue up the current
'WriteToLog "     ", "QueueQualDelete: " & Villain & " Size:" & QualQueueSize
    Dim i
    Dim j
    Dim k

    for j = 0 to QualQueueSize-1        ' See if current is already in the queue, if so remove it
      if QualQueue(j)=Villain then
        QualQueue(j)=0
        For k = j+1 to QualQueueSize-1
          QualQueue(k-1)=QualQueue(k)
        Next
        QualQueueSize=QualQueueSize-1
        Exit For
      End If
    Next

  End Sub


  Public Sub QueueQual(Villain)         ' Queue up the current
'WriteToLog "     ", "QueueQual: " & Villain & " Size:" & QualQueueSize
    Dim i
    Dim j
    Dim k
    For i = 0 to 7              ' Loop through all major
      if Villains(i).bQual = 1 and i<>Villain then    ' Pre qualified
'WriteToLog "     ", "Unqualify villain: " & i
        Villains(i).bQual = 0
        Villains(i).Progress = Villains(i).Progress-1  ' go back 1 (so they can hit again and requalify)
        if i = kMajV_S1CatWoman or i = kMajV_S2CatWoman then
          if PlayerState(CurrentPlayer).isAwardActive(PlayerState(CurrentPlayer).SeasonIdx(kMajV_CatWoman)) or PlayerState(CurrentPlayer).VEscapeProgress(kMajV_CatWoman)  then   ' If they already completed go back to completed
            lCatwoman.state = 1
          else
            lCatwoman.state = 0
          End if
        End if
        if i = kMajV_S1Joker  or i = kMajV_S2Joker then
          if PlayerState(CurrentPlayer).isAwardActive(PlayerState(CurrentPlayer).SeasonIdx(kMajV_Joker)) or PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Joker) then    ' If they already completed go back to completed
            lJoker.state = 1
          else
            lJoker.state = 0
          End if
        End if
        if i = kMajV_S1Riddler  or i = kMajV_S2Riddler then
          if PlayerState(CurrentPlayer).isAwardActive(PlayerState(CurrentPlayer).SeasonIdx(kMajV_Riddler)) or PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Riddler) then    ' If they already completed go back to completed
            lRiddler.state = 1
          else
            lRiddler.state = 0
          End if
        End if
        if i = kMajV_S1Peng   or i = kMajV_S2Peng then
          if PlayerState(CurrentPlayer).isAwardActive(PlayerState(CurrentPlayer).SeasonIdx(kMajV_Peng)) or PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Peng) then    ' If they already completed go back to completed
            lPeng.state = 1
          else
            lPeng.state = 0
          End if
        End if


        ' Remove the screen if it has one
        'if Villain<>-1 then PlayerState(CurrentPlayer).RemoveScreen(Villain)
        PlayerState(CurrentPlayer).RemoveScreen(i)

        for j = 0 to QualQueueSize-1        ' See if current is already in the queue, if so remove it
          if QualQueue(j)=Villain then
            QualQueue(j)=0
            For k = j+1 to QualQueueSize-1
              QualQueue(k-1)=QualQueue(k)
            Next
            QualQueueSize=QualQueueSize-1
            Exit For
          End If
        Next

        if QualQueueSize < 4 then
          IncreaseBatPhone
          QualQueue(QualQueueSize)=i
          QualQueueSize=QualQueueSize+1
        else
          MsgBox "QUEUE ERROR"
        End if

        Exit for
      End if
    Next
  End Sub


  Public Function isQual(Villain)         ' 0=None, 1=BatPhoneReady, 2=Qualified
    isQual = Villains(Villain).bQual
  End Function
  Public Property Let setQual(Villain, value)   ' 0=None, 1=BatPhoneReady, 2=Qualified
'WriteToLog "     ", "SetQual: " & Villain & "=" & value
    Villains(Villain).bQual = value
    if value=1 then

      ' Someone else is waiting to finish qualification, queue them up and make this one active
      if lBatPhone.TimerEnabled then
        QueueQual(Villain)
      else
        QueueQualDelete Villain         ' Make sure he isnt qualified anymore
      End if

      AddScreen(Villain)              ' Add a screen
      pDMDMulti2 getPupScreen(Villain)      ' Swap the new screen to the middle

    elseif value=2 then                 ' Start Major Villain Start
      Villains(Villain).bPlayed = True
      bMajQual = True
      EnableBatTurn True              ' Enable Bat Turn
      SetBGMusic                  ' Start the music for this mode
      CheckGadget False

      SetBallLockStates 0, BallLockStates(0)    ' Back in MajorVillain Restore Lock states
      SetBallLockStates 1, BallLockStates(1)
      SetBallLockStates 2, BallLockStates(2)
    End if
    ClearBonusTotal(Villain)
  End Property

  Public Function isEnabled(Villain)
    isEnabled = Villains(Villain).bEnabled
  End Function
  Public Property Let setEnabled(Villain, value)
    Villains(Villain).bEnabled = value
    ScorbitBuildGameModes
  End Property

  Public Function isActive(Villain)
    isActive = Villains(Villain).bActive
  End Function
  Public Property Let setActive(Villain, value)
    Villains(Villain).bActive = value
    if value then Villains(Villain).bPlayed = True
  End Property
  Public Function isFinished(Villain)
    isFinished = Villains(Villain).bFinished
  End Function
  Public Function isAwardActive(Villain)
    isAwardActive = Villains(Villain).bAwardActive
  End Function

  Public Property Let setFinished(Villain, value)
    Villains(Villain).bFinished = value
    if value then Villains(Villain).bAwardActive = True   ' Mark we finished at least once
    if value and Villains(Villain).bQual=2 then       ' This was a qualified Major Villain
      Villains(Villain).bQual = 0
      bMajQual = False
      CheckGadget False
    End If
  End Property
  Public Sub SetTVProgress(Index)
    Dim light
    dim bMinorActive
    bMinorActive = PlayerState(CurrentPlayer).bMinorActive    ' Go through the motions but dont actually do anything
    TVProgress(Index)=1
    select case index
      case 0:set light= lTV1
      case 1:set light= lTV2
      case 2:set light= lTV3
    End Select
    if Not (PlayerState(CurrentPlayer).isActive(kMinV_S2Shame) and PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame)<=4 and light.State=2) then ' If we are in Shame and this is blinking skip it
      if bMinorActive=False then SetLightColor light, "", 3
    End if

    if TVProgress(0)=1 and TVProgress(1)=1 and TVProgress(2)=1 then
'WriteToLog "     ", "TV READY"
      if bMinorActive=False then SetLightColor lTV, "", 2
      if Not (PlayerState(CurrentPlayer).isActive(kMinV_S2Shame) and PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame)<=4 and lTV1.State=2) then  ' If we are in Shame and this is blinking skip it
        if bMinorActive=False then SetLightColor lTV1, "", 4
      End If
      if Not (PlayerState(CurrentPlayer).isActive(kMinV_S2Shame) and PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame)<=4 and lTV2.State=2) then  ' If we are in Shame and this is blinking skip it
        if bMinorActive=False then SetLightColor lTV2, "", 4
      End If
      if Not (PlayerState(CurrentPlayer).isActive(kMinV_S2Shame) and PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame)<=4 and lTV3.State=2) then  ' If we are in Shame and this is blinking skip it
        if bMinorActive=False then SetLightColor lTV3, "", 4
      End If
      bTVReady = True

      ' reset these so we can hit again
      TVProgress(0)=0
      TVProgress(1)=0
      TVProgress(2)=0

      AddScore 300000 + (10000 *bTVCount) ' 300000
      ShowPopupLabel 1, "^TV TARGETS^COMPLETED^" & FormatScore(300000 + (10000 *bTVCount)) & "^", False, ""
      bTVCount=bTVCount+1
      vpmTimer.AddTimer 3000, "ShowPopupLabel 1, """", True, """" '"
    Else
      AddScore 25000
    End If

    PlayerState(CurrentPlayer).AddJackpot2 kMinV_S2EggHead, -1  ' Egghead makes targets 300000
    PlayerState(CurrentPlayer).AddJackpot2 kMinV_S3EggHead1, -1   ' Egghead makes targets 300000
  End Sub
  Public Sub ClearTVProgress()
    TVProgress(0)=0
    TVProgress(1)=0
    TVProgress(2)=0
    bTVReady = False
    SetLightColor lTV, "", 0
    SetLightColor lTV1, "", 0
    SetLightColor lTV2, "", 0
    SetLightColor lTV3, "", 0
  End Sub


  Private Sub SetLightColorRestore(lIndex)
    Dim finalColor
    Dim finalState
    Dim i
    dim QualIndex

    QualIndex=-1
    finalState = 0
    finalColor = ""         ' Should never need this line but just in case

    for i = 0 to kMAX_MODES         ' Go through all Major villains
      if Villains(i).bActive then
        if Villains(i).bQual<>0 and Villains(i).bFinished=False then    ' Qualified MajorV
          QualIndex = i
        elseif Villains(i).bQual=0 and Villains(i).bFinished=False then
          if Villains(i).lStates(lIndex).state <> 0 then
            finalState = Villains(i).lStates(lIndex).state
            finalColor = Villains(i).lStates(lIndex).color
'WriteToLog "     ", "villainIdx: " & i & " lightIdx:" & lIndex & " state:" & finalState & " color:" & finalColor
          End If
        End If
      End If

      if QualIndex <> -1 and i=kMajV_S2Riddler then     ' Last Major Villain, Now make sure the qualified MajorVillain one overrides other Major Villains before we move on to the minor villains
        if Villains(QualIndex).lStates(lIndex).state <> 0 then
          finalState = Villains(QualIndex).lStates(lIndex).state
          finalColor = Villains(QualIndex).lStates(lIndex).color
'WriteToLog "     ", "Qual villainIdx: " & QualIndex & " lightIdx:" & lIndex & " state:" & finalState & " color:" & finalColor
        End If
      End if
    Next

    ' Main screen takes priority
    if MainScreenVillainIdx<>-1 then
      if Villains(MainScreenVillainIdx).lStates(lIndex).state <> 0 then
        finalState = Villains(MainScreenVillainIdx).lStates(lIndex).state
        finalColor = Villains(MainScreenVillainIdx).lStates(lIndex).color
'WriteToLog "     ", "MainScreen villainIdx: " & MainScreenVillainIdx & " lightIdx:" & lIndex & " state:" & finalState & " color:" & finalColor
      End If
    End if

    ' BatPoleSeq is higher than all when active
    if Villains(kBatPoleSeq).lStates(lIndex).state <> 0 and Villains(kBatPoleSeq).bActive then
      finalState = Villains(kBatPoleSeq).lStates(lIndex).state
      finalColor = Villains(kBatPoleSeq).lStates(lIndex).color
'WriteToLog "     ", "BatPoleSeq villainIdx: " & kBatPoleSeq & " lightIdx:" & lIndex & " state:" & finalState & " color:" & finalColor
    End If

'WriteToLog "     ", "SetLightColorRestore " & lIndex & " state:" & finalState & " color:" & finalColor

    if lIndex >=kLightCat1 and lIndex <=kLightCat1+5 then
      CatLight(lIndex - kLightCat1) = finalState
    else
'WriteToLog "     ", "SetLightColor:" & LightMap(lIndex).name & " Idx:" & lIndex &","&finalState
      SetLightColor LightMap(lIndex), finalColor, finalState
    End if
  End Sub


  Public Sub Save() ' Grab all the current Table states and save into this player
    dim i
    save_lCrane1 = lCrane1.state
    save_lCrane2 = lCrane2.state
    save_lCrane3 = lCrane3.state
    save_lCrane4 = lCrane4.state
    save_lCrane5 = lCrane5.state
    save_tmrCrane = tmrCrane.Enabled
    CraneGoto 0
    bFirstBall = bOnTheFirstBall

    save_lSeason1 = lSeason1.state
    save_lSeason2 = lSeason2.state
    save_lSeason3 = lSeason3.state
'WriteToLog "     ", "CurMechPos:" & CurMechPos
    save_TTPos=CurMechPos      ' Save turntable position

    save_lBatSignal = lBatSignal.state
    if flshBatSignal.visible = true and flshBatSignal.TimerEnabled=False then
      save_flshBatSignal=1
    elseif flshBatSignal.TimerEnabled then
      save_flshBatSignal=2
    else
      save_flshBatSignal=0
    End if

    save_lBatman = lBatman.state
    save_BallsInLockVirtual=BallsInLockVirtual

    save_lArrowBatComp=lArrowBatComp.state
    save_lArrowBatAnalyzer=lArrowBatAnalyzer.state

    save_TUTMultiplier=TUTMultiplier
    save_ExtraBall = lExtraBall.state
    save_BonusMultiplier=BonusMultiplier
    save_tmrPengMagnet=mMagnaSave.grabCenter

'   ArrowColor = modeRampColor
  End Sub

  Public Sub Restore()  ' Retore all the Table states
    Dim i, Pattern
'WriteToLog "     ", "Table Restore All"
    For i =0 to kMaxLights-1
      SetLightColorRestore i
    Next
    bOnTheFirstBall = bFirstBall
    bLockIsLitCallout=False

    if save_tmrPengMagnet=False then
      tmrPengMagnetStart
    else
      tmrPenMagnetCancel
    End if

    ' Set Mode Lights
    SetDefPulse(lJoker):SetLightColor lJoker, "", 0
    SetDefPulse(lCatwoman):SetLightColor lCatwoman, "", 0
    SetDefPulse(lRiddler):SetLightColor lRiddler, "", 0
    SetDefPulse(lPeng):SetLightColor lPeng, "", 0

    if Villains(SeasonIdx(kMajV_Joker)).bQual=2    then SetSlowPulse2(lJoker):SetLightColor lJoker, "", 2
    if Villains(SeasonIdx(kMajV_CatWoman)).bQual=2 then SetSlowPulse2(lCatwoman):SetLightColor lCatwoman, "", 2
    if Villains(SeasonIdx(kMajV_Riddler)).bQual=2  then SetSlowPulse2(lRiddler):SetLightColor lRiddler, "", 2
    if Villains(SeasonIdx(kMajV_Peng)).bQual=2     then SetSlowPulse2(lPeng):SetLightColor lPeng, "", 2

    ' If we completed or finished for VillainEscape light it up
    if Villains(SeasonIdx(kMajV_Joker)).bAwardActive or PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Joker)       then SetDefPulse(lJoker):SetLightColor lJoker, "", 1
    if Villains(SeasonIdx(kMajV_CatWoman)).bAwardActive or PlayerState(CurrentPlayer).VEscapeProgress(kMajV_CatWoman) then SetDefPulse(lCatwoman):SetLightColor lCatwoman, "", 1
    if Villains(SeasonIdx(kMajV_Riddler)).bAwardActive or PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Riddler)   then SetDefPulse(lRiddler):SetLightColor lRiddler, "", 1
    if Villains(SeasonIdx(kMajV_Peng)).bAwardActive or PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Peng)         then SetDefPulse(lPeng):SetLightColor lPeng, "", 1


    if TVProgress(0)=1 and TVProgress(1)=1 and TVProgress(2)=1 then SetLightColor lTV, "", 2
    SetLightColor lTV1, "", TVProgress(0)
    SetLightColor lTV2, "", TVProgress(1)
    SetLightColor lTV3, "", TVProgress(2)

    SetLightColor lGadgetG1, "", GadgetProgress(0)
    SetLightColor lGadgetA,  "", GadgetProgress(1)
    SetLightColor lGadgetD,  "", GadgetProgress(2)
    SetLightColor lGadgetG2, "", GadgetProgress(3)
    SetLightColor lGadgetE,  "", GadgetProgress(4)
    SetLightColor lGadgetT,  "", GadgetProgress(5)

    lCrane1.state = save_lCrane1
    lCrane2.state = save_lCrane2
    lCrane3.state = save_lCrane3
    lCrane4.state = save_lCrane4
    lCrane5.state = save_lCrane5
    tmrCrane.Enabled = save_tmrCrane
    tmrCraneDomeFlash.Enabled = save_tmrCrane

    lSeason1.state = save_lSeason1
    lSeason2.state = save_lSeason2
    lSeason3.state = save_lSeason3

    ' Restore lock states, if we are not in a major villain then only restore completed locks
    SetBallLockStates 0, BallLockStates(0)
    SetBallLockStates 1, BallLockStates(1)
    SetBallLockStates 2, BallLockStates(2)

    ' VillainEscape Is ready
    if PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Joker) and PlayerState(CurrentPlayer).VEscapeProgress(kMajV_CatWoman) and _
      PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Riddler) and PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Peng)  then
'   If PlayerState(CurrentPlayer).isAwardActive(SeasonIdx(kMajV_Joker)) and PlayerState(CurrentPlayer).isAwardActive(SeasonIdx(kMajV_Peng)) and _
'     PlayerState(CurrentPlayer).isAwardActive(SeasonIdx(kMajV_CatWoman)) and PlayerState(CurrentPlayer).isAwardActive(SeasonIdx(kMajV_Riddler)) then

      SetLightColor lBatSignal, "", 2
      SetLightFlasher flshBatSignal, 2
    else
      SetLightColor lBatSignal, "", save_lBatSignal
      SetLightFlasher flshBatSignal, save_flshBatSignal
    End if

    SetLightColor lBatman, "", save_lBatman
    if PlayerState(CurrentPlayer).bTVReady then
      SetLightColor lTV, "", 2
    else
      SetLightColor lTV, "", 0
    End if

    SetLightColor lExtraBall, "", save_ExtraBall

    EnableBatCompPulse False
    EnableCrimeAnaPulse False

    if bGadgetsFlashing then        ' Restore the flashing state
      GadgetsFlash()
    else
      GadgetsStop()
    End if

'   if CurrentPlayer=0 then         ' Enable Virtual locks for 2nd and 3rd players
'     trgVirtualGate.Enabled = False
'   Else
'     trgVirtualGate.Enabled = True
'   End if
    BallsInLockVirtual=save_BallsInLockVirtual
    lArrowBatComp.state =save_lArrowBatComp
    lArrowBatAnalyzer.state =save_lArrowBatAnalyzer

    SetLightFlasher flshBat1, 0             ' Blank them
    SetLightFlasher flshBat2, 0
    SetLightFlasher flshBat3, 0

    TUTMultiplier=save_TUTMultiplier
    if TUTMultiplier=1 then
      puPlayer.LabelSet pBackglass,"TutMultipler", "" ,1,"{'mt':2, 'bold':1}"
    Else
      puPlayer.LabelSet pBackglass,"TutMultipler", TUTMultiplier & "X" ,1,"{'mt':2, 'bold':1}"
    End if

    TurnTable_Goto(save_TTPos)
    EnableBatTurn bMajQual
    if bMajQual = False then
'     SetMajorLights      ' Restore joker slow pulse states
      SetMajorQualLights True
    End if

    SetVBackground      ' update the background
    StartLastScene

    CommissGXCnt = DMDFet(kDMDFet_ComissGShots)
    SetCommissGX(CommissGXCnt)

    if PlayerState(CurrentPlayer).isActive(kBatPoleSeq) then ' Batpole is still running, flash CG Arrow
      SetLightColor lArrowCommissG, "red", 2
      tmrBatPoleSeq.UserValue = 1
    else
      tmrBatPoleSeq.UserValue = 0
      SetLightColor lArrowCommissG, "red", 0
    End if

    if bHoldBonusMultiplier then
      BonusMultiplier=save_BonusMultiplier
      bHoldBonusMultiplier=False
    Else
      BonusMultiplier=1
    End if
    VMBMultiplier=1
    ShotMultiplier=1

    MainScreenVillainIdx=-1     ' No main screen priority after ball save since we are down to one screen
    'CheckGadget False        ' Update gadget light
    SternButtonFlash "white", True  ' make the gadget white and check on launch

  End Sub

  Public Sub RestoreAllLights() ' Retore all the Table states
'WriteToLog "     ", "Restoring All Lights"
    Dim i
    For i =0 to kMaxLights-1
      SetLightColorRestore i
    Next
  End Sub


End Class

Sub TableState_Init(Index)
  Set PlayerState(Index) = New TableState
  PlayerState(Index).Reset
End Sub

Dim serviceSaveAttract
dim serviceIdx
Dim serviceLevel
dim bServiceMenu
dim bServiceVol
dim bServiceEdit
dim serviceOrigValue
Dim bInService:bInService=False
Dim MasterVol:MasterVol=100
Dim VolBGVideo:VolBGVideo = cVolBGVideo
Dim VolBGMusic :VolBGMusic = cVolBGMusic
Dim VolDef:VolDef = cVolDef
Dim VolSfx:VolSfx = cVolSfx
Dim VolTable:VolTable = cVolTable
Dim TopArray:TopArray = Array("GO TO DIAGNOSTIC MENU","GO TO AUDITS MENU","GO TO ADJUSTMENTS MENU","GO TO UTILITIES MENU","GO TO TOURNAMENT MENU","GO TO REDEMPTION MENU","EXIT SERVICE MENU")
Dim AdjArray:AdjArray = Array("STANDARD ADJUSTMENTS","FEATURE ADJUSTMENTS","PREVIOUS MENU","EXIT SRVICE MENU","HELP")
Const kMenuNone   = -1
Const kMenuTop    = 0
Const kMenuAdj    = 1
Const kMenuAdjStd = 2
Sub StartServiceMenu(keycode)
  Dim i
  Dim maxVal
  Dim minVal
  Dim dataType
  dim TmpStr
  Dim direction
  Dim values
  Dim valuesLst
  Dim NewVal
  Dim displayText


  if keycode=ServiceEnterKey and bInService=False then
'WriteToLog "     ", "Start Service:" & bInService
    PlaySoundVol "stern-svc-enter", VolSfx
    serviceSaveAttract=pInAttract
    pInAttract=False
    bServiceMenu=False
    bServiceEdit=False
    bInService=True
    bServiceVol=False
    serviceIdx=-1
    serviceLevel=kMenuNone
    PuPlayer.LabelShowPage pMVideo, 4, 0,""   ' Show Blank Page so it doesnt overlap (We shouldnt need this but labels are popping over)
    PuPlayer.LabelShowPage pOverVid, 3,0,""
'     PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"3_Multicolor_TVS.png",  1, 1

    for i = 0 to 50
      PuPlayer.LabelSet pOverVid,"ServiceV"&i,"\\PupOverlays\\clear.png"  ,1,"{'mt':2,'height':10,'width':2,'ypos':45,'xpos':"&i*2&"}"
    Next

    ' If we are in attract
    PuPlayer.playlistplayex pOverVid,"PupOverlays","clear.png", 1, 1
    PuPlayer.PlayStop pOverVid
    PuPlayer.playlistplayex pOverVid,"PupVideos","blank.mp4", 1, 1
    PuPlayer.SetLoop pOverVid, 1

    PuPlayer.LabelSet pOverVid,"ServiceL1","BATMAN"                         ,1,"{'mt':2,'ypos':25,'size':5}"
    PuPlayer.LabelSet pOverVid,"ServiceL2","V" & myVersion & "    SYS. 2.35.0    OS. 2.00.16"     ,1,"{'mt':2,'ypos':35,'size':5}"
    PuPlayer.LabelSet pOverVid,"ServiceL3",""                             ,1,"{'mt':2,'ypos':65,'size':5}"
    PuPlayer.LabelSet pOverVid,"ServiceL3B","SERVICE MENU"                      ,1,"{'mt':2,'ypos':43,'size':14}"
    PuPlayer.LabelSet pOverVid,"ServiceL4","PRESS 'SELECT' TO CONTINUE"               ,1,"{'mt':2,'ypos':65,'size':5}"
    PuPlayer.LabelSet pOverVid,"ServiceL3Img","PupOverlays\\clear.png", 1,"{'mt':2,'ypos':25,'width':90}"
  elseif keycode=ServiceCancelKey then          ' 7 key starts the service menu
    if bInService then
      PlaySoundVol "stern-svc-cancel", VolSfx
      Select case serviceLevel:
        case kMenuTop, kMenuNone:
          bInService=False
          bServiceVol=False
          pInAttract=serviceSaveAttract
          if pInAttract then
            pAttractStart
          End if
          PuPlayer.LabelShowPage pMVideo, 1, 0,""   ' Show Blank Page so it doesnt overlap (We shouldnt need this but labels are popping over)
          PuPlayer.LabelShowPage pOverVid, 1,0,""
          PuPlayer.PlayStop pOverVid
          PuPlayer.SetLoop pOverVid, 0

        case kMenuAdj:
          serviceLevel=kMenuNone
          serviceIdx=0
          StartServiceMenu 11
        case kMenuAdjStd:
          if bServiceEdit then
            bServiceEdit=False
            if DMDMenu(serviceIdx).StdIdx <> -1 then
              DMDStd(DMDMenu(serviceIdx).StdIdx)=serviceOrigValue
              PuPlayer.LabelSet pOverVid,"ServiceL3",DMDStd(DMDMenu(serviceIdx).StdIdx), 1,"{'mt':1,'at':1,'fq':150,'len':1}"
            else
              DMDStd(DMDMenu(serviceIdx).FeatureIdx)=serviceOrigValue
              PuPlayer.LabelSet pOverVid,"ServiceL3",DMDStd(DMDMenu(serviceIdx).FeatureIdx), 1,"{'mt':1,'at':1,'fq':150,'len':1}"
            End if
          else
            PuPlayer.LabelSet pOverVid,"ServiceL1",""                             ,1,"{'mt':2,'ypos':65,'size':5}"
            PuPlayer.LabelSet pOverVid,"ServiceL2",""                               ,1,"{'mt':2,'ypos':65,'size':5}"
            PuPlayer.LabelSet pOverVid,"ServiceL3",""                             ,1,"{'mt':2,'ypos':65,'size':14}"
            PuPlayer.LabelSet pOverVid,"ServiceL3B",""                              ,1,"{'mt':2,'ypos':65,'size':14}"
            PuPlayer.LabelSet pOverVid,"ServiceL4",""                             ,1,"{'mt':2,'ypos':65,'size':5}"
            serviceLevel=kMenuTop
            serviceIdx=2
            StartServiceMenu 11
          End if
      End Select
    End if
  elseif bInService Then
    if keycode=ServiceEnterKey then   ' Select
      PlaySoundVol "stern-svc-enter", VolSfx
      select case serviceLevel
        case kMenuNone:
          serviceLevel=kMenuTop
          serviceIdx=0
          PuPlayer.LabelSet pOverVid,"ServiceL1","", 1,"{'mt':2,'ypos':65,'size':5}"
          PuPlayer.LabelSet pOverVid,"ServiceL2","", 1,"{'mt':2,'ypos':65,'size':5}"
          PuPlayer.LabelSet pOverVid,"ServiceL3","", 1,"{'mt':2,'ypos':65,'size':5}"
          PuPlayer.LabelSet pOverVid,"ServiceL3B","", 1,"{'mt':2,'ypos':65,'size':14}"
          PuPlayer.LabelSet pOverVid,"ServiceL3Img","PupOverlays\\DMDSettings1.png", 1,"{'mt':2,'ypos':25,'width':90}"
          PuPlayer.LabelSet pOverVid,"ServiceL4","GO TO DIAGNOSTIC MENU", 1,"{'mt':2,'ypos':65,'size':5}"
          ' DIAGNOSTIC, AUDITS,  ADJUSTMENTS, UTILITIES, TOURNAMENT, REDEMPTION, EXIT  SERVICE MENU
          ' STANDARD ADJUSTMENTS, FEATURE ADJUSTMENTS
        case kMenuTop:
          if serviceIdx=2 then
            serviceLevel=kMenuAdj
            serviceIdx=0
            PuPlayer.LabelSet pOverVid,"ServiceL3Img","PupOverlays\\DMDSettings8.png", 1,"{'mt':2,'ypos':25,'width':90}"
            PuPlayer.LabelSet pOverVid,"ServiceL4",AdjArray(serviceIdx), 1,"{'mt':2,'ypos':65,'size':5}"
          elseif serviceIdx=6 then
            StartServiceMenu 8    ' Exit
            Exit sub
          else
            PlaySoundVol "sfx-deny", VolSfx
          End if
        case kMenuAdj:
          if serviceIdx=0 then
            serviceLevel=kMenuAdjStd
            serviceIdx=0
            StartServiceMenu 0
          elseif serviceIdx=2 then    ' Go Up
            serviceLevel=kMenuNone
            serviceIdx=0
            StartServiceMenu 11
            Exit sub
          elseif serviceIdx=3 then
            StartServiceMenu 8    ' Exit
            Exit sub
          else
            PlaySoundVol "sfx-deny", VolSfx
          End if
        case kMenuAdjStd:
          if DMDMenu(serviceIdx).ValType="FUN" then   ' Function
            if DMDMenu(serviceIdx).FeatureIdx=0 then
              Clearhs
              PuPlayer.LabelSet pOverVid,"ServiceL3","<DONE>", 1,"{'mt':2,'ypos':45,'size':5}"
            End if
            if DMDMenu(serviceIdx).FeatureIdx=1 then
              ClearAll
              PuPlayer.LabelSet pOverVid,"ServiceL3","<DONE>", 1,"{'mt':2,'ypos':45,'size':5}"
            End if
          else
            if bServiceEdit=False then  ' Start Editing
              bServiceEdit=True
              if DMDMenu(serviceIdx).StdIdx <> -1 then
                serviceOrigValue=DMDStd(DMDMenu(serviceIdx).StdIdx)
              else
                serviceOrigValue=DMDStd(DMDMenu(serviceIdx).FeatureIdx)
              End if
              PuPlayer.LabelSet pOverVid,"ServiceL3",serviceOrigValue, 1,"{'mt':1,'at':1,'fq':150,'len':20000}"
            else              ' Save the change
              bServiceEdit=False
              if DMDMenu(serviceIdx).StdIdx <> -1 then
                PuPlayer.LabelSet pOverVid,"ServiceL3",DMDStd(DMDMenu(serviceIdx).StdIdx), 1,"{'mt':1,'at':1,'fq':150,'len':1}"
              else
                PuPlayer.LabelSet pOverVid,"ServiceL3",DMDStd(DMDMenu(serviceIdx).FeatureIdx), 1,"{'mt':1,'at':1,'fq':150,'len':1}"
              End if
            End if
          End if
      End Select
    elseif serviceLevel<>kMenuNone then
      if bServiceEdit = False then
        if keycode=ServiceUpKey then  ' Left
          PlaySoundVol "stern-svc-minus", VolSfx
          serviceIdx=serviceIdx-1
          if serviceIdx<0 then serviceIdx=0
        elseif keycode=ServiceDownKey then  ' Right
          PlaySoundVol "stern-svc-plus", VolSfx
          serviceIdx=serviceIdx+1
        End if

        select case serviceLevel
          case kMenuTop:
            if serviceIdx>6 then serviceIdx=0
            PuPlayer.LabelSet pOverVid,"ServiceL3Img","PupOverlays\\DMDSettings" & serviceIdx+1 &".png", 1,"{'mt':2,'ypos':25,'width':90}"
            PuPlayer.LabelSet pOverVid,"ServiceL4",TopArray(serviceIdx), 1,"{'mt':2,'ypos':65,'size':5}"

          case kMenuAdj:
            if serviceIdx>4 then serviceIdx=0
            PuPlayer.LabelSet pOverVid,"ServiceL3Img","PupOverlays\\DMDSettings" & serviceIdx+8 &".png", 1,"{'mt':2,'ypos':25,'width':90}"
            PuPlayer.LabelSet pOverVid,"ServiceL4",AdjArray(serviceIdx), 1,"{'mt':2,'ypos':65,'size':5}"

          case kMenuAdjStd:
            if serviceIdx>ubound(DMDMenu)-1 then serviceIdx=ubound(DMDMenu)-1
            PuPlayer.LabelSet pOverVid,"ServiceL2",DMDMenu(serviceIdx).Name, 1,"{'mt':2,'ypos':35,'size':5}"
            if DMDMenu(serviceIdx).StdIdx <> -1 then
              PuPlayer.LabelSet pOverVid,"ServiceL1", "STANDARD ADJUSTMENT #" & serviceIdx & "(" & DMDMenu(serviceIdx).StdIdx & ")"  , 1,"{'mt':2,'ypos':25,'size':5}"
              PuPlayer.LabelSet pOverVid,"ServiceL3",DMDStd(DMDMenu(serviceIdx).StdIdx), 1,"{'mt':2,'ypos':45,'size':5}"
            elseif DMDMenu(serviceIdx).ValType<>"FUN" then
              PuPlayer.LabelSet pOverVid,"ServiceL1", "GAME ADJUSTMENT #" & serviceIdx & "(" & DMDMenu(serviceIdx).FeatureIdx & ")", 1,"{'mt':2,'ypos':25,'size':5}"
              PuPlayer.LabelSet pOverVid,"ServiceL3",DMDFet(DMDMenu(serviceIdx).FeatureIdx), 1,"{'mt':2,'ypos':45,'size':5}"
            else
              PuPlayer.LabelSet pOverVid,"ServiceL1", "GAME FUNCTION #" & serviceIdx , 1,"{'mt':2,'ypos':25,'size':5}"
              PuPlayer.LabelSet pOverVid,"ServiceL3","<EXECUTE>", 1,"{'mt':2,'ypos':45,'size':5}"
            End if
            PuPlayer.LabelSet pOverVid,"ServiceL3B","", 1,"{'mt':2,'ypos':65,'size':14}"
            PuPlayer.LabelSet pOverVid,"ServiceL3Img","PupOverlays\\clear.png", 1,"{'mt':2,'ypos':25,'width':90}"
            PuPlayer.LabelSet pOverVid,"ServiceL4","", 1,"{'mt':2,'ypos':65,'size':5}"
        End Select
      else  ' ******************************************************    HANDLE EDIT MODE
        dataType=mid(DMDMenu(serviceIdx).ValType, 1, 3)
        minVal=-1
        maxVal=-1
        if Instr(DMDMenu(serviceIdx).ValType, "[")<> 0 then
          TmpStr =mid(DMDMenu(serviceIdx).ValType, 5, Len(DMDMenu(serviceIdx).ValType)-5)
          values = Split(TmpStr, ":")
          if dataType="INT" or dataType="PCT" then
            minVal=CInt(values(0))
            maxVal=CInt(values(1))
          End if
        End if

        direction=0
        if keycode=ServiceUpKey then  ' Left
          PlaySoundVol "stern-svc-minus", VolSfx
          direction=-1
        elseif keycode=ServiceDownKey then  ' Right
          PlaySoundVol "stern-svc-plus", VolSfx
          direction=1
        End if
'WriteToLog "     ", "EDIT DT:" & dataType & " min:" & minVal & " Max:" & maxVal & " dir:" & direction
        if direction<>0 then
          if dataType="INT" or dataType="PCT" then
            if DMDMenu(serviceIdx).StdIdx <> -1 then
              NewVal=DMDStd(DMDMenu(serviceIdx).StdIdx) + (direction*DMDMenu(serviceIdx).Increment)
              if minVal=-1 or (NewVal <= maxVal and NewVal >= minVal) then
                DMDStd(DMDMenu(serviceIdx).StdIdx)=DMDStd(DMDMenu(serviceIdx).StdIdx) + (direction*DMDMenu(serviceIdx).Increment)
                SaveValue TableName, "DMDStd_"&DMDMenu(serviceIdx).StdIdx, DMDStd(DMDMenu(serviceIdx).StdIdx) ' SAVE
                if DMDMenu(serviceIdx).StdIdx<>kDMDStd_Initials and DMDMenu(serviceIdx).StdIdx<>kDMDStd_LeftStartReset then
                  SaveValue TableName, "dmdCriticalChanged", "True"   ' SAVE
                  dmdCriticalChanged=True
                End if
              end if
              displayText=DMDStd(DMDMenu(serviceIdx).StdIdx)
            else
              NewVal=DMDFet(DMDMenu(serviceIdx).FeatureIdx) + (direction*DMDMenu(serviceIdx).Increment)
              if minVal=-1 or (NewVal <= maxVal and NewVal >= minVal) then
                DMDFet(DMDMenu(serviceIdx).FeatureIdx)=DMDStd(DMDMenu(serviceIdx).FeatureIdx) + (direction*DMDMenu(serviceIdx).Increment)
                SaveValue TableName, "DMDFet_"&DMDMenu(serviceIdx).FeatureIdx, DMDFet(DMDMenu(serviceIdx).FeatureIdx) ' SAVE
                SaveValue TableName, "dmdCriticalChanged", "True"   ' SAVE
                dmdCriticalChanged=True
              End if
              displayText=DMDFet(DMDMenu(serviceIdx).FeatureIdx)
            End if
          elseif dataType="LST" then
            if DMDMenu(serviceIdx).StdIdx <> -1 then
              For i = 0 to ubound(values)
                valuesLst=Split(values(i), ",")
'WriteToLog "     ", "EDIT LST:" & valuesLst(0) & " " & valuesLst(1) & " val: " & DMDStd(DMDMenu(serviceIdx).StdIdx) & " idx:" & i & " ubound:" & ubound(values)
                if DMDStd(DMDMenu(serviceIdx).StdIdx)&"" = valuesLst(0) and i <> ubound(values) and direction=1 then
                  valuesLst=Split(values(i+1), ",")
                  DMDStd(DMDMenu(serviceIdx).StdIdx)=valuesLst(0)
                  SaveValue TableName, "DMDStd_"&DMDMenu(serviceIdx).StdIdx, DMDStd(DMDMenu(serviceIdx).StdIdx) ' SAVE

                  displayText=valuesLst(1)
                  Exit For
                elseif DMDStd(DMDMenu(serviceIdx).StdIdx)&"" = valuesLst(0) and i <> lbound(values) and direction=-1 then
                  valuesLst=Split(values(i-1), ",")
                  DMDStd(DMDMenu(serviceIdx).StdIdx)=valuesLst(0)
                  SaveValue TableName, "DMDStd_"&DMDMenu(serviceIdx).StdIdx, DMDStd(DMDMenu(serviceIdx).StdIdx) ' SAVE

                  displayText=valuesLst(1)
                  Exit For
                End if
              Next
            End if
          End if

          if displayText<>"" then
            if DMDMenu(serviceIdx).StdIdx <> -1 then
              PuPlayer.LabelSet pOverVid,"ServiceL3",displayText, 1,"{'mt':1,'at':1,'fq':150,'len':20000}"
            else
              PuPlayer.LabelSet pOverVid,"ServiceL3",displayText, 1,"{'mt':1,'at':1,'fq':150,'len':20000}"
            End if
          End if
        End if
        ' TBD implement edit here
      End if
    End if
  elseif keycode=ServiceUpKey or keycode=ServiceDownKey then    ' If you press 8 & 9 without being in service you do volume
    if keycode=ServiceUpKey and MasterVol>0 then  ' Left
      MasterVol=MasterVol-1
      PlaySoundVol "stern-svc-minus", VolSfx
    elseif keycode=ServiceDownKey and MasterVol<100 then  ' Right
      PlaySoundVol "stern-svc-plus", VolSfx
      MasterVol=MasterVol+1
    End if

    VolBGVideo = cVolBGVideo * (MasterVol/100.0)
    VolBGMusic = cVolBGMusic * (MasterVol/100.0)
    VolDef   = cVolDef * (MasterVol/100.0)
    VolSfx   = cVolSfx * (MasterVol/100.0)

    if bServiceVol=False then
      bServiceVol=True
      serviceSaveAttract=pInAttract
      pInAttract=False

      PuPlayer.LabelShowPage pMVideo, 4, 0,""   ' Show Blank Page so it doesnt overlap (We shouldnt need this but labels are popping over)
      PuPlayer.LabelShowPage pOverVid, 3,0,""

      ' If we are in attract
      PuPlayer.playlistplayex pOverVid,"PupOverlays","clear.png", 1, 1
      PuPlayer.PlayStop pOverVid
      PuPlayer.playlistplayex pOverVid,"PupVideos","blank.mp4", 1, 1
      PuPlayer.SetLoop pOverVid, 1
    End if

    PuPlayer.LabelSet pOverVid,"ServiceL1",""                             ,1,"{'mt':2,'ypos':65,'size':5}"
    PuPlayer.LabelSet pOverVid,"ServiceL2",""                               ,1,"{'mt':2,'ypos':65,'size':5}"
    PuPlayer.LabelSet pOverVid,"ServiceL4",""                             ,1,"{'mt':2,'ypos':65,'size':5}"
    PuPlayer.LabelSet pOverVid,"ServiceL3B","VOLUME " & MasterVol                     ,1,"{'mt':2,'ypos':25,'size':10}"
    for i = 0 to 50
      if i<=(MasterVol/2) then
        PuPlayer.LabelSet pOverVid,"ServiceV"&i,"\\PupOverlays\\ServiceVol1.png"  ,1,"{'mt':2,'height':10,'width':2,'ypos':45,'xpos':"&i*2&"}"
      else
        PuPlayer.LabelSet pOverVid,"ServiceV"&i,"\\PupOverlays\\ServiceVol2.png"  ,1,"{'mt':2,'height':10,'width':2,'ypos':45,'xpos':"&i*2&"}"
      End if
    Next

    PuPlayer.LabelSet pOverVid,"ServiceL3","USE +/- TO ADJUST VOLUME"                   ,1,"{'mt':2,'ypos':65,'size':5}"
    PuPlayer.LabelSet pOverVid,"ServiceL3Img","PupOverlays\\clear.png", 1,"{'mt':2,'ypos':25,'width':90}"

    tmrService.Enabled = False
    tmrService.Interval = 5000
    tmrService.Enabled = True
  End if
End Sub

Sub tmrService_Timer()
  tmrService.Enabled = False

  bServiceVol=False
  pInAttract=serviceSaveAttract
  if pInAttract then
    pAttractStart
  End if
  PuPlayer.LabelShowPage pMVideo, 1, 0,""   ' Show Blank Page so it doesnt overlap (We shouldnt need this but labels are popping over)
  PuPlayer.LabelShowPage pOverVid, 1,0,""
  PuPlayer.PlayStop pOverVid
  PuPlayer.SetLoop pOverVid, 0

End Sub

Class DMDSettings
  Public Name
  Public StdIdx
  Public FeatureIdx
  Public ValType          ' bool, pct
  Public Increment      ' value to increment by
  Public sub Setup(Name, StdIdx, FeatureIdx, ValType, Increment)
    me.name=name
    me.StdIdx=StdIdx
    me.FeatureIdx=FeatureIdx
    me.ValType=ValType
    me.Increment=Increment
  End sub
End Class
Const MaxDMDSetting = 20
Dim DMDMenu(20)       ' MaxDMDSetting
Dim dmdChanged:dmdChanged=False             ' Did we change a value
Dim dmdCriticalChanged:dmdCriticalChanged=False     ' Did we change a critical value

Const kSetting_JokerMagnetTime  = 2500
Const kDMDStd_Initials = 38
Const kDMDStd_ExtraBallLimit = 16
Const kDMDStd_ExtraBallPCT = 17
Const kDMDStd_MatchPCT = 19
Const kDMDStd_TiltWarn = 23
Const kDMDStd_TiltDebounce = 24
Const kDMDStd_LeftStartReset = 47
Const kDMDStd_BallSave = 48
Const kDMDStd_BallSaveExtend = 80
Const kDMDFet_SpinHitsForLevel = 6
Const kDMDFet_SpinStartLvl = 7
Const kDMDFet_SpinAddlLvl = 8
Const kDMDFet_SpinMaxLvl = 9
Const kDMDFet_TVModeSelectTmr = 79
Const kDMDFet_ComissGShots = 149
Const kDMDFet_ComissGShotsAddl = 150
Const kDMDFet_ComissGShotsMax = 151
Const kDMDFet_TVWizModeSelectTmr = 122
Sub DMDSettingsInit()
  Dim i
  Dim x

  DMDStd(kDMDStd_Initials)=3        ' 10 Initials
  DMDStd(kDMDStd_ExtraBallLimit)=5    ' 5
  DMDStd(kDMDStd_ExtraBallPCT)=25     ' 25%   (Looks like default was 25% but doesnt seem right)
  DMDStd(kDMDStd_TiltWarn)=2        ' 2 warnings
  DMDStd(kDMDStd_TiltDebounce)=1000   ' 1 second debounce
  DMDStd(kDMDStd_MatchPCT)=9        ' 9%
  DMDStd(kDMDStd_LeftStartReset)=True   ' Allow Left + Start to Reset the Game (True, False, FreePlay)
  DMDStd(kDMDStd_BallSave) = 5      ' 5 second ball save
  DMDStd(kDMDStd_BallSaveExtend) = 2000 ' Time to pause ball save when triggers are hit (Custom)

  DMDFet(kDMDFet_SpinHitsForLevel) = 10 ' How many spins to go up a level
  DMDFet(kDMDFet_SpinStartLvl) = 3    ' Starting level before we collect JP
  DMDFet(kDMDFet_SpinAddlLvl) = 3     ' Min level for JP
  DMDFet(kDMDFet_SpinMaxLvl) = 5      ' Max Level for JP

  DMDFet(kDMDFet_ComissGShots) = 3    ' 3 shots
  DMDFet(kDMDFet_ComissGShotsAddl) = 1  ' 1 increase by 1
  DMDFet(kDMDFet_ComissGShotsMax) = 7   ' Max of 7
  DMDFet(kDMDFet_TVModeSelectTmr) = 15  ' 15 Seconds
  DMDFet(kDMDFet_TVWizModeSelectTmr) = 9  ' 9 seconds

  ' Load any Values from saved config
  x = LoadValue(TableName, "DMDStd_"&kDMDStd_Initials):   If(x <> "") Then DMDStd(kDMDStd_Initials)=x
  x = LoadValue(TableName, "DMDStd_"&kDMDStd_ExtraBallLimit): If(x <> "") Then DMDStd(kDMDStd_ExtraBallLimit)=x
  x = LoadValue(TableName, "DMDStd_"&kDMDStd_ExtraBallPCT): If(x <> "") Then DMDStd(kDMDStd_ExtraBallPCT)=x
  x = LoadValue(TableName, "DMDStd_"&kDMDStd_TiltWarn):   If(x <> "") Then DMDStd(kDMDStd_TiltWarn)=x
  x = LoadValue(TableName, "DMDStd_"&kDMDStd_TiltDebounce): If(x <> "") Then DMDStd(kDMDStd_TiltDebounce)=x
  x = LoadValue(TableName, "DMDStd_"&kDMDStd_MatchPCT):   If(x <> "") Then DMDStd(kDMDStd_MatchPCT)=x
  x = LoadValue(TableName, "DMDStd_"&kDMDStd_LeftStartReset): If(x <> "") Then DMDStd(kDMDStd_LeftStartReset)=x
  x = LoadValue(TableName, "DMDStd_"&kDMDStd_BallSave):   If(x <> "") Then DMDStd(kDMDStd_BallSave)=x
  x = LoadValue(TableName, "DMDStd_"&kDMDStd_BallSaveExtend): If(x <> "") Then DMDStd(kDMDStd_BallSaveExtend)=x

  x = LoadValue(TableName, "DMDFet_"&kDMDFet_SpinHitsForLevel): If(x <> "") Then DMDFet(kDMDFet_SpinHitsForLevel)=x
  x = LoadValue(TableName, "DMDFet_"&kDMDFet_SpinStartLvl):   If(x <> "") Then DMDFet(kDMDFet_SpinStartLvl)=x
  x = LoadValue(TableName, "DMDFet_"&kDMDFet_SpinAddlLvl):    If(x <> "") Then DMDFet(kDMDFet_SpinAddlLvl)=x
  x = LoadValue(TableName, "DMDFet_"&kDMDFet_SpinMaxLvl):     If(x <> "") Then DMDFet(kDMDFet_SpinMaxLvl)=x
  x = LoadValue(TableName, "DMDFet_"&kDMDFet_ComissGShots):   If(x <> "") Then DMDFet(kDMDFet_ComissGShots)=x
  x = LoadValue(TableName, "DMDFet_"&kDMDFet_ComissGShotsAddl): If(x <> "") Then DMDFet(kDMDFet_ComissGShotsAddl)=x
  x = LoadValue(TableName, "DMDFet_"&kDMDFet_ComissGShotsMax):  If(x <> "") Then DMDFet(kDMDFet_ComissGShotsMax)=x
  x = LoadValue(TableName, "DMDFet_"&kDMDFet_TVModeSelectTmr):  If(x <> "") Then DMDFet(kDMDFet_TVModeSelectTmr)=x
  x = LoadValue(TableName, "DMDFet_"&kDMDFet_TVWizModeSelectTmr): If(x <> "") Then DMDFet(kDMDFet_TVWizModeSelectTmr)=x
  x = LoadValue(TableName, "dmdCriticalChanged"): If(x<>"") Then dmdCriticalChanged=True

  BallSaverTime = DMDStd(kDMDStd_BallSave)

  For i = 0 to MaxDMDSetting-1
    set DMDMenu(i)=new DMDSettings
    select case i
      case 0:DMDMenu(i).Setup "HSTD INITIALS",            kDMDStd_Initials  , -1,   "LST[3,3 INITIALS:10,10 LETTER NAME]", 1
      case 1:DMDMenu(i).Setup "EXTRA BALL LIMIT",           kDMDStd_ExtraBallLimit, -1,   "INT[0:9]", 1
      case 2:DMDMenu(i).Setup "EXTRA BALL PERCENT",           kDMDStd_ExtraBallPCT, -1,   "PCT[0:50]", 1
      case 3:DMDMenu(i).Setup "MATCH PERCENT",            kDMDStd_MatchPCT,   -1,   "PCT[0:10]", 1
      case 4:DMDMenu(i).Setup "LEFT+START RESETS",          kDMDStd_LeftStartReset, -1,   "BOOL", 1
      case 5:DMDMenu(i).Setup "BALL SAVE SECONDS",          kDMDStd_BallSave,   -1,   "INT[0:15]", 1
      case 6:DMDMenu(i).Setup "BALL SAVE EXTEND SEC",         kDMDStd_BallSaveExtend, -1,   "INT", 1
      case 7:DMDMenu(i).Setup "TILT WARNINGS",            kDMDStd_TiltWarn  , -1,   "INT[0:3]", 1
      case 8:DMDMenu(i).Setup "TILT DEBOUNCE",            kDMDStd_TiltDebounce, -1,   "INT[750:1500]", 1
      case 9:DMDMenu(i).Setup  "SPINNER HITS FOR LEVEL",        -1,   kDMDFet_SpinHitsForLevel,   "INT[5:15]", 1
      case 10:DMDMenu(i).Setup  "SPINNER STARTING LEVELS FOR JP",   -1,   kDMDFet_SpinStartLvl,     "INT[1:5]", 1
      case 11:DMDMenu(i).Setup "SPINNER ADDL. LEVELS FOR JP",     -1,   kDMDFet_SpinAddlLvl,      "INT[1:5]", 1
      case 12:DMDMenu(i).Setup "SPINNER MAX. LEVELS FOR JP",      -1,   kDMDFet_SpinMaxLvl,       "INT[4:6]", 1
      case 13:DMDMenu(i).Setup "SHOT X. TGT. HITS FOR LIGHT X",     -1,   kDMDFet_ComissGShots,     "INT", 1
      case 14:DMDMenu(i).Setup "SHOT X. ADDL. TGT. HITS FOR LIGHT X", -1,   kDMDFet_ComissGShotsAddl,   "INT", 1
      case 15:DMDMenu(i).Setup "SHOT X. MAX. TGT. HITS FOR LIGHT X",  -1,   kDMDFet_ComissGShotsMax,    "INT", 1
      case 16:DMDMenu(i).Setup "TV MODE SELECT TIMER",        -1,   kDMDFet_TVModeSelectTmr,    "INT", 1
      case 17:DMDMenu(i).Setup "TV WIZARD MODE SELECT TIMER",     -1,   kDMDFet_TVWizModeSelectTmr,   "INT", 1
      case 18:DMDMenu(i).Setup "CLEAR HIGHSCORE",           -1,   0,                "FUN", 1
      case 19:DMDMenu(i).Setup "CLEAR ALL",               -1,   1,                "FUN", 1

    End Select
  Next

End Sub
Dim DMDStd(81)
Dim DMDFet(293)
Dim BumperScoreFree(6)

Dim VPXMP:set VPXMP=new VPXMultiplayer

Dim ETBall1, ETBall2, ETBall3, ETBall4, ETBall5, ETBall6, gBOT

Sub Table1_Init()
  Dim i

  LoadEM
  Randomize

  ' Special things for desktop mode
  bDesktop = False
  if PuPDMDDriverType=pDMDTypeFULL THEN
    bDesktop = True
  else
    'if table1.backglassmode = 110 then bDesktop=True
    if bSingleScreen then bDesktop=True
  End if
  'if table1.Rotation =0 then bDesktop=True
  'if table1.ShowDT then bDesktop=True

  if AlternatePhysics = 1 then
    LeftFlipper.ElasticityFalloff=0.45
    LeftFlipper.Friction = 0.75

    RightFlipper.ElasticityFalloff=0.45
    RightFlipper.Friction = 0.75

'
'   LeftFlipper.Strength = 2250
'   LeftFlipper.Elasticity = 0.76
'   LeftFlipper.ElasticityFalloff = 0.2
'   LeftFlipper.Friction = 0.75
'   LeftFlipper.Return=0.1
'   LeftFlipper.RampUp=0
'   LeftFlipper.EOSTorque=0.75
'
'   RightFlipper.Strength = 2250
'   RightFlipper.Elasticity = 0.76
'   RightFlipper.ElasticityFalloff = 0.2
'   RightFlipper.Friction = 0.75
'   RightFlipper.Return=0.1
'   RightFlipper.RampUp=0
'   RightFlipper.EOSTorque=0.75
  End if

  NewLog
  WriteToLog "-------------", "TABLE INIT"

  for i = 0 to kMAX_MODES
    bDebounce(i)=False
    bDebounceLight(i)=""
    if i<=5 then BumperScoreFree(i)=False
  Next

  ' Choose Side Blades
  if bladeArt = 1 then
    PinCab_Blades.Image = "PinCab_Blades_b66"
    PinCab_Blades.visible = 1
  elseif bladeArt = 2 then
    PinCab_Blades.visible = 0
  else
    PinCab_Blades.Image = "PinCab_Blades"
    PinCab_Blades.visible = 1
  End if
  if showRails=0 Then
    PinCab_Rails.visible = False
  End if


    'Impulse Plunger as autoplunger
    Const IMPowerSetting = 50 ' Plunger Power (45)
    Const IMTime = 1.1        ' Time in seconds for Full Plunge
    Set plungerIM = New cvpmImpulseP
    With plungerIM
        .InitImpulseP swplunger, IMPowerSetting, IMTime
        .Random 1.5
        .InitExitSnd SoundFX("Saucer_Kick", DOFContactors), SoundFX("Saucer_Enter_1", DOFContactors)
        .CreateEvents "plungerIM"
    End With

  vpmNudge.TiltSwitch = 14
    vpmNudge.Sensitivity = 1
    vpmNudge.TiltObj = Array(Bumper001, bumper002, bumper003, LeftSlingshot, RightSlingshot)
  TiltSensitivity=3   'was 6
  Tilt=0

  bFirstPlay=True
  if bDesktop and useHighResDMD=False then
    PupAniFolder="anigif.small"
  Else
    PupAniFolder="anigif.medium"
  End If

  Loadhs
  DMDSettingsInit()   ' Load Defaul Settings

  TableState_Init(0)
  TableState_Init(1)
  TableState_Init(2)
  TableState_Init(3)

  hsbModeActive2=False
  hsbModeActive=False

  i = INT(RND*3)+1
  if i<10 then
    CollectorCard.Image = "CC0" & i
  else
    CollectorCard.Image = "CC" & i
  End if

  PuPInit

  bResetCurrentGame=False

' 'Trigger1
  bFreePlay=True
  bGameInPlay = False
  bBackGateIsOpen = False
  dim bShowBalls
  bShowBalls=False
  bCreatedBall = False
  bInstantInfo = False
  bInstantInfoIdx = 0
  bDisableVisualProgress = False

  BallsOutlaneDrainCnt=0
  BallsOutlaneDrainIgnoreCnt=0

  bBallSaverActive = False
  BallSaverActiveBuffer = 0
    bBallSaverReady = False

  Set postBall1 = SpinnerKick.CreateSizedballWithMass(35/2,Ballmass*1.375)
  postBall1.visible = bShowBalls
  Spinnerkick.kick 0,0,0
  postBall1.x = RotatingPFB.x
  postBall1.y = RotatingPFB.y
  postBall1.z = 25

  Set postBall2 = SpinnerKick.CreateSizedballWithMass(35/2,Ballmass*1.375)
  postBall2.visible = bShowBalls
  Spinnerkick.kick 0,0,0
  postBall2.x = RotatingPFB.x
  postBall2.y = RotatingPFB.y
  postBall2.z = 25

  For i=1 to 5:CraneHit(i).IsDropped = 1:Next
  Set craneBall = SpinnerKick.CreateSizedballWithMass(35/2,Ballmass*1.375)
  craneBall.visible = bShowBalls
  Spinnerkick.kick 0,0,0
  craneBall.x = CraneSpring.x
  craneBall.y = CraneSpring.y
  craneBall.z = 25

  'Ball initializations need for physical trough
  Set ETBall1 = swTrough1.CreateSizedballWithMass(Ballsize / 2,Ballmass)
  Set ETBall2 = swTrough2.CreateSizedballWithMass(Ballsize / 2,Ballmass)
  Set ETBall3 = swTrough3.CreateSizedballWithMass(Ballsize / 2,Ballmass)
  Set ETBall4 = swTrough4.CreateSizedballWithMass(Ballsize / 2,Ballmass)
  Set ETBall5 = swTrough5.CreateSizedballWithMass(Ballsize / 2,Ballmass)
  Set ETBall6 = swTrough6.CreateSizedballWithMass(Ballsize / 2,Ballmass)

  '*** Use gBOT in the script wherever BOT is normally used. Then there is no need for GetBalls calls ***
  gBOT = Array(ETBall1, ETBall2, ETBall3, ETBall4, ETBall5, ETBall6, postBall1, postBall2, craneBall)

  ' save Max Level
  for each i in GI
    i.uservalue = i.intensity
  Next

  Set mMagnaSave = New cvpmMagnet
    With mMagnaSave
       .InitMagnet MagnaSave, 30  ' was 60 power
       .GrabCenter = True
       .MagnetOn = 0
       .CreateEvents "mMagnaSave"
    End With
  mMagnaSave.MagnetOn = False

  For i = 0 To MaxPlayers-1
    LastScore(i)=0
  Next

  tmrFake.Enabled = True
  Spinnerkick.enabled = False
  bBallInPlungerLane= False

  bBallLockInit=True
  bLockIsLitCallout=False
  CurMechPos=kTT_TV
  UpdateJokerMech kTT_TV, 100, 0      ' Initial setup
  'UpdateCraneMech 20, 100, 0

  flshCatwoman.Interval = 150
  flshCatwoman.Enabled = True

  For i = 0 to kMaxLightSeq
    myLightSeqIdx(i)=0
    myLightSeqCtr(i)=0
  Next

  tmrMyLightSeq.Interval = 50
  tmrMyLightSeq.Enabled = True

  SternButtonFlash "white", True

  tmrAtomicFlash.Interval = 5
  tmrAtomicFlash.Enabled = True
  Flasherflash1.TimerInterval = 10
  Flasherflash1_1.Color = RGB(255,0,0)
  Flasherflash1.ImageA = "domeredflash2"
  Flasherbase1.Image = "domeredbase"
  Flasherlit1.Image = "domeorangelit"
  bFlash1Enabled=False
  DOF 128, DOFOff 'Beacon Off

  Flasherflash20.TimerInterval = 10
  Flasherflash20_1.Color = RGB(0,0,0)

  EnableBatCompPulse False
  EnableCrimeAnaPulse False

'TurnTable_Goto(kTT_Batcave)
'TurnTable_Goto(kTT_Phone)
'8.2

  EndOfGame()

' SternButtonFlash "yellow", True
' vpmtimer.addtimer 4000, "Table1_KeyDown StartGameKey '"
End Sub

Sub table1_Exit
  Scorbit.StopSession2 Score(0), Score(1), Score(2), Score(3), PlayersPlayingGame, True   ' In case you stop mid game
  VPXMP.UnRegister
  pupDMDupdate.Enabled = False
  if b2son then Controller.Stop
    Savehs
End Sub


Private Function BigMod(Value1, Value2)
    BigMod = Value1 - (Int(Value1 / Value2) * Value2)
End Function


'********************
'     Flippers
'********************

Const ReflipAngle = 20

Sub SolLFlipper(Enabled)
    If Enabled Then
'        if bGameInPlay then PlaySoundAt SoundFXDOF("Flipper_L01", 101, DOFOn, DOFFlippers), LeftFlipper
        FlipperActivate LeftFlipper, LFPress
    LF.fire
    RotateLaneLightsLeft

    If LeftFlipper.currentangle < LeftFlipper.endangle + ReflipAngle Then
      RandomSoundReflipUpLeft LeftFlipper
    Else
      SoundFlipperUpAttackLeft LeftFlipper
      RandomSoundFlipperUpLeft LeftFlipper
    End If
    Else
'   if bGameInPlay then PlaySoundAt SoundFXDOF("Flipper_Left_Down_1", 101, DOFOff, DOFFlippers), LeftFlipper
    FlipperDeActivate LeftFlipper, LFPress
    LeftFlipper.RotateToStart
    If LeftFlipper.currentangle < LeftFlipper.startAngle - 5 Then
      RandomSoundFlipperDownLeft LeftFlipper
    End If
    FlipperLeftHitParm = FlipperUpSoundLevel
    End If

  if bBallInPlungerLane and bAutoPlunger=False and bMultiBallMode=False then
    SuperSkillshotEnable(Enabled)           ' This will disable skillshot stuff while we are in the plunger lane (and not autoplunging)
  elseif bSuperSkillShotReady1 and Enabled=False then
    SuperSkillshotEnable(Enabled)           ' This will disable SSS if we let go while ball is going up the lane
  End if

  SelectAlternates True, Enabled
End Sub

Sub SolRFlipper(Enabled)
    If Enabled Then
'        if bGameInPlay then PlaySoundAt SoundFXDOF("Flipper_R01", 102, DOFOn, DOFFlippers), RightFlipper
        FlipperActivate RightFlipper, RFPress
    RF.Fire
        RotateLaneLightsRight

    If rightflipper.currentangle > rightflipper.endangle - ReflipAngle Then
      RandomSoundReflipUpRight RightFlipper
    Else
      SoundFlipperUpAttackRight RightFlipper
      RandomSoundFlipperUpRight RightFlipper
    End If
    Else
'   if bGameInPlay then PlaySoundAt SoundFXDOF("fx_flipperdown", 102, DOFOff, DOFFlippers), RightFlipper
    FlipperDeActivate RightFlipper, RFPress
    RightFlipper.RotateToStart
    If RightFlipper.currentangle > RightFlipper.startAngle + 5 Then
      RandomSoundFlipperDownRight RightFlipper
    End If
    FlipperRightHitParm = FlipperUpSoundLevel
    End If
  SelectAlternates False, Enabled
End Sub


Sub RotateLaneLightsLeft()
  Dim bSave

''WriteToLog "     ", "RotateLeft" & flshBat1.UserValue & " " & flshBat2.UserValue & " " & flshBat3.UserValue
  if bSkillshotsReady(0)=False then         ' Cant rotate during skillshot
    bSave=flshBat1.UserValue          ' Rotate userVlues since they dictate when the state really is
    SetLightFlasher flshBat1, flshBat2.UserValue
    SetLightFlasher flshBat2, flshBat3.UserValue
    SetLightFlasher flshBat3, bSave
  End if

  bSave=lBat1.state
  lBat1.state=lBat2.state
  lBat2.state=lBat3.state
  lBat3.state=lBat4.state
  lBat4.state=bSave

End Sub

Sub RotateLaneLightsRight()
  Dim bSave

''WriteToLog "     ", "RotateRight " & flshBat1.UserValue & " " & flshBat2.UserValue & " " & flshBat3.UserValue

  if bSkillshotsReady(0)=False then         ' Cant rotate during skillshot
    bSave=flshBat3.UserValue          ' Rotate userVlues since they dictate when the state really is
    SetLightFlasher flshBat3, flshBat2.UserValue
    SetLightFlasher flshBat2, flshBat1.UserValue
    SetLightFlasher flshBat1, bSave
  end if

  bSave=lBat4.state
  lBat4.state=lBat3.state
  lBat3.state=lBat2.state
  lBat2.state=lBat1.state
  lBat1.state=bSave
End Sub


Sub Game_Init() 'called at the start of a new game
    Dim i

  Gate002.open = False
  bAutoPlunger=False
  Tilted = False
  Tilt=0
  bMultiBallMode=False
  bCheckGadgetSpecialEnabled=False
  bCreatedBall = False
  BallsInLockVirtual = 0
  BallsInLock = 0
  BallSearchCnt = 0
  bSceneCollect=False
  bSceneFinished=False
  SpinnerBaseValue=30
  curSong=""
  bFlash1Enabled=False
  DOF 128, DOFOff 'Beacon Off
  CurrentPlayer=0
  bAddABallGiven=False
  bExtraBallSceneActive=False
  bLockIsLitCallout=False
  bVMajSeasonSelectReady=False
  bTableDisabled=False

  StopCrane
  RotatingPFAGuard.IsDropped = True
  UpdateNumberPlayers

  tmrHurryUp.UserValue = 1

  DisableTable False

' Play with Mech here
' UpdateJokerMech kTT_Phone, 100, 0
' UpdateJokerMech kTT_Phone2, 100, 0
' UpdateJokerMech kTT_Batcave, 100, 0
' UpdateJokerMech 0, 100, 0
' vpmtimer.addtimer 10000, "UpdateJokerMech 180, 100, 0 '"

' vpmtimer.addtimer 2000, "UpdateJokerMech kTT_Phone, 100, 0 '"
' vpmtimer.addtimer 4000, "UpdateJokerMech kTT_Phone2, 100, 0 '"
' vpmtimer.addtimer 6000, "UpdateJokerMech kTT_Batcave, 100, 0 '"
' vpmtimer.addtimer 8000, "UpdateJokerMech kTT_TV, 100, 0 '"
' vpmtimer.addtimer 10000, "UpdateJokerMech 180, 100, 0 '"
'UpdateJokerMech 180, 1, 0
' TurnTable_Goto(kTT_Phone2)
' TurnTable_Goto(kTT_Batcave)

'UpdateCraneMech -20,10, 0
'vpmtimer.addtimer 1500, "UpdateCraneMech -4, 10, 0 '"
'vpmtimer.addtimer 3000, "UpdateCraneMech 8.5,10, 0 '"
'vpmtimer.addtimer 4500, "UpdateCraneMech 22, 10, 0 '"
'vpmtimer.addtimer 6000, "UpdateCraneMech 38, 10, 0 '"
'vpmtimer.addtimer 7500, "UpdateCraneMech 70, 10, 0 '"
'vpmtimer.addtimer 9000, "UpdateCraneMech -20, 10, 0 '"

  pDMDStartGame

End Sub

Sub ResetForNewGame()
dim i
'WriteToLog "     ", "Reset for New game"

  playclear pMusic
  tmrBallSearch.Interval = kBallSearchTimeout
  BallSearchCnt = 0
  tmrBallSearch.Enabled = True
  if kBallSearchEnabled=False then tmrBallSearch.Enabled = False

  bGameInPlay = True
  ModeMultiplier = 1
  PlayMultiplier = 1
  PlayMultiplierCnt=0
  bPlayMultiplierScene=False
  TUTMultiplier=1
  BonusMultiplier = 1
  VMBMultiplier=1
  bOnTheFirstBall = True
  PlayersPlayingGame = 1
  tmrPenMagnetCancel
  For i = 0 To MaxPlayers-1
    ScoreSave(i)=0
    LastScore(i)=0
        Score(i) = 0
        BonusPoints(i) = 0
        BonusHeldPoints(i) = 0
        BonusMultiplier = 1
        BallsRemaining(i) = BallsPerGame
        ExtraBallsAwards(i) = 0
    ExtraBallsLit(i) = 0
    TiltCount(i) = 0

    PlayerState(i).SetBallLockStates 0, 0     ' Set lock1,2,3 to 0
    PlayerState(i).SetBallLockStates 1, 0
    PlayerState(i).SetBallLockStates 2, 0

    Next

  for i = 0 to 8  ' Clear All Bonus counters
    BonusModeHits(i)=0
    BonusModeValue(i) = 0
    BonusModeTotal(i)=0
  next

  EnableBatCompPulse False
  EnableCrimeAnaPulse False

  StopLightSeq
  SternButtonFlash "white", False

  ' Clear the Season lights
  SetDefPulse lSeason1
  SetDefPulse lSeason2
  SetDefPulse lSeason3
  SetLightColor lSeason1, "", 0
  SetLightColor lSeason2, "", 0
  SetLightColor lSeason3, "", 0

  ' initialise Game variables
    Game_Init()

    ' you may wish to start some music, play a sound, do whatever at this point
'WriteToLog "     ", "Reset"

  ' Reset all the player states
  PlayerState(0).Reset    ' Unused since we are one based
  PlayerState(1).Reset
  PlayerState(2).Reset
  PlayerState(3).Reset
  PlayerState(0).Save ' Save new state
  PlayerState(1).Save ' Save new state
  PlayerState(2).Save ' Save new state
  PlayerState(3).Save ' Save new state
  PlayerState(CurrentPlayer).Restore()

  Scorbit.StartSession()

    ' set up the start delay to handle any Start of Game Attract Sequence
    vpmtimer.addtimer 3500, "FirstBall '"
End Sub

Sub FirstBall
'WriteToLog "     ", "First Ball"
    ' reset the table for a new ball
    ResetForNewPlayerBall(False)

    ' create a new ball in the shooters lane
' If bResetCurrentGame = False then
  CreateNewBall()
' Else
'   swPlungerRest_Hit ' Fake we added a ball if they did the reset
' End if

  tmrCallouts.Interval = 20000
  tmrCallouts.UserValue = "b66-player"&CurrentPlayer+1&"-your-up"
  tmrCallouts.Enabled = True
  bResetCurrentGame = False

End Sub

Sub LightExtraBall()
  if PlayerState(CurrentPlayer).ExtraBallsAwarded < DMDStd(kDMDStd_ExtraBallLimit) then
    ExtraBallsLit(CurrentPlayer)=ExtraBallsLit(CurrentPlayer)+1
    SetLightColor lExtraBall, "", 2

    playclear pOverVid
    PuPlayer.LabelShowPage pOverVid, 1,0,""
    PlaySoundVol "sfx-extraballlit3", VolSfx
    playmedia "Extra_Ball_Is_Lit.mp4", "PupVideos", pOverVid, "", -1, "", 0, 1

  End if
End Sub

Sub AwardExtraBall()
  dim tmrLen
  if lExtraBall.state = 2 then
    PlayerState(CurrentPlayer).ExtraBallsAwarded=PlayerState(CurrentPlayer).ExtraBallsAwarded+1     ' count them
    ExtraBallsAwards(CurrentPlayer)=ExtraBallsAwards(CurrentPlayer)+1

    ExtraBallsLit(CurrentPlayer)=ExtraBallsLit(CurrentPlayer)-1   ' Deduct lit Extra balls (in case they get 2 awarded)
    if ExtraBallsLit(CurrentPlayer)>0 then
      PlaySoundVol "sfx-extraballlit3", VolSfx
      SetLightColor lExtraBall, "", 2
    else
      SetLightColor lExtraBall, "", 0
    End if

    if bBallSaverActive=False then    ' Wait until ball save is over to light this
      LightBallSave.state=1
    End if

    PauseTimersForce(6500)
    PlaySoundVol "sfx-extraball2", VolSfx
    playclear pOverVid
    PuPlayer.LabelShowPage pOverVid, 1,0,""

    Select case INT(RND*3)
      case 0:
        tmrLen=5500
        playmedia "Extra_Ball1.mp4", "PupVideos", pOverVid, "", -1, "", 0, 1
      case 1:
        tmrLen=5500
        playmedia "Extra_Ball2.mp4", "PupVideos", pOverVid, "", -1, "", 0, 1
      case 2:
        tmrLen=5500
        playmedia "Extra_Ball3.mp4", "PupVideos", pOverVid, "", -1, "", 0, 1
    End Select

    ' Set this temporarly so other things can pause until this is done
    bExtraBallSceneActive=True
    if INT(RND*2) = 0 then          ' Random Extra Ball Sound
      VPMTimer.Addtimer tmrLen, "PlaySoundVol ""b66-extra-ball1"", VolDef: bExtraBallSceneActive=False '"
    Else
      VPMTimer.Addtimer tmrLen, "PlaySoundVol ""b66-extra-ball2"", VolDef: bExtraBallSceneActive=False '"
    End if
  End if

End Sub

Sub CreateNewBall()
'WriteToLog "     ", "CreateNewBall"
  if VPXMP.IsMyTurn then
    bCreatedBall = True
'   BallRelease.CreateSizedball BallSize / 2
  ' BallRelease.CreateBall
    BallsOnPlayfield = BallsOnPlayfield + 1
  'WriteToLog "     ", "Kick"
'   BallRelease.Kick 90, 7
    swTrough1.kick 90, 10
'   PlaySoundAt SoundFXDOF("ballrelease", 106, DOFPulse, DOFContactors), BallRelease
    DOF 106, DOFPulse
    RandomSoundBallRelease swTrough1
    If BallsOnPlayfield-BallsInLock > 1 Then
  'WriteToLog "     ", "SETTING MULTIBALL MODE " & BallsOnPlayfield & "!!!!!!!!!!!!!!!!!!"
      bMultiBallMode = True
      bAutoPlunger = True
    End If
  else
    bCreatedBall = True
    BallsOnPlayfield = BallsOnPlayfield + 1
'   PlaySoundAt SoundFXDOF("ballrelease", 106, DOFPulse, DOFContactors), BallRelease
    RandomSoundBallRelease swTrough1
    swPlungerRest_Hit
    swPlungerRest_UnHit
  end if
End Sub

' Add extra balls to the table with autoplunger
' Use it as AddMultiball 4 to add 4 extra balls to the table

Sub AddMultiball(nballs)
    mBalls2Eject = mBalls2Eject + nballs
    CreateMultiballTimer.Enabled = True
End Sub
Sub AddMultiballFast(nballs)
  if CreateMultiballTimer.Enabled = False then
    CreateMultiballTimer.Interval = 100   ' shortcut the first time through
  End If
   AddMultiball(nballs)
End Sub

' Eject the ball after the delay, AddMultiballDelay
Sub CreateMultiballTimer_Timer()
    ' wait if there is a ball in the plunger lane
  CreateMultiballTimer.Interval = 2000
    If bBallInPlungerLane Then
        Exit Sub
    Else
        If BallsOnPlayfield < MaxMultiballs Then
            CreateNewBall()
            mBalls2Eject = mBalls2Eject -1
            If mBalls2Eject = 0 Then 'if there are no more balls to eject then stop the timer
                Me.Enabled = False
            End If
        Else 'the max number of multiballs is reached, so stop the timer
            mBalls2Eject = 0
            Me.Enabled = False
        End If
    End If
End Sub


Sub ResetForNewPlayerBall(bLock)      ' Every time a new ball is given these get reset
  'This is a new ball, so activate the ballsaver
    bBallSaverReady = True

  if bLock=False then       ' Resetting during a ball lock doesnt reset the BumperLevel
    BumperLevel=0
    BumperHits=25
    bAddABallGiven=False

    lBat1.state =0
    lBat2.state =0
    lBat3.state =0
    lbat4.state =0
    lMystery.state = 0
  else
    SternButtonFlash "white", True
  End if

  ScoreSave(0)=""
  ScoreSave(1)=""
  ScoreSave(2)=""
  ScoreSave(3)=""
  puPlayer.LabelSet pBackglass,"Player",  "Player " & CurrentPlayer+1 ,1,""
  puPlayer.LabelSet pBackglass,"Ball",  "BALL " & Balls  & "    " ,1,""

'WriteToLog "     ", "Reset Skillshot"
  bSkillshotsReady(0) = True    ' Shooter Lane
  bSkillshotsReady(1) = True    ' Penguin
  bSkillshotsReady(2) = False   ' Hold Left, Loop around and hit Orb, Right Ramp or Right Orbit
  bSuperSkillShotReady1=False
  Gate002.Open = False

End Sub

sub ResetBallSearch()
  if kBallSearchEnabled=False then Exit Sub
  if BallSearchResetting then Exit Sub  ' We are resetting jsut exit for now
  'WriteToLog "     ", "Ball Search Reset"
  tmrBallSearch.Enabled = False ' Reset Ball Search
  BallSearchCnt=0
  tmrBallSearch.Enabled = True
End Sub
dim BallSearchResetting:BallSearchResetting=False

Sub tmrBallSearch_Timer() ' We timed out
  dim Ball
  Dim BallStr
  Dim NumBallsHere:NumBallsHere=0

  ' See if we are in mode select, a flipper is up that might be holding the ball or a ball is in the lane

  ''WriteToLog "     ", "Ball Search"

  'tmrPauseTimers.Enabled = False and _     ' Not sure we want this one in the check in case the timers get disabled and a ball gets stuck

  if bGameInPlay and bSceneCollect = False and _
    hsbModeActive = False and hsbModeActive2=False and _
    tmrBonus.Enabled = False and _
    bBallInPlungerLane = False and _
    tmrPauseTimers.Enabled = False and _
    bMVWSelect=False and _
    bMVSelect=False and _
    VPXMP.IsMyTurn and _
    LFPress <> 1 and _
    RFPress <> 1 and _
    LeftFlipper.CurrentAngle <> LeftFlipper.EndAngle and _
    RightFlipper.CurrentAngle <> RightFlipper.EndAngle Then

    'WriteToLog "     ", "Ball Search - NO ACTIVITY " & BallSearchCnt
    'WriteToLog "     ", "--- listing balls ---"
    For each Ball in gBOT
      if Ball.radius > 23 then
        NumBallsHere=NumBallsHere+1
        BallStr = "(x:" & Ball.x & " y:" & Ball.y & " z:" & Ball.z & ")"
        'WriteToLog "     ", "Ball (" & NumBallsHere & "):" & BallStr
      End if
    Next
    'WriteToLog "     ", "--- listing balls ---"

    PauseTimersForce 8000
    if BallSearchCnt >= 3 Then


' TBD Might want to implement this
'     BallsOnPlayfield = 0
'     for each Ball in GetBalls
'       Ball.DestroyBall
'     Next

      BallSearchCnt = 0
      if BallsOnPlayfield > 0 then  ' somehow we might have drained and didnt catch it??
        BallsOnPlayfield = BallsOnPlayfield - 1  ' We cant find the ball (remove one)
      End if
      AddMultiball 1

      ' Do Pup Animation
      PuPlayer.LabelShowPage pOverVid, 1,0,""
      PuPlayer.PlayStop pOverVid
      PuPlayer.playlistplayex pOverVid,"PupVideos","blank.mp4", 1, 1
      PuPlayer.playlistplayex pOverVid, "PuPOverlays" ,"tv.png",  1, 1
      PuPlayer.LabelSet pOverVid, "Splash2", "       LOCATING PINBALLS", 1, "{'mt':2,'size':7.5, 'xalign':0, 'ypos':45}"
      PuPlayer.LabelSet pOverVid, "Splash3", "             FAILED... "  , 1, "{'mt':2,'size':7.5, 'xalign':0, 'ypos':55}"
      vpmtimer.addtimer 3000, "BallSearchClear '"
      Exit sub
    End if

    ' Do Pup Animation
    PuPlayer.LabelShowPage pOverVid, 1,0,""
    PuPlayer.PlayStop pOverVid
    PuPlayer.playlistplayex pOverVid,"PupVideos","blank.mp4", 1, 1
    PuPlayer.playlistplayex pOverVid, "PuPOverlays" ,"tv.png",  1, 1
    PuPlayer.LabelSet pOverVid, "Splash1", BallStr, 1, "{'mt':2,'size':3, 'xalign':1, 'ypos':65}"
    PuPlayer.LabelSet pOverVid, "Splash2", "       LOCATING PINBALLS", 1, "{'mt':2,'size':7.5, 'xalign':0, 'ypos':45}"
    PuPlayer.LabelSet pOverVid, "Splash3", "            PLEASE WAIT... "  , 1, "{'mt':2,'size':7.5, 'xalign':0, 'ypos':55}"

    if BallSearchCnt = 2 and NumBallsHere=1 then  ' go ahead and move it
      PuPlayer.LabelSet pOverVid, "Splash2", "        LOCATING FAILED ", 1, "{'mt':2,'size':7.5, 'xalign':0, 'ypos':45}"
      PuPlayer.LabelSet pOverVid, "Splash3", "      CALLING OPERATOR. " , 1, "{'mt':2,'size':7.5, 'xalign':0, 'ypos':55}"

      For each Ball in gBOT
        if Ball.radius > 23 then
          Ball.x = 750
          Ball.y = 1000
          Ball.z = 25
        End if
      Next
    End if

    ' End Pup animation

    BallSearchResetting=True
    BallSearchCnt = BallSearchCnt + 1
    DisplayDMDText "BALL SEARCH","", 1000

    if CurMechPos=kTT_Batcave then
      TurnTable_Goto kTT_Phone2
      vpmtimer.addtimer 2000, "TurnTable_Goto kTT_Batcave '"
    elseif CurMechPos=kTT_Phone then
      TurnTable_Goto kTT_TV
      vpmtimer.addtimer 2000, "TurnTable_Goto kTT_Phone '"
    elseif CurMechPos=kTT_TV then
      TurnTable_Goto kTT_Phone
      vpmtimer.addtimer 2000, "TurnTable_Goto kTT_TV '"
    end if
    KickerPengKick True
    Kicker001Kick True
    vpmtimer.addtimer 3000, "BallSearchClear '"
  Else
    ResetBallSearch
  End if
End Sub

Sub BallSearchClear()
  PuPlayer.LabelSet pOverVid, "Splash1", "", 1, "{'mt':2,'size':7.5, 'xalign':0, 'ypos':50}"
  PuPlayer.LabelSet pOverVid, "Splash2", "", 1, "{'mt':2,'size':7.5, 'xalign':0, 'ypos':45}"
  PuPlayer.LabelSet pOverVid, "Splash3", "" , 1, "{'mt':2,'size':7.5, 'xalign':0, 'ypos':55}"
  PuPlayer.playlistplayex pOverVid, "PuPOverlays" ,"clear.png",  1, 1
  PuPlayer.PlayStop pOverVid
  BallSearchResetting = False
End Sub


Sub EndOfBall()
    Dim AwardPoints, TotalBonus, ii
    AwardPoints = 0
    TotalBonus = 0
  SpinnerBaseValue=30
  PlayerState(CurrentPlayer).TakeJackpot=750000

    ' the first ball has been lost. From this point on no new players can join in
    bOnTheFirstBall = False
  GadgetCancel        ' Cancel Gadget Belt if it was showing

  for ii = 0 to kMAX_MODES  ' during debug you can overflow timers and these can get lost so reset to make testing easier
    bDebounce(ii)=False
    bDebounceLight(ii)=""
  Next

  CommissGXReset        ' Reset the comissionar gordon shots

  ResetTurnTableDrain
' if PlayerMode <> -1 Then      ' Pause the countdown timer
'   ModeCountdownTimer.Enabled = False
' End If

    ' only process any of this if the table is not tilted.  (the tilt recovery
    ' mechanism will handle any extra balls or end of game)

    If(Tilted = False)Then

        ' Count the bonus. This table uses several bonus
    'PuPlayer.LabelShowPage pBonusScreen,1,0,"":PuPlayer.LabelShowPage pBackglass, 2,0,""

        ' add a bit of a delay to allow for the bonus points to be shown & added up
'   tmrEndOfBallBonus.Interval = 800
'   tmrEndOfBallBonus.UserValue = 0   ' Timer will start EndOfBall2 when it is done
'   tmrEndOfBallBonus.Enabled = true
    playclear pMusic
    BonusScene
    Else
        vpmtimer.addtimer 100, "EndOfBall2 '"
    End If
End Sub


' The Timer which delays the machine to allow any bonus points to be added up
' has expired.  Check to see if there are any extra balls for this player.
' if not, then check to see if this was the last ball (of the currentplayer)
'
Sub EndOfBall2()
  dim i
  dim thisMode
    ' if were tilted, reset the internal tilted flag (this will also
    ' set TiltWarnings back to zero) which is useful if we are changing player LOL
    Tilted = False
    Tilt = 0

  ' Reset Just in case
  BallsOutlaneDrainCnt=0
  BallsOutlaneDrainIgnoreCnt=0

  PlayMultiplier = 1
  PlayMultiplierCnt=0
  bPlayMultiplierScene=False
    DisableTable False 'enable again bumpers and slingshots

  if PlayerState(CurrentPlayer).bHoldBonus=False then
    for i = 0 to 8  ' Clear Bonus counters
      BonusModeHits(i)=0
  '   BonusModeValue(i) = 0   ' We dont do this until they finish the mode ???
  '   BonusModeTotal(i)=0
    next
  End if
  PlayerState(CurrentPlayer).bHoldBonus=False

  if PlayerState(CurrentPlayer).isAwardActive(kMinV_S1Bookworm)=False then    ' Reset all the Minor Vilian powers unless we have bookworm
    For i = kMinV_S1MadHatter to kMinV_S3KingTut2
      PlayerState(CurrentPlayer).Villains(i).bAwardActive=False
    Next
    TUTMultiplier=1
    BonusModeTotal(kBonusEgg)=0     ' Clear egghead bonus
  End if

    ' has the player won an extra-ball ? (might be multiple outstanding)
    If(ExtraBallsAwards(CurrentPlayer) <> 0) and bBallInPlungerLane=False Then  ' Save Extra ball for later if there is a ball in the plunger lane
        'WriteToLog "     ", "Extra Ball"

        ' yep got to give it to them
        ExtraBallsAwards(CurrentPlayer) = ExtraBallsAwards(CurrentPlayer)- 1

        ' if no more EB's then turn off any shoot again light
        If(ExtraBallsAwards(CurrentPlayer) = 0)Then
            LightBallSave.State = 0
        End If
    PlaySoundVol "b66-shoot-again", VolDef
    ResetForNewPlayerBall False

        ' You may wish to do a bit of a song AND dance at this point
        'DMD "_", CL(1, ("EXTRA BALL")), "_", eNone, eBlink, eNone, 1000, True, "vo_extraball"
'   if INT(RND * 2) = 0 then
'     pDMDEvent(kDMD_ExtraBall)
'   Else
'     pDMDEvent(kDMD_ShootAgain)
'   End If

        ' Create a new ball in the shooters lane
        CreateNewBall()
    Else ' no extra balls

        BallsRemaining(CurrentPlayer) = BallsRemaining(CurrentPlayer)- 1

        ' was that the last ball ?
        If(BallsRemaining(CurrentPlayer) <= 0) and CurrentPlayer=PlayersPlayingGame-1 Then        ' GAME OVER and last player
            'WriteToLog "     ", "No More Balls, High Score Entry"
      PuPlayer.PlayStop pOverVid            ' Stop overlay if there is one
      PuPlayer.SetLoop pOverVid, 0
      playclear pMusic
      'StopSound "m_wait"
'WriteToLog "     ", "Stopping sound m_wait"

      ' Turn off DOF so we dont accidently leave it on
'     PlaySoundAt SoundFXDOF("Flipper_Left_Down_1", 101, DOFOff, DOFFlippers), LeftFlipper
'     PlaySoundAt SoundFXDOF("Flipper_Right_Down_1", 102, DOFOff, DOFFlippers), RightFlipper
      DOF 101, DOFOff
      DOF 102, DOFOff
      LeftFlipper.RotateToStart
      RightFlipper.RotateToStart

      ' This will reset and release any locked balls
      if CurMechPos=kTT_TV then
        EmptyBallLock
      Else
        TurnTable_Goto(kTT_TV)
      End if

            ' Submit the currentplayers score to the High Score system
      PuPlayer.LabelShowPage pMVideo, 4, 0,""   ' Show Blank Page so it doesnt overlap
      bGameInPlay=False
            CheckHighScore(True)
      ' you may wish to play some music at this point
        Else
            ' not the last ball (for that player)
            ' if multiple players are playing then move onto the next one
            EndOfBallComplete()
        End If
    End If
End Sub

' This function is called when the end of bonus display
' (or high score entry finished) AND it either end the game or
' move onto the next player (or the next ball of the same player)
'all of the same player)
'
Sub EndOfBallComplete()
    Dim NextPlayer
  dim Match

    'WriteToLog "     ", "EndOfBall - Complete"

    ' are there multiple players playing this game ?
    If(PlayersPlayingGame > 1)Then
        ' then move to the next player
        NextPlayer = CurrentPlayer + 1
        ' are we going from the last player back to the first
        ' (ie say from player 4 back to player 1)
        If(NextPlayer > PlayersPlayingGame-1)Then
            NextPlayer = 0
        End If
    Else
        NextPlayer = CurrentPlayer
    End If

    'WriteToLog "     ", "Next Player = " & NextPlayer

    ' is it the end of the game ? (all balls been lost for all players)
    If((BallsRemaining(CurrentPlayer) <= 0)AND(BallsRemaining(NextPlayer) <= 0))Then
        ' you may wish to do some sort of Point Match free game award here
        ' generally only done when not in free play mode
'WriteToLog "     ", "GameOver Match"
    'DisplayDMDText2 "_", "GAME OVER", 20000, 5, 0
    bGameInPLay = False                 ' EndOfGame sets this but need to set early to disable flippers
    bShowMatch = True

    ' Do Match end score code
    Match=10 * INT(RND * 9)
    if RND<(DMDStd(kDMDStd_MatchPCT)/100.0) then Match = Score(CurrentPlayer) mod 100   ' Force Match based on Percent Setup
'Match = Score(CurrentPlayer) mod 100
'WriteToLog "     ", "MATCH IS ---->" & Match & " " & Right(Score(CurrentPlayer),2)
    vpmtimer.addtimer 4700, "PlayYouMatched """&Match&""" '"

    pDMDMulti2 pMVideo      ' Switch to the pMVideo - THIS ALSO RESET END OF GAME
    PlayYouMatchedStart

    vpmtimer.addtimer 8100, "if bShowMatch then EndOfGame() '"

    ' you may wish to put a Game Over message on the desktop/backglass

    Else
        ' set the next player
    PlayerState(CurrentPlayer).bFirstBall = False
    PlayerState(CurrentPlayer).Save
        CurrentPlayer = NextPlayer
    UpdateNumberPlayers       ' Update the Score Sizes
    VPXMP.NextPlayer
        ' make sure the correct display is up to date
        AddScore 0

        ' reset the playfield for the new player (or new ball)
        ResetForNewPlayerBall(False)

    PlayerState(CurrentPlayer).Restore

        ' AND create a new ball
    if tmrTurntable.Enabled then            ' Give the turntable time to set up
      vpmtimer.addtimer 3000, "StartNextPlayer '"
    else
      StartNextPlayer
    End if

    End If
End Sub

Sub StartNextPlayer()
  CreateNewBall()
  tmrCallouts.Interval = 10000
  tmrCallouts.UserValue = "b66-player"&CurrentPlayer+1&"-your-up"
  tmrCallouts.Enabled = True

  ' play a sound if more than 1 player
  If PlayersPlayingGame > 1 Then
    PlaySoundVol "b66-player" &CurrentPlayer+1, VolDef
    'DMD "", CL(1, "PLAYER " &CurrentPlayer+1), "", eNone, eNone, eNone, 800, True, ""
  End If

  if PlayerState(CurrentPlayer).bFirstBall then
    vpmtimer.AddTimer 1500, "PlaySoundVol ""b66-start" & INT(RND*13)+1 & """, VolDef '"
  End if

End Sub

Sub tmrCallouts_Timer()
  dim size:size=6
  pDMDCurPage=0       ' Disable score updates
  puPlayer.LabelSet pBackglass,"Play" & CurrentPlayer+1 & "score","",1,"" ' Blank Score
  select case PlayersPlayingGame
    case 1:
      puPlayer.LabelSet pBackglass,"CurScore1","",1,""
      puPlayer.LabelSet pBackglass,"PlayCallout", "  Player "&CurrentPlayer+1&"~You're Up", 1,"{'mt':2,'color':1884522, 'xpos':50, 'ztop':1, 'size':"&size&"}"
    case 2:
      size=5
      puPlayer.LabelSet pBackglass,"PlayCallout", "  Player "&CurrentPlayer+1&"~You're Up", 1,"{'mt':2,'color':1884522, 'xpos':" & 25 + (CurrentPlayer*50) & ", 'ztop':1, 'size':"&size&"}"
    case 3:
      size=4
      puPlayer.LabelSet pBackglass,"PlayCallout", "  Player "&CurrentPlayer+1&"~You're Up", 1,"{'mt':2,'color':1884522, 'xpos':" & 16.6 + (CurrentPlayer*33.4) & ", 'ztop':1, 'size':"&size&"}"
    case 4:
      size=3
      puPlayer.LabelSet pBackglass,"PlayCallout", "  Player "&CurrentPlayer+1&"~You're Up", 1,"{'mt':2,'color':1884522, 'xpos':" & 12.5 + (CurrentPlayer*25) & ", 'ztop':1, 'size':"&size&"}"
  End Select
  VpmTimer.AddTimer 1500, "tmrCalloutClear '"

  PlaySoundVol tmrCallouts.UserValue, VolDef
  tmrCallouts.Enabled = False
End Sub

Sub tmrCalloutClear
  pDMDCurPage=pScores  ' Enable Score Updates
  if PlayersPlayingGame=1 then
    puPlayer.LabelSet pBackglass,"CurScore1", Score(0),1,""
  else
    puPlayer.LabelSet pBackglass,"Play" & CurrentPlayer+1 & "score", Score(CurrentPlayer),1,""
  End if

  puPlayer.LabelSet pBackglass,"PlayCallout", "", 1,""
End Sub


Sub EndOfGame()
    WriteToLog "     ", "End Of Game: " & bFirstPlay
  VPXMP.GameOver
  bGameInPLay = False
  bShowMatch = False
  tmrCallouts.Enabled = False
  tmrBallSearch.Enabled = False
  PuPlayer.LabelShowPage pOverVid, 1, 0,""
  PuPlayer.LabelShowPage pMVideo, 1, 0,""

  SetLightColor lBatSignal, "", 0     ' Clear lights
  SetLightFlasher flshBatSignal, 0    ' Clear this

  ' Turn off Flasher
  bFlash1Enabled = False
  DOF 128, DOFOff 'Beacon Off

  SolLFlipper 0
    SolRFlipper 0
  LFPress=0
  RFPress=0

  Scorbit.StopSession Score(0), Score(1), Score(2), Score(3), PlayersPlayingGame

  ' Reset the Instant info if it is left on
  InstantInfoTimer.Enabled = False
  bInstantInfo=False
  puPlayer.LabelSet pBackglass,"InstantInfoBG", "PuPOverlays\\clear.png" ,1,"{'mt':2,'color':111111, 'width':73, 'height':67,'yalign':0,'xalign':0,'ypos':16,'xpos':13}"
  puPlayer.LabelSet pBackglass,"InstantInfoL1", "", 1, ""
  puPlayer.LabelSet pBackglass,"InstantInfoL2", "", 1, ""
  puPlayer.LabelSet pBackglass,"InstantInfoL3", "", 1, ""

  GadgetsStop                                     ' Stop gadget flash if it is going
  SetLightColor lExtraBall, "", 0                         ' Turn off Extra Ball so quick restart works correctly

' Debug/Test Code
' EnableCrimeAnaPulse True
' EnableBatCompPulse True
' TurnTable_Goto(kTT_Batcave)

  if bResetCurrentGame then       ' Match sequence usually does this but if we ingame reset then call it
    if CurMechPos=kTT_TV then
      EmptyBallLock
    Else
      TurnTable_Goto(kTT_TV)                                ' This will reset and release any locked balls
    End if
  End if
  ClearAllText pMVideo
  ClearAllText pLVideo
  ClearAllText pRVideo
  ClearAllText pLVideo2

  PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"batsignal1.png",  1, 1      ' Reset background
  StopCrane                                     ' Put crane back

  StopSound "sfx-bat-phone1"                              ' Clear BatPhone
  lBatPhone.TimerEnabled = False
  SetLightColor lBatPhone, kBatPhoneColor, 0

  if bFirstPlay = False then
    playmedia "m_end.mp3", "Topper", pMusic, "", 37842, "", 1, 1
    DOF_BM_Song = -1: DOF_Batman_Song_Timer 'DOF - Batman Song
  End if
  GiOff

  pDMDGameOver
End Sub


Sub PlayYouMatchedStart() ' Start animations and put scores up
  Dim i
  Dim j
  Dim ScoreLen
  Dim ScoreStr
  Dim digit
  dim xPos
  dim yPos
' Debug
'PlayersPlayingGame=4
'Score(0)=12345
'Score(1)=123456
'Score(2)=1234567
'Score(3)=98712345678

  ' Set the, all to gray
  puPlayer.LabelSet pOverVid,"MatchI0", "PuPOverlays\\match-O.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':2.5,'yalign':1,'xalign':1,'ypos':51,'xpos':44.7}"
  puPlayer.LabelSet pOverVid,"MatchI1", "PuPOverlays\\match-O.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':2.5,'yalign':1,'xalign':1,'ypos':51,'xpos':55.3}"
  puPlayer.LabelSet pOverVid,"MatchI2", "PuPOverlays\\match-O.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':2.5,'yalign':1,'xalign':1,'ypos':58,'xpos':44.7}"
  puPlayer.LabelSet pOverVid,"MatchI3", "PuPOverlays\\match-O.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':2.5,'yalign':1,'xalign':1,'ypos':58,'xpos':55.3}"


  PuPlayer.LabelShowPage pOverVid, 2, 0,""
  QueueFlushS pMVideo
  QueueSceneS pMVideo, "playmedia ""Match.mp4"", ""PupVideos"", pOverVid, """", 8033, """", 1, 1 ", 8033, 1
  QueueSceneS pMVideo, "puPlayer.LabelSet pOverVid,""Match1"", ""PuPOverlays\\clear.png"", 1,"""" ", -1, 1

  ' Clear all
  For i = 0 to 3
    For j = 0 to 13
      puPlayer.LabelSet pOverVid,"MatchS"&i&j, "PuPOverlays\\clear.png", 1,""
    Next
  Next

  ' Put Images for each Players Score om the board
  for i = 0 to PlayersPlayingGame-1
    ScoreStr = FormatScore(Score(i))
    if Len(ScoreStr)>13 then ScoreStr=Mid(ScoreStr, 1, 13)    ' Truncate to 13 chars so we dont overflow the display
    ScoreLen = Len(ScoreStr)
    select case i
      case 0:
        xPos=36
        yPos=40.4
      case 1:
        xPos=90.5
        yPos=40.4
      case 2:
        xPos=36
        yPos=59
      case 3
        xPos=90.5
        yPos=59
    End Select
    'Loop this players score
    j = 0
    while j < ScoreLen
      digit=Right(ScoreStr,1)
      if digit="," then ' handle comma
        xPos=xPos+1.5
        puPlayer.LabelSet pOverVid,"MatchS"&i&j, "PuPOverlays\\matchC.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':9.2,'yalign':0,'xalign':0,'ypos':"&yPos&",'xpos':"&xPos&"}"
        xPos=xPos-3
      else
''WriteToLog "     ", "Score:" & ScoreStr & " MatchS"&i&"-"&ScoreLen-j & ">PuPOverlays\\match"&digit&".png<" & " pos:" & xPos & "," & yPos
        puPlayer.LabelSet pOverVid,"MatchS"&i&j, "PuPOverlays\\match"&digit&".png", 1,"{'mt':2,'color':111111,'width':3, 'height':9.2,'yalign':0,'xalign':0,'ypos':"&yPos&",'xpos':"&xPos&"}"
        xPos=xPos-3
      End if
      if ScoreStr<> "" then ScoreStr=mid(ScoreStr, 1 , Len(ScoreStr)-1)
      j=j+1
    Wend
'   ' Blank others
    while j < 13
      puPlayer.LabelSet pOverVid,"MatchS"&i&j, "PuPOverlays\\clear.png", 1,"{'mt':2,'color':111111,'width':3, 'height':9.2,'yalign':0,'xalign':0,'ypos':"&yPos&",'xpos':"&xPos&"}"
      j=j+1
    Wend
  Next

End Sub

Sub PlayYouMatched(idx)     ' Draws the dots and plays the sound
  Dim bMatched:bMatched=False
  Dim MatchDigit
  MatchDigit = Left(idx&"",1)

  puPlayer.LabelSet pOverVid,"Match1", "PuPOverlays\\match"&MatchDigit&".png", 1,"{'mt':2,'color':111111,'width':3, 'height':9.2,'yalign':1,'xalign':1,'ypos':54.5,'xpos':48.4}"

  ' Set the, all to gray
  puPlayer.LabelSet pOverVid,"MatchI0", "PuPOverlays\\match-O.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':2.5,'yalign':1,'xalign':1,'ypos':51,'xpos':44.7}"
  puPlayer.LabelSet pOverVid,"MatchI1", "PuPOverlays\\match-O.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':2.5,'yalign':1,'xalign':1,'ypos':51,'xpos':55.3}"
  puPlayer.LabelSet pOverVid,"MatchI2", "PuPOverlays\\match-O.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':2.5,'yalign':1,'xalign':1,'ypos':58,'xpos':44.7}"
  puPlayer.LabelSet pOverVid,"MatchI3", "PuPOverlays\\match-O.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':2.5,'yalign':1,'xalign':1,'ypos':58,'xpos':55.3}"

  ' For current players see who matched
  if PlayersPlayingGame>=1 then
    if Right(Score(0),2) = idx then
      bMatched=True
      puPlayer.LabelSet pOverVid,"MatchI0", "PuPOverlays\\match-G.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':2.5,'yalign':1,'xalign':1,'ypos':51,'xpos':44.7}"
    Else
      puPlayer.LabelSet pOverVid,"MatchI0", "PuPOverlays\\match-R.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':2.5,'yalign':1,'xalign':1,'ypos':51,'xpos':44.7}"
    End if
  End if
  if PlayersPlayingGame>=2 then
    if Right(Score(1),2) = idx then
      bMatched=True
      puPlayer.LabelSet pOverVid,"MatchI1", "PuPOverlays\\match-G.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':2.5,'yalign':1,'xalign':1,'ypos':51,'xpos':55.3}"
    Else
      puPlayer.LabelSet pOverVid,"MatchI1", "PuPOverlays\\match-R.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':2.5,'yalign':1,'xalign':1,'ypos':51,'xpos':55.3}"
    End if
  End if
  if PlayersPlayingGame>=3 then
    if Right(Score(2),2) = idx then
      bMatched=True
      puPlayer.LabelSet pOverVid,"MatchI2", "PuPOverlays\\match-G.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':2.5,'yalign':1,'xalign':1,'ypos':58,'xpos':44.7}"
    Else
      puPlayer.LabelSet pOverVid,"MatchI2", "PuPOverlays\\match-R.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':2.5,'yalign':1,'xalign':1,'ypos':58,'xpos':44.7}"
    End if
  End if
  if PlayersPlayingGame>=4 then
    if Right(Score(3),2) = idx then
      bMatched=True
      puPlayer.LabelSet pOverVid,"MatchI3", "PuPOverlays\\match-G.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':2.5,'yalign':1,'xalign':1,'ypos':58,'xpos':55.3}"
    Else
      puPlayer.LabelSet pOverVid,"MatchI3", "PuPOverlays\\match-R.png", 1,"{'mt':2,'color':111111,'width':1.5, 'height':2.5,'yalign':1,'xalign':1,'ypos':58,'xpos':55.3}"
    End if
  End if

  if bMatched then
    PlaySoundVol "sfx-match1", VolSfx
    PlaySoundVol "YouMatchedPlayAgain", VolDef
    'vpmTimer.AddTimer 500, "PlaySoundVol ""sfx-knock"", VolSfx*2 '"
    vpmTimer.AddTimer 500, "PlaySoundAtVol SoundFXDOF(""sfx-knock"", 122, DOFPulse, DOFKnocker), Bumper002, VolSfx*2 '"

    Credits=Credits+1
    DOF 140, DOFOn
    DisplayDMDText "CREDITS: " & Credits, "", 500
  else
    PlaySoundVol "sfx-match0", VolSfx
  End if


  'DMD "_", CL(1, "CREDITS: " & Credits), "", eNone, eNone, eNone, 500, True, "fx_coin"
End Sub

dim bAltEnabled:bAltEnabled=False
Dim AltIndex:AltIndex=0
dim AltLightState:AltLightState=-1
Sub SelectAlternates(bIsLeft, bPressed)
  Dim videoStr
  Dim msgs
  Dim Messages
  Dim S2:S2=12
  Dim S3:S3=7

  if bVMajSeasonSelectReady=False then Exit Sub                   ' Wait until Intro is done
  if PlayerState(CurrentPlayer).bMajQual then exit sub              ' Cant have Maj Active
  if PlayerState(CurrentPlayer).bMinorActive then exit sub            ' Cant have minor active

' If PlayerState(CurrentPlayer).bFirstLaunch = False then exit sub        ' We already launched the first ball
' if bBallInPlungerLane and PlayerState(CurrentPlayer).bFirstBall then

  if bBallInPlungerLane then
    if bPressed and RFPress then
'WriteToLog "     ", "SelectAlternates:" & AltIndex
      Select Case AltIndex
        case kMajV_CatWoman:
          if LFPress and PlayerState(CurrentPlayer).SeasonIdx(kMajV_CatWoman)=kMajV_S1CatWoman and AltLightState<>-1 then
            PlayerState(CurrentPlayer).SeasonIdx(kMajV_CatWoman)=kMajV_S2CatWoman
            PlayerState(CurrentPlayer).setActive(kMajV_S1CatWoman)=False
            PlayerState(CurrentPlayer).setActive(kMajV_S2CatWoman)=True
            PlayerState(CurrentPlayer).setEnabled(kMajV_S1CatWoman)=False
            PlayerState(CurrentPlayer).setEnabled(kMajV_S2CatWoman)=True

          Elseif LFPress and AltLightState<>-1 then
            PlayerState(CurrentPlayer).SeasonIdx(kMajV_CatWoman)=kMajV_S1CatWoman
            PlayerState(CurrentPlayer).setActive(kMajV_S1CatWoman)=True
            PlayerState(CurrentPlayer).setActive(kMajV_S2CatWoman)=False
            PlayerState(CurrentPlayer).setEnabled(kMajV_S1CatWoman)=True
            PlayerState(CurrentPlayer).setEnabled(kMajV_S2CatWoman)=False
          elseif AltLightState=-1 then
            AltLightState=lCatwoman.state
            SetSlowPulse2(lCatwoman)
            lCatwoman.state = 2
          End if
          Messages="^The^Purr-fect^Crime^(4 PARTS)"
          videoStr="S_catwoman"
          if PlayerState(CurrentPlayer).SeasonIdx(kMajV_CatWoman)=kMajV_S2CatWoman then
            videoStr=videoStr&"2"
            Messages="^Catwoman's^Dressed^To Kill^(3 PARTS)"
          End If

        case kMajV_Joker:
          if LFPress and  PlayerState(CurrentPlayer).SeasonIdx(kMajV_Joker)=kMajV_S1Joker and AltLightState<>-1 then
            PlayerState(CurrentPlayer).SeasonIdx(kMajV_Joker)=kMajV_S2Joker
            PlayerState(CurrentPlayer).setActive(kMajV_S1Joker)=False
            PlayerState(CurrentPlayer).setActive(kMajV_S2Joker)=True
            PlayerState(CurrentPlayer).setEnabled(kMajV_S1Joker)=False
            PlayerState(CurrentPlayer).setEnabled(kMajV_S2Joker)=True

          Elseif LFPress and AltLightState<>-1 then
            PlayerState(CurrentPlayer).SeasonIdx(kMajV_Joker)=kMajV_S1Joker
            PlayerState(CurrentPlayer).setActive(kMajV_S1Joker)=True
            PlayerState(CurrentPlayer).setActive(kMajV_S2Joker)=False
            PlayerState(CurrentPlayer).setEnabled(kMajV_S1Joker)=True
            PlayerState(CurrentPlayer).setEnabled(kMajV_S1Joker)=False
          elseif AltLightState=-1 then
            AltLightState=lJoker.state
            SetSlowPulse2(lJoker)
            lJoker.state = 2

          End if
          Messages="^The Joker^Is Wild^(3 PARTS)^"
          S2=7
          videoStr="S_joker"
          if PlayerState(CurrentPlayer).SeasonIdx(kMajV_Joker)=kMajV_S2Joker then
            videoStr=videoStr&"2"
            Messages="^Surfs Up!^Joker's^Under!^(2 Parts)"
            S2=12
          End If
        case kMajV_Peng:
          if LFPress and  PlayerState(CurrentPlayer).SeasonIdx(kMajV_Peng)=kMajV_S1Peng and AltLightState<>-1 then
            PlayerState(CurrentPlayer).SeasonIdx(kMajV_Peng)=kMajV_S2Peng
            PlayerState(CurrentPlayer).setActive(kMajV_S1Peng)=False
            PlayerState(CurrentPlayer).setActive(kMajV_S2Peng)=True
            PlayerState(CurrentPlayer).setEnabled(kMajV_S1Peng)=False
            PlayerState(CurrentPlayer).setEnabled(kMajV_S2Peng)=True

          Elseif LFPress and AltLightState<>-1 then
            PlayerState(CurrentPlayer).SeasonIdx(kMajV_Peng)=kMajV_S1Peng
            PlayerState(CurrentPlayer).setActive(kMajV_S1Peng)=True
            PlayerState(CurrentPlayer).setActive(kMajV_S2Peng)=False
            PlayerState(CurrentPlayer).setEnabled(kMajV_S1Peng)=True
            PlayerState(CurrentPlayer).setEnabled(kMajV_S2Peng)=False
          elseif AltLightState=-1 then
            AltLightState=lPeng.state
            SetSlowPulse2(lPeng)
            lPeng.state = 2

          End if
          Messages="^Fine^Feathered^Finks^(4 PARTS)"
          videoStr="S_penguin"
          if PlayerState(CurrentPlayer).SeasonIdx(kMajV_Peng)=kMajV_S2Peng then
            videoStr=videoStr&"2"
            Messages="Enter^Batgirl,^Exit^Penguin^(3 PARTS)"
          End If
        case kMajV_Riddler:
          if LFPress and  PlayerState(CurrentPlayer).SeasonIdx(kMajV_Riddler)=kMajV_S1Riddler and AltLightState<>-1 then
            PlayerState(CurrentPlayer).SeasonIdx(kMajV_Riddler)=kMajV_S2Riddler
            PlayerState(CurrentPlayer).setActive(kMajV_S1Riddler)=False
            PlayerState(CurrentPlayer).setActive(kMajV_S2Riddler)=True
            PlayerState(CurrentPlayer).setEnabled(kMajV_S1Riddler)=False
            PlayerState(CurrentPlayer).setEnabled(kMajV_S2Riddler)=True
          Elseif LFPress and AltLightState<>-1 then
            PlayerState(CurrentPlayer).SeasonIdx(kMajV_Riddler)=kMajV_S1Riddler
            PlayerState(CurrentPlayer).setActive(kMajV_S1Riddler)=True
            PlayerState(CurrentPlayer).setActive(kMajV_S2Riddler)=False
            PlayerState(CurrentPlayer).setEnabled(kMajV_S1Riddler)=True
            PlayerState(CurrentPlayer).setEnabled(kMajV_S2Riddler)=False
          elseif AltLightState=-1 then
            AltLightState=lRiddler.state
            SetSlowPulse2(lRiddler)
            lRiddler.state = 2

          End if
          Messages="^Hi Diddle^Riddle^(3 PARTS)^"
          S2=7
          videoStr="S_riddler"
          if PlayerState(CurrentPlayer).SeasonIdx(kMajV_Riddler)=kMajV_S2Riddler then
            videoStr=videoStr&"2"
            Messages="^Ring Around^The Riddler^(2 PARTS)^"
          End If
      End Select

      msgs = Split(Messages, "^")
      PuPlayer.LabelSet pMVideo,"GeneralTop1",msgs(0),1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':12}"
      PuPlayer.LabelSet pMVideo,"GeneralTop3",msgs(1),1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':12}"
      PuPlayer.LabelSet pMVideo,"GeneralCenter3",msgs(2),1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'ypos':35,'size':12}"
      PuPlayer.LabelSet pMVideo,"GeneralCenter2",msgs(3), 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':"&S2&"}"
      PuPlayer.LabelSet pMVideo,"GeneralBottom1",msgs(4), 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':"&S3&"}"

      QueueFlushS pMVideo
      playmedia videoStr & ".mp4", "PuPVideos", pMVideo, "", -1, "", 0, 1
      PuPlayer.SetLoop pMVideo, 1

    Elseif bPressed=False and bIsLeft=False then

      Select Case AltIndex        ' Switch state back
        case kMajV_CatWoman:
          SetDefPulse(lCatwoman)
          lCatwoman.state = AltLightState
        case kMajV_Joker:
          SetDefPulse(lJoker)
          lJoker.state = AltLightState
        case kMajV_Peng:
          SetDefPulse(lPeng)
          lPeng.state = AltLightState
        case kMajV_Riddler:
          SetDefPulse(lRiddler)
          lRiddler.state = AltLightState
      End Select
      AltLightState=-1


      AltIndex=(AltIndex+1) Mod 4
      PuPlayer.SetLoop pMVideo, 0
      SceneGeneralWait pMVideo

      PuPlayer.LabelSet pMVideo,"GeneralTop1", "",0,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
      PuPlayer.LabelSet pMVideo,"GeneralTop2", "",0,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
      PuPlayer.LabelSet pMVideo,"GeneralTop3", "",0,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
      PuPlayer.LabelSet pMVideo,"GeneralCenter3", "",0,"{'mt':2,'color':"&RGB(247, 170, 51)&",'ypos':37,'size':6}"
      PuPlayer.LabelSet pMVideo,"GeneralCenter1", "", 0,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
      PuPlayer.LabelSet pMVideo,"GeneralCenter2", "", 0,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
      PuPlayer.LabelSet pMVideo,"GeneralBottom3", "", 0,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
      PuPlayer.LabelSet pMVideo,"GeneralBottom1", "", 0,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
      PuPlayer.LabelSet pMVideo,"GeneralBottom2", "", 0,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
    End if
  End If
End Sub

Sub SuperSkillshotEnable(bEnable)
'WriteToLog "     ", "SuperSkillshotEnable:" & bEnable
  if bEnable then
    ShowPopupLabel 4,"HOLD LEFT^FLIPPER^BUTTON AND^PRESS^LAUNCH TO^ACTIVATE^SUPER SKILL^SHOT", False, "Orange"
    if PlayerState(CurrentPlayer).bMajQual then
      SetLightColor lArrowRiddler1, "yellow", 2
      SetLightColor lArrowRiddler2, "yellow", 2
      SetLightColor lArrowCat1, "yellow", 2
      SetLightColor lArrowCat2, "yellow", 2
      SetLightColor lArrowJoker, "yellow", 2
      SetLightColor lArrowPenguin, "yellow", 2
    else
      SetLightColor lArrowRiddler1, "green", 2
      SetLightColor lArrowRiddler2, "green", 2
      SetLightColor lArrowCat1, "white", 2
      SetLightColor lArrowCat2, "white", 2
      SetLightColor lArrowJoker, "orange", 2
      SetLightColor lArrowPenguin, "purple", 2
    End if
  Else
    bSuperSkillShotReady1=False
    ShowPopupLabel 4, "", True, "Orange"
    PlayerState(CurrentPlayer).SSetLightColorRestore kLightRiddlerArrow1
    PlayerState(CurrentPlayer).SSetLightColorRestore kLightRiddlerArrow2
    PlayerState(CurrentPlayer).SSetLightColorRestore kLightPengArrow
    PlayerState(CurrentPlayer).SSetLightColorRestore kLightJokerArrow
    PlayerState(CurrentPlayer).SSetLightColorRestore kLightCatArrow1
    PlayerState(CurrentPlayer).SSetLightColorRestore kLightCatArrow2
  End If
End Sub


Sub UpdateNumberPlayers
  dim text1Size
  dim text2Size
  dim text3Size
  dim text4Size
  Dim i
  Dim ScoreTag(3)
  Dim ScoreHeight(3)
  Dim ScoreWidth(3)
  Dim Offset
  Dim Offset2

  for i = 0 to MaxPlayers-1
    ScoreSize(i)=18 - 0.9*Min(Len(Score(i) & ""),5)
    if PlayersPlayingGame>1 then ScoreSize(i)=ScoreSize(i)-(PlayersPlayingGame+.5)
    ScoreTag(i)="{'mt':2,'size':"& ScoreSize(i) &"}"
    if i<>CurrentPlayer then
      ScoreSize(i) = ScoreSize(i)-1
      Offset=0.9
      Offset2=0.9
    else
      Offset=1
      Offset2=1.1
    End if

    ' 0.54 Ratio
    if PlayersPlayingGame=2 then
      ScoreHeight(i)=27*Offset2
      ScoreWidth(i)=50*Offset
    elseif PlayersPlayingGame=2 then
      ScoreHeight(i)=24.84*Offset2
      ScoreWidth(i)=46*Offset
    elseif PlayersPlayingGame=3 then
      ScoreHeight(i)=18.9*Offset2
      ScoreWidth(i)=35*Offset
    elseif PlayersPlayingGame=4 then
      ScoreHeight(i)=14.58*Offset2
      ScoreWidth(i)=27*Offset
    End if
  Next

  if tmrPFM.Enabled then
    puPlayer.LabelSet pBackglass,"PFMOn",   "PuPOverlays\\PFML.png" ,1,"{'mt':2,'zback':1,'width':12.343, 'height':16.11,'yalign':1,'xalign':1,'ypos':78,'xpos':31}"
    if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MrFreeze) then
      puPlayer.LabelSet pBackglass,"PFMTime", "PuPOverlays\\PFMCF.png" ,1,"{'mt':2,'zback':1,'width': 6.87,  'height':12.22,'yalign':1,'xalign':1,'ypos':73,'xpos':50}"
    Else
      puPlayer.LabelSet pBackglass,"PFMTime", "PuPOverlays\\PFMC.png" ,1,"{'mt':2,'zback':1, 'width': 6.87,  'height':12.22,'yalign':1,'xalign':1,'ypos':73,'xpos':50}"
    End if
    If PlayMultiplier=2 then
      puPlayer.LabelSet pBackglass,"PFMX",    "PuPOverlays\\PFMR2.png" ,1,"{'mt':2,'zback':1,'width':12.343, 'height':16.11,'yalign':1,'xalign':1,'ypos':78,'xpos':69}"
    Else
      puPlayer.LabelSet pBackglass,"PFMX",    "PuPOverlays\\PFMR3.png" ,1,"{'mt':2,'zback':1,'width':12.343, 'height':16.11,'yalign':1,'xalign':1,'ypos':78,'xpos':69}"
    End if
  End if

'WriteToLog "     ", "UpdateNumberPlayers:" & PlayersPlayingGame
  Select case PlayersPlayingGame
    case 1:
      puPlayer.LabelSet pBackglass,"CurScore1",FormatScore(score(0)),1,ScoreTag(0)
      puPlayer.LabelSet pBackglass,"CurScoreImg", "PuPOverlays\\BatSymbolScore2.png",1,"{'mt':2,'color':111111,'width':50.93, 'height':28.33,'yalign':2,'xalign':1,'ypos':0,'xpos':0,'zback':1}"

      puPlayer.LabelSet pBackglass,"Play1score","",1,""
      puPlayer.LabelSet pBackglass,"Play2score","",1,""
      puPlayer.LabelSet pBackglass,"Play3score","",1,""
      puPlayer.LabelSet pBackglass,"Play4score","",1,""
      puPlayer.LabelSet pBackglass,"Play1scoreImg", "PuPOverlays\\clear.png",1,""
      puPlayer.LabelSet pBackglass,"Play2scoreImg", "PuPOverlays\\clear.png",1,""
      puPlayer.LabelSet pBackglass,"Play3scoreImg", "PuPOverlays\\clear.png",1,""
      puPlayer.LabelSet pBackglass,"Play4scoreImg", "PuPOverlays\\clear.png",1,""
    case 2:
      puPlayer.LabelSet pBackglass,"CurScore1","",1,""
      puPlayer.LabelSet pBackglass,"CurScoreImg", "PuPOverlays\\clear.png",1,""

      puPlayer.LabelSet pBackglass,"Play1scoreImg", "PuPOverlays\\BatSymbolScore2.png",1,"{'mt':2,'color':111111,'width':"&ScoreWidth(0)&", 'height':"&ScoreHeight(0)&",'yalign':2,'xalign':1,'ypos':0,'xpos':25,'zback':1}"
      puPlayer.LabelSet pBackglass,"Play2scoreImg", "PuPOverlays\\BatSymbolScore2.png",1,"{'mt':2,'color':111111,'width':"&ScoreWidth(1)&", 'height':"&ScoreHeight(1)&",'yalign':2,'xalign':1,'ypos':0,'xpos':75,'zback':1}"

      puPlayer.LabelSet pBackglass,"Play1score",FormatScore(score(0)),1,"{'mt':2,'size':  "&ScoreSize(0)&", 'ypos': 102, 'xpos': 25, 'xalign': 1}"
      puPlayer.LabelSet pBackglass,"Play2score",FormatScore(score(1)),1,"{'mt':2,'size':  "&ScoreSize(1)&", 'ypos': 102, 'xpos': 75, 'xalign': 1}"
      puPlayer.LabelSet pBackglass,"Play3score","",1,""
      puPlayer.LabelSet pBackglass,"Play4score","",1,""
    case 3:
      puPlayer.LabelSet pBackglass,"Play1scoreImg", "PuPOverlays\\BatSymbolScore2.png",1,"{'mt':2,'color':111111,'width':"&ScoreWidth(0)&", 'height':"&ScoreHeight(0)&",'yalign':2,'xalign':1,'ypos':0,'xpos':16.6,'zback':1}"
      puPlayer.LabelSet pBackglass,"Play2scoreImg", "PuPOverlays\\BatSymbolScore2.png",1,"{'mt':2,'color':111111,'width':"&ScoreWidth(1)&", 'height':"&ScoreHeight(1)&",'yalign':2,'xalign':1,'ypos':0,'xpos':50,'zback':1}"
      puPlayer.LabelSet pBackglass,"Play3scoreImg", "PuPOverlays\\BatSymbolScore2.png",1,"{'mt':2,'color':111111,'width':"&ScoreWidth(2)&", 'height':"&ScoreHeight(2)&",'yalign':2,'xalign':1,'ypos':0,'xpos':83.3,'zback':1}"

      puPlayer.LabelSet pBackglass,"CurScore","",1,""
      puPlayer.LabelSet pBackglass,"Play1score",FormatScore(score(0)),1,"{'mt':2,'size':  "&ScoreSize(0)&", 'ypos': 101, 'xpos': 16.6, 'xalign': 1}"
      puPlayer.LabelSet pBackglass,"Play2score",FormatScore(score(1)),1,"{'mt':2,'size':  "&ScoreSize(1)&", 'ypos': 101, 'xpos': 50, 'xalign': 1}"
      puPlayer.LabelSet pBackglass,"Play3score",FormatScore(score(2)),1,"{'mt':2,'size':  "&ScoreSize(2)&", 'ypos': 101, 'xpos': 83.3, 'xalign': 1}"
      puPlayer.LabelSet pBackglass,"Play4score","",1,""
    case 4:
      puPlayer.LabelSet pBackglass,"Play1scoreImg", "PuPOverlays\\BatSymbolScore2.png",1,"{'mt':2,'color':111111,'width':"&ScoreWidth(0)&", 'height':"&ScoreHeight(0)&",'yalign':2,'xalign':1,'ypos':0,'xpos':12.5,'zback':1}"
      puPlayer.LabelSet pBackglass,"Play2scoreImg", "PuPOverlays\\BatSymbolScore2.png",1,"{'mt':2,'color':111111,'width':"&ScoreWidth(1)&", 'height':"&ScoreHeight(1)&",'yalign':2,'xalign':1,'ypos':0,'xpos':37.5,'zback':1}"
      puPlayer.LabelSet pBackglass,"Play3scoreImg", "PuPOverlays\\BatSymbolScore2.png",1,"{'mt':2,'color':111111,'width':"&ScoreWidth(2)&", 'height':"&ScoreHeight(2)&",'yalign':2,'xalign':1,'ypos':0,'xpos':62.5,'zback':1}"
      puPlayer.LabelSet pBackglass,"Play4scoreImg", "PuPOverlays\\BatSymbolScore2.png",1,"{'mt':2,'color':111111,'width':"&ScoreWidth(3)&", 'height':"&ScoreHeight(3)&",'yalign':2,'xalign':1,'ypos':0,'xpos':87.5,'zback':1}"
      puPlayer.LabelSet pBackglass,"CurScore","",1,""
      puPlayer.LabelSet pBackglass,"Play1score",FormatScore(score(0)),1,"{'mt':2,'size':  "&ScoreSize(0)&", 'ypos': 101, 'xpos': 12.5, 'xalign': 1}"
      puPlayer.LabelSet pBackglass,"Play2score",FormatScore(score(1)),1,"{'mt':2,'size':  "&ScoreSize(1)&", 'ypos': 101, 'xpos': 37.5, 'xalign': 1}"
      puPlayer.LabelSet pBackglass,"Play3score",FormatScore(score(2)),1,"{'mt':2,'size':  "&ScoreSize(2)&", 'ypos': 101, 'xpos': 62.5, 'xalign': 1}"
      puPlayer.LabelSet pBackglass,"Play4score",FormatScore(score(3)),1,"{'mt':2,'size':  "&ScoreSize(3)&", 'ypos': 101, 'xpos': 87.5, 'xalign': 1}"
  End Select

End sub

Function Balls
    Dim tmp
    tmp = BallsPerGame - BallsRemaining(CurrentPlayer) + 1
    If tmp > BallsPerGame Then
        Balls = BallsPerGame
    Else
        Balls = tmp
    End If
End Function


Sub DoBallSave()
  if bMultiBallMode = False and PlayerState(CurrentPlayer).IsActive(kWiz_VillainEscape)=False then  ' Dont show clip during MB or VillainEscape
    if INT(RND*2)=0 then  PlaySoundVol "b66-ball-save", VolDef
    PlaySoundVol "sfx-ballsave1", VolSfx
    'vpmTimer.AddTimer 3122, "PlaySoundVol ""sfx-ball-launch"", VolSfx '"

    playclear pOverVid
    PuPlayer.LabelShowPage pOverVid, 1,0,""
    playmedia "BallSave.mp4", "PupVideos", pOverVid, "", -1, "", 1, 1

  End if

  DisplayDMDText "Ball Saved", "", 800
  'if bGrootMultiball or bOrbMultiBall or tmrXandar.Enabled or tmrImmolation.Enabled or tmrCherryBomb.Enabled then exit sub   ' Dont play the clip during wizard modes since it shows up 1000 times
  'pDMDEvent(kDMD_BallSave)
  'DMD "_", CL(1, "BALL SAVED"), "_", eNone, eBlinkfast, eNone, 800, True, ""
End Sub


Sub tmrHoldKey_Timer()    ' Reset the game with Ball in lane
  tmrHoldKey.Enabled = False

  If bBallInPlungerLane and BallsOnPlayfield-BallsInLock = 1 Then
    PlaySoundVol "start", VolDef
    bResetCurrentGame=True
    DisableTable True
    AutoPlungeDelayed
    VpmTimer.Addtimer 1000, "EndOfGame '"           ' End game to drain locked balls, but need to wait until ball launches
    'EndOfGame                          ' End game to drain locked balls
  End If
End Sub

Dim EnableBallControl
EnableBallControl = false 'Change to true to enable manual ball control (or press C in-game) via the arrowkeys and B (boost movement) keys

'Const BallSize = 25  'Ball radius


Sub Table1_KeyDown(ByVal keycode)

  If keycode = LeftFlipperKey Then
    PinCab_LeftFlipperButton.x = PinCab_LeftFlipperButton.x +10
  End If
  If keycode = RightFlipperKey Then
    PinCab_RightFlipperButton.x = PinCab_RightFlipperButton.x -10
  End If
  If keycode = StartGameKey Then
    PinCab_Button1i.y = PinCab_Button1i.y -2
  End If
  If (keycode = RightMagnaSave and bDebugLeftMagnaDown=False) or keycode = LockBarKey or _
    (keycode = PlungerKey and bUsePlungerForSternKey) Then
    Flasherlit5.z = Flasherlit5.z -5
    Flasherbase5.z = Flasherbase5.z -5
  End If

  If Keycode = AddCreditKey Then
    pResynchLayers
    Credits = Credits + 1
    DOF 140, DOFOn
    If(Tilted = False)Then
      DisplayDMDText "CREDITS: " & Credits, "", 500
      Select Case Int(Rnd * 3)
      Case 0
        PlaySound ("Coin_In_1"), 0, CoinSoundLevel, 0, 0.25
      Case 1
        PlaySound ("Coin_In_2"), 0, CoinSoundLevel, 0, 0.25
      Case 2
        PlaySound ("Coin_In_3"), 0, CoinSoundLevel, 0, 0.25
    End Select
    End If

    if bGameInPlay=False Then
      SternButtonFlash "green", True
    End If
    End If

  ' *******************************************************************
    ' Manual Ball Control
' If keycode = 46 Then          ' C Key
'   If EnableBallControl = 1 Then
'     EnableBallControl = 0
'   Else
'     EnableBallControl = 1
'   End If
' End If
'    If EnableBallControl = 1 Then
'   If keycode = 48 Then        ' B Key
'     If BCboost = 1 Then
'       BCboost = BCboostmulti
'     Else
'       BCboost = 1
'     End If
'   End If
'   If keycode = 203 Then BCleft = 1  ' Left Arrow
'   If keycode = 200 Then BCup = 1    ' Up Arrow
'   If keycode = 208 Then BCdown = 1  ' Down Arrow
'   If keycode = 205 Then BCright = 1 ' Right Arrow
' End If


  If keycode = PlungerKey Then
    pResynchLayers
    Plunger.PullBack
    SoundPlungerPull
  End If

  ' nFozzy
  ' If keycode = LeftFlipperKey Then FlipperActivate LeftFlipper, LFPress
  ' If keycode = RightFlipperKey Then FlipperActivate RightFlipper, RFPress

  ' ***************************************
  ' FlippserSkipCallbacks
  BonusSceneCallback
  ' ***************************************


    If keycode = LeftTiltKey Then Nudge 90, 1:SoundNudgeLeft:CheckTilt False
    If keycode = RightTiltKey Then Nudge 270, 1:SoundNudgeRight:CheckTilt False
    If keycode = CenterTiltKey Then Nudge 0, 1:SoundNudgeCenter:CheckTilt False
    If keycode = MechanicalTilt then CheckTilt True

' If keycode = LeftFlipperKey Then
'   LeftFlipper.RotateToEnd
'   PlaySound SoundFX("fx_flipperup",DOFFlippers), 0, .67, AudioPan(LeftFlipper), 0.05,0,0,1,AudioFade(LeftFlipper)
' End If
'
' If keycode = RightFlipperKey Then
'   RightFlipper.RotateToEnd
'   PlaySound SoundFX("fx_flipperup",DOFFlippers), 0, .67, AudioPan(RightFlipper), 0.05,0,0,1,AudioFade(RightFlipper)
' End If

  If hsbModeActive Then
    if hsbModeActive and (keycode = LeftFlipperKey or keycode = RightFlipperKey) then     ' Press and hold on HighScoreEntry
      tmrHSHoldFlipper.Interval = 300
      tmrHSHoldFlipper.Enabled = True
    End if

        EnterHighScoreKey(keycode)
        Exit Sub
    End If

  StartServiceMenu keycode
  SceneMPSelect keycode

' *************** DEBUG KEYS *********************
'WriteToLog "     ", "Keycode:" & keycode
  ' Debug
  if (keycode = 17) then          ' w key

'   OpenPFAGate bBackGateIsOpen=False
    'lRonanArrow.Intensity=50
    'lRonanArrow001.Intensity=50
'
'   SetSlowPulse2(lJoker):SetLightColor lJoker, "red", 2
'   SetSlowPulse2(lCatwoman):SetLightColor lCatwoman, "white", 2
'   SetSlowPulse2(lRiddler):SetLightColor lRiddler, "green", 2
'   SetSlowPulse2(lPeng):SetLightColor lPeng, "purple", 2

    'CraneGoto 0

'   DoHighScoreScene "SECRET IDENTITY OF PLAYER 1", "TO BE REVEALED!!!"
'   DoHighScoreScene "1234567890 IS NEW MAD HATTER 13/14 CHAMPION", "TO BE REVEALED!!!"


'   SetLightColor lArrowCat2, "white", 2
'   tmrLightFade.UserValue = 0
'   tmrLightFade.Enabled=True
'   SetLightFlasher flshBat1, True
'   SetLightFlasher flshBatSignal, 2

'   lExtraBall.state=2
'   AwardExtraBall
'   LightExtraBall

'   lBat1.state=1
'   lBat3.state=2

'   BallsRemaining(0)=0
'   EndOfBallComplete
'   PlayerState(CurrentPlayer).Gadgets = 20

'   BonusScene
'   pDMDMulti
'   CheckProgress(swBatmobile)

'   ImageGrowShow "VMB.gif", True, 3500, ""
'   ImageGrowShow "VMB" & INT(RND*11)+1 &".png", False, 200, "200,000"

'   ImageGrowShow "VMB1.png", False, 200, "200,000"
'   SternButtonFlash "white", True

'   SceneMinorEnd False

'   PlayerState(CurrentPlayer).comboCount=20
'   Score(0)=1000000
'   playclear pMusic:CheckHighscore True

'   if CurMechPos = kTT_TV then
'     TurnTable_Goto kTT_Batcave
'   else
'     TurnTable_Goto kTT_TV
'   End if

'   if bDesktop then
'     PuPlayer.SendMSG "{ ""mt"":301, ""SN"": 2, ""FN"":16, ""EX"": ""Pupinit.bat"", ""WT"": """", ""RS"":1 , ""TO"":15 , ""WZ"":0 , ""SH"": 1 , ""FT"":""Visual Pinball Player"" }"
'   End if

    'QueueScene SceneMap(kMajV_S1Joker, 8, 0), SceneMap(kMajV_S1Joker, 8, 1), 1
    'SceneMinorvillainCollect()
    'SceneCollect pMVideo, kMajV_S1CatWoman, 0

'   KickerTest.CreateSizedball BallSize / 2
'   KickerTest.Kick 0.5, 90

'   BumperScore "105K"

    ' Villain Escape
'     PlayerState(CurrentPlayer).setFinished(PlayerState(CurrentPlayer).SeasonIdx(kMajV_Joker))=True
'     PlayerState(CurrentPlayer).setFinished(PlayerState(CurrentPlayer).SeasonIdx(kMajV_Peng))=True
'     PlayerState(CurrentPlayer).setFinished(PlayerState(CurrentPlayer).SeasonIdx(kMajV_CatWoman))=True
'     PlayerState(CurrentPlayer).setFinished(PlayerState(CurrentPlayer).SeasonIdx(kMajV_Riddler))=True
'     QualifyVillainEscape

    ' Minor Villain Wizard Modes
'     SetSlowPulse lSeason1
'     SetSlowPulse lSeason2
'     SetSlowPulse lSeason3
'     SetLightColor lSeason1, "white", 2
'     SetLightColor lSeason2, "white", 2
'     SetLightColor lSeason3, "white", 2
'     SetLightColor lBatman, "white", 2
'     SetLightColor lTV, "white", 2
'     SetLightFlasher flshBatSignal, 2

'   SceneMystery 0

    'ShowPopupLabel 3, "Top Lanes Completed^50,000 + 1 Bonus X^Bonus Now 7X", False, "orange"
    'ShowPopupLabel 0, "Bottom Lanes Completed^+1 Bonus X, Bonus Now 2X^Spinner Is Lit, Value: 50,000", False, "orange"
    'ShowPopupLabel 0, "BAT PHONE ANSWERED!^" & FormatScore(1456334), False, "orange"
    'ShowPopupLabel 5,"25,000^BATCAVE LOCK^LIT", False, ""
    'ShowPopupLabel 6,"ACCESS^TO^BALL LOCK^VIA^RIGHT ORBIT", False, ""

'   tmrCraneDomeFlash.Enabled = True


    'tgtPow_Hit

    'SceneMystery(kMystery_AddABallPlusTime)

    'Debug - REMOVE
'   TurnTable_Goto kTT_Batcave
'   EnableBatCompPulse True
'   EnableCrimeAnaPulse True
  End if

' if (keycode = 18) then          ' e key
'   pDMDMulti2 -1
'   if CurMechPos = kTT_TV then
'     TurnTable_Goto kTT_Phone
'   else
'     TurnTable_Goto kTT_Batcave
'   End if
' End if
' if (keycode = 19) then          ' r key
'   if CurMechPos = kTT_Batcave then
'     TurnTable_Goto kTT_Phone
'   else
'     TurnTable_Goto kTT_TV
'   End if
'
'   PuPlayer.LabelSet pMVideo,"GeneralTop1" ,"TEST-MAIN" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
'   PuPlayer.LabelSet pLVideo,"GeneralTop1", "TEST-LEFT" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
'
' End if
' if (keycode = 20) then          ' t key
'   mMagnaSave.MagnetOn = Not mMagnaSave.MagnetOn
' End if

' ******************* GENERAL GAMEPLAY ************************
  If bGameInPlay AND NOT Tilted Then
    ' Normal flipper action
        If keycode = LeftFlipperKey Then SolLFlipper 1:StartInstantInfo(keycode)
        If keycode = RightFlipperKey Then SolRFlipper 1:StartInstantInfo(keycode)
    SceneCollectEnd(keycode)
    SceneMinorvillainSelect(keycode)
    SceneMinorVillainWizardSelect(keycode)

    ' Debug mode
    If (keycode = LeftMagnaSave or keycode = RightMagnaSave) then
      HandleDebugDown(keycode)
    End If

    ' ***************************************
    ' FlipperSkipCallbacks
    SkipSceneCallback
    ' ***************************************

    '  Stern Key
    If (keycode = RightMagnaSave and bDebugLeftMagnaDown=False) or keycode = LockBarKey or _
      (keycode = PlungerKey and bUsePlungerForSternKey) Then

      if bAutoPlunger=False and bBallInPlungerLane = True then  ' Auto fire ball with stern key
'       plungerIM.Strength = 60
        'plungerIM.InitImpulseP swplunger, 60, 0    ' Change impulse power while we are here
        PlungerIM.AutoFire
        DOF 121, DOFPulse 'autoplunger
        DOF 112, DOFPulse 'strobe
        DOF 159, DOFPulse 'shaker 1 sec
'       plungerIM.Strength = 55
        'plungerIM.InitImpulseP swplunger, 45, 1.1
      Else
        ' Fire STERN KEY HERE
        if bMVSelect = False and bMVWSelect=False and bBallInPlungerLane=False then   ' We are not in Minor Villain Select and not auto launching
          tmrPressHold.Interval = 250   ' see if they press or press and hold
          tmrPressHold.UserValue = 0
          tmrPressHold.Enabled = True
        End if
        SceneMinorvillainCollectEnd()
        SceneMinorVillainWizardSelectEnd()

      end if
    End if

    If keycode = StartGameKey Then    ' startkey

      if bBallInPlungerLane and LFPress and keycode = StartGameKey and DMDStd(kDMDStd_LeftStartReset) then    ' Reset when holding start and left flipper
        tmrHoldKey.Enabled = False
        tmrHoldKey.Enabled = True
      End If

      pResynchLayers
            If (PlayersPlayingGame < MaxPlayers)AND(bOnTheFirstBall = True) Then
                If(bFreePlay = True)Then
                    PlayersPlayingGame = PlayersPlayingGame + 1
                    TotalGamesPlayed = TotalGamesPlayed + 1
                    PlaySoundVol "b66-player" &PlayersPlayingGame, VolDef
                Else
                    If(Credits > 0)then
                        PlayersPlayingGame = PlayersPlayingGame + 1
                        TotalGamesPlayed = TotalGamesPlayed + 1
                        Credits = Credits - 1
            If Credits < 1 Then DOF 140, DOFOff
            PlaySoundVol "b66-player" &PlayersPlayingGame, VolDef
                    Else
                        ' Not Enough Credits to start a game.
                        'DOF 140, DOFOff
                        'DMD CL(0, "CREDITS " & Credits), CL(1, "INSERT COIN"), "", eNone, eBlink, eNone, 500, True, ""
                    End If
                End If
        UpdateNumberPlayers ' Update the screen layout on pup for multiple players
            End If
    End if
  ElseIf bShowMatch = False and hsbModeActive2=False and bInMultiplayerSelect=False then ' (Also bGameInPlay=False)
'WriteToLog "     ", "Key-Show Match=False"
    If keycode = StartGameKey Then
      If(bFreePlay = True)Then
        If(BallsOnPlayfield = 0) Then   ' Make sure no balls are being released
          ResetForNewGame()
        End If
      Else
'WriteToLog "     ", "Check Credits"
        If(Credits > 0)Then
          If(BallsOnPlayfield = 0) Then
            Credits = Credits - 1
            If Credits < 1 Then DOF 140, DOFOff
'WriteToLog "     ", "New Game"
            ResetForNewGame()
          End If
        Else
          ' Not Enough Credits to start a game.
          DOF 140, DOFOff
          DisplayDMDText "CREDITS: " & Credits, "INSERT COIN", 500
          'DMD CL(0, "CREDITS " & Credits), CL(1, "INSERT COIN"), "", eNone, eBlink, eNone, 500, True, ""
          'ShowTableInfo
        End If
      End If
    End If

    ' Cycle attract
    if BallsOnPlayfield = 0 and bInService=False and bInMultiplayerSelect=False then        ' Dont allow this if balls are still on the PF
      if LFPress and RFPress then
        pCurAttractPos=1
        pAttractNext
      else
        If keycode = LeftFlipperKey Then
          DOF_Batman_Song.enabled = false 'disable DOF Batman Song Sequence if in progress
          DOF_Batman_Song_Credits.enabled = false 'disable DOF Batman Song Credits Sequence if in progress
          pCurAttractPos=pCurAttractPos-2
          if pCurAttractPos=-1 then pCurAttractPos=36
          pAttractNext
        End if
        If keycode = RightFlipperKey Then
          DOF_Batman_Song.enabled = false 'disable DOF Batman Song Sequence if in progress
          DOF_Batman_Song_Credits.enabled = false 'disable DOF Batman Song Credits Sequence if in progress
          pAttractNext
        End If
      End if
    End if
  ElseIf bShowMatch and keycode = StartGameKey Then   'Skip Show Match
    playclear pOverVid
    StopSound "Match-Score"
    EndOfGame()
    End If ' If (GameInPlay)

End Sub

Sub Table1_KeyUp(ByVal keycode)

  If keycode = LeftFlipperKey Then
    PinCab_LeftFlipperButton.x = PinCab_LeftFlipperButton.x -10
  End If
  If keycode = RightFlipperKey Then
    PinCab_RightFlipperButton.x = PinCab_RightFlipperButton.x +10
  End If
  If keycode = StartGameKey Then
    PinCab_Button1i.y = PinCab_Button1i.y +2
  End If
  If (keycode = RightMagnaSave and bDebugLeftMagnaDown=False) or keycode = LockBarKey or _
    (keycode = PlungerKey and bUsePlungerForSternKey) Then
    Flasherlit5.z = Flasherlit5.z +5
    Flasherbase5.z = Flasherbase5.z +5
  End If

  if bTableDisabled then exit sub

  tmrHoldKey.Enabled = False
  If keycode = PlungerKey Then
    SoundPlungerReleaseBall
    End If

    If hsbModeActive or hsbModeActive2 Then

    if keycode = LeftFlipperKey or keycode = RightFlipperKey then
      tmrHSHoldFlipper.Enabled = False
    End if
    If keycode = LeftFlipperKey Then lfpress = 0
    If keycode = RightFlipperKey Then rfpress = 0

    InstantInfoTimer.Enabled = False
    bInstantInfo = False
    bInstantInfoIdx=0
        Exit Sub
    End If

  HandleDebugUp(keycode)

  If bGameInPLay AND NOT Tilted Then
    ' nFozzy
'     If keycode = LeftFlipperKey Then
'       FlipperDeActivate LeftFlipper, LFPress
' '     lfpress = 0
' '     leftflipper.eostorqueangle = EOSA
' '     leftflipper.eostorque = EOST
'     End If
'     If keycode = RightFlipperKey Then
'       FlipperDeActivate RightFlipper, RFPress
' '     rfpress = 0
' '     rightflipper.eostorqueangle = EOSA
' '     rightflipper.eostorque = EOST
'     End If


    If keycode = PlungerKey Then
      Plunger.Fire
      PlaySound "plunger",0, VolTable, AudioPan(Plunger),0.25,0,0,1,AudioFade(Plunger)
    End If

    If keycode = LeftFlipperKey Then SolLFlipper 0
'     LeftFlipper.RotateToStart
'     PlaySound SoundFX("fx_flipperdown",DOFFlippers), 0, VolTable, AudioPan(LeftFlipper), 0.05,0,0,1,AudioFade(LeftFlipper)
'   End If

    If keycode = RightFlipperKey Then SolRFlipper 0
'     RightFlipper.RotateToStart
'     PlaySound SoundFX("fx_flipperdown",DOFFlippers), 0, VolTable, AudioPan(RightFlipper), 0.05,0,0,1,AudioFade(RightFlipper)
'   End If

    If keycode = LeftFlipperKey or keycode = RightFlipperKey Then
      EndFlipperStatus(keycode)
    End If

    '  Stern Key
    If (keycode = RightMagnaSave and bDebugLeftMagnaDown=False) or keycode = LockBarKey or _
      (keycode = PlungerKey and bUsePlungerForSternKey) Then

      if tmrPressHold.Enabled then      ' See if we are checking for a press or a press and hold
        tmrPressHold.Enabled = False
        if tmrPressHold.UserValue <= 2 then ' STERN - Press
          'WriteToLog "     ", "Use Gadget"
          CheckGadget True
          CheckProgress swGadget
        End if
      End if
    End if

    'Manual Ball Control
    If EnableBallControl = 1 Then
      If keycode = 203 Then BCleft = 0  ' Left Arrow
      If keycode = 200 Then BCup = 0    ' Up Arrow
      If keycode = 208 Then BCdown = 0  ' Down Arrow
      If keycode = 205 Then BCright = 0 ' Right Arrow
    End If
  Else
    If keycode = LeftFlipperKey Then lfpress = 0:SolLFlipper 0
    If keycode = RightFlipperKey Then rfpress = 0:SolRFlipper 0

  End If
End Sub


Sub SkipSceneCallback() ' Flipper Skip
  if LFPress and RFPress and KickerPeng_Staged and bSceneCollect=False then   ' Skip Scene (when staged) and not waiting for collect
    QueueSkipS sSwapPos
  End if
End Sub

sub tmrHSHoldFlipper_Timer()
  tmrHSHoldFlipper.Interval = 100     ' Speed it up
  if RFPress then
    EnterHighScoreKey(RightFlipperKey)
  elseif LFPress then
    EnterHighScoreKey(LeftFlipperKey)
  End if
End Sub


Sub tmrPressHold_Timer()
  Dim i
  if PlayerState(CurrentPlayer).numScreens > 1 then
    tmrPressHold.UserValue = tmrPressHold.UserValue+1
    if tmrPressHold.UserValue > 2 then            ' STERN Key - Press and Hold
      tmrPressHold.Enabled = False
      'WriteToLog "     ", "Switch Screens"
      PlaySoundVol "sfx-static1", VolSfx
      for i = 0 to 3
        if PlayerState(CurrentPlayer).ActiveScreens(i) then
          if i=0 then
            puPlayer.LabelSet NewScreens(i),"AniGif", PupAniFolder & "\\static.gif", 1,"{'mt':2,'color':111111,'ypos':50,'xpos':50,'width':100, 'height':100, 'anigif':100,'pagenum':1}"
          else
            if bDesktop then
              puPlayer.LabelSet NewScreens(i),"AniGif", PupAniFolder & "\\staticSmall.gif", 1,"{'mt':2,'color':111111,'ypos':59,'xpos':53,'width':95, 'height':100, 'anigif':100,'pagenum':1}"
            else
              puPlayer.LabelSet NewScreens(i),"AniGif", PupAniFolder & "\\staticSmall.gif", 1,"{'mt':2,'color':111111,'ypos':50,'xpos':50,'width':100, 'height':100, 'anigif':100,'pagenum':1}"
            End if
          End if
        End if
      Next

      pDMDMulti2 -1     ' SWITCH Screens
      SetBGMusic        ' Match music
      SetVBackground      ' Match BG

      ' Fix static back up
      for i = 0 to 3
        if PlayerState(CurrentPlayer).ActiveScreens(i) then
          if i=0 then
            puPlayer.LabelSet NewScreens(i),"AniGif", PupAniFolder & "\\static.gif", 1,"{'mt':2,'color':111111,'ypos':50,'xpos':50,'width':100, 'height':100, 'anigif':100,'pagenum':1}"
          else
            if bDesktop then
              puPlayer.LabelSet NewScreens(i),"AniGif", PupAniFolder & "\\staticSmall.gif", 1,"{'mt':2,'color':111111,'ypos':59,'xpos':53,'width':95, 'height':100, 'anigif':100,'pagenum':1}"
            else
              puPlayer.LabelSet NewScreens(i),"AniGif", PupAniFolder & "\\staticSmall.gif", 1,"{'mt':2,'color':111111,'ypos':50,'xpos':50,'width':100, 'height':100, 'anigif':100,'pagenum':1}"
            End if
          End if
        End if
      Next
      vpmTimer.AddTimer 1200, "tmrStaticClear '"
    End if
  End if
End Sub

Sub tmrStaticClear()
  puPlayer.LabelSet 16,"AniGif", "PuPOverlays\\clear.gif", 0,"{'mt':2,'color':111111,'ypos':50,'xpos':50,'width':100, 'height':100, 'anigif':100,'pagenum':1}"
  puPlayer.LabelSet 17,"AniGif", "PuPOverlays\\clear.gif", 0,"{'mt':2,'color':111111,'ypos':50,'xpos':50,'width':100, 'height':100, 'anigif':100,'pagenum':1}"
  puPlayer.LabelSet 18,"AniGif", "PuPOverlays\\clear.gif", 0,"{'mt':2,'color':111111,'ypos':50,'xpos':50,'width':100, 'height':100, 'anigif':100,'pagenum':1}"
  puPlayer.LabelSet 19,"AniGif", "PuPOverlays\\clear.gif", 0,"{'mt':2,'color':111111,'ypos':50,'xpos':50,'width':100, 'height':100, 'anigif':100,'pagenum':1}"
End Sub


' DONT FORGET TO CLEAR FlipperSkipCmd when you are past this stage.
'   What this means is once you move on to the next command (without skipping) you need to clear this otherwise
'   when you hit both flippers during gameplay it will call the command you put
Sub SetFlipperSkipCmd(Cmd)
  if FlipperSkipCmd="" then
    FlipperSkipCmd=Cmd
  End If
End Sub

sub StartInstantInfo(keycode)
'WriteToLog "     ", "Start Instant " & keycode & " " & bInstantInfo
  if bInstantInfo = False Then ' I am already in instantinfo
    InstantInfoTimer.Interval = 6000
    InstantInfoTimer.Enabled = True
    InstantInfoTimer.UserValue=keycode
  End If
End Sub

Sub InstantInfoTimer_Timer
    InstantInfoTimer.Enabled = False
    bInstantInfo = True
  bInstantInfoIdx=0
'WriteToLog "     ", "Instant Info timer"
' PuPlayer.LabelShowPage pBackglass, 5,0,""

  puPlayer.LabelSet pBackglass,"InstantInfoBG", "PuPOverlays\\Info1.png" ,1,"{'mt':2,'color':111111, 'width':73, 'height':67,'yalign':0,'xalign':0,'ypos':16,'xpos':13}"
  puPlayer.LabelSet pBackglass,"InstantInfoL1",  PlayerState(CurrentPlayer).ComboCount & " COMBOS", 1, "{'mt':2,'ypos':35, 'size':8}"
  puPlayer.LabelSet pBackglass,"InstantInfoL2", "EXTRA BALL LIT AT 20",         1, "{'mt':2,'ypos':45, 'size':8}"
  puPlayer.LabelSet pBackglass,"InstantInfoL3", "JACKPOT=" & FormatScore(PlayerState(CurrentPlayer).TakeJackpot), 1, "{'mt':2,'ypos':55, 'size':8}"

End Sub

Sub EndFlipperStatus(keycode)
    If bInstantInfo or bGameInPlay=False Then
'WriteToLog "     ", "EndInstantInfo check" & keycode & " " & InstantInfoTimer.UserValue
    if (keycode=InstantInfoTimer.UserValue) then  ' They let go of the key
'WriteToLog "     ", "EndInstantInfo"
      ResetBallSearch
      InstantInfoTimer.Enabled = False
      bInstantInfo=False
'     PuPlayer.LabelShowPage pBackglass,1,0,""
      puPlayer.LabelSet pBackglass,"InstantInfoBG", "PuPOverlays\\clear.png" ,1,"{'mt':2,'color':111111, 'width':73, 'height':67,'yalign':0,'xalign':0,'ypos':16,'xpos':13}"
      puPlayer.LabelSet pBackglass,"InstantInfoL1", "", 1, ""
      puPlayer.LabelSet pBackglass,"InstantInfoL2", "", 1, ""
      puPlayer.LabelSet pBackglass,"InstantInfoL3", "", 1, ""

    Else ' They pressed the other flipper so cycle faster
      bInstantInfoIdx=bInstantInfoIdx+1
      if bInstantInfoIdx>10 then bInstantInfoIdx=0    ' Loop around

      'FormatScore(PlayerState(CurrentPlayer).SpinnerJP)
      Select case bInstantInfoIdx
        case 0:
          puPlayer.LabelSet pBackglass,"InstantInfoL1",  PlayerState(CurrentPlayer).ComboCount & " COMBOS",   1, "{'mt':2,'ypos':35, 'size':8}"
          puPlayer.LabelSet pBackglass,"InstantInfoL2", "EXTRA BALL LIT AT 20",                 1, "{'mt':2,'ypos':45, 'size':8}"
          puPlayer.LabelSet pBackglass,"InstantInfoL3", "JACKPOT=" & FormatScore(PlayerState(CurrentPlayer).TakeJackpot),           1, "{'mt':2,'ypos':55, 'size':8}"
        case 1:
          puPlayer.LabelSet pBackglass,"InstantInfoL1",  "Pop Bumper Level " & BumperLevel,         1, "{'mt':2,'ypos':35, 'size':10}"
          puPlayer.LabelSet pBackglass,"InstantInfoL2",  "Next Level "&BumperHits&" Hits",          1, "{'mt':2,'ypos':50, 'size':10}"
          puPlayer.LabelSet pBackglass,"InstantInfoL3", "",                           1, "{'mt':2,'ypos':55, 'size':8}"
        case 2:
          puPlayer.LabelSet pBackglass,"InstantInfoL1",  "",                          1, "{'mt':2,'ypos':35, 'size':8}"
          puPlayer.LabelSet pBackglass,"InstantInfoL2",  PlayerState(CurrentPlayer).Gadgets & " Gadgets",   1, "{'mt':2,'ypos':45, 'size':10}"
          puPlayer.LabelSet pBackglass,"InstantInfoL3", "",                           1, "{'mt':2,'ypos':55, 'size':8}"
        case 3:
          puPlayer.LabelSet pBackglass,"InstantInfoL1",  "Ball " & Balls,                   1, "{'mt':2,'ypos':35, 'size':10}"
          if bFreePlay then
            puPlayer.LabelSet pBackglass,"InstantInfoL2",  "FREE PLAY",                   1, "{'mt':2,'ypos':50, 'size':10}"
          else
            puPlayer.LabelSet pBackglass,"InstantInfoL2",  "COIN PLAY",                   1, "{'mt':2,'ypos':50, 'size':10}"
          End if
          puPlayer.LabelSet pBackglass,"InstantInfoL3", "",                           1, "{'mt':2,'ypos':55, 'size':8}"
        case 4:
          puPlayer.LabelSet pBackglass,"InstantInfoL1",  "TOTAL BONUS ",                    1, "{'mt':2,'ypos':35, 'size':10}"
          puPlayer.LabelSet pBackglass,"InstantInfoL2",  FormatScore(GetCurrentBonus()),                1, "{'mt':2,'ypos':50, 'size':10}"
          puPlayer.LabelSet pBackglass,"InstantInfoL3", "",                           1, "{'mt':2,'ypos':55, 'size':8}"
        case 5:
          puPlayer.LabelSet pBackglass,"InstantInfoL1",  "REPLAY AT ",                    1, "{'mt':2,'ypos':35, 'size':10}"
          puPlayer.LabelSet pBackglass,"InstantInfoL2",  FormatScore(346600000),                1, "{'mt':2,'ypos':50, 'size':10}"
          puPlayer.LabelSet pBackglass,"InstantInfoL3", "",                           1, "{'mt':2,'ypos':55, 'size':8}"
        case 6:
          puPlayer.LabelSet pBackglass,"InstantInfoL1",  "GRAND CHAMPION",                  1, "{'mt':2,'ypos':35, 'size':8}"
          puPlayer.LabelSet pBackglass,"InstantInfoL2", HighScoreName(0),                   1, "{'mt':2,'ypos':45, 'size':8}"
          puPlayer.LabelSet pBackglass,"InstantInfoL3", FormatScore(HighScore(0)),              1, "{'mt':2,'ypos':55, 'size':8}"
        case 7:
          puPlayer.LabelSet pBackglass,"InstantInfoL1",  "HIGH SCORE #1",                   1, "{'mt':2,'ypos':35, 'size':8}"
          puPlayer.LabelSet pBackglass,"InstantInfoL2", HighScoreName(1),                   1, "{'mt':2,'ypos':45, 'size':8}"
          puPlayer.LabelSet pBackglass,"InstantInfoL3", FormatScore(HighScore(1)),              1, "{'mt':2,'ypos':55, 'size':8}"
        case 8:
          puPlayer.LabelSet pBackglass,"InstantInfoL1",  "HIGH SCORE #2",                   1, "{'mt':2,'ypos':35, 'size':8}"
          puPlayer.LabelSet pBackglass,"InstantInfoL2", HighScoreName(2),                   1, "{'mt':2,'ypos':45, 'size':8}"
          puPlayer.LabelSet pBackglass,"InstantInfoL3", FormatScore(HighScore(2)),              1, "{'mt':2,'ypos':55, 'size':8}"
        case 9:
          puPlayer.LabelSet pBackglass,"InstantInfoL1",  "HIGH SCORE #3",                   1, "{'mt':2,'ypos':35, 'size':8}"
          puPlayer.LabelSet pBackglass,"InstantInfoL2", HighScoreName(3),                   1, "{'mt':2,'ypos':45, 'size':8}"
          puPlayer.LabelSet pBackglass,"InstantInfoL3", FormatScore(HighScore(3)),              1, "{'mt':2,'ypos':55, 'size':8}"
        case 10:
          puPlayer.LabelSet pBackglass,"InstantInfoL1",  "HIGH SCORE #4",                   1, "{'mt':2,'ypos':35, 'size':8}"
          puPlayer.LabelSet pBackglass,"InstantInfoL2", HighScoreName(4),                   1, "{'mt':2,'ypos':45, 'size':8}"
          puPlayer.LabelSet pBackglass,"InstantInfoL3", FormatScore(HighScore(4)),              1, "{'mt':2,'ypos':55, 'size':8}"

      End Select
    End If
  Else
''WriteToLog "     ", "Stop Instant " & keycode
    InstantInfoTimer.Enabled = False
    End If
End Sub


Sub DoLightSeq(Idx)

  select case idx
    case 1:       ' standard shot
      ' Do light sequence
      LightSeqGI.Play SeqAllOff
      LightSeqGI.Play SeqBlinking, , 1, 200
      LightSeqInserts.Play SeqAllOff
      LightSeqInserts.UpdateInterval = 8
      LightSeqInserts.Play SeqUpOn, 50, 1

  End Select

End Sub

Sub ChangeGi(GIGroup, col, percent) 'changes the gi color
    Dim bulb
    For each bulb in GIGroup
        SetLightColor bulb, col, -1
    bulb.intensity = percent*bulb.uservalue
    Next
End Sub

Sub GiOn
' WallsFG.Image =
  Apron.Image="Batman66LE-Apron"
  BackwallArt.Image="B66_BackwallGION"
  RampAndWalls.Image="B66_Metal_WallBG_GION"
  RampAndWalls001.Image="B66_Metal_WallBG_GION"
  PF_Inserts_Off.Image="B66Inserts_Off_GION"
  B66_Plastics.Image="B66_Plastics_GION"
  MetalRampRightWalls.Image="B66_RightRampWallGION"
  Catwoman_RampLeft.Image="B66_RampsMagnetGION"
  Catwoman_RampRight.Image="B66_RampsMagnetGION"
  Catwoman_RampRightPlate.Image="B66_RampsMagnetGION"
  RotatingPFATV2.Image="B66_RPFA_TV_GION"
  CraneModel.Image="B66_crane_GION"
  plastic48.Image="plastic48_GION"
  plastic47.Image="plastic47_GION"
  Cat18.Image="Cat-18_GION"
  Cat12.Image="Cat-12_GION"
  PlasticBallGuides.Image="B66_PlasticGuideLeft_GION"
  RampPlasticGuides.Image="B66_RampPlastics_GION"
  BallGuide07.Image="B66_PengAssem"
  RotatingPFA.Image="RPF_Base_GION"
  B66_PlasticPop1.Image="B66_Popbumpers_GIOFFB"
  B66_PlasticPop2.Image="B66_Popbumpers_GIOFFB"
  B66_PlasticPop3.Image="B66_Popbumpers_GIOFFB"
  LFlipPrim.blenddisablelighting = 0.2
  RFlipPrim.blenddisablelighting = 0.2
  PlasticBallGuides.blenddisablelighting = 0.8
    PlasticBallGuides001.blenddisablelighting = 0.8
  LeftWireRail.blenddisablelighting = 0.8
  RightWireRail.blenddisablelighting = 1
  B66_Plastics.blenddisablelighting = 1
  Sandwich.blenddisablelighting = 0.3
  WallDoor2.blenddisablelighting = 0.5
  WallsFG.blenddisablelighting = 0.5

  'pf lighting
  ShadowMain.opacity=100
  playfield_mesh.blenddisablelighting = 0.5 'to fix the hole edge glare
  playfield_GIOFF.visible=false 'to fix the hole edge glare

  RampPlasticGuides.blenddisablelighting = 1
  pPlungerlane.blenddisablelighting = 0.15
    DOF 126, DOFOn
    Dim bulb
    For each bulb in GI
        bulb.State = 1
    Next
End Sub

Sub GiOff
  Apron.Image="Batman66LE-Apron 2"
  BackwallArt.Image="B66_BackwallGIOFF"
  RampAndWalls.Image="B66_Metal_WallBG_GIOFF"
  RampAndWalls001.Image="B66_Metal_WallBG_GIOFF"
  PF_Inserts_Off.Image="B66Inserts_Off_GIOFF"
  B66_Plastics.Image="B66_Plastics_GIOFF"
  MetalRampRightWalls.Image="B66_RightRampWallGIOFF"
  Catwoman_RampLeft.Image="B66_RampsMagnetGIOFF"
  Catwoman_RampRight.Image="B66_RampsMagnetGIOFF"
  Catwoman_RampRightPlate.Image="B66_RampsMagnetGIOFF"

  RotatingPFATV2.Image="B66_RPFA_TV_GIOFF"
  CraneModel.Image="B66_crane_GIOFF"
  plastic48.Image="plastic48_GIOFF"
  plastic47.Image="plastic47_GIOFF"
  Cat18.Image="Cat-18_GIOFF"
  Cat12.Image="Cat-12_GIOFF"
  PlasticBallGuides.Image="B66_PlasticGuideLeft_GIOFF"
  PlasticBallGuides001.Image="B66_PlasticGuideRight_GIOFF"
  RampPlasticGuides.Image="B66_RampPlastics_GIOFF"
  BallGuide07.Image="B66_PengAssem_GIOFF"
  RotatingPFA.Image="RPF_Base_GIOFF"
  B66_PlasticPop1.Image="B66_Popbumpers_GIOFFA"
  B66_PlasticPop2.Image="B66_Popbumpers_GIOFFA"
  B66_PlasticPop3.Image="B66_Popbumpers_GIOFFA"

  LFlipPrim.blenddisablelighting = 0
  RFlipPrim.blenddisablelighting = 0
  PlasticBallGuides.blenddisablelighting = 0.05
    PlasticBallGuides001.blenddisablelighting = 0.05
  LeftWireRail.blenddisablelighting = 0.2
  RightWireRail.blenddisablelighting = 0.2
  B66_Plastics.blenddisablelighting = 0.3
  Sandwich.blenddisablelighting = 0
  WallDoor2.blenddisablelighting = 0.1
  WallsFG.blenddisablelighting = 0.1

  'pf lighting
  ShadowMain.opacity=0
  playfield_mesh.blenddisablelighting = 0 'to fix the hole edge glare
  playfield_GIOFF.visible=true  'to fix the hole edge glare

  RampPlasticGuides.blenddisablelighting = 0.1
  pPlungerlane.blenddisablelighting = 0
    DOF 126, DOFOff
    Dim bulb
    For each bulb in GI
        bulb.State = 0
    Next
End Sub



Dim TiltDangerWait
TiltDangerWait=False
Sub CheckTilt(bReal)                    ' Called when table is nudged
  discSpinSpeed=18          ' Wiggle batmobile
  discStartPosition = discPosition


'WriteToLog "     ", "Tilt"
  if HasRealTiltBob and bReal=False then exit sub   ' Real tilt bob does the tilt
    If NOT bGameInPlay Then Exit Sub
  If TiltDangerWait then Exit Sub

    Tilt = Tilt + TiltSensitivity                'Add to tilt count
'WriteToLog "     ", "Check Tilt " & Tilt
  TiltDecreaseTimer.Interval = DMDStd(kDMDStd_TiltDebounce)               ' HOW does this work?
    TiltDecreaseTimer.Enabled = True
  if (bReal or Tilt > 15) and TiltCount(CurrentPlayer) < DMDStd(kDMDStd_TiltWarn) Then        ' Tilt Warning
    TiltDangerWait=True
    TiltCount(CurrentPlayer) = TiltCount(CurrentPlayer) + 1

    PlaySoundVol "sfx-Tilt1", VolSfx
    playclear pOverVid
    PuPlayer.LabelShowPage pOverVid, 1,0,""
    playmedia "Tilt1.mp4", "PupVideos", pOverVid, "", -1, "", 1, 1
    DOF 311, DOFPulse 'Tilt Warning
    GIOff
    'vpmtimer.addtimer 1000, "GIOn:PlaySoundVol ""sfx-Tilt1"", VolSfx '"    ' Jack has these as 2 sounds and animations (Special setting??)
    vpmtimer.addtimer 1000, "GIOn '"
    vpmtimer.addtimer 3000, "SceneClearTilt '"

  ElseIf bReal or Tilt > 15 Then                      'If more that 15 then TILT the table
        Tilted = True

    PlaySoundVol "sfx-Tilt2", VolSfx
    playclear pOverVid
    PuPlayer.LabelShowPage pOverVid, 1,0,""
    playmedia "Tilt2.mp4", "PupVideos", pOverVid, "", -1, "", 1, 1
    DOF 310, DOFPulse 'TILT
    DOF_UnderCab_Off
    GIOff
    vpmtimer.addtimer 4000, "SceneClearTilt '"
        DisableTable True
        TiltRecoveryTimer.Enabled = True 'start the Tilt delay to check for all the balls to be drained
    End If
End Sub

Sub TiltDecreaseTimer_Timer
    ' DecreaseTilt
    If Tilt > 0 Then
        Tilt = Tilt - 0.1
    Else
        TiltDecreaseTimer.Enabled = False
    End If
End Sub

Sub SceneClearTilt()
  GIOn
  TiltDangerWait=False
  playclear pOverVid
End Sub


Sub DisableTable(Enabled)
    If Enabled Then
        'turn off GI and turn off all the lights
        GiOff
    LightSeqTilt.Play SeqAllOff
        'Disable slings, bumpers etc
        LeftFlipper.RotateToStart
        RightFlipper.RotateToStart

    Bumper001.threshold=10
    Bumper002.threshold=10
    Bumper003.threshold=10
        LeftSlingshot.Disabled = 1
        RightSlingshot.Disabled = 1
    bTableDisabled=True
    Else
        'turn back on GI and the lights
    LeftSlingshot.Disabled = 0
        RightSlingshot.Disabled = 0
    Bumper001.threshold=1.6
    Bumper002.threshold=1.6
    Bumper003.threshold=1.6

    LightSeqTilt.StopPlay
        GiOn
    bTableDisabled=False
    End If
End Sub

Sub TiltRecoveryTimer_Timer()
    ' if all the balls have been drained then..
    If(BallsOnPlayfield- BallsInLock = 0) Then
        ' do the normal end of ball thing (this doesn't give a bonus if the table is tilted)
        EndOfBall()
        TiltRecoveryTimer.Enabled = False
    End If
' else retry (checks again in another second or so)
End Sub


'*********
' Queue - This could be used for anything but I use it to queue  priority=1 items up with the option to have 1 Priority=2 item queued or running
'       Thought here is Pri 1 items need to be shown, Pri 2 items can be shown if an item is running
'
'   NOTE - Since VPMtimer is limited to 20 concurrent timers you need a timer called tmrQueue to ensure items dont get dropped
' QueueScene
'   Command=vbscript command    ex:   "RunFunction ""Test"", 123  '"
'   Length=milliseconds before running the next item in the queue
'   Priority=Number, 0 being highest
'
'  NOTE: Base functions was modified to have a separate Queue for each screen
'
'*********
dim PupQueue(4, 20, 4)    ' QueueNum,   Size=20,  Fields are 0=Command, 1=Priority, 2=time, 3=MustRun
dim PupQueueEndPos(4)   ' Size of each queue (-1 = Empty)
dim QueueActive(4)      ' We are actively running something
Dim QueueCurrentTime(4)   ' How much time is this one going to run (Just used for getting the queue time)
QueueActive(0)=False
QueueActive(1)=False
QueueActive(2)=False
QueueActive(3)=False
PupQueueEndPos(0)=-1
PupQueueEndPos(1)=-1
PupQueueEndPos(2)=-1
PupQueueEndPos(3)=-1


Sub QueueFlushV(Villain)
  QueueFlushS PlayerState(CurrentPlayer).getPupScreen(Villain)
End Sub

Sub QueueFlushS(screen)
'WriteToLog "     ", "QueueFlushS: " & screen
  dim queueIdx
  select case screen
    case pMVideo: queueIdx=0
    case pLVideo: queueIdx=1
    case pRVideo: queueIdx=2
    case pLVideo2: queueIdx=3
  End Select
  QueueFlush queueIdx
End Sub

Sub QueueFlush(queueIdx)
  QueueFlushForce queueIdx, False
End Sub
Sub QueueFlushForce(queueIdx, bForce)
  dim xx
  Dim time
  dim nextFree
'WriteToLog "     ", "QueueFlush: " & queueIdx

  nextFree=-1
  for xx = 0 to PupQueueEndPos(queueIdx)
    if PupQueue(queueIdx, xx, 3)=True then    ' MustRun=True,  keep it
      if nextFree=-1 then
        nextFree=0
      else
        nextFree=nextFree+1
      End if
      PupQueue(queueIdx, nextFree, 0 )=PupQueue(queueIdx, xx,0 )
      PupQueue(queueIdx, nextFree, 1 )=PupQueue(queueIdx, xx,1 )
      PupQueue(queueIdx, nextFree, 2 )=PupQueue(queueIdx, xx,2 )
      PupQueue(queueIdx, nextFree, 3 )=PupQueue(queueIdx, xx,3 )
    End if
  Next
  PupQueueEndPos(queueIdx)=nextFree
'
''WriteToLog "     ", "--Q-Dump Flush---"
' for xx = 0 to PupQueueEndPos(queueIdx)
'   'WriteToLog "     ", xx & " " & PupQueue(queueIdx, xx, 0) & " " & PupQueue(queueIdx, xx, 1) & " " & PupQueue(queueIdx, xx, 2) & " " & PupQueue(queueIdx, xx, 3)
' Next
''WriteToLog "     ", "--Q-Dump Flush---"

  ' See if one is actively running
  time=0
  if QueueActive(queueIdx) and QueueCurrentTime(queueIdx) <> 0 then time = (DateDiff("s", now, QueueCurrentTime(queueIdx)) * 1000)

  if (nextFree= -1 and time=0) or bForce then
'WriteToLog "     ", "QueueFlush Empty Deacivated"
    QueueActive(queueIdx)=False
    tmrQueues(queueIdx).Enabled = False
  End if
End Sub


Function getQueueTimeV(Villain)
  getQueueTimeV = getQueueTimeS(PlayerState(CurrentPlayer).getPupScreen(Villain))
End Function
Function getQueueTimeS(screen)
  dim queueIdx
  select case screen
    case pMVideo: queueIdx=0
    case pLVideo: queueIdx=1
    case pRVideo: queueIdx=2
    case pLVideo2: queueIdx=3
  End Select
  getQueueTimeS = getQueueTime(queueIdx)
End Function
Function getQueueTime(queueIdx)   ' Returns how much time left on queue
  Dim time,i
  time = 0
'WriteToLog "     ", "GetQueueTime: (" & queueIdx &") " & now
'WriteToLog "     ", "GetQueueTime:" & QueueCurrentTime(queueIdx) & " " & QueueActive(queueIdx)
  if QueueActive(queueIdx) and QueueCurrentTime(queueIdx) <> 0 then time = (DateDiff("s", now, QueueCurrentTime(queueIdx)) * 1000)
'WriteToLog "     ", "GetQueueTime Active:" & time

  for i = 0 to PupQueueEndPos(queueIdx)
    time = time + PupQueue(queueIdx, i, 2)
  Next
  getQueueTime = time
'WriteToLog "     ", "GetQueueTime ret:" & time
End Function
Sub QueuePop(queueIdx)
  if PupQueueEndPos(queueIdx) = -1 then exit sub
  PupQueue(queueIdx, 0, 1 )=99
  SortPupQueue queueIdx
  PupQueue(queueIdx, PupQueueEndPos(queueIdx),0 )=""
  PupQueue(queueIdx, PupQueueEndPos(queueIdx),2 )=0
  PupQueue(queueIdx, PupQueueEndPos(queueIdx),3 )=False
  PupQueueEndPos(queueIdx)=PupQueueEndPos(queueIdx)-1

'WriteToLog "     ", "--Q-Dump Pop---"
  Dim xx
  for xx = 0 to PupQueueEndPos(queueIdx)
    'WriteToLog "     ", xx & " " & PupQueue(queueIdx, xx, 0) & " " & PupQueue(queueIdx, xx, 1) & " " & PupQueue(queueIdx, xx, 2) & " " & PupQueue(queueIdx, xx, 3)
  Next
'WriteToLog "     ", "--Q-Dump Pop---"


End Sub


'*************************************

Sub QueueSceneV(Villain, Command, msecLen, priority)
  QueueSceneV2 Villain, Command, msecLen, priority, False
End Sub
Sub QueueSceneV2(Villain, Command, msecLen, priority, bMustRun)
  QueueSceneS2 PlayerState(CurrentPlayer).getPupScreen(Villain), Command, msecLen, priority, bMustRun
End Sub


Sub QueueSceneS(screen, Command, msecLen, priority)
  QueueSceneS2 screen, Command, msecLen, priority, False
End Sub

Sub QueueSceneS2(screen, Command, msecLen, priority, bMustRun)
  dim queueIdx
  select case screen
    case pMVideo: queueIdx=0
    case pLVideo: queueIdx=1
    case pRVideo: queueIdx=2
    case pLVideo2: queueIdx=3
  End Select
  QueueScene2 queueIdx, Command, msecLen, priority, bMustRun
End Sub

Sub QueueScene(queueIdx, Command, msecLen, priority)
  QueueScene2 queueIdx, Command, msecLen, priority, False
End Sub

Sub QueueScene2(queueIdx, Command, msecLen, priority, bMustRun)
'WriteToLog "     ", "Queue Scene " & Command & " Len: " & msecLen
  if PupQueueEndPos(queueIdx) < UBound(PupQueue, 2) then
    PupQueueEndPos(queueIdx)=PupQueueEndPos(queueIdx)+1
  End if
  ' NOTE: If it is full we overwrite the lowest priority (Optionally we could make the queue bigger)
  PupQueue(queueIdx, PupQueueEndPos(queueIdx),0 )=Command & " '"
  PupQueue(queueIdx, PupQueueEndPos(queueIdx),1 )=priority
  PupQueue(queueIdx, PupQueueEndPos(queueIdx),2 )=msecLen
  PupQueue(queueIdx, PupQueueEndPos(queueIdx),3 )=bMustRun

  SortPupQueue queueIdx

'WriteToLog "     ", "--Q-Dump---"
  Dim xx
  for xx = 0 to PupQueueEndPos(queueIdx)
    'WriteToLog "     ", xx & " " & PupQueue(queueIdx, xx, 0) & " " & PupQueue(queueIdx, xx, 1) & " " & PupQueue(queueIdx, xx, 2) & " " & PupQueue(queueIdx, xx, 3)
  Next
'WriteToLog "     ", "--Q-Dump---"

  RunQueue queueIdx, True
End Sub

'*************************************


Sub tmrQueues_Timer(queueIdx)
''WriteToLog "     ", "TIMER!!!!!!!!!!" & queueIdx
  tmrQueues(queueIdx).Enabled = False
  RunQueue queueIdx, False
End Sub

Sub QueueSkipS(screen)          ' Shortcycle the timer and move on
  dim queueIdx
  if screen=-1 then exit sub
  select case screen
    case pMVideo: queueIdx=0
    case pLVideo: queueIdx=1
    case pRVideo: queueIdx=2
    case pLVideo2: queueIdx=3
  End Select
  QueueSkip(queueIdx)
End Sub
Sub QueueSkip(queueIdx)           ' Shortcycle the timer and move on
'WriteToLog "     ", "--Q Skip--"
  if tmrQueues(queueIdx).Enabled Then
    tmrQueues(queueIdx).Enabled = False
    RunQueue queueIdx, False
  End if
End Sub

Sub RunQueue(queueIdx, bNewItem)
  dim qCmd, qTime
'WriteToLog "     ", "Run Queue " &  queueIdx & " " & QueueActive(queueIdx) & " " & bNewItem & " " & Now
  if QueueActive(queueIdx) = False or bNewItem=False then   ' Nothing is running Or we just finished running something
    if PupQueueEndPos(queueIdx) <> -1 then
      QueueActive(queueIdx) = True
      qCmd=PupQueue(queueIdx, 0, 0)
      qTime=PupQueue(queueIdx, 0, 2)
'WriteToLog "     ", "Exec " & qCmd
'     on error resume next
      PupQueue(queueIdx, 0, 3)=True   ' Set MustRun to True so it cant get deleted while running
      Execute qCmd
'     if err.number <> 0 then MSGBox "EXEC Err: " & qCmd
'     On Error goto 0
'WriteToLog "     ", "Timer: " & qTime
      if qTime > 0 then
        QueueCurrentTime(queueIdx) = DateAdd("s",qTime/1000, now)
'WriteToLog "     ", QueueCurrentTime(queueIdx)
        tmrQueues(queueIdx).Interval = qTime
        tmrQueues(queueIdx).Enabled = True
        'vpmtimer.addtimer cInt(qTime), "RunQueue False '"
        QueuePop(queueIdx)
      Else      ' No timer just run the next item in the queue
        QueueCurrentTime(queueIdx) = 0
        QueuePop(queueIdx)
        RunQueue queueIdx, False
      End If
    Else
'WriteToLog "     ", "Queue Empty Deacivated"
      QueueActive(queueIdx) = False
    End If
  End if
End Sub

Sub SortPupQueue(queueIdx)
  dim a, j, temp1, temp2, temp3, temp4
  for a = PupQueueEndPos(queueIdx) - 1 To 0 Step -1
    for j= 0 to a
      if PupQueue(queueIdx, j, 1)>PupQueue(queueIdx, j+1, 1) then
        temp1=PupQueue(queueIdx, j+1,0 )
        temp2=PupQueue(queueIdx, j+1,1 )
        temp3=PupQueue(queueIdx, j+1,2 )
        temp4=PupQueue(queueIdx, j+1,3 )
        PupQueue(queueIdx, j+1,0 )=PupQueue(queueIdx, j,0 )
        PupQueue(queueIdx, j+1,1 )=PupQueue(queueIdx, j,1 )
        PupQueue(queueIdx, j+1,2 )=PupQueue(queueIdx, j,2 )
        PupQueue(queueIdx, j+1,3 )=PupQueue(queueIdx, j,3 )
        PupQueue(queueIdx, j, 0 )=temp1
        PupQueue(queueIdx, j, 1 )=temp2
        PupQueue(queueIdx, j, 2 )=temp3
        PupQueue(queueIdx, j, 3 )=temp4
      end if
    next
  next

End Sub



'**************************************************
'******** Debug routines
Dim bDebugMode:bDebugMode = False   ' Magna buttons perform debug functions
Dim debugEnableCount:debugEnableCount=0
Dim bDebugLeftMagnaDown:bDebugLeftMagnaDown=False
Dim bDebugRightMagnaDown:bDebugRightMagnaDown=False
dim DebugModeIndex:DebugModeIndex=-1
Sub HandleDebugDown(keycode)
' exit sub

  Dim i
  Dim Ball
  Dim bFirst:bFirst=False
  dim bFound:bFound=False
  If KeyCode = LeftMagnaSave then bDebugLeftMagnaDown = True
  If KeyCode = RightMagnaSave then bDebugRightMagnaDown = True
'WriteToLog "     ", "DEBUG L:" & bDebugLeftMagnaDown & " R:" & bDebugRightMagnaDown  & " " & debugEnableCount
  if (bDebugMode = False) Then  ' Turn on debug when you pres magnas together three times
    if (bDebugLeftMagnaDown and bDebugRightMagnaDown) then
      debugEnableCount=debugEnableCount+1
      if debugEnableCount = 3 then

        debugEnableCount=0
        if BallSearchCnt >0 then  ' go ahead and call operator to move it
          For each Ball in gBOT
            if Ball.radius > 23 then
              Ball.x = 750
              Ball.y = 1000
              Ball.z = 25
            End if
          Next
          PlaySoundVol "sfx-bat-phone1", 1
        End if

' Enable real debuggung
'       PlaySoundVol "mk-GetOverHere1", 1
'       bDebugMode = True
'       DebugModeIndex=-1
      End If
    End If
    Exit Sub
  End if

  if (bDebugLeftMagnaDown and bDebugRightMagnaDown = False) then
    vpmtimer.addtimer 200, "HandleDebugLeft '"
  Elseif (bDebugLeftMagnaDown = False and bDebugRightMagnaDown) then
    vpmtimer.addtimer 200, "HandleDebugRight '"
  elseif (bDebugLeftMagnaDown and bDebugRightMagnaDown) then  ' Setup for Wizard modes
    ' TBD Skip to higer modes here
    if DebugModeIndex<1 then
      DebugModeIndex=DebugModeIndex+1
      Select case DebugModeIndex
        case 0:                   ' Minor Villain Wizard
          SetSlowPulse lSeason1
          SetSlowPulse lSeason2
          SetSlowPulse lSeason3
          SetLightColor lSeason1, "", 2
          SetLightColor lSeason2, "", 2
          SetLightColor lSeason3, "", 2
          SetLightColor lBatman, "", 2
          SetLightColor lTV, "", 2
          SetLightFlasher flshBatSignal, 2
          PlaySoundVol "mk-fatality1", 1
        case 1:                   ' Villain Escape
          SetDefPulse lSeason1
          SetDefPulse lSeason2
          SetDefPulse lSeason3
          SetLightColor lSeason1, "", 0
          SetLightColor lSeason2, "", 0
          SetLightColor lSeason3, "", 0
          SetLightColor lBatman, "", 0
          SetLightColor lTV, "", 0
          SetLightFlasher flshBatSignal, 0

          ' Villain Escape
'         PlayerState(CurrentPlayer).setFinished(PlayerState(CurrentPlayer).SeasonIdx(kMajV_Joker))=True
'         PlayerState(CurrentPlayer).setFinished(PlayerState(CurrentPlayer).SeasonIdx(kMajV_Peng))=True
'         PlayerState(CurrentPlayer).setFinished(PlayerState(CurrentPlayer).SeasonIdx(kMajV_CatWoman))=True
'         PlayerState(CurrentPlayer).setFinished(PlayerState(CurrentPlayer).SeasonIdx(kMajV_Riddler))=True
          PlayerState(CurrentPlayer).VEscapeProgress(kMajV_CatWoman)=True
          PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Joker)=True
          PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Peng)=True
          PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Riddler)=True

          SetLightColor lCatwoman,"", 1
          SetLightColor lJoker,   "",  1
          SetLightColor lPeng,  "",1
          SetLightColor lRiddler, "", 1

          QualifyVillainEscape()

          PlaySoundVol "mk-fatality1", 1


      End Select
    End if


'   if DebugModeIndex=-1 then
''WriteToLog "     ", "First"
'     bFirst = True
'     DebugModeIndex=0
'   end if
'   for i = DebugModeIndex to kMajV_S2Riddler
'     if PlayerState(CurrentPlayer).isFinished(i)=False then  ' Not finished
''WriteToLog "     ", "DebugModeIndex:" & i & " Qual:" & PlayerState(CurrentPlayer).isQual(i)
'       ''if PlayerState(CurrentPlayer).isQual(i)=True then
'       if i=DebugModeIndex and bFirst=False then ' First one
'         'WriteToLog "     ", "Unqualify:" & i
'
'         StopSound "sfx-bat-phone1"
'         lBatPhone.TimerEnabled = False
'         SetLightColor lBatPhone, kBatPhoneColor, 0
'
'         PlayerState(CurrentPlayer).SetQual(i)=0   ' Unqualify this one
'         PlayerState(CurrentPlayer).SeTProgress(i)= PlayerState(CurrentPlayer).TProgress(i)-1
'         if i = kMajV_S1Riddler then
'           lRiddler.state = 0
'         elseif i = kMajV_S1CatWoman then
'           lCatwoman.state = 0
'         elseif i = kMajV_S2CatWoman then
'           lCatwoman.state = 0
'         elseif i = kMajV_S1Joker then
'           lJoker.state = 0
'         elseif i = kMajV_S1Peng then
'           lPeng.state = 0
'         End If
'       else
'
'         if i = kMajV_S1Riddler then
'           PlayerState(CurrentPlayer).SeTProgress(kMajV_S1Riddler)=1
'           ProgressRiddlerS1(lArrowRiddler1)
'           bFound=True
'           DebugModeIndex=i
'
'         elseif i = kMajV_S1CatWoman then
'           PlayerState(CurrentPlayer).LightState(kMajV_S1CatWoman, kLightCat3)=1
'           PlayerState(CurrentPlayer).SeTProgress(kMajV_S1CatWoman)=5
'           ProgressCatwomanS1(lArrowCat2)
'           bFound=True
'           DebugModeIndex=i
'
'         elseif i = kMajV_S2CatWoman then
'           PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat3)=1
'           PlayerState(CurrentPlayer).SeTProgress(kMajV_S2CatWoman)=5
'           ProgressCatwomanS2(lArrowCat2)
'           bFound=True
'           DebugModeIndex=i
'
'         elseif i = kMajV_S1Joker then
'           PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightJokerE, "red", 1
'           PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightJokerR, "red", 1
'           PlayerState(CurrentPlayer).SeTProgress(kMajV_S1Joker)=5
'           ProgressJokerS1(lArrowJoker)
'           bFound=True
'           DebugModeIndex=i
'
'         elseif i = kMajV_S1Peng then
'           PlayerState(CurrentPlayer).SeTProgress(kMajV_S1Peng)=1
'           ProgressPengS1(lArrowPenguin)
'           bFound=True
'           DebugModeIndex=i
'
'         End If
'       End If
'
'       if bFound then
'         PlaySoundVol "mk-fatality1", 1
'         Exit For
'       End If
'     End if
'   Next

  End If
End Sub
Sub HandleDebugUp(keycode)
' exit sub
  If KeyCode = LeftMagnaSave then bDebugLeftMagnaDown = False
  If KeyCode = RightMagnaSave then bDebugRightMagnaDown = False
End Sub

Sub HandleDebugLeft()
  Dim Ball
  if (bDebugLeftMagnaDown and bDebugRightMagnaDown = False) then
    if BallsOnPlayfield = 1 then
      For each Ball in gBOT
        Ball.VelY = 0
        Ball.VelX = 0
        Ball.VelZ = 0
        Ball.x = 275.8289
        Ball.y = 1720.073
        Ball.z = 25.00001
      Next
    End If
  End If
End Sub
Sub HandleDebugRight()
  Dim Ball
  if (bDebugLeftMagnaDown = False and bDebugRightMagnaDown) then
    if BallsOnPlayfield = 1 then
      For each Ball in gBOT
        Ball.VelY = 0
        Ball.VelX = 0
        Ball.VelZ = 0
        Ball.x = 586.0515
        Ball.y = 1721.877
        Ball.z = 25.00009
      Next
    End If
  End If
End Sub


tmrLightFade.Interval=50
dim colorIndex
colorIndex=True
Dim rgbLedValues(3)
rgbLedValues(0)=255
rgbLedValues(1)=0
rgbLedValues(2)=0
const RED  =0
const GREEN=1
const BLUE =2
const FADE_STEP = 5
const MAX_COLOR_VALUE = 255
Dim curFadingUp:curFadingUp = GREEN
Dim curFadingDown:curFadingDown = RED

Sub tmrLightFade_Timer


'// Increment and decrement the RGB LED values for the current
'// fade up color and the current fade down color
  rgbLedValues(curFadingUp) = rgbLedValues(curFadingUp) +FADE_STEP
  rgbLedValues(curFadingDown) = rgbLedValues(curFadingDown)-FADE_STEP

'  // Check to see if we've reached our maximum color value for fading up
'  // If so, go to the next fade up color (we go from RED to GREEN to BLUE
'  // as specified by the RGB enum)
  if rgbLedValues(curFadingUp) > MAX_COLOR_VALUE then
    rgbLedValues(curFadingUp) = MAX_COLOR_VALUE
    curFadingUp = curFadingUp + 1

    if curFadingUp > BLUE then
      curFadingUp = RED
    End If
  End If

'  // Check to see if the current LED we are fading down has gotten to zero
'  // If so, select the next LED to start fading down (again, we go from RED to
'  // GREEN to BLUE as specified by the RGB enum)
  if rgbLedValues(curFadingDown) < 0 Then
    rgbLedValues(curFadingDown) = 0
    curFadingDown = curFadingDown + 1

    if curFadingDown > BLUE Then
      curFadingDown = RED
    End If
  End If

'  // Set the color and then delay
  'setColor(rgbLedValues(RED), rgbLedValues(GREEN), rgbLedValues(BLUE))
  'delay(DELAY_MS)

''WriteToLog "     ", "RGB: " & rgbLedValues(RED) & "-" & rgbLedValues(GREEN) & "-" & rgbLedValues(BLUE)
  Dim color
  Color=RGB(rgbLedValues(RED), rgbLedValues(GREEN), rgbLedValues(BLUE))
  lArrowCat2.state = 1
  lArrowCat2.color = Color
  lArrowCat2.colorfull = Color
End Sub

'******************************************
' Change light color - simulate color leds
' changes the light color and state
' colors: red, orange, yellow, green, blue, white
'******************************************
Sub SetLightColor(n, col, stat)   ' States: 0=Off, 1=On, 2=Flash, 3=Flash On, 4=Flash Off
  SetLightColorTimed n, col, stat, 500
End Sub


Sub SetLightColorTimed(n, col, stat, msec)    ' States: 0=Off, 1=On, 2=Flash, 3=Flash On, 4=Flash Off
'WriteToLog "     ", "SetLightColor:" & n.name
    Select Case col
    Case "cyan"
      n.color = RGB(0, 128, 128)
      n.colorfull = RGB(0, 231, 231)
        Case "pink"
            n.color = RGB(18, 0, 18)
            n.colorfull = RGB(255, 0, 255)
        Case "red"
            n.color = RGB(255, 0, 0)
            n.colorfull = RGB(255, 0, 0)
        Case "orange"
            n.color = RGB(18, 3, 0)
            n.colorfull = RGB(255, 64, 0)
        Case "yellow"
            n.color = RGB(18, 18, 0)
            n.colorfull = RGB(255, 255, 0)
        Case "green"
            n.color = RGB(0, 128, 0)
            n.colorfull = RGB(0, 255, 0)
        Case "blue"
            n.color = RGB(0, 0, 128)
            n.colorfull = RGB(0, 128, 255)    '0, 0,255
        Case "blue-light"
            n.color = RGB(18, 18, 18)
            n.colorfull = RGB(18, 18, 255)
        Case "white"
            n.color = RGB(255, 255, 255)
            n.colorfull = RGB(255, 255, 255)
        Case "purple"
            n.color = RGB(128, 0, 128)
            n.colorfull = RGB(255, 0, 255)
        Case "amber"
            n.color = RGB(193, 49, 0)
            n.colorfull = RGB(255, 153, 0)
    End Select
    If stat <> -1 Then
        n.State = 0
    if stat=3 then    ' Flash then go to On
      n.State = 2
      vpmTimer.addTimer msec, n.name & ".state =1 '"
    elseif stat=4 then    ' Flash then go to Off
      n.State = 2
      vpmTimer.addTimer msec, n.name & ".state =0 '"
    Else
      n.State = stat
    End if
    End If
End Sub



'*****************************
'    Load / Save / Highscore
'*****************************

Sub Loadhs
  ' Load Orbital scores
  'GetScores
  Dim i
    Dim x

  ' Load Stats
  For i = 0 to 30
    x = LoadValue(TableName, "StatScore" & i)
    If(x <> "") and (x <>"0") Then
      StatScore(i) = CDbl(x)
    Else                    ' DEFAULT Values
      Select case i
        case 0: StatScore(i) = 20       ' Combo Champ
        case 1: StatScore(i) = 5      ' BEST n-way
        case 2: StatScore(i) = 15000000   ' BatTurn Champ
        case 3: StatScore(i) = 15000000   ' BatPhone Champ
        case 4: StatScore(i) = 100000000  ' Catwoman 19/20 Champ
        case 5: StatScore(i) = 100000000  ' Catwoman 108 Champ
        case 6: StatScore(i) = 100000000  ' Joker 5/6 Champ
        case 7: StatScore(i) = 100000000  ' Joker 104 Champ
        case 8: StatScore(i) = 100000000  ' Penguin 3/4 Champ
        case 9: StatScore(i) = 100000000  ' Penguin 95 Champ
        case 10: StatScore(i) = 100000000   ' Riddler 1/2 Champ
        case 11: StatScore(i) = 100000000   ' Riddler 96 Champ
        case 12: StatScore(i) = 150000000   ' Villain Escape Champion
        case 13: StatScore(i) = 50000000  ' BookWorm Champion
        case 14: StatScore(i) = 50000000  ' Egghead 47/48 Champion
        case 15: StatScore(i) = 50000000  ' Egghead 102/103 Champion
        case 16: StatScore(i) = 50000000  ' Egghead 109 Champion
        case 17: StatScore(i) = 50000000  ' KING TUT 27/28 Champion
        case 18: StatScore(i) = 50000000  ' KING TUT 41/42 Champion
        case 19: StatScore(i) = 50000000  ' KING TUT 87/88 Champion
        case 20: StatScore(i) = 50000000  ' KING TUT 100 Champion
        case 21: StatScore(i) = 50000000  ' KING TUT 117 Champion
        case 22: StatScore(i) = 50000000  ' MAD HATTER 13/14 Champion
        case 23: StatScore(i) = 50000000  ' MAD HATTER 69/70 Champion
        case 24: StatScore(i) = 50000000  ' MR. FREEZE 53/54  Champion
        case 25: StatScore(i) = 50000000  ' SHAME 59/60 Champion
        case 26: StatScore(i) = 50000000  ' SHAME 115/116  Champion
        case 27: StatScore(i) = 50000000  ' BATUSI Champion
        case 28: StatScore(i) = 50000000  ' GAS ATTACK Champion
        case 29: StatScore(i) = 50000000  ' HOLY Champion
        case 30: StatScore(i) = 250000000   ' BONUS Champion
      End Select

    End If
    x = LoadValue(TableName, "StatName" & i)
    If(x <> "")Then StatName(i) = x Else StatName(i) = "AAA" End If
  Next

    x = LoadValue(TableName, "HighScore1")
    If(x <> "")Then HighScore(0) = CDbl(x)Else HighScore(0) = 500000000 End If
    x = LoadValue(TableName, "HighScore1Name")
    If(x <> "")Then HighScoreName(0) = x Else HighScoreName(0) = "AAA" End If

    x = LoadValue(TableName, "HighScore2")
    If(x <> "")then HighScore(1) = CDbl(x)Else HighScore(1) = 400000000 End If
    x = LoadValue(TableName, "HighScore2Name")
    If(x <> "")then HighScoreName(1) = x Else HighScoreName(1) = "BBB" End If

    x = LoadValue(TableName, "HighScore3")
    If(x <> "")then HighScore(2) = CDbl(x)Else HighScore(2) = 350000000 End If
    x = LoadValue(TableName, "HighScore3Name")
    If(x <> "")then HighScoreName(2) = x Else HighScoreName(2) = "CCC" End If

    x = LoadValue(TableName, "HighScore4")
    If(x <> "")then HighScore(3) = CDbl(x)Else HighScore(3) = 300000000 End If
    x = LoadValue(TableName, "HighScore4Name")
    If(x <> "")then HighScoreName(3) = x Else HighScoreName(3) = "DDD" End If

    x = LoadValue(TableName, "HighScore5")
    If(x <> "")then HighScore(4) = CDbl(x)Else HighScore(4) = 250000000 End If
    x = LoadValue(TableName, "HighScore5Name")
    If(x <> "")then HighScoreName(4) = x Else HighScoreName(4) = "EEE" End If

    x = LoadValue(TableName, "Credits")
    If(x <> "")then Credits = CInt(x)Else Credits = 0 End If

    'x = LoadValue(TableName, "Jackpot")
    'If(x <> "") then Jackpot = CDbl(x) Else Jackpot = 200000 End If
    x = LoadValue(TableName, "TotalGamesPlayed")
    If(x <> "")then TotalGamesPlayed = CInt(x)Else TotalGamesPlayed = 0 End If
End Sub

Sub ClearAll()
  Clearhs
  SaveValue TableName,  "DMDStd_"&kDMDStd_Initials, ""
  SaveValue TableName,  "DMDStd_"&kDMDStd_ExtraBallLimit, ""
  SaveValue TableName,  "DMDStd_"&kDMDStd_ExtraBallPCT, ""
  SaveValue TableName,  "DMDStd_"&kDMDStd_TiltWarn, ""
  SaveValue TableName,  "DMDStd_"&kDMDStd_TiltDebounce, ""
  SaveValue TableName,  "DMDStd_"&kDMDStd_MatchPCT, ""
  SaveValue TableName,  "DMDStd_"&kDMDStd_LeftStartReset, ""
  SaveValue TableName,  "DMDStd_"&kDMDStd_BallSave, ""
  SaveValue TableName,  "DMDStd_"&kDMDStd_BallSaveExtend, ""

  SaveValue TableName,  "DMDFet_"&kDMDFet_SpinHitsForLevel, ""
  SaveValue TableName,  "DMDFet_"&kDMDFet_SpinStartLvl, ""
  SaveValue TableName,  "DMDFet_"&kDMDFet_SpinAddlLvl, ""
  SaveValue TableName,  "DMDFet_"&kDMDFet_SpinMaxLvl, ""
  SaveValue TableName,  "DMDFet_"&kDMDFet_ComissGShots, ""
  SaveValue TableName,  "DMDFet_"&kDMDFet_ComissGShotsAddl, ""
  SaveValue TableName,  "DMDFet_"&kDMDFet_ComissGShotsMax, ""
  SaveValue TableName,  "DMDFet_"&kDMDFet_TVModeSelectTmr, ""
  SaveValue TableName,  "DMDFet_"&kDMDFet_TVWizModeSelectTmr, ""
  SaveValue TableName,  "dmdCriticalChanged", ""

End Sub


Sub Savehs
  Dim i

    SaveValue TableName, "HighScore1", HighScore(0)
    SaveValue TableName, "HighScore1Name", HighScoreName(0)
    SaveValue TableName, "HighScore2", HighScore(1)
    SaveValue TableName, "HighScore2Name", HighScoreName(1)
    SaveValue TableName, "HighScore3", HighScore(2)
    SaveValue TableName, "HighScore3Name", HighScoreName(2)
    SaveValue TableName, "HighScore4", HighScore(3)
    SaveValue TableName, "HighScore4Name", HighScoreName(3)
    SaveValue TableName, "HighScore5", HighScore(4)
    SaveValue TableName, "HighScore5Name", HighScoreName(4)
    SaveValue TableName, "Credits", Credits
    'SaveValue TableName, "Jackpot", Jackpot
    SaveValue TableName, "TotalGamesPlayed", TotalGamesPlayed

  For i = 0 to 30
    if StatScore(i) <> 0 then
      SaveValue TableName, "StatScore" & i, StatScore(i)
      SaveValue TableName, "StatName" & i, StatName(i)
    End if
  Next

End Sub

Sub Clearhs
  Dim i
  For i = 0 to 30
    StatScore(i)=0
    StatName(i)=""
  Next

HighScore(0) = 500000000
HighScoreName(0) = "AAA"
HighScore(1) = 400000000
HighScoreName(1) = "BBB"
HighScore(2) = 350000000
HighScoreName(2) = "CCC"
HighScore(3) = 300000000
HighScoreName(3) = "DDD"
HighScore(4) = 250000000
HighScoreName(4) = "EEE"
    SaveValue TableName, "HighScore1", HighScore(0)
    SaveValue TableName, "HighScore1Name", HighScoreName(0)
    SaveValue TableName, "HighScore2", HighScore(1)
    SaveValue TableName, "HighScore2Name", HighScoreName(1)
    SaveValue TableName, "HighScore3", HighScore(2)
    SaveValue TableName, "HighScore3Name", HighScoreName(2)
    SaveValue TableName, "HighScore4", HighScore(3)
    SaveValue TableName, "HighScore4Name", HighScoreName(3)
    SaveValue TableName, "HighScore5", HighScore(4)
    SaveValue TableName, "HighScore5Name", HighScoreName(4)
End Sub

' ***********************************************************
'  High Score Initals Entry Functions - based on Black's code
' ***********************************************************

Dim tmrHSPaperRotation
Dim tmrHSPaperMsg1
Dim tmrHSPaperMsg2
Dim fntHSSize
dim fntHSY
Sub DoHighScoreScene(Text1, Text2)

'text1="1234567890 IS NEW MAD HATTER 13/14 CHAMPION"
'text1="1234567890 123456789 123456789 1234567"

  PuPlayer.LabelShowPage pOverVid, 4,0,""
  PuPlayer.PlayStop pOverVid
  PuPlayer.playlistplayex pOverVid,"PupVideos","paper" & INT(RND*3)+1 & ".mp4", 1, 1

  puPlayer.LabelSet pOverVid,"PaperL2", "" ,1,""

  tmrHSPaperMsg1=Text1
  tmrHSPaperMsg2=Text2
  tmrHSPaperRotation=360

  fntHSY=1
  fntHSSize=7
  if Len(Text1)>35 then fntHSSize= 7 - ((Len(Text1)-35)*0.22)
  puPlayer.LabelSet pOverVid,"PaperL1", "" ,1,"{'mt':2,'xalign':1,'ypos':25,'xpos':50,'size':"&fntHSSize&"}"
  puPlayer.LabelSet pOverVid,"PaperL2", "" ,1,"{'mt':2,'xalign':1,'ypos':40,'size':7}"
  tmrHSPaper.UserValue = 0
  tmrHSPaper.Interval = 10
  tmrHSPaper.Enabled = True
End Sub

Sub tmrHSPaper_Timer()
  tmrHSPaper.UserValue=tmrHSPaper.UserValue+1
  if tmrHSPaper.UserValue < 112 then
'   fntHSY=fntHSY+0.09
'   fntHSSize=fntHSSize+0.06
'   tmrHSPaperRotation=tmrHSPaperRotation-10
'   if tmrHSPaperRotation < 0 then tmrHSPaperRotation=360
'   puPlayer.LabelSet pOverVid,"PaperL1", tmrHSPaperMsg1 ,1,"{'mt':2,'xalign':1,'ypos':"& 40-fntHSY &",'xpos':50,'size':"&fntHSSize&", 'rotate':" & tmrHSPaperRotation*10 & "}"
  else
    puPlayer.LabelSet pOverVid,"PaperL1", tmrHSPaperMsg1 ,1,"{'mt':2,'xalign':1,'ypos':30,'xpos':50,'size':"&fntHSSize&"}"
    puPlayer.LabelSet pOverVid,"PaperL2", tmrHSPaperMsg2 ,1,"{'mt':2,'xalign':1,'ypos':40,'size':7}"
    VpmTimer.AddTimer 2000, "CheckHighScoresPlayer '"
    tmrHSPaper.Enabled=False
  End if
End Sub


Sub AwardSpecial

End Sub


Dim hsbModeActive
Dim hsbModeActive2
Dim hsEnteredName
Dim hsEnteredDigits(3)
Dim hsCurrentDigit
Dim hsValidLetters
Dim hsCurrentLetter
Dim hsLetterFlash
dim bHasName
dim hsGoBackIdx
Dim hsMAXStart:hsMAXStart=20
Dim hsMAX:hsMAX=10          'V                                                 26                                                  V
Dim hsStrSelect:hsStrSelect="N O P Q R S T U V W X Y Z : ; 0 1 2 3 4 5 6 7 8 9   A B C D E F G H I J K L M N O P Q R S T U V W X Y Z : ; 0 1 2 3 4 5 6 7 8 9   A B C D E F G H I J K L M "
Dim HSCheckPlayer
Dim PlayerHSCheckIdx
Dim hsCurrentPlace
Sub CheckHighscore(bInit)
  if bInit then

    ClearAllText pMVideo  ' Make sure all the text is clear
    ClearAllText pLVideo
    ClearAllText pRVideo
    ClearAllText pLVideo2

    hsbModeActive2=True
    HSCheckPlayer=0
    hsCurrentPlace=-1
  else
    HSCheckPlayer=HSCheckPlayer+1
    if HSCheckPlayer>PlayersPlayingGame-1 then
      hsbModeActive2=False
      EndOfBallComplete
      Exit Sub
    End if
  End if

''WriteToLog "     ", "Start Player " & HSCheckPlayer

  bHasName=False
  hsGoBackIdx=-1

  PlayerHSCheckIdx=0
  CheckHighScoresPlayer

End Sub

Function NeedName(idx)
  if bHasName=False then          ' go get the name if we dont have one
    hsGoBackIdx=idx
    PlayerHSCheckIdx=1
    CheckHighScoresPlayer
    NeedName=True
''WriteToLog "     ", "NeedName = TRUE"
  Else
    NeedName=False
''WriteToLog "     ", "NeedName = FALSE"
  End if
End Function


Sub CheckHighScoresPlayer()
  dim bSet:bSet=False

''WriteToLog "     ", "CheckHighScoresPlayer bHasName:" & bHasName & " hsGoBackIdx:" & hsGoBackIdx & " PlayerHSCheckIdx:" & PlayerHSCheckIdx

  if bHasName and hsGoBackIdx<> -1 then       ' Jump back to where we left off if we had to go back and get the name
    PlayerHSCheckIdx=hsGoBackIdx
    hsGoBackIdx = -1
  End if

  osbtempscore = Score(HSCheckPlayer)
  LastScore(HSCheckPlayer)=Score(HSCheckPlayer) ' Save off for attract later

  Select case PlayerHSCheckIdx
    Case 0: ' show first place newspaper
      if Score(HSCheckPlayer) > HighScore(4) then
        PlaySoundVol "sfx-hs-music1", VolSfx
        DoHighScoreScene "SECRET IDENTITY OF PLAYER " & (HSCheckPlayer+1), "TO BE REVEALED!!!"
        bSet=True
      End if

      if Score(HSCheckPlayer) > HighScore(0) then
        PlaySoundVol "b66-breaking-worlds-records", VolDef
      elseif Score(HSCheckPlayer) > HighScore(4) then
        PlaySoundVol "b66-enter-your-initials", VolDef
      end if

    Case 1: ' Enter Initials
      If Score(HSCheckPlayer) > HighScore(0) Then 'add 1 credit for beating the highscore
        AwardSpecial
      elseif  Score(HSCheckPlayer) >= HighScore(4) then
        PlayerHSCheckIdx=PlayerHSCheckIdx+1 ' Skip the next one
      else
        PlayerHSCheckIdx=PlayerHSCheckIdx+2 ' Skip the two
      End If

      ' Bail out on high score when auto testing
      If AutoQa=False and Score(HSCheckPlayer) >= HighScore(4) Then ' Overwrite the lowest
        bHasName=True
        vpmtimer.addtimer 2000, "PlaySoundVol ""say-greatScore"", VolDef '"
        HighScore(4) = Score(HSCheckPlayer)
        'enter player's name
        HighScoreEntryInit()
        bSet=True
      elseif AutoQA=False and hsGoBackIdx <> -1 then    ' Get name for Achievement
        bHasName=True
        HighScoreEntryInit()
        bSet=True
      Else
        if osbactive <> 0 then
          ' Submit to Orbital
          osbtemp = osbdefinit
          vpmtimer.addtimer 1000, "SubmitOSBScore(True) '"
          bSet=True
        End if
      End If
    case 2:   ' Grand Champ
      PlaySoundVol "sfx-hs-select", VolSfx
      vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
      DoHighScoreScene hsEnteredName & " IS NEW GRAND CHAMPION", "SCORES " & FormatScore(Score(HSCheckPlayer)) & "! AWARD 1 CREDIT!"
      PlayerHSCheckIdx=PlayerHSCheckIdx+1 ' Skip the next one
      bSet=True
    case 3:   ' Other HS
      PlaySoundVol "sfx-hs-select", VolSfx
      vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
      DoHighScoreScene hsEnteredName & " IS NEW HIGHSCORE #" & hsCurrentPlace, "SCORES " & FormatScore(Score(HSCheckPlayer)) & "! AWARD 1 CREDIT!"
      bSet=True
    case 4:   ' Combo Champ
      if PlayerState(HSCheckPlayer).comboCount > StatScore(0) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW COMBO CHAMPION", "SCORES " & PlayerState(HSCheckPlayer).comboCount & " COMBOS!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).comboCount
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 5:   ' BEST n-way
      if PlayerState(HSCheckPlayer).comboWayMax > StatScore(1) and PlayerState(HSCheckPlayer).comboWayMax>1 then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW BEST COMBO CHAMPION", PlayerState(HSCheckPlayer).comboWayMax & "-WAY COMBO!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).comboWayMax
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 6:   ' BatTurn Champ
      if PlayerState(HSCheckPlayer).Villains(kWiz_BatTurn).ModeHSTotal > StatScore(2) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW BAT TURN CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kWiz_BatTurn).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kWiz_BatTurn).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 7:   ' BatPhone Champ
      if PlayerState(HSCheckPlayer).BatPhoneHS > StatScore(3) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW BAT PHONE CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).BatPhoneHS) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).BatPhoneHS
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 8:   ' Catwoman 19/20 Champ
      if PlayerState(HSCheckPlayer).Villains(kMajV_S1CatWoman).ModeHSTotal > StatScore(4) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW CATWOMAN 19/20 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMajV_S1CatWoman).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMajV_S1CatWoman).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 9:   ' Catwoman 108 Champ
      if PlayerState(HSCheckPlayer).Villains(kMajV_S2CatWoman).ModeHSTotal > StatScore(5) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW CATWOMAN 108 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMajV_S2CatWoman).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMajV_S2CatWoman).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 10:    ' Joker 5/6 Champ
      if PlayerState(HSCheckPlayer).Villains(kMajV_S1Joker).ModeHSTotal > StatScore(6) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW JOKER 5/6 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMajV_S1Joker).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMajV_S1Joker).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 11:  ' Joker 104 Champ
      if PlayerState(HSCheckPlayer).Villains(kMajV_S2Joker).ModeHSTotal > StatScore(7) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW JOKER 104 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMajV_S2Joker).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMajV_S2Joker).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 12:  ' Penguin 3/4 Champ
      if PlayerState(HSCheckPlayer).Villains(kMajV_S1Peng).ModeHSTotal > StatScore(8) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW PENGUIN 3/4 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMajV_S1Peng).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMajV_S1Peng).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 13:  ' Penguin 95 Champ
      if PlayerState(HSCheckPlayer).Villains(kMajV_S2Peng).ModeHSTotal > StatScore(9) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW PENGUIN 95 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMajV_S2Peng).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMajV_S2Peng).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 14:  ' Riddler 1/2 Champ
      if PlayerState(HSCheckPlayer).Villains(kMajV_S1Riddler).ModeHSTotal > StatScore(10) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW RIDDLER 1/2 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMajV_S1Riddler).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMajV_S1Riddler).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 15:  ' Riddler 96 Champ
      if PlayerState(HSCheckPlayer).Villains(kMajV_S2Riddler).ModeHSTotal > StatScore(11) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW RIDDLER 96 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMajV_S2Riddler).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMajV_S2Riddler).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 16:  ' Villain Escape Champion
      if PlayerState(HSCheckPlayer).Villains(kWiz_VillainEscape).ModeHSTotal > StatScore(12) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW VILLAIN ESCAPE CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kWiz_VillainEscape).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kWiz_VillainEscape).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 17:  ' BookWorm Champion
      if PlayerState(HSCheckPlayer).Villains(kMinV_S1Bookworm).ModeHSTotal > StatScore(13) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW BOOKWORM 20/30 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMinV_S1Bookworm).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMinV_S1Bookworm).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 18:  ' Egghead 47/48 Champion
      if PlayerState(HSCheckPlayer).Villains(kMinV_S2EggHead).ModeHSTotal > StatScore(14) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW EGGHEAD 47/48 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMinV_S2EggHead).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMinV_S2EggHead).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 19:  ' Egghead 102/103 Champion
      if PlayerState(HSCheckPlayer).Villains(kMinV_S3EggHead1).ModeHSTotal > StatScore(15) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW EGGHEAD 102/103 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMinV_S3EggHead1).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMinV_S3EggHead1).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 20:  ' Egghead 109 Champion
      if PlayerState(HSCheckPlayer).Villains(kMinV_S3EggHead2).ModeHSTotal > StatScore(16) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW EGGHEAD 109 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMinV_S3EggHead2).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMinV_S3EggHead2).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 21:  ' KING TUT 27/28 Champion
      if PlayerState(HSCheckPlayer).Villains(kMinV_S1KingTut).ModeHSTotal > StatScore(17) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW KING TUT 27/28 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMinV_S1KingTut).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMinV_S1KingTut).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 22:  ' KING TUT 41/42 Champion
      if PlayerState(HSCheckPlayer).Villains(kMinV_S2KingTut1).ModeHSTotal > StatScore(18) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW KING TUT 41/42 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMinV_S2KingTut1).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMinV_S2KingTut1).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 23:  ' KING TUT 87/88 Champion
      if PlayerState(HSCheckPlayer).Villains(kMinV_S2KingTut2).ModeHSTotal > StatScore(19) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW KING TUT 87/88 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMinV_S2KingTut1).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMinV_S2KingTut2).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 24:  ' KING TUT 100 Champion
      if PlayerState(HSCheckPlayer).Villains(kMinV_S3KingTut1).ModeHSTotal > StatScore(20) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW KING TUT 100 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMinV_S3KingTut1).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMinV_S3KingTut1).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 25:  ' KING TUT 117 Champion
      if PlayerState(HSCheckPlayer).Villains(kMinV_S3KingTut2).ModeHSTotal > StatScore(21) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW KING TUT 117 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMinV_S3KingTut2).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMinV_S3KingTut2).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 26:  ' MAD HATTER 13/14 Champion
      if PlayerState(HSCheckPlayer).Villains(kMinV_S1MadHatter).ModeHSTotal > StatScore(22) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW MAD HATTER 13/14 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMinV_S1MadHatter).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMinV_S1MadHatter).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 27:  ' MAD HATTER 69/70 Champion
      if PlayerState(HSCheckPlayer).Villains(kMinV_S2MadHatter).ModeHSTotal > StatScore(23) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW MAD HATTER 69/70 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMinV_S2MadHatter).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMinV_S2MadHatter).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 28:  ' MR. FREEZE 53/54  Champion
      if PlayerState(HSCheckPlayer).Villains(kMinV_S2MrFreeze).ModeHSTotal > StatScore(24) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW MR. FREEZE 53/54 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMinV_S2MrFreeze).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMinV_S2MrFreeze).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 29:  ' SHAME 59/60 Champion
      if PlayerState(HSCheckPlayer).Villains(kMinV_S2Shame).ModeHSTotal > StatScore(25) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW SHAME 59/60 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMinV_S2Shame).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMinV_S2Shame).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 30:  ' SHAME 115/116  Champion
      if PlayerState(HSCheckPlayer).Villains(kMinV_S3Shame).ModeHSTotal > StatScore(26) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW SHAME 115/116 CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kMinV_S3Shame).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kMinV_S3Shame).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 31:  ' BATUSI Champion
      if PlayerState(HSCheckPlayer).Villains(kWiz_Batusi).ModeHSTotal > StatScore(27) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW BATUSI CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kWiz_Batusi).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kWiz_Batusi).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 32:  ' GAS ATTACK Champion
      if PlayerState(HSCheckPlayer).Villains(kWiz_GasAttack).ModeHSTotal > StatScore(28) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW GAS ATTACK CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kWiz_GasAttack).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kWiz_GasAttack).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 33:  ' HOLY Champion
      if PlayerState(HSCheckPlayer).Villains(kWiz_Holy).ModeHSTotal > StatScore(29) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW HOLY CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).Villains(kWiz_Holy).ModeHSTotal) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).Villains(kWiz_Holy).ModeHSTotal
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 34:  ' BONUS Champion
      if PlayerState(HSCheckPlayer).BonusHS > StatScore(30) then
        if NeedName(PlayerHSCheckIdx) then exit sub

        PlaySoundVol "sfx-hs-select", VolSfx
        vpmtimer.addtimer 1000, "PlaySoundVol ""sfx-hs-music3"", VolSfx '"
        DoHighScoreScene hsEnteredName & " IS NEW BONUS CHAMPION", "SCORES " & FormatScore(PlayerState(HSCheckPlayer).BonusHS) & "!"
        StatScore(PlayerHSCheckIdx-4)=PlayerState(HSCheckPlayer).BonusHS
        StatName(PlayerHSCheckIdx-4)=hsEnteredName
        bSet=True
      End if
    case 35:
      CheckHighscore(False)     ' Done, Go Check other players (If we have some)
      Exit Sub
  End Select

  PlayerHSCheckIdx=PlayerHSCheckIdx+1
  if bSet=False then            ' go to the next one
    CheckHighScoresPlayer
  End if
End Sub

Sub HighScoreEntryInit()
  Dim i

  hsMAX = DMDStd(kDMDStd_Initials)+1
  if hsMax=4 then hsMAXStart=35     ' where do fields start on the screen
  ' Reset underscores
  for i = 1 to 11
    puPlayer.LabelSet pBackglass,"EnterHS3" & i, " ", 1, "{mt:2,'xpos':" & hsMAXStart+(i*5) & "}"
    if i <= hsMax then
      puPlayer.LabelSet pBackglass,"EnterHSU3" & i, "_", 1, "{mt:2,'xpos':" & hsMAXStart+(i*5) & "}"
    else
      puPlayer.LabelSet pBackglass,"EnterHSU3" & i, "", 1, "{mt:2,'xpos':" & hsMAXStart+(i*5) & "}"
    End if
  Next

  ' Show Yellow Page
  PuPlayer.LabelShowPage pBackglass, 3,0,""
  PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"black.png",  1, 1

  puPlayer.LabelSet pBackglass,"EnterHS1", "Player " & HSCheckPlayer+1 & " - Enter Initials"    ,1,""
  if Score(HSCheckPlayer) > HighScore(0) then
    puPlayer.LabelSet pBackglass,"EnterHS2", "GRAND CHAMPION" ,1,""
    hsCurrentPlace=0
  Else
    if Score(HSCheckPlayer) > HighScore(1) then
      hsCurrentPlace=1
      puPlayer.LabelSet pBackglass,"EnterHS2", "HIGH SCORE #1" ,1,""
    elseif Score(HSCheckPlayer) > HighScore(2) then
      hsCurrentPlace=2
      puPlayer.LabelSet pBackglass,"EnterHS2", "HIGH SCORE #2" ,1,""
    elseif Score(HSCheckPlayer) > HighScore(3) then
      hsCurrentPlace=3
      puPlayer.LabelSet pBackglass,"EnterHS2", "HIGH SCORE #3" ,1,""
    elseif Score(HSCheckPlayer) > HighScore(4) then
      hsCurrentPlace=4
      puPlayer.LabelSet pBackglass,"EnterHS2", "HIGH SCORE #4" ,1,""
    else
      hsCurrentPlace=4
      puPlayer.LabelSet pBackglass,"EnterHS2", "HIGH SCORE" ,1,""
    End if
  End if
  hsEnteredName=""

    hsbModeActive = True
  PlaySoundLoopVol "sfx-hs-music2", VolSfx

    hsLetterFlash = 0

    hsEnteredDigits(0) = " "
    hsEnteredDigits(1) = " "
    hsEnteredDigits(2) = " "
    hsCurrentDigit = 1

    hsValidLetters = " ABCDEFGHIJKLMNOPQRSTUVWXYZ:;0123456789"    ' < is used to delete the last letter
    hsCurrentLetter = 2
' DMDId "hsc", "Enter", "Your Name", 999999
    HighScoreDisplayName()

    HighScoreFlashTimer.Interval = 100
    HighScoreFlashTimer.Enabled = True
End Sub

Sub HighScoreFlashTimer_Timer()
'    if(hsCurrentDigit <> hsMAX) then
        if(hsLetterFlash mod 2 =0) then
      puPlayer.LabelSet pBackglass,"EnterHSU3" & hsCurrentDigit, " " ,1,""
        else
      puPlayer.LabelSet pBackglass,"EnterHSU3" & hsCurrentDigit, "_" ,1,""
        end if

    if(hsLetterFlash=0) then
      puPlayer.LabelSet pBackglass,"EnterHS4Sel", "", 1, ""
        elseif(hsLetterFlash=3) then
      puPlayer.LabelSet pBackglass,"EnterHS4Sel", "[   ]", 1, "{'mt':2,'xpos':49.5}"
        end if

 '   end if
  hsLetterFlash=hsLetterFlash+1
  if hsLetterFlash=6 then hsLetterFlash=0
End Sub

Sub EnterHighScoreKey(keycode)
    If keycode = LeftFlipperKey Then
        PlaySoundVol "sfx-hs-left", VolSfx
        hsCurrentLetter = hsCurrentLetter - 1
        if(hsCurrentLetter = 0)then
            hsCurrentLetter = len(hsValidLetters)
        end if
        HighScoreDisplayName()
    End If

    If keycode = RightFlipperKey Then
        PlaySoundVol "sfx-hs-right", VolSfx
        hsCurrentLetter = hsCurrentLetter + 1
        if(hsCurrentLetter > len(hsValidLetters))then
            hsCurrentLetter = 1
        end if
        HighScoreDisplayName()
    End If

  ' Stern key - same as start key
  If (keycode = RightMagnaSave and bDebugLeftMagnaDown=False) or keycode = LockBarKey or _
      (keycode = PlungerKey and bUsePlungerForSternKey) Then
' just does the same as the start key
'   hsCurrentLetter = 29
'   HighScoreDisplayName()
    keycode = StartGameKey
  End if

    If keycode = StartGameKey Then
    if(mid(hsValidLetters, hsCurrentLetter, 1) = ";")then   ' Commit
      HighScoreCommitName()
        elseif(mid(hsValidLetters, hsCurrentLetter, 1) <> ":")then    ' Not Delete
      if hsCurrentDigit <> hsMAX then
        PlaySoundVol "sfx-hs-select", VolSfx

        HighScoreFlashTimer.Enabled=False
        hsEnteredName= hsEnteredName&mid(hsValidLetters, hsCurrentLetter, 1)
        puPlayer.LabelSet pBackglass,"EnterHSU3" & hsCurrentDigit, " " ,1,""
        hsCurrentDigit = hsCurrentDigit + 1
        HighScoreFlashTimer.Enabled=True

        if(hsCurrentDigit = hsMAX)then
          hsCurrentLetter = 29
          HighScoreDisplayName()
  '                HighScoreCommitName()
        else
          HighScoreDisplayName()
        end if
      End if
        else
      'PlaySoundVol "fx_Esc", VolDef

      HighScoreFlashTimer.Enabled=False
      puPlayer.LabelSet pBackglass,"EnterHS3" & hsCurrentDigit, "" ,1,""
      puPlayer.LabelSet pBackglass,"EnterHSU3" & hsCurrentDigit, "_" ,1,""
            if(hsCurrentDigit > 1)then
                hsCurrentDigit = hsCurrentDigit - 1
            end if
      HighScoreFlashTimer.Enabled=True
      hsEnteredName= mid(hsEnteredName, 1, hsCurrentDigit-1)
            HighScoreDisplayName()
        end if
'WriteToLog "     ", "NAME: " & hsEnteredName
    end if
End Sub

Sub HighScoreDisplayName()
Dim i, TempStr
  i = (32+hsCurrentLetter)*2
'WriteToLog "     ", "i=" & i
  puPlayer.LabelSet pBackglass,"EnterHS4", Mid(hsStrSelect, i-(13*2), (26*2)), 1,"{'mt':2,'xpos':2.8}"
  puPlayer.LabelSet pBackglass,"EnterHS3" & hsCurrentDigit, mid(hsValidLetters, hsCurrentLetter, 1) ,1,""
End Sub

Function RPad(StringToPad, Length, CharacterToPad)
  Dim x : x = 0
  If Length > Len(StringToPad) Then x = Length - len(StringToPad)
  RPad = StringToPad & String(x, CharacterToPad)
End Function

Sub HighScoreCommitName()
  Dim i
  StopSound "sfx-hs-music2"
  PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"batsignal1.png",  1, 1
  HighScoreFlashTimer.Enabled = False
  tmrHSHoldFlipper.Enabled = False
    hsbModeActive = False

    if(hsEnteredName = "")then
        hsEnteredName = "YOU"
    end if

  if hsGoBackIdx = -1 then          ' Save HS if they didnt just get an achievement
    HighScoreName(4) = hsEnteredName
    SortHighscore

  ' Submit to Orbital
  osbtemp = hsEnteredName
  SubmitOSBScore(False)

  End if


  puPlayer.LabelSet pBackglass,"EnterHS1", "",1,""
  puPlayer.LabelSet pBackglass,"EnterHS2", "",1,""
  puPlayer.LabelSet pBackglass,"EnterHS3", "",1,""
  puPlayer.LabelSet pBackglass,"EnterHS4", "",1,""

  for i = 1 to 10
    puPlayer.LabelSet pBackglass,"EnterHS3" &i, "",1,""
  Next

  pBGGamePlay
  CheckHighScoresPlayer
End Sub

Sub SortHighscore
    Dim tmp, tmp2, i, j
    For i = 0 to 4
        For j = 0 to 3
            If HighScore(j) < HighScore(j + 1)Then
                tmp = HighScore(j + 1)
                tmp2 = HighScoreName(j + 1)
                HighScore(j + 1) = HighScore(j)
                HighScoreName(j + 1) = HighScoreName(j)
                HighScore(j) = tmp
                HighScoreName(j) = tmp2
            End If
        Next
    Next
End Sub

'************************************************************************
'             Double rotating tables
'************************************************************************

Dim discPosition, discSpinSpeed, discLastPos, SpinCounter, maxvel, discStartPosition
dim spinAngle, degAngle, spinAngle2, degAngle2, startAngle, postSpeedFactor
dim discX, discY
startAngle = -15
discX = 510
discY = 840
PostSpeedFactor = 130'90

Const cDiscSpeedMult = 32 '35           ' Affects speed transfer to object (deg/sec)
Const cDiscFriction = 0.55  '1.0          ' Friction coefficient (deg/sec/sec)
Const cDiscMinSpeed = 0.05            ' Object stops at this speed (deg/sec)
'Const cDiscMinSpeed = 5            ' use this value if you want to enable DOF for lamp below in script
Const cDiscRadius = 60

'Wobble
Const cWobbleFriction = 2 ' 6         ' How much it bounces back and forth
Const discSpringConst = -70 ' -70       ' How hard it pulls back
Const discSpringAngle = 90 ' 30         ' Angle it tries to center to
Const discSpringRange = 70 ' 65 ' 25      ' Range of springyness
'End Wobble

'Const Pi=3.1415926535
Dim InPos, OutPos, CurMechPos: InPos = 0 : OutPos = 0
Dim PFBRad:PFBRad = SQR((RotatingPFA.X - RotatingPFB.X)^2 + (RotatingPFA.Y - RotatingPFB.Y)^2)
'Dim tvRad:tvRad= SQR((RotatingPFA.X - RPFA_TV.X)^2 + (RotatingPFA.Y - RPFA_TV.Y)^2)
Dim tvCRTRad:tvCRTRad = SQR((RotatingPFA.X - RotatingPFATV.X)^2 + (RotatingPFA.Y - RotatingPFATV.Y)^2)
Dim batCarRad:batCarRad = SQR((RotatingPFA.X - RPF_B_Batmobile.X)^2 + (RotatingPFA.Y - RPF_B_Batmobile.Y)^2)
Dim batPhoneRad:batPhoneRad = SQR((RotatingPFA.X - RPFA_Batphone.X)^2 + (RotatingPFA.Y - RPFA_Batphone.Y)^2)
Dim tgt1Rad:tgt1Rad= SQR((RotatingPFA.X - RPFA_Target01.X)^2 + (RotatingPFA.Y - RPFA_Target01.Y)^2)
Dim tgt2Rad:tgt2Rad= SQR((RotatingPFA.X - RPFA_Target02.X)^2 + (RotatingPFA.Y - RPFA_Target02.Y)^2)
Dim tgt3Rad:tgt3Rad= SQR((RotatingPFA.X - RPFA_Target03.X)^2 + (RotatingPFA.Y - RPFA_Target03.Y)^2)
Dim tgt4Rad:tgt4Rad= SQR((RotatingPFA.X - RPFA_Target04.X)^2 + (RotatingPFA.Y - RPFA_Target04.Y)^2)
Dim tgt5Rad:tgt5Rad= SQR((RotatingPFA.X - RPFA_Target05.X)^2 + (RotatingPFA.Y - RPFA_Target05.Y)^2)
Dim tgt6Rad:tgt6Rad= SQR((RotatingPFA.X - RPFA_Target06.X)^2 + (RotatingPFA.Y - RPFA_Target06.Y)^2)
dim tgt7Rad:tgt7Rad= SQR((RotatingPFA.X - RPFA_Target07.X)^2 + (RotatingPFA.Y - RPFA_Target07.Y)^2)
dim postRad:postRad= SQR((RotatingPFA.X - RPFA_BallLockPost.X)^2 + (RotatingPFA.Y - RPFA_BallLockPost.Y)^2)
'dim spinRad:spinRad= SQR((RotatingPFA.X - RPFA_SpinnerWire.X)^2 + (RotatingPFA.Y - RPFA_SpinnerWire.Y)^2)
Dim lockRad1:lockRad1= SQR((RotatingPFA.X - trgBallLock1.X)^2 + (RotatingPFA.Y - trgBallLock1.Y)^2)
Dim lockRad2:lockRad2= SQR((RotatingPFA.X - trgBallLock2.X)^2 + (RotatingPFA.Y - trgBallLock2.Y)^2)
Dim lockRad3:lockRad3= SQR((RotatingPFA.X - trgBallLock3.X)^2 + (RotatingPFA.Y - trgBallLock3.Y)^2)

Dim RPFB1rad:RPFB1rad= SQR((RotatingPFA.X - RPFB_OrangePlastic.X)^2 + (RotatingPFA.Y - RPFB_OrangePlastic.Y)^2)
Dim RPFB2rad:RPFB2rad= SQR((RotatingPFA.X - RPFB_BaseSticker.X)^2 + (RotatingPFA.Y - RPFB_BaseSticker.Y)^2)
Dim RPFA1rad:RPFA1rad= SQR((RotatingPFA.X - RPFA_Plywoodsides.X)^2 + (RotatingPFA.Y - RPFA_Plywoodsides.Y)^2)
Dim RPFA2rad:RPFA2rad= SQR((RotatingPFA.X - RFPA_TopPlastic.X)^2 + (RotatingPFA.Y - RFPA_TopPlastic.Y)^2)
Dim RPFA3rad:RPFA3rad= SQR((RotatingPFA.X - RPFA_MetalWallWire.X)^2 + (RotatingPFA.Y - RPFA_MetalWallWire.Y)^2)
Dim RPFA4rad:RPFA4rad= SQR((RotatingPFA.X - RPFA_Tower.X)^2 + (RotatingPFA.Y - RPFA_Tower.Y)^2)
Dim RPFA5rad:RPFA5rad= SQR((RotatingPFA.X - RPFA_Plastic.X)^2 + (RotatingPFA.Y - RPFA_Plastic.Y)^2)
Dim RPFA6rad:RPFA6rad= SQR((RotatingPFA.X - RPFA_NutsScrews.X)^2 + (RotatingPFA.Y - RPFA_NutsScrews.Y)^2)
Dim RPFA7rad:RPFA7rad= SQR((RotatingPFA.X - RPFA_BATPC33.X)^2 + (RotatingPFA.Y - RPFA_BATPC33.Y)^2)
Dim RPFA8rad:RPFA8rad= SQR((RotatingPFA.X - RPFA_BATPC34.X)^2 + (RotatingPFA.Y - RPFA_BATPC34.Y)^2)
Dim RPFA9rad:RPFA9rad= SQR((RotatingPFA.X - RPFA_ClearPosts001.X)^2 + (RotatingPFA.Y - RPFA_ClearPosts001.Y)^2)
Dim RPFA10rad:RPFA10rad= SQR((RotatingPFA.X - RPFA_Rubbers.X)^2 + (RotatingPFA.Y - RPFA_Rubbers.Y)^2)
Dim RPFA11rad:RPFA11rad= SQR((RotatingPFA.X - RPFA_ClearPosts.X)^2 + (RotatingPFA.Y - RPFA_ClearPosts.Y)^2)
Dim RPFA12rad:RPFA12rad= SQR((RotatingPFA.X - RPFA_RubberPart01.X)^2 + (RotatingPFA.Y - RPFA_RubberPart01.Y)^2)
Dim RPFA13rad:RPFA13rad= SQR((RotatingPFA.X - RPFA_RubberPart02.X)^2 + (RotatingPFA.Y - RPFA_RubberPart02.Y)^2)
Dim RPFA14rad:RPFA14rad= SQR((RotatingPFA.X - RotatingPFATV2.X)^2 + (RotatingPFA.Y - RotatingPFATV2.Y)^2)



Dim spinPost1Rad:spinPost1Rad= PFBRad
Dim spinPost2Rad:spinPost2Rad= PFBRad
dim TurnTableSpeed:TurnTableSpeed=0.5     ' higher=Faster
Sub TurnTable_Goto(newTT_Pos)
    TurnTable_GotoDelayed newTT_Pos, 0
End Sub

Sub TurnTable_GotoDelayed(newTT_Pos, delay)
  if newTT_Pos <> CurMechPos then
    tmrTurntable.Interval = delay
    tmrTurntable.userValue=newTT_Pos
    tmrTurntable.Enabled = True
    lPFBSpinner.state = 0
    lPFBSpinner2.state = 0

    if newTT_Pos <> kTT_Batcave Then                ' Disable these lights - Do we need to save the state?
      EnableBatCompPulse False
      EnableCrimeAnaPulse False
    End if

  End if
End Sub

Sub tmrTurntable_Timer
  tmrTurntable.Interval = 2200        ' Adds delay between the turns
  PlayLoopSoundAtVol SoundFX("Motor", DOFGear), RotatingPFA, VolTable
  DOF 154, DOFOn

  if tmrTurntable.userValue > CurMechPos then
    Select case CurMechPos
      case kTT_TV:
        UpdateJokerMech kTT_Phone, 100, 0
      case kTT_Phone:
        UpdateJokerMech kTT_Phone2, 100, 0
      case kTT_Phone2:
        UpdateJokerMech kTT_Batcave, 100, 0
      case kTT_Batcave:
        ' Cant get here??
    End Select
  Else
    Select case CurMechPos
      case kTT_Batcave:
        UpdateJokerMech kTT_Phone2, 100, 0
      case kTT_Phone2:
        UpdateJokerMech kTT_Phone, 100, 0
      case kTT_Phone:
        UpdateJokerMech kTT_TV, 100, 0
    End Select
  End if

  if tmrTurntable.userValue = CurMechPos then   ' Done
    tmrTurntable.Enabled = False
    bBallLockInit=False
  End if

  ' UpdateJokerMech kTT_Phone, 100, 0
' UpdateJokerMech kTT_Phone2, 100, 0
' UpdateJokerMech kTT_Batcave, 100, 0
' UpdateJokerMech 0, 100, 0
End Sub


Sub UpdatePFA_timer
''WriteToLog "     ", "timer-> " & InPos
  if InPos < CurMechPos then
    InPos = InPos + TurnTableSpeed
    if InPos > CurMechPos then InPos = CurMechPos
  elseif InPos > CurMechPos Then
    InPos = InPos - TurnTableSpeed
    if InPos < CurMechPos then InPos = CurMechPos
  else
'WriteToLog "     ", "Stopping at INPOS=" & InPos
    me.Enabled=false
    StopSound "Motor"
    DOF 154, DOFOff

    ' Hide Movers
    RPFA_Target01.Visible = False
    RPFA_Target02.Visible = False
    RPFA_Target03.Visible = False
    RPFA_Target04.Visible = False
    RPFA_Target05.Visible = False
    RPFA_Target06.Visible = False
    RPFA_Target07.Visible = False
    lPFBSpinner.state = 0
    lPFBSpinner2.state = 0

    Select case InPos
      case kTT_TV:
        RotatingPFAPos1.Collidable = True
        RotatingPFAPos2.Collidable = False
        RotatingPFAPos3.Collidable = False
        RotatingPFAPos4.Collidable = False
        RPFA_BallLockPos1.Collidable=True
        RPFA_Target01Pos1.Collidable=True:RPFA_Target01Pos1.Visible=True
        RPFA_Target02Pos1.Collidable=True:RPFA_Target02Pos1.Visible=True
        RPFA_Target03Pos1.Collidable=True:RPFA_Target03Pos1.Visible=True
        RPFA_Target04Pos1.Collidable=True:RPFA_Target04Pos1.Visible=True
        RotatingPFBTopPos4.Collidable=True
        OpenPFAGate(False)
        if bGameInPlay=False then       ' End of game/Entering HighScores, empty it
          EmptyBallLock
        elseif BallsInLockVirtual=3 then            ' Virtual Lock, add 2 multiballs
'WriteToLog "     ", "Empty " & BallsInLockVirtual & " " & BallsInLock
          if BallsInLockVirtual-BallsInLock <> 0 then
            AddMultiball BallsInLockVirtual-BallsInLock     ' Add missing ones before we reset it
          End if
          'EmptyBallLock                    ' Wait to do this until we say holy-multiball
          bAddABallGiven=False                ' Reset the add-a-ball since they get 1
          EnableBallSaver 20
          BallsInLockVirtual=0
        End if

        CheckProgress(cTT_TV)
      case kTT_Phone:
        RotatingPFAPos1.Collidable = False
        RotatingPFAPos2.Collidable = True
        RotatingPFAPos3.Collidable = False
        RotatingPFAPos4.Collidable = False
        RPFA_BallLockPos2.Collidable=True
        RPFA_Target01Pos2.Collidable=True:RPFA_Target01Pos2.Visible=True
        RPFA_Target02Pos2.Collidable=True:RPFA_Target02Pos2.Visible=True
        RPFA_Target03Pos2.Collidable=True:RPFA_Target03Pos2.Visible=True
        RPFA_Target04Pos2.Collidable=True:RPFA_Target04Pos2.Visible=True
        RPFA_Target07Pos2.Collidable=True:RPFA_Target07Pos2.Visible=True
        OpenPFAGate(False)
        CheckProgress(cTT_Phone)
      case kTT_Phone2:
        RotatingPFAPos1.Collidable = False
        RotatingPFAPos2.Collidable = False
        RotatingPFAPos3.Collidable = True
        RotatingPFAPos4.Collidable = False
        RPFA_Target03Pos3.Collidable=True:RPFA_Target03Pos3.Visible=True
        RPFA_Target04Pos3.Collidable=True:RPFA_Target04Pos3.Visible=True
        RPFA_Target05Pos3.Collidable=True:RPFA_Target05Pos3.Visible=True
        RPFA_Target06Pos3.Collidable=True:RPFA_Target06Pos3.Visible=True
        RPFA_Target07Pos3.Collidable=True:RPFA_Target07Pos3.Visible=True
        OpenPFAGate(False)
        CheckProgress(cTT_Phone2)
      case kTT_Batcave:
        lPFBSpinner.state = 1
        lPFBSpinner2.state = 1
        RotatingPFAPos1.Collidable = False
        RotatingPFAPos2.Collidable = False
        RotatingPFAPos3.Collidable = False
        RotatingPFAPos4.Collidable = True
        RPFA_BallLockPos4.Collidable=False
        RPFA_BallLockPost.Visible=False
        RPFA_Target05Pos4.Collidable=True:RPFA_Target05Pos4.Visible=True
        RPFA_Target06Pos4.Collidable=True:RPFA_Target06Pos4.Visible=True
        RPFA_Target07Pos4.Collidable=True:RPFA_Target07Pos4.Visible=True
        'OpenPFAGate(True)
        'EnableBallLock(True)
        CheckProgress(cTT_Batcave)
    End Select

    RotatingPFAGuard.IsDropped = True

  end if
  if InPos <=0 then outpos = InPos
  UpdateObjects
End Sub

Sub UpdateJokerMech(aCurrPos,aSpeed,aLastPos)
'WriteToLog "     ", "Update Joker"
  CurMechPos = aCurrPos

  ' Disable Current
  RPFA_Target01Pos1.Collidable=False:RPFA_Target01Pos1.Visible=False
  RPFA_Target02Pos1.Collidable=False:RPFA_Target02Pos1.Visible=False
  RPFA_Target03Pos1.Collidable=False:RPFA_Target03Pos1.Visible=False
  RPFA_Target04Pos1.Collidable=False:RPFA_Target04Pos1.Visible=False
  RPFA_Target01Pos2.Collidable=False:RPFA_Target01Pos2.Visible=False
  RPFA_Target02Pos2.Collidable=False:RPFA_Target02Pos2.Visible=False
  RPFA_Target03Pos2.Collidable=False:RPFA_Target03Pos2.Visible=False
  RPFA_Target04Pos2.Collidable=False:RPFA_Target04Pos2.Visible=False
  RPFA_Target07Pos2.Collidable=False:RPFA_Target07Pos2.Visible=False
  RPFA_Target03Pos3.Collidable=False:RPFA_Target03Pos3.Visible=False
  RPFA_Target04Pos3.Collidable=False:RPFA_Target04Pos3.Visible=False
  RPFA_Target05Pos3.Collidable=False:RPFA_Target05Pos3.Visible=False
  RPFA_Target06Pos3.Collidable=False:RPFA_Target06Pos3.Visible=False
  RPFA_Target07Pos3.Collidable=False:RPFA_Target07Pos3.Visible=False
  RPFA_Target05Pos4.Collidable=False:RPFA_Target05Pos4.Visible=False
  RPFA_Target06Pos4.Collidable=False:RPFA_Target06Pos4.Visible=False
  RPFA_Target07Pos4.Collidable=False:RPFA_Target07Pos4.Visible=False
  RPFA_BallLockPos1.Collidable=False
  RPFA_BallLockPos2.Collidable=False
  RPFA_BallLockPost.Visible=True
  RotatingPFBTopPos4.Collidable=False
  EnableBallLock(False)

  ' Show Movers
  RPFA_Target01.Visible = True
  RPFA_Target02.Visible = True
  RPFA_Target03.Visible = True
  RPFA_Target04.Visible = True
  RPFA_Target05.Visible = True
  RPFA_Target06.Visible = True
  RPFA_Target07.Visible = True
  RotatingPFAGuard.IsDropped = False


  'UpdatePFA.Interval =40
  UpdatePFA.Enabled = 1
End Sub

Sub UpdateObjects
  ' Centered at origin just spin
  RotatingPFA.RotZ = InPos
  Flasherbase1.RotY= InPos
  'RPFA_Reactor.RotZ = InPos

  ' Everything else do the math
  DoRotate RotatingPFA, RotatingPFB, PFBRad, InPos, 180
  DoRotate RotatingPFA, RPFB_OrangePlastic, RPFB1rad, InPos, 180
  DoRotate RotatingPFA, RPFB_BaseSticker, RPFB2rad, InPos, 180
  'DoRotate RotatingPFA, RPFA_TV, tvRad, InPos, 0

  DoRotate RotatingPFA, RPFA_Plywoodsides, RPFA1rad, InPos, 0
  DoRotate RotatingPFA, RFPA_TopPlastic, RPFA2rad, InPos, 0
  DoRotate RotatingPFA, RPFA_MetalWallWire, RPFA3rad, InPos, 16
  DoRotate RotatingPFA, RPFA_Tower, RPFA4rad, InPos, 0
  DoRotate RotatingPFA, RPFA_Plastic, RPFA5rad, InPos, 0
  DoRotate RotatingPFA, RPFA_NutsScrews, RPFA6rad, InPos, 0
  DoRotate RotatingPFA, RPFA_BATPC33, RPFA7rad, InPos, -115
  DoRotate RotatingPFA, RPFA_BATPC34, RPFA8rad, InPos, 115
  DoRotate RotatingPFA, RPFA_ClearPosts001, RPFA9rad, InPos, 0
  DoRotate RotatingPFA, RPFA_Rubbers, RPFA10rad, InPos, 20
  DoRotate RotatingPFA, RPFA_ClearPosts, RPFA11rad, InPos, 285
  DoRotate RotatingPFA, RPFA_RubberPart01, RPFA12rad, InPos, 293
  DoRotate RotatingPFA, RPFA_RubberPart02, RPFA13rad, InPos, 293
  DoRotate RotatingPFA, RotatingPFATV2, RPFA14rad, InPos, 0

  DoRotate RotatingPFA, RotatingPFATV, tvCRTRad, InPos, 3.5
  DoRotate RotatingPFA, RPF_B_Batmobile, batCarRad, InPos, 180
  DoRotate RotatingPFA, RPFA_Batphone, batPhoneRad, InPos, -70
  DoRotate RotatingPFA, RPFA_Target01, tgt1Rad, InPos, 14
  DoRotate RotatingPFA, RPFA_Target02, tgt2Rad, InPos, -14
  DoRotate RotatingPFA, RPFA_Target03, tgt3Rad, InPos, -45
  DoRotate RotatingPFA, RPFA_Target04, tgt4Rad, InPos, -66
  DoRotate RotatingPFA, RPFA_Target05, tgt5Rad, InPos, 240
  DoRotate RotatingPFA, RPFA_Target06, tgt6Rad, InPos, 120
  DoRotate RotatingPFA, RPFA_Target07, tgt7Rad, InPos, 0
  DoRotate RotatingPFA, RPFA_BallLockPost, postRad, InPos, 53
  'DoRotate RotatingPFA, RPFA_SpinnerWire, spinRad, InPos, 180
  if BallsInLock>=1 then DoRotate RotatingPFA, LockedBall1, 158, InPos,100
  if BallsInLock>=2 then DoRotate RotatingPFA, LockedBall2, 144.5, InPos, 82
  if BallsInLock>=3 then DoRotate RotatingPFA, LockedBall3, 150, InPos, 60
End Sub

Sub DoRotate(Primary, Secondary, SecondaryRad, Rot, RotOffset)
  if isNull(Secondary) then
    MsgBox "ERROR: Cant access locked ball: " & BallsInLock
    exit sub
  End if
  Secondary.X = Primary.X - SecondaryRad * sin ((Rot+RotOffset) * Pi/180)
  Secondary.Y = Primary.Y + SecondaryRad * cos ((Rot+RotOffset) * Pi/180)
  if typename(Secondary) <> "IBall" then
    Secondary.RotZ = Rot
  Else
    Secondary.velx = 0.05
    Secondary.vely = 0.05
    Secondary.velz = 0
  End If
End Sub

Sub tmrFake_Timer
  ' move the post X,Y
  'DoRotate RotatingPFA, postBall1, spinPost1Rad, InPos, 145
  'DoRotate RotatingPFA, postBall2, spinPost2Rad, InPos, 215

  ' Handle PFB
  discX=RotatingPFB.X
  discY=RotatingPFB.Y

  Dim oldDiscSpeed, discFriction
  oldDiscSpeed = discSpinSpeed

  discPosition = discPosition + discSpinSpeed * Me.Interval / 1000

  if ABS(discSpinSpeed) < 200 Then
    discFriction = cWobbleFriction ' was 6
  else
    discFriction = cDiscFriction
  end if
  discSpinSpeed = discSpinSpeed * (1 - discFriction * Me.Interval / 1000)

  Do While discPosition < 0 : discPosition = discPosition + 360 : Loop
  Do While discPosition > 360 : discPosition = discPosition - 360 : Loop

  'WobblediscSpringAngle

  Dim UpperRange, LowerRange
  UpperRange = discSpringAngle + discSpringRange
  LowerRange = discSpringAngle - discSpringRange

''WriteToLog "     ", "Angle:" & discPosition & " Lower:" & LowerRange & " Upper:" & UpperRange & " " & discSpinSpeed
  If abs(discSpinSpeed) < 400 Then
    if  (abs(discSpinSpeed) < 50 and discPosition>70 and discPosition<110) or _
      (abs(discSpinSpeed) < 50 and discPosition>250 and discPosition<290) then
      ' Do nothing here so we have a dead spot it can get stuck like the real table
    elseIf discPosition > LowerRange and discPosition < discSpringAngle Then
      discSpinSpeed = newDiscSpinSpeed(discSpinSpeed ,discPosition - LowerRange, Me.Interval / 1000)
    ElseIf discPosition > discSpringAngle and discPosition < UpperRange  Then
      discSpinSpeed = newDiscSpinSpeed(discSpinSpeed ,discPosition - UpperRange, Me.Interval / 1000)
    ElseIf discPosition > LowerRange+180 and discPosition < discSpringAngle+180 Then
      discSpinSpeed = newDiscSpinSpeed(discSpinSpeed ,discPosition - LowerRange - 180, Me.Interval / 1000)
    ElseIf discPosition > discSpringAngle+180 and discPosition < UpperRange+180  Then
      discSpinSpeed = newDiscSpinSpeed(discSpinSpeed ,discPosition - UpperRange - 180, Me.Interval / 1000)
    End if
  End If
  'End Wobble

  If Abs(discSpinSpeed) < cDiscMinSpeed Then
    discSpinSpeed = 0
  End If

  If discSpinSpeed < 0 and discPosition < 210 and discPosition > 30 and discLastPos <> 180 Then
    'PlaySoundAt SoundFX("fx_lamp",DOFGear), RotatingPFB
    'if b2son then vpmTimer.PulseSw 56
    discLastPos = 180
  ElseIf discSpinSpeed < 0 and (discPosition >= 210  or discPosition < 30) and discLastPos <> 360 Then
    'PlaySoundAt SoundFX("fx_lamp",DOFGear), RotatingPFB
    'if b2son then vpmTimer.PulseSw 56
    discLastPos = 360
  ElseIf discSpinSpeed > 0 and discPosition < 210  and discPosition > 30 and discLastPos <> 180 Then
    'PlaySoundAt SoundFX("fx_lamp",DOFGear), RotatingPFB
    'if b2son then vpmTimer.PulseSw 57
    discLastPos = 180
  ElseIf discSpinSpeed > 0 and (discPosition >= 210  or discPosition < 30) and discLastPos <> 360 Then
    'PlaySoundAt SoundFX("fx_lamp",DOFGear), RotatingPFB
    'if b2son then vpmTimer.PulseSw 57
    discLastPos = 360
  End If

  degAngle = -180 + startAngle + discPosition
  degAngle2 = degAngle + 180

  spinAngle = PI * (degAngle) / 180
  spinAngle2 = PI * (degAngle2) / 180


  On error resume next                      ' Only happens when submitting to orbital
    postBall1.x = discX + (cDiscRadius * Cos(spinAngle))
    postBall1.y = discY + (cDiscRadius * Sin(spinAngle))
    postBall1.z = 25

    If ABS(discSpinSpeed*sin(spinAngle)/postSpeedFactor) < 0.05 Then
      postBall1.velx = 0.05
    Else
      postBall1.velx = - discSpinSpeed*sin(spinAngle)/postSpeedFactor
    End If

    If Abs(discSpinSpeed*cos(spinAngle)/postSpeedFactor) < 0.05 Then
      postBall1.vely = 0.05
    Else
      postBall1.vely = discSpinSpeed*cos(spinAngle)/postSpeedFactor   '0.05
    End If

    postBall1.velz = 0


    postBall2.x = discX + (cDiscRadius * Cos(spinAngle2))
    postBall2.y = discY + (cDiscRadius * Sin(spinAngle2))
    postBall2.z = 25

    craneBall.x = CraneSpring.x
    craneBall.y = CraneSpring.y
    craneBall.velz = 0

    If ABS(discSpinSpeed*sin(spinAngle2)/postSpeedFactor) < 0.05 Then
      postBall2.velx = 0.05
    Else
      postBall2.velx = - discSpinSpeed*sin(spinAngle2)/postSpeedFactor
    End If

    If Abs(discSpinSpeed*cos(spinAngle2)/postSpeedFactor) < 0.05 Then
      postBall2.vely = 0.05
    Else
      postBall2.vely = discSpinSpeed*cos(spinAngle2)/postSpeedFactor    '0.05
    End If

    postBall2.velz = 0
  On error goto 0


  ' Send events every 10 degrees
''WriteToLog "     ", "ROT:" & discSpinSpeed & " " & discStartPosition & " " & discPosition
  if abs(discStartPosition - discPosition) > 15 then
    if CurMechPos=kTT_Batcave then PlaySoundVol "sfx-bat-turn" & INT(RND*6)+1, VolSfx
  End if

  if abs(discStartPosition - discPosition) > 10 then
    discStartPosition=discPosition
    ProgressBatTurn(swBatmobileRotate)    ' Just do this one so we dont flood everything with events
  End if


  RotatingPFB.objrotz = discPosition
  RPF_B_Batmobile.objrotz = discPosition
  RPFB_OrangePlastic.objrotz= discPosition
  RPFB_BaseSticker.objrotz= discPosition


' if BallsInLock>=1 then DoRotate RotatingPFA, LockedBall1, 158, InPos,100
' if BallsInLock>=2 then DoRotate RotatingPFA, LockedBall2, 144.5, InPos, 82
' if BallsInLock>=3 then DoRotate RotatingPFA, LockedBall3, 150, InPos, 60

End sub

Function newDiscSpinSpeed(spinspeed, springangle, springtime)
  newDiscSpinSpeed = spinspeed + discSpringConst * springangle * springtime
End Function


'************************************************************************
'             CRANE MOTOR
'************************************************************************

Dim CranePos, CraneSpeed, MotorSnd, CurMech1Pos : MotorSnd = 0 : CranePos = -20: CraneSpeed=1
Dim springRadius:springRadius = SQR((CraneModel.X - CraneSpring.X)^2 + (CraneModel.Y - CraneSpring.Y)^2)

Dim CranePosIdx
Sub CraneGoto(Pos)
  Dim i: For each i in CraneHit:i.IsDropped=1 : Next
  CranePosIdx= pos
  Select Case CranePosIdx
    case 0:
      UpdateCraneMech -20,10, 0
    case 1:
      UpdateCraneMech -4, 10, 0
    case 2:
      UpdateCraneMech 8.5,10, 0
    case 3:
      UpdateCraneMech 22, 10, 0
    case 4:
      UpdateCraneMech 38, 10, 0
    case 5:
      UpdateCraneMech 70, 10, 0
  End Select
End Sub

Sub CraneHit_Hit(idx)
  SetShotMultiplier2 lCrane0, idx, False    ' Support Crane shots multipliers
  CheckProgress(lCrane0)
  SetShotMultiplier2 lCrane0, idx, True
' PlaySound("fx_collide"), 0, Csng(BallVel(ActiveBall)) ^2 / 500, Pan(ActiveBall), 0, Pitch(ActiveBall), 0, 0, AudioFade(ActiveBall)

  'collision sound
  dim snd
  Select Case Int(Rnd * 7) + 1
    Case 1
      snd = "Ball_Collide_1"
    Case 2
      snd = "Ball_Collide_2"
    Case 3
      snd = "Ball_Collide_3"
    Case 4
      snd = "Ball_Collide_4"
    Case 5
      snd = "Ball_Collide_5"
    Case 6
      snd = "Ball_Collide_6"
    Case 7
      snd = "Ball_Collide_7"
  End Select
  PlaySound (snd), 0, CSng(BallVel(ActiveBall)) ^ 2 / 200 * BallWithBallCollisionSoundFactor * VolumeDial, AudioPan(activeball), 0, Pitch(activeball), 0, 0, AudioFade(activeball)

  DOF 153, DOFPulse 'crane hit
End Sub

Sub UpdateCrane_timer
''WriteToLog "     ", "Crane Pos:" & CranePos
  if CranePos < CurMech1Pos then
    CranePos = CranePos + (0.1 * CraneSpeed)
    if CranePos > CurMech1Pos then CranePos = CurMech1Pos
  elseif CranePos > CurMech1Pos Then
    CranePos = CranePos - (0.1 * CraneSpeed)
    if CranePos < CurMech1Pos then CranePos = CurMech1Pos
  else
    CraneHit(CranePosIdx).isDropped=0
    me.Enabled=false : ShakeBall : StopSound "IdolMotor":StopSound "Motor":MotorSnd=0
    DOF 154, DOFOff 'Gear motor off
  end if
  UpdateParts
End Sub

Sub UpdateCraneMech(aCurrPos,aSpeed,aLastPos)
' CurMech1Pos = 250 - aCurrPos
  aSpeed=1            ' Force
  CurMech1Pos = aCurrPos
  UpdateCrane.Interval=2
  UpdateCrane.Enabled = 1
  CraneSpeed=aSpeed
  If aSpeed=0 Then
    StopSound "Motor":MotorSnd=0
  Else
    If MotorSnd=0 Then PlayLoopSoundAtVol SoundFX("Motor", DOFGear), craneModel, VolTable: MotorSnd=1
    DOF 154, DOFOn  'Gear motor ON
  End If
End Sub

Sub UpdateParts
    craneModel.rotz=CranePos
  DoRotate craneModel, craneSpring, springRadius, CranePos, 0
  DoRotate craneModel, craneBall, springRadius, CranePos, 0
  RotateFlasher 9, -20 + CranePos
End Sub


Dim bou,brake,perc
Dim bou2,brake2,perc2

Sub ShakeBall
  perc2=1   ' How hard to shake.  Default was 3
  ShakeTimer.enabled=1
End Sub

Sub ShakeTimer_timer()
  bou2=bou2+0.4:brake2=brake2+0.02
  craneSpring.transX=sin(bou2)*(perc2-(brake2*(perc2/6)))
  If (perc2-(brake2*(perc2/6)))<0 Then Me.Enabled = 0 :bou2=0 :brake2=0 :perc2=0
End Sub


' ***************************************************************************************************************
'                                         Animate Pup Label Size & ypos at the same time
Class clsAnimation
  Public ani_Screen
  Public ani_LabelName
  Public ani_yInc
  Public ani_sizeInc
  Public ani_endCount
  Public ani_count
  Public ani_Size
  Public ani_y
  Public ani_Text
  Public ani_Enabled
  Public ani_Cancelled
End Class
Dim AnimateArray(10)
Dim aniDict
'set aniDict = New cvpmDictionary  ' this seems to hide errors
set aniDict = CreateObject("Scripting.Dictionary")
Sub AnimateLabelCancel(LabelName)
'WriteToLog "     ", "AnimateLabelCancel:" & LabelName
  On error Resume next
    aniDict.Item(LabelName).ani_Cancelled = True
  On Error goto 0
End Sub

Sub AnimateLabel(Screen, LabelName, yStart, yEnd, sizeStart, sizeEnd, msecLen, text, initialDelay)
'WriteToLog "     ", "AddLabel:" & LabelName
  dim thisAni
  Set thisAni = new clsAnimation

  thisAni.ani_Screen = Screen
  thisAni.ani_LabelName = LabelName
  thisAni.ani_endCount = msecLen/10
  thisAni.ani_Text = text
  thisAni.ani_sizeInc = (sizeEnd-sizeStart)/thisAni.ani_endCount
  thisAni.ani_yInc = (yEnd-yStart)/thisAni.ani_endCount
  thisAni.ani_Size=sizeStart
  thisAni.ani_y = yStart
  thisAni.ani_count=0
  thisAni.ani_Enabled=False
  thisAni.ani_Cancelled=False

  'Add fails if the key already exists according to below linked spec.
  'I do wonder why this does not fail on windows, or maybe this is ignored somewhere?
  'https://learn.microsoft.com/en-us/office/vba/language/reference/user-interface-help/add-method-dictionary#remarks
  if aniDict.Exists(LabelName) then aniDict.Remove LabelName

  aniDict.add LabelName, thisAni
  vpmTimer.AddTimer initialDelay, "aniDict.Item(""" & LabelName & """).ani_Enabled = True:tmrPupAnimation.Enabled = True '"
End Sub

Sub tmrPupAnimation_Timer
  dim obj
  Dim Found
  Found = False
''WriteToLog "     ", "tmrPupAnimation_Timer"
  for each obj in aniDict.Items
    if obj.ani_Enabled and obj.ani_Cancelled=False then
''WriteToLog "     ", "Process:" & obj.ani_LabelName & " " & obj.ani_y & " " & obj.ani_count & " " & obj.ani_endCount
      Found=True
      puPlayer.LabelSet obj.ani_Screen, obj.ani_LabelName, obj.ani_Text, 1, "{'mt':2, 'size': "&obj.ani_Size&",'ypos': "&obj.ani_y& ",'shadowcolor':0, 'shadowstate': 1, 'xoffset': 2, 'yoffset': 2, 'outline':1}"

      obj.ani_count=obj.ani_count+1
      obj.ani_Size=obj.ani_Size+obj.ani_sizeInc
      obj.ani_y=obj.ani_y+obj.ani_yInc

      if obj.ani_count >= obj.ani_endCount then
''WriteToLog "     ", "Removed.."
        obj.ani_Enabled = False
      End if
    End if
  Next

  if Not Found Then ' Nothing active (save cycles)
    tmrPupAnimation.Enabled = False
  End If
End Sub

' ***************************************************************************************************************
'                                         BONUS MODES
'
' BonusAddModeHit - Each time you hit a target in a mode you get a base bonus value added
' BonusAddMode    - For targets that increase the more you hit them this will increase the value and add the score
'         BonusModeValue - Stores the current value for this mode
'         BonusModeTotal - Stores the total of all the value so the end of ball multipliers can be calculated
'
Sub BonusAddModeHit(ModeIndex)
  if ModeIndex <> -1 then   ' We are adding the standard bonus
    Select case ModeIndex
      case kBonusHurryUp: ' HurryUps
        BonusModeHits(ModeIndex) = BonusModeHits(ModeIndex) + 1

      case kBonusCombo:   ' Combos
        BonusModeHits(ModeIndex) = BonusModeHits(ModeIndex) + 1

      case kBonusGadget:  ' Gadgets Awarded
        BonusModeHits(ModeIndex) = BonusModeHits(ModeIndex) + 1

      case kBonusCatwoman: ' The Catwoman
        BonusModeHits(ModeIndex) = BonusModeHits(ModeIndex) + 1

      case kBonusJoker:  ' The Joker
        BonusModeHits(ModeIndex) = BonusModeHits(ModeIndex) + 1

      case kBonusRiddler:  ' The Riddler
        BonusModeHits(ModeIndex) = BonusModeHits(ModeIndex) + 1

      case kBonusPenguin:  ' The Penguin
        BonusModeHits(ModeIndex) = BonusModeHits(ModeIndex) + 1

      case kBonusEgg:    ' Egghead
        BonusModeHits(ModeIndex) = BonusModeHits(ModeIndex) + 1

    End Select
'WriteToLog "     ", "BonusAddModeHit " & ModeIndex &  " " & BonusModeHits(ModeIndex)
  End if
End Sub

Function BonusAddMode(villainIdx, value, bDoublePoints)   ' Add incrementing bonus and Add to player score
  Dim BonusIndex
  dim BonusValue
  BonusIndex = 0
  BonusValue = 0

  Select case villainIdx
'   case -3: ' Gadgets
'     BonusIndex = 2
'   case -2: ' Combos
'     BonusIndex = 1
'   case -1: ' HurryUp
'     BonusIndex = 0
    case kMajV_S1CatWoman, kMajV_S2CatWoman:
      BonusIndex = 3
      if (BonusModeValue(BonusIndex) = 0) then
        BonusValue = 550000
      else
        BonusValue = 50000
      End If
    case kMajV_S1Joker, kMajV_S2Joker:
      BonusIndex = 4
      if (BonusModeValue(BonusIndex) = 0) then
        BonusValue = 550000
      else
        BonusValue = 50000
      End If
    case kMajV_S1Riddler, kMajV_S2Riddler:
      BonusIndex = 5
      if (BonusModeValue(BonusIndex) = 0) then
        BonusValue = 550000
      else
        BonusValue = 50000
      End If
    case kMajV_S1Peng, kMajV_S2Peng:
      BonusIndex = 6
      if (BonusModeValue(BonusIndex) = 0) then
        BonusValue = 550000
      else
        BonusValue = 50000
      End If
    case kMinV_S2EggHead, kMinV_S3EggHead1, kMinV_S3EggHead2:     ' Egghead gets added to end of ball and current
      BonusIndex = 7
      if (BonusModeValue(BonusIndex) = 0) then
        BonusValue = 550000
      else
        BonusValue = 50000
      End If
    case kWiz_VillainMB
      BonusIndex = 0
      if (BonusModeValue(BonusIndex) = 0) then
        BonusValue = 250000
      else
        BonusValue = 50000
      End If

  End Select
''WriteToLog "     ", "Bonus " & villainIdx & " idx:" & BonusIndex & " " & BonusValue & " OldVal: " & BonusModeValue(BonusIndex) & " Double:" & bDoublePoints & " value:" & value
  if value <> -1 then BonusValue=value
  if bDoublePoints then BonusValue = BonusValue * 2

  if value = -1 Then
    BonusModeValue(BonusIndex) = BonusModeValue(BonusIndex) + BonusValue
    AddScoreMode villainIdx, BonusModeValue(BonusIndex)+0                     ' Prevent passing byRef
    BonusModeTotal(BonusIndex) = BonusModeTotal(BonusIndex) +  BonusModeValue(BonusIndex)
  else
    BonusModeValue(BonusIndex) = BonusValue
    AddScoreMode villainIdx, BonusValue
    BonusModeTotal(BonusIndex) = BonusModeTotal(BonusIndex) + BonusValue
  end if
  BonusAddMode=BonusModeValue(BonusIndex)
'WriteToLog "     ", "      " & villainIdx & " idx:" & BonusIndex & " " & BonusValue & " OldVal: " & BonusModeValue(BonusIndex) & " Double:" & bDoublePoints

End Function

Function GetBonusTotal(villainIdx)
  Dim BonusIndex:BonusIndex=-1
  Select case villainIdx
    case kMajV_S1CatWoman, kMajV_S2CatWoman:
      BonusIndex = 3
    case kMajV_S1Joker, kMajV_S2Joker:
      BonusIndex = 4
    case kMajV_S1Riddler, kMajV_S2Riddler:
      BonusIndex = 5
    case kMajV_S1Peng, kMajV_S2Peng:
      BonusIndex = 6
    case kMinV_S2EggHead, kMinV_S3EggHead1, kMinV_S3EggHead2:     ' Egghead gets added to end of ball and current
      BonusIndex = 7
    case kWiz_VillainMB
      BonusIndex = 0
  End Select

  if BonusIndex = -1 then
    GetBonusTotal=0
  else
    GetBonusTotal = BonusModeTotal(BonusIndex)
  End if
End Function

Sub ClearBonusTotal(villainIdx)
  Dim BonusIndex:BonusIndex=-1
  Select case villainIdx
    case kMajV_S1CatWoman, kMajV_S2CatWoman:
      BonusIndex = 3
    case kMajV_S1Joker, kMajV_S2Joker:
      BonusIndex = 4
    case kMajV_S1Riddler, kMajV_S2Riddler:
      BonusIndex = 5
    case kMajV_S1Peng, kMajV_S2Peng:
      BonusIndex = 6
    case kMinV_S2EggHead, kMinV_S3EggHead1, kMinV_S3EggHead2:     ' Egghead gets added to end of ball and current
      BonusIndex = 7
    case kWiz_VillainMB
      BonusIndex = 0
  End Select

' if villainIdx<>kWiz_VillainMB and PlayerState(CurrentPlayer).isFinished(villainIdx)=False  then   ' Dont clear majors until we are done
'   BonusIndex=-1
' End if

  if BonusIndex <> -1 then BonusModeTotal(BonusIndex) =0
End Sub


Sub ClearBonusMode(villainIdx)    ' Add incrementing bonus and Add to player score
  Dim BonusIndex
  BonusIndex = -1
  Select case villainIdx
'   case -3: ' Gadgets
'     BonusIndex = 2
'   case -2: ' Combos
'     BonusIndex = 1
'   case -1: ' HurryUp
'     BonusIndex = 0
    case kMajV_S1CatWoman, kMajV_S2CatWoman:
      BonusIndex = 3
    case kMajV_S1Joker, kMajV_S2Joker:
      BonusIndex = 4
    case kMajV_S1Riddler, kMajV_S2Riddler:
      BonusIndex = 5
    case kMajV_S1Peng, kMajV_S2Peng:
      BonusIndex = 6
    case kMinV_S2EggHead, kMinV_S3EggHead1, kMinV_S3EggHead2:     ' Egghead gets added to end of ball and current
      BonusIndex = 7
    case kWiz_VillainMB
      BonusIndex = 0
  End Select

  if BonusIndex <> -1 then
    BonusModeValue(BonusIndex)=0
  End If
End Sub

Sub BonusSceneCallback  ' Flipper Skip Callback
  ' Flipper Skip
  if inbonus then
    if LFPress and RFPress and tmrBonus.UserValue < 4 then    ' Skip to total
      tmrBonus.Enabled = False
      tmrBonus.Interval = 1
'     tmrBonus.UserValue = 4
      bBonusSkip=True
      AnimateLabelCancel("Bonus1")
      AnimateLabelCancel("Bonus2")
      AnimateLabelCancel("Bonus3")
      AnimateLabelCancel("Bonus5")
      puPlayer.LabelSet sSwapPos,"Bonus1", "", 1, ""
      puPlayer.LabelSet sSwapPos,"Bonus2", "", 1, ""
      puPlayer.LabelSet sSwapPos,"Bonus3", "", 1, ""
      puPlayer.LabelSet sSwapPos,"Bonus5", "", 1, ""
      tmrBonus.Enabled = True
    End if
  End if
End Sub

dim inbonus:inbonus=false
dim bonusBGIdx
Dim bonusIdx
Dim bBonusSkip
Sub BonusScene()    ' doBonus
  Dim i
  inbonus=true
  bBonusSkip=False
  tmrBonus.UserValue = 0
  tmrBonus.Interval = 1
  tmrBonus.Enabled = True
  ScoreBonusAdd=0
  bonusBGIdx=1
  bonusIdx=0

  QueueFlushS sSwapPos        ' sSwapPos ???
  playclear sSwapPos

  PuPlayer.LabelShowPage sSwapPos, 3,0,""

  playmedia "end-of-ball-bonus.mp3", "Topper", pMusic, "", -1, "", 1, 1

' BonusModeHits(0) = 6    'hurry ups
' BonusModeHits(1) = 24   'Combos
' BonusModeHits(2) = 7    'Gadgets Awarded
' BonusModeHits(3) = 35   'Catwoman
' BonusModeHits(4) = 48   'Joker
' BonusModeHits(5) = 40   'Riddler
' BonusModeHits(6) = 25   'Penguin
  BonusModeHits(7) = 1    ' Egghead (TBD Need to see how this increases)

' BonusMultiplier=23

' BonusModeValue(7)=62400000

End Sub
'
'ffmpeg -loop 1 -i bonus1.png -c:v libx264 -t 15 -pix_fmt yuv420p -vf scale=320:240 out.mp4

'ffmpeg -loop 1 -r 30 -s 1920x1080 -i bonus1.png -vcodec libx264 -crf 25 -b:v 4M -pix_fmt yuv420p -vf scale=1920:1080 -t 4 -profile:v baseline bonus1.mp4
'ffmpeg -loop 1 -r 30 -s 1920x1080 -i bonus2.png -vcodec libx264 -crf 25 -b:v 4M -pix_fmt yuv420p -vf scale=1920:1080 -t 4 -profile:v baseline bonus2.mp4
'ffmpeg -loop 1 -r 30 -s 1920x1080 -i bonus3.png -vcodec libx264 -crf 25 -b:v 4M -pix_fmt yuv420p -vf scale=1920:1080 -t 4 -profile:v baseline bonus3.mp4
'ffmpeg -loop 1 -r 30 -s 1920x1080 -i bonus4.png -vcodec libx264 -crf 25 -b:v 4M -pix_fmt yuv420p -vf scale=1920:1080 -t 4 -profile:v baseline bonus4.mp4
'ffmpeg -loop 1 -r 30 -s 1920x1080 -i bonus5.png -vcodec libx264 -crf 25 -b:v 4M -pix_fmt yuv420p -vf scale=1920:1080 -t 4 -profile:v baseline bonus5.mp4
'ffmpeg -loop 1 -r 30 -s 1920x1080 -i bonus6.png -vcodec libx264 -crf 25 -b:v 4M -pix_fmt yuv420p -vf scale=1920:1080 -t 4 -profile:v baseline bonus6.mp4

'ffmpeg -loop 1 -r 30 -s 1920x1080 -i bonus7.png -vcodec libx264 -crf 25 -b:v 4M -pix_fmt yuv420p -vf scale=1920:1080 -t 4 -profile:v baseline bonus7.mp4
'ffmpeg -loop 1 -r 30 -s 1920x1080 -i bonus8.png -vcodec libx264 -crf 25 -b:v 4M -pix_fmt yuv420p -vf scale=1920:1080 -t 4 -profile:v baseline bonus8.mp4
'ffmpeg -loop 1 -r 30 -s 1920x1080 -i bonus9.png -vcodec libx264 -crf 25 -b:v 4M -pix_fmt yuv420p -vf scale=1920:1080 -t 4 -profile:v baseline bonus9.mp4
'ffmpeg -loop 1 -r 30 -s 1920x1080 -i bonus10.png -vcodec libx264 -crf 25 -b:v 4M -pix_fmt yuv420p -vf scale=1920:1080 -t 4 -profile:v baseline bonus10.mp4


Dim ScoreBonusAdd
Sub tmrBonus_Timer()
  dim Title:Title=""
  Dim ScoreStr
  Dim Score
  Dim i
  Dim thisValue
  dim bFound
  dim TweenStr
  dim EndIdx
  Dim j
  Dim screen

  screen=sSwapPos

'WriteToLog "     ", "Bonus Timer:" & bonusIdx & " " & tmrBonus.UserValue & " Interval: " & tmrBonus.Interval

  if bBonusSkip and tmrBonus.UserValue<4 then   ' Allows us to loop through real quick and total bonus and end
    EndIdx=4
  else
    EndIdx=tmrBonus.UserValue
  End if
  tmrBonus.Enabled=False
  tmrBonus.Interval = 1200

  ' Loop so we can flipper skip this whole thing and still calculate totals
  Do
    bFound=False
    TweenStr=""
''WriteToLog "     ", "Bonus:" & tmrBonus.UserValue & " " & bonusIdx & " " & EndIdx
    Select case tmrBonus.UserValue
      case 0:
        playclear screen
        if bBonusSkip=False then
          PlaySoundVol "sfx-bonus1", VolSfx
          DOF_UnderCab "Bonus_Cyan" 'Bonus Start
          AnimateLabel screen, "Bonus1", 25, 3, 17*FontScale, 12*FontScale, 500, "Bonus", 500
          TweenStr = "{'mt':2, 'size': "& 17*FontScale &",'ypos': 25}"        ' mt1=Animate, at2=Motion,

          playmedia "bonus1.mp4", "PupBonus", screen, "", -1, "", 1, 1

          puPlayer.LabelSet screen,"Bonus1", "Bonus", 1, TweenStr
          puPlayer.LabelSet screen,"Bonus2", "", 1, ""
          puPlayer.LabelSet screen,"Bonus3", "", 1, ""
          puPlayer.LabelSet screen,"Bonus4", "On the Last Ball We Saw... ", 1, ""
          puPlayer.LabelSet screen,"Bonus5", "", 1, ""
        End if
        tmrBonus.UserValue = tmrBonus.UserValue+1

      case 1:
        for i = bonusIdx to 6
          if BonusModeHits(i) <> 0 then
            Select case i
              case kBonusHurryUp:  ' HurryUps
                thisValue = 250000
                Title="Bat Phone Hurry-Ups"
                DOF_UnderCab "Bonus_Red"  'Batphone
              case kBonusCombo:  ' Combos
                thisValue = 250000
                Title="Combos"
                DOF_UnderCab "Bonus_Orange" 'Combos
              case kBonusGadget:  ' Gadgets Awarded
                thisValue = 300000
                Title="Gadgets Awarded"
                DOF_UnderCab "Bonus_Yellow" 'Gadgets
              case kBonusCatwoman:  ' The Catwoman
                thisValue = 20000
                Title="The Catwoman"
                DOF_UnderCab "Bonus_White"  'Catwoman
              case kBonusJoker:  ' The Joker
                thisValue = 10000
                Title="The Joker"
                DOF_UnderCab "Bonus_Pink" 'Joker
              case kBonusRiddler:  ' The Riddler
                thisValue = 40000
                Title="The Riddler"
                DOF_UnderCab "Bonus_Green"  'Riddler
              case kBonusPenguin:  ' The Penguin
                thisValue = 30000
                Title="The Penguin"
                DOF_UnderCab "Bonus_Purple" 'Penguin
            End Select

            if bBonusSkip=False then
              if bonusBGIdx=8 then bonusBGIdx=2         ' It repeats back to 2
              PlaySoundVol "sfx-bonus" & bonusBGIdx, VolSfx
              'playclear screen
              playmedia "bonus"&(i+2)&".mp4", "PupBonus", screen, "", -1, "", 1, 1

              puPlayer.LabelSet screen,"Bonus1", "Bonus", 1, TweenStr
              AnimateLabel screen, "Bonus2", 25, 25, 2*FontScale, 10*FontScale, 300, Title, 0
              AnimateLabel screen, "Bonus3", 38, 38, 2*FontScale, 10*FontScale, 300, BonusModeHits(i) & " x " & FormatScore(thisValue), 0
              AnimateLabel screen, "Bonus5", 65, 65, 2*FontScale, 10*FontScale, 300, FormatScore(BonusModeHits(i) * thisValue), 400
              puPlayer.LabelSet screen,"Bonus4", "", 1, ""
              puPlayer.LabelSet screen,"Bonus5", "", 1, ""
            End if
            ScoreBonusAdd=ScoreBonusAdd+(BonusModeHits(i) * thisValue)
            bfound = True
            bonusIdx=i+1
            Exit for
          End if
        next
        if bFound = False then                ' we are done move to the next one
          tmrBonus.UserValue = tmrBonus.UserValue+1
          tmrBonus.Interval=0
          bonusBGIdx=bonusBGIdx-1     ' Didnt use this one yet
        End if

      case 2:  ' Total

        if ScoreBonusAdd <> 0 then  ' Skip 1st Total
          ScoreBonusAdd=ScoreBonusAdd+INT(ScoreBonusAdd*0.095)          ' Add 9.5% ' Sterns has some random algorithm here
          if bBonusSkip=False then
            PlaySoundVol "sfx-bonus9", VolSfx
            DOF_UnderCab "Bonus_Blue" 'Bonus End
            'playclear screen
            playmedia "bonus9.mp4", "PupBonus", screen, "", -1, "", 1, 1

            puPlayer.LabelSet screen,"Bonus1", "Total Bonus", 1, ""
            puPlayer.LabelSet screen,"Bonus2", "Bonus Multiplier "&BonusMultiplier&" x", 1, ""
            puPlayer.LabelSet screen,"Bonus3", FormatScore(ScoreBonusAdd) & " x " & BonusMultiplier, 1, ""
            puPlayer.LabelSet screen,"Bonus4", "", 1, ""
            puPlayer.LabelSet screen,"Bonus5", FormatScore(ScoreBonusAdd * BonusMultiplier) , 1, ""
          End if
        else
          tmrBonus.Interval = 0
        End if
        ScoreBonusAdd=(ScoreBonusAdd * BonusMultiplier)
        tmrBonus.UserValue = tmrBonus.UserValue+1

        if BonusModeTotal(7) = 0 then   ' Skip Egghead
          tmrBonus.UserValue = tmrBonus.UserValue+1
        End if

      case 3:  ' Egghead
        if bBonusSkip=False then
          PlaySoundVol "sfx-bonus11", VolSfx
          'playclear screen
          playmedia "bonus10.mp4", "PupBonus", screen, "", -1, "", 1, 1

          AnimateLabel screen, "Bonus3", 38, 38, 2*FontScale, 10*FontScale, 300, "Egghead", 0
          AnimateLabel screen, "Bonus5", 65, 65, 2*FontScale, 10*FontScale, 300, FormatScore(BonusModeTotal(7)), 400

          puPlayer.LabelSet screen,"Bonus1", "Bonus", 1, ""
          puPlayer.LabelSet screen,"Bonus2", "", 1, ""
          puPlayer.LabelSet screen,"Bonus3", "Egghead", 1, ""
          puPlayer.LabelSet screen,"Bonus4", "", 1, ""
          puPlayer.LabelSet screen,"Bonus5", "", 1, ""
        End if
        ScoreBonusAdd=ScoreBonusAdd+BonusModeTotal(7)
        tmrBonus.UserValue = tmrBonus.UserValue+1

      case 4:  ' Total2
        ScoreBonusAdd=ScoreBonusAdd+50000       ' Base is 50000
        PlaySoundVol "sfx-bonus10", VolSfx
        DOF_UnderCab_Off
        DOF 500, DOFPulse 'Bonus End
        bonusBGIdx=9
        'playclear screen
        playmedia "bonus9.mp4", "PupBonus", screen, "", -1, "", 1, 1

        AnimateLabel screen, "Bonus1", 3, 25, 12*FontScale, 17*FontScale, 500, "Total Bonus", 0
        AnimateLabel screen, "Bonus5", 65, 45, 12*FontScale, 17*FontScale, 500, FormatScore(ScoreBonusAdd), 0
        puPlayer.LabelSet screen,"Bonus1", "Total Bonus", 1, ""
        puPlayer.LabelSet screen,"Bonus2", "", 1, ""
        puPlayer.LabelSet screen,"Bonus3", "", 1, ""
        puPlayer.LabelSet screen,"Bonus4", "", 1, ""
        puPlayer.LabelSet screen,"Bonus5", FormatScore(ScoreBonusAdd), 1, ""
        'aniDict.Item("Bonus1").ani_Text = "Total Bonus"
        'aniDict.Item("Bonus5").ani_Text = FormatScore(ScoreBonusAdd)

        if ScoreBonusAdd > PlayerState(CurrentPlayer).BonusHS then
          PlayerState(CurrentPlayer).BonusHS = ScoreBonusAdd
        End if
        AddScore ScoreBonusAdd
        tmrBonus.UserValue = tmrBonus.UserValue+1

      case 5:  ' Wait
        tmrBonus.UserValue = tmrBonus.UserValue+1
      case 6:  ' End of Ball
        playclear screen

        ' Clear them all just in case things switched partway through the bonus
        for i = pMVideo to pLVideo2
          puPlayer.LabelSet i,"Bonus1", "", 1, "{'mt':2, 'size': "& 12*FontScale &",'ypos': 55}"
          puPlayer.LabelSet i,"Bonus2", "", 1, ""
          puPlayer.LabelSet i,"Bonus3", "", 1, ""
          puPlayer.LabelSet i,"Bonus4", "", 1, ""
          puPlayer.LabelSet i,"Bonus5", "", 1, "{'mt':2, 'size': "& 12*FontScale &",'ypos': 65}"
        Next
        PuPlayer.LabelShowPage screen, 1,0,""
        tmrBonus.Enabled = False
        inbonus=False

        playclear pMusic

        vpmtimer.addtimer 100, "EndOfBall2 '"
        exit sub
    End Select
    bonusBGIdx=bonusBGIdx+1
  Loop while tmrBonus.UserValue<EndIdx

  tmrBonus.Enabled=True

End Sub


Function GetCurrentBonus()
  Dim ScoreBonusAdd
  Dim i
  Dim thisValue
  Dim j

  For j = 0 to 3
''WriteToLog "     ", "Bonus:" & tmrBonus.UserValue & " " & bonusIdx & " " & EndIdx
    Select case j
      case 0:
        ScoreBonusAdd=0
      case 1:
        for i = 0 to 6
          if BonusModeHits(i) <> 0 then
            Select case i
              case kBonusHurryUp:  ' HurryUps
                thisValue = 250000
              case kBonusCombo:  ' Combos
                thisValue = 250000
              case kBonusGadget:  ' Gadgets Awarded
                thisValue = 300000
              case kBonusCatwoman:  ' The Catwoman
                thisValue = 20000
              case kBonusJoker:  ' The Joker
                thisValue = 10000
              case kBonusRiddler:  ' The Riddler
                thisValue = 40000
              case kBonusPenguin:  ' The Penguin
                thisValue = 30000
            End Select
            ScoreBonusAdd=ScoreBonusAdd+(BonusModeHits(i) * thisValue)
          End if
        Next
      case 2:  ' Total
        ScoreBonusAdd=ScoreBonusAdd+INT(ScoreBonusAdd*0.095)          ' Add 9.5% ' Sterns has some random algorithm here
        ScoreBonusAdd=(ScoreBonusAdd * BonusMultiplier)
      case 3:  ' Egghead
        if BonusModeValue(7)<>0 then
          ScoreBonusAdd=ScoreBonusAdd+BonusModeValue(7)
        End if
    End Select
  Next
  GetCurrentBonus=ScoreBonusAdd+50000
End Function

Sub DrainDummy_Hit()  ' Call this to short cycle outlane drains
WriteToLog "     ", "DrainDummy_Hit"
  BallsOutlaneDrainCnt=BallsOutlaneDrainCnt+1
  BallsOutlaneDrainIgnoreCnt=BallsOutlaneDrainIgnoreCnt+1
  Drain_Hit()
End Sub

'*******************************************
' ZDRN: Drain, Trough, and Ball Release
'*******************************************
' It is best practice to never destroy balls. This leads to more stable and accurate pinball game simulations.
' The following code supports a "physical trough" where balls are not destroyed.
' To use this,
'   - The trough geometry needs to be modeled with walls, and a set of kickers needs to be added to
'  the trough. The number of kickers depends on the number of physical balls on the table.
'   - A timer called "UpdateTroughTimer" needs to be added to the table. It should have an interval of 300 and be initially disabled.
'   - The balls need to be created within the Table1_Init sub. A global ball array (gBOT) can be created and used throughout the script


'TROUGH
Sub swTrough1_Hit
  UpdateTrough
End Sub
Sub swTrough1_UnHit
  UpdateTrough
End Sub
Sub swTrough2_Hit
  UpdateTrough
End Sub
Sub swTrough2_UnHit
  UpdateTrough
End Sub
Sub swTrough3_Hit
  UpdateTrough
End Sub
Sub swTrough3_UnHit
  UpdateTrough
End Sub
Sub swTrough4_Hit
  UpdateTrough
End Sub
Sub swTrough4_UnHit
  UpdateTrough
End Sub
Sub swTrough5_Hit
  UpdateTrough
End Sub
Sub swTrough5_UnHit
  UpdateTrough
End Sub
Sub swTrough6_Hit
  UpdateTrough
End Sub
Sub swTrough6_UnHit
  UpdateTrough
End Sub

Sub UpdateTrough
  UpdateTroughTimer.Interval = 300
  UpdateTroughTimer.Enabled = 1
End Sub

Sub UpdateTroughTimer_Timer
  If swTrough1.BallCntOver = 0 Then swTrough2.kick 57, 10
  If swTrough2.BallCntOver = 0 Then swTrough3.kick 57, 10
  If swTrough3.BallCntOver = 0 Then swTrough4.kick 57, 10
  If swTrough4.BallCntOver = 0 Then swTrough5.kick 57, 10
  If swTrough5.BallCntOver = 0 Then swTrough6.kick 57, 10
  Me.Enabled = 0
End Sub

' DRAIN & RELEASE from example
'Sub Drain_Hit
' BIP = BIP - 1
' DMDBigText "DRAIN BLOCK",77,1
' RandomSoundDrain Drain
' vpmTimer.AddTimer 500, "Drain.kick 57, 20'"
'End Sub
'
'Sub SolRelease(enabled)
' If enabled Then
'   BIP = BIP + 1
'   swTrough1.kick 90, 10
'   RandomSoundBallRelease swTrough1
' End If
'End Sub

Dim EndOfBallWaitTime
Sub Drain_Hit()
  'WriteToLog "     ", "Drain_Hit"
  Dim tmpBallSaver
  Dim queueTime
  dim bShortCycle:bShortCycle=False

  tmpBallSaver=BallSaverActiveBuffer <> 0
  if BallSaverActiveBuffer>0 then BallSaverActiveBuffer = BallSaverActiveBuffer-1

  if LightBallSave.state = 2 and bBallSaverActive=False then
  ' Msgbox "ERROR BALL SAVE"
    'WriteToLog "     ", "ERROR Ball SAVE"
  End If

'    ' Destroy the ball
' if VPXMP.IsMyTurn then Drain.DestroyBall
' if BallsOnPlayfield > 0 then
'   BallsOnPlayfield = BallsOnPlayfield - 1
' else
'   WriteToLog "     ", "ERROR: Removing too many balls"
' End if

  ' Handle Short Cycle Ball Saves
  if BallsOutlaneDrainCnt>0 and bGameInPLay then
    BallsOutlaneDrainCnt=BallsOutlaneDrainCnt-1
    bShortCycle=True
  Else
    ' Destroy the ball
'   Drain.DestroyBall
    vpmTimer.AddTimer 500, "Drain.kick 57, 20'"
    BallsOnPlayfield = BallsOnPlayfield - 1
    if BallsOutlaneDrainIgnoreCnt>0 then
      BallsOutlaneDrainIgnoreCnt=BallsOutlaneDrainIgnoreCnt-1
      ' Not sure we really need to do this but if not balls are on the table and we are queued up to add a ball technically we need to turn off multiball
      if BallsOnPlayfield-BallsInLock=1 and CreateMultiballTimer.Enabled=False then bMultiBallMode=False
      Exit Sub
    End if
  End if
  If bGameInPLay = False Then               'don't do anything, just delete the ball
    if bResetCurrentGame and BallsOnPlayfield=0 then  ' Everything has drained
      DisableTable False
    End if
    Exit Sub
  End if

    ' pretend to knock the ball into the ball storage mech
  RandomSoundDrain Drain
    'PlaySoundAt "fx_drain",Drain
    'if Tilted the end Ball modes
    If Tilted Then
        StopEndOfBallModes
    End If
    ' if there is a game in progress AND it is not Tilted
    If(bGameInPlay = True)AND(Tilted = False)Then

    ' Speacial case for Villain Escape, Move to villain escape part 2
    if tmrVillainEscape.Enabled then
      DrawModeTimer tmrVillainEscapePos, "", True, True
      StartVillainEscape2
      tmpBallSaver=True
    End if

        ' is the ball saver active (or did the switch catch us before the timer ran out)
        If bBallSaverActive or tmpBallSaver Then
            ' yep, create a new ball in the shooters lane
            ' we use the Addmultiball in case the multiballs are being ejected
'WriteToLog "     ", "Ball Save multiball"
      if bShortCycle then
        AddMultiballFast 1
      Else
        AddMultiball 1
      End if
            ' we kick the ball with the autoplunger
            bAutoPlunger = True
            ' you may wish to put something on a display or play a sound at this point
      DoBallSave
        Else
'WriteToLog "     ", "Drain " & BallsOnPlayfield & " " & BallsInLock & " " & bMultiBallMode

            ' cancel any multiball if on last ball (ie. lost all other balls)
            If(BallsOnPlayfield-BallsInLock = 1)Then
                ' AND in a multi-ball??
                If(bMultiBallMode = True)then
                    ' not in multiball mode any more
                    bMultiBallMode = False
                    ChangeGi GI, "white", 0.6
                End If
            End If

      EndOfBallWaitTime = 0           ' If Functions in StopEndOfBallModes add time we wait that long
      If(BallsOnPlayfield-BallsInLock <= 1) Then  ' Stop MB's
        if PlayerState(CurrentPlayer).isActive(kMinV_S2Shame) then SceneMinorEnd False    ' End Shame
        if PlayerState(CurrentPlayer).isActive(kMinV_S3Shame) then SceneMinorEnd False    ' End Shame
        if PlayerState(CurrentPlayer).isActive(kWiz_VillainMB) then EndVillainMB      ' End Villain MB
        if PlayerState(CurrentPlayer).isActive(kWiz_VillainEscape) then EndVillainEscape  ' End Villain Escape
        SceneMinorVillainWizardEnd(True)
      End If

      tmrPauseTimers.Enabled = False        ' Clear Pause Timers

            ' was that the last ball on the playfield
            If(BallsOnPlayfield - BallsInLock = 0)Then
                ' End Modes and timers

        'PauseSong
'       if PlayerMode <> -1 then
'         pausemedia pBackglass
'         pausemedia pMusic
''WriteToLog "     ", "Start  m_wait-1"
'         'PlaySoundLoopVol "m_wait", VolMusic
'         playmedia "m_wait.mp3", MusicDir, pAudio, "", -1, "", 1, 1
'       End If
                StopEndOfBallModes
                ChangeGi GI, "white", 0.6

        queueTime = EndOfBallWaitTime         ' See if we need to let animations finish playing
        if queueTime = 0 then queueTime = 1500

                ' handle the end of ball (count bonus, change player, high score entry etc..)
                vpmtimer.addtimer queueTime, "EndOfBall '"
        DOF 312, DOFPulse 'Drain
        DOF_UnderCab_Off
            End If

        End If
    End If

End Sub

Sub StopEndOfBallModes() 'this sub is called after the last ball is drained to end all the modes
  SceneMinorEnd False   ' End Minor Villain Modes
  EndBatTurn        ' End BatTurn
  EndVillainEscape    ' End VillainEscape
  StopPFMTimer      ' Stop The PlayFieldMultiplier
  StopSpinner True    ' Stop Spinner Mode
  BumperScoreClearAll   ' Clear any bumpers that are left over
End Sub


Sub AutoPlungeDelayed()
  'WriteToLog "     ", "autofire the ball"
  PlungerIM.AutoFire
  DOF 121, DOFPulse 'autoplunger
  DOF 112, DOFPulse 'strobe
  bAutoPlunger = False
  bAutoPlunged = True
End Sub

Sub swPlungerRest_Hit()
  DOF 139, DOFOn
    'WriteToLog "     ", "ball in plunger lane: " & bAutoPlunger & " " & bCreatedBall
    ' some sound according to the ball position
    ' PlaySoundAt "fx_sensor", swPlungerRest
    bBallInPlungerLane = True
    ' turn on Launch light is there is one
    'LaunchLight.State = 2
    ' kick the ball in play if the bAutoPlunger flag is on

  if bCreatedBall = False and LastSwitchHit = "swPlungerLane" then  ' If we didnt create a ball this must have gone up and back so kick it out automatically
    bAutoPlunger = True
  End if
  bCreatedBall = False

    If bAutoPlunger Then
    VPMTImer.AddTimer 1000, "AutoPlungeDelayed '"
  Else            ' No AutoPlunger
    Gate004.Uservalue=0                   ' Not sure why this is getting set in the VPXtable
    if bSkillshotsReady(1) then
      SetLightColor lArrowPenguin, "purple", 2      ' Start Flashing Penguin
    End if

    StartLastScene                      ' Play default if we are not in a Major Villain mode: TBD Need to check minor also

    PlungerSwitchHit=-1
    'bSSLaneLightsEnabled=True
    enableLaneLights(True)
    pResynchLayers
    if PlayerState(CurrentPlayer).bMajQual=False and PlayerState(CurrentPlayer).bMinorActive=False then ' bOnTheFirstBall then
      playMusic "gotham" & INT(RND*4)+1 & ".mp3"
      DOF_UnderCab "Cyan"
    else
      playMusic "b66_Song5.mp3"
    End if
    ShowPopupLabel 1, "TIME BALL^LAUNCH WITH^ARROWS TO^START SKILL^SHOT!", False, ""
    End If

' if (bPlayerModeSelect) Then
'   if PlayerMode = -1 then SelectPlayerMode LeftFlipperKey
'   UpdatePlayerMode()
'   'PauseSong
'   if PlayerState(CurrentPlayer).bFirstBall then
''WriteToLog "     ", "Start  m_wait-2"
'     'PlaySoundLoopVol "m_wait", VolDef
'     playmedia "m_wait2.mp3", MusicDir, pAudio, "", -1, "", 1, 1
'   End If
' End If

    ' remember last trigger hit by the ball.
    LastSwitchHit = "swPlungerRest"
End Sub

' The ball is released from the plunger turn off some flags and check for skillshot
Sub swPlungerRest_UnHit()

    bBallInPlungerLane = False
  DOF 139, DOFOff
  ResetBallSearch

  ShowPopupLabel 1, "", True, ""  ' Hide the popup

  'if (bPlayerModeSelect) then pBGGamePlay      ' Change the backglass to the play mode

  ' Need to do this before the check model below because it will set the gate based on the mode
  'MsgBox LeftFlipper.CurrentAngle & " - " & LeftFlipper.EndAngle

  if (bAutoPlunged = False) then    ' Only start the skillshot if it is a manual plunge
    if LeftFlipper.CurrentAngle = LeftFlipper.EndAngle Then
      bSuperSkillShotReady1=True
    End If
    tmrPauseTimers.Enabled=False                    ' Unpause the timers on a new ball
    tmrSkillshot.Enabled = True
    tmrSkillshot.UserValue = 0

    'PlaySoundVol "sfx-ball-launch", VolSfx
'   playclear pAudio
'   playmedia "b66_Song5.mp3", "Topper", pAudio, "", -1, "", 1, 1
'   playMusic "b66_Song5.mp3"
    SetBGMusic
  End If
  bAutoPlunged =  False
  tmrCallouts.Enabled = False
  PlayerState(CurrentPlayer).bFirstLaunch = False           ' We launched the first ball - disable season select

  PlaySoundVol "sfx-ball-launch", VolSfx


  ' if there is a need for a ball saver, then start off a timer
    ' only start if it is ready, and it is currently not running, else it will reset the time period
'WriteToLog "     ", "Ballsaver Ready:" &  bBallSaverReady & " T:" & BallSaverTime & " Active:" & bBallSaverActive
    If(bBallSaverReady = True)AND(BallSaverTime <> 0)And(bBallSaverActive = False)Then
        EnableBallSaver BallSaverTime
    End If


' turn off LaunchLight
'LaunchLight.State = 0
End Sub

Sub EnableBallSaver(seconds)
'WriteToLog "     ", "Ballsaver started " & seconds
    ' set our game flag
    bBallSaverActive = True
    bBallSaverReady = False
    ' start the timer
  BallSaverTimerExpired.Interval = 10
  BallSaverTimerExpired.UserValue = 1000 * (seconds+2)  ' 2 second grace period
  BallSaverTimerExpired.Enabled = True
    ' if you have a ball saver light you might want to turn it on at this point (or make it flash)
    LightBallSave.BlinkInterval = 160
    LightBallSave.State = 2
  PauseTimers(-1)       ' Go ahead and do 1 extend
End Sub

Sub BallSaverTimerExpired_Timer()
  if tmrPauseTimers.Enabled then exit sub ' Dont change timer

  BallSaverTimerExpired.UserValue = BallSaverTimerExpired.UserValue - BallSaverTimerExpired.Interval  ' Drop 500 msec
''WriteToLog "     ", "BallSaveCountDown " & BallSaverTimerExpired.UserValue & " " & Now
  if BallSaverTimerExpired.UserValue <= 0 then        ' Stop BallSaver
'WriteToLog "     ", "Ballsaver ended"
    BallSaverTimerExpired.Enabled = False
    bBallSaverActive = False
    if ExtraBallsAwards(CurrentPlayer)<>0 then
      LightBallSave.State = 1                 ' They have extra ball, go solid
    else
      LightBallSave.State = 0                 ' Make sure the light is off
    End if
    BallSaverTime = DMDStd(kDMDStd_BallSave)

  elseif BallSaverTimerExpired.UserValue < 2000 then      ' Jsut turn off the light but we still ahve 2 seconds left
    if ExtraBallsAwards(CurrentPlayer)<>0 then
      LightBallSave.State = 1                 ' They have extra ball, go solid
    else
      LightBallSave.State = 0                 ' Make sure the light is off
    End if

  elseif BallSaverTimerExpired.UserValue < 4000 and LightBallSave.BlinkInterval <> 80 then
'WriteToLog "     ", "BallSaver Speedup"
    LightBallSave.BlinkInterval = 80
    LightBallSave.State = 2
  End If

End Sub

Sub PauseTimers(mSec)
  If (tmrPauseTimers.Enabled=False or tmrPauseTimers.UserValue<=10) and bMultiBallMode=False then   ' Allow to overlap by 100msec
    PauseTimersForce mSec
  End if
End Sub

Sub PauseTimersForce(mSec)
  dim PauseTime

  tmrPauseTimers.Enabled=False
  if mSec=-1 then
    PauseTime=DMDStd(kDMDStd_BallSaveExtend)
  Else
    PauseTime=mSec
  End if
  tmrPauseTimers.Interval=10
  tmrPauseTimers.UserValue=PauseTime/tmrPauseTimers.Interval
  tmrPauseTimers.Enabled = True
'WriteToLog "     ", "PauseTimers: " & tmrPauseTimers.UserValue & " " & Now
End Sub

Sub tmrPauseTimers_Timer()
  tmrPauseTimers.UserValue=tmrPauseTimers.UserValue-1
'WriteToLog "     ", "PauseTimers: " & tmrPauseTimers.UserValue & " " & Now
  if tmrPauseTimers.UserValue<=0 then
'WriteToLog "     ", "UNPAUSE Timers: "
    tmrPauseTimers.Enabled = False
    tmrPauseTimers.UserValue=0
  End if
End Sub


Sub BallSaverTimerCancel()
  if BallSaverTimerExpired.Enabled then
'WriteToLog "     ", "Ballsaver Cancel"
    BallSaverTimerExpired.Enabled = False
    bBallSaverActive = False
    ' if you have a ball saver light then turn it off at this point
    if ExtraBallsAwards(CurrentPlayer)<>0 then
      LightBallSave.State = 1                 ' They have extra ball, go solid
    else
      LightBallSave.State = 0                 ' Make sure the light is off
    End if

    BallSaverTime = DMDStd(kDMDStd_BallSave)
  End if
End Sub



'Sub EnableBallSaver(seconds)
'    'WriteToLog "     ", "Ballsaver started " & seconds
'    ' set our game flag
'    bBallSaverActive = True
'    bBallSaverReady = False
'    ' start the timer
'    BallSaverTimerExpired.Interval = 1000 * seconds
'    BallSaverTimerExpired.Enabled = True
'    BallSaverSpeedUpTimer.Interval = 1000 * seconds -(1000 * seconds) / 3
'    BallSaverSpeedUpTimer.Enabled = True
'    ' if you have a ball saver light you might want to turn it on at this point (or make it flash)
'    LightBallSave.BlinkInterval = 160
'    LightBallSave.State = 2
'End Sub
'
'' The ball saver timer has expired.  Turn it off AND reset the game flag
''
'Sub BallSaverTimerExpired_Timer()
''WriteToLog "     ", "Ballsaver ended"
' BallSaverTimerExpired.Enabled = False
' vpmtimer.addtimer 1500, "bBallSaverActive = False '"      ' clear the flag after a slight buffer
'    ' if you have a ball saver light then turn it off at this point
'    LightBallSave.State = 0
' BallSaverTime = defBallSaverTime
'End Sub
'
'Sub BallSaverTimerCancel()
''WriteToLog "     ", "Ballsaver Cancel"
' BallSaverTimerExpired.Enabled = False
' bBallSaverActive = False
'    ' if you have a ball saver light then turn it off at this point
'    LightBallSave.State = 0
' BallSaverTime = defBallSaverTime
'End Sub
'
'Sub BallSaverSpeedUpTimer_Timer()
'    'WriteToLog "     ", "Ballsaver Speed Up Light"
'    BallSaverSpeedUpTimer.Enabled = False
'    ' Speed up the blinking
'    LightBallSave.BlinkInterval = 80
'    LightBallSave.State = 2
'End Sub


Sub Plunger_Init()
' PlaySoundAt SoundFXDOF("ballrelease", 106, DOFPulse, DOFContactors), BallRelease
' RandomSoundBallRelease BallRelease
End Sub


' *********************************************************************
'                      Supporting Score Functions
' *********************************************************************

' Add points to the score AND update the score board
'
Sub AddTUTMultiplier()
  if PlayerState(CurrentPlayer).TUTMultiplierTotal < 5 then
    PlayerState(CurrentPlayer).TUTMultiplierTotal=PlayerState(CurrentPlayer).TUTMultiplierTotal+1
  End if

  ' You only get the multiplier after the first one
  if PlayerState(CurrentPlayer).TUTMultiplierTotal >1 then
    TUTMultiplier=PlayerState(CurrentPlayer).TUTMultiplierTotal -1
  End if
  puPlayer.LabelSet pBackglass,"TutMultipler", TUTMultiplier & "X" ,1,"{'mt':2, 'bold':1}"
End Sub

Sub AddScoreMode(villain, points)
  AddScoreMode2 villain, points, False
End Sub

Sub AddScoreMode2(villain, points, bCollect)
  'PlayerState(CurrentPlayer).IsActive(kWiz_VillainMB) Then     ' Is it all scores uring VMB or jsut the VMB ones?
  if villain = kWiz_VillainMB then    '  Add VMB Multiplier
    points = points * VMBMultiplier
  End If

  if bCollect then                      ' These always apply (and Tut is handled down below)
    points = points * PlayMultiplier * ShotMultiplier
  End if

  if villain<=kMajV_S2Riddler and bCollect=False then     ' Add on the mode bonus for MajorVillain shots (dont add mode Multiplier on collect)
    points = points * ModeMultiplier
  End if

  if PlayerState(CurrentPlayer).Villains(Villain).PupScreen = sSwapPos then
    AddScore points*TUTMultiplier
    PlayerState(CurrentPlayer).Villains(Villain).ModeTotal=PlayerState(CurrentPlayer).Villains(Villain).ModeTotal+points*TUTMultiplier
  else
    AddScore points
    PlayerState(CurrentPlayer).Villains(Villain).ModeTotal=PlayerState(CurrentPlayer).Villains(Villain).ModeTotal+points
  End if
End Sub

Sub AddScore(points)
  dim multiplierVal
  ResetBallSearch
    If(Tilted = False)Then
    multiplierVal = ShotMultiplier * PlayMultiplier
''WriteToLog "     ", "Add Score: " & points & " x" & multiplierVal
    ModePoints = ModePoints + points * multiplierVal
    'if bWizardMode then WizardModePoints = WizardModePoints + points * multiplierVal

        ' add the points to the current players score variable
        Score(CurrentPlayer) = Score(CurrentPlayer) + points * multiplierVal  'only for this table

'   if (multiplierVal > 1) then   ' Popup the bonus
'     puPlayer.LabelSet pBackglass,"MPx","x" & multiplierVal  ,1,""
'     vpmtimer.AddTimer 1500, "puPlayer.LabelSet pBackglass,""MPx"", """" ,1,"""" '"
'   End If

    Scorbit.SendUpdate Score(0), Score(1), Score(2), Score(3), Balls, CurrentPlayer+1, PlayersPlayingGame

    End if

' you may wish to check to see if the player has gotten a replay
End Sub

' Add bonus to the bonuspoints AND update the score board

Sub AddBonus(points)
    If(Tilted = False)Then
        ' add the bonus to the current players bonus variable
        BonusPoints(CurrentPlayer) = BonusPoints(CurrentPlayer) + points
    if BonusPoints(CurrentPlayer) <= 0 then BonusPoints(CurrentPlayer) = 1
    End if

' you may wish to check to see if the player has gotten a replay
End Sub


Sub SetShotMultiplier(light, bClear)    ' This will increase the shot multiplier and the decrease it if active (handles multiball)
  SetShotMultiplier2 light, -1, bClear
End Sub

Sub SetShotMultiplier2(light, idx, bClear)    ' This will increase the shot multiplier and the decrease it if active (handles multiball)
  Dim Value:Value=0

  if PlayerState(CurrentPlayer).CommissGXBonus(4)<>1 and (light.name = "lArrowCat1" or idx=5) then
    Value=PlayerState(CurrentPlayer).CommissGXBonus(4)-1

  elseif PlayerState(CurrentPlayer).CommissGXBonus(3)<>1  and (light.name = "lArrowJoker" or idx=4) then
    Value=PlayerState(CurrentPlayer).CommissGXBonus(3)-1

  elseif PlayerState(CurrentPlayer).CommissGXBonus(2)<>1  and (light.name = "lArrowCat2" or idx=3) then
    Value=PlayerState(CurrentPlayer).CommissGXBonus(2)-1

  elseif PlayerState(CurrentPlayer).CommissGXBonus(1)<>1  and (light.name = "lArrowPenguin" or idx=2) then
    Value=PlayerState(CurrentPlayer).CommissGXBonus(1)-1

  elseif PlayerState(CurrentPlayer).CommissGXBonus(0)<>1 and (light.name = "lArrowRiddler2" or idx=1) then
    Value=PlayerState(CurrentPlayer).CommissGXBonus(0)-1

  End if

  if Value <>0 then
    if bClear then
      ShotMultiplier=ShotMultiplier-Value
    Else
      ShotMultiplier=ShotMultiplier+Value
    End if
    if ShotMultiplier<=0 then ShotMultiplier=1
    'WriteToLog "     ", "SetShotMultiplier: " & light.name & " " & value & " CLEAR:" & bClear & " CurrentMultiplier:" & ShotMultiplier
  End if
End Sub

'*****GI Lights On
'dim xx
'For each xx in GI:xx.State = 1: Next

'**********Sling Shot Animations
' Rstep and Lstep  are the variables that increment the animation
'****************
Dim RStep, Lstep

Sub LeftSlingShot_Slingshot()
  LS.VelocityCorrect(ActiveBall)
  ObjLevel(10) = 1:FlasherFlash10_Timer
  PlaySoundVol "sfx-sling1", VolSfx
  ' PlaySoundAt SoundFXDOF("left_slingshot", 103, DOFPulse, DOFContactors), Lemk
  RandomSoundSlingshotLeft Lemk
  LeftSling4.Visible = 1
  LeftSling.Visible = 0
    Lemk.TransZ = -22
    LStep = 0
    LeftSlingShot.TimerEnabled = True

  AddScore 170
End Sub

Sub LeftSlingShot_Timer
    Select Case LStep
        Case 1:LeftSLing4.Visible = 0:LeftSLing3.Visible = 1:Lemk.TransZ = -14
        Case 2:LeftSLing3.Visible = 0:LeftSLing2.Visible = 1:Lemk.TransZ = -2
        Case 3:LeftSLing2.Visible = 0:LeftSling.Visible = 1:Lemk.TransZ = 0:LeftSlingShot.TimerEnabled = 0
    End Select
    LStep = LStep + 1
End Sub


Sub RightSlingShot_Slingshot()
  RS.VelocityCorrect(ActiveBall)
  ObjLevel(11) = 1:FlasherFlash11_Timer
  PlaySoundVol "sfx-sling2", VolSfx
    ' PlaySoundAt SoundFXDOF("right_slingshot", 105, DOFPulse, DOFContactors), RemK
  RandomSoundSlingshotRight Remk
  RightSling4.Visible = 1
  RightSling.Visible = 0
    Remk.TransZ = -22
    RStep = 0
  RightSlingShot.TimerEnabled = True

  AddScore 170

End Sub

Sub RightSlingShot_Timer
    Select Case RStep
        Case 1:RightSLing4.Visible = 0:RightSLing3.Visible = 1:Remk.TransZ = -14
        Case 2:RightSLing3.Visible = 0:RightSLing2.Visible = 1:Remk.TransZ = -2
        Case 3:RightSLing2.Visible = 0:RightSling.Visible = 1:Remk.TransZ = 0:RightSlingShot.TimerEnabled = 0
    End Select
    RStep = RStep + 1
End Sub



Sub Kicker001_Hit()
  if bTableDisabled then      ' Kick the ball and bail out
    Kicker001Kick False
    Exit sub
  End if

  PlaySoundVol "popper_ball",VolTable

  if bExtraBallSceneActive = False then AwardExtraBall

  if bExtraBallSceneActive and _
    (lMystery.state=2 or _
     lBatman.state = 2 or _
     (PlayerState(CurrentPlayer).bMinorActive=False and PlayerState(CurrentPlayer).bTVReady and bMultiBallMode=False)) then
    VPMTimer.Addtimer 6040, "Kicker001_Hit '"   ' Call this again ater scene is complete
    Exit sub
  End if

'WriteToLog "     ", "Saucer Hit Mystery:" & lMystery.state & " Batman:" & lBatman.state & " " &  PlayerState(CurrentPlayer).IsEnabled(kWiz_VillainEscape) & " " & PlayerState(CurrentPlayer).isActive(kWiz_VillainEscape)
'WriteToLog "     ", "                  " & PlayerState(CurrentPlayer).isActive(kWiz_Batusi) & " " & PlayerState(CurrentPlayer).TProgress(kWiz_Batusi)
  if lMystery.state=2 then
    DoMystery
    Exit Sub
  End if

  ' Make sure we are not in a MinorV Wizard before starting a minor villain or Villain Escape
  if PlayerState(CurrentPlayer).isActive(kWiz_Holy)=False and PlayerState(CurrentPlayer).isActive(kWiz_GasAttack)=False and PlayerState(CurrentPlayer).isActive(kWiz_Batusi)=False then
    ' Minor Villain WizardMode
    if bMultiBallMode=False and lBatman.state = 2 then
      StartMinorVWizardSelect
      Exit sub
    ' Minor Villain Select
    elseif PlayerState(CurrentPlayer).bMinorActive=False and PlayerState(CurrentPlayer).bTVReady and bMultiBallMode=False then  ' No MonorActive, no MultiBall and the TV is Ready
      SceneMinorvillainCollect
      Exit Sub
    End if

    ' Start Villain Escape if it is Enabled not not Active (and shame is not running)
    if PlayerState(CurrentPlayer).IsEnabled(kWiz_VillainEscape) and PlayerState(CurrentPlayer).isActive(kWiz_VillainEscape)=False and _
      PlayerState(CurrentPlayer).isActive(kMinV_S2Shame)=False and PlayerState(CurrentPlayer).isActive(kMinV_S3Shame)=False then
      StartVillainEscape
      Exit Sub
    elseif PlayerState(CurrentPlayer).isActive(kWiz_VillainEscape) and _
        lCatwoman.state=1 and lRiddler.state=1 and lJoker.state=1 and lPeng.state=1 and lBatSignal.state=2 then
      PlayerState(CurrentPlayer).setFinished(kWiz_VillainEscape) = True
      StartVillainEscape2
    End if
  End if

  if PlayerState(CurrentPlayer).isActive(kWiz_Batusi) and PlayerState(CurrentPlayer).TProgress(kWiz_Batusi) = 8 then
    StartBatusi2
    Exit Sub
  End If

  PauseTimers(-1)
  SwitchHit(Kicker001)
  ' Special mode that will open the back gate to lock a ball
  vpmtimer.addtimer 600, "CheckGadgetSpecial '"
  vpmtimer.addtimer 1000, "Kicker001Kick False:CheckGadgetSpecialEnd() '"
End Sub


Dim KickerPeng_Staged:KickerPeng_Staged=False
Sub KickerPeng_Hit()
  KickerPeng_Staged=True
WriteToLog "     ", "KickerPeng_HIT"
  ' PlaySoundVol "fx_kicker_enter", VolTable
  SoundSaucerLock

  PauseTimers(-1)

  SetShotMultiplier lArrowPenguin, False      ' Shot Multiplier If Active

  SwitchHit(KickerPeng)
  CheckProgress(lArrowPenguin)
  if bSceneCollect = False and bSceneFinished=False Then
    vpmtimer.addtimer 1000, "KickerPengKick(False) '"
  Else
    'WriteToLog "     ", "SkipKick: " & bSceneCollect & " " & bSceneFinished
  End If

  SetShotMultiplier lArrowPenguin, True       ' Shot Multiplier If Active

  bSceneFinished=False
End Sub

Sub KickerPengKick(bSilent)
  if bSilent=False then
    PlaySoundVol "sfx-penguin-kick",VolSfx
'   PlaySoundAt SoundFXDOF("fx_kicker", 110, DOFPulse, DOFContactors), KickerPeng
    DOF 110, DOFPulse
    SoundSaucerKick 1,KickerPeng
  End if
  KickerPeng_Staged=False
  KickerPeng.Kick 0, 40, 1.5
  PauseTimers(-1)
End Sub

Sub Kicker001Kick(bSilent)
  if flshBatSignal.TimerEnabled =  False then   ' Not already flashing for something else
'WriteToLog "     ", "Flash Bat Signal"
    SetLightFlasher flshBatSignal, 1
    VpmTimer.AddTimer 350, "SetLightFlasher flshBatSignal, 0 '"
  End if

  if bSilent = False then
    ' PlaySoundVol "fx_saucer_kick1", VolTable
    SoundSaucerKick 1, Kicker001
    PlaySoundVol "sfx-batsignal-eject", VolSfx
'   PlaySoundAt SoundFXDOF("fx_kicker", 111, DOFPulse, DOFContactors), Kicker001
    DOF 111, DOFPulse
    SoundSaucerKick 1,Kicker001
  End if
  Kicker001.Kick -70, 15
End sub

'*********************************************************************
'                 Positional Sound Playback Functions
'*********************************************************************

' Play a sound, depending on the X,Y position of the table element (especially cool for surround speaker setups, otherwise stereo panning only)
' parameters (defaults): loopcount (1), volume (1), randompitch (0), pitch (0), useexisting (0), restart (1))
' Note that this will not work (currently) for walls/slingshots as these do not feature a simple, single X,Y position
'Sub PlayXYSound(soundname, tableobj, loopcount, volume, randompitch, pitch, useexisting, restart)
' PlaySound soundname, loopcount, volume, AudioPan(tableobj), randompitch, pitch, useexisting, restart, AudioFade(tableobj)
'End Sub
'
'' Similar subroutines that are less complicated to use (e.g. simply use standard parameters for the PlaySound call)
'Sub PlaySoundAt(soundname, tableobj)
'    PlaySound soundname, 1, VolTable, AudioPan(tableobj), 0,0,0, 1, AudioFade(tableobj)
'End Sub
'
'Sub PlaySoundAtBall(soundname)
'    PlaySoundAt soundname, ActiveBall
'End Sub
'
''Set all as per ball position & speed, but Volume Multiplier may be used eg; PlaySoundAtBallVol "sound",3
'Sub PlaySoundAtBallVol(sound, VolMult)
' PlaySound sound, 0, Vol(ActiveBall) * VolMult, Pan(ActiveBall), 0, Pitch(ActiveBall), 0, 1, AudioFade(ActiveBall)
'End Sub
'
''Set position as table object and Volume manually.
'Sub PlaySoundAtVol(sound, tableobj, Volume)
' PlaySound sound, 1, Volume, Pan(tableobj), 0, 0, 0, 1, AudioFade(tableobj)
'End Sub
'
Sub PlayLoopSoundAtVol(sound, tableobj, Volume)
  PlaySound sound, -1, Volume, Pan(tableobj), 0, 0, 1, 0, AudioFade(tableobj)
End Sub

Sub PlaySoundVol(soundname, Volume)
  PlaySound soundname, 1, Volume
End Sub

Sub PlaySoundLoopVol(soundname, Volume)
  PlaySound soundname, -1, Volume
End Sub


'*********************************************************************
'                     Supporting Ball & Sound Functions
'*********************************************************************

'Function AudioFade(tableobj) ' Fades between front and back of the table (for surround systems or 2x2 speakers, etc), depending on the Y position on the table. "table1" is the name of the table
' Dim tmp
'    tmp = tableobj.y * 2 / table1.height-1
' On error resume next
'    If tmp > 0 Then
'   AudioFade = Csng(tmp ^10)
'    Else
'        AudioFade = Csng(-((- tmp) ^10) )
'    End If
' On error goto 0
'End Function

'Function AudioPan(tableobj) ' Calculates the pan for a tableobj based on the X position on the table. "table1" is the name of the table
'    Dim tmp
'    tmp = tableobj.x * 2 / table1.width-1
' On error resume next
'    If tmp > 0 Then
'        AudioPan = Csng(tmp ^10)
'    Else
'        AudioPan = Csng(-((- tmp) ^10) )
'    End If
' On error goto 0
'End Function

'Function Vol(ball) ' Calculates the Volume of the sound based on the ball speed
'    Vol = Csng(BallVel(ball) ^2 / 2000)
'End Function

Function Pan(ball) ' Calculates the pan for a ball based on the X position on the table. "table1" is the name of the table
    Dim tmp
    tmp = ball.x * 2 / table1.width-1
    If tmp > 0 Then
        Pan = Csng(tmp ^10)
    Else
        Pan = Csng(-((- tmp) ^10) )
    End If
End Function

'Function Pitch(ball) ' Calculates the pitch of the sound based on the ball speed
'    Pitch = BallVel(ball) * 20
'End Function

'Function BallVel(ball) 'Calculates the ball speed
'    BallVel = INT(SQR((ball.VelX ^2) + (ball.VelY ^2) ) )
'End Function


'*****************************************
'   rothbauerw's Manual Ball Control
'*****************************************
BallControlTimer.Enabled=False
'Dim BCup, BCdown, BCleft, BCright
'Dim ControlBallInPlay, ControlActiveBall
'Dim BCvel, BCyveloffset, BCboostmulti, BCboost
'
'BCboost = 1        'Do Not Change - default setting
'BCvel = 4        'Controls the speed of the ball movement
'BCyveloffset = -0.01   'Offsets the force of gravity to keep the ball from drifting vertically on the table, should be negative
'BCboostmulti = 3   'Boost multiplier to ball veloctiy (toggled with the B key)
'
'ControlBallInPlay = false
''BallControlTimer.enabled = False  ' Disable for now
'
'Sub StartBallControl_Hit()
' Set ControlActiveBall = ActiveBall
' ControlBallInPlay = true
'End Sub
'
'Sub StopBallControl_Hit()
' ControlBallInPlay = false
'End Sub
'
'Sub BallControlTimer_Timer()
' If EnableBallControl and ControlBallInPlay then
'   If BCright = 1 Then
'     ControlActiveBall.velx =  BCvel*BCboost
'   ElseIf BCleft = 1 Then
'     ControlActiveBall.velx = -BCvel*BCboost
'   Else
'     ControlActiveBall.velx = 0
'   End If
'
'   If BCup = 1 Then
'     ControlActiveBall.vely = -BCvel*BCboost
'   ElseIf BCdown = 1 Then
'     ControlActiveBall.vely =  BCvel*BCboost
'   Else
'     ControlActiveBall.vely = bcyveloffset
'   End If
' End If
'End Sub

' '********************************************
' '   JP's VP10 Rolling Sounds + Ballshadow
' ' uses a collection of shadows, aBallShadow
' '********************************************

' Const tnob = 11 ' total number of balls
' Const lob = 0   'number of locked balls
' ReDim rolling(tnob)
' InitRolling

' Sub InitRolling
'     Dim i
'     For i = 0 to tnob
'         rolling(i) = False
'     Next
' End Sub

' Sub RollingUpdate()
'     Dim BOT, b, ballpitch, ballvol
'     BOT = GetBalls

'     ' stop the sound of deleted balls
'     For b = UBound(BOT) + 1 to tnob
'     if rolling(b) Then
'       rolling(b) = False
'       StopSound("fx_ballrolling" & b)
'       StopSound("fx_metalrolling" & b)
'     End if
'     Next

'     ' exit the sub if no balls on the table
'     If UBound(BOT) = lob - 1 Then Exit Sub 'there no extra balls on this table

'   ''WriteToLog "     ", lob & " " & UBound(BOT)

'     ' play the rolling sound for each ball and draw the shadow
'     For b = lob to UBound(BOT)
'     ''WriteToLog "     ", "b"

'     ' TBD Add these back in
'     'aBallShadow(b).X = BOT(b).X
'     'aBallShadow(b).Y = BOT(b).Y

'         If BallVel(BOT(b) )> 1 and BOT(b).radius > 23 Then
'             If BOT(b).z <30 Then
'                 ballpitch = Pitch(BOT(b) )
'                 ballvol = Vol(BOT(b) )
'             Else
'                 ballpitch = Pitch(BOT(b) ) ' + 25000 'increase the pitch on a ramp (for B66 I use an elevated metal sound for ball roll instead)
'                 ballvol = Vol(BOT(b) ) * 10
'             End If
'             rolling(b) = True
'       If BOT(b).z <30 Then
'                 StopSound("fx_metalrolling" & b)
'         PlaySound("fx_ballrolling" & b), -1, ballvol * VolTable, Pan(BOT(b) ), 0, ballpitch, 1, 0, AudioFade(BOT(b) )
'       Else
'                 StopSound("fx_ballrolling" & b)
'         PlaySound("fx_metalrolling" & b), -1, ballvol * VolTable, Pan(BOT(b) ), 0, ballpitch, 1, 0, AudioFade(BOT(b) )
'       End if

'         Else
'             If rolling(b) = True Then
'                 StopSound("fx_ballrolling" & b)
'                 StopSound("fx_metalrolling" & b)
'                 rolling(b) = False
'             End If
'         End If
'         ' rothbauerw's Dropping Sounds
'         If BOT(b).VelZ < -1 and BOT(b).z < 55 and BOT(b).z > 27 Then 'height adjust for ball drop sounds
'             PlaySound "fx_ball_drop0", 0, ABS(BOT(b).velz)/17, Pan(BOT(b)), 0, Pitch(BOT(b)), 1, 0, AudioFade(BOT(b))
'         End If
'     Next
' End Sub

' ''*****************************************
' ''      JP's VP10 Rolling Sounds
' ''*****************************************
' '
' 'Const tnob = 11 ' total number of balls
' 'ReDim rolling(tnob)
' 'InitRolling
' '
' 'Sub InitRolling
' '    Dim i
' '    For i = 0 to tnob
' '        rolling(i) = False
' '    Next
' 'End Sub
' '
' 'Sub RollingTimer_Timer()
' '    Dim BOT, b
' '    BOT = GetBalls
' '
' ' ' stop the sound of deleted balls
' '    For b = UBound(BOT) + 1 to tnob
' '        rolling(b) = False
' '        StopSound("fx_ballrolling" & b)
' '    Next
' '
' ' ' exit the sub if no balls on the table
' '    If UBound(BOT) = -1 Then Exit Sub
' '
' ' ' play the rolling sound for each ball
' '    For b = 0 to UBound(BOT)
' '   If BallVel(BOT(b) ) > 1 AND BOT(b).z < 30 and BOT(b).radius > 23 Then
' '     rolling(b) = True
' '     PlaySound("fx_ballrolling" & b), -1, Vol(BOT(b)), AudioPan(BOT(b)), 0, Pitch(BOT(b)), 1, 0, AudioFade(BOT(b))
' '   Else
' '     If rolling(b) = True Then
' '       StopSound("fx_ballrolling" & b)
' '       rolling(b) = False
' '     End If
' '   End If
' '    Next
' 'End Sub

'**********************
' Ball Collision Sound
'**********************

Sub OnBallBallCollision(ball1, ball2, velocity)
  dim collAngle,bvelx,bvely,hitball, whichBall, snd
  If ball1.radius < 23 or ball2.radius < 23 then
    if (ball1.x=craneBall.x and ball1.y=craneBall.y) or _
       (ball2.x=craneBall.x and ball2.y=craneBall.y) then

''WriteToLog "     ", "Crane Ball Hit: pos:" & CranePosIdx & " idx:" & CranePos & " enabled:" & UpdateCrane.Enabled & " Vel:" & velocity
      if CranePosIdx=0 and CranePos<=-17 and UpdateCrane.Enabled=True then     'Mini ball search
        'WriteToLog "     ", "Crane Ball Collide: Move and move back"
        CraneGoto 1
        vpmtimer.AddTimer 1000, "CraneGoto 0 '"
      End If
' OLD WAY
''WriteToLog "     ", "Crane Ball Hit: Vel:" & velocity
'     if velocity > 25 then
'       CheckProgress(lCrane0)
'     End if
'     PlaySound("fx_collide"), 0, Csng(velocity) ^2 / 2000, AudioPan(ball1), 0, Pitch(ball1), 0, 0, AudioFade(ball1)
    else
'WriteToLog "     ", "Batmobile Hit"
      If ball1.radius < 23 Then
        collAngle = GetCollisionAngle(ball1.x,ball1.y,ball2.x,ball2.y)
        set hitball = ball2
        If ball1.x = postBall1.x and ball1.y = postBall1.y Then
          whichball = 1
        Else
          whichball = 2
        End If
      else
        collAngle = GetCollisionAngle(ball2.x,ball2.y,ball1.x,ball1.y)
        set hitball = ball1
        If ball2.x = postBall1.x and ball2.y = postBall1.y Then
          whichball = 1
        Else
          whichball = 2
        End If
      End If

      dim discAngle
      If whichBall = 1 Then
        discAngle = NormAngle(spinAngle)
      Else
        discAngle = NormAngle(spinAngle2)
      End If
      CheckProgress(swBatmobile)

  '   discSpinSpeed = discspinspeed + ecvel(0,1.5,sin(collAngle - discAngle)*velocity,BallMass * ABS(sin(collAngle - discAngle))) * cDiscSpeedMult

  '   PlaySound "fx_lamphit", 0, Csng(velocity) ^2 / 2000, AudioPan(ball1), 0, Pitch(ball1), 1, 0, AudioFade(ball1)

      dim sineOfAngle, sineOfAngleSqr
      sineOfAngle = sin(collAngle - discAngle)

      discSpinSpeed = discspinspeed + ecvel(0,1.5,sineOfAngle*velocity,BallMass) * cDiscSpeedMult
      discStartPosition = discPosition

      PlaySound("metalhit2"), 0, Csng(BallVel(ActiveBall)) ^2 / 500, Pan(ActiveBall), 0, Pitch(ActiveBall), 0, 0, AudioFade(ActiveBall)
      PlaySound "sfx-general-batcave1", 0, Csng(velocity) ^2 / 2000 / 3, AudioPan(ball1), 0, Pitch(ball1), 1, 0, AudioFade(ball1)
    End If
  Else
    FlipperCradleCollision ball1, ball2, velocity

    Select Case Int(Rnd * 7) + 1
      Case 1
        snd = "Ball_Collide_1"
      Case 2
        snd = "Ball_Collide_2"
      Case 3
        snd = "Ball_Collide_3"
      Case 4
        snd = "Ball_Collide_4"
      Case 5
        snd = "Ball_Collide_5"
      Case 6
        snd = "Ball_Collide_6"
      Case 7
        snd = "Ball_Collide_7"
    End Select

    PlaySound (snd), 0, CSng(velocity) ^ 2 / 200 * BallWithBallCollisionSoundFactor * VolumeDial, AudioPan(ball1), 0, Pitch(ball1), 0, 0, AudioFade(ball1)

  End If
End Sub

'Sub OnBallBallCollision(ball1, ball2, velocity)
'
' FlipperCradleCollision ball1, ball2, velocity
'
' Dim snd
' Select Case Int(Rnd * 7) + 1
'   Case 1
'     snd = "Ball_Collide_1"
'   Case 2
'     snd = "Ball_Collide_2"
'   Case 3
'     snd = "Ball_Collide_3"
'   Case 4
'     snd = "Ball_Collide_4"
'   Case 5
'     snd = "Ball_Collide_5"
'   Case 6
'     snd = "Ball_Collide_6"
'   Case 7
'     snd = "Ball_Collide_7"
' End Select
'
' PlaySound (snd), 0, CSng(velocity) ^ 2 / 200 * BallWithBallCollisionSoundFactor * VolumeDial, AudioPan(ball1), 0, Pitch(ball1), 0, 0, AudioFade(ball1)
'End Sub

Function ECVel(Velocity1, Mass1, Velocity2, Mass2)
  ECVel = (Mass1 - Mass2)/(Mass1 + Mass2) * Velocity1  + 2 * Mass2/(Mass1 + Mass2)*Velocity2
End Function


Function GetCollisionAngle(ax, ay, bx, by)
  Dim ang
  Dim collisionV:Set collisionV = new jVector
  collisionV.SetXY ax - bx, ay - by
  GetCollisionAngle = collisionV.ang
End Function

Function NormAngle(angle)
  NormAngle = angle
  Dim pi:pi = 3.14159265358979323846
  Do While NormAngle>2 * pi
    NormAngle = NormAngle - 2 * pi
  Loop
  Do While NormAngle <0
    NormAngle = NormAngle + 2 * pi
  Loop
End Function

Class jVector
     Private m_mag, m_ang, pi

     Sub Class_Initialize
         m_mag = CDbl(0)
         m_ang = CDbl(0)
         pi = CDbl(3.14159265358979323846)
     End Sub

     Public Function add(anothervector)
         Dim tx, ty, theta
         If TypeName(anothervector) = "jVector" then
             Set add = new jVector
             add.SetXY x + anothervector.x, y + anothervector.y
         End If
     End Function

     Public Function multiply(scalar)
         Set multiply = new jVector
         multiply.SetXY x * scalar, y * scalar
     End Function

     Sub ShiftAxes(theta)
         ang = ang - theta
     end Sub

     Sub SetXY(tx, ty)

         if tx = 0 And ty = 0 Then
             ang = 0
          elseif tx = 0 And ty <0 then
             ang = - pi / 180 ' -90 degrees
          elseif tx = 0 And ty>0 then
             ang = pi / 180   ' 90 degrees
         else
             ang = atn(ty / tx)
             if tx <0 then ang = ang + pi ' Add 180 deg if in quadrant 2 or 3
         End if

         mag = sqr(tx ^2 + ty ^2)
     End Sub

     Property Let mag(nmag)
         m_mag = nmag
     End Property

     Property Get mag
         mag = m_mag
     End Property

     Property Let ang(nang)
         m_ang = nang
         Do While m_ang>2 * pi
             m_ang = m_ang - 2 * pi
         Loop
         Do While m_ang <0
             m_ang = m_ang + 2 * pi
         Loop
     End Property

     Property Get ang
         Do While m_ang>2 * pi
             m_ang = m_ang - 2 * pi
         Loop
         Do While m_ang <0
             m_ang = m_ang + 2 * pi
         Loop
         ang = m_ang
     End Property

     Property Get x
         x = m_mag * cos(ang)
     End Property

     Property Get y
         y = m_mag * sin(ang)
     End Property

     Property Get dump
         dump = "vector "
         Select Case CInt(ang + pi / 8)
             case 0, 8:dump = dump & "->"
             case 1:dump = dump & "/'"
             case 2:dump = dump & "/\"
             case 3:dump = dump & "'\"
             case 4:dump = dump & "<-"
             case 5:dump = dump & ":/"
             case 6:dump = dump & "\/"
             case 7:dump = dump & "\:"
         End Select

         dump = dump & " mag:" & CLng(mag * 10) / 10 & ", ang:" & CLng(ang * 180 / pi) & ", x:" & CLng(x * 10) / 10 & ", y:" & CLng(y * 10) / 10
     End Property
End Class

'*****************************************
' ninuzzu's BALL SHADOW
'*****************************************
Dim BallShadow
'BallShadow = Array (BallShadow1,BallShadow2,BallShadow3,BallShadow4,BallShadow5)
BallShadow = Array (BallShadow1,BallShadow2,BallShadow3,BallShadow4,BallShadow5,BallShadow6,BallShadow7,BallShadow8,BallShadow9,BallShadow10,BallShadow11)

Sub BallShadowUpdate()
    Dim b
    'gBOT = GetBalls

    ' hide shadow of deleted balls
'    If UBound(gBOT)<(tnob-1) Then
'        For b = (UBound(gBOT) + 1) to (tnob-1)
'            BallShadow(b).visible = 0
'        Next
'    End If
    ' exit the Sub if no balls on the table
    If UBound(gBOT) = -1 Then Exit Sub
    ' render the shadow for each ball
    For b = 0 to UBound(gBOT)

    if gBOT(b).radius > 23 then
  '   Function InRect(px,py,ax,ay,bx,by,cx,cy,dx,dy) 'Determines if a Points (px,py) is inside a 4 point polygon A-D in Clockwise/CCW order
      if InRect(gBOT(b).x, gBOT(b).y, 514, 1959, 866, 1730, 868, 1873, 521, 2057) Then  'ball in trough
        BallShadow(b).visible = 0
      else
        BallShadow(b).visible = 1
        If gBOT(b).X < Table1.Width/2 Then
          BallShadow(b).X = ((gBOT(b).X) - (Ballsize/6) + ((gBOT(b).X - (Table1.Width/2))/7)) + 6
        Else
          BallShadow(b).X = ((gBOT(b).X) + (Ballsize/6) + ((gBOT(b).X - (Table1.Width/2))/7)) - 6
        End If
        ballShadow(b).Y = gBOT(b).Y + 12
        If gBOT(b).Z > 20 Then
          BallShadow(b).visible = 1
        Else
          BallShadow(b).visible = 0
        End If
      End If
    end if
    Next
End Sub

Sub EmptyBallLock
'WriteToLog "     ", "Empty Ball Lock"
  if BallsInLock <> 0 then
    BallsInLock=0
    bMultiBallMode=True
  End If
  RPFA_BallLockPost.Visible=False
  RPFA_BallLockPos1.Collidable=False
  if bBallLockInit Then       ' Dont wait on initialize
'WriteToLog "     ", "Ball Lock Init"
    bBallLockInit=False
    RPFA_BallLockPos1.Collidable=True:RPFA_BallLockPost.Visible=True
  Else
    vpmTimer.AddTimer 3000, "RPFA_BallLockPos1.Collidable=True:RPFA_BallLockPost.Visible=True '"
  End if
End Sub

Sub EnableBallLock(bEnable) ' Set up Ball Trough to capture balls, Only stay active for a bit
'WriteToLog "     ", "EnableBallLock:" & bEnable & " bBackGateIsOpen:" & bBackGateIsOpen
  if bEnable and bBackGateIsOpen=False then exit sub      ' Not ready to accept a ball
  if bEnable then
    trgBallLock1.Enabled = False
    trgBallLock2.Enabled = False
    trgBallLock3.Enabled = False
    if BallsInLock = 0 then trgBallLock1.Enabled = True
    if BallsInLock = 1 then trgBallLock2.Enabled = True
    if BallsInLock = 2 then trgBallLock3.Enabled = True
    VPMTimer.AddTimer 2000, "EnableBallLock False '"    ' Auto disable after a bit (otherwise people can share the table and trigger multiball)
  Else
    trgBallLock1.Enabled = False
    trgBallLock2.Enabled = False
    trgBallLock3.Enabled = False
  End If
End Sub


Sub trgBallLock1_Hit()
'WriteToLog "     ", " BallLock1"
  if bBackGateIsOpen=False then exit sub            ' ERROR - Ball cant hit this when back gate is closed
  set LockedBall1=ActiveBall
  vpmTimer.AddTimer 1000, "HandleLockTrough True '"
End Sub
Sub trgBallLock2_Hit()
'WriteToLog "     ", " BallLock2"
  if bBackGateIsOpen=False then exit sub            ' ERROR - Ball cant hit this when back gate is closed
  set LockedBall2=ActiveBall
  vpmTimer.AddTimer 1000, "HandleLockTrough True '"
End Sub
Sub trgBallLock3_Hit()
'WriteToLog "     ", " BallLock3"
  if bBackGateIsOpen=False then exit sub            ' ERROR - Ball cant hit this when back gate is closed
  set LockedBall3=ActiveBall
  if BallsInLockVirtual=2 then SetLightColor lLock2, "green", 1   ' Just cosmetic
' if (CurrentPlayer=0 and BallsInLock=2) or (CurrentPlayer<>0 and BallsInLockVirtual=2) then SetLightColor lLock2, "green", 1   ' Just cosmetic

  vpmTimer.AddTimer 1000, "HandleLockTrough True '"
End Sub

Sub HandleLockTrough(bReal)
  dim queueLen

'WriteToLog "     ", "HandleLockTrough"
  if BallsInLockVirtual<3 then
    OpenPFAGate False
    if bReal then BallsInLock=BallsInLock+1
    BallsInLockVirtual=BallsInLockVirtual+1
    if BallsInLockVirtual=1 then
      PlaySoundVol "b66-ball-1-locked", VolDef
      BallSaverTimerCancel
      bBallSaverReady=True
      PlayerState(CurrentPlayer).SetBallLockStates 0, 1   ' Set lock1
      PauseTimersForce 99000                  ' Pause timers for a really long time in shooter lane
      DoBallLockScene sSwapPos, 1
      if bReal then
        vpmTimer.Addtimer 3200, "ResetForNewPlayerBall(True):CreateNewBall() '"
      else
        vpmTimer.Addtimer 3200, "ResetForNewPlayerBall(True) '"   ' Dont create the ball
      End if

    elseif BallsInLockVirtual=2 then
      PlaySoundVol "b66-ball-2-locked", VolDef

      BallSaverTimerCancel
      bBallSaverReady=True
      PlayerState(CurrentPlayer).SetBallLockStates 1, 1     ' Set lock2
      PauseTimersForce 99000                  ' Pause timers for a really long time in shooter lane
      DoBallLockScene sSwapPos, 2
      if bReal then
        vpmTimer.Addtimer 3200, "ResetForNewPlayerBall(True):CreateNewBall() '"
      else
        vpmTimer.Addtimer 3200, "ResetForNewPlayerBall(True) '"   ' Dont create the ball
      End if

    elseif BallsInLockVirtual=3 then      ' Rotate to Empty Ball Lock (Start VillainMB)
      PlayerState(CurrentPlayer).SetBallLockStates 0, 0     ' Set lock1,2,3 to 0
      PlayerState(CurrentPlayer).SetBallLockStates 1, 0
      PlayerState(CurrentPlayer).SetBallLockStates 2, 0

      EnableBatCompPulse False
      EnableCrimeAnaPulse False

      PlayerState(CurrentPlayer).SetProgress(kWiz_VillainMB)=0    ' start over
      PlayerState(CurrentPlayer).ProgressVMBMax=12          ' Start with 12 shots
      PlayerState(CurrentPlayer).Villains(kWiz_VillainMB).JackpotValue=1000000    ' Start with 1M extra Jackpot bonus
      ClearBonusTotal(kWiz_VillainMB)                 ' Reset just in case
      ClearBonusMode(kWiz_VillainMB)                  ' Reset just in case

      trgBallLock3.Enabled=False
      TurnTable_Goto(kTT_TV)
      EnableBallSaver 20

      PlayerState(CurrentPlayer).AddScreen(kWiz_VillainMB)      ' Add a screen
      pDMDMulti2 PlayerState(CurrentPlayer).getPupScreen(kWiz_VillainMB)    ' Swap the new screen to the middle

      PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightRiddlerArrow1, "green", 2
      PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightRiddlerArrow2, "green", 2
      PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightJokerArrow, "green", 2
      PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightPengArrow, "green", 2
      PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightCatArrow1, "green", 2
      PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightCatArrow2, "green", 2

      PlayerState(CurrentPlayer).setActive(kWiz_VillainMB)=True

      ' Timer to release ball 4 seconds after the first clip plays
      queueLen=getQueueTimeV(kWiz_VillainMB)
      tmrBallTroughDelay.Interval = 4000+2837   ' +queueLen     - We dont need queue len since 2837 is the length of the first clip.  Somehow this adds a huge time to the timer
      tmrBallTroughDelay.Enabled = True

      PlayerState(CurrentPlayer).AddProgress2 kWiz_VillainMB, True    ' Make sure it is doesnt get cleared
      PlayerState(CurrentPlayer).RestoreAllLights()
      PauseTimersForce 4500
      SetVBackground
      SetBGMusic

    End If
  End If
'
'
'                 ' ************  REAL LOCKS *******************
' if CurrentPlayer=0 then       ' Only first player does real locks. Everyone else if virtual
'   if BallsInLock<3 then
'     OpenPFAGate False
'     BallsInLock=BallsInLock+1
'     if BallsInLock=1 then
'       PlaySoundVol "b66-ball-1-locked", VolDef
' '     vpmTimer.AddTimer 1000, "UpdateJokerMech 0, 100, 0 '"
'       BallSaverTimerCancel
'       bBallSaverReady=True
'       trgBallLock1.Enabled=False
'       trgBallLock2.Enabled=True
'       PlayerState(CurrentPlayer).SetBallLockStates 0, 1   ' Set lock1
'       PauseTimersForce 99000                  ' Pause timers for a really long time in shooter lane
'       DoBallLockScene sSwapPos, 1
'       vpmTimer.Addtimer 3200, "ResetForNewPlayerBall(True):CreateNewBall() '"
'
'     elseif BallsInLock=2 then
'       PlaySoundVol "b66-ball-2-locked", VolDef
'
'       BallSaverTimerCancel
'       bBallSaverReady=True
'       trgBallLock2.Enabled=False
'       trgBallLock3.Enabled = True
'       PlayerState(CurrentPlayer).SetBallLockStates 1, 1     ' Set lock2
'       PauseTimersForce 99000                  ' Pause timers for a really long time in shooter lane
'       DoBallLockScene sSwapPos, 2
'       vpmTimer.Addtimer 3200, "ResetForNewPlayerBall(True):CreateNewBall() '"
'
'     elseif BallsInLock=3 then       ' Rotate to Empty Ball Lock (Start VillainMB)
'       PlayerState(CurrentPlayer).SetBallLockStates 0, 0     ' Set lock1,2,3 to 0
'       PlayerState(CurrentPlayer).SetBallLockStates 1, 0
'       PlayerState(CurrentPlayer).SetBallLockStates 2, 0
'
'       EnableBatCompPulse False
'       EnableCrimeAnaPulse False
'
'       PlayerState(CurrentPlayer).ProgressVMBMax=12          ' Start with 12 shots
'       PlayerState(CurrentPlayer).Villains(kWiz_VillainMB).JackpotValue=1000000    ' Start with 1M extra Jackpot bonus
'       ClearBonusTotal(kWiz_VillainMB)                 ' Reset just in case
'       ClearBonusMode(kWiz_VillainMB)                  ' Reset just in case
'
'       trgBallLock3.Enabled=False
'       TurnTable_Goto(kTT_TV)
'       EnableBallSaver 20
'
'       PlayerState(CurrentPlayer).AddScreen(kWiz_VillainMB)      ' Add a screen
'       pDMDMulti2 PlayerState(CurrentPlayer).getPupScreen(kWiz_VillainMB)    ' Swap the new screen to the middle
'
'       PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightRiddlerArrow1, "green", 2
'       PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightRiddlerArrow2, "green", 2
'       PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightJokerArrow, "green", 2
'       PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightPengArrow, "green", 2
'       PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightCatArrow1, "green", 2
'       PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightCatArrow2, "green", 2
'
'       PlayerState(CurrentPlayer).setActive(kWiz_VillainMB)=True
'       PlayerState(CurrentPlayer).AddProgress(kWiz_VillainMB)
'       PlayerState(CurrentPlayer).RestoreAllLights()
'       PauseTimersForce 4500
'       SetVBackground
'       SetBGMusic
'
'     End If
'   End If
' Else              ' ************  VIRTUAL LOCKS *******************
'
'   if BallsInLockVirtual<3 then
'     OpenPFAGate False
'     BallsInLockVirtual=BallsInLockVirtual+1
'     if BallsInLockVirtual=1 then
'       PlaySoundVol "b66-ball-1-locked", VolDef
'       BallSaverTimerCancel
'       bBallSaverReady=True
''        trgBallLock1.Enabled=False
''        trgBallLock2.Enabled=True
'       PlayerState(CurrentPlayer).SetBallLockStates 0, 1   ' Set lock1
'       DoBallLockScene sSwapPos, 1
'       vpmTimer.Addtimer 3200, "ResetForNewPlayerBall(True) '"   ' Dont create the ball
'
'     elseif BallsInLockVirtual=2 then
'       PlaySoundVol "b66-ball-2-locked", VolDef
'
'       BallSaverTimerCancel
'       bBallSaverReady=True
''        trgBallLock2.Enabled=False
''        trgBallLock3.Enabled = True
'       PlayerState(CurrentPlayer).SetBallLockStates 1, 1     ' Set lock2
'       DoBallLockScene sSwapPos, 2
'       vpmTimer.Addtimer 3200, "ResetForNewPlayerBall(True) '"   ' Dont create the ball
'
'     elseif BallsInLockVirtual=3 then      ' Rotate to Empty Ball Lock (Start VillainMB)
'       PlayerState(CurrentPlayer).SetBallLockStates 0, 0     ' Set lock1,2,3 to 0
'       PlayerState(CurrentPlayer).SetBallLockStates 1, 0
'       PlayerState(CurrentPlayer).SetBallLockStates 2, 0
'
'       EnableBatCompPulse False
'       EnableCrimeAnaPulse False
'
'       PlayerState(CurrentPlayer).ProgressVMBMax=12      ' Start with 12 shots
'
'       trgBallLock3.Enabled=False
'       TurnTable_Goto(kTT_TV)
'       EnableBallSaver 20
'
'       PlayerState(CurrentPlayer).AddScreen(kWiz_VillainMB)      ' Add a screen
'       pDMDMulti2 PlayerState(CurrentPlayer).getPupScreen(kWiz_VillainMB)    ' Swap the new screen to the middle
'
'       PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightRiddlerArrow1, "green", 2
'       PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightRiddlerArrow2, "green", 2
'       PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightJokerArrow, "green", 2
'       PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightPengArrow, "green", 2
'       PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightCatArrow1, "green", 2
'       PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainMB, kLightCatArrow2, "green", 2
'
'       PlayerState(CurrentPlayer).setActive(kWiz_VillainMB)=True
'       PlayerState(CurrentPlayer).AddProgress(kWiz_VillainMB)
'       PlayerState(CurrentPlayer).RestoreAllLights()
'       SetVBackground
'       SetBGMusic
'
'     End If
'   End If
' End if

End Sub

Sub EndVillainMB
  Dim i
  Dim screen
  Dim TmpStr

  tmpStr="VMB"

  bFlash1Enabled=False
  DOF 128, DOFOff 'Beacon Off
  'WriteToLog "     ", "VillainMB End"
  TurnTable_Goto(kTT_Batcave)   ' Go back to the batcave

  screen = PlayerState(CurrentPlayer).getPupScreen(kWiz_VillainMB)
  if screen=-1 then
    'WriteToLog "     ", "EndVillainMB ERROR!!!!!!!!!!!!!!!!!!!!!!!!!!"
    exit sub                                                ' Just in case
  End if

  PuPlayer.LabelSet screen,"GeneralCenter3","MULTIBALL TOTAL:", 1, "{'mt':2,'size':11,'color':" & pupWhite & "}"
  PuPlayer.LabelSet screen,"GeneralCenter2",FormatScore(GetBonusTotal(kWiz_VillainMB)), 1, "{'mt':2,'size':12}"

  if PlayerState(CurrentPlayer).Villains(kWiz_VillainMB).ModeTotal > PlayerState(CurrentPlayer).Villains(kWiz_VillainMB).ModeHSTotal then
    PlayerState(CurrentPlayer).Villains(kWiz_VillainMB).ModeHSTotal = PlayerState(CurrentPlayer).Villains(kWiz_VillainMB).ModeTotal
  End if


  QueueFlushS screen
  QueueSceneS screen, "playclear "&screen&":playmedia ""finish.mp4"", ""video-" & tmpStr & """, "&screen&", """", -1, """", 1, 1 ", 4046, 1
  QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter3"","""", 1, ""{'mt':2,'size':6}"" ",  -1, 1
  QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter2"","""", 1, ""{'mt':2,'size':6}"" ",  -1, 1
  QueueSceneS2 screen, "EndVillainMB2 ", 200, 1, True
  EndOfBallWaitTime = getQueueTimeS(screen)
  PlayerState(CurrentPlayer).SetEnabled(kWiz_VillainMB) = False

End Sub

Sub EndVillainMB2()
' pDMDMulti2 pMVideo        ' Goto the main screen
  PlayerState(CurrentPlayer).setActive(kWiz_VillainMB)=False
  PlayerState(CurrentPlayer).RemoveScreen(kWiz_VillainMB)     ' remove the screen
  SetVBackground
  SetBGMusic

  PlayerState(CurrentPlayer).SSetLightColorRestore kLightRiddlerArrow1
  PlayerState(CurrentPlayer).SSetLightColorRestore kLightRiddlerArrow2
  PlayerState(CurrentPlayer).SSetLightColorRestore kLightPengArrow
  PlayerState(CurrentPlayer).SSetLightColorRestore kLightJokerArrow
  PlayerState(CurrentPlayer).SSetLightColorRestore kLightCatArrow1
  PlayerState(CurrentPlayer).SSetLightColorRestore kLightCatArrow2

End Sub

Sub QualifyVillainEscape
'WriteToLog "     ", "Qualify VESC"
  PlayerState(CurrentPlayer).setEnabled(kWiz_VillainEscape)=True
  SetMajorQualLights False
  SetLightColor lBatSignal, "", 2
  SetLightFlasher flshBatSignal, 2
End Sub

Sub StartVillainEscape
  if PlayerState(CurrentPlayer).isActive(kWiz_VillainEscape)=False then           ' We didnt start it yet
'WriteToLog "     ", "StartVillainEscape"

    PlayerState(CurrentPlayer).VillainEscapeEverythingTotal=5000000           ' TBD Figure out how this is calculated based on progress?
                                              '     I am guessing it is the total progress * SomeValue
    PlayerState(CurrentPlayer).Villains(kWiz_VillainEscape).JackpotBase  = 10000    ' Increment value
    PlayerState(CurrentPlayer).Villains(kWiz_VillainEscape).JackpotValue = PlayerState(CurrentPlayer).VillainEscapeEverythingTotal    ' Current Value

    PlayerState(CurrentPlayer).AddScreen(kWiz_VillainEscape)              ' Add a screen
    pDMDMulti2 PlayerState(CurrentPlayer).getPupScreen(kWiz_VillainEscape)        ' Swap the new screen to the middle

    TurnTable_Goto(kTT_Batcave)       ' Go to BatCave
    tmrVillainEscape.UserValue = 30     ' 30 second, no grace period
    tmrVillainEscape.Interval = 1000
    'tmrVillainEscape.Enabled = True    ' Dont do this until we kick the ball
    EnableBallSaver 90            ' Ball save the whole time (and plus some to account for timers pausing)

    ' Clear lights
    SetLightColor lCatwoman,"", 0
    SetLightColor lJoker,   "",  0
    SetLightColor lPeng,  "",0
    SetLightColor lRiddler, "", 0

    SetLightColor lBatSignal, "", 0
    SetLightFlasher flshBatSignal, 0

    ' Save this so we know if things moved around
    tmrVillainEscapePos=0       ' Main Screen
    DrawModeTimer tmrVillainEscapePos, tmrVillainEscape.UserValue, True, False

    PlayerState(CurrentPlayer).setActive(kWiz_VillainEscape)=True
    PlayerState(CurrentPlayer).AddProgress(kWiz_VillainEscape)
    PlayerState(CurrentPlayer).RestoreAllLights()
    SetVBackground
    SetBGMusic
    StartVillainEscape2Cnt=0
  End if

End Sub

Dim StartVillainEscape2Cnt
Sub StartVillainEscape2   ' Start second phase MB
  Dim curScore
'WriteToLog "     ", "StartVillainEscape2:" & StartVillainEscape2Cnt

  ' Clear lights
  SetLightColor lCatwoman,"", 0
  SetLightColor lJoker,   "",  0
  SetLightColor lPeng,  "",0
  SetLightColor lRiddler, "", 0

  tmrVillainEscape.Enabled=False
' PlayerState(CurrentPlayer).AddProgress kWiz_VillainEscape
' ImageGrowShow "VMB.gif", True, 3500, ""
  TurnTable_Goto(kTT_TV)        ' Go to TV
  if StartVillainEscape2Cnt=0 then
    bAddABallGiven=False
    AddMultiball 4
    if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2Shame) or PlayerState(CurrentPlayer).isAwardActive(kMinV_S3Shame) Then  ' Extra ball
      AddMultiball PlayerState(CurrentPlayer).ShameCompletions
    End if
    PlayerState(CurrentPlayer).SetProgress(kWiz_VillainEscape)=3
    PlayerState(CurrentPlayer).AddProgress kWiz_VillainEscape
    ImageGrowShow "VMB.gif", True, 3500, ""

  Else
    AddMultiball 1

    ' Animate score and show on TV
    curScore=PlayerState(CurrentPlayer).Jackpot(kWiz_VillainEscape)
    ImageGrowShow "VMB-SJ.png", False, 200, FormatScore(curScore)
    RotatingPFATV.UserValue="VMB-SJ"
    tmrTVScreen.Interval=0
    tmrTVScreen.Uservalue=20
    tmrTVScreen.Enabled=True

    DOF 622, DOFPulse 'SUPER JACKPOT

    PlayerState(CurrentPlayer).setFinished(kWiz_VillainEscape) = False
    PlayerState(CurrentPlayer).AddProgress kWiz_VillainEscape
    PlayerState(CurrentPlayer).SetProgress(kWiz_VillainEscape)=4  ' just loop
  End if
  EnableBallSaver 20


  lBatSignal.state = 1
  SetLightFlasher flshBatSignal, 0
  StartCrane(True)
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCatArrow1, "white", 2
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCatArrow2, "white", 2

  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightRiddlerArrow1, "green", 2
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightRiddlerArrow2, "green", 2
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightRiddlerO1, "", 2
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightRiddlerO2, "", 2

  ' Set Joker back up (base on the number of turns
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightJokerArrow, "red", 2
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightJokerJ, "", 0
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightJokerO, "", 0
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightJokerK, "", 0
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightJokerE, "", 0
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightJokerR, "", 0

  if StartVillainEscape2Cnt<=3 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightJokerJ, "", 1
  if StartVillainEscape2Cnt<=2 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightJokerO, "", 1
  if StartVillainEscape2Cnt<=1 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightJokerK, "", 1
  if StartVillainEscape2Cnt =0 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightJokerE, "", 1

  if StartVillainEscape2Cnt>=4 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightJokerJ, "", 2
  if StartVillainEscape2Cnt=3 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightJokerO, "", 2
  if StartVillainEscape2Cnt=2 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightJokerK, "", 2
  if StartVillainEscape2Cnt=1 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightJokerE, "", 2
  if StartVillainEscape2Cnt=0 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightJokerR, "", 2
  ' end Joker

  ' Set up Catwoman
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCatArrow1, "white", 2
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCatArrow2, "white", 2

  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCat1, "white",0
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCat2, "white",0
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCat3, "white",0
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCat4, "white",0
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCat5, "white",0
  PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCat6, "white",0

  if StartVillainEscape2Cnt<=1 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCat1, "white",1
  if StartVillainEscape2Cnt=0 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCat2, "white", 1
  if StartVillainEscape2Cnt<=1 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCat4, "white",1
  if StartVillainEscape2Cnt=0 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCat5, "white",1

  if StartVillainEscape2Cnt>=2 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCat1, "white",2
  if StartVillainEscape2Cnt=1 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCat2, "white", 2
  if StartVillainEscape2Cnt=0 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCat3, "white", 2
  if StartVillainEscape2Cnt>=2 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCat4, "white",2
  if StartVillainEscape2Cnt=1 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCat5, "white", 2
  if StartVillainEscape2Cnt=0 then PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightCat6, "white", 2
  ' End Set up Catwoman

  StartVillainEscape2Cnt=StartVillainEscape2Cnt+1
End Sub

Sub StartVillainEscapeKick
  'WriteToLog "     ", "StartVillainEscape"
  Kicker001Kick False
' Kicker001.Kick -90, 10
  CheckGadgetSpecialEnd()
  tmrVillainEscape.Enabled=True
  PauseTimers -1
End Sub

Sub EndVillainEscape
  Dim i
  Dim screen
  Dim TmpStr
  Dim ModeScore

  if PlayerState(CurrentPlayer).IsActive(kWiz_VillainEscape) then
'WriteToLog "     ", "EndVillainEscape"
    tmrVillainEscape.Enabled = False

    tmpStr="VESC"

    'WriteToLog "     ", "VillainEscape End"
    TurnTable_Goto(kTT_TV)    ' Go back to TV (We should already be here)
    StopCrane

    screen = PlayerState(CurrentPlayer).getPupScreen(kWiz_VillainEscape)
    If screen = -1 then
      'WriteToLog "     ", "ERROR EndVillainEscape!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
      Exit sub
    End if

    ModeScore=FormatScore(PlayerState(CurrentPlayer).Villains(kWiz_VillainEscape).ModeTotal)
    PuPlayer.LabelSet screen,"GeneralCenter3","VILLAIN ESCAPE TOTAL:", 1, "{'mt':2,'size':8,'color':" & pupWhite & "}"
    PuPlayer.LabelSet screen,"GeneralCenter2",FormatScore(ModeScore), 1, "{'mt':2,'size':12}"
    PuPlayer.LabelSet screen,"GeneralBottom1","", 1, "{'mt':2,'size':12}"
    PuPlayer.LabelSet screen,"GeneralBottom2","", 1, "{'mt':2,'size':12}"
    PuPlayer.LabelSet screen,"GeneralBottom3","", 1, "{'mt':2,'size':12}"

    if PlayerState(CurrentPlayer).Villains(kWiz_VillainEscape).ModeTotal > PlayerState(CurrentPlayer).Villains(kWiz_VillainEscape).ModeHSTotal then
      PlayerState(CurrentPlayer).Villains(kWiz_VillainEscape).ModeHSTotal = PlayerState(CurrentPlayer).Villains(kWiz_VillainEscape).ModeTotal
    End if
    PlayerState(CurrentPlayer).Villains(kWiz_VillainEscape).ModeTotal=0

    ClearModeTimer tmrVillainEscapePos
    QueueFlushS screen
    QueueSceneS screen, "playclear "&screen&":playmedia ""finish.mp4"", ""video-" & tmpStr & """, "&screen&", """", -1, """", 1, 1 ", 4046, 1
    QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter3"","""", 1, ""{'mt':2,'size':6}"" ",  -1, 1
    QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter2"","""", 1, ""{'mt':2,'size':6}"" ",  -1, 1
    QueueSceneS2 screen, "EndVillainEscape2 ", 200, 1, True
    EndOfBallWaitTime = getQueueTimeS(screen)

    PlayerState(CurrentPlayer).VEscapeProgress(kMajV_CatWoman)=False
    PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Joker)=False
    PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Peng)=False
    PlayerState(CurrentPlayer).VEscapeProgress(kMajV_Riddler)=False

    ' Select Alternate Seasons
'   if PlayerState(CurrentPlayer).isAwardActive(kWiz_VillainEscape) then          ' Did we finish it once (You dont have to finish to end this)
      if PlayerState(CurrentPlayer).SeasonIdx(kMajV_CatWoman)=kMajV_S1CatWoman then
        PlayerState(CurrentPlayer).SeasonIdx(kMajV_CatWoman)=kMajV_S2CatWoman
        PlayerState(CurrentPlayer).setActive(kMajV_S1CatWoman)=False
        PlayerState(CurrentPlayer).setActive(kMajV_S2CatWoman)=True
        PlayerState(CurrentPlayer).Villains(kMajV_S1CatWoman).bAwardActive = False
      Else
        PlayerState(CurrentPlayer).SeasonIdx(kMajV_CatWoman)=kMajV_S1CatWoman
        PlayerState(CurrentPlayer).setActive(kMajV_S1CatWoman)=True
        PlayerState(CurrentPlayer).setActive(kMajV_S2CatWoman)=False
        PlayerState(CurrentPlayer).Villains(kMajV_S2CatWoman).bAwardActive = False
      End if

      if  PlayerState(CurrentPlayer).SeasonIdx(kMajV_Joker)=kMajV_S1Joker then
        PlayerState(CurrentPlayer).SeasonIdx(kMajV_Joker)=kMajV_S2Joker
        PlayerState(CurrentPlayer).setActive(kMajV_S1Joker)=False
        PlayerState(CurrentPlayer).setActive(kMajV_S2Joker)=True
        PlayerState(CurrentPlayer).Villains(kMajV_S1Joker).bAwardActive = False
      Else
        PlayerState(CurrentPlayer).SeasonIdx(kMajV_Joker)=kMajV_S1Joker
        PlayerState(CurrentPlayer).setActive(kMajV_S1Joker)=True
        PlayerState(CurrentPlayer).setActive(kMajV_S2Joker)=False
        PlayerState(CurrentPlayer).Villains(kMajV_S2Joker).bAwardActive = False
      End if

      if PlayerState(CurrentPlayer).SeasonIdx(kMajV_Peng)=kMajV_S1Peng then
        PlayerState(CurrentPlayer).SeasonIdx(kMajV_Peng)=kMajV_S2Peng
        PlayerState(CurrentPlayer).setActive(kMajV_S1Peng)=False
        PlayerState(CurrentPlayer).setActive(kMajV_S2Peng)=True
        PlayerState(CurrentPlayer).Villains(kMajV_S1Peng).bAwardActive = False
      Else
        PlayerState(CurrentPlayer).SeasonIdx(kMajV_Peng)=kMajV_S1Peng
        PlayerState(CurrentPlayer).setActive(kMajV_S1Peng)=True
        PlayerState(CurrentPlayer).setActive(kMajV_S2Peng)=False
        PlayerState(CurrentPlayer).Villains(kMajV_S2Peng).bAwardActive = False
      End if

      if PlayerState(CurrentPlayer).SeasonIdx(kMajV_Riddler)=kMajV_S1Riddler then
        PlayerState(CurrentPlayer).SeasonIdx(kMajV_Riddler)=kMajV_S2Riddler
        PlayerState(CurrentPlayer).setActive(kMajV_S1Riddler)=False
        PlayerState(CurrentPlayer).setActive(kMajV_S2Riddler)=True
        PlayerState(CurrentPlayer).Villains(kMajV_S1Riddler).bAwardActive = False
      Else
        PlayerState(CurrentPlayer).SeasonIdx(kMajV_Riddler)=kMajV_S1Riddler
        PlayerState(CurrentPlayer).setActive(kMajV_S1Riddler)=True
        PlayerState(CurrentPlayer).setActive(kMajV_S2Riddler)=False
        PlayerState(CurrentPlayer).Villains(kMajV_S2Riddler).bAwardActive = False
      End if
      PlayerState(CurrentPlayer).Villains(kWiz_VillainEscape).bAwardActive = False    ' Re-Enable for another round
'   End if

    ' Set Mode Lights
    SetDefPulse(lJoker):SetLightColor lJoker, "", 0
    SetDefPulse(lCatwoman):SetLightColor lCatwoman, "", 0
    SetDefPulse(lRiddler):SetLightColor lRiddler, "", 0
    SetDefPulse(lPeng):SetLightColor lPeng, "", 0
    SetLightColor lBatSignal, "", 0
    SetMajorQualLights True                                 ' Turn these back on after we set things back up
    SetLightFlasher flshBatSignal, 0                            ' Turn off bat flasher in case it is on

  End if
End Sub


Sub EndVillainEscape2()
' pDMDMulti2 pMVideo        ' Goto the main screen
  PlayerState(CurrentPlayer).SetEnabled(kWiz_VillainEscape)=False
  PlayerState(CurrentPlayer).setActive(kWiz_VillainEscape)=False
  PlayerState(CurrentPlayer).RemoveScreen(kWiz_VillainEscape)     ' remove the screen
  SetVBackground
  SetBGMusic

  SetMajorQualLights True         ' Need to reset everything
  PlayerState(CurrentPlayer).RestoreAllLights

End Sub


Dim bBatTurnProgressActive:bBatTurnProgressActive=False
Sub BatTurnProgress(bHit)
  dim cnt
  dim jpValue

  if tmrVillainEscape.Enabled then exit sub               ' Cant progress bat turn during phase 1 of VillainEscape
  if PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn) <> 20 then
    PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).JackpotBase=PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).JackpotBase+10000
  End if
  jpValue=FormatScore(PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).JackpotBase)
  cnt=20-PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)

'WriteToLog "     ", "BTProgress: " & bHit & " " & bBatTurnProgressActive

  if bBatTurnProgressActive=False and (bHit or PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn) = 20) then  ' Dont call when not active
    bBatTurnProgressActive=True
    'QueueFlushS pMVideo

    if PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn) = 20 then
      QueueSceneS sSwapPos, "SceneGeneralStart3 -1, 0, 1, ""video-BT"", ""p0.mp4"", ""^^BAT TURN^Is Lit^Shoot Atomic Pile^To Start^Value: "&jpValue&"^^"" ", 1334, 1
    else
      QueueSceneS sSwapPos, "SceneGeneralStart3 -1, 0, 0, ""video-BT"", ""p0.mp4"", ""^^^"& cnt &" More Hits^For^BAT TURN^Value: "&jpValue&"^^"" ", 1334, 1
    End if
    DOF 150, DOFPulse 'shaker, fan, mx
    QueueSceneS2 sSwapPos, "bBatTurnProgressActive=False ", -1, 1, True
    QueueSceneS sSwapPos, "StartLastSceneScreen sSwapPos ", -1, 1

  elseif bBatTurnProgressActive then
    PuPlayer.LabelSet sSwapPos,"GeneralBottom3","Value: "&jpValue, 1, ""
  End if
End Sub

Sub EnableBatTurn(bEnable)  ' Set up bat turn when we start/stop a major villain
  if bEnable then
    PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).bEnabled = True
    if PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)=18 or PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)=19 then
      bFlash1Enabled=True
      DOF 128, DOFOn  'Beacon On
    elseif PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)=20 then
      PlayerState(CurrentPlayer).setActive(kWiz_BatTurn)=True                 ' Must be active to set lights for mode
      PlayerState(CurrentPlayer).SSetLightColor kWiz_BatTurn, kLightJokerArrow, "blue", 2
    End if
  else
    ' Turn off Bat Turn if we are active or on the last shot to start it
    If PlayerState(CurrentPlayer).isActive(kWiz_BatTurn) and (PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)=18 or PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)=19) then    ' I tried to only do this if we are on so we dont mess up other people using the flasher
      PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).bEnabled = False
      bFlash1Enabled=False
      DOF 128, DOFOff 'Beacon Off
      PlayerState(CurrentPlayer).setActive(kWiz_BatTurn)=False
      PlayerState(CurrentPlayer).SSetLightColorRestore kLightJokerArrow
    End if
  End if

End Sub

Sub StartBatTurn()
'WriteToLog "     ", "StartBatTurn"
' if PlayerState(CurrentPlayer).isActive(kWiz_BatTurn) then exit sub        ' Bail out just in case we are already running

  PlayerState(CurrentPlayer).SSetLightColor kWiz_BatTurn, kLightRiddlerArrow1, "blue", 2
  PlayerState(CurrentPlayer).SSetLightColor kWiz_BatTurn, kLightRiddlerArrow2, "blue", 2
  PlayerState(CurrentPlayer).SSetLightColor kWiz_BatTurn, kLightJokerArrow, "blue", 2
  PlayerState(CurrentPlayer).SSetLightColor kWiz_BatTurn, kLightPengArrow, "blue", 2
  PlayerState(CurrentPlayer).SSetLightColor kWiz_BatTurn, kLightCatArrow1, "blue", 2
  PlayerState(CurrentPlayer).SSetLightColor kWiz_BatTurn, kLightCatArrow2, "blue", 2

  PlayerState(CurrentPlayer).AddScreen(kWiz_BatTurn)              ' Add a screen
  pDMDMulti2 PlayerState(CurrentPlayer).getPupScreen(kWiz_BatTurn)      ' Swap the new screen to the middle

  PlayerState(CurrentPlayer).setActive(kWiz_BatTurn)=True
  PlayerState(CurrentPlayer).AddProgress(kWiz_BatTurn)
  PlayerState(CurrentPlayer).RestoreAllLights()

  SetVBackground      ' update the background
  SetBGMusic

  tmrBatTurn.UserValue = 42     ' 40 + 2 grace period
  tmrBatTurn.Interval = 1000
  tmrBatTurn.Enabled = True

  ' Save this so we know if things moved around
  tmrBatTurnPos=0       ' Main Screen
  DrawModeTimer tmrBatTurnPos, tmrBatTurn.UserValue, True, False

  StartHurryUp2 kWiz_BatTurn, PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).JackpotBase

  PlayerState(CurrentPlayer).TakeJackpot=PlayerState(CurrentPlayer).TakeJackpot*2

' Score
'    2580 per fraction of a spin of batcar in general
'    10K per fraction of a spin for batturn hurry up (looks like 100K per full revolution)
' Bat Turn hurry up is the total balue for 10k spins
'   Starts at 600k???




End Sub

Sub EndBatTurn()
  Dim i
  Dim screen
  Dim TmpStr
  Dim Score
'WriteToLog "     ", "EndBatTurn Act:" &  PlayerState(CurrentPlayer).isActive(kWiz_BatTurn) & " prog:" & PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)

  if PlayerState(CurrentPlayer).isActive(kWiz_BatTurn) then
    if PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)=20 then     ' Not really active yet
      PlayerState(CurrentPlayer).setActive(kWiz_BatTurn)=False
      bFlash1Enabled=False
      DOF 128, DOFOff 'Beacon Off
      PlayerState(CurrentPlayer).SSetLightColorRestore kLightJokerArrow
      Exit Sub
    End if

    tmpStr="BT"

    tmrBatTurn.Enabled = False
    EndHurryUp2 False         ' dont want to leave it running
    'WriteToLog "     ", "BatTurn End"
    PlayerState(CurrentPlayer).setActive(kWiz_BatTurn)=False
    score = PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).JackpotBase * PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).JackpotValue
    screen = PlayerState(CurrentPlayer).getPupScreen(kWiz_BatTurn)

    PlaySoundVol "sfx-villain-fail", VolSfx

    PuPlayer.LabelSet screen,"GeneralCenter3","BAT TURN TOTAL:", 1, "{'mt':2,'size':11,'color':" & pupWhite & "}"
    PuPlayer.LabelSet screen,"GeneralCenter2",FormatScore(score), 1, "{'mt':2,'size':12}"

    if PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).ModeTotal > PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).ModeHSTotal then
      PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).ModeHSTotal = PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).ModeTotal
    End if

    QueueFlushS screen
    QueueSceneS screen, "playclear "&screen&":playmedia ""finish.mp4"", ""video-" & tmpStr & """, "&screen&", """", -1, """", 1, 1 ", 4046, 1
    QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter3"","""", 1, ""{'mt':2,'size':6}"" ",  -1, 1
    QueueSceneS screen, "PuPlayer.LabelSet "&screen&",""GeneralCenter2"","""", 1, ""{'mt':2,'size':6}"" ",  -1, 1
    QueueSceneS2 screen, "EndBatTurn2 ", 200, 1, True
    EndOfBallWaitTime = getQueueTimeS(screen)
  end if
End Sub

Sub EndBatTurn2()
' pDMDMulti2 pMVideo        ' Goto the main screen
  ClearModeTimer tmrBatTurnPos

  PlayerState(CurrentPlayer).setActive(kWiz_BatTurn)=False
  PlayerState(CurrentPlayer).RemoveScreen(kWiz_BatTurn)     ' remove the screen

  PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).JackpotBase = 600000    ' reset to start again
  PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).JackpotValue = 0
  PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).LoopCnt=PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).LoopCnt+1
  PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).Progress = 10 - (PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).LoopCnt*2) ' Make it harder
  if PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).Progress<0 then PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).Progress=0

  SetVBackground
  SetBGMusic

  PlayerState(CurrentPlayer).SSetLightColorRestore kLightRiddlerArrow1
  PlayerState(CurrentPlayer).SSetLightColorRestore kLightRiddlerArrow2
  PlayerState(CurrentPlayer).SSetLightColorRestore kLightPengArrow
  PlayerState(CurrentPlayer).SSetLightColorRestore kLightJokerArrow
  PlayerState(CurrentPlayer).SSetLightColorRestore kLightCatArrow1
  PlayerState(CurrentPlayer).SSetLightColorRestore kLightCatArrow2
End Sub


' Do we need these hit sounds instead of the ones below???
''******************************
'' Diverse Collection Hit Sounds
''******************************
'
'Sub aMetals_Hit(idx):PlaySoundAtBall "fx_MetalHit":End Sub
'Sub aRubber_Bands_Hit(idx):PlaySoundAtBall "fx_rubber_band":End Sub
'Sub aRubber_Posts_Hit(idx):PlaySoundAtBall "fx_rubber_post":End Sub
'Sub aRubber_Pins_Hit(idx):PlaySoundAtBall "fx_rubber_pin":End Sub
'Sub aYellowPins_Hit(idx):PlaySoundAtBall "fx_rubber_pin":End Sub
'Sub aPlastics_Hit(idx):PlaySoundAtBall "fx_PlasticHit":End Sub
'Sub aGates_Hit(idx):PlaySoundAtBall "fx_Gate":End Sub
'Sub aWoods_Hit(idx):PlaySoundAtBall "fx_Woodhit":End Sub
'Sub aCaptiveWalls_Hit(idx):PlaySoundAtBall "fx_collide":End Sub





'************************************
' What you need to add to your table
'************************************

' a timer called RollingTimer. With a fast interval, like 10
' one collision sound, in this script is called fx_collide
' as many sound files as max number of balls, with names ending with 0, 1, 2, 3, etc
' for ex. as used in this script: fx_ballrolling0, fx_ballrolling1, fx_ballrolling2, fx_ballrolling3, etc


'******************************************
' Explanation of the rolling sound routine
'******************************************

' sounds are played based on the ball speed and position

' the routine checks first for deleted balls and stops the rolling sound.

' The For loop goes through all the balls on the table and checks for the ball speed and
' if the ball is on the table (height lower than 30) then then it plays the sound
' otherwise the sound is stopped, like when the ball has stopped or is on a ramp or flying.

' The sound is played using the VOL, AUDIOPAN, AUDIOFADE and PITCH functions, so the volume and pitch of the sound
' will change according to the ball speed, and the AUDIOPAN & AUDIOFADE functions will change the stereo position
' according to the position of the ball on the table.


'**************************************
' Explanation of the collision routine
'**************************************

' The collision is built in VP.
' You only need to add a Sub OnBallBallCollision(ball1, ball2, velocity) and when two balls collide they
' will call this routine. What you add in the sub is up to you. As an example is a simple Playsound with volume and paning
' depending of the speed of the collision.

' Sub Sandwich_Hit()
'   PlaySound "metalhit_thin", 0, Vol(ActiveBall)+VolTable, AudioPan(ActiveBall), 0, Pitch(ActiveBall), 1, 0, AudioFade(ActiveBall)
' End Sub


' Sub Pins_Hit (idx)
'   PlaySound "pinhit_low", 0, Vol(ActiveBall)+VolTable, AudioPan(ActiveBall), 0, Pitch(ActiveBall), 0, 0, AudioFade(ActiveBall)
' End Sub

' Sub Targets_Hit (idx)
'   PlaySound "target", 0, Vol(ActiveBall)+VolTable, AudioPan(ActiveBall), 0, Pitch(ActiveBall), 0, 0, AudioFade(ActiveBall)
' End Sub

' Sub Metals_Thin_Hit (idx)
'   PlaySound "metalhit_thin", 0, Vol(ActiveBall)+VolTable, AudioPan(ActiveBall), 0, Pitch(ActiveBall), 1, 0, AudioFade(ActiveBall)
' End Sub

' Sub Metals_Medium_Hit (idx)
'   PlaySound "metalhit_medium", 0, Vol(ActiveBall)+VolTable, AudioPan(ActiveBall), 0, Pitch(ActiveBall), 1, 0, AudioFade(ActiveBall)
' End Sub

' Sub Metals2_Hit (idx)
'   PlaySound "metalhit2", 0, Vol(ActiveBall)+VolTable, AudioPan(ActiveBall), 0, Pitch(ActiveBall), 1, 0, AudioFade(ActiveBall)
' End Sub

' Sub Gates_Hit (idx)
'   PlaySound "gate4", 0, Vol(ActiveBall)+VolTable, AudioPan(ActiveBall), 0, Pitch(ActiveBall), 1, 0, AudioFade(ActiveBall)
' End Sub

' Sub Spinner_Spin
'   PlaySound "fx_spinner", 0, .25, AudioPan(Spinner), 0.25, 0, 0, 1, AudioFade(Spinner)
' End Sub

' Sub Rubbers_Hit(idx)
'   dim finalspeed
'     finalspeed=SQR(activeball.velx * activeball.velx + activeball.vely * activeball.vely)
'   If finalspeed > 20 then
'     PlaySound "fx_rubber2", 0, Vol(ActiveBall)+VolTable, AudioPan(ActiveBall), 0, Pitch(ActiveBall), 1, 0, AudioFade(ActiveBall)
'   End if
'   If finalspeed >= 6 AND finalspeed <= 20 then
'     RandomSoundRubber()
'   End If
' End Sub

' Sub Posts_Hit(idx)
'   dim finalspeed
'     finalspeed=SQR(activeball.velx * activeball.velx + activeball.vely * activeball.vely)
'   If finalspeed > 16 then
'     PlaySound "fx_rubber2", 0, Vol(ActiveBall)+VolTable, AudioPan(ActiveBall), 0, Pitch(ActiveBall), 1, 0, AudioFade(ActiveBall)
'   End if
'   If finalspeed >= 6 AND finalspeed <= 16 then
'     RandomSoundRubber()
'   End If
' End Sub

' Sub RandomSoundRubber()
'   Select Case Int(Rnd*3)+1
'     Case 1 : PlaySound "rubber_hit_1", 0, Vol(ActiveBall)+VolTable, AudioPan(ActiveBall), 0, Pitch(ActiveBall), 1, 0, AudioFade(ActiveBall)
'     Case 2 : PlaySound "rubber_hit_2", 0, Vol(ActiveBall)+VolTable, AudioPan(ActiveBall), 0, Pitch(ActiveBall), 1, 0, AudioFade(ActiveBall)
'     Case 3 : PlaySound "rubber_hit_3", 0, Vol(ActiveBall)+VolTable, AudioPan(ActiveBall), 0, Pitch(ActiveBall), 1, 0, AudioFade(ActiveBall)
'   End Select
' End Sub

Sub LeftFlipper_Collide(parm)
  ResetBallSearch
  CheckLiveCatch Activeball, LeftFlipper, LFCount, parm
  LeftFlipperCollide parm
End Sub

Sub RightFlipper_Collide(parm)
  ResetBallSearch
  CheckLiveCatch Activeball, RightFlipper, RFCount, parm
  RightFlipperCollide parm
End Sub


Sub SetSlowPulse2(Light)
  Light.blinkInterval=900
  Light.fadespeedUp=0.1
  Light.fadespeedDown=0.1
  Light.falloff=50
End Sub
Sub SetSlowPulse(Light)
  Light.blinkInterval=900
  Light.fadespeedUp=0.1
  Light.fadespeedDown=0.1
  Light.falloff=50
End Sub
Sub SetDefPulse(Light)
  Light.blinkInterval=125
  Light.fadespeedUp=40
  Light.fadespeedDown=40
  Light.falloff=50
End Sub

Sub PulseLight(light)
  Light.blinkInterval=400
  Light.fadespeedUp=0.1
  Light.fadespeedDown=0.1
  Light.falloff=50

  SetLightColor light, "red", 2
  'vpmTimer.AddTimer 1200, "PulseLightEnd "&light.name&" '"
  light.TimerInterval = 1200
  light.TimerEnabled = True

End Sub

Sub PulseLightEnd(light)
  dim idx:idx=-1
  SetDefPulse(light)
  Select case light.name
    case "lArrowJoker":idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin":idx=kLightPengArrow
  End Select

  if idx<>-1 then
    SetLightColor light, "red", 0
    PlayerState(CurrentPlayer).SSetLightColorRestore(idx)
  End if
End Sub

Sub lArrowCat1_Timer()
  me.TimerEnabled=False
  PulseLightEnd Me
End Sub
Sub lArrowCat2_Timer()
  me.TimerEnabled=False
  PulseLightEnd Me
End Sub
Sub lArrowPenguin_Timer()
  me.TimerEnabled=False
  PulseLightEnd Me
End Sub
Sub lArrowRiddler1_Timer()
  me.TimerEnabled=False
  PulseLightEnd Me
End Sub
Sub lArrowRiddler2_Timer()
  me.TimerEnabled=False
  PulseLightEnd Me
End Sub
Sub lArrowJoker_Timer()
  me.TimerEnabled=False
  PulseLightEnd Me
End Sub


Sub StartAttractMode()
' SetSlowPulse(lSeason1)
' SetSlowPulse(lBatman)
' SetSlowPulse(lBatSignal)
' lSeason1.state = 2
' lBatman.state = 2
' lBatSignal.state = 2
  StartLightSeq
End Sub

Sub StopLightSeq()
  LightSeqAttract.StopPlay
  tmrMyLightSeq_StopPlay
End Sub

Sub StartLightSeq()
On Error Resume Next
    LightSeqAttract.UpdateInterval = 25
    LightSeqAttract.Play SeqBlinking, , 5, 150
    LightSeqAttract.Play SeqRandom, 40, , 4000
    LightSeqAttract.Play SeqAllOff
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqUpOn, 50, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqDownOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqCircleOutOn, 15, 2
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqUpOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqDownOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqUpOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqDownOn, 25, 1
    LightSeqAttract.UpdateInterval = 10
    LightSeqAttract.Play SeqCircleOutOn, 15, 3
    LightSeqAttract.UpdateInterval = 5
    LightSeqAttract.Play SeqRightOn, 50, 1
    LightSeqAttract.UpdateInterval = 5
    LightSeqAttract.Play SeqLeftOn, 50, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqRightOn, 50, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqLeftOn, 50, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqRightOn, 40, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqLeftOn, 40, 1
    LightSeqAttract.UpdateInterval = 10
    LightSeqAttract.Play SeqRightOn, 30, 1
    LightSeqAttract.UpdateInterval = 10
    LightSeqAttract.Play SeqLeftOn, 30, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqRightOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqLeftOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqRightOn, 15, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqLeftOn, 15, 1
    LightSeqAttract.UpdateInterval = 10
    LightSeqAttract.Play SeqCircleOutOn, 15, 3
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqLeftOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqRightOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqLeftOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqUpOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqDownOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqUpOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqDownOn, 25, 1
    LightSeqAttract.UpdateInterval = 5
    LightSeqAttract.Play SeqStripe1VertOn, 50, 2
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqCircleOutOn, 15, 2
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqStripe1VertOn, 50, 3
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqLeftOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqRightOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqLeftOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqUpOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqDownOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqCircleOutOn, 15, 2
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqStripe2VertOn, 50, 3
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqLeftOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqRightOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqLeftOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqUpOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqDownOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqUpOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqDownOn, 25, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqStripe1VertOn, 25, 3
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqStripe2VertOn, 25, 3
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqUpOn, 15, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqDownOn, 15, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqUpOn, 15, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqDownOn, 15, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqUpOn, 15, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqDownOn, 15, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqRightOn, 15, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqLeftOn, 15, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqRightOn, 15, 1
    LightSeqAttract.UpdateInterval = 8
    LightSeqAttract.Play SeqLeftOn, 15, 1
On Error goto 0

End Sub


Sub LightSeqAttract_PlayDone()
    StartLightSeq()
End Sub


Dim CraneIdx
CraneIdx=-1   ' Parked
Sub StartCrane(bReset)
  if bReset then CraneIdx=-1
  tmrCrane.UserValue = 1
  tmrCrane.Interval = 100
  tmrCrane.Enabled =True
  if bReset then
    SetLightColor lCrane5, "", 0
    SetLightColor lCrane4, "", 0
    SetLightColor lCrane3, "", 0
    SetLightColor lCrane2, "", 0
    SetLightColor lCrane1, "", 0
  End If
  tmrCrane_Timer
  tmrCraneDomeFlash.Enabled = True
End Sub

Sub StopCrane()
  CraneIdx=-1
  tmrCraneDomeFlash.Enabled = False
  tmrCrane.Enabled = False
  lCrane1.state = 0
  lCrane2.state = 0
  lCrane3.state = 0
  lCrane4.state = 0
  lCrane5.state = 0
  'UpdateCraneMech -20,10, 0
  CraneGoto 0
End Sub

Sub tmrCrane_Timer()
  Dim savePos
  Dim bFound
  Dim i
  tmrCrane.UserValue=tmrCrane.UserValue - 1
  if tmrCrane.UserValue = 0 then
    tmrCrane.UserValue=60 ' Reset 6 seconds
    if CraneIdx = -1 then   ' Force to position 3
      savePos=0
      CraneIdx=2
    Else
      savePos=CraneIdx
      CraneIdx=(CraneIdx+INT(Rnd*5)) mod 5
    End if

    ' Clear the flashing one
    if lCrane5.state=2 then SetLightColor lCrane5, "", 0
    if lCrane4.state=2 then SetLightColor lCrane4, "", 0
    if lCrane3.state=2 then SetLightColor lCrane3, "", 0
    if lCrane2.state=2 then SetLightColor lCrane2, "", 0
    if lCrane1.state=2 then SetLightColor lCrane1, "", 0

    bFound=False
    for i = 0 to 4
      if savePos <> CraneIdx then
        select case CraneIdx
          case 0:if lCrane1.state = 0 then bFound=True:exit for
          case 1:if lCrane2.state = 0 then bFound=True:exit for
          case 2:if lCrane3.state = 0 then bFound=True:exit for
          case 3:if lCrane4.state = 0 then bFound=True:exit for
          case 4:if lCrane5.state = 0 then bFound=True:exit for
        End Select
      End If
      CraneIdx=(CraneIdx+1) mod 5
    Next
    if bFound=False Then
      CraneIdx=savePos
    End if

    Select Case CraneIdx
      case 0:
        lCrane1.state = 2
        CraneGoto 1
      case 1:
        lCrane2.state = 2
        CraneGoto 2
      case 2:
        lCrane3.state = 2
        CraneGoto 3
      case 3:
        lCrane4.state = 2
        CraneGoto 4
      case 4:
        lCrane5.state = 2
        CraneGoto 5
    End Select
  End If
End Sub

Sub SetDebounce(idx, lightName)
'WriteToLog "     ", "SetDebounce"
  bDebounce(idx)=True
  bDebounceLight(idx)=lightName
  bDebounceTime(idx)=DateDiff("s", "01/01/1970", Now()) + Timer + 0.500
  vpmTimer.AddTimer 500, "ClearDebounce("&idx&") '"
End Sub

Function DoDebounce(idx, lightName)
  Dim time
  time = DateDiff("s", "01/01/1970", Now()) + Timer   ' Extra check because we can overflow timers
  if bDebounce(idx) and lightName=bDebounceLight(idx) and time<bDebounceTime(idx)  then
' if bDebounce(idx) and lightName=bDebounceLight(idx) then
    DoDebounce=True
  Else
    DoDebounce=False
  End if
End Function

Sub ClearDebounce(idx)
  bDebounce(idx)=False
  bDebounceLight(idx)=""
End Sub


Sub CheckProgress(light)
  if bTableDisabled or bGameInPlay=False then exit sub

  ResetBallSearch

  CheckSkillshotProgress(light)

  ' Process Minor villains
  CheckSetCommissGX(light)      ' Do this before anything
  ProgressS1MadHatter(light)
  ProgressS1KingTut(light)
  ProgressS1Bookworm(light)
  ProgressS2Tut1(light)
  ProgressS2Egg1(light)
  ProgressS2Freeze(light)
  ProgressS2Shame(light)
  ProgressS2MadHatter(light)
  ProgressS2Tut2(light)
  ProgressS3Tut1(light)
  ProgressS3Egg1(light)
  ProgressS3Egg2(light)
  ProgressS3Shame(light)
  ProgressS3Tut2(light)
  ProgressVMB(light)
  ProgressBatTurn(light)

  ProgressVESC(light)
  ProgressBatusi(light)
  ProgressGas(light)
  ProgressHoly(light)

  ' Process Major Villains
  if PlayerState(CurrentPlayer).bMajQual then       ' If we are Qualified only do those
'WriteToLog "     ", "Process Qualified Major Only"
    if PlayerState(CurrentPlayer).isQual(kMajV_S1CatWoman)=2  or PlayerState(CurrentPlayer).isQual(kMajV_S2CatWoman)=2  then ProgressCatWoman(light)
    if PlayerState(CurrentPlayer).isQual(kMajV_S1Joker)=2   or PlayerState(CurrentPlayer).isQual(kMajV_S2Joker)=2     then ProgressJoker(light)
    if PlayerState(CurrentPlayer).isQual(kMajV_S1Peng)=2    or PlayerState(CurrentPlayer).isQual(kMajV_S2Peng)=2    then ProgressPeng(light)
    if PlayerState(CurrentPlayer).isQual(kMajV_S1Riddler)=2   or PlayerState(CurrentPlayer).isQual(kMajV_S2Riddler)=2   then ProgressRiddler(light)
  else                          ' Not Qualified - Do them all
    if PlayerState(CurrentPlayer).isEnabled(kWiz_VillainEscape)=False then ' Cant start major when Villain escape is active
'WriteToLog "     ", "Process All"
      ProgressCatWoman(light)
      ProgressJoker(light)
      ProgressPeng(light)
      ProgressRiddler(light)
    End if
  End if

  BatPoleSeqProgress(light)
  CheckGadget False
End Sub


Sub ProgressCatWoman(light)
  if PlayerState(CurrentPlayer).SeasonIdx(kMajV_CatWoman)=kMajV_S1CatWoman then
    if PlayerState(CurrentPlayer).isFinished(kMajV_S1CatWoman)=False then ProgressCatWomanS1(light)
  Else
    if PlayerState(CurrentPlayer).isFinished(kMajV_S2CatWoman)=False then ProgressCatWomanS2(light)
  End if
End Sub

Sub ProgressRiddler(light)
  if PlayerState(CurrentPlayer).SeasonIdx(kMajV_Riddler)=kMajV_S1Riddler then
    if PlayerState(CurrentPlayer).isFinished(kMajV_S1Riddler)=False then ProgressRiddlerS1(light)
  Else
    if PlayerState(CurrentPlayer).isFinished(kMajV_S2Riddler)=False then ProgressRiddlerS2(light)
  End if
End Sub

Sub ProgressJoker(light)
  if PlayerState(CurrentPlayer).SeasonIdx(kMajV_Joker)=kMajV_S1Joker then
    if PlayerState(CurrentPlayer).isFinished(kMajV_S1Joker)=False then ProgressJokerS1(light)
  Else
    if PlayerState(CurrentPlayer).isFinished(kMajV_S2Joker)=False then ProgressJokerS2(light)
  End if
End Sub

Sub ProgressPeng(light)
  if PlayerState(CurrentPlayer).SeasonIdx(kMajV_Peng)=kMajV_S1Peng then
    if PlayerState(CurrentPlayer).isFinished(kMajV_S1Peng)=False then ProgressPengS1(light)
  Else
    if PlayerState(CurrentPlayer).isFinished(kMajV_S2Peng)=False then ProgressPengS2(light)
  End if
End Sub



'******************************************************   RIDDLER  SEASON 1 **************************************************************

Dim gRiddlerRandomState
Sub ProgressRiddlerS1(light)
'WriteToLog "     ", "Process Riddler S1:" & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)
  Dim bValidHit
  Dim curScore
  Dim idx
  Dim skipIdx
  Dim skipIdx2
  Dim skipIdx3
  Dim bIsJokerArrow
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False

  if PlayerState(CurrentPlayer).isActive(kWiz_VillainEscape) then Exit Sub        ' Cant make progress during villain escape

  ' **************************************************************************************************    Qualify & Wave 1
  if PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)<=7 then
    if bIsJokerArrow then idx=kLightJokerArrow
    select case light.name
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S1Riddler) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowCat2":idx=kLightCatArrow2
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S1Riddler) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowPenguin":
        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler) =7 then
          if bMultiBallMode = False then
            if bMultiBallMode = False then
              PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightSuperJArrow, "", 0
              SceneCollect sSwapPos, kMajV_S1Riddler, 0
            End if
          End if
        Else
          idx=kLightPengArrow
        End if
      case "lBatPhone":
        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)=2 then     ' BatPhone - Qualfied Catwoman
          If PlayerState(CurrentPlayer).isQual(kMajV_S1Riddler) = 1 Then  ' Prevent double tap (could use debounce)
            PlaySoundVol "sfx-phone-hit", VolSfx
            DOF 207, DOFPulse 'Bat Phone Hit
            mMagnaSave.MagnetOn = True

            StopSound "sfx-bat-phone1"
            lBatPhone.TimerEnabled = False
            SetLightColor lBatPhone, kBatPhoneColor, 0

            PlayerState(CurrentPlayer).setQual(kMajV_S1Riddler) = 2           ' We are qualified
            SetMajorQualLights(False)                         ' Turn off all the Major Villain lights when a mode starts
            SetVBackground

            SetSlowPulse2(lRiddler)
            SetLightColor lRiddler, "", 2                       ' Start Riddler

            EndHurryUp(True)
            PlayerState(CurrentPlayer).AddProgress kMajV_S1Riddler
            vpmTimer.Addtimer kSetting_JokerMagnetTime, "StartBatPoleSeq() '"   ' Release Ball and Go to Batcave
          End If
        End if
      case "cTT_Batcave":                       ' Turned to the BatCave
        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)=3 then
          EnableBatCompPulse True
          EnableCrimeAnaPulse True

          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow1, "green", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow2, "green", 2
        End If
    End Select

    if idx <> -1 then
      if  PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)<=1 and (idx=kLightRiddlerArrow1 or idx=kLightRiddlerArrow2) and _
        PlayerState(CurrentPlayer).LightState(kMajV_S1Riddler, kLightRiddlerO1)<>0 and PlayerState(CurrentPlayer).LightState(kMajV_S1Riddler, kLightRiddlerO2)<>0 Then

        ' Must prequalifty before doing progress so it goes to the right screen
        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)=1 and PlayerState(CurrentPlayer).Villains(kMajV_S1Riddler).LoopQualCnt=0 then
          PlayerState(CurrentPlayer).setQual(kMajV_S1Riddler) = 1           ' We are pre-qualified
        End if

        PlaySoundVol "sfx-riddler-hit1a", VolSfx    ' Play sound
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Riddler, 100000:AddScoreMode kMajV_S1Riddler, 100000

        If PlayerState(CurrentPlayer).Villains(kMajV_S1Riddler).LoopQualCnt <> 0 then   ' Make it harder
          PlayerState(CurrentPlayer).Villains(kMajV_S1Riddler).LoopQualCnt=PlayerState(CurrentPlayer).Villains(kMajV_S1Riddler).LoopQualCnt-1
          PlayerState(CurrentPlayer).SetProgress(kMajV_S1Riddler)=0
          exit sub
        End if

        if idx=kLightRiddlerArrow1 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerO1, "green", 2
        if idx=kLightRiddlerArrow2 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerO2, "green", 2

        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)=2 then
'         if lBatPhone.TimerEnabled then  ' Someone else is waiting to finish qualification, queue them up and make this one active
'           PlayerState(CurrentPlayer).QueueQual(kMajV_S1Riddler)
'         End if

          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerO1, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerO2, "green", 0

          SetDefPulse(lRiddler)
          SetLightColor lRiddler, "", 2
'         PlayerState(CurrentPlayer).setQual(kMajV_S1Riddler) = 1           ' We are pre-qualified
          StartBatPhone(kMajV_S1Riddler)

        End if
      elseif PlayerState(CurrentPlayer).LightState(kMajV_S1Riddler, idx)=2 then     ' No progress on this one yet
        curScore = BonusAddMode(kMajV_S1Riddler, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Riddler, curScore
'       PlayerState(CurrentPlayer).AddProgress kMajV_S1Riddler
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, idx, "green", 0
        PlaySoundVol "sfx-riddler-hit2", VolSfx   ' Play sound
        DoLightSeq 1    ' Majors do light seq

        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)=4 then   ' Randomly Skip one

          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow1, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow2, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow1, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow2, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightJokerArrow, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightPengArrow, "green", 0

          skipIdx=Int(Rnd*6)  ' Random num between 0 and 5
          if skipIdx<>0 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow1, "green", 2
          if skipIdx<>1 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow2, "green", 2
          if skipIdx<>2 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow1, "green", 2
          if skipIdx<>3 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow2, "green", 2
          if skipIdx<>4 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightJokerArrow, "green", 2
          if skipIdx<>5 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightPengArrow, "green", 2
        elseif PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)=5 then   ' Randomly Only Select 2

          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow1, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow2, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow1, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow2, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightJokerArrow, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightPengArrow, "green", 0

          skipIdx=Int(Rnd*6)  ' Random num between 0 and 5
          skipIdx2=Int(Rnd*6)
          while skipIdx = skipIdx2
            skipIdx2=Int(Rnd*6) ' Random num between 0 and 5
          wend
'WriteToLog "     ", "SelIndex0:" & skipIdx & " Idx2:"& skipIdx2
          if skipIdx=0 or skipIdx2=0 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow1, "green", 2
          if skipIdx=1 or skipIdx2=1 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow2, "green", 2
          if skipIdx=2 or skipIdx2=2 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow1, "green", 2
          if skipIdx=3 or skipIdx2=3 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow2, "green", 2
          if skipIdx=4 or skipIdx2=4 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightJokerArrow, "green", 2
          if skipIdx=5 or skipIdx2=5 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightPengArrow, "green", 2
        elseif PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)=7 then
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightSuperJArrow, "", 2
        End If
      End if
    End if
  ' **************************************************************************************************    Wave 2
  elseif PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)<=25 then
    if bIsJokerArrow then idx=kLightJokerArrow
    select case light.name
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S1Riddler) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowCat2":idx=kLightCatArrow2
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S1Riddler) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowPenguin":
        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)>=20 then
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightSuperJArrow, "", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightPengArrow, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightJokerArrow, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow1, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow2, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow1, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow2, "green", 0
          SceneMVEnd kMajV_S1Riddler
        elseif PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler) =14 then
          if bMultiBallMode = False then
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightSuperJArrow, "", 0
            SceneCollect sSwapPos, kMajV_S1Riddler, 1
          End If
        Else
          idx=kLightPengArrow
        End if
    End Select

    if idx <> -1 then
      if PlayerState(CurrentPlayer).LightState(kMajV_S1Riddler, idx)=2 then     ' No progress on this one yet
        curScore = BonusAddMode(kMajV_S1Riddler, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Riddler, curScore
'       PlayerState(CurrentPlayer).AddProgress kMajV_S1Riddler
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, idx, "green", 0
        PlaySoundVol "sfx-riddler-hit2", VolSfx   ' Play sound
        DoLightSeq 1    ' Majors do light seq

        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)=9 or _
           PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)=16 then   ' Light 6
          gRiddlerRandomState = INT(RND*2)

          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow1, "green", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow2, "green", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow1, "green" , 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow2, "green" , 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightJokerArrow, "green", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightPengArrow, "green" , 2

        elseif PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)=(10+gRiddlerRandomState) then   ' Randomly Only Select 3
          PlayerState(CurrentPlayer).SeTProgress(kMajV_S1Riddler)=11
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow1, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow2, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow1, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow2, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightJokerArrow, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightPengArrow, "green", 0
          skipIdx=Int(Rnd*6)  ' Random num between 0 and 5
          skipIdx2=Int(Rnd*6)
          skipIdx3=Int(Rnd*6)
          while skipIdx = skipIdx2:skipIdx2=Int(Rnd*6):wend
          while skipIdx = skipIdx3 or skipIdx2 = skipIdx3:skipIdx3=Int(Rnd*6):wend
'WriteToLog "     ", "SelIndex0:" & skipIdx & " Idx2:"& skipIdx2 & " Idx3:"& skipIdx3
          if skipIdx=0 or skipIdx2=0 or skipIdx3=0 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow1, "green", 2
          if skipIdx=1 or skipIdx2=1 or skipIdx3=1 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow2, "green", 2
          if skipIdx=2 or skipIdx2=2 or skipIdx3=2 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow1, "green", 2
          if skipIdx=3 or skipIdx2=3 or skipIdx3=3 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow2, "green", 2
          if skipIdx=4 or skipIdx2=4 or skipIdx3=4 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightJokerArrow, "green", 2
          if skipIdx=5 or skipIdx2=5 or skipIdx3=5 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightPengArrow, "green", 2

        elseif PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)=14 or _
             PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)=20 then
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightSuperJArrow, "", 2

        elseif PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)=26 then    ' Loop
          PlayerState(CurrentPlayer).SeTProgress(kMajV_S1Riddler)=20
        End If
      End if
    end if
  End if
End Sub

'******************************************************   RIDDLER  SEASON 2 **************************************************************


Sub ProgressRiddlerS2(light)
'WriteToLog "     ", "Process Riddler S2: " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMajV_S2Riddler)
  Dim bValidHit
  Dim idx
  Dim curScore
  Dim skipIdx
  Dim skipIdx2
  Dim skipIdx3
  Dim bIsJokerArrow
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False

  if PlayerState(CurrentPlayer).isActive(kWiz_VillainEscape) then Exit Sub        ' Cant make progress during villain escape


  ' **************************************************************************************************    Qualify & Wave 1
  if PlayerState(CurrentPlayer).TProgress(kMajV_S2Riddler)<=7 then
    if bIsJokerArrow then idx=kLightJokerArrow
    select case light.name
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S2Riddler) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowCat2":idx=kLightCatArrow2
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S2Riddler) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowPenguin":
        if PlayerState(CurrentPlayer).TProgress(kMajV_S2Riddler) =7 then
          if bMultiBallMode = False then
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightSuperJArrow, "", 0
            SceneCollect sSwapPos, kMajV_S2Riddler, 0
          End if
        Else
          idx=kLightPengArrow
        End if
      case "lBatPhone":
        if PlayerState(CurrentPlayer).TProgress(kMajV_S2Riddler)=2 then     ' BatPhone - Qualfied Catwoman
          If PlayerState(CurrentPlayer).isQual(kMajV_S2Riddler) = 1 Then  ' Prevent double tap (could use debounce)
            PlaySoundVol "sfx-phone-hit", VolSfx
            DOF 207, DOFPulse 'Bat Phone Hit
            mMagnaSave.MagnetOn = True

            StopSound "sfx-bat-phone1"
            lBatPhone.TimerEnabled = False
            SetLightColor lBatPhone, kBatPhoneColor, 0

            PlayerState(CurrentPlayer).setQual(kMajV_S2Riddler) = 2           ' We are qualified
            SetMajorQualLights(False)                         ' Turn off all the Major Villain lights when a mode starts
            SetVBackground

            SetSlowPulse2(lRiddler)
            SetLightColor lRiddler, "", 2                       ' Start Riddler

            EndHurryUp(True)
            PlayerState(CurrentPlayer).AddProgress kMajV_S2Riddler
            vpmTimer.Addtimer kSetting_JokerMagnetTime, "StartBatPoleSeq() '"   ' Release Ball and Go to Batcave
          End If
        End if
      case "cTT_Batcave":                       ' Turned to the BatCave
        if PlayerState(CurrentPlayer).TProgress(kMajV_S2Riddler)=3 then
          EnableBatCompPulse True
          EnableCrimeAnaPulse True

          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerArrow1, "green", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerArrow2, "green", 2
        End If
    End Select

    if idx <> -1 then
      if  PlayerState(CurrentPlayer).TProgress(kMajV_S2Riddler)<=1 and (idx=kLightRiddlerArrow1 or idx=kLightRiddlerArrow2) and _
        PlayerState(CurrentPlayer).LightState(kMajV_S2Riddler, kLightRiddlerO1)<>0 and PlayerState(CurrentPlayer).LightState(kMajV_S2Riddler, kLightRiddlerO2)<>0 Then

        ' Must prequalifty before doing progress so it goes to the right screen
        if PlayerState(CurrentPlayer).TProgress(kMajV_S2Riddler)=1 and PlayerState(CurrentPlayer).Villains(kMajV_S2Riddler).LoopQualCnt=0 then
          PlayerState(CurrentPlayer).setQual(kMajV_S2Riddler) = 1           ' We are pre-qualified
        End if

        PlaySoundVol "sfx-riddler-hit1a", VolSfx    ' Play sound
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Riddler, 100000:AddScoreMode kMajV_S2Riddler, 100000

        If PlayerState(CurrentPlayer).Villains(kMajV_S2Riddler).LoopQualCnt <> 0 then   ' Make it harder
          PlayerState(CurrentPlayer).Villains(kMajV_S2Riddler).LoopQualCnt=PlayerState(CurrentPlayer).Villains(kMajV_S2Riddler).LoopQualCnt-1
          PlayerState(CurrentPlayer).SetProgress(kMajV_S2Riddler)=0
          exit sub
        End if

'       PlayerState(CurrentPlayer).AddProgress kMajV_S2Riddler
        if idx=kLightRiddlerArrow1 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerO1, "green", 2
        if idx=kLightRiddlerArrow2 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerO2, "green", 2

        if PlayerState(CurrentPlayer).TProgress(kMajV_S2Riddler)=2 then
'         if lBatPhone.TimerEnabled then  ' Someone else is waiting to finish qualification, queue them up and make this one active
'           PlayerState(CurrentPlayer).QueueQual(kMajV_S2Riddler)
'         End if

          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerO1, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerO2, "green", 0

          SetDefPulse(lRiddler)
          SetLightColor lRiddler, "", 2

'         PlayerState(CurrentPlayer).setQual(kMajV_S2Riddler) = 1           ' We are pre-qualified
          StartBatPhone(kMajV_S2Riddler)

        End if
      elseif PlayerState(CurrentPlayer).LightState(kMajV_S2Riddler, idx)=2 then     ' No progress on this one yet
        curScore = BonusAddMode(kMajV_S2Riddler, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Riddler, curScore
'       PlayerState(CurrentPlayer).AddProgress kMajV_S2Riddler
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, idx, "green", 0
        PlaySoundVol "sfx-riddler-hit2", VolSfx   ' Play sound
        DoLightSeq 1    ' Majors do light seq

        if PlayerState(CurrentPlayer).TProgress(kMajV_S2Riddler)=4 then   ' Randomly Skip one

          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerArrow1, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerArrow2, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightCatArrow1, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightCatArrow2, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightJokerArrow, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightPengArrow, "green", 0

          skipIdx=Int(Rnd*6)  ' Random num between 0 and 5
          if skipIdx<>0 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerArrow1, "green", 2
          if skipIdx<>1 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerArrow2, "green", 2
          if skipIdx<>2 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightCatArrow1, "green", 2
          if skipIdx<>3 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightCatArrow2, "green", 2
          if skipIdx<>4 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightJokerArrow, "green", 2
          if skipIdx<>5 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightPengArrow, "green", 2
        elseif PlayerState(CurrentPlayer).TProgress(kMajV_S2Riddler)=5 then   ' Randomly Only Select 2

          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerArrow1, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerArrow2, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightCatArrow1, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightCatArrow2, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightJokerArrow, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightPengArrow, "green", 0

          skipIdx=Int(Rnd*6)  ' Random num between 0 and 5
          skipIdx2=Int(Rnd*6)
          while skipIdx = skipIdx2
            skipIdx2=Int(Rnd*6) ' Random num between 0 and 5
          wend
'WriteToLog "     ", "SelIndex0:" & skipIdx & " Idx2:"& skipIdx2
          if skipIdx=0 or skipIdx2=0 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerArrow1, "green", 2
          if skipIdx=1 or skipIdx2=1 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerArrow2, "green", 2
          if skipIdx=2 or skipIdx2=2 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightCatArrow1, "green", 2
          if skipIdx=3 or skipIdx2=3 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightCatArrow2, "green", 2
          if skipIdx=4 or skipIdx2=4 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightJokerArrow, "green", 2
          if skipIdx=5 or skipIdx2=5 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightPengArrow, "green", 2
        elseif PlayerState(CurrentPlayer).TProgress(kMajV_S2Riddler)=7 then
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightSuperJArrow, "", 2
        End If
      End if
    End if
  ' **************************************************************************************************    Wave 2
  elseif PlayerState(CurrentPlayer).TProgress(kMajV_S2Riddler)<=17 then
    if bIsJokerArrow then idx=kLightJokerArrow
    select case light.name
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S2Riddler) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowCat2":idx=kLightCatArrow2
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S2Riddler) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowPenguin":
        if PlayerState(CurrentPlayer).LightState(kMajV_S2Riddler, kLightSuperJArrow)=2 then
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightSuperJArrow, "", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightPengArrow, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightJokerArrow, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow1, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightRiddlerArrow2, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow1, "green", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Riddler, kLightCatArrow2, "green", 0
          SceneMVEnd kMajV_S2Riddler
        Else
          idx=kLightPengArrow
        End if
    End Select

    if idx <> -1 then
      if PlayerState(CurrentPlayer).LightState(kMajV_S2Riddler, idx)=2 then     ' No progress on this one yet
        curScore = BonusAddMode(kMajV_S2Riddler, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Riddler, curScore
'       PlayerState(CurrentPlayer).AddProgress kMajV_S2Riddler
        PlaySoundVol "sfx-riddler-hit2", VolSfx   ' Play sound
        DoLightSeq 1    ' Majors do light seq

        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerArrow1, "green", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightRiddlerArrow2, "green", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightCatArrow1, "green" , 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightCatArrow2, "green" , 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightJokerArrow, "green", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightPengArrow, "green" , 2

        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, idx, "green", 0

        if PlayerState(CurrentPlayer).TProgress(kMajV_S2Riddler)=13 then
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Riddler, kLightSuperJArrow, "", 2

        elseif PlayerState(CurrentPlayer).TProgress(kMajV_S2Riddler)>=17 then ' Loop
          PlayerState(CurrentPlayer).SeTProgress(kMajV_S2Riddler)=13

        End if
      End if
    end if
  End if
End Sub

'******************************************************   CATWOMAN  SEASON 1 **************************************************************

Sub ProgressCatWomanS1(light)
'WriteToLog "     ", "Process CatWoman S1:" & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMajV_S1CatWoman)
  Dim bValidHit
  Dim idx
  Dim curScore
  Dim bIsJokerArrow
  Dim bIsGadget:bIsGadget=False

  if PlayerState(CurrentPlayer).isActive(kWiz_VillainEscape) then Exit Sub        ' Cant make progress during villain escape


  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  if light.name = "lGadgetG1" or light.name = "lGadgetA" or light.name = "lGadgetD" or light.name = "lGadgetG2" or light.name = "lGadgetE" or light.name = "lGadgetT" then
    bIsGadget=True
  End If

  idx=-1
  bValidHit=False
  Dim villainIdx:villainIdx=kMajV_S1CatWoman  ' So we dont mess up states

'WriteToLog "     ", "LState:" & PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat6)

  ' **************************************************************************************************    Qualify & Wave 1
  if PlayerState(CurrentPlayer).TProgress(villainIdx)<=12 then
    select case light.name
      case "lArrowCat1":
        if PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat3)=2 then idx=kLightCat3
        if PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat2)=2 then idx=kLightCat2
        if PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat1)=2 then idx=kLightCat1
        if PlayerState(CurrentPlayer).bIsQueueQual(villainIdx) then ' See if we are queued up to be qualified if so requalify
          if PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat3)=2 then
            idx=kLightCat3
          elseif PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat6)=2 then
            idx=kLightCat6
          End if
        End if
      case "lArrowCat2":
        if PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat6)=2 then idx=kLightCat6
        if PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat5)=2 then idx=kLightCat5
        if PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat4)=2 then idx=kLightCat4
        if PlayerState(CurrentPlayer).bIsQueueQual(villainIdx) then ' See if we are queued up to be qualified if so requalify
'WriteToLog "     ", "QUEUE QUAL"
          idx=kLightCat6
        End if
      case  "lBatPhone":
        if PlayerState(CurrentPlayer).TProgress(villainIdx)=6 then      ' BatPhone - Qualfied Catwoman
          If PlayerState(CurrentPlayer).isQual(villainIdx) = 1 Then   ' Prevent double tap (could use debounce)
            PlaySoundVol "sfx-phone-hit", VolSfx
            DOF 207, DOFPulse 'Bat Phone Hit
            mMagnaSave.MagnetOn = True

            StopSound "sfx-bat-phone1"
            lBatPhone.TimerEnabled = False
            SetLightColor lBatPhone, kBatPhoneColor, 0

            PlayerState(CurrentPlayer).setQual(villainIdx) = 2            ' We are qualified
            SetMajorQualLights(False)                         ' Turn off all the Major Villain lights when a mode starts
            SetVBackground

            SetSlowPulse2(lCatwoman)
            SetLightColor lCatwoman, "", 2            ' Start Catwoman

            EndHurryUp(True)
            PlayerState(CurrentPlayer).AddProgress villainIdx
            vpmTimer.Addtimer kSetting_JokerMagnetTime, "StartBatPoleSeq() '"   ' Release Ball and Go to Batcave
          End If
        End if
      case "cTT_Batcave":                       ' Turned to the BatCave
        if PlayerState(CurrentPlayer).TProgress(villainIdx) =7 then
          EnableBatCompPulse True
          EnableCrimeAnaPulse True

          PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat1)=2
          PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat2)=0
          PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat3)=0
          PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat4)=2
          PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat5)=0
          PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat6)=0
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow1, "white", 2
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow2, "white", 2
        End If
    End Select

    if idx <> -1 then
      PlayerState(CurrentPlayer).LightState(villainIdx, idx)=1
      if idx=kLightCat3 and PlayerState(CurrentPlayer).TProgress(villainIdx) > 6 then PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow1, "white", 0
      if idx=kLightCat6 and PlayerState(CurrentPlayer).TProgress(villainIdx) > 6 then PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow2, "white", 0
      select case idx
        case kLightCat1:
          PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat2)=2
        case kLightCat2:
          PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat3)=2
        case kLightCat4:
          PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat5)=2
        case kLightCat5:
          PlayerState(CurrentPlayer).LightState(villainIdx, kLightCat6)=2
      End Select

      PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx   ' Play one of 3 random sounds
      if PlayerState(CurrentPlayer).TProgress(villainIdx)<5 then
        PlayerState(CurrentPlayer).AddProgressScore villainIdx, 100000:AddScoreMode villainIdx, 100000
      elseif PlayerState(CurrentPlayer).TProgress(villainIdx)=5 then

        PlayerState(CurrentPlayer).setQual(villainIdx) = 1            ' We are pre-qualified
        PlayerState(CurrentPlayer).AddProgressScore villainIdx, 100000:AddScoreMode villainIdx, 100000
'       if lBatPhone.TimerEnabled then  ' Someone else is waiting to finish qualification, queue them up and make this one active
'         PlayerState(CurrentPlayer).QueueQual(villainIdx)
'       End if

        SetDefPulse(lCatwoman)
        SetLightColor lCatwoman, "", 2

        StartBatPhone(villainIdx)
      Else
        DoLightSeq 1    ' Majors do light seq
        curScore = BonusAddMode(villainIdx, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore villainIdx, curScore
  '     PlayerState(CurrentPlayer).AddProgress villainIdx
      End If

      ' Save states
      PlayerState(CurrentPlayer).save_lCatStates(0) = PlayerState(CurrentPlayer).Villains(villainIdx).lStates(kLightCat1).state
      PlayerState(CurrentPlayer).save_lCatStates(1) = PlayerState(CurrentPlayer).Villains(villainIdx).lStates(kLightCat2).state
      PlayerState(CurrentPlayer).save_lCatStates(2) = PlayerState(CurrentPlayer).Villains(villainIdx).lStates(kLightCat3).state
      PlayerState(CurrentPlayer).save_lCatStates(3) = PlayerState(CurrentPlayer).Villains(villainIdx).lStates(kLightCat4).state
      PlayerState(CurrentPlayer).save_lCatStates(4) = PlayerState(CurrentPlayer).Villains(villainIdx).lStates(kLightCat5).state
      PlayerState(CurrentPlayer).save_lCatStates(5) = PlayerState(CurrentPlayer).Villains(villainIdx).lStates(kLightCat6).state

      if PlayerState(CurrentPlayer).TProgress(villainIdx)=13 then
        PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightJokerArrow, "white", 2
        PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightRiddlerArrow1, "white", 2
        PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightRiddlerArrow2, "white", 2
        PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow1, "white", 2
        PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow2, "white", 2
        PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow2, "white", 2
        PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightSuperJArrow, "", 2
      End if
    End if
  ' **************************************************************************************************    Wave 1 second part
  elseif PlayerState(CurrentPlayer).TProgress(villainIdx)<=18 then

    if bIsJokerArrow then idx=kLightJokerArrow
    select case light.name
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
      case "lArrowCat2":idx=kLightCatArrow2
      case "lArrowPenguin":
        if bMultiBallMode = False then
          PlayerState(CurrentPlayer).SeTProgress(villainIdx)=18       ' Skip to the End
          curScore = BonusAddMode(villainIdx, -1, False)
          PlayerState(CurrentPlayer).AddProgressScore villainIdx, curScore
  '       PlayerState(CurrentPlayer).AddProgress villainIdx
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightJokerArrow, "white", 0
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightRiddlerArrow1, "white", 0
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightRiddlerArrow2, "white", 0
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow1, "white", 0
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow2, "white", 0
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightSuperJArrow, "", 0

          bSceneFinished=True   ' Hold the ball and play this last scene
          VPMTimer.AddTimer 5269, "SceneCollect sSwapPos, "&villainIdx&", 0 '"
        End if
    End Select
    if (idx <> -1) then
      if PlayerState(CurrentPlayer).LightState(villainIdx, idx)=2 then    ' No progress on this one yet
        DoLightSeq 1    ' Majors do light seq
        PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx   ' Play one of 3 random sounds
        curScore = BonusAddMode(villainIdx, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore villainIdx, curScore
'       PlayerState(CurrentPlayer).AddProgress villainIdx
        PlayerState(CurrentPlayer).SSetLightColor villainIdx, idx, "white", 0
      End if
    End if
  ' **************************************************************************************************    Wave 2
  elseif PlayerState(CurrentPlayer).TProgress(villainIdx)<=26 then

    if bIsJokerArrow then idx=kLightJokerArrow
    select case light.name
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
      case "lArrowCat2":idx=kLightCatArrow2
      case "lArrowPenguin":
        if PlayerState(CurrentPlayer).LightState(villainIdx, kLightSuperJArrow)=2 then
          if bMultiBallMode = False then
            PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightSuperJArrow, "", 0
            SceneCollect sSwapPos,villainIdx, 1
          End If
        else
          idx=kLightPengArrow
        End If
    End Select

    if PlayerState(CurrentPlayer).TProgress(villainIdx)>=22 and PlayerState(CurrentPlayer).TProgress(villainIdx)<=23 then
      DoLightSeq 1    ' Majors do light seq
      PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx   ' Play one of 3 random sounds
      curScore = BonusAddMode(villainIdx, -1, False)
      PlayerState(CurrentPlayer).AddProgressScore villainIdx, curScore
'     PlayerState(CurrentPlayer).AddProgress villainIdx
      GadgetsStop()
      GadgetsFlash()

    elseif PlayerState(CurrentPlayer).TProgress(villainIdx)=24 then
      DoLightSeq 1    ' Majors do light seq
      PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx   ' Play one of 3 random sounds
      curScore = BonusAddMode(villainIdx, -1, False)
      PlayerState(CurrentPlayer).AddProgressScore villainIdx, curScore
'     PlayerState(CurrentPlayer).AddProgress villainIdx
      GadgetsStop()
      PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightPengArrow, "white", 2

    elseif (idx <> -1) then
      if PlayerState(CurrentPlayer).LightState(villainIdx, idx)=2 then    ' No progress on this one yet
        DoLightSeq 1    ' Majors do light seq
        PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx   ' Play one of 3 random sounds
        curScore = BonusAddMode(villainIdx, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore villainIdx, curScore
'       PlayerState(CurrentPlayer).AddProgress villainIdx
        PlayerState(CurrentPlayer).SSetLightColor villainIdx, idx, "white", 0

        if PlayerState(CurrentPlayer).TProgress(villainIdx)=21 then
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow2, "white", 2

        elseif PlayerState(CurrentPlayer).TProgress(villainIdx)=22 then     ' Gadgets
          GadgetsFlash()
        elseif PlayerState(CurrentPlayer).TProgress(villainIdx)=26 then
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightSuperJArrow, "", 2
        End if
      End if
    End if
  ' **************************************************************************************************    Wave 3
  elseif PlayerState(CurrentPlayer).TProgress(villainIdx)<=35 then

    if bIsJokerArrow then idx=kLightJokerArrow
    select case light.name
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
      case "lArrowCat2":idx=kLightCatArrow2
      case "lArrowPenguin":
        if PlayerState(CurrentPlayer).LightState(villainIdx, kLightSuperJArrow)=2 then
          if bMultiBallMode = False then
            PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightSuperJArrow, "", 0
            SceneCollect sSwapPos,villainIdx, 2
          End If
        else
          idx=kLightPengArrow
        End If
    End Select

    if (idx <> -1) then
      if PlayerState(CurrentPlayer).LightState(villainIdx, idx)=2 then    ' No progress on this one yet
        DoLightSeq 1    ' Majors do light seq
        PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx   ' Play one of 3 random sounds
        curScore = BonusAddMode(villainIdx, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore villainIdx, curScore
'       PlayerState(CurrentPlayer).AddProgress villainIdx
        PlayerState(CurrentPlayer).SSetLightColor villainIdx, idx, "white", 0

        if PlayerState(CurrentPlayer).TProgress(villainIdx)=28 then

          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightPengArrow, "white", 2
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightJokerArrow, "white", 2
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightRiddlerArrow1, "white", 2
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightRiddlerArrow2, "white", 2
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow1, "white", 2
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow2, "white", 2

        elseif PlayerState(CurrentPlayer).TProgress(villainIdx)=33 then     ' Penguin hole
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightPengArrow, "white", 2
        elseif PlayerState(CurrentPlayer).TProgress(villainIdx)=34 then     ' Penguin hole
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightPengArrow, "white", 2
        elseif PlayerState(CurrentPlayer).TProgress(villainIdx)=35 then
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightSuperJArrow, "", 2
        End if
      End if
    End if
  ' **************************************************************************************************    Wave 4
  elseif PlayerState(CurrentPlayer).TProgress(villainIdx)<=41 then

    if bIsJokerArrow then idx=kLightJokerArrow
    select case light.name
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
      case "lArrowCat2":idx=kLightCatArrow2
      case "lArrowPenguin":
        if PlayerState(CurrentPlayer).LightState(villainIdx, kLightSuperJArrow)=2 then
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightSuperJArrow, "", 0
          SceneMVEnd villainIdx
        else
          idx=kLightPengArrow
        End If
    End Select

    if (idx <> -1) then
      if PlayerState(CurrentPlayer).LightState(villainIdx, idx)=2 then    ' No progress on this one yet
        DoLightSeq 1    ' Majors do light seq
        PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx   ' Play one of 3 random sounds
        curScore = BonusAddMode(villainIdx, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore villainIdx, curScore
'       PlayerState(CurrentPlayer).AddProgress villainIdx
        PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightJokerArrow, "white", 2
        PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow1, "white", 2
        PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow2, "white", 2
        PlayerState(CurrentPlayer).SSetLightColor villainIdx, idx, "white", 0

        if PlayerState(CurrentPlayer).TProgress(villainIdx)=41 then
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightJokerArrow, "white", 0
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow1, "white", 0
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightCatArrow2, "white", 0
          PlayerState(CurrentPlayer).SSetLightColor villainIdx, kLightSuperJArrow, "", 2
        End if
      End if
    End if
  End if
End Sub


'******************************************************   CATWOMAN  SEASON 2 **************************************************************


Sub ProgressCatWomanS2(light)
'WriteToLog "     ", "Process CatWoman S2: " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMajV_S2CatWoman)
  Dim bValidHit
  Dim idx
  Dim curScore
  Dim bIsJokerArrow
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False

  if PlayerState(CurrentPlayer).isActive(kWiz_VillainEscape) then Exit Sub        ' Cant make progress during villain escape


  ' **************************************************************************************************    Qualify & Wave 1
  if PlayerState(CurrentPlayer).TProgress(kMajV_S2CatWoman)<=14 then
    select case light.name
      case "lArrowCat1":
        if PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat3)=2 then idx=kLightCat3
        if PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat2)=2 then idx=kLightCat2
        if PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat1)=2 then idx=kLightCat1
        if PlayerState(CurrentPlayer).bIsQueueQual(kMajV_S2CatWoman) then ' See if we are queued up to be qualified if so requalify
          if PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat3)=2 then
            idx=kLightCat3
          elseif PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat6)=2 then
            idx=kLightCat6
          End if
        End if
      case "lArrowCat2":
        if PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat6)=2 then idx=kLightCat6
        if PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat5)=2 then idx=kLightCat5
        if PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat4)=2 then idx=kLightCat4
        if PlayerState(CurrentPlayer).bIsQueueQual(kMajV_S2CatWoman) then ' See if we are queued up to be qualified if so requalify
          idx=kLightCat6
        End if
      case "lBatPhone":
        if PlayerState(CurrentPlayer).TProgress(kMajV_S2CatWoman)=6 then      ' BatPhone - Qualfied Catwoman
          If PlayerState(CurrentPlayer).isQual(kMajV_S2CatWoman) = 1 Then   ' Prevent double tap (could use debounce)
            PlaySoundVol "sfx-phone-hit", VolSfx
            DOF 207, DOFPulse 'Bat Phone Hit
            mMagnaSave.MagnetOn = True

            StopSound "sfx-bat-phone1"
            lBatPhone.TimerEnabled = False
            SetLightColor lBatPhone, kBatPhoneColor, 0

            PlayerState(CurrentPlayer).setQual(kMajV_S2CatWoman) = 2            ' We are qualified
            SetMajorQualLights(False)                         ' Turn off all the Major Villain lights when a mode starts
            SetVBackground

            SetSlowPulse2(lCatwoman)
            SetLightColor lCatwoman, "", 2            ' Start Catwoman

            EndHurryUp(True)
            PlayerState(CurrentPlayer).AddProgress kMajV_S2CatWoman
            vpmTimer.Addtimer kSetting_JokerMagnetTime, "StartBatPoleSeq() '"   ' Release Ball and Go to Batcave
          End If
        End if
      case "cTT_Batcave":                       ' Turned to the BatCave
        if PlayerState(CurrentPlayer).TProgress(kMajV_S2CatWoman) =7 then
          EnableBatCompPulse True
          EnableCrimeAnaPulse True

          PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat1)=2
          PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat2)=0
          PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat3)=0
          PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat4)=2
          PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat5)=0
          PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat6)=0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightCatArrow1, "white", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightCatArrow2, "white", 2
        End If
      case "swBatmobile", "lArrowJoker", "swBatcave":
        if PlayerState(CurrentPlayer).TProgress(kMajV_S2CatWoman) =13 then

          curScore = BonusAddMode(kMajV_S2CatWoman, -1, False)
          PlayerState(CurrentPlayer).AddProgressScore kMajV_S2CatWoman, curScore
'         PlayerState(CurrentPlayer).AddProgress kMajV_S2CatWoman
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightJokerArrow, "white", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightSuperJArrow, "", 2

        End if
      case "lArrowPenguin":
        if PlayerState(CurrentPlayer).TProgress(kMajV_S2CatWoman) =14 then
          if bMultiBallMode = False then
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightSuperJArrow, "", 0
            SceneCollect sSwapPos, kMajV_S2CatWoman, 0
          End if
        End if
    End Select

    if idx <> -1 then
      PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, idx)=1
      if idx=kLightCat3 and PlayerState(CurrentPlayer).TProgress(kMajV_S2CatWoman) > 6 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightCatArrow1, "white", 0
      if idx=kLightCat6 and PlayerState(CurrentPlayer).TProgress(kMajV_S2CatWoman) > 6 then PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightCatArrow2, "white", 0
      select case idx
        case kLightCat1:
          PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat2)=2
        case kLightCat2:
          PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat3)=2
        case kLightCat4:
          PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat5)=2
        case kLightCat5:
          PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightCat6)=2
      End Select

      PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx   ' Play one of 3 random sounds
      if PlayerState(CurrentPlayer).TProgress(kMajV_S2CatWoman)<5 then
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S2CatWoman, 100000:AddScoreMode kMajV_S2CatWoman, 100000

      elseif PlayerState(CurrentPlayer).TProgress(kMajV_S2CatWoman)=5 then

        PlayerState(CurrentPlayer).setQual(kMajV_S2CatWoman) = 1            ' We are pre-qualified
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S2CatWoman, 100000:AddScoreMode kMajV_S2CatWoman, 100000
'       if lBatPhone.TimerEnabled then  ' Someone else is waiting to finish qualification, queue them up and make this one active
'         PlayerState(CurrentPlayer).QueueQual(kMajV_S2CatWoman)
'       End if

        SetDefPulse(lCatwoman)
        SetLightColor lCatwoman, "", 2

        StartBatPhone(kMajV_S2CatWoman)

      Else
        DoLightSeq 1    ' Majors do light seq
        curScore = BonusAddMode(kMajV_S2CatWoman, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S2CatWoman, curScore
  '     PlayerState(CurrentPlayer).AddProgress kMajV_S2CatWoman
      End if

      ' Save states
      PlayerState(CurrentPlayer).save_lCatStates(0) = PlayerState(CurrentPlayer).Villains(kMajV_S2CatWoman).lStates(kLightCat1).state
      PlayerState(CurrentPlayer).save_lCatStates(1) = PlayerState(CurrentPlayer).Villains(kMajV_S2CatWoman).lStates(kLightCat2).state
      PlayerState(CurrentPlayer).save_lCatStates(2) = PlayerState(CurrentPlayer).Villains(kMajV_S2CatWoman).lStates(kLightCat3).state
      PlayerState(CurrentPlayer).save_lCatStates(3) = PlayerState(CurrentPlayer).Villains(kMajV_S2CatWoman).lStates(kLightCat4).state
      PlayerState(CurrentPlayer).save_lCatStates(4) = PlayerState(CurrentPlayer).Villains(kMajV_S2CatWoman).lStates(kLightCat5).state
      PlayerState(CurrentPlayer).save_lCatStates(5) = PlayerState(CurrentPlayer).Villains(kMajV_S2CatWoman).lStates(kLightCat6).state

      if PlayerState(CurrentPlayer).TProgress(kMajV_S2CatWoman)=13 then
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightCatArrow1, "white", 0
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightCatArrow2, "white", 0
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightJokerArrow, "white", 2
      End if
    End if
  ' **************************************************************************************************    Wave 2
  elseif PlayerState(CurrentPlayer).TProgress(kMajV_S2CatWoman)<=16 then

    select case light.name
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
      case "lArrowCat2":idx=kLightCatArrow2
      case "lArrowPenguin":
        if bMultiBallMode = False then
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightSuperJArrow, "", 0
          SceneCollect sSwapPos,kMajV_S2CatWoman, 1
        End if
    End Select
    if (idx <> -1) then
      if PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, idx)=2 then    ' No progress on this one yet
        DoLightSeq 1    ' Majors do light seq
        PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx   ' Play one of 3 random sounds
        curScore = BonusAddMode(kMajV_S2CatWoman, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S2CatWoman, curScore
'       PlayerState(CurrentPlayer).AddProgress kMajV_S2CatWoman
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightRiddlerArrow1, "white", 0
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightRiddlerArrow2, "white", 0
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightCatArrow1, "white", 0
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightCatArrow2, "white", 0
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightSuperJArrow, "", 2
      End if
    End if
  ' **************************************************************************************************    Wave 3
  elseif PlayerState(CurrentPlayer).TProgress(kMajV_S2CatWoman)<=22 then
    idx=-1
    if bIsJokerArrow then idx=kLightJokerArrow
    select case light.name
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
      case "lArrowCat2":idx=kLightCatArrow2
      case "lArrowPenguin"
        if PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, kLightSuperJArrow)=2 then
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightPengArrow, "white", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightJokerArrow, "white", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightRiddlerArrow1, "white", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightRiddlerArrow2, "white", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightCatArrow1, "white", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightCatArrow2, "white", 0
          SceneMVEnd kMajV_S2CatWoman
        End if
    End Select
    if (idx <> -1) then
      if PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, idx)=2 then    ' No progress on this one yet
        DoLightSeq 1    ' Majors do light seq
        PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx   ' Play one of 3 random sounds
        curScore = BonusAddMode(kMajV_S2CatWoman, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S2CatWoman, curScore
'       PlayerState(CurrentPlayer).AddProgress kMajV_S2CatWoman

        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightPengArrow, "white", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightJokerArrow, "white", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightRiddlerArrow1, "white", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightRiddlerArrow2, "white", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightCatArrow1, "white", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightCatArrow2, "white", 2
        PlayerState(CurrentPlayer).LightState(kMajV_S2CatWoman, idx)=0
        if PlayerState(CurrentPlayer).TProgress(kMajV_S2CatWoman)=22 then  ' We are done
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2CatWoman, kLightSuperJArrow, "", 2
        End If
        if PlayerState(CurrentPlayer).TProgress(kMajV_S2CatWoman)=22 then  ' Loop
          PlayerState(CurrentPlayer).SeTProgress(kMajV_S2CatWoman)=17
        End If
      End if
    End if
  End if

End sub

'******************************************************   JOKER  SEASON 1 **************************************************************


Sub ProgressJokerS1(light)
  Dim CurProgress
  Dim bIsJokerArrow
  Dim bValidHit:bValidHit=False
  Dim curScore
  Dim bIsGadget:bIsGadget=False
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"

  Dim idx
  if DoDebounce(kMajV_S1Joker, light.name) then WriteToLog "     ", "Process Joker Debounce Skip":exit sub
'WriteToLog "     ", "Process Joker S1: " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)

  if PlayerState(CurrentPlayer).isActive(kWiz_VillainEscape) then Exit Sub        ' Cant make progress during villain escape


  ' **************************************************************************************************    Qualify
  if PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)<=7 then
    idx=-1
    select case light.name
      case "lArrowJoker":
        SetDebounce kMajV_S1Joker, light.name
        if PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, kLightJokerJ)=2 then idx=kLightJokerJ
        if PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, kLightJokerO)=2 then idx=kLightJokerO
        if PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, kLightJokerK)=2 then idx=kLightJokerK
        if PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, kLightJokerE)=2 then idx=kLightJokerE
        if PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, kLightJokerR)=2 then idx=kLightJokerR
        if PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, kLightJokerR)=1 or PlayerState(CurrentPlayer).bIsQueueQual(kMajV_S1Joker) then  ' Setup BatPhone
'         if lBatPhone.TimerEnabled then  ' Someone else is waiting to finish qualification, queue them up and make this one active
'           PlayerState(CurrentPlayer).QueueQual(kMajV_S1Joker)
'         End if

          idx=-1                                    ' Set this so we dont continue and move progress on SuperSkillshot
          PlayerState(CurrentPlayer).setQual(kMajV_S1Joker) = 1           ' We are pre-qualified
          PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Joker, 100000:AddScoreMode kMajV_S1Joker, 100000
          'PlayerState(CurrentPlayer).AddProgress kMajV_S1Joker

          SetDefPulse(lJokerJ):PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, kLightJokerJ)=0
          SetDefPulse(lJokerO):PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, kLightJokerO)=0
          SetDefPulse(lJokerK):PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, kLightJokerK)=0
          SetDefPulse(lJokerE):PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, kLightJokerE)=0
          SetDefPulse(lJokerR):PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, kLightJokerR)=0

          SetDefPulse(lJoker)
          SetLightColor lJoker, "", 2

          PlayerState(CurrentPlayer).SetProgress(kMajV_S1Joker)=6     ' Make sure this is the right progress
          StartBatPhone(kMajV_S1Joker)                  ' Rotate to BatPhone, flashit and start countdown
        End If
      case "lBatPhone":
        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)=6 then     ' BatPhone - Qualfied Joker
          If PlayerState(CurrentPlayer).isQual(kMajV_S1Joker) = 1 Then  ' Prevent double tap (could use debounce)
            PlaySoundVol "sfx-phone-hit", VolSfx
            DOF 207, DOFPulse 'Bat Phone Hit
            mMagnaSave.MagnetOn = True

            StopSound "sfx-bat-phone1"
            lBatPhone.TimerEnabled = False
            SetLightColor lBatPhone, kBatPhoneColor, 0

            PlayerState(CurrentPlayer).setQual(kMajV_S1Joker) = 2           ' Joker is qualified
            SetMajorQualLights(False)                         ' Turn off all the Major Villain lights when a mode starts
            SetVBackground

            SetSlowPulse2(lJoker)
            SetLightColor lJoker, "", 2         ' Start Joker

            EndHurryUp(True)
            PlayerState(CurrentPlayer).AddProgress kMajV_S1Joker
            vpmTimer.Addtimer kSetting_JokerMagnetTime, "StartBatPoleSeq() '"   ' Release Ball and Go to Batcave
          End If
        End if
      case "cTT_Batcave":                     ' Turned to the BatCave
        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)=7 then
          EnableBatCompPulse True
          EnableCrimeAnaPulse True
        End if
      case "swBatmobile":                     ' We spun the batmobile now start the full mode
        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker) =7 then
          EnableBatCompPulse True   ' Do this in case we hit batmobile before it is done spinning around
          EnableCrimeAnaPulse True

          curScore = BonusAddMode(kMajV_S1Joker, -1, False)
          PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Joker, curScore
'         PlayerState(CurrentPlayer).AddProgress kMajV_S1Joker
          PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, kLightJokerArrow)=0

          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightRiddlerArrow1, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightRiddlerArrow2, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightCatArrow1, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightCatArrow2, "purple", 2
        End if
        'SetLightColor lArrowSpinner, "white", 2
    End Select

    if idx <> -1 then
      if PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)<=5 then
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Joker, 100000:AddScoreMode kMajV_S1Joker, 100000
      else
        curScore = BonusAddMode(kMajV_S1Joker, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Joker, curScore
      End if
'     PlayerState(CurrentPlayer).AddProgress kMajV_S1Joker
'   WriteToLog "     ", "Progress:" & PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)
      PlaySoundVol "sfx-Joker-hit1", VolSfx
      DOF 209, DOFPulse 'Joker Hit
      PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, idx)=1
      if idx<kLightJokerR then
        PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, idx+1)=2
      Else ' (Progress = 5)
        lJokerJ.state =0    ' Turn them off so they pulse together
        lJokerO.state =0
        lJokerK.state =0
        lJokerE.state =0
        lJokerR.state =0
        SetSlowPulse(lJokerJ):lJokerJ.state =2    ' Dont change internal state so we can detect later (shortcut)
        SetSlowPulse(lJokerO):lJokerO.state =2
        SetSlowPulse(lJokerK):lJokerK.state =2
        SetSlowPulse(lJokerE):lJokerE.state =2
        SetSlowPulse(lJokerR):lJokerR.state =2
      End if
    End if
  ' **************************************************************************************************    Wave 1
  Elseif PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker) <12 then
    idx=-1
    select case light.name
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S1Joker) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowCat2":idx=kLightCatArrow2
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S1Joker) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx

    End Select
    if (idx <> -1) then
      if PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, idx)=2 then     ' No progress on this one yet
        DoLightSeq 1    ' Majors do light seq
        PlaySoundVol "sfx-Joker-hit3", VolSfx
        DOF 209, DOFPulse 'Joker Hit
        curScore = BonusAddMode(kMajV_S1Joker, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Joker, curScore
'       PlayerState(CurrentPlayer).AddProgress kMajV_S1Joker
        PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, idx)=0
        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)=12 then    ' Done with this wave
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightJokerArrow, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightRiddlerArrow1, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightRiddlerArrow2, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightCatArrow1, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightCatArrow2, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightPengArrow, "purple", 2

          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightSuperJArrow, "", 2
        End if
      End if
    End if
  ' **************************************************************************************************    Wave 2
  Elseif PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker) <=18 then
    idx=-1
    select case light.name
      case "lArrowJoker":idx=kLightJokerArrow
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S1Joker) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowCat2":idx=kLightCatArrow2
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S1Joker) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowPenguin":
        if PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, kLightSuperJArrow)=2 then
          if bMultiBallMode = False then
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightSuperJArrow, "", 0
            SceneCollect sSwapPos,kMajV_S1Joker, 0
          End if
        End if
    End Select
    if (idx <> -1) then
      if PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, idx)=2 then     ' No progress on this one yet
        DoLightSeq 1    ' Majors do light seq
        PlaySoundVol "sfx-Joker-hit3", VolSfx
        DOF 209, DOFPulse 'Joker Hit
        curScore = BonusAddMode(kMajV_S1Joker, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Joker, curScore
'       PlayerState(CurrentPlayer).AddProgress kMajV_S1Joker
        PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, idx)=0
        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)=17 then    ' Reset Wave and do it again
          PlayerState(CurrentPlayer).SeTProgress(kMajV_S1Joker)=12
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightJokerArrow, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightRiddlerArrow1, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightRiddlerArrow2, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightCatArrow1, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightCatArrow2, "purple", 2
        End if
      End if
    End if
  ' **************************************************************************************************    Wave 3
  Elseif PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker) <=27 then
    if light.name = "lGadgetG1" or light.name = "lGadgetA" or light.name = "lGadgetD" or light.name = "lGadgetG2" or light.name = "lGadgetE" or light.name = "lGadgetT" then
      bIsGadget=True
    End If
    CurProgress=PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)

    if CurProgress=19 and bIsGadget then
      GadgetsStop
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightJokerArrow, "purple", 2
      bValidHit = True
    elseif CurProgress=20 and bIsJokerArrow then
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightJokerArrow, "purple", 0
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightPengArrow, "purple", 2
      bValidHit = True
    elseif CurProgress=21 and light.name="lArrowPenguin" then
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightPengArrow, "purple", 0
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightJokerArrow, "purple", 2
      bValidHit = True
    elseif CurProgress=22 and bIsJokerArrow then
      SetDebounce kMajV_S1Joker, light.name
      bValidHit = True
    elseif CurProgress=23 and bIsJokerArrow then
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightJokerArrow, "purple", 0
      GadgetsFlash()
      bValidHit = True
    elseif CurProgress=24 and bIsGadget then
      GadgetsStop
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightJokerArrow, "purple", 2
      bValidHit = True
    elseif CurProgress=25 and bIsJokerArrow then
      SetDebounce kMajV_S1Joker, light.name
      bValidHit = True
    elseif CurProgress=26 and bIsJokerArrow then
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightJokerArrow, "purple", 0
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightPengArrow, "purple", 2
      bValidHit = True
    elseif CurProgress=27 and light.name="lArrowPenguin" then
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightPengArrow, "purple", 2
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightJokerArrow, "purple", 2
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightRiddlerArrow1, "purple", 2
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightRiddlerArrow2, "purple", 2
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightCatArrow1, "purple", 2
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightCatArrow2, "purple", 0
      bValidHit = True
    end If

    if bValidHit then
      DoLightSeq 1    ' Majors do light seq
      curScore = BonusAddMode(kMajV_S1Joker, -1, False)
      PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Joker, curScore
'     PlayerState(CurrentPlayer).AddProgress kMajV_S1Joker
    End if
  ' **************************************************************************************************    Wave 3b (Hit flashing shots)
  Elseif PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker) <=32 then

    if PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)=32 then
      if light.name="lArrowPenguin" then
        if bMultiBallMode = False then
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightPengArrow, "white", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightSuperJArrow, "", 0
          SceneCollect sSwapPos,kMajV_S1Joker, 1
        End if
      End If
    else
      idx=-1
      if bIsJokerArrow then idx=kLightJokerArrow
      select case light.name
        case "lArrowRiddler1":idx=kLightRiddlerArrow1
        case "lArrowRiddler2":idx=kLightRiddlerArrow2
        case "lArrowCat1":idx=kLightCatArrow1
          if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S1Joker) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
        case "lArrowCat2":idx=kLightCatArrow2
          if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S1Joker) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
        case "lArrowPenguin":idx=kLightPengArrow
      End Select
      if (idx <> -1) then
        if PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, idx)=2 then     ' No progress on this one yet
          DoLightSeq 1    ' Majors do light seq
          PlaySoundVol "sfx-Joker-hit3", VolSfx
          DOF 209, DOFPulse 'Joker Hit
          curScore = BonusAddMode(kMajV_S1Joker, -1, False)
          PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Joker, curScore
'         PlayerState(CurrentPlayer).AddProgress kMajV_S1Joker
          PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, idx)=0
          if PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)=32 then      ' Finish wave
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightPengArrow, "white", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightSuperJArrow, "", 2
          End if
        End if
      End if
    End if
  ' **************************************************************************************************    Wave 4 (Hit flashing shots)
  Else ' if PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker) <=40 then
    idx=-1
    if bIsJokerArrow then idx=kLightJokerArrow
    select case light.name
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S1Joker) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowCat2":idx=kLightCatArrow2
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S1Joker) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowPenguin"
        if PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, kLightSuperJArrow)=2 then
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightPengArrow, "purple", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightJokerArrow, "purple", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightRiddlerArrow1, "purple", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightRiddlerArrow2, "purple", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightCatArrow1, "purple", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightCatArrow2, "purple", 0
          SceneMVEnd kMajV_S1Joker
        else
          idx=kLightJokerArrow
        End if
    End Select
    if (idx <> -1) then
      if PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, idx)=2 then     ' No progress on this one yet
        DoLightSeq 1    ' Majors do light seq
        PlaySoundVol "sfx-Joker-hit3", VolSfx
        DOF 209, DOFPulse 'Joker Hit
        curScore = BonusAddMode(kMajV_S1Joker, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Joker, curScore
'       PlayerState(CurrentPlayer).AddProgress kMajV_S1Joker

        PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightPengArrow, "purple", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightJokerArrow, "purple", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightRiddlerArrow1, "purple", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightRiddlerArrow2, "purple", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightCatArrow1, "purple", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightCatArrow2, "purple", 2
        PlayerState(CurrentPlayer).LightState(kMajV_S1Joker, idx)=0
        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)=39 then  ' We are done
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightSuperJArrow, "", 2
        End If
        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)=45 then  ' Loop
          PlayerState(CurrentPlayer).SeTProgress(kMajV_S1Joker)=40
        End If
      End if
    End if
  End if
End sub

'******************************************************   JOKER  SEASON 2 **************************************************************


Sub ProgressJokerS2(light)
  Dim CurProgress
  Dim tmpStr2
  Dim bIsJokerArrow
  Dim Screen
  Dim curScore
  Dim bValidHit:bValidHit=False
  Dim bIsGadget:bIsGadget=False
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"

  Dim idx:idx=-1
  if DoDebounce(kMajV_S2Joker, light.name) then WriteToLog "     ", "Process Joker Debounce Skip":exit sub
'WriteToLog "     ", "Process Joker S2: " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMajV_S2Joker)

  if PlayerState(CurrentPlayer).isActive(kWiz_VillainEscape) then Exit Sub        ' Cant make progress during villain escape

  if bIsJokerArrow then SetDebounce kMajV_S2Joker, light.name

  ' **************************************************************************************************    Qualify
  if PlayerState(CurrentPlayer).TProgress(kMajV_S2Joker)<=7 then
    select case light.name
      case "lArrowJoker":
        if PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, kLightJokerJ)=2 then idx=kLightJokerJ
        if PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, kLightJokerO)=2 then idx=kLightJokerO
        if PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, kLightJokerK)=2 then idx=kLightJokerK
        if PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, kLightJokerE)=2 then idx=kLightJokerE
        if PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, kLightJokerR)=2 then idx=kLightJokerR
        if PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, kLightJokerR)=1 or PlayerState(CurrentPlayer).bIsQueueQual(kMajV_S2Joker) then  ' Setup BatPhone
'         if lBatPhone.TimerEnabled then  ' Someone else is waiting to finish qualification, queue them up and make this one active
'           PlayerState(CurrentPlayer).QueueQual(kMajV_S2Joker)
'         End if

          idx=-1                                    ' Set this so we dont continue and move progress on SuperSkillshot
          PlayerState(CurrentPlayer).setQual(kMajV_S2Joker) = 1           ' We are pre-qualified
          PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Joker, 100000:AddScoreMode kMajV_S2Joker, 100000
'         PlayerState(CurrentPlayer).AddProgress kMajV_S2Joker

          SetDefPulse(lJokerJ):PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, kLightJokerJ)=0
          SetDefPulse(lJokerO):PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, kLightJokerO)=0
          SetDefPulse(lJokerK):PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, kLightJokerK)=0
          SetDefPulse(lJokerE):PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, kLightJokerE)=0
          SetDefPulse(lJokerR):PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, kLightJokerR)=0

          SetDefPulse(lJoker)
          SetLightColor lJoker, "", 2

          PlayerState(CurrentPlayer).SetProgress(kMajV_S2Joker)=6     ' Make sure this is the right progress
          StartBatPhone(kMajV_S2Joker)                  ' Rotate to BatPhone, flashit and start countdown

        End If
      case "lBatPhone":
        if PlayerState(CurrentPlayer).TProgress(kMajV_S2Joker)=6 then     ' BatPhone - Qualfied Joker
          If PlayerState(CurrentPlayer).isQual(kMajV_S2Joker) = 1 Then  ' Prevent double tap (could use debounce)
            PlaySoundVol "sfx-phone-hit", VolSfx
            DOF 207, DOFPulse 'Bat Phone Hit
            mMagnaSave.MagnetOn = True

            StopSound "sfx-bat-phone1"
            lBatPhone.TimerEnabled = False
            SetLightColor lBatPhone, kBatPhoneColor, 0

            PlayerState(CurrentPlayer).setQual(kMajV_S2Joker) = 2           ' Joker is qualified
            SetMajorQualLights(False)                         ' Turn off all the Major Villain lights when a mode starts
            SetVBackground

            SetSlowPulse2(lJoker)
            SetLightColor lJoker, "", 2         ' Start Joker

            EndHurryUp(True)
            PlayerState(CurrentPlayer).AddProgress kMajV_S2Joker
            vpmTimer.Addtimer kSetting_JokerMagnetTime, "StartBatPoleSeq() '"   ' Release Ball and Go to Batcave
          End If
        End if
      case "cTT_Batcave":                     ' Turned to the BatCave
        if PlayerState(CurrentPlayer).TProgress(kMajV_S2Joker) =7 then
          EnableBatCompPulse True
          EnableCrimeAnaPulse True

        End if
      case "swBatmobile":                     ' We spun the batmobile now start the full mode
        if PlayerState(CurrentPlayer).TProgress(kMajV_S2Joker) =7 then
          PlaySoundVol "sfx-Joker-hit3", VolSfx
          DOF 209, DOFPulse 'Joker Hit
          EnableBatCompPulse True   ' Do this in case we hit batmobile before it is done spinning around
          EnableCrimeAnaPulse True

          PlayerState(CurrentPlayer).AddProgressPercent kMajV_S2Joker, 10
          curScore = BonusAddMode(kMajV_S2Joker, -1, False)
          PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Joker, curScore
'         PlayerState(CurrentPlayer).AddProgress kMajV_S2Joker
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightJokerArrow, "purple", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightRiddlerArrow1, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightRiddlerArrow2, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightCatArrow1, "purple", 2
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightCatArrow2, "purple", 2

        End if
        'SetLightColor lArrowSpinner, "white", 2
    End Select

    if idx <> -1 then
      if PlayerState(CurrentPlayer).TProgress(kMajV_S2Joker)<=5 then
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Joker, 100000:AddScoreMode kMajV_S2Joker, 100000
      else
        curScore = BonusAddMode(kMajV_S2Joker, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Joker, curScore
      End if
'     PlayerState(CurrentPlayer).AddProgress kMajV_S2Joker
'WriteToLog "     ", "Progress:" & PlayerState(CurrentPlayer).TProgress(kMajV_S2Joker)
      PlaySoundVol "sfx-Joker-hit1", VolSfx
      DOF 209, DOFPulse 'Joker Hit
      PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, idx)=1
      if idx<kLightJokerR then
        PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, idx+1)=2
      Else ' (Progress = 5)
        lJokerJ.state =0    ' Turn them off so they pulse together
        lJokerO.state =0
        lJokerK.state =0
        lJokerE.state =0
        lJokerR.state =0
        SetSlowPulse(lJokerJ):lJokerJ.state =2    ' Dont change internal state so we can detect later (shortcut)
        SetSlowPulse(lJokerO):lJokerO.state =2
        SetSlowPulse(lJokerK):lJokerK.state =2
        SetSlowPulse(lJokerE):lJokerE.state =2
        SetSlowPulse(lJokerR):lJokerR.state =2
      End if
    End if
  ' **************************************************************************************************    Wave 1
  Elseif PlayerState(CurrentPlayer).TProgress(kMajV_S2Joker) <=18 then
    if bIsJokerArrow then idx=kLightJokerArrow
    select case light.name
      case "swGeneral","swSpinner":
        if PlayerState(CurrentPlayer).TProgressPercent(kMajV_S2Joker) < 100 then
          PlayerState(CurrentPlayer).AddProgressPercent kMajV_S2Joker, 1
          tmpStr2= PlayerState(CurrentPlayer).TProgressPercent(kMajV_S2Joker) & "% - Shoot Flashing Shots"

          if PlayerState(CurrentPlayer).TProgressPercent(kMajV_S2Joker) >= 100 then
            PlayerState(CurrentPlayer).SeTProgress(kMajV_S2Joker)=17
            curScore = BonusAddMode(kMajV_S2Joker, -1, False)
            PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Joker, curScore
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightSuperJArrow, "", 2
          else
            Screen = PlayerState(CurrentPlayer).getPupScreen(kMinV_S3EggHead1)
            PuPlayer.LabelSet Screen,"GeneralBottom2",tmpStr2, 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"
          End if
        End if

      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S2Joker) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowCat2":idx=kLightCatArrow2
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S2Joker) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx

      case "lArrowPenguin":
        if PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, kLightSuperJArrow)=2 then
          if bMultiBallMode = False then
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightSuperJArrow, "", 0
            PlayerState(CurrentPlayer).SeTProgress(kMajV_S2Joker)=18
            SceneCollect sSwapPos,kMajV_S2Joker, 0
          End if
        End if
    End Select
    if (idx <> -1) then
      if PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, idx)=2 then     ' No progress on this one yet

        if PlayerState(CurrentPlayer).TProgressPercent(kMajV_S2Joker)+10 >= 100 then  ' Jump to SJP
          PlayerState(CurrentPlayer).SeTProgress(kMajV_S2Joker)=17
        End if

        DoLightSeq 1    ' Majors do light seq
        PlaySoundVol "sfx-Joker-hit3", VolSfx
        DOF 209, DOFPulse 'Joker Hit
        PlayerState(CurrentPlayer).AddProgressPercent kMajV_S2Joker, 10
        curScore = BonusAddMode(kMajV_S2Joker, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Joker, curScore
'       PlayerState(CurrentPlayer).AddProgress kMajV_S2Joker

        if PlayerState(CurrentPlayer).TProgressPercent(kMajV_S2Joker) >= 100 then
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightSuperJArrow, "", 2

        elseif PlayerState(CurrentPlayer).TProgress(kMajV_S2Joker)=18 then
          PlayerState(CurrentPlayer).SeTProgress(kMajV_S2Joker)=17
        End if
      End if
    End if
  ' **************************************************************************************************    Wave 2
  Else
    if bIsJokerArrow then idx=kLightJokerArrow
    select case light.name
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S2Joker) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowCat2":idx=kLightCatArrow2
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S2Joker) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowPenguin":
        if PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, kLightSuperJArrow)=2 then
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightSuperJArrow, "", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightPengArrow, "purple", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightJokerArrow, "purple", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightRiddlerArrow1, "purple", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightRiddlerArrow2, "purple", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightCatArrow1, "purple", 0
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightCatArrow2, "purple", 0
          SceneMVEnd kMajV_S2Joker
        else
          idx = kLightPengArrow
        End if
    End Select
    if (idx <> -1) then
      if PlayerState(CurrentPlayer).LightState(kMajV_S2Joker, idx)=2 then     ' No progress on this one yet

        DoLightSeq 1    ' Majors do light seq
        PlaySoundVol "sfx-Joker-hit3", VolSfx
        DOF 209, DOFPulse 'Joker Hit
        curScore = BonusAddMode(kMajV_S2Joker, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Joker, curScore
'       PlayerState(CurrentPlayer).AddProgress kMajV_S2Joker

        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightPengArrow, "purple", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightJokerArrow, "purple", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightRiddlerArrow1, "purple", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightRiddlerArrow2, "purple", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightCatArrow1, "purple", 2
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightCatArrow2, "purple", 2

        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, idx, "purple", 0

        if PlayerState(CurrentPlayer).TProgress(kMajV_S2Joker)=24 then            ' Done
          PlayerState(CurrentPlayer).SeTProgress(kMajV_S2Joker)=23
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightSuperJArrow, "", 2
        End if
      End if
    End if
  End if

End Sub

'******************************************************   PENGUIN  SEASON 1 **************************************************************


Sub ProgressPengS1(light)
if DoDebounce(kMajV_S1Peng, light.name) then WriteToLog "     ", "Process Penguin S1 Debounce Skip":exit sub
'WriteToLog "     ", "Process Penguin S1 " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMajV_S1Peng)
  Dim bValidHit
  Dim idx
  Dim skipIdx
  Dim curScore
  Dim skipIdx2
  Dim skipIdx3
  Dim bIsGadget
  Dim bIsJokerArrow
  Dim CurProgress
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False


  if PlayerState(CurrentPlayer).isActive(kWiz_VillainEscape) then Exit Sub        ' Cant make progress during villain escape

  if bIsJokerArrow then SetDebounce kMajV_S1Peng, light.name

  ' **************************************************************************************************    PENGUIN Qualify + Wave 1
  if PlayerState(CurrentPlayer).TProgress(kMajV_S1Peng)<=8 then
    if bIsJokerArrow then idx=kLightJokerArrow
    select case light.name
      case "lCrane0":
        SetDebounce kMajV_S1Peng, light.name
        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Peng)>=3 then  ' SJP isnt lit
          if UpdateCrane.Enabled=False and CraneIdx<>-1 then    ' Crane isn't moving and not parked
            Select Case CraneIdx
              case 0:
                lCrane1.state = 1
              case 1:
                lCrane2.state = 1
              case 2:
                lCrane3.state = 1
              case 3:
                lCrane4.state = 1
              case 4:
                lCrane5.state = 1
            End Select

            ' Light 6 shots
            curScore = BonusAddMode(kMajV_S1Peng, -1, False)
            PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Peng, curScore
'           PlayerState(CurrentPlayer).AddProgress kMajV_S1Peng
            DoLightSeq 1    ' Majors do light seq
            PlaySoundVol "sfx-penguin-hit" & INT(RND*2)+1, VolSfx
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightRiddlerArrow1, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightRiddlerArrow2, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightCatArrow1, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightCatArrow2, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightJokerArrow, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightPengArrow, "purple", 2

            if lCrane1.state<>1 or lCrane2.state<>1 or lCrane3.state<>1 or lCrane4.state<>1 or lCrane5.state<>1 then
              tmrCrane.Enabled = False
              StartCrane(False)
            else
              PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightSuperJArrow, "", 2
              StopCrane()
            End if
          End If
        End if
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S1Peng) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowCat2":idx=kLightCatArrow2
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S1Peng) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowPenguin":
        if PlayerState(CurrentPlayer).LightState(kMajV_S1Peng, kLightSuperJArrow)=2 then    ' SuperJ is lit
          if bMultiBallMode = False then
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightRiddlerArrow1, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightRiddlerArrow2, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightCatArrow1, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightCatArrow2, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightJokerArrow, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightPengArrow, "purple", 0

            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightSuperJArrow, "", 0
            SceneCollect sSwapPos, kMajV_S1Peng, 0
          End if
        Else
          idx=kLightPengArrow
        End if
      case "lBatPhone":
        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Peng)=2 then      ' BatPhone - Qualfied Catwoman
          If PlayerState(CurrentPlayer).isQual(kMajV_S1Peng) = 1 Then   ' Prevent double tap (could use debounce)
            PlaySoundVol "sfx-phone-hit", VolSfx
            DOF 207, DOFPulse 'Bat Phone Hit
            mMagnaSave.MagnetOn = True

            StopSound "sfx-bat-phone1"
            lBatPhone.TimerEnabled = False
            SetLightColor lBatPhone, kBatPhoneColor, 0

            PlayerState(CurrentPlayer).setQual(kMajV_S1Peng) = 2            ' We are qualified
            SetMajorQualLights(False)                         ' Turn off all the Major Villain lights when a mode starts
            SetVBackground

            SetSlowPulse2(lPeng)
            SetLightColor lPeng, "", 2                      ' Start Penguin

            EndHurryUp(True)
            PlayerState(CurrentPlayer).AddProgress kMajV_S1Peng
            vpmTimer.Addtimer kSetting_JokerMagnetTime, "StartCrane(True):StartBatPoleSeq() '"    ' Release Ball and Go to Batcave
          End If
        End if
      case "cTT_Batcave":                     ' Turned to the BatCave
        if PlayerState(CurrentPlayer).TProgress(kMajV_S1Peng) =3 then
          EnableBatCompPulse True
          EnableCrimeAnaPulse True
          if tmrCrane.Enabled = False then StartCrane(True)   ' Jsut in case timer gets overloaded
        End if
    End Select

    if idx <> -1 then
      if  PlayerState(CurrentPlayer).TProgress(kMajV_S1Peng)=0 Then
        if idx=kLightPengArrow then
          'PlaySoundVol "sfx-penguin-hit3", VolSfx
          PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Peng, 100000:AddScoreMode kMajV_S1Peng, 100000

          If PlayerState(CurrentPlayer).Villains(kMajV_S1Peng).LoopQualCnt <> 0 then  ' Make it harder
            PlayerState(CurrentPlayer).Villains(kMajV_S1Peng).LoopQualCnt=PlayerState(CurrentPlayer).Villains(kMajV_S1Peng).LoopQualCnt-1
            PlayerState(CurrentPlayer).SetProgress(kMajV_S1Peng)=0
            exit sub
          End if

'         PlayerState(CurrentPlayer).AddProgress kMajV_S1Peng
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightPengScoop, "purple", 2
        End if
      elseif  PlayerState(CurrentPlayer).TProgress(kMajV_S1Peng)=1 Then
        if idx=kLightPengArrow then

'         if lBatPhone.TimerEnabled then  ' Someone else is waiting to finish qualification, queue them up and make this one active
'           PlayerState(CurrentPlayer).QueueQual(kMajV_S1Peng)
'         End if

          'PlaySoundVol "sfx-penguin-hit3", VolSfx
          PlayerState(CurrentPlayer).setQual(kMajV_S1Peng) = 1            ' We are pre-qualified
          PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Peng, 100000:AddScoreMode kMajV_S1Peng, 100000
'         PlayerState(CurrentPlayer).AddProgress kMajV_S1Peng
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightPengScoop, "purple", 0

          SetDefPulse(lPeng)
          SetLightColor lPeng, "", 2

          StartBatPhone(kMajV_S1Peng)

        End if
      elseif PlayerState(CurrentPlayer).LightState(kMajV_S1Peng, idx)=2 then    ' No progress on this one yet

        DoLightSeq 1    ' Majors do light seq
        curScore = BonusAddMode(kMajV_S1Peng, -1, False)
        QueueFlushV kMajV_S1Peng
        QueueSceneV kMajV_S1Peng, "SceneGeneralStart3 kMajV_S1Peng, 0, 0, ""video-Penguin"", ""p4.mp4"", ""^^^^12:"&FormatScore(curScore)&"^^^^"" ", 2200, 1
        QueueSceneV kMajV_S1Peng, "SceneGeneralStart3 kMajV_S1Peng, 1, 0, ""video-Penguin"", ""wait1.mp4"", ""^^^^^^^^Collect All Umbrellas"" ", -1, 1

        'PlayerState(CurrentPlayer).AddProgress kMajV_S1Peng
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, idx, "green", 0
        PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx   ' One of 3 random sounds
      End if
    End if
  ' **************************************************************************************************    PENGUIN Wave 2
  elseif PlayerState(CurrentPlayer).TProgress(kMajV_S1Peng)<=12 then
    select case light.name
      case "swBatmobile", "lArrowJoker":
        if PlayerState(CurrentPlayer).LightState(kMajV_S1Peng, kLightJokerArrow)=2 then
          DoLightSeq 1    ' Majors do light seq
          curScore = BonusAddMode(kMajV_S1Peng, -1, False)
          PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Peng, curScore
'         PlayerState(CurrentPlayer).AddProgress kMajV_S1Peng
          if PlayerState(CurrentPlayer).TProgress(kMajV_S1Peng)=12 then
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightJokerArrow, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightSuperJArrow, "", 2
          End If
        End If
      case "lArrowPenguin":
        if PlayerState(CurrentPlayer).LightState(kMajV_S1Peng, kLightSuperJArrow)=2 then    ' SuperJ is lit
          if bMultiBallMode = False then
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightSuperJArrow, "", 0
            SceneCollect sSwapPos, kMajV_S1Peng, 1
          End if
        End if
    End Select
  ' **************************************************************************************************    Wave 3
  Elseif PlayerState(CurrentPlayer).TProgress(kMajV_S1Peng) <=20 then
    if light.name = "lGadgetG1" or light.name = "lGadgetA" or light.name = "lGadgetD" or light.name = "lGadgetG2" or light.name = "lGadgetE" or light.name = "lGadgetT" then
      bIsGadget=True
    End If
    CurProgress=PlayerState(CurrentPlayer).TProgress(kMajV_S1Peng)

    if CurProgress=13 and bIsGadget then
      tmrPengMagnetStart
      curScore = BonusAddMode(kMajV_S1Peng, -1, False)
      PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Peng, curScore
'     PlayerState(CurrentPlayer).AddProgress kMajV_S1Peng
      GadgetsStop
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightPengArrow, "purple", 2
    elseif CurProgress=14 and light.Name ="lArrowPenguin" then
      curScore = BonusAddMode(kMajV_S1Peng, -1, False)
      PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Peng, curScore
'     PlayerState(CurrentPlayer).AddProgress kMajV_S1Peng
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightPengArrow, "purple", 0
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightJokerArrow, "purple", 2
    elseif CurProgress>=15 and CurProgress<=19 and bIsJokerArrow then
      curScore = BonusAddMode(kMajV_S1Peng, -1, False)
      PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Peng, curScore
'     PlayerState(CurrentPlayer).AddProgress kMajV_S1Peng
      if CurProgress=19 then
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightJokerArrow, "purple", 0
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightSuperJArrow, "", 2
      End If
    elseif CurProgress=20 and light.Name ="lArrowPenguin" then
      if bMultiBallMode = False then
        PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightSuperJArrow, "", 0
        tmrPenMagnetCancel
        SceneCollect sSwapPos, kMajV_S1Peng, 2
      End if
    End if
  ' **************************************************************************************************    Wave 4
  Else
    idx=-1
    if bIsJokerArrow then idx=kLightJokerArrow
    select case light.name
      case "lCrane0":
        SetDebounce kMajV_S1Peng, light.name
        if UpdateCrane.Enabled=False and CraneIdx<>-1  then     ' Crane isn't moving and not parked
          Select Case CraneIdx
            case 0:
              lCrane1.state = 1
            case 1:
              lCrane2.state = 1
            case 2:
              lCrane3.state = 1
            case 3:
              lCrane4.state = 1
            case 4:
              lCrane5.state = 1
          End Select

          ' Light 6 shots
          curScore = BonusAddMode(kMajV_S1Peng, -1, False)
          PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Peng, curScore
'         PlayerState(CurrentPlayer).AddProgress kMajV_S1Peng
          PlaySoundVol "sfx-penguin-hit" & INT(RND*2)+1, VolSfx
          DoLightSeq 1    ' Majors do light seq

          if lCrane1.state<>1 or lCrane2.state<>1 or lCrane3.state<>1 or lCrane4.state<>1 or lCrane5.state<>1 then
            tmrCrane.Enabled = False
            StartCrane(False)
          else
            StopCrane()
          End if

          if PlayerState(CurrentPlayer).TProgress(kMajV_S1Peng) = 22 then                 ' 1st shot enables all
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightRiddlerArrow1, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightRiddlerArrow2, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightCatArrow1, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightCatArrow2, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightJokerArrow, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightPengArrow, "purple", 2
          End if
        End If
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S1Peng) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowCat2":idx=kLightCatArrow2
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S1Peng) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx

      case "lArrowPenguin"
        if PlayerState(CurrentPlayer).LightState(kMajV_S1Peng, kLightSuperJArrow)=2 then
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightSuperJArrow, "", 2
          StopCrane()
          SceneMVEnd kMajV_S1Peng
        Else
          idx=kLightPengArrow
        End if
    End Select
    if (idx <> -1) then
      if PlayerState(CurrentPlayer).LightState(kMajV_S1Peng, idx)=2 then    ' No progress on this one yet
        PlaySoundVol "sfx-Joker-hit3", VolSfx
        DOF 209, DOFPulse 'Joker Hit
        DoLightSeq 1    ' Majors do light seq
        curScore = BonusAddMode(kMajV_S1Peng, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S1Peng, curScore
  '     PlayerState(CurrentPlayer).AddProgress kMajV_S1Peng
      End if
    End if

    if PlayerState(CurrentPlayer).TProgress(kMajV_S1Peng)=27 then  ' We are done
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightPengArrow, "purple", 0
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightJokerArrow, "purple", 0
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightRiddlerArrow1, "purple", 0
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightRiddlerArrow2, "purple", 0
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightCatArrow1, "purple", 0
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightCatArrow2, "purple", 0

      PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Peng, kLightSuperJArrow, "", 2
    End If
  End if
End Sub

'******************************************************   PENGUIN  SEASON 2 **************************************************************

Sub ProgressPengS2(light)
if DoDebounce(kMajV_S2Peng, light.name) then WriteToLog "     ", "Process Penguin S2 Debounce Skip":exit sub
'WriteToLog "     ", "Process Penguin S2 " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMajV_S2Peng)
  Dim bValidHit
  Dim idx
  Dim curScore
  Dim skipIdx
  Dim skipIdx2
  Dim skipIdx3
  Dim bIsGadget
  Dim rndIdx
  Dim bIsJokerArrow
  Dim CurProgress
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False

  if PlayerState(CurrentPlayer).isActive(kWiz_VillainEscape) then Exit Sub        ' Cant make progress during villain escape

  if bIsJokerArrow then SetDebounce kMajV_S2Peng, light.name

  ' **************************************************************************************************    PENGUIN Qualify + Wave 1
  if PlayerState(CurrentPlayer).TProgress(kMajV_S2Peng)<=8 then
    if bIsJokerArrow then idx=kLightJokerArrow
    select case light.name
      case "lCrane0":
        SetDebounce kMajV_S2Peng, light.name
        if PlayerState(CurrentPlayer).TProgress(kMajV_S2Peng)>=3 then
          if UpdateCrane.Enabled=False and CraneIdx<>-1  then     ' Crane isn't moving and not parked
            Select Case CraneIdx
              case 0:
                lCrane1.state = 1
              case 1:
                lCrane2.state = 1
              case 2:
                lCrane3.state = 1
              case 3:
                lCrane4.state = 1
              case 4:
                lCrane5.state = 1
            End Select

            ' Light 6 shots
            curScore = BonusAddMode(kMajV_S2Peng, -1, False)
            PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Peng, curScore
'           PlayerState(CurrentPlayer).AddProgress kMajV_S2Peng
            PlaySoundVol "sfx-penguin-hit" & INT(RND*2)+1, VolSfx
            DoLightSeq 1    ' Majors do light seq
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightRiddlerArrow1, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightRiddlerArrow2, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightCatArrow1, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightCatArrow2, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightJokerArrow, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightPengArrow, "purple", 2

            if lCrane1.state<>1 or lCrane2.state<>1 or lCrane3.state<>1 or lCrane4.state<>1 or lCrane5.state<>1 then
              tmrCrane.Enabled = False
              StartCrane(False)
            else
              PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightSuperJArrow, "", 2
              StopCrane()
            End if
          End If
        End if
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S2Peng) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowCat2":idx=kLightCatArrow2
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S2Peng) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowPenguin":
        if PlayerState(CurrentPlayer).LightState(kMajV_S2Peng, kLightSuperJArrow)=2 then    ' SuperJ is lit
          if bMultiBallMode = False then
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightRiddlerArrow1, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightRiddlerArrow2, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightCatArrow1, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightCatArrow2, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightJokerArrow, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightPengArrow, "purple", 0

            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightSuperJArrow, "", 0
            SceneCollect sSwapPos, kMajV_S2Peng, 0
          End if
        Else
          idx=kLightPengArrow
        End if
      case "lBatPhone":
        if PlayerState(CurrentPlayer).TProgress(kMajV_S2Peng)=2 then      ' BatPhone - Qualfied Catwoman
          If PlayerState(CurrentPlayer).isQual(kMajV_S2Peng) = 1 Then   ' Prevent double tap (could use debounce)
            PlaySoundVol "sfx-phone-hit", VolSfx
            DOF 207, DOFPulse 'Bat Phone Hit
            mMagnaSave.MagnetOn = True

            StopSound "sfx-bat-phone1"
            lBatPhone.TimerEnabled = False
            SetLightColor lBatPhone, kBatPhoneColor, 0

            PlayerState(CurrentPlayer).setQual(kMajV_S2Peng) = 2            ' We are qualified
            SetMajorQualLights(False)                         ' Turn off all the Major Villain lights when a mode starts
            SetVBackground

            SetSlowPulse2(lPeng)
            SetLightColor lPeng, "", 2                      ' Start Penguine

            EndHurryUp(True)
            PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Peng, 100000:AddScoreMode kMajV_S2Peng, 100000
'           PlayerState(CurrentPlayer).AddProgress kMajV_S2Peng
            vpmTimer.Addtimer kSetting_JokerMagnetTime, "StartCrane(True):StartBatPoleSeq() '"    ' Release Ball and Go to Batcave
          End If
        End if
      case "cTT_Batcave":                     ' Turned to the BatCave
        if PlayerState(CurrentPlayer).TProgress(kMajV_S2Peng)=3 then
          EnableBatCompPulse True
          EnableCrimeAnaPulse True
          if tmrCrane.Enabled = False then StartCrane(True)   ' Just in case timer gets overloaded
        End if
    End Select

    if idx <> -1 then
      if  PlayerState(CurrentPlayer).TProgress(kMajV_S2Peng)=0 Then
        if idx=kLightPengArrow then
          'PlaySoundVol "sfx-penguin-hit3", VolSfx
          PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Peng, 100000:AddScoreMode kMajV_S2Peng, 100000
'         PlayerState(CurrentPlayer).AddProgress kMajV_S2Peng

          If PlayerState(CurrentPlayer).Villains(kMajV_S2Peng).LoopQualCnt <> 0 then  ' Make it harder
            PlayerState(CurrentPlayer).Villains(kMajV_S2Peng).LoopQualCnt=PlayerState(CurrentPlayer).Villains(kMajV_S2Peng).LoopQualCnt-1
            PlayerState(CurrentPlayer).SetProgress(kMajV_S2Peng)=0
            exit sub
          End if

          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightPengScoop, "purple", 2
        End if
      elseif  PlayerState(CurrentPlayer).TProgress(kMajV_S2Peng)=1 Then
        if idx=kLightPengArrow then
'         if lBatPhone.TimerEnabled then  ' Someone else is waiting to finish qualification, queue them up and make this one active
'           PlayerState(CurrentPlayer).QueueQual(kMajV_S2Peng)
'         End if

          'PlaySoundVol "sfx-penguin-hit3", VolSfx
          PlayerState(CurrentPlayer).setQual(kMajV_S2Peng) = 1            ' We are pre-qualified
          PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Peng, 100000:AddScoreMode kMajV_S2Peng, 100000
'         PlayerState(CurrentPlayer).AddProgress kMajV_S2Peng
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightPengScoop, "purple", 0

          SetDefPulse(lPeng)
          SetLightColor lPeng, "", 2

          StartBatPhone(kMajV_S2Peng)

        End if
      elseif PlayerState(CurrentPlayer).LightState(kMajV_S2Peng, idx)=2 then    ' No progress on this one yet

        ' Pick a random one
        DoLightSeq 1    ' Majors do light seq
        rndIdx = INT(RND*3)+4
        curScore = BonusAddMode(kMajV_S2Peng, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore3 kMajV_S2Peng, curScore, True, rndIdx   ' Show Scene but dont move progress
'       QueueFlushV kMajV_S2Peng
'       QueueSceneV kMajV_S2Peng, SceneMap(kMajV_S2Peng, rndIdx, 0), SceneMap(kMajV_S2Peng, rndIdx, 1), 1
'       QueueSceneV kMajV_S2Peng, SceneMap(kMajV_S2Peng, rndIdx, 2), -1, 1

        PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, idx, "purple", 0
        PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx   ' One of 3 random sounds
      End if
    End if
  ' **************************************************************************************************    PENGUIN Wave 2
  elseif PlayerState(CurrentPlayer).TProgress(kMajV_S2Peng)<=16 then
    if light.name = "lGadgetG1" or light.name = "lGadgetA" or light.name = "lGadgetD" or light.name = "lGadgetG2" or light.name = "lGadgetE" or light.name = "lGadgetT" then
      bIsGadget=True
    End If
    CurProgress=PlayerState(CurrentPlayer).TProgress(kMajV_S2Peng)

    if CurProgress=9 and bIsGadget then
      curScore = BonusAddMode(kMajV_S2Peng, -1, False)
      PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Peng, curScore
'     PlayerState(CurrentPlayer).AddProgress kMajV_S2Peng
      GadgetsStop()
      GadgetsFlash()
    elseif CurProgress=10 and bIsGadget then
      curScore = BonusAddMode(kMajV_S2Peng, -1, False)
      PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Peng, curScore
'     PlayerState(CurrentPlayer).AddProgress kMajV_S2Peng
      GadgetsStop
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightRiddlerArrow1, "purple", 2
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightRiddlerArrow2, "purple", 2
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightJokerArrow, "purple", 2
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightCatArrow1, "purple", 2
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightCatArrow2, "purple", 2
    else
      if bIsJokerArrow then idx=kLightJokerArrow
      select case light.name
        case "lArrowRiddler1":idx=kLightRiddlerArrow1
        case "lArrowRiddler2":idx=kLightRiddlerArrow2
        case "lArrowCat1":idx=kLightCatArrow1
          if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S2Peng) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
        case "lArrowCat2":idx=kLightCatArrow2
          if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S2Peng) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
        case "lArrowPenguin":
          if PlayerState(CurrentPlayer).LightState(kMajV_S2Peng, kLightSuperJArrow)=2 then    ' SuperJ is lit
            if bMultiBallMode = False then
              PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightSuperJArrow, "", 0
              SceneCollect sSwapPos, kMajV_S2Peng, 1
            End if
          End if
      End Select

      if idx <> -1 then
        if PlayerState(CurrentPlayer).LightState(kMajV_S2Peng, idx)=2 then    ' No progress on this one yet
          curScore = BonusAddMode(kMajV_S2Peng, -1, False)
          PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Peng, curScore
'         PlayerState(CurrentPlayer).AddProgress kMajV_S2Peng
          PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx   ' One of 3 random sounds
          DoLightSeq 1    ' Majors do light seq
          if PlayerState(CurrentPlayer).TProgress(kMajV_S2Peng)=16 then
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightRiddlerArrow1, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightRiddlerArrow2, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightJokerArrow, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightCatArrow1, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightCatArrow2, "purple", 0

            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightSuperJArrow, "", 2
          End If

        End if
      End if

    End if

  ' **************************************************************************************************    Wave 3
  Else
    if bIsJokerArrow then idx=kLightJokerArrow
    select case light.name
      case "lCrane0":
        SetDebounce kMajV_S2Peng, light.name
        if UpdateCrane.Enabled=False  and CraneIdx<>-1 then     ' Crane isn't moving and not parked
          Select Case CraneIdx
            case 0:
              lCrane1.state = 1
            case 1:
              lCrane2.state = 1
            case 2:
              lCrane3.state = 1
            case 3:
              lCrane4.state = 1
            case 4:
              lCrane5.state = 1
          End Select

          ' Light 6 shots
          curScore = BonusAddMode(kMajV_S2Peng, -1, False)
          PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Peng, curScore
'         PlayerState(CurrentPlayer).AddProgress kMajV_S2Peng
          PlaySoundVol "sfx-penguin-hit" & INT(RND*2)+1, VolSfx
          DoLightSeq 1    ' Majors do light seq

          if lCrane1.state<>1 or lCrane2.state<>1 or lCrane3.state<>1 or lCrane4.state<>1 or lCrane5.state<>1 then
            tmrCrane.Enabled = False
            StartCrane(False)
          else
            StopCrane()
          End if

          if PlayerState(CurrentPlayer).TProgress(kMajV_S2Peng) = 18 then                 ' 1st shot enables all
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightRiddlerArrow1, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightRiddlerArrow2, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightCatArrow1, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightCatArrow2, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightJokerArrow, "purple", 2
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightPengArrow, "purple", 2

          elseif PlayerState(CurrentPlayer).TProgress(kMajV_S2Peng)=22 then  ' We are done
            PlayerState(CurrentPlayer).SeTProgress(kMajV_S2Peng)=17               ' they can reset to loop
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightPengArrow, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightJokerArrow, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightRiddlerArrow1, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightRiddlerArrow2, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightCatArrow1, "purple", 0
            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightCatArrow2, "purple", 0

            PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightSuperJArrow, "", 2
          End if
        End If
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S2Peng) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx
      case "lArrowCat2":idx=kLightCatArrow2
        if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kMajV_S2Peng) then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx

      case "lArrowPenguin"
        if PlayerState(CurrentPlayer).LightState(kMajV_S2Peng, kLightSuperJArrow)=2 then
          PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightSuperJArrow, "", 2
          StopCrane()
          SceneMVEnd kMajV_S2Peng
        End if
    End Select
    if (idx <> -1) then
      if PlayerState(CurrentPlayer).LightState(kMajV_S2Peng, idx)=2 then    ' No progress on this one yet
        PlaySoundVol "sfx-Joker-hit3", VolSfx
        DOF 209, DOFPulse 'Joker Hit
        DoLightSeq 1    ' Majors do light seq
        curScore = BonusAddMode(kMajV_S2Peng, -1, False)
        PlayerState(CurrentPlayer).AddProgressScore kMajV_S2Peng, curScore
'       PlayerState(CurrentPlayer).AddProgress kMajV_S2Peng
      End if
    End if

    if PlayerState(CurrentPlayer).TProgress(kMajV_S2Peng)=22 then  ' We are done
      PlayerState(CurrentPlayer).SeTProgress(kMajV_S2Peng)=17               ' they can reset to loop
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightPengArrow, "purple", 0
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightJokerArrow, "purple", 0
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightRiddlerArrow1, "purple", 0
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightRiddlerArrow2, "purple", 0
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightCatArrow1, "purple", 0
      PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightCatArrow2, "purple", 0

      PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Peng, kLightSuperJArrow, "", 2
    End If
  End if
End Sub

'******************************************************   MINOR villainS  START **************************************************************


Sub tmrHatter_Timer()
Dim skipIdx
Dim idx
  if tmrPauseTimers.Enabled then Exit sub

  tmrHatter.UserValue=tmrHatter.UserValue-1
  if tmrHatter.UserValue <=0 then
    tmrHatter.UserValue=10
    ProgressS1MadHatterAdd=ProgressS1MadHatterAdd+1

    do
      skipIdx=Int(Rnd*6)
      select case skipIdx
        case 0: idx=kLightJokerArrow
        case 1: idx=kLightRiddlerArrow1
        case 2: idx=kLightRiddlerArrow2
        case 3: idx=kLightCatArrow1
        case 4: idx=kLightCatArrow2
        case 5: idx=kLightPengArrow
      End Select
    loop while PlayerState(CurrentPlayer).LightState(kMinV_S1MadHatter, idx)<>0

    QueueSceneV kMinV_S1MadHatter, "SceneHatterAdd sSwapPos ", 2043, 1
    QueueSceneV kMinV_S1MadHatter, "StartLastScene ", -1, 1

    PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, idx, "blue", 2
    if ProgressS1MadHatterAdd>=2 then
      tmrHatter.Enabled = False
    End if

  End if
End Sub

dim ProgressS1MadHatterAdd
Sub ProgressS1MadHatter(light)
  if PlayerState(CurrentPlayer).isActive(kMinV_S1MadHatter)  = False then Exit Sub
  if DoDebounce(kMinV_S1MadHatter, light.name) then WriteToLog "     ", "Process S1MadHatter Debounce Skip":exit sub

'WriteToLog "     ", "Process MadHatter " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMinV_S1MadHatter)
  Dim bValidHit
  Dim idx
  Dim skipIdx
  Dim skipIdx2
  Dim skipIdx3
  Dim bIsGadget
  Dim bIsJokerArrow
  Dim CurProgress
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False

  if bIsJokerArrow then SetDebounce kMinV_S1MadHatter, light.name

  select case light.name
    case "swBatmobile","lArrowJoker", "lBatPhone","swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
  End Select

  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kMinV_S1MadHatter, idx)=2 then     ' No progress on this one yet
      PlaySoundVol "sfx-riddler-hit1a", VolSfx    ' One of 3 random sounds
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, idx, "blue", 0

      if PlayerState(CurrentPlayer).TProgress(kMinV_S1MadHatter)<=4 Then
        if PlayerState(CurrentPlayer).TProgress(kMinV_S1MadHatter)=2+ProgressS1MadHatterAdd then  ' Hit the shots before we added another
          PlayerState(CurrentPlayer).SetProgress(kMinV_S1MadHatter)=4
        End if
        PlayerState(CurrentPlayer).AddProgressScore kMinV_S1MadHatter, PlayerState(CurrentPlayer).Villains(kMinV_S1MadHatter).JackpotValue
        AddScoreMode kMinV_S1MadHatter, PlayerState(CurrentPlayer).Villains(kMinV_S1MadHatter).JackpotValue
        PlayerState(CurrentPlayer).AddJackpot kMinV_S1MadHatter, -1

        if PlayerState(CurrentPlayer).TProgress(kMinV_S1MadHatter)=5 then     ' Done, light next shot
          tmrHatter.Enabled=False
          skipIdx = INT(RND*6)        ' Random num between 0 and 5
          if skipIdx=0 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightRiddlerArrow1, "blue", 2
          if skipIdx=1 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightRiddlerArrow2, "blue", 2
          if skipIdx=2 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightCatArrow1, "blue", 2
          if skipIdx=3 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightCatArrow2, "blue", 2
          if skipIdx=4 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightJokerArrow, "blue", 2
          if skipIdx=5 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightPengArrow, "blue", 2
        End if

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S1MadHatter)=5  Then ' 3 random
        PlayerState(CurrentPlayer).AddProgressScore kMinV_S1MadHatter, PlayerState(CurrentPlayer).Villains(kMinV_S1MadHatter).JackpotValue
        AddScoreMode kMinV_S1MadHatter, PlayerState(CurrentPlayer).Villains(kMinV_S1MadHatter).JackpotValue
        PlayerState(CurrentPlayer).AddJackpot kMinV_S1MadHatter, -1

        skipIdx = INT(RND*6)        ' Random num between 0 and 5
        skipIdx2= INT(Rnd*6)
        skipIdx3= INT(Rnd*6)
        while skipIdx = skipIdx2
          skipIdx2=Int(Rnd*6)
        wend
        while skipIdx3 = skipIdx or skipIdx3 = skipIdx2
          skipIdx3=Int(Rnd*6)
        wend
        if skipIdx=0 or skipIdx2=0 or skipIdx3=0 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightRiddlerArrow1, "blue", 2
        if skipIdx=1 or skipIdx2=1 or skipIdx3=1 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightRiddlerArrow2, "blue", 2
        if skipIdx=2 or skipIdx2=2 or skipIdx3=2 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightCatArrow1, "blue", 2
        if skipIdx=3 or skipIdx2=3 or skipIdx3=3 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightCatArrow2, "blue", 2
        if skipIdx=4 or skipIdx2=4 or skipIdx3=4 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightJokerArrow, "blue", 2
        if skipIdx=5 or skipIdx2=5 or skipIdx3=5 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S1MadHatter, kLightPengArrow, "blue", 2

      elseif PlayerState(CurrentPlayer).TProgress(kMinV_S1MadHatter)<=7 Then
        PlayerState(CurrentPlayer).AddProgressScore kMinV_S1MadHatter, PlayerState(CurrentPlayer).Villains(kMinV_S1MadHatter).JackpotValue
        AddScoreMode kMinV_S1MadHatter, PlayerState(CurrentPlayer).Villains(kMinV_S1MadHatter).JackpotValue
        PlayerState(CurrentPlayer).AddJackpot kMinV_S1MadHatter, -1

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S1MadHatter)=8 Then
        SceneMinorEnd True
      End if
    End if
  End if

End Sub

Sub ProgressS1KingTut(light)
  if PlayerState(CurrentPlayer).isActive(kMinV_S1KingTut)  = False then Exit Sub
  if DoDebounce(kMinV_S1KingTut, light.name) then WriteToLog "     ", "Process S1KingTut Debounce Skip":exit sub

'WriteToLog "     ", "Process KingTutS1 " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMinV_S1KingTut)
  Dim bValidHit
  Dim idx
  Dim skipIdx
  Dim skipIdx2
  Dim skipIdx3
  Dim bIsGadget
  Dim rndIdx
  Dim bIsJokerArrow
  Dim CurProgress
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False

  if bIsJokerArrow then SetDebounce kMinV_S1KingTut, light.name

  ' **************************************************************************************************    KingTut Wave 1
  select case light.name
    case "swBatmobile","lArrowJoker", "lBatPhone", "swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
  End Select

  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kMinV_S1KingTut, idx)=2 then     ' No progress on this one yet
      PlayerState(CurrentPlayer).AddProgressScore kMinV_S1KingTut, PlayerState(CurrentPlayer).Villains(kMinV_S1KingTut).JackpotValue
      AddScoreMode kMinV_S1KingTut, PlayerState(CurrentPlayer).Villains(kMinV_S1KingTut).JackpotValue
      PlayerState(CurrentPlayer).AddJackpot kMinV_S1KingTut, -1

      PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx   ' One of 3 random sounds
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, idx, "blue", 0

      if  PlayerState(CurrentPlayer).TProgress(kMinV_S1KingTut)=2 Then

        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightRiddlerArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightRiddlerArrow2, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightJokerArrow, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightPengArrow, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightCatArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightCatArrow2, "blue", 2

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S1KingTut)>=3 and  PlayerState(CurrentPlayer).TProgress(kMinV_S1KingTut)<=5 Then
        ' Do nothing
      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S1KingTut)=6 Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightRiddlerArrow1, "blue", 0
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightRiddlerArrow2, "blue", 0
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightJokerArrow, "blue", 0
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightPengArrow, "blue", 0
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightCatArrow1, "blue", 0
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightCatArrow2, "blue", 0

        ' Pick a random one
        rndIdx = INT(RND*6)
        select case rndIdx
          case 0: PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightRiddlerArrow1, "blue", 2
          case 1: PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightRiddlerArrow2, "blue", 2
          case 2: PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightJokerArrow, "blue", 2
          case 3: PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightPengArrow, "blue", 2
          case 4: PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightCatArrow1, "blue", 2
          case 5: PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightCatArrow2, "blue", 2
        End Select
      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S1KingTut)=7 Then

        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightRiddlerArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightRiddlerArrow2, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightJokerArrow, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightPengArrow, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightCatArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, kLightCatArrow2, "blue", 2
      elseif PlayerState(CurrentPlayer).TProgress(kMinV_S1KingTut)>=8 Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1KingTut, idx, "blue", 2
        if PlayerState(CurrentPlayer).TProgress(kMinV_S1KingTut) = 10 then
          SceneMinorEnd True
        End if

      End if
    End if
  End if

End Sub


Sub ProgressS1Bookworm(light)
  if PlayerState(CurrentPlayer).isActive(kMinV_S1Bookworm)  = False then Exit Sub
  if DoDebounce(kMinV_S1Bookworm, light.name) then WriteToLog "     ", "Process S1Bookworm Debounce Skip":exit sub

WriteToLog "     ", "Process Bookworm " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMinV_S1Bookworm)
  Dim bValidHit
  Dim idx
  Dim skipIdx
  Dim skipIdx2
  Dim skipIdx3
  Dim bIsGadget
  Dim rndIdx
  Dim bIsJokerArrow
  Dim CurProgress
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False

  if bIsJokerArrow then SetDebounce kMinV_S1Bookworm, light.name

  ' Handle TV Triggers
  if light.name = "lTV1" or light.name="lTV2" or light.name="lTV3" then
    QueueFlushV kMinV_S1Bookworm
    if PlayerState(CurrentPlayer).Villains(kMinV_S1Bookworm).LoopCnt = 0 then
      QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 kMinV_S1Bookworm, 0, 0, ""video-Bookworm"", ""tv1.mp4"", ""^^^^^^^^"" ", 1741, 1
    elseif PlayerState(CurrentPlayer).Villains(kMinV_S1Bookworm).LoopCnt = 1 then
      QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 kMinV_S1Bookworm, 0, 0, ""video-Bookworm"", ""tv2.mp4"", ""^^^^^^^^"" ", 4800, 1
    else
      QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 kMinV_S1Bookworm, 0, 1, ""video-Bookworm"", ""tv3.mp4"", ""^^^^^^^^"" ", 3833, 1
    End if
    QueueSceneV kMinV_S1Bookworm, "SceneGeneralStart3 kMinV_S1Bookworm, 1, 0, ""video-Bookworm"", ""wait1.mp4"", ""^^^^^^^^"" ", -1, 1
    PlayerState(CurrentPlayer).Villains(kMinV_S1Bookworm).LoopCnt=PlayerState(CurrentPlayer).Villains(kMinV_S1Bookworm).LoopCnt+1
  End if

  ' **************************************************************************************************    Bookworm Wave 1
  select case light.name
    case "swBatmobile","lArrowJoker", "lBatPhone","swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
  End Select

  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kMinV_S1Bookworm, idx)=2 then    ' No progress on this one yet
      PlayerState(CurrentPlayer).AddProgressScore kMinV_S1Bookworm, PlayerState(CurrentPlayer).Villains(kMinV_S1Bookworm).JackpotValue
      AddScoreMode kMinV_S1Bookworm, PlayerState(CurrentPlayer).Villains(kMinV_S1Bookworm).JackpotValue
      PlayerState(CurrentPlayer).AddJackpot kMinV_S1Bookworm, -1

      PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx   ' One of 3 random sounds
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S1Bookworm, idx, "orange", 0

      if  PlayerState(CurrentPlayer).TProgress(kMinV_S1Bookworm)=2 Then

        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1Bookworm, kLightRiddlerArrow1, "orange", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1Bookworm, kLightRiddlerArrow2, "orange", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1Bookworm, kLightJokerArrow, "orange", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1Bookworm, kLightPengArrow, "orange", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1Bookworm, kLightCatArrow1, "orange", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1Bookworm, kLightCatArrow2, "orange", 2

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S1Bookworm)=8  Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1Bookworm, kLightJokerArrow, "orange", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1Bookworm, kLightCatArrow1, "orange", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1Bookworm, kLightCatArrow2, "orange", 2

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S1Bookworm)=11 Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S1Bookworm, kLightJokerArrow, "orange", 2

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S1Bookworm)=12 Then
        SceneMinorEnd True
      End if
    End if
  End if

End Sub


Dim ProgressS2Tut1Rnd
Sub ProgressS2Tut1(light)
  if PlayerState(CurrentPlayer).isActive(kMinV_S2KingTut1)  = False then Exit Sub
  if DoDebounce(kMinV_S2KingTut1, light.name) then WriteToLog "     ", "Process S2KingTut1 Debounce Skip":exit sub

'WriteToLog "     ", "Process S2Tut1 " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMinV_S2KingTut1) & " Rnd:" & ProgressS2Tut1Rnd
  Dim bValidHit
  Dim idx
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bIsGadget
  Dim bIsJokerArrow
  Dim CurProgress
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False

  if bIsJokerArrow then SetDebounce kMinV_S2KingTut1, light.name

  select case light.name
    case "swBatmobile","lArrowJoker", "lBatPhone", "swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
  End Select

  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kMinV_S2KingTut1, idx)=2 then    ' No progress on this one yet
      PlayerState(CurrentPlayer).AddProgressScore kMinV_S2KingTut1, PlayerState(CurrentPlayer).Villains(kMinV_S2KingTut1).JackpotValue
      AddScoreMode kMinV_S2KingTut1, PlayerState(CurrentPlayer).Villains(kMinV_S2KingTut1).JackpotValue
      PlayerState(CurrentPlayer).AddJackpot kMinV_S2KingTut1, -1

      PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx   ' One of 3 random sounds

      if  PlayerState(CurrentPlayer).TProgress(kMinV_S2KingTut1)<4 Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, idx, "blue", 0

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S2KingTut1)=4 Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, idx, "blue", 0
        rndIdx =MID(ProgressS2Tut1Rnd, 1,1)
        rndIdx2=MID(ProgressS2Tut1Rnd, 2,1)
        rndIdx3=MID(ProgressS2Tut1Rnd, 3,1)
        if rndIdx=0 or rndIdx2=0 or rndIdx3=0 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightRiddlerArrow1, "blue", 2
        if rndIdx=1 or rndIdx2=1 or rndIdx3=1 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightRiddlerArrow2, "blue", 2
        if rndIdx=2 or rndIdx2=2 or rndIdx3=2 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightCatArrow1, "blue", 2
        if rndIdx=3 or rndIdx2=3 or rndIdx3=3 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightCatArrow2, "blue", 2
        if rndIdx=4 or rndIdx2=4 or rndIdx3=4 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightJokerArrow, "blue", 2
        if rndIdx=5 or rndIdx2=5 or rndIdx3=5 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightPengArrow, "blue", 2
      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S2KingTut1)<7 Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, idx, "blue", 0

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S2KingTut1)=7  Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, idx, "blue", 0

        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightRiddlerArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightRiddlerArrow2, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightJokerArrow, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightPengArrow, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightCatArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut1, kLightCatArrow2, "blue", 2

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S2KingTut1)=11 Then
        SceneMinorEnd True
      End if
    End if
  End if

End Sub


Sub ProgressS2Egg1(light)
  if PlayerState(CurrentPlayer).isActive(kMinV_S2EggHead)  = False then Exit Sub
  if DoDebounce(kMinV_S2EggHead, light.name) then WriteToLog "     ", "Process Egg1-S2 Debounce Skip":exit sub

'WriteToLog "     ", "Process Egg1-S2 " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMinV_S2EggHead)
  Dim bValidHit
  Dim idx
  Dim i
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bIsGadget
  Dim bIsTV
  Dim bIsJokerArrow
  Dim CurProgress
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False
  bIsTV=False

  if light.name = "lGadgetG1" or light.name = "lGadgetA" or light.name = "lGadgetD" or light.name = "lGadgetG2" or light.name = "lGadgetE" or light.name = "lGadgetT" then
    bIsGadget=True
  End if
  if light.name = "lTV1" or light.name = "lTV1" or light.name = "lTV2" then
    bIsTV=True
  End If

  if bIsJokerArrow or bIsTV or bIsGadget then SetDebounce kMinV_S2EggHead, light.name

  if bIsGadget then     ' Shift shot Left
    if PlayerState(CurrentPlayer).LightState(kMinV_S2EggHead, kLightRiddlerArrow2)=2 then
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightRiddlerArrow2, "yellow", 0
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightPengArrow, "yellow", 2
    elseif PlayerState(CurrentPlayer).LightState(kMinV_S2EggHead, kLightPengArrow)=2 then
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightPengArrow, "yellow", 0
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightCatArrow2, "yellow", 2
    elseif PlayerState(CurrentPlayer).LightState(kMinV_S2EggHead, kLightCatArrow2)=2 then
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightCatArrow2, "yellow", 0
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightJokerArrow, "yellow", 2
    elseif PlayerState(CurrentPlayer).LightState(kMinV_S2EggHead, kLightJokerArrow)=2 then
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightJokerArrow, "yellow", 0
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightCatArrow1, "yellow", 2
    elseif PlayerState(CurrentPlayer).LightState(kMinV_S2EggHead, kLightCatArrow1)=2 then
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightCatArrow1, "yellow", 0
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightRiddlerArrow1, "yellow", 2
    End if

  End If
  if bIsTV then   ' Shift shot Right
    if PlayerState(CurrentPlayer).LightState(kMinV_S2EggHead, kLightRiddlerArrow1)=2 then
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightRiddlerArrow1, "yellow", 0
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightCatArrow1, "yellow", 2
    elseif PlayerState(CurrentPlayer).LightState(kMinV_S2EggHead, kLightCatArrow1)=2 then
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightCatArrow1, "yellow", 0
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightJokerArrow, "yellow", 2
    elseif PlayerState(CurrentPlayer).LightState(kMinV_S2EggHead, kLightJokerArrow)=2 then
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightJokerArrow, "yellow", 0
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightCatArrow2, "yellow", 2
    elseif PlayerState(CurrentPlayer).LightState(kMinV_S2EggHead, kLightCatArrow2)=2 then
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightCatArrow2, "yellow", 0
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightPengArrow, "yellow", 2
    elseif PlayerState(CurrentPlayer).LightState(kMinV_S2EggHead, kLightPengArrow)=2 then
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightPengArrow, "yellow", 0
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightRiddlerArrow2, "yellow", 2
    End if
  End If


  select case light.name
    case "swBatmobile","lArrowJoker", "lBatPhone", "swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
    case "swGadget":    ' Pressed Gadget, Light a random shot
      if  PlayerState(CurrentPlayer).TProgress(kMinV_S2EggHead)=1 Then
        PlayerState(CurrentPlayer).AddProgress kMinV_S2EggHead

        ' Pick a random one
        rndIdx = INT(RND*6)
        select case rndIdx
          case 0: PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightRiddlerArrow1, "yellow", 2
          case 1: PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightRiddlerArrow2, "yellow", 2
          case 2: PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightJokerArrow, "yellow", 2
          case 3: PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightPengArrow, "yellow", 2
          case 4: PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightCatArrow1, "yellow", 2
          case 5: PlayerState(CurrentPlayer).SSetLightColor kMinV_S2EggHead, kLightCatArrow2, "yellow", 2
        End Select

      End if
  End Select

  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kMinV_S2EggHead, idx)=2 then     ' No progress on this one yet
      PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx   ' One of 3 random sounds
      SceneMinorEnd True
    End if
  End if

End Sub



Sub ProgressS2Freeze(light)
  if PlayerState(CurrentPlayer).isActive(kMinV_S2MrFreeze)  = False then Exit Sub
  if DoDebounce(kMinV_S2MrFreeze, light.name) then WriteToLog "     ", "Process S2Freeze Debounce Skip":exit sub

'WriteToLog "     ", "Process S2Freeze " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMinV_S2MrFreeze)
  Dim bValidHit
  Dim idx
  Dim i
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bIsGadget
  Dim bIsTV
  Dim bIsJokerArrow
  Dim CurProgress
  Dim Score
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False
  bIsTV=False

  if light.name = "lGadgetG1" or light.name = "lGadgetA" or light.name = "lGadgetD" or light.name = "lGadgetG2" or light.name = "lGadgetE" or light.name = "lGadgetT" then
    bIsGadget=True
  End if
  if light.name = "lTV1" or light.name = "lTV1" or light.name = "lTV2" then
    bIsTV=True
  End If

  if bIsJokerArrow or bIsTV or bIsGadget then SetDebounce kMinV_S2MrFreeze, light.name

  select case light.name
    case "swBatmobile","lArrowJoker", "lBatPhone", "swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
  End Select

  if idx <> -1 then
    PlaySoundVol "sfx-Freeze-hit1", VolSfx
    if PlayerState(CurrentPlayer).LightState(kMinV_S2MrFreeze, idx)=2 then    ' This was flashing Red, Turn it blue
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, idx, "blue", 1

      if PlayerState(CurrentPlayer).Villains(kMinV_S2MrFreeze).JackpotValue=3000000 then
        Score=PlayerState(CurrentPlayer).Villains(kMinV_S2MrFreeze).JackpotValue
      else
        Score=PlayerState(CurrentPlayer).Villains(kMinV_S2MrFreeze).JackpotValue-PlayerState(CurrentPlayer).Villains(kMinV_S2MrFreeze).JackpotBase
      End if
      QueueFlushV kMinV_S2MrFreeze
      QueueSceneV kMinV_S2MrFreeze, "SceneGeneralStart3 "&kMinV_S2MrFreeze&", 0, 0, ""video-Freeze"", ""miss.mp4"", ""^^^^12:" & FormatScore(Score) & "^^^^"" ", 1666, 1
      QueueSceneV kMinV_S2MrFreeze, "SceneGeneralStart3 "&kMinV_S2MrFreeze&", 1, 0, ""video-Freeze"", ""wait1.mp4"", ""^^^^^^^^Shoot Flashing Shots"" ", -1, 1
      AddScoreMode kMinV_S2MrFreeze,  Score

    elseif PlayerState(CurrentPlayer).LightState(kMinV_S2MrFreeze, idx)=1 then    ' This was Solid Blue, Turn it off and advance

      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, idx, "blue", 0
' WAVE 1 ----------------
      if PlayerState(CurrentPlayer).TProgress(kMinV_S2MrFreeze)<=2 Then

        if PlayerState(CurrentPlayer).LightState(kMinV_S2MrFreeze, kLightRiddlerArrow1)<>1 and _
          PlayerState(CurrentPlayer).LightState(kMinV_S2MrFreeze, kLightRiddlerArrow2)<>1 and _
          PlayerState(CurrentPlayer).LightState(kMinV_S2MrFreeze, kLightJokerArrow)<>1 and _
          PlayerState(CurrentPlayer).LightState(kMinV_S2MrFreeze, kLightCatArrow1)<>1 and _
          PlayerState(CurrentPlayer).LightState(kMinV_S2MrFreeze, kLightCatArrow2)<>1 and _
          PlayerState(CurrentPlayer).LightState(kMinV_S2MrFreeze, kLightPengArrow)<>1 then

          PlayerState(CurrentPlayer).AddProgressScore kMinV_S2MrFreeze, PlayerState(CurrentPlayer).Villains(kMinV_S2MrFreeze).JackpotValue
          AddScoreMode kMinV_S2MrFreeze, PlayerState(CurrentPlayer).Villains(kMinV_S2MrFreeze).JackpotValue
          PlayerState(CurrentPlayer).AddJackpot kMinV_S2MrFreeze, -1

          PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, kLightRiddlerArrow1, "blue", 0
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, kLightRiddlerArrow2, "blue", 0
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, kLightJokerArrow, "blue", 0
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, kLightPengArrow, "blue", 0
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, kLightCatArrow1, "blue", 1
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, kLightCatArrow2, "blue", 1

        else                                          ' Repeat progress
          PlayerState(CurrentPlayer).SetProgress(kMinV_S2MrFreeze)=1
          PlayerState(CurrentPlayer).AddProgressScore kMinV_S2MrFreeze, PlayerState(CurrentPlayer).Villains(kMinV_S2MrFreeze).JackpotValue
          AddScoreMode kMinV_S2MrFreeze, PlayerState(CurrentPlayer).Villains(kMinV_S2MrFreeze).JackpotValue
          PlayerState(CurrentPlayer).AddJackpot kMinV_S2MrFreeze, -1
        End if
' WAVE 2 ----------------
      elseif PlayerState(CurrentPlayer).TProgress(kMinV_S2MrFreeze)<=5 Then
        PlayerState(CurrentPlayer).AddProgressScore kMinV_S2MrFreeze, PlayerState(CurrentPlayer).Villains(kMinV_S2MrFreeze).JackpotValue
        AddScoreMode kMinV_S2MrFreeze, PlayerState(CurrentPlayer).Villains(kMinV_S2MrFreeze).JackpotValue
        PlayerState(CurrentPlayer).AddJackpot kMinV_S2MrFreeze, -1

        if PlayerState(CurrentPlayer).TProgress(kMinV_S2MrFreeze)=5 then

          PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, kLightJokerArrow, "blue", 1
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, kLightPengArrow, "blue", 1
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MrFreeze, kLightCatArrow2, "blue", 1

        End if
' WAVE 3 ----------------
      Else
        if PlayerState(CurrentPlayer).LightState(kMinV_S2MrFreeze, kLightJokerArrow)<>1 and _
          PlayerState(CurrentPlayer).LightState(kMinV_S2MrFreeze, kLightCatArrow2)<>1 and _
          PlayerState(CurrentPlayer).LightState(kMinV_S2MrFreeze, kLightPengArrow)<>1 then
          SceneMinorEnd True
        End if
      End if
    End if
  End if

End Sub


Dim ProgressS2ShamePos      ' Position of the gadget selection
Sub ProgressS2Shame(light)
  if PlayerState(CurrentPlayer).isActive(kMinV_S2Shame)  = False then Exit Sub
  if DoDebounce(kMinV_S2Shame, light.name) then WriteToLog "     ", "Process S2Shame Debounce Skip":exit sub

'WriteToLog "     ", "Process S2Shame " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame)
  Dim bValidHit
  Dim idx
  Dim i
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bIsGadget
  Dim bIsBumper
  Dim bIsTV
  Dim bIsJokerArrow
  Dim CurProgress
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False
  bIsTV=False

  if light.name = "lGadgetG1" or light.name = "lGadgetA" or light.name = "lGadgetD" or light.name = "lGadgetG2" or light.name = "lGadgetE" or light.name = "lGadgetT" then
    bIsGadget=True
  End if
  if light.name = "lTV1" or light.name = "lTV1" or light.name = "lTV2" then
    bIsTV=True
  End If
  if light.name ="Bumper001" or light.name="Bumper002" or light.name="Bumper003" then
    bIsBumper=True
  End if

  if bIsJokerArrow or bIsTV or bIsGadget then SetDebounce kMinV_S2Shame, light.name

  select case light.name
    case "swBatmobile","lArrowJoker", "lBatPhone", "swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
  End Select

  if PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame)<=4 Then

    if bIsBumper then   ' Shift Targets
      ProgressS2ShamePos=(ProgressS2ShamePos+1) mod 4
      ' Restore
      SetLightColor lGadgetG1, "", PlayerState(CurrentPlayer).GadgetProgress(0)
      SetLightColor lGadgetA,  "", PlayerState(CurrentPlayer).GadgetProgress(1)
      SetLightColor lGadgetD,  "", PlayerState(CurrentPlayer).GadgetProgress(2)
      SetLightColor lGadgetG2, "", PlayerState(CurrentPlayer).GadgetProgress(3)
      SetLightColor lGadgetE,  "", PlayerState(CurrentPlayer).GadgetProgress(4)
      SetLightColor lGadgetT,  "", PlayerState(CurrentPlayer).GadgetProgress(5)

      SetLightColor lTV1, "", PlayerState(CurrentPlayer).TVProgress(0)
      SetLightColor lTV2,  "", PlayerState(CurrentPlayer).TVProgress(1)
      SetLightColor lTV3,  "", PlayerState(CurrentPlayer).TVProgress(2)

      Select case ProgressS2ShamePos
        case 0:
          SetLightColor lTV1, "", 2
          SetLightColor lGadgetE, "", 2
          SetLightColor lGadgetG2, "", 2
        case 1:
          SetLightColor lTV2, "", 2
          SetLightColor lGadgetG2, "", 2
          SetLightColor lGadgetD, "", 2
        case 2:
          SetLightColor lTV3, "", 2
          SetLightColor lGadgetD, "", 2
          SetLightColor lGadgetA, "", 2
        case 3:
          SetLightColor lTV2, "", 2
          SetLightColor lGadgetG1, "", 2
          SetLightColor lGadgetT , "", 2
      End Select
    End if

    if bIsGadget or bIsTV then

      PlayerState(CurrentPlayer).AddJackpot2 kMinV_S2Shame, 32500   ' Shame Wave 1 makes everything 32500
      AddScoreMode kMinV_S2Shame, PlayerState(CurrentPlayer).Jackpot(kMinV_S2Shame)
      PlayerState(CurrentPlayer).AddProgressScore kMinV_S2Shame, PlayerState(CurrentPlayer).Jackpot(kMinV_S2Shame)

      if PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame)=5 then ' Dome with this wave
        ' Restore
        SetLightColor lGadgetG1, "", PlayerState(CurrentPlayer).GadgetProgress(0)
        SetLightColor lGadgetA,  "", PlayerState(CurrentPlayer).GadgetProgress(1)
        SetLightColor lGadgetD,  "", PlayerState(CurrentPlayer).GadgetProgress(2)
        SetLightColor lGadgetG2, "", PlayerState(CurrentPlayer).GadgetProgress(3)
        SetLightColor lGadgetE,  "", PlayerState(CurrentPlayer).GadgetProgress(4)
        SetLightColor lGadgetT,  "", PlayerState(CurrentPlayer).GadgetProgress(5)

        SetLightColor lTV1, "", PlayerState(CurrentPlayer).TVProgress(0)
        SetLightColor lTV2, "", PlayerState(CurrentPlayer).TVProgress(1)
        SetLightColor lTV3, "", PlayerState(CurrentPlayer).TVProgress(2)

        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2Shame, kLightRiddlerArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2Shame, kLightRiddlerArrow2, "blue", 2
      End if
    End if
  End if

  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kMinV_S2Shame, idx)=2 then
      PlaySoundVol "sfx-Freeze-hit1", VolSfx

      PlayerState(CurrentPlayer).SSetLightColor kMinV_S2Shame, idx, "blue", 0
      bSceneShameS2Wait2ShowScore=True
      PlayerState(CurrentPlayer).AddProgress kMinV_S2Shame
      AddScoreMode kMinV_S2Shame, PlayerState(CurrentPlayer).Jackpot(kMinV_S2Shame)

      rndIdx = INT(RND*6)       ' Random insert between 0 and 5
      if rndIdx=0 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2Shame, kLightRiddlerArrow1, "blue", 2
      if rndIdx=1 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2Shame, kLightRiddlerArrow2, "blue", 2
      if rndIdx=2 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2Shame, kLightCatArrow1, "blue", 2
      if rndIdx=3 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2Shame, kLightCatArrow2, "blue", 2
      if rndIdx=4 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2Shame, kLightJokerArrow, "blue", 2
      if rndIdx=5 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2Shame, kLightPengArrow, "blue", 2

      if PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame)>=11 then   ' Loop forever
        PlayerState(CurrentPlayer).SetProgress(kMinV_S2Shame)=10
      End if

    End if
  End if

End Sub


Dim ProgressS2MadHatterPink
Sub ProgressS2MadHatter(light)
  if PlayerState(CurrentPlayer).isActive(kMinV_S2MadHatter)  = False then Exit Sub
  if DoDebounce(kMinV_S2MadHatter, light.name) then WriteToLog "     ", "Process S2Hatter Debounce Skip":exit sub

'WriteToLog "     ", "Process S2Hatter " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMinV_S2MadHatter) & " Pink:" & ProgressS2MadHatterPink
  Dim bValidHit
  Dim idx
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bIsGadget
  Dim bIsJokerArrow
  Dim CurProgress
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False

  if bIsJokerArrow then SetDebounce kMinV_S2MadHatter, light.name

  select case light.name
    case "swBatmobile","lArrowJoker", "lBatPhone", "swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
  End Select

  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kMinV_S2MadHatter, idx)=2 then     ' No progress on this one yet
      PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx   ' One of 3 random sounds

      if PlayerState(CurrentPlayer).TProgress(kMinV_S2MadHatter)<=6 Then
        if idx=ProgressS2MadHatterPink then                   ' This is the pink shot, End the wave
          PlayerState(CurrentPlayer).SetProgress(kMinV_S2MadHatter)=6
        End if
        PlayerState(CurrentPlayer).AddProgressScore kMinV_S2MadHatter, PlayerState(CurrentPlayer).Villains(kMinV_S2MadHatter).JackpotValue
        AddScoreMode kMinV_S2MadHatter, PlayerState(CurrentPlayer).Villains(kMinV_S2MadHatter).JackpotValue
        PlayerState(CurrentPlayer).AddJackpot kMinV_S2MadHatter, -1

        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, idx, "blue", 0

        if PlayerState(CurrentPlayer).TProgress(kMinV_S2MadHatter)=7 Then ' We are done with this wave, light 3 random pink
          rndIdx = INT(RND*6)       ' Random pick 3 of the 6
          rndIdx2 = INT(Rnd*6)
          rndIdx3= INT(Rnd*6)
          while rndIdx = rndIdx2
            rndIdx2=Int(Rnd*6)
          wend
          while rndIdx3 = rndIdx or rndIdx3 = rndIdx2
            rndIdx3=Int(Rnd*6)
          wend
          if rndIdx=0 or rndIdx2=0 or rndIdx3=0 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightRiddlerArrow1, "pink", 2
          if rndIdx=1 or rndIdx2=1 or rndIdx3=1 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightRiddlerArrow2, "pink", 2
          if rndIdx=2 or rndIdx2=2 or rndIdx3=2 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightCatArrow1, "pink", 2
          if rndIdx=3 or rndIdx2=3 or rndIdx3=3 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightCatArrow2, "pink", 2
          if rndIdx=4 or rndIdx2=4 or rndIdx3=4 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightJokerArrow, "pink", 2
          if rndIdx=5 or rndIdx2=5 or rndIdx3=5 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightPengArrow, "pink", 2
        End if

      elseif PlayerState(CurrentPlayer).TProgress(kMinV_S2MadHatter)<=9 Then
        PlayerState(CurrentPlayer).AddProgressScore kMinV_S2MadHatter, PlayerState(CurrentPlayer).Villains(kMinV_S2MadHatter).JackpotValue
        AddScoreMode kMinV_S2MadHatter, PlayerState(CurrentPlayer).Villains(kMinV_S2MadHatter).JackpotValue
        PlayerState(CurrentPlayer).AddJackpot kMinV_S2MadHatter, -1

        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, idx, "pink", 0

        if PlayerState(CurrentPlayer).TProgress(kMinV_S2MadHatter)=10 Then  ' We are done with this wave, light all shots
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightRiddlerArrow1, "pink", 2
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightRiddlerArrow2, "pink", 2
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightJokerArrow, "pink", 2
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightPengArrow, "pink", 2
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightCatArrow1, "pink", 2
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, kLightCatArrow2, "pink", 2
        End if
      else
        PlayerState(CurrentPlayer).AddProgressScore kMinV_S2MadHatter, PlayerState(CurrentPlayer).Villains(kMinV_S2MadHatter).JackpotValue
        AddScoreMode kMinV_S2MadHatter, PlayerState(CurrentPlayer).Villains(kMinV_S2MadHatter).JackpotValue
        PlayerState(CurrentPlayer).AddJackpot kMinV_S2MadHatter, -1

        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2MadHatter, idx, "pink", 0
        if PlayerState(CurrentPlayer).TProgress(kMinV_S2MadHatter)=14 Then  ' All done
          SceneMinorEnd True
        End if
      End if
    End if
  End if

End Sub


Dim ProgressS2Tut2Rnd
Sub ProgressS2Tut2(light)
  if PlayerState(CurrentPlayer).isActive(kMinV_S2KingTut2)  = False then Exit Sub
  if DoDebounce(kMinV_S2KingTut2, light.name) then WriteToLog "     ", "Process S2Tut2 Debounce Skip":exit sub

'WriteToLog "     ", "Process S2Tut2 " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMinV_S2KingTut2) & " Rnd:" & ProgressS2Tut1Rnd
  Dim bValidHit
  Dim idx
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bIsGadget
  Dim bIsJokerArrow
  Dim CurProgress
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False

  if bIsJokerArrow then SetDebounce kMinV_S2KingTut2, light.name

  select case light.name
    case "swBatmobile","lArrowJoker", "lBatPhone", "swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
  End Select

  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kMinV_S2KingTut2, idx)=2 then    ' No progress on this one yet
      PlayerState(CurrentPlayer).AddProgressScore kMinV_S2KingTut2, PlayerState(CurrentPlayer).Villains(kMinV_S2KingTut2).JackpotValue
      AddScoreMode kMinV_S2KingTut2, PlayerState(CurrentPlayer).Villains(kMinV_S2KingTut2).JackpotValue
      PlayerState(CurrentPlayer).AddJackpot kMinV_S2KingTut2, -1

      PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx   ' One of 3 random sounds

      if  PlayerState(CurrentPlayer).TProgress(kMinV_S2KingTut2)<4 Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, idx, "blue", 0

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S2KingTut2)=4 Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, idx, "blue", 0
        rndIdx =MID(ProgressS2Tut2Rnd, 1,1)
        rndIdx2=MID(ProgressS2Tut2Rnd, 2,1)
        rndIdx3=MID(ProgressS2Tut2Rnd, 3,1)
        if rndIdx=0 or rndIdx2=0 or rndIdx3=0 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightRiddlerArrow1, "blue", 2
        if rndIdx=1 or rndIdx2=1 or rndIdx3=1 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightRiddlerArrow2, "blue", 2
        if rndIdx=2 or rndIdx2=2 or rndIdx3=2 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightCatArrow1, "blue", 2
        if rndIdx=3 or rndIdx2=3 or rndIdx3=3 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightCatArrow2, "blue", 2
        if rndIdx=4 or rndIdx2=4 or rndIdx3=4 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightJokerArrow, "blue", 2
        if rndIdx=5 or rndIdx2=5 or rndIdx3=5 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightPengArrow, "blue", 2
      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S2KingTut2)<7 Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, idx, "blue", 0

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S2KingTut2)=7  Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, idx, "blue", 0

        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightRiddlerArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightRiddlerArrow2, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightJokerArrow, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightPengArrow, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightCatArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S2KingTut2, kLightCatArrow2, "blue", 2

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S2KingTut2)=11 Then
        SceneMinorEnd True
      End if
    End if
  End if

End Sub



Dim ProgressS3Tut1Rnd
Sub ProgressS3Tut1(light)
  if PlayerState(CurrentPlayer).isActive(kMinV_S3KingTut1)  = False then Exit Sub
  if DoDebounce(kMinV_S3KingTut1, light.name) then WriteToLog "     ", "Process S3Tut1 Debounce Skip":exit sub

'WriteToLog "     ", "Process S3Tut1 " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMinV_S3KingTut1) & " Rnd:" & ProgressS2Tut1Rnd
  Dim bValidHit
  Dim idx
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bIsGadget
  Dim bIsJokerArrow
  Dim CurProgress
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False

  if bIsJokerArrow then SetDebounce kMinV_S3KingTut1, light.name

  select case light.name
    case "swBatmobile","lArrowJoker", "lBatPhone", "swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
  End Select

  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kMinV_S3KingTut1, idx)=2 then    ' No progress on this one yet
      PlayerState(CurrentPlayer).AddProgressScore kMinV_S3KingTut1, PlayerState(CurrentPlayer).Villains(kMinV_S3KingTut1).JackpotValue
      AddScoreMode kMinV_S3KingTut1, PlayerState(CurrentPlayer).Villains(kMinV_S3KingTut1).JackpotValue
      PlayerState(CurrentPlayer).AddJackpot kMinV_S3KingTut1, -1

      PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx   ' One of 3 random sounds

      if  PlayerState(CurrentPlayer).TProgress(kMinV_S3KingTut1)<4 Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, idx, "blue", 0

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S3KingTut1)=4 Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, idx, "blue", 0
        rndIdx =MID(ProgressS3Tut1Rnd, 1,1)
        rndIdx2=MID(ProgressS3Tut1Rnd, 2,1)
        rndIdx3=MID(ProgressS3Tut1Rnd, 3,1)
        if rndIdx=0 or rndIdx2=0 or rndIdx3=0 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightRiddlerArrow1, "blue", 2
        if rndIdx=1 or rndIdx2=1 or rndIdx3=1 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightRiddlerArrow2, "blue", 2
        if rndIdx=2 or rndIdx2=2 or rndIdx3=2 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightCatArrow1, "blue", 2
        if rndIdx=3 or rndIdx2=3 or rndIdx3=3 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightCatArrow2, "blue", 2
        if rndIdx=4 or rndIdx2=4 or rndIdx3=4 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightJokerArrow, "blue", 2
        if rndIdx=5 or rndIdx2=5 or rndIdx3=5 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightPengArrow, "blue", 2
      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S3KingTut1)<7 Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, idx, "blue", 0

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S3KingTut1)=7  Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, idx, "blue", 0

        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightRiddlerArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightRiddlerArrow2, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightJokerArrow, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightPengArrow, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightCatArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut1, kLightCatArrow2, "blue", 2

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S3KingTut1)=11 Then
        SceneMinorEnd True
      End if
    End if
  End if

End Sub


Sub ProgressS3Egg1(light)
  if PlayerState(CurrentPlayer).isActive(kMinV_S3EggHead1)  = False then Exit Sub
  if DoDebounce(kMinV_S3EggHead1, light.name) then WriteToLog "     ", "Process S3Egg1 Debounce Skip":exit sub

'WriteToLog "     ", "Process S3Egg1 " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMinV_S3EggHead1)
  Dim bValidHit
  Dim idx
  Dim i
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bIsGadget
  Dim bIsTV
  Dim Screen
  Dim bIsJokerArrow
  Dim CurProgress
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False
  bIsTV=False

  if light.name = "lGadgetG1" or light.name = "lGadgetA" or light.name = "lGadgetD" or light.name = "lGadgetG2" or light.name = "lGadgetE" or light.name = "lGadgetT" then
    bIsGadget=True
  End if
  if light.name = "lTV1" or light.name = "lTV1" or light.name = "lTV2" then
    bIsTV=True
  End If

  if bIsJokerArrow or bIsTV or bIsGadget then SetDebounce kMinV_S3EggHead1, light.name

  select case light.name
    case "swBatmobile","lArrowJoker", "lBatPhone", "swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
    case "swGeneral":     ' Pressed switch, update jackpot
      if PlayerState(CurrentPlayer).TProgress(kMinV_S3EggHead1)<=4 Then
        if getQueueTimeV(kMinV_S3EggHead1) <=0 then         ' Nothing queued up means we are on the wait screen
          Screen = PlayerState(CurrentPlayer).getPupScreen(kMinV_S3EggHead1)
          PuPlayer.LabelSet Screen,"GeneralBottom1", "Jackpot Is Lit For "& FormatScore(PlayerState(CurrentPlayer).Jackpot(kMinV_S3EggHead1)), 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':4}"
        End if
      End if
  End Select

  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kMinV_S3EggHead1, idx)=2 then    ' No progress on this one yet
      PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx   ' One of 3 random sounds
      PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead1, idx, "yellow", 0

      if PlayerState(CurrentPlayer).TProgress(kMinV_S3EggHead1)<4 Then
        PlayerState(CurrentPlayer).Villains(kMinV_S3EggHead1).JackpotBase = PlayerState(CurrentPlayer).Villains(kMinV_S3EggHead1).JackpotBase + 25000
        PlayerState(CurrentPlayer).AddProgressScore kMinV_S3EggHead1, PlayerState(CurrentPlayer).Jackpot(kMinV_S3EggHead1)

        if  PlayerState(CurrentPlayer).TProgress(kMinV_S3EggHead1)=4 then
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead1, kLightJokerArrow, "yellow", 2
        End if
      else
        SceneMinorEnd True
      End if
    End if
  End if

End Sub



Sub ProgressS3Egg2(light)
  if PlayerState(CurrentPlayer).isActive(kMinV_S3EggHead2)  = False then Exit Sub
  if DoDebounce(kMinV_S3EggHead2, light.name) then WriteToLog "     ", "Process S3Egg2 Debounce Skip":exit sub

'WriteToLog "     ", "Process S3Egg2 " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMinV_S3EggHead2)
  Dim bValidHit
  Dim idx
  Dim i
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bIsGadget
  Dim bIsTV
  Dim Screen
  Dim bIsJokerArrow
  Dim CurProgress
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False
  bIsTV=False

  if light.name = "lGadgetG1" or light.name = "lGadgetA" or light.name = "lGadgetD" or light.name = "lGadgetG2" or light.name = "lGadgetE" or light.name = "lGadgetT" then
    bIsGadget=True
  End if
  if light.name = "lTV1" or light.name = "lTV1" or light.name = "lTV2" then
    bIsTV=True
  End If

  if bIsJokerArrow or bIsTV or bIsGadget then SetDebounce kMinV_S3EggHead2, light.name

  select case light.name
    case "swBatmobile","lArrowJoker", "lBatPhone", "swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
  End Select

  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kMinV_S3EggHead2, idx)=2 then    ' No progress on this one yet
      PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx   ' One of 3 random sounds

      if PlayerState(CurrentPlayer).TProgress(kMinV_S3EggHead2)=1 then
        PlayerState(CurrentPlayer).Villains(kMinV_S3EggHead2).JackpotBase = PlayerState(CurrentPlayer).Villains(kMinV_S3EggHead2).JackpotBase + 25000
        PlayerState(CurrentPlayer).AddProgressScore kMinV_S3EggHead2, PlayerState(CurrentPlayer).Jackpot(kMinV_S3EggHead2)
        AddScoreMode kMinV_S3EggHead2, PlayerState(CurrentPlayer).Jackpot(kMinV_S3EggHead2)

        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightRiddlerArrow1, "yellow", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightRiddlerArrow2, "yellow", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightCatArrow1, "yellow", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightCatArrow2, "yellow", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightJokerArrow, "yellow", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightPengArrow, "yellow", 2

      elseif PlayerState(CurrentPlayer).TProgress(kMinV_S3EggHead2)<=3 then

        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightRiddlerArrow1, "yellow", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightRiddlerArrow2, "yellow", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightCatArrow1, "yellow", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightCatArrow2, "yellow", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightJokerArrow, "yellow", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightPengArrow, "yellow", 2

        if idx = kLightRiddlerArrow1 then   ' Progress Next Wave
          PlayerState(CurrentPlayer).SetProgress(kMinV_S3EggHead2)=3
          PlayerState(CurrentPlayer).Villains(kMinV_S3EggHead2).JackpotBase = PlayerState(CurrentPlayer).Villains(kMinV_S3EggHead2).JackpotBase + 25000
        else
          PlayerState(CurrentPlayer).SetProgress(kMinV_S3EggHead2)=2
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, idx, "yellow", 0
        End if
        PlayerState(CurrentPlayer).AddProgressScore kMinV_S3EggHead2, PlayerState(CurrentPlayer).Jackpot(kMinV_S3EggHead2)
        AddScoreMode kMinV_S3EggHead2, PlayerState(CurrentPlayer).Jackpot(kMinV_S3EggHead2)

      elseif PlayerState(CurrentPlayer).TProgress(kMinV_S3EggHead2)<=5 then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightRiddlerArrow1, "yellow", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightRiddlerArrow2, "yellow", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightCatArrow1, "yellow", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightCatArrow2, "yellow", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightJokerArrow, "yellow", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightPengArrow, "yellow", 2

        if idx = kLightRiddlerArrow1 then   ' Progress Next Wave
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightRiddlerArrow1, "yellow", 0
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightRiddlerArrow2, "yellow", 0
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightCatArrow1, "yellow", 0
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightCatArrow2, "yellow", 0
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightJokerArrow, "yellow", 2
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, kLightPengArrow, "yellow", 0

          PlayerState(CurrentPlayer).SetProgress(kMinV_S3EggHead2)=5
          PlayerState(CurrentPlayer).Villains(kMinV_S3EggHead2).JackpotBase = PlayerState(CurrentPlayer).Villains(kMinV_S3EggHead2).JackpotBase + 25000
        else
          PlayerState(CurrentPlayer).SetProgress(kMinV_S3EggHead2)=4
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S3EggHead2, idx, "yellow", 0
        End if
        PlayerState(CurrentPlayer).AddProgressScore kMinV_S3EggHead2, PlayerState(CurrentPlayer).Jackpot(kMinV_S3EggHead2)
        AddScoreMode kMinV_S3EggHead2, PlayerState(CurrentPlayer).Jackpot(kMinV_S3EggHead2)


      elseif PlayerState(CurrentPlayer).TProgress(kMinV_S3EggHead2)=6 Then
        PlayerState(CurrentPlayer).Villains(kMinV_S3EggHead2).JackpotBase = PlayerState(CurrentPlayer).Villains(kMinV_S3EggHead2).JackpotBase + 25000
        PlayerState(CurrentPlayer).AddProgressScore kMinV_S3EggHead2, PlayerState(CurrentPlayer).Jackpot(kMinV_S3EggHead2)

        SceneMinorEnd True
      End if
    End if
  End if

End Sub


Sub ProgressS3Shame(light)
  if PlayerState(CurrentPlayer).isActive(kMinV_S3Shame)  = False then Exit Sub
  if DoDebounce(kMinV_S3Shame, light.name) then WriteToLog "     ", "Process S3Shame Debounce Skip":exit sub

'WriteToLog "     ", "Process S3Shame " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMinV_S3Shame)
  Dim bValidHit
  Dim idx
  Dim i
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bIsGadget
  Dim bIsBumper
  Dim bIsTV
  Dim bIsJokerArrow
  Dim CurProgress
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False
  bIsTV=False

  if light.name = "lGadgetG1" or light.name = "lGadgetA" or light.name = "lGadgetD" or light.name = "lGadgetG2" or light.name = "lGadgetE" or light.name = "lGadgetT" then
    bIsGadget=True
  End if
  if light.name = "lTV1" or light.name = "lTV1" or light.name = "lTV2" then
    bIsTV=True
  End If
  if light.name ="Bumper001" or light.name="Bumper002" or light.name="Bumper003" then
    bIsBumper=True
  End if

  if bIsJokerArrow or bIsTV or bIsGadget then SetDebounce kMinV_S3Shame, light.name

  select case light.name
    case "swBatmobile","lArrowJoker", "lBatPhone", "swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
  End Select

  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kMinV_S3Shame, idx)=2 then
      PlaySoundVol "sfx-Freeze-hit1", VolSfx

      if PlayerState(CurrentPlayer).TProgress(kMinV_S3Shame) <= 4 then

        PlayerState(CurrentPlayer).AddProgressScore kMinV_S3Shame, PlayerState(CurrentPlayer).Jackpot(kMinV_S3Shame)
        AddScoreMode kMinV_S3Shame, PlayerState(CurrentPlayer).Jackpot(kMinV_S3Shame)

        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightRiddlerArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightRiddlerArrow2, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightCatArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightCatArrow2, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightJokerArrow, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightPengArrow, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, idx, "blue", 0

        if PlayerState(CurrentPlayer).TProgress(kMinV_S3Shame) = 5 then
          ' Clear all
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightRiddlerArrow1, "blue", 0
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightRiddlerArrow2, "blue", 0
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightCatArrow1, "blue", 0
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightCatArrow2, "blue", 0
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightJokerArrow, "blue", 0
          PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightPengArrow, "blue", 0

          rndIdx = INT(RND*6)       ' Random pick 2 of the 6
          rndIdx2 = INT(Rnd*6)
          while rndIdx = rndIdx2
            rndIdx2=Int(Rnd*6)
          wend
          if rndIdx=0 or rndIdx2=0 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightRiddlerArrow1, "blue", 2
          if rndIdx=1 or rndIdx2=1 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightRiddlerArrow2, "blue", 2
          if rndIdx=2 or rndIdx2=2 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightCatArrow1, "blue", 2
          if rndIdx=3 or rndIdx2=3 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightCatArrow2, "blue", 2
          if rndIdx=4 or rndIdx2=4 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightJokerArrow, "blue", 2
          if rndIdx=5 or rndIdx2=5 then PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, kLightPengArrow, "blue", 2

        End if

      else
        bSceneShameS2Wait2ShowScore=True
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, idx, "blue", 0
        PlayerState(CurrentPlayer).AddProgressScore kMinV_S3Shame, PlayerState(CurrentPlayer).Jackpot(kMinV_S3Shame)

        ' Find a light that is not lit and light it
        do
          rndIdx=Int(Rnd*6)
          select case rndIdx
            case 0: rndIdx=kLightRiddlerArrow1
            case 1: rndIdx=kLightRiddlerArrow2
            case 2: rndIdx=kLightCatArrow1
            case 3: rndIdx=kLightCatArrow2
            case 4: rndIdx=kLightJokerArrow
            case 5: rndIdx=kLightPengArrow
          End Select
        loop while PlayerState(CurrentPlayer).LightState(kMinV_S3Shame, rndIdx)<>0
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3Shame, rndIdx, "blue", 2

        if PlayerState(CurrentPlayer).TProgress(kMinV_S3Shame)>=10 then   ' Loop forever
          PlayerState(CurrentPlayer).SetProgress(kMinV_S3Shame)=9
        End if

      End if


    End if
  End if

End Sub



Sub ProgressS3Tut2(light)
  if PlayerState(CurrentPlayer).isActive(kMinV_S3KingTut2)  = False then Exit Sub
  if DoDebounce(kMinV_S3KingTut2, light.name) then WriteToLog "     ", "Process S3Tut2 Debounce Skip":exit sub

'WriteToLog "     ", "Process S3Tut2 " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kMinV_S3KingTut2)
  Dim bValidHit
  Dim idx
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bIsGadget
  Dim bIsJokerArrow
  Dim CurProgress
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False

  if bIsJokerArrow then SetDebounce kMinV_S3KingTut2, light.name

  select case light.name
    case "swBatmobile","lArrowJoker", "lBatPhone", "swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
  End Select

  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kMinV_S3KingTut2, idx)=2 then    ' No progress on this one yet
      PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx   ' One of 3 random sounds

      if  PlayerState(CurrentPlayer).TProgress(kMinV_S3KingTut2)=1 Then

        PlayerState(CurrentPlayer).AddJackpot2 kMinV_S3KingTut2, -1   ' Increase Jackpot By JackpotBase
        PlayerState(CurrentPlayer).AddProgressScore kMinV_S3KingTut2, PlayerState(CurrentPlayer).Jackpot(kMinV_S3KingTut2)

        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut2, kLightRiddlerArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut2, kLightRiddlerArrow2, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut2, kLightJokerArrow, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut2, kLightPengArrow, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut2, kLightCatArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut2, kLightCatArrow2, "blue", 2

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S3KingTut2)<=7 Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut2, idx, "blue", 0

        if  PlayerState(CurrentPlayer).TProgress(kMinV_S3KingTut2)=7 Then
          PlayerState(CurrentPlayer).AddJackpot2 kMinV_S3KingTut2, -1   ' Increase Jackpot By JackpotBase

          PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut2, kLightJokerArrow, "blue", 2

        End if
        PlayerState(CurrentPlayer).AddProgressScore kMinV_S3KingTut2, PlayerState(CurrentPlayer).Jackpot(kMinV_S3KingTut2)

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S3KingTut2)=8 Then
        PlayerState(CurrentPlayer).AddProgressScore kMinV_S3KingTut2, PlayerState(CurrentPlayer).Jackpot(kMinV_S3KingTut2)

      elseif  PlayerState(CurrentPlayer).TProgress(kMinV_S3KingTut2)=9  Then
        PlayerState(CurrentPlayer).SSetLightColor kMinV_S3KingTut2, idx, "blue", 0
        SceneMinorEnd True
      End if
    End if
  End if

End Sub


'******************************************************   MINOR villainS  END **************************************************************

'******************************************************   WIZARD/Other MODES  **************************************************************
Sub ProgressVMB(light)
  if PlayerState(CurrentPlayer).isActive(kWiz_VillainMB)  = False then Exit Sub
  if DoDebounce(kWiz_VillainMB, light.name) then WriteToLog "     ", "Process VMB Debounce Skip":exit sub

WriteToLog "     ", "Process VMB " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kWiz_VillainMB) & " Max:" & PlayerState(CurrentPlayer).ProgressVMBMax
  Dim bValidHit
  Dim idx
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bIsGadget
  Dim bIsJokerArrow
  Dim CurProgress
  Dim curScore
  Dim ImageIdx
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False

  if bIsJokerArrow then SetDebounce kWiz_VillainMB, light.name

  select case light.name
    case "swGeneral":
        PlaySoundVol "sfx-bumper" & INT(RND*10)+1, VolDef         ' Play random punch sounds
    case "swBatcave":
      if bFlash1Enabled then
        bFlash1Enabled=False
        DOF 128, DOFOff 'Beacon Off
        VPMTimer.AddTimer 1500, "TurnTable_Goto(kTT_TV) '"          ' Give some time for the ball to get out before we rotate
        PlayerState(CurrentPlayer).SetProgress(kWiz_VillainMB) = 1       ' Super JP

        curScore=GetBonusTotal(kWiz_VillainMB)+PlayerState(CurrentPlayer).Jackpot(kWiz_VillainMB)   ' Sum + JackpotBase
        ImageGrowShow "VMB-SJ.png", False, 200, FormatScore(curScore*VMBMultiplier)   ' TBD: Not sure what this calculation is
        AddScoreMode kWiz_VillainMB, curScore*VMBMultiplier
        PlaySoundVol "b66-holy-super-jackpot5", VolDef
        DOF 622, DOFPulse 'SUPER JACKPOT
        PlayerState(CurrentPlayer).Villains(kWiz_VillainMB).JackpotValue=PlayerState(CurrentPlayer).Villains(kWiz_VillainMB).JackpotValue+250000    ' Add 250k each time around
        ClearBonusTotal(kWiz_VillainMB)                               ' Reset the total
        PlayerState(CurrentPlayer).ProgressVMBMax=PlayerState(CurrentPlayer).ProgressVMBMax+2   ' Make it harder each time
      else
        idx=kLightJokerArrow
      End if
    case "swBatmobile","lBatPhone","lArrowJoker": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
    case "cTT_TV":                  ' Turned to Batcave.  See if we add an extra ball
      if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2Shame) or PlayerState(CurrentPlayer).isAwardActive(kMinV_S3Shame) Then  ' Extra ball
        bAutoPlunger = True   ' Ensure this auto plunges because there could be no balls on the PF
        AddMultiball PlayerState(CurrentPlayer).ShameCompletions
        EnableBallSaver BallSaverTime
      End if
  End Select


  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kWiz_VillainMB, idx)=2 then    ' No progress on this one yet
      PlaySoundVol "sfx-VMB" & INT(RND*3)+1, VolSfx         ' One of 3 random sounds
      curScore = BonusAddMode(kWiz_VillainMB, -1, False)

      'PlayerState(CurrentPlayer).AddProgress kWiz_VillainMB
      PlayerState(CurrentPlayer).SetProgress(kWiz_VillainMB)=PlayerState(CurrentPlayer).TProgress(kWiz_VillainMB)+1

      ImageIdx="VMB" & INT(RND*11)+1
      ImageGrowShow ImageIdx &".png", False, 200, FormatScore(curScore)
      'ImageGrowShow "VMB" & INT(RND*11)+1 &".png", False, 200, FormatScore(curScore)

      if ImageIdx = "VMB1" then DOF 611, DOFPulse 'CRUNCH
      if ImageIdx = "VMB2" then DOF 612, DOFPulse 'JACKPOT
      if ImageIdx = "VMB3" then DOF 613, DOFPulse 'OUCH
      if ImageIdx = "VMB4" then DOF 614, DOFPulse 'SOCK
      if ImageIdx = "VMB5" then DOF 615, DOFPulse 'THWACK
      if ImageIdx = "VMB6" then DOF 616, DOFPulse 'ZOK
      if ImageIdx = "VMB7" then DOF 617, DOFPulse 'CRASH
      if ImageIdx = "VMB8" then DOF 618, DOFPulse 'KAPOW
      if ImageIdx = "VMB9" then DOF 619, DOFPulse 'KLONK
      if ImageIdx = "VMB10" then DOF 620, DOFPulse  'POWIE
      if ImageIdx = "VMB11" then DOF 621, DOFPulse  'POW

      RotatingPFATV.UserValue="Jackpot1"
      tmrTVScreen.Interval=0
      tmrTVScreen.Uservalue=20
      tmrTVScreen.Enabled=True

      if PlayerState(CurrentPlayer).TProgress(kWiz_VillainMB) >= PlayerState(CurrentPlayer).ProgressVMBMax then ' Super JP
        PlayerState(CurrentPlayer).SetProgress(kWiz_VillainMB)=PlayerState(CurrentPlayer).ProgressVMBMax
        if bFlash1Enabled = False and CurMechPos<>kTT_Batcave then
          TurnTable_Goto(kTT_Batcave)
          bFlash1Enabled=True
          DOF 128, DOFOn  'Beacon On
        End if
      End if
    End if
  End if

End Sub



Sub ProgressBatTurn(light)
  if PlayerState(CurrentPlayer).isEnabled(kWiz_BatTurn) = False then Exit Sub
  if DoDebounce(kWiz_BatTurn, light.name) then WriteToLog "     ", "Process BatTurn Debounce Skip":exit sub
  if bGameInPlay = False then exit sub

'WriteToLog "     ", "Process BatTurn " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)
  Dim bValidHit
  Dim idx
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bIsGadget
  Dim bIsJokerArrow
  Dim CurProgress
  Dim curScore
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False

  if bIsJokerArrow then SetDebounce kWiz_BatTurn, light.name

  select case light.name
    case "lArrowJoker":idx=kLightJokerArrow
    case "swBatmobile":
        if PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)<20 then
          PlayerState(CurrentPlayer).AddProgressScore2 kWiz_BatTurn, -1, False    ' Add progress but dont clear queue

          ' Light Joker for final before mode start
          if PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)=18 then
            bFlash1Enabled=True
            DOF 128, DOFOn  'Beacon On
          elseif PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)=20 then
            bFlash1Enabled=True
            DOF 128, DOFOn  'Beacon On
            PlayerState(CurrentPlayer).setActive(kWiz_BatTurn)=True                 ' Must be active to set lights for mode
            PlayerState(CurrentPlayer).SSetLightColor kWiz_BatTurn, kLightJokerArrow, "blue", 2
            Exit sub
          End if

        elseif PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)>20 then
          idx=kLightJokerArrow
        End if

    case "swBatmobileRotate":
        if PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)<=20 then
          BatTurnProgress False               ' Just update the counter
'       else
'         idx=kLightJokerArrow
        End if

    case "lBatPhone": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
  End Select

  if PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn)=20 then
    if light.name="swBatcave"then
      bFlash1Enabled=False
      DOF 128, DOFOff 'Beacon Off
      StartBatTurn
    end if

  Elseif idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kWiz_BatTurn, idx)=2 then    ' No progress on this one yet
      PlaySoundVol "sfx-batturn1", VolSfx         ' One of 3 random sounds

      if tmrHurryUp2.Enabled then   ' End the hurryup and grab the value
        EndHurryUp2 True
        PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).JackpotBase=tmrHurryUp2.UserValue
      End if

      PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).JackpotValue=PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).JackpotValue+1   ' Use this to track hits
      PlayerState(CurrentPlayer).SSetLightColor kWiz_BatTurn, idx, "blue", 0
      PlayerState(CurrentPlayer).AddProgressScore  kWiz_BatTurn, PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).JackpotBase
      AddScoreMode kWiz_BatTurn, PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).JackpotBase

      if PlayerState(CurrentPlayer).TProgress(kWiz_BatTurn) >= 27 then  ' Start again   '
        PlayerState(CurrentPlayer).SetProgress(kWiz_BatTurn)=21

        PlayerState(CurrentPlayer).SSetLightColor kWiz_BatTurn, kLightRiddlerArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kWiz_BatTurn, kLightRiddlerArrow2, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kWiz_BatTurn, kLightJokerArrow, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kWiz_BatTurn, kLightPengArrow, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kWiz_BatTurn, kLightCatArrow1, "blue", 2
        PlayerState(CurrentPlayer).SSetLightColor kWiz_BatTurn, kLightCatArrow2, "blue", 2

      End if
    End if

  End if
End Sub


Sub ProgressVESC(light)
  if PlayerState(CurrentPlayer).isActive(kWiz_VillainEscape) = False then Exit Sub
  if DoDebounce(kWiz_VillainEscape, light.name) then WriteToLog "     ", "Process VESC Debounce Skip":exit sub

'WriteToLog "     ", "Process VESC " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kWiz_VillainEscape)
  Dim bValidHit
  Dim idx
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bIsGadget
  Dim bIsJokerArrow
  Dim CurProgress
  Dim curScore
  Dim Screen
  Dim imageName
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False

  if bIsJokerArrow then SetDebounce kWiz_VillainEscape, light.name

  select case light.name
    case "swGeneral":
      if PlayerState(CurrentPlayer).TProgress(kWiz_VillainEscape) <= 2 then
        'PlayerState(CurrentPlayer).AddProgress kWiz_VillainEscape
        'PlayerState(CurrentPlayer).SetProgress(kWiz_VillainEscape)=1 ' just loop

        PlaySoundVol "sfx-glass" & INT(RND*5)+1, VolSfx

        screen = PlayerState(CurrentPlayer).getPupScreen(kWiz_VillainEscape)
        PlayerState(CurrentPlayer).AddJackpot2 kWiz_VillainEscape, -1   ' Increase JackpotValue By JackpotBase
        AddScoreMode kWiz_VillainEscape, PlayerState(CurrentPlayer).Jackpot(kWiz_VillainEscape)

        PuPlayer.LabelSet screen,"GeneralBottom2","Villain Value="&FormatScore(PlayerState(CurrentPlayer).Jackpot(kWiz_VillainEscape)), 1, "{'mt':2,'size':6}"
      End if
    case "lCrane0":
      SetDebounce kWiz_VillainEscape, light.name
      if PlayerState(CurrentPlayer).TProgress(kWiz_VillainEscape)>=3 then
        if UpdateCrane.Enabled=False  and CraneIdx<>-1  then    ' Crane isn't moving and not parked
          Select Case CraneIdx
            case 0:
              lCrane1.state = 1
            case 1:
              lCrane2.state = 1
            case 2:
              lCrane3.state = 1
            case 3:
              lCrane4.state = 1
            case 4:
              lCrane5.state = 1
          End Select

          ' Animate score and show on TV
          curScore=PlayerState(CurrentPlayer).Jackpot(kWiz_VillainEscape)
          AddScoreMode kWiz_VillainEscape,  curScore
          imageName="VESC" & INT(RND*4)+1
          ImageGrowShow imageName &".png", False, 200, FormatScore(curScore)
          RotatingPFATV.UserValue=imageName
          tmrTVScreen.Interval=0
          tmrTVScreen.Uservalue=20
          tmrTVScreen.Enabled=True

          if imageName = "VESC1" then DOF 601, DOFPulse 'EEEYOW
          if imageName = "VESC2" then DOF 602, DOFPulse 'KRUNCH
          if imageName = "VESC3" then DOF 603, DOFPulse 'POWIE
          if imageName = "VESC4" then DOF 604, DOFPulse 'THWACK

          PlaySoundVol "sfx-glass" & INT(RND*5)+1, VolSfx

          if lCrane1.state<>1 or lCrane2.state<>1 or lCrane3.state<>1 or lCrane4.state<>1 or lCrane5.state<>1 then
            tmrCrane.Enabled = False
            StartCrane(False)
          else
            PlayerState(CurrentPlayer).SSetLightColor kWiz_VillainEscape, kLightPengArrow, "purple", 2
            StopCrane()
          End if
        End If
      End if
    case "lArrowJoker":
      'idx=kLightJokerArrow

      if PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightJokerJ)=2 then idx=kLightJokerJ
      if PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightJokerO)=2 then idx=kLightJokerO
      if PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightJokerK)=2 then idx=kLightJokerK
      if PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightJokerE)=2 then idx=kLightJokerE
      if PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightJokerR)=2 then idx=kLightJokerR
'   case "swBatmobile","lBatPhone": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":
      if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kWiz_VillainEscape) and PlayerState(CurrentPlayer).TProgress(kWiz_VillainEscape) <= 2 then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx

      if PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightCat3)=2 then idx=kLightCat3
      if PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightCat2)=2 then idx=kLightCat2
      if PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightCat1)=2 then idx=kLightCat1
    case "lArrowCat2":
      if sSwapPos=PlayerState(CurrentPlayer).getPupScreen(kWiz_VillainEscape) and PlayerState(CurrentPlayer).TProgress(kWiz_VillainEscape) <= 2 then PlaySoundVol "sfx-cat-hit" & INT(RND*3)+1, VolSfx

      if PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightCat6)=2 then idx=kLightCat6
      if PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightCat5)=2 then idx=kLightCat5
      if PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightCat4)=2 then idx=kLightCat4
    case "lArrowPenguin": idx=kLightPengArrow
  End Select


  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, idx)=2 then    ' No progress on this one yet
      PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, idx)=1

      'PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx          ' One of 3 random sounds
      PlaySoundVol "sfx-glass" & INT(RND*5)+1, VolSfx

      curScore=PlayerState(CurrentPlayer).Jackpot(kWiz_VillainEscape)
      AddScoreMode kWiz_VillainEscape, curScore
      imageName="VESC" & INT(RND*4)+1
      ImageGrowShow imageName &".png", False, 200, FormatScore(curScore)
      RotatingPFATV.UserValue=imageName
      tmrTVScreen.Interval=0
      tmrTVScreen.Uservalue=20
      tmrTVScreen.Enabled=True

      if imageName = "VESC1" then DOF 601, DOFPulse 'EEEYOW
      if imageName = "VESC2" then DOF 602, DOFPulse 'KRUNCH
      if imageName = "VESC3" then DOF 603, DOFPulse 'POWIE
      if imageName = "VESC4" then DOF 604, DOFPulse 'THWACK

      if lPeng.state=0 and _
        PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightPengArrow)=1 then

        SetLightColor lPeng, "", 1  ' Mark it as done
      End If


      ' Handle Catwoman Lights
      select case idx
        case kLightCat1:
          PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightCat2)=2
        case kLightCat2:
          PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightCat3)=2
        case kLightCat4:
          PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightCat5)=2
        case kLightCat5:
          PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightCat6)=2
      End Select

      ' Handle Joker Lights
      select case idx
        case kLightJokerJ:
          PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightJokerO)=2
        case kLightJokerO:
          PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightJokerK)=2
        case kLightJokerK:
          PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightJokerE)=2
        case kLightJokerE:
          PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightJokerR)=2
      End Select

      if lJoker.state=0 and _
        PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightJokerR)=1 then

        PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightJokerArrow)=1
        SetLightColor lJoker, "", 1 ' Mark it as done
        TurnTable_Goto(kTT_Batcave)
      End If

      if lRiddler.state=0 and _
         (PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightRiddlerArrow1)=1 or _
        PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightRiddlerArrow2)=1) then

        PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightRiddlerArrow1)=1
        PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightRiddlerArrow2)=1
        PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightRiddlerO1)=1
        PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightRiddlerO2)=1

        SetLightColor lRiddler, "", 1 ' Mark it as done
      End if

      if lCatwoman.state=0 and _
        PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightCat3)=1 and _
        PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightCat6)=1 Then

        PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightCatArrow1)=1
        PlayerState(CurrentPlayer).LightState(kWiz_VillainEscape, kLightCatArrow2)=1
        SetLightColor lCatwoman, "", 1  ' Mark it as done
      End if

'     if PlayerState(CurrentPlayer).TProgress(kWiz_VillainEscape) >= PlayerState(CurrentPlayer).ProgressVMBMax then ' Super JP
'       'PlayerState(CurrentPlayer).SetProgress(kWiz_VillainEscape)=PlayerState(CurrentPlayer).ProgressVMBMax
'       if bFlash1Enabled = False then
'         TurnTable_Goto(kTT_Batcave)
'         bFlash1Enabled=True
'       End if
'     End if
    End if
  End if

  if lCatwoman.state=1 and lRiddler.state=1 and lJoker.state=1 and lPeng.state=1 then ' Done, now loop
    ' Start Super Jackpot
    PuPlayer.LabelSet screen,"GeneralBottom1","Shoot Bat Signal", 1, "{'mt':2,'size':6}"
    PuPlayer.LabelSet screen,"GeneralBottom2","Super Jackpot="&FormatScore(PlayerState(CurrentPlayer).Jackpot(kWiz_VillainEscape)), 1, "{'mt':2,'size':6}"
    lBatSignal.state=2
    SetLightFlasher flshBatSignal, 2
  End if

End Sub


Sub ProgressBatusi(light)
  if PlayerState(CurrentPlayer).isActive(kWiz_Batusi) = False then Exit Sub
  if DoDebounce(kWiz_Batusi, light.name) then WriteToLog "     ", "Process Batusi Debounce Skip":exit sub

'WriteToLog "     ", "Process Batusi " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kWiz_Batusi)
  Dim bValidHit
  Dim idx
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim bIsGadget
  Dim bIsJokerArrow
  Dim CurProgress
  Dim curScore
  Dim Screen
  Dim imageName
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False

  if light.name ="Bumper001" or light.name="Bumper002" or light.name="Bumper003" then ' Bumper Hits count down to relight all shots
    BatusiPops=BatusiPops-1
    if BatusiPops<=0 then   ' Relight all shots
      PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightRiddlerArrow1, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightRiddlerArrow2, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightJokerArrow, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightPengArrow, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightCatArrow1, "blue", 2
      PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightCatArrow2, "blue", 2
      BatusiPops=BatusiPopsMax
    End if
  End if

  if bIsJokerArrow then SetDebounce kWiz_Batusi, light.name

  select case light.name
    case "lArrowJoker":idx=kLightJokerArrow
    case "swBatmobile","lBatPhone", "swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
  End Select


  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kWiz_Batusi, idx)=2 then     ' No progress on this one yet
      PlayerState(CurrentPlayer).LightState(kWiz_Batusi, idx)=0

      PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx         ' One of 3 random sounds

      curScore = PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotBase
      PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotBase=PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotBase+250000
      PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotValue=_
        PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotValue + _
        PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotBase
      AddScoreMode kWiz_Batusi, curScore
      PlayerState(CurrentPlayer).AddProgressScore kWiz_Batusi, curScore

      if PlayerState(CurrentPlayer).TProgress(kWiz_Batusi) = 2 or PlayerState(CurrentPlayer).TProgress(kWiz_Batusi) = 5 or PlayerState(CurrentPlayer).TProgress(kWiz_Batusi) = 8 then
        BatusiPopsMax=BatusiPopsMax+1
        if BatusiPopsMax>15 then BatusiPopsMax=15
      End if

      if PlayerState(CurrentPlayer).TProgress(kWiz_Batusi) = 8 then
        SetLightColor lBatSignal, "", 2
        SetLightFlasher flshBatSignal, 2

        PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightRiddlerArrow1, "blue", 0
        PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightRiddlerArrow2, "blue", 0
        PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightJokerArrow, "blue", 0
        PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightPengArrow, "blue", 0
        PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightCatArrow1, "blue", 0
        PlayerState(CurrentPlayer).SSetLightColor kWiz_Batusi, kLightCatArrow2, "blue", 0

      End if

    End if
  End if

End Sub


Sub ProgressGas(light)
  if PlayerState(CurrentPlayer).isActive(kWiz_GasAttack) = False then Exit Sub
  if DoDebounce(kWiz_GasAttack, light.name) then WriteToLog "     ", "Process GasAttack Debounce Skip":exit sub

'WriteToLog "     ", "Process GasAttack " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kWiz_GasAttack)
  Dim bValidHit
  Dim idx
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim rndIdx4
  Dim rndIdx5
  Dim rndIdx6
  Dim bIsGadget
  Dim bIsJokerArrow
  Dim CurProgress
  Dim curScore
  Dim Screen
  dim cnt
  dim jp1
  Dim imageName
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False

  if bIsJokerArrow then SetDebounce kWiz_GasAttack, light.name

  select case light.name
    case "lArrowJoker":idx=kLightJokerArrow
    case "swBatmobile","lBatPhone", "swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
  End Select

  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kWiz_GasAttack, idx)=2 then    ' No progress on this one yet

      PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx         ' One of 3 random sounds

      curScore = tmrHurryUp3.UserValue
      PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).JackpotValue=PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).JackpotValue+curScore
      AddScoreMode kWiz_GasAttack, curScore
      PlayerState(CurrentPlayer).AddProgressScore kWiz_GasAttack, curScore

      if PlayerState(CurrentPlayer).TProgress(kWiz_GasAttack) = 7 then
'WriteToLog "     ", "Start SJP"
        EndHurryUp3 True
        tmrGasAttackRoving.UserValue=2
        tmrGasAttackRoving.Interval = 3000
        tmrGasAttackRoving.Enabled = True
        PlayerState(CurrentPlayer).SSetLightColor kWiz_GasAttack, kLightJokerArrow, "yellow", 2
        TurnTable_Goto(kTT_Batcave)
        bFlash1Enabled=True
        DOF 128, DOFOn  'Beacon On
      elseif PlayerState(CurrentPlayer).TProgress(kWiz_GasAttack) = 8 then
'WriteToLog "     ", "SJP Complete"
        tmrGasAttackRoving.Enabled = False
        PlayerState(CurrentPlayer).LightState(kWiz_GasAttack, idx)=0
        TurnTable_Goto(kTT_TV)
        bFlash1Enabled=False
        DOF 128, DOFOff 'Beacon Off
        PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).LoopCnt=PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).LoopCnt+1

        PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).JackpotBase = 5000000 + (PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).LoopCnt*250000)
        PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).JackpotValue = 1000000 + (PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).LoopCnt*250000)
        if PlayerState(CurrentPlayer).Villains(kWiz_Batusi).bPlayed then  ' Extra 2.5M
          PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotBase=PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotBase+2500000
        End if
        if PlayerState(CurrentPlayer).Villains(kWiz_Holy).bPlayed then    ' Extra 2.5M
          PlayerState(CurrentPlayer).Villains(kWiz_Holy).JackpotBase=PlayerState(CurrentPlayer).Villains(kWiz_Holy).JackpotBase+2500000
        End if
        PlayerState(CurrentPlayer).SSetLightColor kWiz_GasAttack, kLightJokerArrow, "pink", 2

        if (7 - (PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).LoopCnt+5) < 1) then
          PlayerState(CurrentPlayer).SetProgress(kWiz_GasAttack) = 1
        else
          PlayerState(CurrentPlayer).SetProgress(kWiz_GasAttack) = 7 - (PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).LoopCnt+5)
        End if

        ' Queue The End Scene
        cnt=7-PlayerState(CurrentPlayer).TProgress(kWiz_GasAttack)
        jp1=PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).JackpotValue
        QueueSceneV kWiz_GasAttack, "SceneGeneralStart3 "&kWiz_GasAttack&", 1, 1, ""video-Holy"", ""wait1.mp4"", ""^^^^^^^4:"&cnt&" Shots To Light Super Jackpot^4:Super Jackpot="&FormatScore(jp1)&""" ", -1, 1
        QueueSceneV kWiz_GasAttack, "StartHurryUp3 kWiz_GasAttack, PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).JackpotBase ", -1, 1

      else
        ' Reset HurryUp
        PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).JackpotBase = 5000000 + (PlayerState(CurrentPlayer).Villains(kWiz_GasAttack).LoopCnt*250000)
        if PlayerState(CurrentPlayer).Villains(kWiz_Batusi).bPlayed then  ' Extra 2.5M
          PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotBase=PlayerState(CurrentPlayer).Villains(kWiz_Batusi).JackpotBase+2500000
        End if
        if PlayerState(CurrentPlayer).Villains(kWiz_Holy).bPlayed then    ' Extra 2.5M
          PlayerState(CurrentPlayer).Villains(kWiz_Holy).JackpotBase=PlayerState(CurrentPlayer).Villains(kWiz_Holy).JackpotBase+2500000
        End if
      End if

    End if
  End if

End Sub


Sub ProgressHoly(light)
  if PlayerState(CurrentPlayer).isActive(kWiz_Holy) = False then Exit Sub
  if DoDebounce(kWiz_Holy, light.name) then WriteToLog "     ", "Process Holy Debounce Skip":exit sub

'WriteToLog "     ", "Process Holy " & light.name & " Progress:" & PlayerState(CurrentPlayer).TProgress(kWiz_Holy)
  Dim bValidHit
  Dim idx
  Dim rndIdx
  Dim rndIdx2
  Dim rndIdx3
  Dim rndIdx4
  Dim rndIdx5
  Dim rndIdx6
  Dim bIsGadget
  Dim bIsJokerArrow
  Dim CurProgress
  Dim curScore
  Dim Screen
  dim cnt
  dim jp1
  Dim imageName
  bIsJokerArrow=light.name="swBatmobile" or light.name="lArrowJoker" or light.name="swBatcave"
  idx=-1
  bValidHit=False
  bIsGadget=False

  if bIsJokerArrow then SetDebounce kWiz_Holy, light.name

  select case light.name
    case "lArrowJoker":idx=kLightJokerArrow
    case "swBatmobile","lBatPhone", "swBatcave": idx=kLightJokerArrow
    case "lArrowRiddler1":idx=kLightRiddlerArrow1
    case "lArrowRiddler2":idx=kLightRiddlerArrow2
    case "lArrowCat1":idx=kLightCatArrow1
    case "lArrowCat2":idx=kLightCatArrow2
    case "lArrowPenguin": idx=kLightPengArrow
  End Select

  if idx <> -1 then
    if PlayerState(CurrentPlayer).LightState(kWiz_Holy, idx)=2 then     ' No progress on this one yet
      PlayerState(CurrentPlayer).LightState(kWiz_Holy, idx)=0

      PlaySoundVol "sfx-penguin-hit1." & INT(RND*3), VolSfx         ' One of 3 random sounds

      curScore = PlayerState(CurrentPlayer).Villains(kWiz_Holy).JackpotBase
      PlayerState(CurrentPlayer).Villains(kWiz_Holy).JackpotBase=PlayerState(CurrentPlayer).Villains(kWiz_Holy).JackpotBase+250000
      AddScoreMode kWiz_Holy, curScore
      PlayerState(CurrentPlayer).AddProgressScore kWiz_Holy, curScore

      if PlayerState(CurrentPlayer).TProgress(kWiz_Holy) = 7 then
'WriteToLog "     ", "Start SJP"
        PlayerState(CurrentPlayer).SSetLightColor kWiz_Holy, kLightJokerArrow, "blue", 2
        TurnTable_Goto(kTT_Batcave)
        bFlash1Enabled=True
        DOF 128, DOFOn  'Beacon On
      elseif PlayerState(CurrentPlayer).TProgress(kWiz_Holy) = 8 then
'WriteToLog "     ", "SJP Complete"
        TurnTable_Goto(kTT_TV)
        bFlash1Enabled=False
        DOF 128, DOFOff 'Beacon Off
        PlayerState(CurrentPlayer).Villains(kWiz_Holy).LoopCnt=PlayerState(CurrentPlayer).Villains(kWiz_Holy).LoopCnt+1

        ' Pick up to 6 random shots
        rndIdx=-1:rndIdx2=-1:rndIdx3=-1:rndIdx4=-1:rndIdx5=-1:rndIdx6=-1
        rndIdx = INT(RND*6)
        rndIdx2= INT(Rnd*6)
        while rndIdx2 = rndIdx
          rndIdx2=Int(Rnd*6)
        wend

        rndIdx3= INT(Rnd*6)
        while rndIdx3 = rndIdx2 or rndIdx3 = rndIdx
          rndIdx3=Int(Rnd*6)
        wend

        if PlayerState(CurrentPlayer).Villains(kWiz_Holy).LoopCnt >= 2 then
          rndIdx4= INT(Rnd*6)
          while rndIdx4 = rndIdx3 or rndIdx4 = rndIdx2 or rndIdx4 = rndIdx
            rndIdx4=Int(Rnd*6)
          wend
        End if
        if PlayerState(CurrentPlayer).Villains(kWiz_Holy).LoopCnt >= 3 then
          rndIdx5= INT(Rnd*6)
          while  rndIdx5 = rndIdx4 or rndIdx5 = rndIdx3 or rndIdx5 = rndIdx2 or rndIdx5 = rndIdx
            rndIdx5=Int(Rnd*6)
          wend
        End if
        if PlayerState(CurrentPlayer).Villains(kWiz_Holy).LoopCnt >= 4 then
          rndIdx6= INT(Rnd*6)
          while rndIdx6 = rndIdx5 or rndIdx6 = rndIdx4 or rndIdx6 = rndIdx3 or rndIdx6 = rndIdx2 or rndIdx6 = rndIdx
            rndIdx6=Int(Rnd*6)
          wend
        End if

        if PlayerState(CurrentPlayer).Villains(kWiz_Holy).LoopCnt < 4 then    ' Award ball save unless you get to the 6th round
          EnableBallSaver BallSaverTime*3
        End if

        if rndIdx=0 or rndIdx2=0 or rndIdx3=0 or rndIdx4=0 or rndIdx5=0 or rndIdx6=0 then PlayerState(CurrentPlayer).SSetLightColor kWiz_Holy, kLightRiddlerArrow1, "blue", 2
        if rndIdx=1 or rndIdx2=1 or rndIdx3=1 or rndIdx4=1 or rndIdx5=1 or rndIdx6=1  then PlayerState(CurrentPlayer).SSetLightColor kWiz_Holy, kLightRiddlerArrow2, "blue", 2
        if rndIdx=2 or rndIdx2=2 or rndIdx3=2 or rndIdx4=2 or rndIdx5=2 or rndIdx6=2  then PlayerState(CurrentPlayer).SSetLightColor kWiz_Holy, kLightCatArrow1, "blue", 2
        if rndIdx=3 or rndIdx2=3 or rndIdx3=3 or rndIdx4=3 or rndIdx5=3 or rndIdx6=3  then PlayerState(CurrentPlayer).SSetLightColor kWiz_Holy, kLightCatArrow2, "blue", 2
        if rndIdx=4 or rndIdx2=4 or rndIdx3=4 or rndIdx4=4 or rndIdx5=4 or rndIdx6=4  then PlayerState(CurrentPlayer).SSetLightColor kWiz_Holy, kLightJokerArrow, "blue", 2
        if rndIdx=5 or rndIdx2=5 or rndIdx3=5 or rndIdx4=5 or rndIdx5=5 or rndIdx6=5  then PlayerState(CurrentPlayer).SSetLightColor kWiz_Holy, kLightPengArrow, "blue", 2

        PlayerState(CurrentPlayer).Villains(kWiz_Holy).JackpotBase = 4000000
        if (7 - (PlayerState(CurrentPlayer).Villains(kWiz_Holy).LoopCnt +2) < 1) then
          PlayerState(CurrentPlayer).SetProgress(kWiz_Holy) = 1
        else
          PlayerState(CurrentPlayer).SetProgress(kWiz_Holy) = 7 - (PlayerState(CurrentPlayer).Villains(kWiz_Holy).LoopCnt +2)
        End if

        ' Queue The End Scene
        cnt=7-PlayerState(CurrentPlayer).TProgress(kWiz_Holy)
        jp1=PlayerState(CurrentPlayer).Villains(kWiz_Holy).JackpotBase
        QueueSceneV kWiz_Holy, "SceneGeneralStart3 "&kWiz_Holy&", 1, 1, ""video-Holy"", ""wait1.mp4"", ""^^^^^^^4:"&cnt&" Shots To Light Super Jackpot^4:Super Jackpot="&FormatScore(jp1)&""" ", -1, 1

      End if

    End if
  End if

End Sub



'******************************************************   WIZARD/Other  END **************************************************************


Sub tmrTVScreen_Timer()
  Dim idx
  tmrTVScreen.Enabled=False
  tmrTVScreen.Interval=100
  tmrTVScreen.Uservalue=tmrTVScreen.Uservalue-1
  idx=INT(RND*2)+1
  if tmrTVScreen.Uservalue<>0 then
    RotatingPFATV.Image = RotatingPFATV.UserValue & "-" & idx
    tmrTVScreen.Enabled=True
  Else
    RotatingPFATV.Image = "BatLogo3"
  End if
End Sub

'ImageGrowShow "  ", True, 5000
'ImageGrowShow "VMB1.png", False, 1000, ""
'ImageGrowShow "VMB.gif", True, 1000, ""

Const ImageGrowShowSpeed = 4
dim ImageGrowShow_Image
Dim ImageGrowShow_Width
Dim ImageGrowShow_Max
Dim ImageGrowShow_Anigif
Dim ImageGrowShow_Message
Dim ImageGrowShow_MessageSize
Sub ImageGrowShow(ImageName, bAniGif, mSec, Message)
  if tmrImageGrow.Enabled then exit sub ' Just skip if one is already running (Shoudl we cancel intstead?)
  If bAniGif then

'   playclear pOverVid
'   PuPlayer.LabelShowPage pOverVid, 1,0,""
'   PuPlayer.SendMsg "{ ""mt"":301, ""SN"": "&pOverVid&", ""FN"":20, ""AM"": 1, ""AV"": 170 }"
'   playmedia "VMB.mp4", "PupVideos", pOverVid, "", -1, "", 1, 1
'   exit sub

    ImageName = PupAniFolder & "\\" & ImageName
    ImageGrowShow_Anigif=", 'anigif':100"
    ImageGrowShow_Width=95
    ImageGrowShow_Max=115
  else
    ImageName = "PuPOverlays\\" & ImageName
    ImageGrowShow_Anigif=""
    ImageGrowShow_Width=25
    ImageGrowShow_Max=90
  End if
  tmrImageGrow.UserValue=0
  ImageGrowShow_MessageSize=2
  ImageGrowShow_Message=Message
  ImageGrowShow_Image=ImageName
  puPlayer.LabelSet pBackglass,"ImageGrow", ImageGrowShow_Image , 1,"{'mt':2,'color':111111"&ImageGrowShow_Anigif&", 'width':"&ImageGrowShow_Width&", 'height':"& ImageGrowShow_Width*0.75 &",'yalign':1,'xalign':1,'ypos':0,'xpos':0}"
  puPlayer.LabelSet pBackglass,"ImageGrowTxt", "" , 1,"{'mt':2,'size':"& ImageGrowShow_MessageSize &",'color':"&pupWhite&",'yalign':1,'xalign':1,'ypos':0,'xpos':0}"
  tmrImageGrow.Interval = mSec/((ImageGrowShow_Max-ImageGrowShow_Width)/ImageGrowShowSpeed)
  tmrImageGrow.Enabled = True
'WriteToLog "     ", "ImageGrowShow:" & tmrImageGrow.Interval
End Sub

Sub ImageGrowCancel()
  puPlayer.LabelSet pBackglass,"ImageGrow", "PuPOverlays\\clear.png" ,0,"{'mt':2,'color':111111, 'anigif':100, 'width':100, 'height':100,'yalign':0,'xalign':0,'ypos':0,'xpos':0}"
  puPlayer.LabelSet pBackglass,"ImageGrowTxt", "" , 1,"{'mt':2,'size':2,'color':111111,'yalign':1,'xalign':1,'ypos':0,'xpos':0}"
  tmrImageGrow.Enabled = False
End Sub

Sub tmrImageGrow_Timer()
'WriteToLog "     ", "ImageGrowShow:" & tmrImageGrow.UserValue
  if tmrImageGrow.UserValue=0 then ' Grow Image
    ImageGrowShow_Width=ImageGrowShow_Width+ImageGrowShowSpeed
    if ImageGrowShow_Anigif = "" then
      puPlayer.LabelSet pBackglass,"ImageGrow", "" , 1,"{'mt':2,'width':"&ImageGrowShow_Width&", 'height':"& ImageGrowShow_Width*0.75 &"}"
    End if
    if ImageGrowShow_Width>=ImageGrowShow_Max then
      if ImageGrowShow_Message = "" then    ' If there is a message to show then keep going otherwise stop here
        ImageGrowCancel
      else
        tmrImageGrow.UserValue=1
      End if
    End if
  Elseif tmrImageGrow.UserValue=1 Then    ' Grow Text
    ImageGrowShow_MessageSize=ImageGrowShow_MessageSize+ImageGrowShowSpeed '0.2
    puPlayer.LabelSet pBackglass,"ImageGrowTxt", ImageGrowShow_Message , 1,"{'mt':2,'size':"& ImageGrowShow_MessageSize &"}"
    if ImageGrowShow_MessageSize>=18 then
      tmrImageGrow.UserValue=2
    End if
  Else
    tmrImageGrow.Enabled=False
    tmrImageGrow.Interval=1000
    if tmrImageGrow.UserValue=2 then
      tmrImageGrow.UserValue=3
      tmrImageGrow.Enabled=True
    else
      ImageGrowCancel
    End if
  End if
End Sub

Dim bBatPoleSeqCanCancel
tmrBatPoleSeq.UserValue=0
Sub tmrBatPoleSeq_Timer()
'WriteToLog "     ", "tmrBatCave Expired"

  if tmrBatPoleSeq.Enabled and tmrBatPoleSeq.Interval = 5000 and tmrBatPoleSeq.UserValue=2 then     ' 2 Second grace period
'WriteToLog "     ", "tmrBatCave Expired - 2 second Grace"
    tmrBatPoleSeq.UserValue=2
    tmrBatPoleSeq.Interval = 2000
    tmrBatPoleSeq.Enabled = True
  else
    tmrBatPoleSeq.Enabled = False
    tmrBatPoleSeq.UserValue = 0
  End if

  PlayerState(CurrentPlayer).setActive(kBatPoleSeq)=False
  bBatPoleSeqCanCancel=False
  SetLightColor lArrowCommissG, "red", 0
  PlayerState(CurrentPlayer).SSetLightColor kBatPoleSeq, kLightPengArrow, "orange", 0
  PlayerState(CurrentPlayer).SSetLightColor kBatPoleSeq, kLightRiddlerArrow1, "orange", 0
  PlayerState(CurrentPlayer).SSetLightColorRestore kLightPengArrow
  PlayerState(CurrentPlayer).SSetLightColorRestore kLightRiddlerArrow1
End Sub


Sub CheckSkillshotProgress(light)
  dim idx
  dim season
  idx = -1
  if bSkillshotsReady(1) and light.Name = "lArrowPenguin" then    ' Penguin Skillshot
    bSkillshotsReady(1)=False
    PlayerState(CurrentPlayer).SSetLightColorRestore kLightPengArrow

    ' Increase based on the shooter lights
    PlayerState(CurrentPlayer).SkillshotsValue(1)=PlayerState(CurrentPlayer).SkillshotsValue(1) + _
      (SkillShotLaneStates(0)+SkillShotLaneStates(1)+SkillShotLaneStates(2)) * 100000

    PlaySoundVol "Sfx-SkillShot3", VolSfx
    PlaySoundVol "B66-SS" & INT(RND*6)+1, VolDef    ' Add 6 because it doesnt do the sounds every now and then

    QueueFlushS pMVideo
    QueueSceneS pMVideo, "SceneSkillshot sSwapPos, 1, "& PlayerState(CurrentPlayer).SkillshotsValue(1)&" ", 1544, 1
    QueueSceneS pMVideo, "StartLastScene ", -1, 1
    AddScore PlayerState(CurrentPlayer).SkillshotsValue(1)

    PlayerState(CurrentPlayer).SkillshotsValue(1)=PlayerState(CurrentPlayer).SkillshotsValue(1)+200000

    BonusMultiplier=BonusMultiplier+5

  elseif bSkillshotsReady(2) then     ' Super Skillshot

    select case light.name
      case "swBatmobile","lArrowJoker", "swBatcave": idx=kLightJokerArrow
      case "lArrowRiddler1":idx=kLightRiddlerArrow1
      case "lArrowRiddler2":idx=kLightRiddlerArrow2
      case "lArrowCat1":idx=kLightCatArrow1
      case "lArrowCat2":idx=kLightCatArrow2
      case "lArrowPenguin":idx = kLightPengArrow
    End Select
    if idx <> -1 then

      PlaySoundVol "Sfx-SkillShot3", VolSfx
      PlaySoundVol "B66-SS" & INT(RND*6)+1, VolDef    ' Add 6 because it doesnt do the sounds every now and then


      bDisableVisualProgress=True   ' Disable Visual progress so we dont overwrite the SSS clip by the next progress starting bat Phone
      QueueFlushS pMVideo
      QueueSceneS pMVideo, "SceneSkillshot sSwapPos, 2, "& PlayerState(CurrentPlayer).SkillshotsValue(2)&" ", 1544, 1
      QueueSceneS2 pMVideo, "bDisableVisualProgress=False:StartLastScene ", -1, 1, True
      AddScore PlayerState(CurrentPlayer).SkillshotsValue(2)

      PlayerState(CurrentPlayer).SkillshotsValue(2)=PlayerState(CurrentPlayer).SkillshotsValue(2)+100000

      Gate002.Open = False
      bSkillshotsReady(2)=False
      SuperSkillshotEnable False          ' Turn off skillshot lights

      if PlayerState(CurrentPlayer).bMajQual then
        PlayerState(CurrentPlayer).AddGadget
      Else
'WriteToLog "     ", "Super Skillshot: " & light.name & " Villain:" & idx
        select case light.name
          case "swBatmobile","lArrowJoker", "swBatcave":
            season = PlayerState(CurrentPlayer).SeasonIdx(kMajV_Joker)
            if PlayerState(CurrentPlayer).bIsQueueQual(season) =False then
              PlayerState(CurrentPlayer).Villains(season).bQual=1
              PlayerState(CurrentPlayer).QueueQual(-1)
              PlayerState(CurrentPlayer).SetProgress(season)=4
            End if
            ClearDebounce(season)
'           ProgressJoker(lArrowJoker)    ' This is first in the list so these will automaticlly get called

          case "lArrowRiddler1", "lArrowRiddler2":
            season = PlayerState(CurrentPlayer).SeasonIdx(kMajV_Riddler)
            if PlayerState(CurrentPlayer).bIsQueueQual(season) =False then
              PlayerState(CurrentPlayer).Villains(season).bQual=1
              PlayerState(CurrentPlayer).QueueQual(-1)
              PlayerState(CurrentPlayer).SetProgress(season)=1
            End if
            ClearDebounce(season)
'           ProgressRiddler(lArrowRiddler1)

          case "lArrowCat1", "lArrowCat2":
            season = PlayerState(CurrentPlayer).SeasonIdx(kMajV_CatWoman)
            if PlayerState(CurrentPlayer).bIsQueueQual(season) =False then
              PlayerState(CurrentPlayer).Villains(season).bQual=1
              PlayerState(CurrentPlayer).QueueQual(-1)
              PlayerState(CurrentPlayer).SetProgress(season)=5
            End if
            ClearDebounce(season)
'           ProgressCatWoman(lArrowCat1)

          case "lArrowPenguin":
            season = PlayerState(CurrentPlayer).SeasonIdx(kMajV_Peng)
            if PlayerState(CurrentPlayer).bIsQueueQual(season) =False then
              PlayerState(CurrentPlayer).Villains(season).bQual=1
              PlayerState(CurrentPlayer).QueueQual(-1)
              PlayerState(CurrentPlayer).SetProgress(season)=1
            End if
            ClearDebounce(season)
'           ProgressPeng(lArrowPenguin)

        End Select
      End if
    End if
  End if
End Sub


Sub BatPoleSeqProgress(light)
  dim tmpStr
  Dim curScore
  dim idx:idx=0
  Dim bMute:bMute=0

'WriteToLog "     ", "BatCave Check Progress:" & light.name
  if light.name = "lArrowPenguin" then
'WriteToLog "     ", "tmrBatCave Light LeftOrbit tmr:" & tmrBatPoleSeq.Enabled & " val:" & tmrBatPoleSeq.UserValue
    if tmrBatPoleSeq.UserValue = 1 then
      if PlayerState(CurrentPlayer).isQual(kMajV_S1CatWoman)=2 then
        tmpStr="Catwoman"
        idx=kMajV_S1CatWoman
      elseif PlayerState(CurrentPlayer).isQual(kMajV_S2CatWoman)=2 Then
        tmpStr="Catwoman2"
        bMute=1
        idx=kMajV_S2CatWoman
      elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Joker)=2 then
        tmpStr="Joker"
        idx=kMajV_S1Joker
      elseif PlayerState(CurrentPlayer).isQual(kMajV_S2Joker)=2 then
        tmpStr="Joker2"
        idx=kMajV_S2Joker
      elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Riddler)=2 then
        tmpStr="Riddler"
        idx=kMajV_S1Riddler
      elseif PlayerState(CurrentPlayer).isQual(kMajV_S2Riddler)=2 then
        tmpStr="Riddler2"
        bMute=1
        idx=kMajV_S2Riddler
      elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Peng)=2 then
        tmpStr="Penguin"
        idx=kMajV_S1Peng
      else
        tmpStr="Penguin2"
        idx=kMajV_S2Peng
      End if

''WriteToLog "     ", "BatCave:" & idx & " " & PlayerState(CurrentPlayer).TProgress(idx) & " " & SceneMap(idx, PlayerState(CurrentPlayer).TProgress(idx), 2)
      curScore = BonusAddMode(idx, -1, False)
      QueueFlushS pMVideo
      QueueSceneS pMVideo, "SceneGeneralStart3 "&idx&", 0, "&bMute&", ""video-"&tmpStr&""", ""batpole1.mp4"", ""^^^^12:"&FormatScore(curScore)&"^^^^"" ", 1000, 1
      QueueSceneS pMVideo, "SceneGeneralStart3 "&idx&", 0, 0, """", """", ""^^^Shoot^For^BAT SIGNAL^^^"" ", 2600, 1
      QueueSceneS pMVideo, "StartLastSceneScreen pMVideo ", -1, 1   ' Force batcave to this one instead of the active sinc it can mess up other modes


      tmrBatPoleSeq.UserValue = 2
      SetLightColor lArrowCommissG, "red", 0
      PlayerState(CurrentPlayer).SSetLightColor kBatPoleSeq, kLightPengArrow, "orange", 0
      PlayerState(CurrentPlayer).SSetLightColor kBatPoleSeq, kLightRiddlerArrow1, "orange", 2
      tmrBatPoleSeq.Enabled = False
      tmrBatPoleSeq.Interval = 5000
      tmrBatPoleSeq.Enabled = True
    End If
  elseif light.name = "cTT_Batcave" then    ' Next progress can cancel
    bBatPoleSeqCanCancel=True
  End if
End Sub

Sub BatPoleSeqFinish()
  dim titleStr
  dim tmpStr
  Dim curScore
  Dim bMute:bMute=0
  dim bHas3:bHas3=True
  dim vidLen2:vidLen2=1330
  dim vidLen3:vidLen3=3000
  dim idx:idx=0
  if tmrBatPoleSeq.Enabled and tmrBatPoleSeq.UserValue = 2 then
'WriteToLog "     ", "BatPoleSeqFinished"
    if PlayerState(CurrentPlayer).isQual(kMajV_S1CatWoman)=2 then
      vidLen2=1044
      vidLen3=2948
      tmpStr="Catwoman"
      titleStr="Catwoman"
      idx=kMajV_S1CatWoman
    elseif PlayerState(CurrentPlayer).isQual(kMajV_S2CatWoman)=2 then
      vidLen2=4797
      vidLen3=3087
      bMute=1
      tmpStr="Catwoman2"
      titleStr="Catwoman"
      idx=kMajV_S2CatWoman
    elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Joker)=2 then
      vidLen3=2902
      tmpStr="Joker"
      titleStr="Joker"
      idx=kMajV_S1Joker
    elseif PlayerState(CurrentPlayer).isQual(kMajV_S2Joker)=2 then
      vidLen2=3466
      bHas3=False
      tmpStr="Joker2"
      titleStr="Joker"
      idx=kMajV_S2Joker
    elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Riddler)=2 then
      vidLen3=3866
      tmpStr="Riddler"
      titleStr="Riddler"
      idx=kMajV_S1Riddler
    elseif PlayerState(CurrentPlayer).isQual(kMajV_S2Riddler)=2 then
      vidLen2=4466
      vidLen3=3436
      bMute=1
      tmpStr="Riddler2"
      titleStr="Riddler"
      idx=kMajV_S2Riddler
    elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Peng)=2 then
      vidLen3=3640
      tmpStr="Penguin"
      titleStr="Penguin"
      idx=kMajV_S1Peng
    else
      vidLen2=4166
      bHas3=False
      tmpStr="Penguin2"
      titleStr="Penguin"
      idx=kMajV_S2Peng
    End if

    LastSwitchHit = "swLeftOrbitBatPole"    ' This allows us to overlap other shots on this same insert

    ModeMultiplier=ModeMultiplier+1
    curScore = BonusAddMode(idx, -1, False)
    QueueFlushV idx
    QueueSceneV idx, "SceneGeneralStart3 "&idx&", 0, "&bMute&", ""video-"&tmpStr&""", ""batpole2.mp4"", ""^^"&curScore&"^^Batcave Sequence Completed^"&tmpStr&" Scores "&ModeMultiplier&"X^^^"" ", vidLen2, 1
    if bHas3 then QueueSceneV idx, "SceneGeneralStart2 pMVideo, 0, "&bMute&", ""video-"&tmpStr&""", ""batpole3.mp4"", ""^^^^^"" ", vidLen3, 1

    QueueSceneV idx, "StartLastScene ", -1, 1                                 ' Play the wait sequence that was up before we did this

    tmrBatPoleSeq.Enabled = False
    tmrBatPoleSeq_Timer         ' Cleanup
  End if
End Sub


Sub StartBatPoleSeq()
'WriteToLog "     ", "tmrBatCave START"
  SetLightColor lArrowCommissG, "red", 2
  DoBatPoleSeqGordonIdx=0

  PlayerState(CurrentPlayer).setActive(kBatPoleSeq)=True
  PlayerState(CurrentPlayer).SSetLightColor kBatPoleSeq, kLightPengArrow, "orange", 2

  bBatPoleSeqCanCancel=True     ' Set to True - Looks like this was old code and really not needed since batpole is its own mode now
  tmrBatPoleSeq.UserValue = 1
  'tmrBatPoleSeq.Interval = 10000
  'tmrBatPoleSeq.Enabled = True

  ' Add progress and set the appropriate backgrop for the MajorVillain
  if PlayerState(CurrentPlayer).isQual(kMajV_S1CatWoman)=2 then
'   PlayerState(CurrentPlayer).AddProgress kMajV_S1CatWoman
    PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"catwoman.png",  1, 1

  elseif PlayerState(CurrentPlayer).isQual(kMajV_S2CatWoman)=2 then
'   PlayerState(CurrentPlayer).AddProgress kMajV_S2CatWoman
    PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"catwoman.png",  1, 1

  elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Joker)=2 then
'   PlayerState(CurrentPlayer).AddProgress kMajV_S1Joker
    PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"joker.png",  1, 1
    PlayerState(CurrentPlayer).SSetLightColor kMajV_S1Joker, kLightJokerArrow, "purple", 2

  elseif PlayerState(CurrentPlayer).isQual(kMajV_S2Joker)=2 then
'   PlayerState(CurrentPlayer).AddProgress kMajV_S2Joker
    PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"joker.png",  1, 1
    PlayerState(CurrentPlayer).SSetLightColor kMajV_S2Joker, kLightJokerArrow, "purple", 2

  elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Riddler)=2 then
'   PlayerState(CurrentPlayer).AddProgress kMajV_S1Riddler
    PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"riddler.png",  1, 1

  elseif PlayerState(CurrentPlayer).isQual(kMajV_S2Riddler)=2 then
'   PlayerState(CurrentPlayer).AddProgress kMajV_S2Riddler
    PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"riddler.png",  1, 1

  elseif PlayerState(CurrentPlayer).isQual(kMajV_S1Peng)=2 then
'   PlayerState(CurrentPlayer).AddProgress kMajV_S1Peng
    PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"penguin.png",  1, 1

  elseif PlayerState(CurrentPlayer).isQual(kMajV_S2Peng)=2 then
'   PlayerState(CurrentPlayer).AddProgress kMajV_S2Peng
    PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"penguin.png",  1, 1

  End if

  mMagnaSave.MagnetOn =False
  TurnTable_Goto(kTT_Batcave)
End Sub


'Sub SetMajorLights()   ' Reset the Major lights based on the current states
'
' ' Joker lights need to go back to pulsing or non pulsing based on the state
' if PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)=5 then
'   lJokerJ.state =0    ' Turn them off so they pulse together
'   lJokerO.state =0
'   lJokerK.state =0
'   lJokerE.state =0
'   lJokerR.state =0
'   SetSlowPulse(lJokerJ):lJokerJ.state =2    ' Dont change internal state so we can detect later (shortcut)
'   SetSlowPulse(lJokerO):lJokerO.state =2
'   SetSlowPulse(lJokerK):lJokerK.state =2
'   SetSlowPulse(lJokerE):lJokerE.state =2
'   SetSlowPulse(lJokerR):lJokerR.state =2
' else
'   SetDefPulse(lJokerJ)
'   SetDefPulse(lJokerO)
'   SetDefPulse(lJokerK)
'   SetDefPulse(lJokerE)
'   SetDefPulse(lJokerR)
' End if
'
'End Sub


Sub SetMajorQualLights(bEnable) ' Turns all MajorVillian Qual Lights on/off
Dim i
dim idx
dim seasonCat:seasonCat=PlayerState(CurrentPlayer).SeasonIdx(kMajV_CatWoman)
dim seasonJoker:seasonJoker=PlayerState(CurrentPlayer).SeasonIdx(kMajV_Joker)
dim seasonRiddler:seasonRiddler=PlayerState(CurrentPlayer).SeasonIdx(kMajV_Riddler)
dim seasonPeng:seasonPeng=PlayerState(CurrentPlayer).SeasonIdx(kMajV_Peng)

  if bEnable then

    ' Restore cat lights
    PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat1, "white", PlayerState(CurrentPlayer).save_lCatStates(0)
    PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat2, "white", PlayerState(CurrentPlayer).save_lCatStates(1)
    PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat3, "white", PlayerState(CurrentPlayer).save_lCatStates(2)
    PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat4, "white", PlayerState(CurrentPlayer).save_lCatStates(3)
    PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat5, "white", PlayerState(CurrentPlayer).save_lCatStates(4)
    PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat6, "white", PlayerState(CurrentPlayer).save_lCatStates(5)


''    Catwaman could probably be simlified
'   PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat1, "white", 0
'   PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat2, "white", 0
'   PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat3, "white", 0
'   PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat4, "white", 0
'   PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat5, "white", 0
'   PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat6, "white", 0
'
'   if PlayerState(CurrentPlayer).TProgress(seasonCat) >= 1 then PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat1, "white", 1
'   if PlayerState(CurrentPlayer).TProgress(seasonCat) >= 2 then PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat4, "white", 1
'   if PlayerState(CurrentPlayer).TProgress(seasonCat) >= 3 then PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat2, "white", 1
'   if PlayerState(CurrentPlayer).TProgress(seasonCat) >= 4 then PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat5, "white", 1
'   if PlayerState(CurrentPlayer).TProgress(seasonCat) >= 5 then PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat3, "white", 1
'   if PlayerState(CurrentPlayer).TProgress(seasonCat) >= 6 then PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat6, "white", 1
'
'   if PlayerState(CurrentPlayer).TProgress(seasonCat) = 0 then
'     PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat1, "white", 2
'     PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat4, "white", 2
'   elseif PlayerState(CurrentPlayer).TProgress(seasonCat) = 1 then
'     PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat4, "white", 2
'   elseif PlayerState(CurrentPlayer).TProgress(seasonCat) = 2 then
'     PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat2, "white", 2
'     PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat5, "white", 2
'   elseif PlayerState(CurrentPlayer).TProgress(seasonCat) = 3 then
'     PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat5, "white", 2
'   elseif PlayerState(CurrentPlayer).TProgress(seasonCat) = 4 then
'     PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat3, "white", 2
'     PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat6, "white", 2
'   elseif PlayerState(CurrentPlayer).TProgress(seasonCat) = 5 then
'     PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat6, "white", 2
'   End if


'   Handle Joker
    for i = 5 to 1 step -1
      if PlayerState(CurrentPlayer).TProgress(seasonJoker) = i then
        if kLightJokerJ+i <= kLightJokerR then PlayerState(CurrentPlayer).SSetLightColor seasonJoker, i+kLightJokerJ, "", 2
        PlayerState(CurrentPlayer).SSetLightColor seasonJoker, i+kLightJokerJ-1, "", 1
      elseif PlayerState(CurrentPlayer).TProgress(seasonJoker) >= i then
        PlayerState(CurrentPlayer).SSetLightColor seasonJoker, i+kLightJokerJ-1, "", 1
      else
        PlayerState(CurrentPlayer).SSetLightColor seasonJoker, i+kLightJokerJ-1, "", 0
      End if
    Next

    ' Joker lights need to go back to pulsing or non pulsing based on the state
    if PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)=5 then
      lJokerJ.state =0    ' Turn them off so they pulse together
      lJokerO.state =0
      lJokerK.state =0
      lJokerE.state =0
      lJokerR.state =0
      SetSlowPulse(lJokerJ):lJokerJ.state =2    ' Dont change internal state so we can detect later (shortcut)
      SetSlowPulse(lJokerO):lJokerO.state =2
      SetSlowPulse(lJokerK):lJokerK.state =2
      SetSlowPulse(lJokerE):lJokerE.state =2
      SetSlowPulse(lJokerR):lJokerR.state =2
    else
      SetDefPulse(lJokerJ)
      SetDefPulse(lJokerO)
      SetDefPulse(lJokerK)
      SetDefPulse(lJokerE)
      SetDefPulse(lJokerR)
    End if

    ' Handle Riddler
    if  PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)=1 then
      PlayerState(CurrentPlayer).SSetLightColor seasonRiddler, kLightRiddlerO1, "green", 2
      PlayerState(CurrentPlayer).SSetLightColor seasonRiddler, kLightRiddlerO2, "green", 2
    else
      PlayerState(CurrentPlayer).SSetLightColor seasonRiddler, kLightRiddlerO1, "green", 1
      PlayerState(CurrentPlayer).SSetLightColor seasonRiddler, kLightRiddlerO2, "green", 1
    End if

    ' Handle Penguin
    if  PlayerState(CurrentPlayer).TProgress(kMajV_S1Riddler)=1 then
      PlayerState(CurrentPlayer).SSetLightColor seasonPeng, kLightPengScoop, "purple", 2
    else
      PlayerState(CurrentPlayer).SSetLightColor seasonPeng, kLightPengScoop, "purple", 1
    End if

  else
    ' Save these so I can correctly restore later
    PlayerState(CurrentPlayer).save_lCatStates(0) = PlayerState(CurrentPlayer).Villains(seasonCat).lStates(kLightCat1).state
    PlayerState(CurrentPlayer).save_lCatStates(1) = PlayerState(CurrentPlayer).Villains(seasonCat).lStates(kLightCat2).state
    PlayerState(CurrentPlayer).save_lCatStates(2) = PlayerState(CurrentPlayer).Villains(seasonCat).lStates(kLightCat3).state
    PlayerState(CurrentPlayer).save_lCatStates(3) = PlayerState(CurrentPlayer).Villains(seasonCat).lStates(kLightCat4).state
    PlayerState(CurrentPlayer).save_lCatStates(4) = PlayerState(CurrentPlayer).Villains(seasonCat).lStates(kLightCat5).state
    PlayerState(CurrentPlayer).save_lCatStates(5) = PlayerState(CurrentPlayer).Villains(seasonCat).lStates(kLightCat6).state

    ' Blank them all out
    PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat1, "white", 0
    PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat2, "white", 0
    PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat3, "white", 0
    PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat4, "white", 0
    PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat5, "white", 0
    PlayerState(CurrentPlayer).SSetLightColor seasonCat, kLightCat6, "white", 0

    PlayerState(CurrentPlayer).SSetLightColor seasonJoker, kLightJokerJ, "", 0
    PlayerState(CurrentPlayer).SSetLightColor seasonJoker, kLightJokerO, "", 0
    PlayerState(CurrentPlayer).SSetLightColor seasonJoker, kLightJokerK, "", 0
    PlayerState(CurrentPlayer).SSetLightColor seasonJoker, kLightJokerE, "", 0
    PlayerState(CurrentPlayer).SSetLightColor seasonJoker, kLightJokerR, "", 0

    PlayerState(CurrentPlayer).SSetLightColor seasonRiddler, kLightRiddlerO1, "", 0
    PlayerState(CurrentPlayer).SSetLightColor seasonRiddler, kLightRiddlerO2, "", 0

    PlayerState(CurrentPlayer).SSetLightColor seasonPeng, kLightPengScoop, "", 0
  End if
  'PlayerState(CurrentPlayer).RestoreAllLights
End Sub

Sub StartLastScene()
  StartLastSceneScreen sSwapPos
End Sub

Sub StartLastSceneScreen(screen)
  Dim TmpStr
  Dim SN
  Dim i
  Dim idx
  dim bSet:bSet=False
  Dim holdMap
  Dim holdMap2

'WriteToLog "     ", "StartLastScene Screen:" & screen

  SN = PlayerState(CurrentPlayer).numScreens
  TmpStr="batsignal"

  ' Find which screen is on the current and update the backdrop to match
  for i = 0 to kMAX_MODES
    if PlayerState(CurrentPlayer).Villains(i).pupScreen <> -1 then      ' Check the real one
      If PlayerState(CurrentPlayer).getPupScreen(i) = screen and PlayerState(CurrentPlayer).isFinished(i)=False then
        idx=i
        select case i
          case kMajV_S1Joker:
            if PlayerState(CurrentPlayer).isQual(kMajV_S1Joker)>=1 then
              TmpStr="Joker"
              bSet=True
            End if
          case kMajV_S2Joker:
            if PlayerState(CurrentPlayer).isQual(kMajV_S2Joker)>=1 then
              TmpStr="Joker2"
              bSet=True
            End if
          case kMajV_S1CatWoman:
            if PlayerState(CurrentPlayer).isQual(kMajV_S1CatWoman)>=1 then
              TmpStr="Catwoman"
              bSet=True
            End if
          case kMajV_S2CatWoman:
            if PlayerState(CurrentPlayer).isQual(kMajV_S2CatWoman)>=1 then
              TmpStr="Catwoman2"
              bSet=True
            End if
          case kMajV_S1Peng:
            if PlayerState(CurrentPlayer).isQual(kMajV_S1Peng)>=1 then
              TmpStr="Penguin"
              bSet=True
            End if
          case kMajV_S2Peng:
            if PlayerState(CurrentPlayer).isQual(kMajV_S2Peng)>=1 then
              TmpStr="Penguin2"
              bSet=True
            End if
          case kMajV_S1Riddler:
            if PlayerState(CurrentPlayer).isQual(kMajV_S1Riddler)>=1 then
              TmpStr="Riddler"
              bSet=True
            End if
          case kMajV_S2Riddler:
            if PlayerState(CurrentPlayer).isQual(kMajV_S2Riddler)>=1 then
              TmpStr="Riddler2"
              bSet=True
            End if
          case kMinV_S1MadHatter:
            TmpStr="MadHatter1"
            bSet=True
          case kMinV_S2MadHatter:
            TmpStr="MadHatter2"
            bSet=True
          case kMinV_S1KingTut:
            TmpStr="Tut1"
            bSet=True
          case kMinV_S2KingTut1:
            TmpStr="Tut2"
            bSet=True
          case kMinV_S2KingTut2:
            TmpStr="Tut3"
            bSet=True
          case kMinV_S3KingTut1:
            TmpStr="Tut4"
            bSet=True
          case kMinV_S3KingTut2:
            TmpStr="Tut5"
            bSet=True
          case kMinV_S1Bookworm:
            TmpStr="Bookworm"
            bSet=True
          case kMinV_S2EggHead:
            TmpStr="Egg1"
            bSet=True
          case kMinV_S3EggHead1:
            TmpStr="Egg2"
            bSet=True
          case kMinV_S3EggHead2 :
            TmpStr="Egg3"
            bSet=True
          case kMinV_S2MrFreeze:
            TmpStr="Freeze"
            bSet=True
          case kMinV_S2Shame:
            TmpStr="Shame1"
            bSet=True
          case kMinV_S3Shame:
            TmpStr="Shame2"
            bSet=True
          case kWiz_VillainMB:
            TmpStr="VMB"
            bSet=True
          case kWiz_BatTurn
            TmpStr="BT"
            bSet=True
          case kWiz_VillainEscape
            TmpStr="VESC"
            bSet=True
          case kWiz_Batusi
            TmpStr="Batusi"
            bSet=True
          case kWiz_Holy
            TmpStr="Holy"
            bSet=True
          case kWiz_GasAttack
            TmpStr="Gas"
            bSet=True

        End Select

        if bSet then Exit For
      End if
    End If
  Next

'WriteToLog "     ", "StartLastScene: Set:" & bSet & " Villain idx:" & idx & " " & tmpStr

  if bSet then
    holdMap = SceneMap(idx, PlayerState(CurrentPlayer).TProgress(idx), 2)     ' default to the second one
    holdMap2 = SceneMap(idx, PlayerState(CurrentPlayer).TProgress(idx), 0)
    QueueFlushV idx

    holdMap2 = Replace (holdMap2, "[PCNT]", PlayerState(CurrentPlayer).TProgressPercent(idx))
    holdMap = Replace (holdMap, "[PCNT]", PlayerState(CurrentPlayer).TProgressPercent(idx))

    holdMap2 = Replace (holdMap2, "[SCORE]", "")                  ' Clear the score if it has one
    holdMap = Replace (holdMap, "[SCORE]", "")

''WriteToLog "     ", "StartLastScene-bSet ScreenPos:" & PlayerState(CurrentPlayer).Villains(idx).pupScreen & " BatPhone:" & lBatPhone.TimerEnabled & " Map2:" & holdMap
''WriteToLog "     ", "HoldMap;" & holdMap
''WriteToLog "     ", "HoldMap2;" & holdMap2

    if PlayerState(CurrentPlayer).getPupScreen(idx)=sSwapPos and lBatPhone.TimerEnabled and Instr(holdMap, "SceneMVBatPhone")<>0 then   ' Show Batphone instead
      QueueSceneV idx, holdMap, -1, 1
    elseif holdMap<>"" and idx>=kMinV_S1MadHatter Then        ' Minor Villains and Wizards show the full scene (Others can be active after a Drain)
      QueueSceneV idx, holdMap, -1, 1
    elseif holdMap<>"" and Instr(holdMap, "wait")<>0 then     ' Just play the wait scene for MajorVillains
      QueueSceneV idx, holdMap, -1, 1
    Elseif holdMap2<>"" and Instr(holdMap2, "wait")<>0 then     ' Just play the wait scene for MajorVillains
      QueueSceneV idx, holdMap2, -1, 1
    Else                              ' Just play wait1.mp4
      QueueSceneV idx, "SceneGeneralStart3 "&idx&", 1, 1, ""video-"&TmpStr&""", ""wait1.mp4"", ""^^^^^^^^"" ", -1, 1
    End if
  Else              ' No mode active
    SceneGeneralWait sSwapPos
  End if

End Sub

Sub tmrPengMagnetStart()
  mMagnaSave.Strength = 50
  mMagnaSave.grabCenter = False
  mMagnaSave.MagnetOn=True
End Sub

Sub tmrPenMagnetCancel()
  mMagnaSave.MagnetOn=False
  mMagnaSave.Strength = 30
  mMagnaSave.grabCenter = True
End Sub

Sub ResetTurnTableDrain()
  if lBatPhone.TimerEnabled then
    mMagnaSave.MagnetOn =False
    StopSound "sfx-bat-phone1"                              ' Clear BatPhone
    SetLightColor lBatPhone, kBatPhoneColor, 0
    lBatPhone.TimerEnabled = False
    EndHurryUp(False)

    ' Queue any qualified ones
    PlayerState(CurrentPlayer).QueueQual(-1)

    TurnTable_Goto(kTT_TV)
  End if
End Sub


Sub BumperScoreClearAll() ' Clears all bumpers because they sometimes get left behind if we overflow timers
  Dim i
  For i = 0 to 5
    BumperScore3 i
  Next

  ' Kill this Just in case this is lingering around from timer overflows
  ShowPopupLabel 7,"""", True, """"

End Sub

Dim BumperDOFMX: BumperDOFMX = 0

Sub BumperScore(ScoreVal)   ' Display a popup Animation on the backglass
  Dim idx
  Dim idx1
  Dim idx2
  Dim size
  Dim x
  Dim y
  Dim i
  Dim Score
  Score = (ScoreVal \ 1000) & "K"

  For i = 0 to 5
    if BumperScoreFree(i)=False then
      BumperScoreFree(i)=True
      idx=i
      idx1=INT(RND*3)+1
      idx2=INT(RND*11)
      size=INT(RND*12)
      x=INT(RND*75)+12.5
      y=INT(RND*75)+8
''WriteToLog "     ", "BumperBG" & i &" PuPOverlays\\BumperBurst"&idx1&"-"&idx2&".png {'mt':2, 'zback':1, 'width':"& 15 + size&", 'height':"& 25 + size&",'yalign':1,'xalign':1,'ypos':"&y&",'xpos':"&x&"}"
      puPlayer.LabelSet pBackglass,"BumperBG" & idx, "PuPOverlays\\BumperBurst"&idx1&"-"&idx2&".png" ,1,"{'mt':2, 'zback':1, 'width':"& 15 + size&", 'height':"& 25 + size&",'yalign':1,'xalign':1,'ypos':"&y&",'xpos':"&x&"}"
''WriteToLog "     ",  "BumperScore2 " & Score & "," & x & "," & y & "," & size & "," & idx & "," & idx2 & " '"
      PlaySoundVol "sfx-bumper" & INT(RND*10)+1, VolDef
      BumperDOFMX = BumperDOFMX+1
      Select Case BumperDOFMX 'MX - BAM, ZOK, POW
        Case 1 DOF 302, DOFPulse
        Case 2 DOF 303, DOFPulse
        Case 3 DOF 304, DOFPulse: BumperDOFMX = 0
      End Select

      VPMTimer.AddTimer 900, "BumperScore2 """ & Score & """," & x & "," & y & "," & size & "," & idx & "," & idx2 & " '"
      Exit sub
    End if
  Next
End Sub

Sub BumperScore2(Score, x, y, size, idx, idx2)    ' Display a popup Animation on the backglass
  puPlayer.LabelSet pBackglass,"BumperBG"  & idx, "PuPOverlays\\BumperBurst0-"&idx2&".png" ,1,"{'mt':2, 'zback':1, 'width':"& 15 + size&", 'height':"& 25 + size&",'yalign':1,'xalign':1,'ypos':"&y&",'xpos':"&x&"}"
  puPlayer.LabelSet pBackglass,"BumperTxt" & idx, Score ,1,"{'mt':2, 'yalign':1,'xalign':1,'ypos':"&y&",'xpos':"&x&",'size':" & 5 & "}"
  VPMTimer.AddTimer 900, "BumperScore3 " & idx & " '"
End Sub

Sub BumperScore3(idx)   ' Display a popup Animation on the backglass
  puPlayer.LabelSet pBackglass,"BumperBG"  & idx, "PuPOverlays\\Clear.png" ,1,""
  puPlayer.LabelSet pBackglass,"BumperTxt" & idx, "" ,1,""
  BumperScoreFree(idx)=False
End Sub


Dim BatPhoneHurryupCnt
Sub StartBatPhone(villain)
  dim i
  Dim startVal
  dim name
'WriteToLog "     ", "Start BatPhone"
  lBatPhone.TimerInterval = 1300
  lBatPhone.TimerEnabled = True
  lBatPhone_Timer         ' Flash the batphone
  TurnTable_Goto(kTT_Phone)
  if tmrHurryUp.Enabled=False then BatPhoneHurryupCnt=0
  SetLightColor lArrowCommissG, "red", 2

  ' Sho the popup label
  Select case villain
    case kMajV_S1CatWoman, kMajV_S2CatWoman: name="CATWOMAN"
    case kMajV_S1Riddler, kMajV_S2Riddler: name="RIDDLER"
    case kMajV_S1Joker, kMajV_S2Joker: name="JOKER"
    case kMajV_S1Peng, kMajV_S2Peng: name="PENGUIN"
  End Select
  ShowPopupLabel 7,"THE " & name & " COMPLETED!^SHOOT THE^BAT PHONE TO^ANSWER THE CALL!", False, ""
  vpmTimer.AddTimer 3000, "ShowPopupLabel 7,"""", True, """" '"

' TBD: Add 250K for each completed Major
  startVal = 1500000
  For i = kMajV_S1CatWoman to kMajV_S2Riddler
    if PlayerState(CurrentPlayer).isFinished(i) then startVal=startVal+250000
  Next
  StartHurryUp villain, startVal
  SetVBackground
End Sub

Sub lBatPhone_Timer     ' Flashes BatPhone
  if bMVSelect = False then PlaySoundVol "sfx-bat-phone1", VolSfx   ' Disable flash and sound when selecting a minor villain
  SetLightColor lBatPhone, kBatPhoneColor, 1
  DOF 155, DOFPulse 'BatPhone
  vpmTimer.AddTimer 700, "lBatPhone.state =0 '"
End Sub

Dim bPauseHurryUp       ' Pauses hurryup when increased
Dim bHurryUpBase        ' Save base value for increase calculation on batphone (or others)
Dim HurryUpScreen
Sub StartHurryUp(villain, startValue)
  HurryUpScreen=PlayerState(CurrentPlayer).getPupScreen(Villain)
  bPauseHurryUp=False
  if tmrHurryUp.Enabled=False then
    bHurryUpBase=startValue
    tmrHurryUp.UserValue = startValue
  End if
  tmrHurryUp.Interval=100
  tmrHurryUp.Enabled = True
End Sub

Sub EndHurryUp(bComplete)
  if bComplete then
    if tmrHurryUp.UserValue > PlayerState(CurrentPlayer).BatPhoneHS then
      PlayerState(CurrentPlayer).BatPhoneHS = tmrHurryUp.UserValue
    End if
    ShowPopupLabel 0, "BAT PHONE ANSWERED!^" & FormatScore(tmrHurryUp.UserValue), False, "orange"
    vpmtimer.AddTimer 2500, "ShowPopupLabel 0, """", True, """" '"

    AddScore tmrHurryUp.UserValue
    BonusAddModeHit kBonusHurryUp
  End if
  SetLightColor lArrowCommissG, "red", 0
  BatPhoneHurryupCnt=0
  tmrHurryUp.Enabled = False
End Sub

Sub tmrHurryUp_Timer()
  if tmrPauseTimers.Enabled then exit sub ' Dont change timer
  if bPauseHurryUp then exit sub      ' Pause for updates to hurryup
  if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MrFreeze) then Exit Sub   ' Mr Freeze Freezes Timers

  tmrHurryUp.UserValue=tmrHurryUp.UserValue-4150
  if tmrHurryUp.UserValue<=0 then
    tmrHurryUp.UserValue=0
    ResetTurnTableDrain   ' Calls endHurryUp, Queues up this Villain
    'SetMajorLights
    SetMajorQualLights True
    StartLastScene
    PuPlayer.LabelSet HurryUpScreen,"GeneralTop3", "", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':7}"
  else
    PuPlayer.LabelSet HurryUpScreen,"GeneralTop3", FormatScore(tmrHurryUp.UserValue), 1,"{'mt':2,'color':"&RGB(255,0,0)&",'size':7}"
  End if
End Sub

' ******************************************************************************
' *** Second hurry up for BatTurn
Dim bPauseHurryUp2        ' Pauses hurryup when increased
Dim bHurryUpBase2       ' Save base value for increase calculation on batphone (or others)
Dim Hurry2UpScreen
Sub StartHurryUp2(villainIdx, startValue)
  bPauseHurryUp2=False
  PlayerState(CurrentPlayer).Villains(villainIdx).JackpotBase=startValue
  bHurryUpBase2=startValue
  tmrHurryUp2.Interval=100
  tmrHurryUp2.UserValue = startValue
  tmrHurryUp2.Enabled = True
  Hurry2UpScreen = PlayerState(CurrentPlayer).getPupScreen(villainIdx)

'WriteToLog "     ", "StartHurryUp2:" & Hurry2UpScreen
' QueueFlushV villainIdx
' QueueSceneV villainIdx, "SceneGeneralStart3 "&villainIdx&", 1, 0, ""video-BT"", ""wait1.mp4"", ""^^^^^12:"&FormatScore(startValue)&",^^Shoot Flashing Arrows^To Collect Parachutes"" ", -1, 1

End Sub

Sub EndHurryUp2(bComplete)
  if bComplete then

  End if
  PuPlayer.LabelSet Hurry2UpScreen,"GeneralCenter2", "", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':12}"
  tmrHurryUp2.Enabled = False
End Sub

Sub tmrHurryUp2_Timer()
  if tmrPauseTimers.Enabled then exit sub   ' Dont change timer
  if bPauseHurryUp2 then exit sub       ' Pause for updates to hurryup
  if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MrFreeze) then Exit Sub   ' Mr Freeze Freezes Timers

  tmrHurryUp2.UserValue=tmrHurryUp2.UserValue-4150
  if tmrHurryUp2.UserValue<=0 then
    tmrHurryUp2.UserValue=0
    PuPlayer.LabelSet Hurry2UpScreen,"GeneralCenter2", "", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':12}"
    EndHurryUp2(False)
  elseif bPlayMultiplierScene=False then  ' Dont show this while the other scene is up
    PuPlayer.LabelSet Hurry2UpScreen,"GeneralCenter2", FormatScore(tmrHurryUp2.UserValue), 1, "{'mt':2,'color':"&RGB(247, 170, 51)&",'size':12}"
  elseif bPlayMultiplierScene then
    PuPlayer.LabelSet Hurry2UpScreen,"GeneralCenter2", "", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':12}"
  End if
End Sub

' ******************************************************************************
' *** Third hurry up for GasAttack
Dim bPauseHurryUp3        ' Pauses hurryup when increased
Dim bHurryUpBase3       ' Save base value for increase calculation on batphone (or others)
Dim Hurry3UpScreen
Sub StartHurryUp3(villainIdx, startValue)
  bPauseHurryUp3=False
  PlayerState(CurrentPlayer).Villains(villainIdx).JackpotBase=startValue
  bHurryUpBase3=startValue
  tmrHurryUp3.Interval=100
  tmrHurryUp3.UserValue = startValue
  tmrHurryUp3.Enabled = True
  Hurry3UpScreen = PlayerState(CurrentPlayer).getPupScreen(villainIdx)

'WriteToLog "     ", "StartHurryUp3:" & Hurry3UpScreen
' QueueFlushV villainIdx
' QueueSceneV villainIdx, "SceneGeneralStart3 "&villainIdx&", 1, 0, ""video-BT"", ""wait1.mp4"", ""^^^^^12:"&FormatScore(startValue)&",^^Shoot Flashing Arrows^To Collect Parachutes"" ", -1, 1

End Sub

Sub EndHurryUp3(bComplete)
  if bComplete then
    PuPlayer.LabelSet Hurry3UpScreen,"GeneralCenter2", "", 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':12}"
  End if
  tmrHurryUp3.Enabled = False
End Sub

Sub tmrHurryUp3_Timer()
  if tmrPauseTimers.Enabled then exit sub   ' Dont change timer
  if bPauseHurryUp3 then exit sub       ' Pause for updates to hurryup
  if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MrFreeze) then Exit Sub   ' Mr Freeze Freezes Timers

  tmrHurryUp3.UserValue=tmrHurryUp3.UserValue-4150
  if tmrHurryUp3.UserValue<=250000 then
    tmrHurryUp3.UserValue=250000
    PuPlayer.LabelSet Hurry3UpScreen,"GeneralCenter2", FormatScore(tmrHurryUp3.UserValue), 1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':12}"
    EndHurryUp3(False)
  else
    PuPlayer.LabelSet Hurry3UpScreen,"GeneralCenter2", FormatScore(tmrHurryUp3.UserValue), 1, "{'mt':2,'color':"&RGB(247, 170, 51)&",'size':12}"
  End if
End Sub


Sub tmrGasAttackRoving_Timer
  Dim rndIdx

  PlayerState(CurrentPlayer).SSetLightColor kWiz_GasAttack, kLightRiddlerArrow1, "yellow", 0
  PlayerState(CurrentPlayer).SSetLightColor kWiz_GasAttack, kLightRiddlerArrow2, "yellow", 0
  PlayerState(CurrentPlayer).SSetLightColor kWiz_GasAttack, kLightCatArrow1, "yellow", 0
  PlayerState(CurrentPlayer).SSetLightColor kWiz_GasAttack, kLightCatArrow2, "yellow", 0
  PlayerState(CurrentPlayer).SSetLightColor kWiz_GasAttack, kLightJokerArrow, "yellow", 0
  PlayerState(CurrentPlayer).SSetLightColor kWiz_GasAttack, kLightPengArrow, "yellow", 0


  tmrGasAttackRoving.UserValue = tmrGasAttackRoving.UserValue+1
  if tmrGasAttackRoving.UserValue>5 then
    rndIdx=4-(tmrGasAttackRoving.UserValue-6)
  else
    rndIdx=tmrGasAttackRoving.UserValue
  End if
  if tmrGasAttackRoving.UserValue >=10 then tmrGasAttackRoving.UserValue=0
  if rndIdx=0 then PlayerState(CurrentPlayer).SSetLightColor kWiz_GasAttack, kLightRiddlerArrow1, "yellow", 2
  if rndIdx=1 then PlayerState(CurrentPlayer).SSetLightColor kWiz_GasAttack, kLightCatArrow1, "yellow", 2
  if rndIdx=2 then PlayerState(CurrentPlayer).SSetLightColor kWiz_GasAttack, kLightJokerArrow, "yellow", 2
  if rndIdx=3 then PlayerState(CurrentPlayer).SSetLightColor kWiz_GasAttack, kLightCatArrow2, "yellow", 2
  if rndIdx=4 then PlayerState(CurrentPlayer).SSetLightColor kWiz_GasAttack, kLightPengArrow, "yellow", 2
  if rndIdx=5 then PlayerState(CurrentPlayer).SSetLightColor kWiz_GasAttack, kLightRiddlerArrow2, "yellow", 2

End Sub


Sub TVProgress( Index ) ' Index into array
  PlaySoundVol "sfx-TV" & INT(RND * 3) +1, VolSfx       ' Note I think these change based on what the main screen is
  DOF 202, DOFPulse
  AddScore 30
  if PlayerState(CurrentPlayer).TVProgress(Index)=0  then
    PlayerState(CurrentPlayer).SetTVProgress(Index)
  ElseIf Index=0 then
    if PlayerState(CurrentPlayer).TVProgress(Index+1)=0 then
      PlayerState(CurrentPlayer).SetTVProgress(Index+1)
    End if
  ElseIf Index = 2 then
    If PlayerState(CurrentPlayer).TVProgress(Index-1)=0 then
      PlayerState(CurrentPlayer).SetTVProgress(Index-1)
    End if
  Else
    if PlayerState(CurrentPlayer).TVProgress(Index+1)=0  then
      PlayerState(CurrentPlayer).SetTVProgress(Index+1)
    ElseIf PlayerState(CurrentPlayer).TVProgress(Index-1)=0 then
      PlayerState(CurrentPlayer).SetTVProgress(Index-1)
    End if
  End if
End Sub

Sub GadgetCancel()
  if tgtT.TimerEnabled then  ' Short cycle
    tgtT.TimerEnabled=False
    tgtT.UserValue=40
    tgtT_Timer
    puPlayer.LabelSet pBackglass,"GadgetBelt", "PuPOverlays\\clear.png" ,1,""
    puPlayer.LabelSet pBackglass, "GadgetBeltCnt", "", 1, ""
'   puPlayer.LabelSet pBackglass, "GadgetBeltCntb", "", 1, ""
    puPlayer.LabelSet pBackglass,"GadgetBelt0", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':20}"
    puPlayer.LabelSet pBackglass,"GadgetBelt1", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':30}"
    puPlayer.LabelSet pBackglass,"GadgetBelt2", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':40}"
    puPlayer.LabelSet pBackglass,"GadgetBelt3", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':50}"
    puPlayer.LabelSet pBackglass,"GadgetBelt4", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':60}"
    puPlayer.LabelSet pBackglass,"GadgetBelt5", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':70}"
  End if
End sub


Sub GadgetProgress( Index, LightU, Light, LightL) ' Index into array, Upper Light, This Light, Lower Light
  Dim image
  Dim hitLetter:hitLetter=-1
  dim HitCnt
  if gadgetXPos=-1 then exit sub  ' we are on the final dont allow progress

  HitCnt = PlayerState(CurrentPlayer).GadgetProgress(0)+PlayerState(CurrentPlayer).GadgetProgress(1)+_
       PlayerState(CurrentPlayer).GadgetProgress(2)+PlayerState(CurrentPlayer).GadgetProgress(3)+_
       PlayerState(CurrentPlayer).GadgetProgress(4)+PlayerState(CurrentPlayer).GadgetProgress(5)

  image=PupAniFolder&"\\belt"
  if PlayerState(CurrentPlayer).GadgetProgress(Index)=0 then
    PlayerState(CurrentPlayer).GadgetProgress(Index)=1
    if Not (PlayerState(CurrentPlayer).isActive(kMinV_S2Shame) and PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame)<=4 and Light.State=2) then ' If we are in Shame and this is blinking skip it
      if HitCnt+1 = 6 then
        SetLightColor Light, "", 2
      Else
        SetLightColor Light, "", 3
      End if
    End if
    hitLetter=Index
  ElseIf Index=0 then
    if PlayerState(CurrentPlayer).GadgetProgress(Index+1)=0 then
      PlayerState(CurrentPlayer).GadgetProgress(Index+1)=1
      if Not (PlayerState(CurrentPlayer).isActive(kMinV_S2Shame) and PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame)<=4 and LightL.State=2) then  ' If we are in Shame and this is blinking skip it
        if HitCnt+1 = 6 then
          SetLightColor LightL, "", 2
        Else
          SetLightColor LightL, "", 3
        End if
      End if
      hitLetter=Index+1
    End if
  ElseIf Index = 5 then
    If PlayerState(CurrentPlayer).GadgetProgress(Index-1)=0 then
      PlayerState(CurrentPlayer).GadgetProgress(Index-1)=1
      if Not (PlayerState(CurrentPlayer).isActive(kMinV_S2Shame) and PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame)<=4 and LightU.State=2) then  ' If we are in Shame and this is blinking skip it
        if HitCnt+1 = 6 then
          SetLightColor LightU, "", 2
        Else
          SetLightColor LightU, "", 3
        End if
      End if
      hitLetter=Index-1
    End if
  Else
    if PlayerState(CurrentPlayer).GadgetProgress(Index+1)=0 then
      PlayerState(CurrentPlayer).GadgetProgress(Index+1)=1
      if Not (PlayerState(CurrentPlayer).isActive(kMinV_S2Shame) and PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame)<=4 and LightL.State=2) then  ' If we are in Shame and this is blinking skip it
        if HitCnt+1 = 6 then
          SetLightColor LightL, "", 2
        else
          SetLightColor LightL, "", 3
        End If
      End If
      hitLetter=Index+1
    ElseIf PlayerState(CurrentPlayer).GadgetProgress(Index-1)=0 then
      PlayerState(CurrentPlayer).GadgetProgress(Index-1)=1
      if Not (PlayerState(CurrentPlayer).isActive(kMinV_S2Shame) and PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame)<=4 and LightU.State=2) then  ' If we are in Shame and this is blinking skip it
        if HitCnt+1 = 6 then
          SetLightColor LightU, "", 2
        Else
          SetLightColor LightU, "", 3
        End if
      End if
      hitLetter=Index-1
    End if
  End if

'WriteToLog "     ", "GadgetHit: " & hitLetter

  if hitLetter<> -1 then
    if tgtT.TimerEnabled then   ' We are showing the belt already
      if HitCnt+1 = 6 then  ' Cancel so we can show GadgetAwarded Belt
        tgtT.TimerEnabled=False
        puPlayer.LabelSet pBackglass,"GadgetBelt", "PuPOverlays\\clear.png" ,1,""
        puPlayer.LabelSet pBackglass,"GadgetBelt0", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':20}"
        puPlayer.LabelSet pBackglass,"GadgetBelt1", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':30}"
        puPlayer.LabelSet pBackglass,"GadgetBelt2", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':40}"
        puPlayer.LabelSet pBackglass,"GadgetBelt3", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':50}"
        puPlayer.LabelSet pBackglass,"GadgetBelt4", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':60}"
        puPlayer.LabelSet pBackglass,"GadgetBelt5", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':70}"
      Else
        Exit Sub  ' Skip animation for this one
      End if
    End if

    if HitCnt+1 = 6 then     ' Show Gadget Awarded Belt
      BonusAddModeHit kBonusGadget    ' Add Gadget Bonus
      AddScore 285000

      PlaySoundVol "sfx-Gadget-done0", VolSfx
      vpmTimer.AddTimer 1000, "PlaySoundVol ""sfx-Gadget-done1"", VolSfx '"
      DOF 201, DOFPulse 'Gadget Complete
      PlayerState(CurrentPlayer).AddGadget
      image=image+"2.gif"
      gadgetXPos=-1
      SetLightColor lGadgetG1, "", 2
      SetLightColor lGadgetA, "", 2
      SetLightColor lGadgetD, "", 2
      SetLightColor lGadgetG2, "", 2
      SetLightColor lGadgetE, "", 2
      SetLightColor lGadgetT, "", 2
    else
      PlaySoundVol "sfx-gadgetHit" & (INT(RND*3)+1), VolSfx   ' Play random sound, Note I think these change based on what the main screen is
      DOF 200, DOFPulse 'Gadget Hit
      gadgetXPos=100
      image=image+".gif"
    End if

    PlayerState(CurrentPlayer).AddJackpot2 kMinV_S2EggHead, -1  ' Egghead makes targets 300000
    PlayerState(CurrentPlayer).AddJackpot2 kMinV_S3EggHead1, -1   ' Egghead makes targets 300000
    AddScore 25030

    gadgetFlash=1
    tgtA.UserValue = hitLetter
    tgtT.TimerInterval=100
    tgtT.UserValue=0
    tgtT.TimerEnabled = True
    PuPlayer.LabelShowPage pMVideo, 4, 0,""   ' Show Blank Page so it doesnt overlap
    puPlayer.LabelSet pBackglass,"GadgetBelt", image ,1,"{'mt':2,'color':111111, 'anigif':100, 'width':100, 'height':100,'yalign':0,'xalign':0,'ypos':0,'xpos':0}"

  End if
End Sub

Dim gadgetXPos
Dim gadgetFlash
Sub tgtT_Timer
  tgtT.UserValue=tgtT.UserValue+1
  if gadgetXPos=-1 then         ' Collect Gadget Belt
    if tgtT.UserValue >=40 then   ' Done
      puPlayer.LabelSet pBackglass,"GadgetBelt", "PuPOverlays\\clear.png" ,1,""
      if bSceneCollect and SceneCollectScreen=pMVideo then
        PuPlayer.LabelShowPage pMVideo, 2, 0,""   ' Show the page with the arrows
      else
        PuPlayer.LabelShowPage pMVideo, 1, 0,""   ' Show the Page now
      End if

      tgtT.TimerEnabled=False
      gadgetXPos=0

      PlayerState(CurrentPlayer).GadgetProgress(0)=0
      PlayerState(CurrentPlayer).GadgetProgress(1)=0
      PlayerState(CurrentPlayer).GadgetProgress(2)=0
      PlayerState(CurrentPlayer).GadgetProgress(3)=0
      PlayerState(CurrentPlayer).GadgetProgress(4)=0
      PlayerState(CurrentPlayer).GadgetProgress(5)=0
      SetLightColor lGadgetG1, "", 0
      SetLightColor lGadgetA, "", 0
      SetLightColor lGadgetD, "", 0
      SetLightColor lGadgetG2, "", 0
      SetLightColor lGadgetE, "", 0
      SetLightColor lGadgetT, "", 0
    elseif tgtT.UserValue = 37 then
      puPlayer.LabelSet pBackglass, "GadgetBeltCnt", "", 1, ""
'     puPlayer.LabelSet pBackglass, "GadgetBeltCntb", "", 1, ""
    elseif tgtT.UserValue = 12 then
      SetLightColor lGadgetG1, "", 0
      SetLightColor lGadgetA, "", 0
      SetLightColor lGadgetD, "", 0
      SetLightColor lGadgetG2, "", 0
      SetLightColor lGadgetE, "", 0
      SetLightColor lGadgetT, "", 0
      puPlayer.LabelSet pBackglass, "GadgetBeltCnt", PlayerState(CurrentPlayer).Gadgets, 1, "{'mt':2, 'ypos':9,'xpos':50, 'outline':1,'shadowstate': 1, 'xoffset':2, 'yoffset':2, 'shadowcolor':"&RGB( 0, 0, 0)&"}"
'     puPlayer.LabelSet pBackglass, "GadgetBeltCntb", PlayerState(CurrentPlayer).Gadgets, 1, "{'mt':2, 'ypos':8,'xpos':49.8,'size':7.2}"

    End if
  else
    if tgtT.UserValue >=40 then   ' Done
      puPlayer.LabelSet pBackglass,"GadgetBelt", "PuPOverlays\\clear.png" ,1,""
      if bSceneCollect and SceneCollectScreen=pMVideo then
        PuPlayer.LabelShowPage pMVideo, 2, 0,""   ' Show the page with the arrows
      else
        PuPlayer.LabelShowPage pMVideo, 1, 0,""   ' Show the Page now
      End if
      tgtT.TimerEnabled=False
    elseif tgtT.UserValue =35 then
      puPlayer.LabelSet pBackglass,"GadgetBelt0", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':20}"
      puPlayer.LabelSet pBackglass,"GadgetBelt1", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':30}"
      puPlayer.LabelSet pBackglass,"GadgetBelt2", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':40}"
      puPlayer.LabelSet pBackglass,"GadgetBelt3", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':50}"
      puPlayer.LabelSet pBackglass,"GadgetBelt4", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':60}"
      puPlayer.LabelSet pBackglass,"GadgetBelt5", "", 1, "{'mt':2,'color':000000, 'ypos':1,'xpos':70}"
    elseif tgtT.UserValue>12 and tgtT.UserValue<35 then
      gadgetFlash=not gadgetFlash
      if tgtA.UserValue =0 then puPlayer.LabelSet pBackglass,"GadgetBelt0", "G", gadgetFlash, "{'mt':2,'color':000000, 'ypos':6,'xpos':"&gadgetXPos&"}"
      if tgtA.UserValue =1 then puPlayer.LabelSet pBackglass,"GadgetBelt1", "A", gadgetFlash, "{'mt':2,'color':000000, 'ypos':6,'xpos':"&gadgetXPos+(13*1)&"}"
      if tgtA.UserValue =2 then puPlayer.LabelSet pBackglass,"GadgetBelt2", "D", gadgetFlash, "{'mt':2,'color':000000, 'ypos':6,'xpos':"&gadgetXPos+(13*2)&"}"
      if tgtA.UserValue =3 then puPlayer.LabelSet pBackglass,"GadgetBelt3", "G", gadgetFlash, "{'mt':2,'color':000000, 'ypos':6,'xpos':"&gadgetXPos+(13*3)&"}"
      if tgtA.UserValue =4 then puPlayer.LabelSet pBackglass,"GadgetBelt4", "E", gadgetFlash, "{'mt':2,'color':000000, 'ypos':6,'xpos':"&gadgetXPos+(13*4)&"}"
      if tgtA.UserValue =5 then puPlayer.LabelSet pBackglass,"GadgetBelt5", "T", gadgetFlash, "{'mt':2,'color':000000, 'ypos':6,'xpos':"&gadgetXPos+(13*5)&"}"

  ' elseif tgtT.UserValue=19 then  ' This will allow the text to move but it doesnt seem to move uniformly
  '   gadgetXPos=gadgetXPos-2.6
    elseif tgtT.UserValue=12 then
      gadgetXPos=27.1
      puPlayer.LabelSet pBackglass,"GadgetBelt0", "G", PlayerState(CurrentPlayer).GadgetProgress(0), "{'mt':2,'color':000000, 'ypos':6,'xpos':"&gadgetXPos&"}"
      puPlayer.LabelSet pBackglass,"GadgetBelt1", "A", PlayerState(CurrentPlayer).GadgetProgress(1), "{'mt':2,'color':000000, 'ypos':6,'xpos':"&gadgetXPos+(13.2*1)&"}"
      puPlayer.LabelSet pBackglass,"GadgetBelt2", "D", PlayerState(CurrentPlayer).GadgetProgress(2), "{'mt':2,'color':000000, 'ypos':6,'xpos':"&gadgetXPos+(13.2*2)&"}"
      puPlayer.LabelSet pBackglass,"GadgetBelt3", "G", PlayerState(CurrentPlayer).GadgetProgress(3), "{'mt':2,'color':000000, 'ypos':6,'xpos':"&gadgetXPos+(13.2*3)&"}"
      puPlayer.LabelSet pBackglass,"GadgetBelt4", "E", PlayerState(CurrentPlayer).GadgetProgress(4), "{'mt':2,'color':000000, 'ypos':6,'xpos':"&gadgetXPos+(13.2*4)&"}"
      puPlayer.LabelSet pBackglass,"GadgetBelt5", "T", PlayerState(CurrentPlayer).GadgetProgress(5), "{'mt':2,'color':000000, 'ypos':6,'xpos':"&gadgetXPos+(13.2*5)&"}"
    End If
  End if
End sub



Sub CheckSetCommissGX(light)
  Dim bHit:bHit=False
  dim bonusLight
  Dim pattern
  Dim i
  Dim idx

  if PlayerState(CurrentPlayer).CommissGXBonus(4)=1 and lCrane5x.state=2 and light.name = "lArrowCat1" then
    set bonusLight=lCrane5x
    idx=4
    BHit=True
  elseif PlayerState(CurrentPlayer).CommissGXBonus(3)=1 and lCrane4x.state=2 and (light.name = "lArrowJoker" or light.name="swBatmobile" or light.name="swBatcave" or light.name="lBatPhone") then
    set bonusLight=lCrane4x
    idx=3
    BHit=True
  elseif PlayerState(CurrentPlayer).CommissGXBonus(2)=1 and lCrane3x.state=2 and light.name = "lArrowCat2" then
    set bonusLight=lCrane3x
    idx=2
    BHit=True
  elseif PlayerState(CurrentPlayer).CommissGXBonus(1)=1 and lCrane2x.state=2 and light.name = "lArrowPenguin" then
    set bonusLight=lCrane2x
    idx=1
    BHit=True
  elseif PlayerState(CurrentPlayer).CommissGXBonus(0)=1 and lCrane1x.state=2 and light.name = "lArrowRiddler2" then
    set bonusLight=lCrane1x
    idx=0
    BHit=True
  End if

  if bHit then
''WriteToLog "     ", "Setting ShotMultiplier (" & idx & ") " & PlayerState(CurrentPlayer).CommissGXBonus(idx)
    PlayerState(CurrentPlayer).CommissGXHitCnt = PlayerState(CurrentPlayer).CommissGXHitCnt+1
    PlayerState(CurrentPlayer).CommissGXBonus(idx)=PlayerState(CurrentPlayer).CommissGXHitCnt+1   ' Set the bonus

    if PlayerState(CurrentPlayer).CommissGXBonus(4)=1 then SetDefPulse(lCrane5x):lCrane5x.state = 0
    if PlayerState(CurrentPlayer).CommissGXBonus(3)=1 then SetDefPulse(lCrane4x):lCrane4x.state = 0
    if PlayerState(CurrentPlayer).CommissGXBonus(2)=1 then SetDefPulse(lCrane3x):lCrane3x.state = 0
    if PlayerState(CurrentPlayer).CommissGXBonus(1)=1 then SetDefPulse(lCrane2x):lCrane2x.state = 0
    if PlayerState(CurrentPlayer).CommissGXBonus(0)=1 then SetDefPulse(lCrane1x):lCrane1x.state = 0

    if PlayerState(CurrentPlayer).CommissGXHitCnt<5 then      ' you can only do this 5 times
      PlayerState(CurrentPlayer).CommissGXCnt = DMDFet(kDMDFet_ComissGShots)+PlayerState(CurrentPlayer).CommissGXHitCnt
      SetCommissGX(PlayerState(CurrentPlayer).CommissGXCnt)
    End if

    SetShotMultiplier light, False      ' Add this one now

    SetDefPulse(bonusLight)
    pattern=""
    For i = 0 to PlayerState(CurrentPlayer).CommissGXHitCnt
      pattern = pattern + "01"
    Next
    bonusLight.state=2
    bonusLight.BlinkInterval=200
    bonusLight.BlinkPattern = pattern & "111"

  End if

End Sub


Sub CommissGXReset()
  PlayerState(CurrentPlayer).CommissGXHitCnt=0
  PlayerState(CurrentPlayer).CommissGXBonus(0)=1
  PlayerState(CurrentPlayer).CommissGXBonus(1)=1
  PlayerState(CurrentPlayer).CommissGXBonus(2)=1
  PlayerState(CurrentPlayer).CommissGXBonus(3)=1
  PlayerState(CurrentPlayer).CommissGXBonus(4)=1
  lCrane5x.state=0
  lCrane4x.state=0
  lCrane3x.state=0
  lCrane2x.state=0
  lCrane1x.state=0
  CommissGX.state=0
End Sub

Sub SetCommissGX(cnt)
  Dim i, pattern

  if cnt>0 then
    pattern=""
    For i = 0 to cnt-1
      pattern = pattern + "100"
    Next
    CommissGX.BlinkInterval=110
    CommissGX.BlinkPattern = pattern & "00"
    CommissGX.state=2
  Else
    CommissGX.BlinkPattern="10"
    CommissGX.state=0
  End If
End Sub

dim bDebounce_tgtGordon:bDebounce_tgtGordon=False
Sub tgGordon_Hit()
  dim bHit:bHit=False

  if bDebounce_tgtGordon then exit sub            ' Debounce during Ball Control
  bDebounce_tgtGordon=True
  vpmtimer.AddTimer 200, "bDebounce_tgtGordon=False '"

  if PlayerState(CurrentPlayer).CommissGXCnt > 0 then
'   bHit = True
    PlayerState(CurrentPlayer).CommissGXCnt=PlayerState(CurrentPlayer).CommissGXCnt-1
    SetCommissGX(PlayerState(CurrentPlayer).CommissGXCnt)

    if PlayerState(CurrentPlayer).CommissGXCnt = 0 then
      PlaySoundVol "sfx-CG-Hit3", VolSfx        '0x22E
      CommissGX.state = 0
      if lCrane5x.state=0 then SetSlowPulse(lCrane5x):lCrane5x.BlinkPattern="10":lCrane5x.state = 2
      if lCrane4x.state=0 then SetSlowPulse(lCrane4x):lCrane4x.BlinkPattern="10":lCrane4x.state = 2
      if lCrane3x.state=0 then SetSlowPulse(lCrane3x):lCrane3x.BlinkPattern="10":lCrane3x.state = 2
      if lCrane2x.state=0 then SetSlowPulse(lCrane2x):lCrane2x.BlinkPattern="10":lCrane2x.state = 2
      if lCrane1x.state=0 then SetSlowPulse(lCrane1x):lCrane1x.BlinkPattern="10":lCrane1x.state = 2

      ShowPopupLabel 2,"MULTIPLIER TARGET^300,000^NEXT MULTIPLIER " & (PlayerState(CurrentPlayer).CommissGXHitCnt+1) & "X", False, ""
      vpmTimer.AddTimer 3000, "ShowPopupLabel 5,"""", True, """" '"
    Else
      PlaySoundVol "sfx-CG-Hit2", VolSfx      ' 0x22D
    End If
  End If

  if tmrBatPoleSeq.Enabled=False and tmrBatPoleSeq.UserValue = 1 and DoBatPoleSeqGordonIdx<=1 then  ' We are on the batcave seq
    bHit = True
    DoBatPoleSeqGordon
  End if

  if tmrHurryUp.Enabled and lBatPhone.TimerEnabled then ' We are on the batphone hurryup - Add to the hurryup
    bHit = True
    IncreaseBatPhone
  End if

  if bHit then
    PlaySoundVol "sfx-comissG-Hit", VolSfx
  Else
    PlaySoundVol "sfx-CG-Hit4", VolSfx      ' 0x0C
  End if
  DOF 203, DOFPulse 'Gordon Hit
End Sub

Sub IncreaseBatPhone()
  QueueSceneS sSwapPos, "SceneGeneralStart3 -1, 0, 0, ""video-batphone"", ""cg_hit.mp4"", ""^^^^^^^^"" ", 1500, 1

  BatPhoneHurryupCnt=BatPhoneHurryupCnt+1
  bPauseHurryUp=True
  tmrHurryUp.UserValue=bHurryUpBase + (BatPhoneHurryupCnt * 1500000)
  PuPlayer.LabelSet pMVideo,"GeneralTop3", FormatScore(tmrHurryUp.UserValue), 1,"{'mt':2,'color':"&RGB(255,0,0)&",'size':7}"
  vpmTimer.AddTimer 1500, "bPauseHurryUp=False:StartLastScene '"
End Sub

Sub tgtG_Hit()
  STHit 1
End sub
Sub tgtGEvent()
  GadgetProgress 0, Null, lGadgetG1, lGadgetA
  CheckProgress lGadgetG1
End sub

Sub tgtA_Hit()
  STHit 2
End sub
Sub tgtAEvent()
  GadgetProgress 1, lGadgetG1, lGadgetA, lGadgetD
  CheckProgress lGadgetA
End sub

Sub tgtD_Hit()
  STHit 3
End sub
Sub tgtDEvent()
  GadgetProgress 2, lGadgetA, lGadgetD, lGadgetG2
  CheckProgress lGadgetD
End sub

Sub tgtG2_Hit()
  STHit 4
End sub
Sub tgtG2Event()
  GadgetProgress 3, lGadgetD, lGadgetG2, lGadgetE
  CheckProgress lGadgetG2
End sub

Sub tgtE_Hit()
  STHit 5
End sub
Sub tgtEEvent()
  GadgetProgress 4, lGadgetG2, lGadgetE, lGadgetT
  CheckProgress lGadgetE
End sub

Sub tgtT_Hit()
  STHit 6
End sub
Sub tgtTEvent()
  GadgetProgress 5, lGadgetE, lGadgetT, Null
  CheckProgress lGadgetT
End sub


' Test subs for hits
'Sub tgtGo_Hit()
' msgbox "tgtGo_Hit"
'End sub
'Sub tgtAo_Hit()
' msgbox "tgtAo_Hit"
'End sub
'Sub tgtDo_Hit()
' msgbox "tgtDo_Hit"
'End sub
'Sub tgtG2o_Hit()
' msgbox "tgtG2o_Hit"
'End sub
'Sub tgtEo_Hit()
' msgbox "tgtEo_Hit"
'End sub
'Sub tgtTo_Hit()
' msgbox "tgtTo_Hit"
'End sub


'Const TargetBouncerEnabled = 1     '0 = normal standup targets, 1 = bouncy targets
'Const TargetBouncerFactor = 0.9  'Level of bounces. Recommmended value of 0.7-1.0


'sub TargetBouncer(aBall,defvalue)
' Dim zMultiplier, vel
' vel = BallSpeed(aBall)
''  debug.print "bounce"
' if aball.z < 30 then
'   'debug.print "velz: " & activeball.velz
'   Select Case Int(Rnd * 4) + 1
'     Case 1: zMultiplier = defvalue+1.1
'     Case 2: zMultiplier = defvalue+1.05
'     Case 3: zMultiplier = defvalue+0.7
'     Case 4: zMultiplier = defvalue+0.3
'   End Select
'   aBall.velz = aBall.velz * zMultiplier * 1.1
'   'debug.print "----> velz: " & activeball.velz
'   'debug.print "conservation check: " & BallSpeed(aBall)/vel
' end if
'end sub



Sub tgtTV1_Hit()
  STHit 7
End Sub
Sub tgtTV1Event()
  TVProgress 0
  CheckProgress lTV1
End Sub

Sub tgtTV2_Hit()
  STHit 8
End Sub
Sub tgtTV2Event()
  TVProgress 1
  CheckProgress lTV2
End Sub

Sub tgtTV3_Hit()
  STHit 9
End Sub
Sub tgtTV3Event()
  TVProgress 2
  CheckProgress lTV3
End Sub

Sub tgtPow_Hit()
  PlaySoundVol "sfx-pow"&INT(RND*2)+1 , VolSfx
  Dim CurScore
  BumperLevel=BumperLevel+1
  CurScore=300000+((BumperLevel-1)*10000)     ' Goes up by 10K each hit
  ShowPopupLabel 2,FormatScore(CurScore) & "^POP BUMPER VALUE^+5,000=" & FormatScore(50000+(BumperLevel*5000)) , False, "Orange"
  DOF 203, DOFPulse 'Pow Hit
' BumperBaseScore=BumperBaseScore+5000
' CurScore=290000+(((BumperBaseScore-50000)/5000)*10000)    ' Goes up by 10K each hit
' ShowPopupLabel 2,FormatScore(CurScore) & "^POP BUMPER VALUE^+5,000=" & FormatScore(BumperBaseScore) , False, "Orange"
  AddScore CurScore
  SetLightColorTimed lPOW, "", 4, 1000
  vpmtimer.AddTimer 2000, "ShowPopupLabel 2, """", True, """" '"
End Sub

tmrPops.interval=50
dim PopTime1:PopTime1=0
dim PopTime2:PopTime2=0
dim PopTime3:PopTime3=0
Sub tmrPops_Timer()
  dim bWait:bWait=False

  if PopTime1<GameTime then
    B66_PlasticPop1.Image="B66_Popbumpers_GIOFFB"
  else
    if B66_PlasticPop1.Image="B66_Popbumpers_GION" then
      B66_PlasticPop1.Image="B66_Popbumpers_GIOFFB"
    else
      B66_PlasticPop1.Image="B66_Popbumpers_GION"
    End if
    bWait=True
  End if

  if PopTime2<GameTime then
    B66_PlasticPop2.Image="B66_Popbumpers_GIOFFB"
  else
    if B66_PlasticPop2.Image="B66_Popbumpers_GION" then
      B66_PlasticPop2.Image="B66_Popbumpers_GIOFFB"
    else
      B66_PlasticPop2.Image="B66_Popbumpers_GION"
    End if
    bWait=True
  End if

  if PopTime3<GameTime then
    B66_PlasticPop3.Image="B66_Popbumpers_GIOFFB"
  else
    if B66_PlasticPop3.Image="B66_Popbumpers_GION" then
      B66_PlasticPop3.Image="B66_Popbumpers_GIOFFB"
    else
      B66_PlasticPop3.Image="B66_Popbumpers_GION"
    End if
    bWait=True
  End if

  if bWait=False then tmrPops.Enabled=False
End Sub

Sub Bumper001_Hit()
  PauseTimers(-1)
  SwitchHit(Bumper001)
  'PlaySoundVol "fx_Bumper", VolTable
' PlaySoundAtVol SoundFXDOF("fx_bumper", 107, DOFPulse, DOFContactors), Bumper001, VolTable
  DOF 107, DOFPulse
  RandomSoundBumperTop Bumper001
  bFlash20Enabled=True

  BumperHits=BumperHits-1
  if BumperHits<=0 then tgtPow_Hit:BumperHits=(BumperLevel+1)*25

  B66_PlasticPop2.Image="B66_Popbumpers_GION"
  PopTime2=gametime+100
  tmrPops.Enabled = True

  AddScore 50000+(BumperLevel*5000)+470
  BumperScore 50000+(BumperLevel*5000)
End Sub
Sub Bumper002_Hit()
  PauseTimers(-1)
  SwitchHit(Bumper002)
  'PlaySoundVol "fx_Bumper", VolTable
' PlaySoundAtVol SoundFXDOF("fx_bumper", 108, DOFPulse, DOFContactors), Bumper002, VolTable
  DOF 108, DOFPulse
  RandomSoundBumperBottom Bumper002
  bFlash20Enabled=True

  BumperHits=BumperHits-1
  if BumperHits<=0 then tgtPow_Hit:BumperHits=(BumperLevel+1)*25

  B66_PlasticPop3.Image="B66_Popbumpers_GION"
  PopTime3=gametime+100
  tmrPops.Enabled = True

  AddScore 50000+(BumperLevel*5000)+470
  BumperScore 50000+(BumperLevel*5000)
End Sub
Sub Bumper003_Hit()
  PauseTimers(-1)
  SwitchHit(Bumper003)
  'PlaySoundVol "fx_Bumper", VolTable
' PlaySoundAtVol SoundFXDOF("fx_bumper", 109, DOFPulse, DOFContactors), Bumper003, VolTable
  DOF 109, DOFPulse
  RandomSoundBumperMiddle Bumper003
  bFlash20Enabled=True

  BumperHits=BumperHits-1
  if BumperHits<=0 then tgtPow_Hit:BumperHits=(BumperLevel+1)*25

  B66_PlasticPop1.Image="B66_Popbumpers_GION"
  PopTime1=gametime+100
  tmrPops.Enabled = True

  AddScore 50000+(BumperLevel*5000)+470
  BumperScore 50000+(BumperLevel*5000)
End Sub


Sub Spinner001_Spin()
  DOF 156, DOFPulse
  PlaySoundVol "sfx-spinner1", VolSfx
  ' PlaySound "fx_spinner", 0, VolTable, AudioPan(Spinner001), 0.25, 0, 0, 1, AudioFade(Spinner001)
  SoundSpinner Spinner001

  PlayerState(CurrentPlayer).AddJackpot2 kMinV_S2EggHead, -1    ' Egghead makes targets 300000
  PlayerState(CurrentPlayer).AddJackpot2 kMinV_S3EggHead1, -1   ' Egghead makes targets 300000

  if PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame) < 5 then
    PlayerState(CurrentPlayer).AddJackpot2 kMinV_S2Shame, 32500   ' Shame Wave 1 makes everything 32500
  End if
  if PlayerState(CurrentPlayer).TProgress(kMinV_S3Shame) < 5 then
    PlayerState(CurrentPlayer).AddJackpot2 kMinV_S3Shame, -1    ' Shame Wave 1 makes everything 32500
  End if
  AddScore SpinnerBaseValue
  CheckSpinner          ' Check spinner mode
  CheckProgress(swSpinner)
End Sub

'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
' X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X
'/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/
'\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\
' X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X
'/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/
'  UTILITY - Video Manager & skipper
'\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\
' X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X
'/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/
'\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\
' X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X
'
' Const pTopper=0     ' show,
' Const pDMD=1      ' ForceBack
' Const pBackglass=2    ' ForceBack
' Const pPlayfield=3    ' off
' Const pMusic=4      ' Music Only
' Const pAudio=5      ' Music Only
' Const pCallouts=8   ' Music Only
' Const pOvervid=14   ' ForcePopBack
' Const pGame=15      ' ForcePop - In Game mini game

  dim currentqueue
  dim cineon:cineon = 0
  dim skipped:skipped = 0
  dim bCancelNext:bCancelNext=False
  dim bMediaPaused(19)
  dim bMediaSet(19)
  bMediaPaused(0)=False:bMediaPaused(1)=False:bMediaPaused(2)=False:bMediaPaused(3)=False:bMediaPaused(4)=False:bMediaPaused(5)=False
  bMediaPaused(6)=False:bMediaPaused(7)=False:bMediaPaused(8)=False:bMediaPaused(9)=False:bMediaPaused(10)=False:bMediaPaused(11)=False
  bMediaPaused(12)=False:bMediaPaused(13)=False:bMediaPaused(14)=False:bMediaPaused(15)=False:bMediaPaused(16)=False:bMediaPaused(17)=False
  bMediaPaused(18)=False:bMediaPaused(19)=False
  bMediaSet(0)=False:bMediaSet(1)=False:bMediaSet(2)=False:bMediaSet(3)=False:bMediaSet(4)=False:bMediaSet(5)=False
  bMediaSet(6)=False:bMediaSet(7)=False:bMediaSet(8)=False:bMediaSet(9)=False:bMediaSet(10)=False:bMediaSet(11)=False
  bMediaSet(12)=False:bMediaSet(13)=False:bMediaSet(14)=False:bMediaSet(15)=False:bMediaSet(16)=False:bMediaSet(17)=False
  bMediaSet(18)=False:bMediaSet(19)=False
  sub pausemedia(channel)

'WriteToLog "     ", "pause media ch:" & channel & " current:" & bMediaPaused(channel)
    if bMediaSet(channel) = False then Exit Sub
    if bMediaPaused(channel) = False then
'WriteToLog "     ", "pause"
      PuPlayer.playpause channel
      bMediaPaused(channel)=True
    End If
  End Sub

  sub resumemedia(channel)
'WriteToLog "     ", "resume media ch:" & channel & " current:" & bMediaPaused(channel)
    if bMediaSet(channel) = False then Exit Sub
    if bMediaPaused(channel) then
'WriteToLog "     ", "resume"
      PuPlayer.playresume channel
      bMediaPaused(channel)=False
    End If
  End Sub

  sub playclear(chan)
    'WriteToLog "     ", "play clear'd " & chan
    bMediaSet(chan) = False
    bMediaPaused(chan) = False

    if chan = pOverVid then
      PuPlayer.PlayStop pOverVid
      'PuPlayer.SetLoop pOverVid, 0
    End If

    if chan = pAudio Then
      'PuPlayer.playlistplayex pAudio,"audioclear","clear.mp3",100,20
      PuPlayer.SetLoop pAudio, 0
      PuPlayer.playstop pAudio
    End If

    if chan = pMVideo Then
      'PuPlayer.playlistplayex pAudio,"audioclear","clear.mp3",100,20
      PuPlayer.SetLoop chan, 0
      PuPlayer.playstop chan
    End If
    if chan = pLVideo Then
      'PuPlayer.playlistplayex pAudio,"audioclear","clear.mp3",100,20
      PuPlayer.SetLoop chan, 0
      PuPlayer.playstop chan
    End If
    if chan = pRVideo Then
      'PuPlayer.playlistplayex pAudio,"audioclear","clear.mp3",100,20
      PuPlayer.SetLoop chan, 0
      PuPlayer.playstop chan
    End If
    if chan = pLVideo2 Then
      'PuPlayer.playlistplayex pAudio,"audioclear","clear.mp3",100,20
      PuPlayer.SetLoop chan, 0
      PuPlayer.playstop chan
    End If


    if chan = pBonusScreen then
      PuPlayer.SetBackGround chan, 0
      PuPlayer.SetLoop chan, 0
      PuPlayer.playstop chan
    End If

    if chan = pMusic Then
      'PuPlayer.playlistplayex pMusic,"audioclear","clear.mp3",100,20
      PuPlayer.SetLoop pMusic, 0
      PuPlayer.playstop pMusic
      curSong=""
      'PuPlayer.SendMSG "{ ""mt"":301, ""SN"": " & pMusic &", ""FN"":11, ""VL"":0 }"
    End If

    if chan = pBackglass Then
      if currentqueue <> "" then
        bCancelNext = True
'WriteToLog "     ", "Clear is cancelling " & currentqueue
      End If
      PuPlayer.SetBackGround pBackglass, 0
      PuPlayer.SetLoop pBackglass, 0
      PuPlayer.playstop pBackglass
    end if
  end Sub


  dim lastvocall:lastvocall=""
  dim noskipper:noskipper=0
  dim curSong
  sub playMusic(fileName)
'WriteToLog "     ", "playMusic: " & curSong & " " & fileName
    if curSong <> fileName then
      playclear pMusic
      curSong=fileName
      playmedia fileName, "Topper", pMusic, "", -1, "", 1, 1
    End if
  end Sub

  'example playmedia "hs.mp3","audiomultiballs",pAudio,"cineon",10000,"",1,1  // (name,playlist,channel,cinematic,length,nextitem,audiolevel,priority)
  sub playmedia(name,playlist,channel,cinematic,length,nextitem,audiolevel,priority)
    Dim i
    bMediaSet(channel) = True
    if audiolevel = 1 Then
      if channel = pBackglass Then
        audiolevel = VolBGMusic
        currentqueue = ""
      Elseif channel = pCallouts Then
        audiolevel = VolBGMusic
      Elseif channel = pMusic Then
        audiolevel = VolBGMusic
      Elseif channel = pAudio Then
        audiolevel = VolBGMusic
      Elseif channel = pOverVid Then
        audiolevel = VolBGMusic
      Elseif channel = pMVideo Then
        audiolevel = VolBGVideo
      Elseif channel = pLVideo Then
        audiolevel = VolBGVideo
      Elseif channel = pLVideo2 Then
        audiolevel = VolBGVideo
      Elseif channel = pRVideo Then
        audiolevel = VolBGVideo
      end If
      audiolevel = audiolevel * 100
    end If

    If channel<>pOverVid and channel >= pMVideo and channel<=pLVideo2 and channel <> sSwapPos then    ' If its not the main channel then mute the audio (B66 feature)
      audiolevel = 0
    End if

    if channel = pCallouts Then
      if lastvocall = name then exit sub
    end if


    if nextitem = "" Then
      If cinematic = "cineon" Then
        noskipper=1
        vpmtimer.addtimer length, "nextitems '"
      end If
    Else
      currentqueue = "playclear " &channel& ":playmedia """ & nextitem &""","""&playlist&""","&channel&","""",-1,"""", "&audiolevel&",1 '"
      vpmtimer.addtimer length, "nextitems '"
      'vpmtimer.AddTimer length, "playclear " &channel& ":playmedia """ & nextitem &""","""&playlist&""","&channel&","""",-1,"""", "&audiolevel&",1 '"
      'vpmtimer.addtimer length, "nextitems '"
      'currentqueue = nextitem
    end If

    If cinematic = "cineon" and length <> -1 Then
'WriteToLog "     ", "ChangeVol pMusic for Cineon"

      skipped=0
      'PuPlayer.playpause 4 ' stop then resume the music
      PuPlayer.SendMSG "{ ""mt"":301, ""SN"": " & pMusic &", ""FN"":11, ""VL"":20 }"
      vpmtimer.addtimer length, "turnitbackupcine '"
      GiOff
      cineon = 1
    end If

'WriteToLog "     ", "PlayMedia " & channel & " Dir:" & playlist & " File:" & name & " Vol:" & audiolevel & " Pri:" & priority & " Len:" & length
    PuPlayer.playlistplayex channel,playlist,name,audiolevel,priority
    if channel = pBackglass then PuPlayer.SetBackGround channel, 1
    if channel = pAudio then PuPlayer.SetLoop channel, 1
    if channel = pMusic and length=-1 then PuPlayer.SetLoop channel, 1
    if channel = pBonusScreen then PuPlayer.SetLoop channel, 1

    If channel = pCallouts and length <> -1 Then
'WriteToLog "     ", "ChangeVol pBackglass Volume for Callouts"
      PuPlayer.SendMSG "{ ""mt"":301, ""SN"": "&pBackglass&", ""FN"":11, ""VL"":60 }"
      PuPlayer.SendMSG "{ ""mt"":301, ""SN"": "&pMusic&", ""FN"":11, ""VL"":60 }"
      PuPlayer.SendMSG "{ ""mt"":301, ""SN"": "&pAudio&", ""FN"":11, ""VL"":60 }"
      vpmtimer.addtimer length, "turnitbackup'"
    end If

    If channel = pOverVid and length <> -1 Then
'WriteToLog "     ", "ChangeVol pBackglass for OverVid"
      PuPlayer.SendMSG "{ ""mt"":301, ""SN"": "&pBackglass&", ""FN"":11, ""VL"":50 }"
      vpmtimer.addtimer length, "turnitbackupvid'"
    end If

    if channel = pCallouts Then
      lastvocall=name
    end if


  end sub

  Sub turnitbackup
'WriteToLog "     ", "Change Volume5"

    PuPlayer.SendMSG "{ ""mt"":301, ""SN"": "&pBackglass&", ""FN"":11, ""VL"":"&VolBGMusic&" }"
    PuPlayer.SendMSG "{ ""mt"":301, ""SN"": "&pMusic &", ""FN"":11, ""VL"":"&VolMusic&" }"
    PuPlayer.SendMSG "{ ""mt"":301, ""SN"": "&pAudio&", ""FN"":11, ""VL"":"&VolSfx&" }"
    'WriteToLog "     ", "turnitbackup "
    'puplayer.setvolume pMusic sndtrkvol
  End Sub

  Sub turnitbackupvid
'WriteToLog "     ", "Change Volume4"

    PuPlayer.SendMSG "{ ""mt"":301, ""SN"": "&pBackglass&", ""FN"":11, ""VL"":"&VolBGMusic&" }"
    'WriteToLog "     ", "turnitbackupvid "
  End Sub

  Sub turnitbackupcine
'WriteToLog "     ", "Change Volume3"
    PuPlayer.SendMSG "{ ""mt"":301, ""SN"": "&pMusic&", ""FN"":11, ""VL"":"&VolMusic&" }"
    'WriteToLog "     ", "turnitbackupcine "
  End Sub

  sub holder
  end sub

  sub nextitems
    if bCancelNext then   ' Cancel the last items that was sent to the queue
'WriteToLog "     ", "Cancel Queue"
      bCancelNext=False
      Exit Sub
    End If
'WriteToLog "     ", "Executing " & currentqueue
    Execute currentqueue
    currentqueue = ""
    bCancelNext = False   ' Items in queue can trigger a cancel
'WriteToLog "     ", "Queue Empty"
'   if skipped = 0 Then
'     noskipper=0
'     'PuPlayer.playresume 4
''WriteToLog "     ", "Change Volume1"
'     PuPlayer.SendMSG "{ ""mt"":301, ""SN"": "&pMusic&", ""FN"":11, ""VL"":"&VolMusic&" }"
'     gion
'     cineon = 0
'     'looktimer = 0
'     execute currentqueue
'   Elseif skipped = 1 Then
'     'PuPlayer.playresume 4
''WriteToLog "     ", "Change Volume2"
'     PuPlayer.SendMSG "{ ""mt"":301, ""SN"": "&pMusic&", ""FN"":11, ""VL"":"&VolMusic&" }"
'     gion
'     cineon = 0
'     'looktimer = 0
'     skipped = 3
'     execute currentqueue
'     currentqueue = " "
'   end If
  end Sub

  sub vidskipper_timer    ' TBD: Make this work (flippers skip cinematics)
    if cineon = 1  and noskipper = 0 Then
      if ldown = 1 and rdown = 1 Then
        nextitems
        skipped = 1
      end If
    end If
  end Sub


'******************************************************
' ZNFF:  FLIPPER CORRECTIONS by nFozzy
'******************************************************


Dim LF : Set LF = New FlipperPolarity
Dim RF : Set RF = New FlipperPolarity

InitPolarity


Sub InitPolarity()
  Dim x, a
  a = Array(LF, RF)
  For Each x In a
    x.AddPt "Ycoef", 0, RightFlipper.Y-65, 1 'disabled
    x.AddPt "Ycoef", 1, RightFlipper.Y-11, 1
    x.enabled = True
    x.TimeDelay = 60
    x.DebugOn=False ' prints some info in debugger

    x.AddPt "Polarity", 0, 0, 0
    x.AddPt "Polarity", 1, 0.05, - 5.5
    x.AddPt "Polarity", 2, 0.16, - 5.5
    x.AddPt "Polarity", 3, 0.20, - 0.75
    x.AddPt "Polarity", 4, 0.25, - 1.25
    x.AddPt "Polarity", 5, 0.3, - 1.75
    x.AddPt "Polarity", 6, 0.4, - 3.5
    x.AddPt "Polarity", 7, 0.5, - 5.25
    x.AddPt "Polarity", 8, 0.7, - 4.0
    x.AddPt "Polarity", 9, 0.75, - 3.5
    x.AddPt "Polarity", 10, 0.8, - 3.0
    x.AddPt "Polarity", 11, 0.85, - 2.5
    x.AddPt "Polarity", 12, 0.9, - 2.0
    x.AddPt "Polarity", 13, 0.95, - 1.5
    x.AddPt "Polarity", 14, 1, - 1.0
    x.AddPt "Polarity", 15, 1.05, -0.5
    x.AddPt "Polarity", 16, 1.1, 0
    x.AddPt "Polarity", 17, 1.3, 0

    x.AddPt "Velocity", 0, 0, 0.95  '0.9  '0.85
    x.AddPt "Velocity", 1, 0.23, 1  '0.95 '0.85
    x.AddPt "Velocity", 2, 0.27, 1
    x.AddPt "Velocity", 3, 0.3, 1
    x.AddPt "Velocity", 4, 0.35, 1
    x.AddPt "Velocity", 5, 0.6, 1 '0.982
    x.AddPt "Velocity", 6, 0.62, 1.0
    x.AddPt "Velocity", 7, 0.702, 0.968
    x.AddPt "Velocity", 8, 0.95,  0.968
    x.AddPt "Velocity", 9, 1.03,  0.945
    x.AddPt "Velocity", 10, 1.5,  0.945



  Next

  ' SetObjects arguments: 1: name of object 2: flipper object: 3: Trigger object around flipper
  LF.SetObjects "LF", LeftFlipper, TriggerLF
  RF.SetObjects "RF", RightFlipper, TriggerRF
End Sub


'******************************************************
'  FLIPPER CORRECTION FUNCTIONS
'******************************************************

' modified 2023 by nFozzy
' Removed need for 'endpoint' objects
' Added 'createvents' type thing for TriggerLF / TriggerRF triggers.
' Removed AddPt function which complicated setup imo
' made DebugOn do something (prints some stuff in debugger)
'   Otherwise it should function exactly the same as before\
' modified 2024 by rothbauerw
' Added Reprocessballs for flipper collisions (LF.Reprocessballs Activeball and RF.Reprocessballs Activeball must be added to the flipper collide subs
' Improved handling to remove correction for backhand shots when the flipper is raised

Class FlipperPolarity
  Public DebugOn, Enabled
  Private FlipAt    'Timer variable (IE 'flip at 723,530ms...)
  Public TimeDelay    'delay before trigger turns off and polarity is disabled
  Private Flipper, FlipperStart, FlipperEnd, FlipperEndY, LR, PartialFlipCoef, FlipStartAngle
  Private Balls(20), balldata(20)
  Private Name

  Dim PolarityIn, PolarityOut
  Dim VelocityIn, VelocityOut
  Dim YcoefIn, YcoefOut
  Public Sub Class_Initialize
    ReDim PolarityIn(0)
    ReDim PolarityOut(0)
    ReDim VelocityIn(0)
    ReDim VelocityOut(0)
    ReDim YcoefIn(0)
    ReDim YcoefOut(0)
    Enabled = True
    TimeDelay = 50
    LR = 1
    Dim x
    For x = 0 To UBound(balls)
      balls(x) = Empty
      Set Balldata(x) = new SpoofBall
    Next
  End Sub

  Public Sub SetObjects(aName, aFlipper, aTrigger)

    If TypeName(aName) <> "String" Then MsgBox "FlipperPolarity: .SetObjects error: first argument must be a String (And name of Object). Found:" & TypeName(aName) End If
    If TypeName(aFlipper) <> "Flipper" Then MsgBox "FlipperPolarity: .SetObjects error: Second argument must be a flipper. Found:" & TypeName(aFlipper) End If
    If TypeName(aTrigger) <> "Trigger" Then MsgBox "FlipperPolarity: .SetObjects error: third argument must be a trigger. Found:" & TypeName(aTrigger) End If
    If aFlipper.EndAngle > aFlipper.StartAngle Then LR = -1 Else LR = 1 End If
    Name = aName
    Set Flipper = aFlipper
    FlipperStart = aFlipper.x
    FlipperEnd = Flipper.Length * Sin((Flipper.StartAngle / 57.295779513082320876798154814105)) + Flipper.X ' big floats for degree to rad conversion
    FlipperEndY = Flipper.Length * Cos(Flipper.StartAngle / 57.295779513082320876798154814105)*-1 + Flipper.Y

    Dim str
    str = "Sub " & aTrigger.name & "_Hit() : " & aName & ".AddBall ActiveBall : End Sub'"
    ExecuteGlobal(str)
    str = "Sub " & aTrigger.name & "_UnHit() : " & aName & ".PolarityCorrect ActiveBall : End Sub'"
    ExecuteGlobal(str)

  End Sub

  ' Legacy: just no op
  Public Property Let EndPoint(aInput)

  End Property

  Public Sub AddPt(aChooseArray, aIDX, aX, aY) 'Index #, X position, (in) y Position (out)
    Select Case aChooseArray
      Case "Polarity"
        ShuffleArrays PolarityIn, PolarityOut, 1
        PolarityIn(aIDX) = aX
        PolarityOut(aIDX) = aY
        ShuffleArrays PolarityIn, PolarityOut, 0
      Case "Velocity"
        ShuffleArrays VelocityIn, VelocityOut, 1
        VelocityIn(aIDX) = aX
        VelocityOut(aIDX) = aY
        ShuffleArrays VelocityIn, VelocityOut, 0
      Case "Ycoef"
        ShuffleArrays YcoefIn, YcoefOut, 1
        YcoefIn(aIDX) = aX
        YcoefOut(aIDX) = aY
        ShuffleArrays YcoefIn, YcoefOut, 0
    End Select
  End Sub

  Public Sub AddBall(aBall)
    Dim x
    For x = 0 To UBound(balls)
      If IsEmpty(balls(x)) Then
        Set balls(x) = aBall
        Exit Sub
      End If
    Next
  End Sub

  Private Sub RemoveBall(aBall)
    Dim x
    For x = 0 To UBound(balls)
      If TypeName(balls(x) ) = "IBall" Then
        If aBall.ID = Balls(x).ID Then
          balls(x) = Empty
          Balldata(x).Reset
        End If
      End If
    Next
  End Sub

  Public Sub Fire()
    Flipper.RotateToEnd
    processballs
  End Sub

  Public Property Get Pos 'returns % position a ball. For debug stuff.
    Dim x
    For x = 0 To UBound(balls)
      If Not IsEmpty(balls(x)) Then
        pos = pSlope(Balls(x).x, FlipperStart, 0, FlipperEnd, 1)
      End If
    Next
  End Property

  Public Sub ProcessBalls() 'save data of balls in flipper range
    FlipAt = GameTime
    Dim x
    For x = 0 To UBound(balls)
      If Not IsEmpty(balls(x)) Then
        balldata(x).Data = balls(x)
      End If
    Next
    FlipStartAngle = Flipper.currentangle
    PartialFlipCoef = ((Flipper.StartAngle - Flipper.CurrentAngle) / (Flipper.StartAngle - Flipper.EndAngle))
    PartialFlipCoef = abs(PartialFlipCoef-1)
  End Sub

  Public Sub ReProcessBalls(aBall) 'save data of balls in flipper range
    If FlipperOn() Then
      Dim x
      For x = 0 To UBound(balls)
        If Not IsEmpty(balls(x)) Then
          if balls(x).ID = aBall.ID Then
            If isempty(balldata(x).ID) Then
              balldata(x).Data = balls(x)
            End If
          End If
        End If
      Next
    End If
  End Sub

  'Timer shutoff for polaritycorrect
  Private Function FlipperOn()
    If GameTime < FlipAt+TimeDelay Then
      FlipperOn = True
    End If
  End Function

  Public Sub PolarityCorrect(aBall)
    If FlipperOn() Then
      Dim tmp, BallPos, x, IDX, Ycoef, BalltoFlip, BalltoBase, NoCorrection, checkHit
      Ycoef = 1

      'y safety Exit
      If aBall.VelY > -8 Then 'ball going down
        RemoveBall aBall
        Exit Sub
      End If

      'Find balldata. BallPos = % on Flipper
      For x = 0 To UBound(Balls)
        If aBall.id = BallData(x).id And Not IsEmpty(BallData(x).id) Then
          idx = x
          BallPos = PSlope(BallData(x).x, FlipperStart, 0, FlipperEnd, 1)
          BalltoFlip = DistanceFromFlipperAngle(BallData(x).x, BallData(x).y, Flipper, FlipStartAngle)
          If ballpos > 0.65 Then  Ycoef = LinearEnvelope(BallData(x).Y, YcoefIn, YcoefOut)                'find safety coefficient 'ycoef' data
        End If
      Next

      If BallPos = 0 Then 'no ball data meaning the ball is entering and exiting pretty close to the same position, use current values.
        BallPos = PSlope(aBall.x, FlipperStart, 0, FlipperEnd, 1)
        If ballpos > 0.65 Then  Ycoef = LinearEnvelope(aBall.Y, YcoefIn, YcoefOut)                        'find safety coefficient 'ycoef' data
        NoCorrection = 1
      Else
        checkHit = 50 + (20 * BallPos)

        If BalltoFlip > checkHit or (PartialFlipCoef < 0.5 and BallPos > 0.22) Then
          NoCorrection = 1
        Else
          NoCorrection = 0
        End If
      End If

      'Velocity correction
      If Not IsEmpty(VelocityIn(0) ) Then
        Dim VelCoef
        VelCoef = LinearEnvelope(BallPos, VelocityIn, VelocityOut)

        'If partialflipcoef < 1 Then VelCoef = PSlope(partialflipcoef, 0, 1, 1, VelCoef)

        If Enabled Then aBall.Velx = aBall.Velx*VelCoef
        If Enabled Then aBall.Vely = aBall.Vely*VelCoef
      End If

      'Polarity Correction (optional now)
      If Not IsEmpty(PolarityIn(0) ) Then
        Dim AddX
        AddX = LinearEnvelope(BallPos, PolarityIn, PolarityOut) * LR

        If Enabled and NoCorrection = 0 Then aBall.VelX = aBall.VelX + 1 * (AddX*ycoef*PartialFlipcoef*VelCoef)
      End If
      If DebugOn Then debug.print "PolarityCorrect" & " " & Name & " @ " & GameTime & " " & Round(BallPos*100) & "%" & " AddX:" & Round(AddX,2) & " Vel%:" & Round(VelCoef*100)
    End If
    RemoveBall aBall
  End Sub
End Class

'******************************************************
'  FLIPPER POLARITY AND RUBBER DAMPENER SUPPORTING FUNCTIONS
'******************************************************

' Used for flipper correction and rubber dampeners
Sub ShuffleArray(ByRef aArray, byVal offset) 'shuffle 1d array
  Dim x, aCount
  aCount = 0
  ReDim a(UBound(aArray) )
  For x = 0 To UBound(aArray)   'Shuffle objects in a temp array
    If Not IsEmpty(aArray(x) ) Then
      If IsObject(aArray(x)) Then
        Set a(aCount) = aArray(x)
      Else
        a(aCount) = aArray(x)
      End If
      aCount = aCount + 1
    End If
  Next
  If offset < 0 Then offset = 0
  ReDim aArray(aCount-1+offset)   'Resize original array
  For x = 0 To aCount-1       'set objects back into original array
    If IsObject(a(x)) Then
      Set aArray(x) = a(x)
    Else
      aArray(x) = a(x)
    End If
  Next
End Sub

' Used for flipper correction and rubber dampeners
Sub ShuffleArrays(aArray1, aArray2, offset)
  ShuffleArray aArray1, offset
  ShuffleArray aArray2, offset
End Sub

' Used for flipper correction, rubber dampeners, and drop targets
Function BallSpeed(ball) 'Calculates the ball speed
  BallSpeed = Sqr(ball.VelX^2 + ball.VelY^2 + ball.VelZ^2)
End Function

' Used for flipper correction and rubber dampeners
Function PSlope(Input, X1, Y1, X2, Y2)    'Set up line via two points, no clamping. Input X, output Y
  Dim x, y, b, m
  x = input
  m = (Y2 - Y1) / (X2 - X1)
  b = Y2 - m*X2
  Y = M*x+b
  PSlope = Y
End Function

' Used for flipper correction
Class spoofball
  Public X, Y, Z, VelX, VelY, VelZ, ID, Mass, Radius
  Public Property Let Data(aBall)
    With aBall
      x = .x
      y = .y
      z = .z
      velx = .velx
      vely = .vely
      velz = .velz
      id = .ID
      mass = .mass
      radius = .radius
    End With
  End Property
  Public Sub Reset()
    x = Empty
    y = Empty
    z = Empty
    velx = Empty
    vely = Empty
    velz = Empty
    id = Empty
    mass = Empty
    radius = Empty
  End Sub
End Class

' Used for flipper correction and rubber dampeners
Function LinearEnvelope(xInput, xKeyFrame, yLvl)
  Dim y 'Y output
  Dim L 'Line
  'find active line
  Dim ii
  For ii = 1 To UBound(xKeyFrame)
    If xInput <= xKeyFrame(ii) Then
      L = ii
      Exit For
    End If
  Next
  If xInput > xKeyFrame(UBound(xKeyFrame) ) Then L = UBound(xKeyFrame)    'catch line overrun
  Y = pSlope(xInput, xKeyFrame(L-1), yLvl(L-1), xKeyFrame(L), yLvl(L) )

  If xInput <= xKeyFrame(LBound(xKeyFrame) ) Then Y = yLvl(LBound(xKeyFrame) )     'Clamp lower
  If xInput >= xKeyFrame(UBound(xKeyFrame) ) Then Y = yLvl(UBound(xKeyFrame) )    'Clamp upper

  LinearEnvelope = Y
End Function

'******************************************************
'  FLIPPER TRICKS
'******************************************************
' To add the flipper tricks you must
'  - Include a call to FlipperCradleCollision from within OnBallBallCollision subroutine
'  - Include a call the CheckLiveCatch from the LeftFlipper_Collide and RightFlipper_Collide subroutines
'  - Include FlipperActivate and FlipperDeactivate in the Flipper solenoid subs

RightFlipper.timerinterval = 1
Rightflipper.timerenabled = True

Sub RightFlipper_timer()
  FlipperTricks LeftFlipper, LFPress, LFCount, LFEndAngle, LFState
  FlipperTricks RightFlipper, RFPress, RFCount, RFEndAngle, RFState
  FlipperNudge RightFlipper, RFEndAngle, RFEOSNudge, LeftFlipper, LFEndAngle
  FlipperNudge LeftFlipper, LFEndAngle, LFEOSNudge,  RightFlipper, RFEndAngle
End Sub

Dim LFEOSNudge, RFEOSNudge

Sub FlipperNudge(Flipper1, Endangle1, EOSNudge1, Flipper2, EndAngle2)
  Dim b
  'Dim gBOT: gBOT = GetBalls

  If Flipper1.currentangle = Endangle1 And EOSNudge1 <> 1 Then
    EOSNudge1 = 1
    '   debug.print Flipper1.currentangle &" = "& Endangle1 &"--"& Flipper2.currentangle &" = "& EndAngle2
    If Flipper2.currentangle = EndAngle2 Then
      For b = 0 To UBound(gBOT)
        If FlipperTrigger(gBOT(b).x, gBOT(b).y, Flipper1) Then
          'Debug.Print "ball in flip1. exit"
          Exit Sub
        End If
      Next
      For b = 0 To UBound(gBOT)
        If FlipperTrigger(gBOT(b).x, gBOT(b).y, Flipper2) Then
'         Debug.Print "nudge in " & gBOT(b).vely
          gBOT(b).velx = gBOT(b).velx / 1.3
          gBOT(b).vely = gBOT(b).vely - 0.5
'         Debug.Print "nudge out --> " & gBOT(b).vely
        End If
      Next
    End If
  Else
    If Abs(Flipper1.currentangle) > Abs(EndAngle1) + 30 Then EOSNudge1 = 0
  End If
End Sub


Dim FCCDamping: FCCDamping = 0.4

Sub FlipperCradleCollision(ball1, ball2, velocity)
  if velocity < 0.7 then exit sub   'filter out gentle collisions
    Dim DoDamping, coef
    DoDamping = false
    'Check left flipper
    If LeftFlipper.currentangle = LFEndAngle Then
    If FlipperTrigger(ball1.x, ball1.y, LeftFlipper) OR FlipperTrigger(ball2.x, ball2.y, LeftFlipper) Then DoDamping = true
    End If
    'Check right flipper
    If RightFlipper.currentangle = RFEndAngle Then
    If FlipperTrigger(ball1.x, ball1.y, RightFlipper) OR FlipperTrigger(ball2.x, ball2.y, RightFlipper) Then DoDamping = true
    End If
    If DoDamping Then
    coef = FCCDamping
        ball1.velx = ball1.velx * coef: ball1.vely = ball1.vely * coef: ball1.velz = ball1.velz * coef
        ball2.velx = ball2.velx * coef: ball2.vely = ball2.vely * coef: ball2.velz = ball2.velz * coef
    End If
End Sub



'*************************************************
'  Check ball distance from Flipper for Rem
'*************************************************

Function Distance(ax,ay,bx,by)
  Distance = Sqr((ax - bx) ^ 2 + (ay - by) ^ 2)
End Function

Function DistancePL(px,py,ax,ay,bx,by) 'Distance between a point and a line where point Is px,py
  DistancePL = Abs((by - ay) * px - (bx - ax) * py + bx * ay - by * ax) / Distance(ax,ay,bx,by)
End Function

Function Radians(Degrees)
  Radians = Degrees * PI / 180
End Function

Function AnglePP(ax,ay,bx,by)
  AnglePP = Atn2((by - ay),(bx - ax)) * 180 / PI
End Function

Function DistanceFromFlipper(ballx, bally, Flipper)
  DistanceFromFlipper = DistancePL(ballx, bally, Flipper.x, Flipper.y, Cos(Radians(Flipper.currentangle + 90)) + Flipper.x, Sin(Radians(Flipper.currentangle + 90)) + Flipper.y)
End Function

Function DistanceFromFlipperAngle(ballx, bally, Flipper, Angle)
  DistanceFromFlipperAngle = DistancePL(ballx, bally, Flipper.x, Flipper.y, Cos(Radians(Angle + 90)) + Flipper.x, Sin(Radians(angle + 90)) + Flipper.y)
End Function

Function FlipperTrigger(ballx, bally, Flipper)
  Dim DiffAngle
  DiffAngle = Abs(Flipper.currentangle - AnglePP(Flipper.x, Flipper.y, ballx, bally) - 90)
  If DiffAngle > 180 Then DiffAngle = DiffAngle - 360

  If DistanceFromFlipper(ballx,bally,Flipper) < 48 And DiffAngle <= 90 And Distance(ballx,bally,Flipper.x,Flipper.y) < Flipper.Length Then
    FlipperTrigger = True
  Else
    FlipperTrigger = False
  End If
End Function

'*************************************************
'  End - Check ball distance from Flipper for Rem
'*************************************************

Dim LFPress, RFPress, LFCount, RFCount
Dim LFState, RFState
Dim EOST, EOSA,Frampup, FElasticity,FReturn
Dim RFEndAngle, LFEndAngle

Const FlipperCoilRampupMode = 0 '0 = fast, 1 = medium, 2 = slow (tap passes should work)

LFState = 1
RFState = 1
EOST = leftflipper.eostorque
EOSA = leftflipper.eostorqueangle
Frampup = LeftFlipper.rampup
FElasticity = LeftFlipper.elasticity
FReturn = LeftFlipper.return
'Const EOSTnew = 1.5 'EM's to late 80's - new recommendation by rothbauerw (previously 1)
Const EOSTnew = 1.2 '90's and later - new recommendation by rothbauerw (previously 0.8)
Const EOSAnew = 1
Const EOSRampup = 0
Dim SOSRampup
Select Case FlipperCoilRampupMode
  Case 0
    SOSRampup = 2.5
  Case 1
    SOSRampup = 6
  Case 2
    SOSRampup = 8.5
End Select

Const LiveCatch = 16
Const LiveElasticity = 0.45
Const SOSEM = 0.815
'   Const EOSReturn = 0.055  'EM's
'   Const EOSReturn = 0.045  'late 70's to mid 80's
Const EOSReturn = 0.035  'mid 80's to early 90's
'   Const EOSReturn = 0.025  'mid 90's and later

LFEndAngle = Leftflipper.endangle
RFEndAngle = RightFlipper.endangle

Sub FlipperActivate(Flipper, FlipperPress)
  FlipperPress = 1
  Flipper.Elasticity = FElasticity

  Flipper.eostorque = EOST
  Flipper.eostorqueangle = EOSA
End Sub

Sub FlipperDeactivate(Flipper, FlipperPress)
  FlipperPress = 0
  Flipper.eostorqueangle = EOSA
  Flipper.eostorque = EOST * EOSReturn / FReturn

  If Abs(Flipper.currentangle) <= Abs(Flipper.endangle) + 0.1 Then
    Dim b
    'Dim gBOT: gBOT = GetBalls

    For b = 0 To UBound(gBOT)
      If Distance(gBOT(b).x, gBOT(b).y, Flipper.x, Flipper.y) < 55 Then 'check for cradle
        If gBOT(b).vely >= - 0.4 Then gBOT(b).vely =  - 0.4
      End If
    Next
  End If
End Sub

Sub FlipperTricks (Flipper, FlipperPress, FCount, FEndAngle, FState)
  Dim Dir
  Dir = Flipper.startangle / Abs(Flipper.startangle) '-1 for Right Flipper

  If Abs(Flipper.currentangle) > Abs(Flipper.startangle) - 0.05 Then
    If FState <> 1 Then
      Flipper.rampup = SOSRampup
      Flipper.endangle = FEndAngle - 3 * Dir
      Flipper.Elasticity = FElasticity * SOSEM
      FCount = 0
      FState = 1
    End If
  ElseIf Abs(Flipper.currentangle) <= Abs(Flipper.endangle) And FlipperPress = 1 Then
    If FCount = 0 Then FCount = GameTime

    If FState <> 2 Then
      Flipper.eostorqueangle = EOSAnew
      Flipper.eostorque = EOSTnew
      Flipper.rampup = EOSRampup
      Flipper.endangle = FEndAngle
      FState = 2
    End If
  ElseIf Abs(Flipper.currentangle) > Abs(Flipper.endangle) + 0.01 And FlipperPress = 1 Then
    If FState <> 3 Then
      Flipper.eostorque = EOST
      Flipper.eostorqueangle = EOSA
      Flipper.rampup = Frampup
      Flipper.Elasticity = FElasticity
      FState = 3
    End If
  End If
End Sub

Const LiveDistanceMin = 5  'minimum distance In vp units from flipper base live catch dampening will occur
Const LiveDistanceMax = 114 'maximum distance in vp units from flipper base live catch dampening will occur (tip protection)
Const BaseDampen = 0.55

Sub CheckLiveCatch(ball, Flipper, FCount, parm) 'Experimental new live catch
    Dim Dir, LiveDist
    Dir = Flipper.startangle / Abs(Flipper.startangle)    '-1 for Right Flipper
    Dim LiveCatchBounce   'If live catch is not perfect, it won't freeze ball totally
    Dim CatchTime
    CatchTime = GameTime - FCount
    LiveDist = Abs(Flipper.x - ball.x)

    If CatchTime <= LiveCatch And parm > 3 And LiveDist > LiveDistanceMin And LiveDist < LiveDistanceMax Then
        If CatchTime <= LiveCatch * 0.5 Then   'Perfect catch only when catch time happens in the beginning of the window
            LiveCatchBounce = 0
        Else
            LiveCatchBounce = Abs((LiveCatch / 2) - CatchTime)  'Partial catch when catch happens a bit late
        End If

        If LiveCatchBounce = 0 And ball.velx * Dir > 0 And LiveDist > 30 Then ball.velx = 0

        If ball.velx * Dir > 0 And LiveDist < 30 Then
            ball.velx = BaseDampen * ball.velx
            ball.vely = BaseDampen * ball.vely
            ball.angmomx = BaseDampen * ball.angmomx
            ball.angmomy = BaseDampen * ball.angmomy
            ball.angmomz = BaseDampen * ball.angmomz
        Elseif LiveDist > 30 Then
            ball.vely = LiveCatchBounce * (32 / LiveCatch) ' Multiplier for inaccuracy bounce
            ball.angmomx = 0
            ball.angmomy = 0
            ball.angmomz = 0
        End If
    Else
        If Abs(Flipper.currentangle) <= Abs(Flipper.endangle) + 1 Then FlippersD.Dampenf ActiveBall, parm
    End If
End Sub



'******************************************************
'   ZDMP:  RUBBER  DAMPENERS
'******************************************************
' These are data mined bounce curves,
' dialed in with the in-game elasticity as much as possible to prevent angle / spin issues.
' Requires tracking ballspeed to calculate COR

' Put all the Post and Pin objects in dPosts collection. Make sure dPosts fires hit events.
Sub dPosts_Hit(idx)
  RubbersD.dampen ActiveBall
  TargetBouncer ActiveBall, 1.1
End Sub

' This collection contains the bottom sling posts. They are not in the dPosts collection so that the TargetBouncer is not applied to them, but they should still have dampening applied
' If you experience airballs with posts or targets, consider adding them to this collection
Sub NoTargetBouncer_Hit
    RubbersD.dampen ActiveBall
End Sub

' Put all the Sleeve objects in dSleeves collection. Make sure dSleeves fires hit events.
Sub dSleeves_Hit(idx)
  SleevesD.Dampen ActiveBall
  TargetBouncer ActiveBall, 0.7
End Sub

Dim RubbersD        'frubber
Set RubbersD = New Dampener
RubbersD.name = "Rubbers"
RubbersD.debugOn = False  'shows info in textbox "TBPout"
RubbersD.Print = False    'debug, reports In debugger (In vel, out cor); cor bounce curve (linear)

'for best results, try to match in-game velocity as closely as possible to the desired curve
'   RubbersD.addpoint 0, 0, 0.935   'point# (keep sequential), ballspeed, CoR (elasticity)
RubbersD.addpoint 0, 0, 1.1    'point# (keep sequential), ballspeed, CoR (elasticity)
RubbersD.addpoint 1, 3.77, 0.99
RubbersD.addpoint 2, 5.76, 0.967  'dont take this as gospel. if you can data mine rubber elasticitiy, please help!
RubbersD.addpoint 3, 15.84, 0.874
RubbersD.addpoint 4, 56, 0.64    'there's clamping so interpolate up to 56 at least

Dim SleevesD  'this is just rubber but cut down to 85%...
Set SleevesD = New Dampener
SleevesD.name = "Sleeves"
SleevesD.debugOn = False  'shows info in textbox "TBPout"
SleevesD.Print = False    'debug, reports In debugger (In vel, out cor)
SleevesD.CopyCoef RubbersD, 0.85

'######################### Add new FlippersD Profile
'######################### Adjust these values to increase or lessen the elasticity

Dim FlippersD
Set FlippersD = New Dampener
FlippersD.name = "Flippers"
FlippersD.debugOn = False
FlippersD.Print = False
FlippersD.addpoint 0, 0, 1.1
FlippersD.addpoint 1, 3.77, 0.99
FlippersD.addpoint 2, 6, 0.99

Class Dampener
  Public Print, debugOn   'tbpOut.text
  Public name, Threshold  'Minimum threshold. Useful for Flippers, which don't have a hit threshold.
  Public ModIn, ModOut
  Private Sub Class_Initialize
    ReDim ModIn(0)
    ReDim Modout(0)
  End Sub

  Public Sub AddPoint(aIdx, aX, aY)
    ShuffleArrays ModIn, ModOut, 1
    ModIn(aIDX) = aX
    ModOut(aIDX) = aY
    ShuffleArrays ModIn, ModOut, 0
    If GameTime > 100 Then Report
  End Sub

  Public Sub Dampen(aBall)
    If threshold Then
      If BallSpeed(aBall) < threshold Then Exit Sub
    End If
    Dim RealCOR, DesiredCOR, str, coef
    DesiredCor = LinearEnvelope(cor.ballvel(aBall.id), ModIn, ModOut )
    RealCOR = BallSpeed(aBall) / (cor.ballvel(aBall.id) + 0.0001)
    coef = desiredcor / realcor
    If debugOn Then str = name & " In vel:" & Round(cor.ballvel(aBall.id),2 ) & vbNewLine & "desired cor: " & Round(desiredcor,4) & vbNewLine & _
    "actual cor: " & Round(realCOR,4) & vbNewLine & "ballspeed coef: " & Round(coef, 3) & vbNewLine
    If Print Then Debug.print Round(cor.ballvel(aBall.id),2) & ", " & Round(desiredcor,3)

    aBall.velx = aBall.velx * coef
    aBall.vely = aBall.vely * coef
    aBall.velz = aBall.velz * coef
    If debugOn Then TBPout.text = str
  End Sub

  Public Sub Dampenf(aBall, parm) 'Rubberizer is handle here
    Dim RealCOR, DesiredCOR, str, coef
    DesiredCor = LinearEnvelope(cor.ballvel(aBall.id), ModIn, ModOut )
    RealCOR = BallSpeed(aBall) / (cor.ballvel(aBall.id) + 0.0001)
    coef = desiredcor / realcor
    If Abs(aball.velx) < 2 And aball.vely < 0 And aball.vely >  - 3.75 Then
      aBall.velx = aBall.velx * coef
      aBall.vely = aBall.vely * coef
      aBall.velz = aBall.velz * coef
    End If
  End Sub

  Public Sub CopyCoef(aObj, aCoef) 'alternative addpoints, copy with coef
    Dim x
    For x = 0 To UBound(aObj.ModIn)
      addpoint x, aObj.ModIn(x), aObj.ModOut(x) * aCoef
    Next
  End Sub

  Public Sub Report() 'debug, reports all coords in tbPL.text
    If Not debugOn Then Exit Sub
    Dim a1, a2
    a1 = ModIn
    a2 = ModOut
    Dim str, x
    For x = 0 To UBound(a1)
      str = str & x & ": " & Round(a1(x),4) & ", " & Round(a2(x),4) & vbNewLine
    Next
    TBPout.text = str
  End Sub
End Class

'******************************************************
'  TRACK ALL BALL VELOCITIES
'  FOR RUBBER DAMPENER AND DROP TARGETS
'******************************************************

Dim cor
Set cor = New CoRTracker

Class CoRTracker
  Public ballvel, ballvelx, ballvely

  Private Sub Class_Initialize
    ReDim ballvel(0)
    ReDim ballvelx(0)
    ReDim ballvely(0)
  End Sub

  Public Sub Update() 'tracks in-ball-velocity
    Dim str, b, highestID
    'allBalls = GetBalls

    For Each b In gBOT
      If b.id >= HighestID Then highestID = b.id
    Next

    If UBound(ballvel) < highestID Then ReDim ballvel(highestID)  'set bounds
    If UBound(ballvelx) < highestID Then ReDim ballvelx(highestID)  'set bounds
    If UBound(ballvely) < highestID Then ReDim ballvely(highestID)  'set bounds

    For Each b In gBOT
      ballvel(b.id) = BallSpeed(b)
      ballvelx(b.id) = b.velx
      ballvely(b.id) = b.vely
    Next
  End Sub
End Class

'******************************************************
'  ZTIM: Timers
'******************************************************

CorTimer.Interval = 10
CorTimer.Enabled = True
Sub CorTimer_Timer()
  Cor.Update
  DoSTAnim    'handle stand up target animations
End Sub




'******************************************************
'   ZBOU: VPW TargetBouncer for targets and posts by Iaakki, Wrd1972, Apophis
'******************************************************

Const TargetBouncerEnabled = 1    '0 = normal standup targets, 1 = bouncy targets
Const TargetBouncerFactor = 0.9   'Level of bounces. Recommmended value of 0.7-1.0

sub TargetBouncer(aBall,defvalue)
    dim zMultiplier, vel, vratio
    if TargetBouncerEnabled = 1 and aball.z < 30 then
        'debug.print "velx: " & aball.velx & " vely: " & aball.vely & " velz: " & aball.velz
        vel = BallSpeed(aBall)
        if aBall.velx = 0 then vratio = 1 else vratio = aBall.vely/aBall.velx
        Select Case Int(Rnd * 6) + 1
            Case 1: zMultiplier = 0.2*defvalue
      Case 2: zMultiplier = 0.25*defvalue
            Case 3: zMultiplier = 0.3*defvalue
      Case 4: zMultiplier = 0.4*defvalue
            Case 5: zMultiplier = 0.45*defvalue
            Case 6: zMultiplier = 0.5*defvalue
        End Select
        aBall.velz = abs(vel * zMultiplier * TargetBouncerFactor)
        aBall.velx = sgn(aBall.velx) * sqr(abs((vel^2 - aBall.velz^2)/(1+vratio^2)))
        aBall.vely = aBall.velx * vratio
        'debug.print "---> velx: " & aball.velx & " vely: " & aball.vely & " velz: " & aball.velz
        'debug.print "conservation check: " & BallSpeed(aBall)/vel
  end if
end sub


'******************************************************
' ZSSC: SLINGSHOT CORRECTION FUNCTIONS by apophis
'******************************************************
' To add these slingshot corrections:
'  - On the table, add the endpoint primitives that define the two ends of the Slingshot
'  - Initialize the SlingshotCorrection objects in InitSlingCorrection
'  - Call the .VelocityCorrect methods from the respective _Slingshot event sub

Dim LS
Set LS = New SlingshotCorrection
Dim RS
Set RS = New SlingshotCorrection

InitSlingCorrection

Sub InitSlingCorrection
  LS.Object = LeftSlingshot
  LS.EndPoint1 = EndPoint1LS
  LS.EndPoint2 = EndPoint2LS

  RS.Object = RightSlingshot
  RS.EndPoint1 = EndPoint1RS
  RS.EndPoint2 = EndPoint2RS

  'Slingshot angle corrections (pt, BallPos in %, Angle in deg)
  ' These values are best guesses. Retune them if needed based on specific table research.
  AddSlingsPt 0, 0.00, - 4
  AddSlingsPt 1, 0.45, - 7
  AddSlingsPt 2, 0.48,  0
  AddSlingsPt 3, 0.52,  0
  AddSlingsPt 4, 0.55,  7
  AddSlingsPt 5, 1.00,  4
End Sub

Sub AddSlingsPt(idx, aX, aY)    'debugger wrapper for adjusting flipper script In-game
  Dim a
  a = Array(LS, RS)
  Dim x
  For Each x In a
    x.addpoint idx, aX, aY
  Next
End Sub

'' The following sub are needed, however they may exist somewhere else in the script. Uncomment below if needed
'Dim PI: PI = 4*Atn(1)
'Function dSin(degrees)
' dsin = sin(degrees * Pi/180)
'End Function
'Function dCos(degrees)
' dcos = cos(degrees * Pi/180)
'End Function
'
'Function RotPoint(x,y,angle)
' dim rx, ry
' rx = x*dCos(angle) - y*dSin(angle)
' ry = x*dSin(angle) + y*dCos(angle)
' RotPoint = Array(rx,ry)
'End Function

Class SlingshotCorrection
  Public DebugOn, Enabled
  Private Slingshot, SlingX1, SlingX2, SlingY1, SlingY2

  Public ModIn, ModOut

  Private Sub Class_Initialize
    ReDim ModIn(0)
    ReDim Modout(0)
    Enabled = True
  End Sub

  Public Property Let Object(aInput)
    Set Slingshot = aInput
  End Property

  Public Property Let EndPoint1(aInput)
    SlingX1 = aInput.x
    SlingY1 = aInput.y
  End Property

  Public Property Let EndPoint2(aInput)
    SlingX2 = aInput.x
    SlingY2 = aInput.y
  End Property

  Public Sub AddPoint(aIdx, aX, aY)
    ShuffleArrays ModIn, ModOut, 1
    ModIn(aIDX) = aX
    ModOut(aIDX) = aY
    ShuffleArrays ModIn, ModOut, 0
    If GameTime > 100 Then Report
  End Sub

  Public Sub Report() 'debug, reports all coords in tbPL.text
    If Not debugOn Then Exit Sub
    Dim a1, a2
    a1 = ModIn
    a2 = ModOut
    Dim str, x
    For x = 0 To UBound(a1)
      str = str & x & ": " & Round(a1(x),4) & ", " & Round(a2(x),4) & vbNewLine
    Next
    TBPout.text = str
  End Sub


  Public Sub VelocityCorrect(aBall)
    Dim BallPos, XL, XR, YL, YR

    'Assign right and left end points
    If SlingX1 < SlingX2 Then
      XL = SlingX1
      YL = SlingY1
      XR = SlingX2
      YR = SlingY2
    Else
      XL = SlingX2
      YL = SlingY2
      XR = SlingX1
      YR = SlingY1
    End If

    'Find BallPos = % on Slingshot
    If Not IsEmpty(aBall.id) Then
      If Abs(XR - XL) > Abs(YR - YL) Then
        BallPos = PSlope(aBall.x, XL, 0, XR, 1)
      Else
        BallPos = PSlope(aBall.y, YL, 0, YR, 1)
      End If
      If BallPos < 0 Then BallPos = 0
      If BallPos > 1 Then BallPos = 1
    End If

    'Velocity angle correction
    If Not IsEmpty(ModIn(0) ) Then
      Dim Angle, RotVxVy
      Angle = LinearEnvelope(BallPos, ModIn, ModOut)
      '   debug.print " BallPos=" & BallPos &" Angle=" & Angle
      '   debug.print " BEFORE: aBall.Velx=" & aBall.Velx &" aBall.Vely" & aBall.Vely
      RotVxVy = RotPoint(aBall.Velx,aBall.Vely,Angle)
      If Enabled Then aBall.Velx = RotVxVy(0)
      If Enabled Then aBall.Vely = RotVxVy(1)
      '   debug.print " AFTER: aBall.Velx=" & aBall.Velx &" aBall.Vely" & aBall.Vely
      '   debug.print " "
    End If
  End Sub
End Class



'**********************************
'   ZMAT: General Math Functions
'**********************************
' These get used throughout the script.

Dim PI
PI = 4 * Atn(1)

Function dSin(degrees)
  dsin = Sin(degrees * Pi / 180)
End Function

Function dCos(degrees)
  dcos = Cos(degrees * Pi / 180)
End Function

Function Atn2(dy, dx)
  If dx > 0 Then
    Atn2 = Atn(dy / dx)
  ElseIf dx < 0 Then
    If dy = 0 Then
      Atn2 = pi
    Else
      Atn2 = Sgn(dy) * (pi - Atn(Abs(dy / dx)))
    End If
  ElseIf dx = 0 Then
    If dy = 0 Then
      Atn2 = 0
    Else
      Atn2 = Sgn(dy) * pi / 2
    End If
  End If
End Function

Function ArcCos(x)
  If x = 1 Then
    ArcCos = 0/180*PI
  ElseIf x = -1 Then
    ArcCos = 180/180*PI
  Else
    ArcCos = Atn(-x/Sqr(-x * x + 1)) + 2 * Atn(1)
  End If
End Function

Function max(a,b)
  If a > b Then
    max = a
  Else
    max = b
  End If
End Function

Function min(a,b)
  If a > b Then
    min = b
  Else
    min = a
  End If
End Function

' Used for drop targets
Function InRect(px,py,ax,ay,bx,by,cx,cy,dx,dy) 'Determines if a Points (px,py) is inside a 4 point polygon A-D in Clockwise/CCW order
  Dim AB, BC, CD, DA
  AB = (bx * py) - (by * px) - (ax * py) + (ay * px) + (ax * by) - (ay * bx)
  BC = (cx * py) - (cy * px) - (bx * py) + (by * px) + (bx * cy) - (by * cx)
  CD = (dx * py) - (dy * px) - (cx * py) + (cy * px) + (cx * dy) - (cy * dx)
  DA = (ax * py) - (ay * px) - (dx * py) + (dy * px) + (dx * ay) - (dy * ax)

  If (AB <= 0 And BC <= 0 And CD <= 0 And DA <= 0) Or (AB >= 0 And BC >= 0 And CD >= 0 And DA >= 0) Then
    InRect = True
  Else
    InRect = False
  End If
End Function

Function InRotRect(ballx,bally,px,py,angle,ax,ay,bx,by,cx,cy,dx,dy)
  Dim rax,ray,rbx,rby,rcx,rcy,rdx,rdy
  Dim rotxy
  rotxy = RotPoint(ax,ay,angle)
  rax = rotxy(0) + px
  ray = rotxy(1) + py
  rotxy = RotPoint(bx,by,angle)
  rbx = rotxy(0) + px
  rby = rotxy(1) + py
  rotxy = RotPoint(cx,cy,angle)
  rcx = rotxy(0) + px
  rcy = rotxy(1) + py
  rotxy = RotPoint(dx,dy,angle)
  rdx = rotxy(0) + px
  rdy = rotxy(1) + py

  InRotRect = InRect(ballx,bally,rax,ray,rbx,rby,rcx,rcy,rdx,rdy)
End Function

Function RotPoint(x,y,angle)  'FIXME  does inrotrect really use RH rotations??
  Dim rx, ry
  rx = x * dCos(angle) - y * dSin(angle)
  ry = x * dSin(angle) + y * dCos(angle)
  RotPoint = Array(rx,ry)
End Function

Function RotPointLH(x,y,angle)  'Left Handed
  Dim rx, ry
  rx = x * dCos(angle) + y * dSin(angle)
  ry = - x * dSin(angle) + y * dCos(angle)
  RotPointLH = Array(rx,ry)
End Function



Function FormatScore(ByVal Num) 'it returns a string with commas
    dim i
    dim NumString

    NumString = CStr(abs(Num))

    For i = Len(NumString)-3 to 1 step -3
        if IsNumeric(mid(NumString, i, 1))then
            NumString = left(NumString, i) & "," & right(NumString, Len(NumString)-i)
        end if
    Next
    FormatScore = NumString
End function


Sub EnableBatCompPulse(bEnable)
  if bEnable then
    SetLightColor lArrowBatComp, "", 2
  Else
    SetLightColor lArrowBatComp, "", 0
  End if
  pFiliment7.visible = bEnable:l7.visible=bEnable:pFBase7.Visible = bEnable
  pFiliment8.visible = bEnable:l8.visible=bEnable:pFBase8.Visible = bEnable
  pFiliment9.visible = bEnable:l9.visible=bEnable:pFBase9.Visible = bEnable
  tmrBatCompPulse.Interval = 200
  if pFiliment10.visible or pFiliment7.visible then
    tmrBatCompPulse.Enabled = True
  else
    tmrBatCompPulse.Enabled = False
  End if
End Sub
Sub EnableCrimeAnaPulse(bEnable)
  if bEnable then
    SetLightColor lArrowBatAnalyzer, "", 2
  Else
    SetLightColor lArrowBatAnalyzer, "", 0
  End if
  pFiliment10.visible = bEnable:l10.visible=bEnable:pFBase10.Visible = bEnable
  pFiliment11.visible = bEnable:l11.visible=bEnable:pFBase11.Visible = bEnable
  pFiliment12.visible = bEnable:l12.visible=bEnable:pFBase12.Visible = bEnable
  tmrBatCompPulse.Interval = 200
  if pFiliment10.visible or pFiliment7.visible then
    tmrBatCompPulse.Enabled = True
  else
    tmrBatCompPulse.Enabled = False
  End if
End Sub

Sub tmrBatCompPulse_Timer()
  if pFiliment7.visible then
    Lampz.SetLamp 7, INT(RND*2)
    Lampz.SetLamp 8, INT(RND*2)
    Lampz.SetLamp 9, INT(RND*2)
  End if

  if pFiliment10.visible then
    Lampz.SetLamp 10, INT(RND*2)
    Lampz.SetLamp 11, INT(RND*2)
    Lampz.SetLamp 12, INT(RND*2)
  End if

End Sub


Sub flshCatwoman_Timer()
  dim i
  if bGameInPlay then
    for i = 0 to 5
      'if PlayerState(CurrentPlayer).GeTProgress(kMajV_S1CatWoman, kLightCat1+i) = 2 then
      if CatLight(i) = 2 then
        if Lampz.State(1+i) then
          Lampz.SetLamp 1+i, False
        Else
          Lampz.SetLamp 1+i, True
        End If
      'elseif PlayerState(CurrentPlayer).GeTProgress(kMajV_S1CatWoman, kLightCat1+i) = 1 then
      elseif CatLight(i) = 1 then
        Lampz.SetLamp 1+i, True
      'elseif PlayerState(CurrentPlayer).GeTProgress(kMajV_S1CatWoman, kLightCat1+i) = 0 then
      elseif CatLight(i) = 0 then
        Lampz.SetLamp 1+i, False
      End if
    Next
  Else                ' Do attract
    if Lampz.State(1) then
      Lampz.SetLamp 1, False
      Lampz.SetLamp 4, False
      Lampz.SetLamp 2, True
      Lampz.SetLamp 5, True
    elseif Lampz.State(2) then
      Lampz.SetLamp 2, False
      Lampz.SetLamp 5, False
      Lampz.SetLamp 3, True
      Lampz.SetLamp 6, True
    else
      Lampz.SetLamp 3, False
      Lampz.SetLamp 6, False
      Lampz.SetLamp 1, True
      Lampz.SetLamp 4, True
    End If
  End if
End Sub


Sub StartPFMultiplier()
  Dim Score
  PlayfieldMultiplier=0
  bFlash1Enabled = False
  DOF 128, DOFOff 'Beacon Off

  PlaySoundVol "sfx-PFM1", VolSfx       ' Always play the same clip
  DoPFMScene sSwapPos, 0

' if PlayMultiplier=1 then
'   PlaySoundVol "sfx-PFM1", VolSfx
' elseif PlayMultiplier=2 then
'   PlaySoundVol "sfx-PFM1", VolSfx     ' Not sure if this sound is different
'   ' Play Atomic Clip PFM1.mp4
'   DoPFMScene sSwapPos, 0
' else
'   PlaySoundVol "sfx-PFM1", VolSfx     ' Not sure if this sound is different
'   ' Play Atomic Clip PFM1.mp4
'   DoPFMScene sSwapPos, 1
' End if


  if PlayMultiplier<3 then PlayMultiplier=PlayMultiplier+1
  PlayMultiplierCnt=PlayMultiplierCnt+1
  bPlayMultiplierScene=True
  tmrPFM.Enabled=False
  tmrPFM.Interval=1000
  tmrPFM.UserValue=29+2
  tmrPFM.Enabled=True
  score = PlayMultiplierCnt*1000000

  puPlayer.LabelSet pBackglass,"GeneralCenter3", "" ,1,""
  puPlayer.LabelSet pBackglass,"GeneralCenter1", PlayMultiplier & "x PLAYFIELD MULTIPLIER" ,1,"{'mt':2,'shadowcolor':0, 'shadowstate': 1, 'xoffset': 1, 'yoffset': 1,'outline':1}"
  puPlayer.LabelSet pBackglass,"GeneralCenter2", FormatScore(score) ,1,"{'mt':2,'shadowcolor':0, 'shadowstate': 1, 'xoffset': 1,'yoffset': 1,'outline':1}"

  ' Clear popup Text
  VPMTimer.AddTimer 3000, "bPlayMultiplierScene=False:puPlayer.LabelSet pBackglass,""GeneralCenter1"", """" ,1,"""":puPlayer.LabelSet pBackglass,""GeneralCenter2"", """" ,1,"""" '"

  UpdateNumberPlayers

End Sub

Sub tmrPFM_Timer()
  Dim bDisabled:bDisabled=False
  if tmrPauseTimers.Enabled then bDisabled=True
  if PlayerState(CurrentPlayer).isAwardActive(kMinV_S2MrFreeze) then bDisabled=True   ' Mr Freeze Freezes Timers

  If bDisabled=False then tmrPFM.UserValue=tmrPFM.UserValue-1           ' Dont subtract if we are disabled but still call so we refresh in case focus moved

  if tmrPFM.UserValue>2 then
    puPlayer.LabelSet pBackglass,"PFMTimeText", tmrPFM.UserValue-2 ,1,"{'mt':2,'yalign':1,'xalign':1,'ypos':73,'xpos':50}"
  else
    puPlayer.LabelSet pBackglass,"PFMTimeText", "0" ,1,"{'mt':2,'yalign':1,'xalign':1,'ypos':73,'xpos':50}"
    if tmrPFM.UserValue <=0 then
      StopPFMTimer
    End if
  End if
End sub

Sub StopPFMTimer
  tmrPFM.Enabled=False
  if PlayfieldMultiplier=1 then
    PlayfieldMultiplier=0
    bFlash1Enabled = False
    DOF 128, DOFOff 'Beacon Off
  End if
  PlayMultiplierCnt=0
  PlayMultiplier=1
  puPlayer.LabelSet pBackglass,"PFMOn",   "PuPOverlays\\clear.png" ,1,"{'mt':2,'zback':1,'width':12.343, 'height':16.11,'yalign':1,'xalign':1,'ypos':78,'xpos':31}"
  puPlayer.LabelSet pBackglass,"PFMTime", "PuPOverlays\\clear.png" ,1,"{'mt':2,'zback':1, 'width': 6.87,  'height':12.22,'yalign':1,'xalign':1,'ypos':73,'xpos':50}"
  puPlayer.LabelSet pBackglass,"PFMX",    "PuPOverlays\\clear.png" ,1,"{'mt':2,'zback':1,'width':12.343, 'height':16.11,'yalign':1,'xalign':1,'ypos':78,'xpos':69}"
  puPlayer.LabelSet pBackglass,"PFMTimeText", "" ,1,"{'mt':2,'yalign':1,'xalign':1,'ypos':73,'xpos':50}"
  puPlayer.LabelSet pBackglass,"GeneralCenter1", "" ,1,""
  puPlayer.LabelSet pBackglass,"GeneralCenter2", "" ,1,""
End Sub


Dim bSpinCollectJP
Sub CheckSpinner()
  Dim jp
  dim spinnerBase

  if lArrowSpinner.state = 2 then
'WriteToLog "     ", "CheckSpinner: Hits:" & PlayerState(CurrentPlayer).SpinnerLevelHits & " Lvl:" & PlayerState(CurrentPlayer).SpinnerLevel
    ' Every 10 hits increase spinner level (TBD - Use DMDValue for these)
    PlayerState(CurrentPlayer).SpinnerLevelHits=PlayerState(CurrentPlayer).SpinnerLevelHits+1
    AddScore PlayerState(CurrentPlayer).SpinnerLevelVal

    if (PlayerState(CurrentPlayer).SpinnerLevel > DMDFet(kDMDFet_SpinAddlLvl) and PlayerState(CurrentPlayer).SpinnerLevelHits<=1) or _
      PlayerState(CurrentPlayer).SpinnerLevel >= DMDFet(kDMDFet_SpinMaxLvl) then

      bSpinCollectJP=True
      PlayerState(CurrentPlayer).SpinnerLevelVal=PlayerState(CurrentPlayer).SpinnerLevelVal+10000

      ShowPopupLabel 0, "^" & FormatScore(PlayerState(CurrentPlayer).SpinnerJP) , False, ""
      vpmtimer.AddTimer 2500, "ShowPopupLabel 0, """", True, """" '"

      AddScore PlayerState(CurrentPlayer).SpinnerJP

      PlayerState(CurrentPlayer).SpinnerJP=1000000 + (26000 * PlayerState(CurrentPlayer).SpinnerLevelHits)
      PlayerState(CurrentPlayer).SpinnerLevelHits=0
      PlayerState(CurrentPlayer).SpinnerLevel=0
    End if

    if PlayerState(CurrentPlayer).SpinnerLevelHits=DMDFet(kDMDFet_SpinHitsForLevel) then
      PlayerState(CurrentPlayer).SpinnerLevel=PlayerState(CurrentPlayer).SpinnerLevel+1
      PlayerState(CurrentPlayer).SpinnerLevelHits=0
    End if

'WriteToLog "     ", "CheckSpinner: CollectJP:" & bSpinCollectJP & " TmrSpinner:" & tmrSpinner.enabled

    if bSpinCollectJP = False then
      PlayerState(CurrentPlayer).SpinnerJP=PlayerState(CurrentPlayer).SpinnerJP + PlayerState(CurrentPlayer).SpinnerLevelVal
      if tmrSpinner.enabled=False then
        ShowPopupLabel 0, "SPINNER=" & FormatScore(PlayerState(CurrentPlayer).SpinnerLevelVal) & "^JACKPOT=" & FormatScore(PlayerState(CurrentPlayer).SpinnerJP) , False, ""
        DoSpinnerScene sSwapPos
      else
        puPlayer.LabelSet pBackglass, "PopT2", "JACKPOT=" & FormatScore(PlayerState(CurrentPlayer).SpinnerJP) ,1,""
      End if
      tmrSpinner.enabled=False    ' Delay popup until it stops spinning
      tmrSpinner.Interval=600
      tmrSpinner.enabled=True

    End if
  End if
End Sub

Sub tmrSpinner_Timer()
'WriteToLog "     ", "SpinnerTimer:"
  tmrSpinner.enabled=False
  if bSpinCollectJP=False then
    'ShowPopupLabel 0, "SPINNER=" & FormatScore(PlayerState(CurrentPlayer).SpinnerLevelVal) & "^JACKPOT=" & FormatScore(PlayerState(CurrentPlayer).SpinnerJP) , False, ""
    vpmtimer.AddTimer 2500, "StopSpinner False:ShowPopupLabel 0, """", True, """" '"
  else
    StopSpinner False
  End if

End Sub

Sub StartSpinner()
  AddScore 47500
  bSpinCollectJP=False
  SetSlowPulse lArrowSpinner
  SetLightColor lArrowSpinner, "", 2
End Sub

Sub StopSpinner(bClear)
  SetLightColor lArrowSpinner, "", 0

  ' TBD - Use DMDValue SpinnerCarryBall to Ball (Default is false so clear it)
  if bClear then
    PlayerState(CurrentPlayer).SpinnerJP=1000000
    PlayerState(CurrentPlayer).SpinnerLevelVal=50000
    PlayerState(CurrentPlayer).SpinnerLevelHits=0
  End if
End Sub


' Joker
Sub RPFA_Target01Pos1_Hit()
'WriteToLog "     ", "RPFA_Target01Pos1!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  mMagnaSave.MagnetOn = True
  VpmTimer.AddTimer 500, "mMagnaSave.MagnetOn = False '"
  SetShotMultiplier lArrowJoker, False      ' Shot Multiplier If Active
  CheckProgress(lArrowJoker)
  SetShotMultiplier lArrowJoker, True       ' Shot Multiplier If Active
End Sub
Sub RPFA_Target02Pos1_Hit()
'WriteToLog "     ", "RPFA_Target02Pos1!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  mMagnaSave.MagnetOn = True
  VpmTimer.AddTimer 500, "mMagnaSave.MagnetOn = False '"
  SetShotMultiplier lArrowJoker, False      ' Shot Multiplier If Active
  CheckProgress(lArrowJoker)
  SetShotMultiplier lArrowJoker, True       ' Shot Multiplier If Active
End Sub

' Batphone
Sub RPFA_Target03Pos2_Hit()
  SetShotMultiplier lArrowJoker, False      ' Shot Multiplier If Active
  CheckProgress(lBatPhone)
  SetShotMultiplier lArrowJoker, True       ' Shot Multiplier If Active
End Sub
Sub RPFA_Target04Pos2_Hit()
  SetShotMultiplier lArrowJoker, False      ' Shot Multiplier If Active
  CheckProgress(lBatPhone)
  SetShotMultiplier lArrowJoker, True       ' Shot Multiplier If Active
End Sub
Sub RPFA_Target03Pos1_hit()
  SetShotMultiplier lArrowJoker, False      ' Shot Multiplier If Active
  CheckProgress(lBatPhone)
  SetShotMultiplier lArrowJoker, True       ' Shot Multiplier If Active
End Sub
Sub RPFA_Target04Pos1_hit()
  SetShotMultiplier lArrowJoker, False      ' Shot Multiplier If Active
  CheckProgress(lBatPhone)
  SetShotMultiplier lArrowJoker, True       ' Shot Multiplier If Active
End Sub


' BatCave
Sub RPFA_Target07Pos4_Hit()   ' Inside Batcave
'WriteToLog "     ", "BATCAVE"
  SetShotMultiplier lArrowJoker, False      ' Shot Multiplier If Active
  CheckProgress(swBatcave)
  SetShotMultiplier lArrowJoker, True       ' Shot Multiplier If Active

  if PlayfieldMultiplier=1 then           ' Start Playfield Multiplier
    StartPFMultiplier
  End if
  DOF 208, DOFPulse 'BatCave Hit
End Sub

Dim bRPFA_Target05Pos4_Debounce:bRPFA_Target05Pos4_Debounce=False
Sub RPFA_Target05Pos4_Hit()   ' Bat Computer
  if bRPFA_Target05Pos4_Debounce then exit sub
  bRPFA_Target05Pos4_Debounce=True
  VPMTimer.AddTimer 400, "bRPFA_Target05Pos4_Debounce=False '"
  AddScore 30
  if PlayerState(CurrentPlayer).bMajQual then
    PlaySoundVol "sfx-BatComp", VolSfx
    DOF 206, DOFPulse 'Bat Computer Hit
    SetLightColor lArrowBatComp, "", 1

    CheckVillainMB False

    if lArrowBatComp.state=1 and lArrowBatAnalyzer.state=1 Then     ' Start 2/3x
      DoPFMScene sSwapPos, 1
      PlayfieldMultiplier=1
      bFlash1Enabled = True
      DOF 128, DOFOn  'Beacon On
      EnableBatCompPulse True
      EnableCrimeAnaPulse True
    else
      EnableBatCompPulse False
      SetLightColor lArrowBatComp, "", 1              ' Set it back to On sicne Enable turns it off
    End if
  End if
End Sub
Dim bRPFA_Target06Pos4_Debounce:bRPFA_Target06Pos4_Debounce=False
Sub RPFA_Target06Pos4_Hit()   ' Crime Analyer
  if bRPFA_Target06Pos4_Debounce then exit sub
  bRPFA_Target06Pos4_Debounce=True
  VPMTimer.AddTimer 400, "bRPFA_Target06Pos4_Debounce=False '"

  AddScore 30
  if PlayerState(CurrentPlayer).bMajQual then
    PlaySoundVol "sfx-BatComp", VolSfx
    DOF 205, DOFPulse 'Bat Analyzer Hit
    SetLightColor lArrowBatAnalyzer, "", 1

    CheckVillainMB False

    if lArrowBatAnalyzer.state=1 and lArrowBatComp.state=1 Then     ' Start 2/3x
      DoPFMScene sSwapPos, 1
      PlayfieldMultiplier=1
      bFlash1Enabled = True
      DOF 128, DOFOn  'Beacon On
      EnableBatCompPulse True
      EnableCrimeAnaPulse True
    else
      EnableCrimeAnaPulse False
      SetLightColor lArrowBatAnalyzer, "", 1            ' Set it back to On
    End if
  End if
End Sub


' Standard things for all switches
Sub SwitchHit(switch)
''WriteToLog "     ", "SwitchHit:" & switch.name & " " & LastSwitchHit & " " & LastSwitchHit2
  PlayerState(CurrentPlayer).AddJackpot2 kMinV_S2EggHead, -1  ' Egghead makes targets 300000
  PlayerState(CurrentPlayer).AddJackpot2 kMinV_S3EggHead1, -1   ' Egghead makes targets 300000
  if PlayerState(CurrentPlayer).TProgress(kMinV_S2Shame) < 5 then
    PlayerState(CurrentPlayer).AddJackpot2 kMinV_S2Shame, 32500   ' Shame Wave 1
  End if
  if PlayerState(CurrentPlayer).TProgress(kMinV_S3Shame) < 5 then
    PlayerState(CurrentPlayer).AddJackpot2 kMinV_S3Shame, -1  ' Shame Wave 1 makes everything 32500
  End if


  LastSwitchHit2 = LastSwitchHit
  LastSwitchHit = switch.name
  CheckProgress(switch)
  CheckProgress(swGeneral)
' if switch.name <> "GateRightOrbit" and switch.name<>"swLeftOrbit" and switch.name <> "Kicker001" then
  if (tmrSkillshot.Enabled) then  ' During skillshot this is the only thing that will open the gate
'WriteToLog "     ", "CHECK VILLAIN1:" & switch.name & " last:" & LastSwitchHit
    if (switch.name="GateRightOrbit" and LastSwitchHit2<>"swPlungerLane") or _
      switch.name="swInlane1" or switch.name="swInlane2" or switch.name="swInlane3" then
      CheckVillainMB True
    End if
  Elseif switch.name<>"swLeftOrbit" and _
      (Not(LastSwitchHit="swLeftOrbit" and switch.name="trgVirtualGate")) and _
      switch.name <> "Kicker001" and _
      (Not(switch.name="GateRightOrbit" and LastSwitchHit2="swPlungerLane")) then
'WriteToLog "     ", "CHECK VILLAIN2:" & switch.name & " last:" & LastSwitchHit2
    CheckVillainMB True
  End if

End Sub


sub swPlungerLane_Hit()
LastSwitchHit = "swPlungerLane"

PlaySoundVol "sfx-ball-launch2", VolSfx

'flshLight.visible
  if tmrSkillshot.Enabled then
'WriteToLog "     ", "Saving UpperLaneStates:" & flshBat1.UserValue & " " & flshBat2.UserValue & " " & flshBat3.UserValue

    SaveUpperLaneStates(0)=flshBat1.UserValue     ' Save the states
    SaveUpperLaneStates(1)=flshBat2.UserValue
    SaveUpperLaneStates(2)=flshBat3.UserValue

    SetLightFlasher flshBat1, 0             ' Blank them
    SetLightFlasher flshBat2, 0
    SetLightFlasher flshBat3, 0

    SkillShotLaneStates(0)=0
    SkillShotLaneStates(1)=0
    SkillShotLaneStates(2)=0

    if lArrowPlunger3.state = 1 then SetLightFlasher flshBat1, 2:SkillShotLaneStates(0)=1:AddScore 50000    ' Setup flash
    if lArrowPlunger2.state = 1 then SetLightFlasher flshBat2, 2:SkillShotLaneStates(1)=1:AddScore 50000
    if lArrowPlunger1.state = 1 then SetLightFlasher flshBat3, 2:SkillShotLaneStates(2)=1:AddScore 50000

    'bSSLaneLightsEnabled=False   ' Stop the lights
    enableLaneLights False
    ChangeGi GI, "white", 1
    lArrowPlunger1.state = 0
    lArrowPlunger2.state = 0
    lArrowPlunger3.state = 0
  End if

  ' Always close the gate here
  if bBackGateIsOpen then
    OpenPFAGate False
  End if

  CheckGadget False   ' Set the gadget color
End Sub


Sub swPenguinBumpEntry_Hit()
  SwitchHit(swPenguinBumpEntry)
End Sub

Sub swCat1_Hit()
  SetShotMultiplier lArrowCat1, False       ' Shot Multiplier If Active

  ' Add Combo
  if LastSwitchHit="swCat2" or (LastSwitchHit="swRightInlane" and LastSwitchHit2="swCat2") then PlayerState(CurrentPlayer).AddCombo(0)

  if tmrSkillshot.Enabled=False then  ' Dont do it during plunger
    ' Pulse Combo
    PulseLight(lArrowCat2)
    PulseLight(lArrowPenguin)
    PulseLight(lArrowRiddler2)
  End if

  SwitchHit(swCat1)
  CheckProgress(lArrowCat1)
  AddScore 30
  SetShotMultiplier lArrowCat1, True      ' Shot Multiplier If Active
  DOF 627, DOFPulse 'Left Ramp
End Sub

Sub swCat2_Hit()
  SetShotMultiplier lArrowCat2, False       ' Shot Multiplier If Active

  ' Add Combo
  if LastSwitchHit="swCat1" or (LastSwitchHit="swLeftInlane" and LastSwitchHit2="swCat1") then PlayerState(CurrentPlayer).AddCombo(1)

  if tmrSkillshot.Enabled=False then  ' Dont do it during plunger
    ' Pulse Combo
    PulseLight(lArrowRiddler1)
    PulseLight(lArrowCat1)
    PulseLight(lArrowJoker)
  End if

  SwitchHit(swCat2)
  CheckProgress(lArrowCat2)
  AddScore 30
  SetShotMultiplier lArrowCat2, True      ' Shot Multiplier If Active
  DOF 628, DOFPulse 'Right Ramp
End Sub

Sub swLeftOrbit_Hit()
  ' Add Combo
  if LastSwitchHit="swCat2" or (LastSwitchHit="swRightInlane" and LastSwitchHit2="swCat2") then PlayerState(CurrentPlayer).AddCombo(0)

  if tmrSkillshot.Enabled=False then  ' Dont do it during plunger
    ' Pulse Combo
    PulseLight(lArrowCat2)
    PulseLight(lArrowPenguin)
    PulseLight(lArrowRiddler2)
  End if

  PlaySoundVol "sfx-RightOrbit1",VolSfx
  DOF 625, DOFPulse 'Riddler - Left Orbit

  AddScore 30           ' Base
  PauseTimers(-1)

'WriteToLog "     ", "swLeftOrbit LastSwitchHit:" & LastSwitchHit
  if LastSwitchHit <> "swLeftOrbit" and LastSwitchHit<>"trgVirtualGate" and LastSwitchHit<>"swLeftOrbitBatPole" then    ' See if we are going down the ramp and if so mark it as dummy
    CheckProgress(lArrowRiddler1)
    SwitchHit(swLeftOrbit)
  else
    LastSwitchHit2=LastSwitchHit                  ' Mark we hit but no processing (This is used to track ball going up orbit and then down without doing the full orbit)
    LastSwitchHit="swLeftOrbitDUMMY"
  End if

  BatPoleSeqFinish
End Sub

Sub trgVirtualGate_Hit()                    ' Virtual Gate Hit
  if LastSwitchHit="trgVirtualGate" then exit sub       ' double hit??

' WriteToLog "     ", "GATE2 HIT:" & LastSwitchHit          ' Use this since the back gate is unreliable
  if bBackGateIsOpen and (LastSwitchHit="swLeftOrbit" or LastSwitchHit="swLeftOrbitBatPole") then   ' close the gate so the ball can get by
    OpenPFAGate False
'   vpmtimer.addtimer 1000, "OpenPFAGate True' "
  End if

  if LastSwitchHit = "swLeftOrbit" then
    AwardExtraBall
  End if

  LastSwitchHit2=LastSwitchHit                  ' Mark we hit but no processing
  LastSwitchHit="trgVirtualGate"

  ' ************ Handle the virtual ball lock  *******
  if PlayersPlayingGame=1 and bBackGateIsOpen then            ' Shouldnt get here
    WriteToLog "     ", "ERROR: VirtualLock LastSwitchHit=" & LastSwitchHit2  ' MPT3k gets LastSwitchHit2=swLeftOrbitDUMMY  - -Figure this out
    PlaySoundVol "alarm", VolSfx
  End if

  if PlayersPlayingGame<>1 then                   ' This only applies to Multiplayer
    if bBackGateIsOpen=False then exit sub            ' ERROR - Ball cant hit then when back gate is closed
    vpmTimer.AddTimer 1000, "HandleLockTrough False '"
  End if
End Sub

Sub Gate005_Hit()
  PlaySound "rotaryHit2", 0, Vol(ActiveBall)+VolTable, AudioPan(ActiveBall), 0, Pitch(ActiveBall), 1, 0, AudioFade(ActiveBall)
End Sub

Sub Gate002_Hit()   ' Back Gate (Close the metal gate)
' MOVED to trgVirtualGate_Hit since this is unreliable
' 'WriteToLog "     ", "GATE2 HIT:" & LastSwitchHit
'
' AddScore 30           ' Base
' PauseTimers(-1)
' if bBackGateIsOpen then
'   OpenPFAGate False
''    vpmtimer.addtimer 1000, "OpenPFAGate True' "
' End if
' if LastSwitchHit = "swLeftOrbit" then
'   AwardExtraBall
'   CheckProgress(lArrowRiddler1)
' End if
End Sub

Sub GateRightOrbit_Hit()
  ' COMBO  - Do this before we loose the previous switch
  if LastSwitchHit="swCat1" or (LastSwitchHit="swLeftInlane" and LastSwitchHit2="swCat1") then
    PlayerState(CurrentPlayer).AddCombo(1)
    Gate002.Open=True                 ' Open the back gate for a tiny bit
    vpmTimer.AddTimer 500, "Gate002.Open=False '"
  End if

  if tmrSkillshot.Enabled=False then  ' Dont do it during plunger
    ' Pulse Combo
    PulseLight(lArrowRiddler1)
    PulseLight(lArrowCat1)
    PulseLight(lArrowJoker)
  End if

  if LastSwitchHit="GateRightOrbit" then exit sub   ' Two way switches generate multiple events
  SwitchHit(GateRightOrbit)
End Sub


Sub Gate004_Hit()
'WriteToLog "     ", "Gate004_HIT"
  if Gate004.Uservalue=0 then     ' 2 way gates need a debounce???

    PlaySoundVol "sfx-RightOrbit1",VolSfx
    DOF 626, DOFPulse 'Riddler Right Orbit

    AddScore 30           ' Base

    if bSkillshotsReady(1) then   ' Cancel Penguin Skillshot
      bSkillshotsReady(1)=False
      PlayerState(CurrentPlayer).SSetLightColorRestore kLightPengArrow    ' Clear the Penguin Skillshot
    End if

    Gate004.Uservalue=1               ' Set a debounce
    if PlungerSwitchHit=0 then AddScore 30      ' Add base score for shots lit
    if PlungerSwitchHit=1 then AddScore 60
    if PlungerSwitchHit=2 then AddScore 90
    PlungerSwitchHit=-1

'WriteToLog "     ", " Gate004 SkillshotEnabled:" & tmrSkillshot.Enabled

    if tmrSkillshot.Enabled = False or bSkillshotsReady(2) Then   ' If we are in NormalGamePlay or SuperSkillshot then check Progress (Skip Autolaunch)
      if LastSwitchHit="GateRightOrbit" and LastSwitchHit2<>"swPlungerLane" then
        SetShotMultiplier lArrowRiddler2, False       ' Shot Multiplier If Active
        CheckProgress(lArrowRiddler2)
        SetShotMultiplier lArrowRiddler2, True      ' Shot Multiplier If Active

      End if
    End If

    if bSuperSkillShotReady1 then
      bSuperSkillShotReady1=False
      SuperSkillShotTime=tmrSkillshot.UserValue ' Save off the time to start 5 seconds from
      if SuperSkillShotTime=0 then SuperSkillShotTime=1   ' Default to 1 second
      bSkillshotsReady(2)=True
      Gate002.Open = True

      ' Cancel Normal Skillshot
      bSkillshotsReady(0)=False
      if flshBat1.UserValue=2 then SetLightFlasher flshBat1, SaveUpperLaneStates(0)
      if flshBat2.UserValue=2 then SetLightFlasher flshBat2, SaveUpperLaneStates(1)
      if flshBat3.UserValue=2 then SetLightFlasher flshBat3, SaveUpperLaneStates(2)

    End if

    EnableBallLock(True)  ' Activate the ball trough to capture balls

    vpmTimer.AddTimer 200, "Gate004.Uservalue=0 '"    ' clear debounce
  End if
End Sub


dim divAngle : divAngle = WallDoor2.objrotz
dim divTarget
const dMin = 3
const dMax = -36
const dSpeed = 8


Sub OpenPFAGate(bOpen)
  if bBackGateIsOpen <> bOpen then
    'make some sound
    if bOpen then
      PlaySoundAt "TOM_Diverter_UP_2", WallDoor2
    Else
      PlaySoundAt "TOM_Diverter_DOWN_2", WallDoor2
    end if

  end if

  if BallsInLock=BallsInLockVirtual or BallsInLockVirtual=2 then            ' If we are lined up or on the last lock
    WallDoor1.collidable=bOpen:WallDoor2.collidable=not bOpen
    if bOpen then
      divTarget = dMax
    Else
      divTarget = dMin
    end If
    divertAnim.enabled = true
  elseif bOpen=False then             'Everyone else does virtual locks (Always close though)
    WallDoor1.collidable=bOpen:WallDoor2.collidable=not bOpen
    divTarget = 3
    divertAnim.enabled = true
  End if
  bBackGateIsOpen = bOpen
End Sub

sub divertAnim_timer
  if divAngle < dMax Or divAngle > dMin Or divAngle = divTarget Then
    'move finished
    WallDoor2.objrotz = divTarget
    divertAnim.enabled = false
  end if

  if divTarget = dMax Then 'open it
    divAngle = divAngle - dSpeed
    if divAngle < dMax then divAngle = dMax
    WallDoor2.objrotz = divAngle
  Else
    divAngle = divAngle + dSpeed
    if divAngle > dMin then divAngle = dMin
    WallDoor2.objrotz = divAngle
  end if
end sub


Sub CheckDefSkillshot(light)
  if bSkillshotsReady(0) then
    if light.UserValue=2 then
      PlaySoundVol "Sfx-SkillShot3", VolSfx
      PlaySoundVol "B66-SS" & INT(RND*6)+1, VolDef    ' Add 6 because it doesnt do the sounds every now and then

      QueueFlushS sSwapPos
      QueueSceneS sSwapPos, "SceneSkillshot sSwapPos, 0, "& PlayerState(CurrentPlayer).SkillshotsValue(0)&" ", 1544, 1
      QueueSceneS sSwapPos, "StartLastScene ", -1, 1
      AddScore PlayerState(CurrentPlayer).SkillshotsValue(0)

      PlayerState(CurrentPlayer).SkillshotsValue(0)=PlayerState(CurrentPlayer).SkillshotsValue(0)+200000
      BonusMultiplier=BonusMultiplier+5
    End if
    if flshBat1.UserValue=2 then SetLightFlasher flshBat1, SaveUpperLaneStates(0)
    if flshBat2.UserValue=2 then SetLightFlasher flshBat2, SaveUpperLaneStates(1)
    if flshBat3.UserValue=2 then SetLightFlasher flshBat3, SaveUpperLaneStates(2)
    bSkillshotsReady(0)=False
    bSkillshotsReady(1)=False
    bSkillshotsReady(2)=False
    tmrSkillshot.Enabled = False
  End if
End Sub

Sub CheckTopLanes()
'WriteToLog "     ", "CheckTopLanes States:" & flshBat1.UserValue &" "& flshBat2.UserValue &" "& flshBat3.UserValue
  if flshBat1.UserValue=1 and flshBat2.UserValue=1 and flshBat3.UserValue=1 then
    AddScore 50000
    BonusMultiplier=BonusMultiplier+1
    ShowPopupLabel 3, "Top Lanes Completed^50,000 + 1 Bonus X^Bonus Now "&BonusMultiplier&"X", False, ""
    vpmtimer.AddTimer 2500, "ShowPopupLabel 3, """", True, """" '"
    SetLightFlasher flshBat1, 4
    SetLightFlasher flshBat2, 4
    SetLightFlasher flshBat3, 4

    PlayerState(CurrentPlayer).TakeJackpot=PlayerState(CurrentPlayer).TakeJackpot*2

  End if
End Sub

Sub CheckBottomLanes()
  if lBat1.state =1 and lBat2.state=1 and lBat3.state = 1 and lbat4.state=1 then
'   PlaySoundVol "sfx-inlane1", VolSfx
    PlaySoundVol "sfx-bottom-lanes", VolSfx
    SetLightColor lMystery, "",2
    BonusMultiplier=BonusMultiplier+1
    SpinnerBaseValue=SpinnerBaseValue+10000
    ShowPopupLabel 0, "Bottom Lanes Completed^+1 Bonus X, Bonus Now "&BonusMultiplier&"X^Spinner Is Lit, Value: " & FormatScore(PlayerState(CurrentPlayer).SpinnerLevelVal), False, ""
    vpmtimer.AddTimer 2500, "ShowPopupLabel 0, """", True, """" '"
    AddScore 50000
    StartSpinner

    lBat1.state =0
    lBat2.state =0
    lBat3.state =0
    lbat4.state =0
  End if
End Sub

Sub swInlane1_Hit()
'WriteToLog "     ", "INLANE1_HIT 1:" & flshBat1.UserValue
  EnableBallLock(True)      ' Enable in case a ball bounces up into the lock
  CheckDefSkillshot flshBat1
  SwitchHit(swInlane1)
  if flshBat1.UserValue=0 then SetLightFlasher flshBat1, 3
  CheckTopLanes()
  AddScore 2530
End Sub
Sub swInlane2_Hit()
'WriteToLog "     ", "INLANE1_HIT 2:" & flshBat2.UserValue
  EnableBallLock(True)      ' Enable in case a ball bounces up into the lock
  CheckDefSkillshot flshBat2
  SwitchHit(swInlane2)
  if flshBat2.UserValue=0 then SetLightFlasher flshBat2, 3
  CheckTopLanes()
  AddScore 2530
End Sub
Sub swInlane3_Hit()
'WriteToLog "     ", "INLANE1_HIT 3:" & flshBat3.UserValue
  EnableBallLock(True)      ' Enable in case a ball bounces up into the lock
  CheckDefSkillshot flshBat3
  SwitchHit(swInlane3)
  if flshBat3.UserValue=0 then SetLightFlasher flshBat3, 3
  CheckTopLanes()
  AddScore 2530
End Sub

Sub swLeftOutlane_Hit()
  if lBat1.state = 0 then
    PlaySoundVol "sfx-inlane3b", VolSfx
  else
    PlaySoundVol "sfx-inlane1", VolSfx
  End if
  if INT(RND*4)=0 then PlaySoundVol "b66-drain" & INT(RND*4)+1, VolSfx

  SetLightColor lBat1, "", 1
  CheckBottomLanes
  SwitchHit(swLeftOutlane)
  AddScore 2530

  If bBallSaverActive and bTableDisabled=False Then ' Quick add new ball
    DrainDummy_Hit()
' Else
'   if bGameInPlay then RandomVOSoundEndOfBall
  End if

  DOF 144, DOFPulse
End Sub
Sub swLeftInlane_Hit()
  if lBat2.state = 0 then
    PlaySoundVol "sfx-inlane3b", VolSfx
  else
    PlaySoundVol "sfx-inlane1", VolSfx
  End if
  SetLightColor lBat2, "", 1
  CheckBottomLanes
  SwitchHit(swLeftInlane)
  AddScore 2530
  DOF 145, DOFPulse
  'speed mod - iaakki
  if abs(activeball.AngMomZ) > 50 then activeball.AngMomZ = 50
  activeball.AngMomZ = -abs(activeball.AngMomZ) * 3       'anti skijump. Sorry Matti
  if activeball.vely > 14 then activeball.vely = 14       'anti speed. Sorry Vatanen
' debug.print activeball.AngMomZ & " speed: " & activeball.vely
End Sub
Sub swRightOutlane_Hit()
  if lBat4.state = 0 then
    PlaySoundVol "sfx-inlane3b", VolSfx
  else
    PlaySoundVol "sfx-inlane1", VolSfx
  End if
  if INT(RND*4)=0 then PlaySoundVol "b66-drain" & INT(RND*4)+1, VolSfx

  SetLightColor lBat4, "", 1
  CheckBottomLanes
  SwitchHit(swRightOutlane)
  AddScore 2530

  If bBallSaverActive and bTableDisabled=False Then ' Quick add new ball
    DrainDummy_Hit()
' Else
'   if bGameInPlay then RandomVOSoundEndOfBall
  End if



  DOF 148, DOFPulse
End Sub
Sub swRightInlane_Hit()
  if lBat3.state = 0 then
    PlaySoundVol "sfx-inlane3b", VolSfx
  else
    PlaySoundVol "sfx-inlane1", VolSfx
  End if
  SetLightColor lBat3, "", 1
  CheckBottomLanes
  SwitchHit(swRightInlane)
  AddScore 2530
  DOF 147, DOFPulse
  'speed mod - iaakki
  if abs(activeball.AngMomZ) > 50 then activeball.AngMomZ = 50
  activeball.AngMomZ = abs(activeball.AngMomZ) * 3        'anti skijump. Sorry Matti
  if activeball.vely > 14 then activeball.vely = 14       'anti speed. Sorry Vatanen
' debug.print activeball.AngMomZ & " speed: " & activeball.vely

End Sub

dim flshBat1Cnt:flshBat1Cnt=0
sub flshBat1_Timer
  flshBat1.visible=flshBat1.visible=False
  if flshBat1Cnt>0 then
    flshBat1Cnt=flshBat1Cnt-1
    if flshBat1Cnt=0 then
      flshBat1.TimerEnabled=False
      if flshBat1.UserValue=1 then
        flshBat1.visible=True
      else
        flshBat1.visible=False
      End if
    End if
  End If
End Sub
dim flshBat2Cnt:flshBat2Cnt=0
sub flshBat2_Timer
  flshBat2.visible=flshBat2.visible=False
  if flshBat2Cnt>0 then
    flshBat2Cnt=flshBat2Cnt-1
    if flshBat2Cnt=0 then
      flshBat2.TimerEnabled=False
      if flshBat2.UserValue=1 then
        flshBat2.visible=True
      else
        flshBat2.visible=False
      End if
    End if
  End If
End Sub
dim flshBat3Cnt:flshBat3Cnt=0
sub flshBat3_Timer
  flshBat3.visible=flshBat3.visible=False
  if flshBat3Cnt>0 then
    flshBat3Cnt=flshBat3Cnt-1
    if flshBat3Cnt=0 then
      flshBat3.TimerEnabled=False
      if flshBat3.UserValue=1 then
        flshBat3.visible=True
      else
        flshBat3.visible=False
      End if
    End if
  End If
End Sub
dim flshBatSignalCnt:flshBatSignalCnt=0
sub flshBatSignal_Timer
  flshBatSignal.visible=flshBatSignal.visible=False
  if flshBatSignalCnt>0 and flshBatSignal.UserValue=1 then
    flshBatSignalCnt=flshBatSignalCnt-1
    if flshBatSignalCnt=0 then flshBatSignal.TimerEnabled=False:flshBatSignal.visible=True
  End If
End Sub

Sub SetLightFlasher(flshLight, bState)      ' 0=Off, 1=On, 2=Flash, 3=FlashOn, 4=Flash Off
''WriteToLog "     ", "SetLightFlasher:" & flshLight.name & " " & flshLight.UserValue
  flshLight.TimerEnabled = False
  flshLight.UserValue = bState
  if bState = 0 then              ' Turn Off
    flshLight.visible = False
  elseif bState = 4 then            ' Flicker Off
    flshLight.visible=True
    flshLight.TimerInterval = 70
    flshLight.TimerEnabled = True
    flshLight.UserValue = 0
    Execute flshLight.name & "Cnt=4 '"
  Else
    if bState=1 then            ' On
      flshLight.visible=True
      Execute flshLight.name & "Cnt=0 '"
    Else                  ' Flash
      flshLight.visible=True
      flshLight.TimerInterval = 70
      flshLight.TimerEnabled = True
      if bState=3 then          ' Flicker On
        flshLight.UserValue = 1
        Execute flshLight.name & "Cnt=4 '"
      End if
    End if
  End if
''WriteToLog "     ", "     SetLightFlasher:" & flshLight.name & " " & flshLight.UserValue
End Sub

Sub GadgetsFlash()
  PlayerState(CurrentPlayer).bGadgetsFlashing=True
  LightSeqGadget.UpdateInterval = 25
  LightSeqGadget.Play SeqBlinking, , 5, 150
End Sub
Sub GadgetsStop()
  PlayerState(CurrentPlayer).bGadgetsFlashing=False
  LightSeqGadget.StopPlay()
End Sub
Sub LightSeqGadget_PlayDone()
  PlayerState(CurrentPlayer).bGadgetsFlashing=False
  GadgetsFlash
End Sub

Dim RGB_r
Dim RGB_g
Dim RGB_b
Sub SternButtonFlash(color, enabled)        'Ex: SternButtonFlash "white", True
  if enabled Then
''WriteToLog "     ", "Gadget Flash: " & color
    tmrSternButtonFlash.Enabled = False
    If color = "green" then             ' if color is blank just use what the color was before
      Flasherflash5_5.Color = RGB(0,255,0)
      Flasherflash5.ImageA = "domegreenflash"
      Flasherbase5.Image = "domegreenbase"
      Flasherlit5.Image = "domegreenlit"
      RGB_r=0:RGB_g=255:RGB_b=0
    elseif color = "white" then
      Flasherflash5_5.Color = RGB(255,255,255)
      Flasherflash5.ImageA = "domewhiteflash"
      Flasherbase5.Image = "domewhitebase"
      Flasherlit5.Image = "domewhitelit"
      RGB_r=255:RGB_g=255:RGB_b=255
    elseif color = "cyan" then
      Flasherflash5_5.Color = RGB(0,255,255)
      Flasherflash5.ImageA = "domecyanflash"
      Flasherbase5.Image = "domecyanbase"
      Flasherlit5.Image = "domecyanlit"
      RGB_r=0:RGB_g=255:RGB_b=255
    elseif color = "orange" then
      Flasherflash5_5.Color = RGB(255,165,0)
      Flasherflash5.ImageA = "domeorangeflash"
      Flasherbase5.Image = "domeorangebase"
      Flasherlit5.Image = "domeorangelit"
      RGB_r=255:RGB_g=165:RGB_b=0
    elseif color = "orangedark" then
      Flasherflash5_5.Color = RGB(204,85,0)
      Flasherflash5.ImageA = "domeorangedarkflash"
      Flasherbase5.Image = "domeorangedarkbase"
      Flasherlit5.Image = "domeorangedarklit"
      RGB_r=204:RGB_g=85:RGB_b=0
    elseif color = "red" then
      Flasherflash5_5.Color = RGB(255,0,0)
      Flasherflash5.ImageA = "domeredflash2"
      Flasherbase5.Image = "domeredbase"
      Flasherlit5.Image = "domeredlit"
      RGB_r=255:RGB_g=0:RGB_b=0
    elseif color = "blue" then
      Flasherflash5_5.Color = RGB(0,0,255)
      Flasherflash5.ImageA = "domeblueflash"
      Flasherbase5.Image = "domebluebase"
      Flasherlit5.Image = "domebluelit"
      RGB_r=0:RGB_g=0:RGB_b=255
    elseif color = "purple" then
      Flasherflash5_5.Color = RGB(128,0,128)
      Flasherflash5.ImageA = "domepurpleflash"
      Flasherbase5.Image = "domepurplebase"
      Flasherlit5.Image = "domepurplelit"
      RGB_r=128:RGB_g=0:RGB_b=128
    elseif color = "yellow" then
      Flasherflash5_5.Color = RGB(255,255,0)
      Flasherflash5.ImageA = "domeyellowflash"
      Flasherbase5.Image = "domeyellowbase"
      Flasherlit5.Image = "domeyellowlit"
      RGB_r=255:RGB_g=255:RGB_b=0
    elseif color = "white" then
      Flasherflash5_5.Color = RGB(255,255,255)
      Flasherflash5.ImageA = "domewhiteflash"
      Flasherbase5.Image = "domewhitebase"
      Flasherlit5.Image = "domewhitelit"
      RGB_r=255:RGB_g=255:RGB_b=255
    End If
    tmrSternButtonFlash.Interval=800
    tmrSternButtonFlash.Enabled = True
    DOF 141, DOFOn  'Fure Button Flashing
  elseif PlayerState(CurrentPlayer).Gadgets <= 0 or enabled=False then
    Flasherflash5_5.Color = RGB(255,255,255)
    RGB_r=0:RGB_g=255:RGB_b=0
    Flasherflash5.ImageA = "domewhiteflash"
    Flasherbase5.Image = "domewhitebase"
    Flasherlit5.Image = "domewhitelit"

    tmrSternButtonFlash.Enabled = False
    DOF 141, DOFOff 'Fire Button Off
  End If
End Sub

Dim FlashLevel5
Sub tmrSternButtonFlash_Timer
  FlashLevel5 = 1 : Flasherflash5_Timer
  If BallsOnPlayfield > 0 Then DOF 141, DOFPulse  'Fire Button
End Sub

Sub Flasherflash5_Timer
  dim flashx3, matdim
  If Flasherflash5.TimerEnabled = False Then
    Flasherflash5.TimerEnabled = True
    Flasherflash5_5.TimerEnabled = True
    Flasherflash5.visible = 1
    Flasherflash5_5.visible = 1
    Flasherlit5.visible = 1
  End If
  flashx3 = FlashLevel5 * FlashLevel5 * FlashLevel5
  Flasherflash5.opacity = 200 * flashx3
  Flasherflash5_5.opacity = 500 * flashx3
  Flasherlit5.BlendDisableLighting = 10 * flashx3
  Flasherbase5.BlendDisableLighting =  flashx3
  matdim = Round(10 * FlashLevel5)
  Flasherlit5.material = "domelit" & matdim
  FlashLevel5 = FlashLevel5 * 0.9 - 0.01
  If FlashLevel5 < 0.15 Then
    Flasherlit5.visible = 0
    DOF 114,0:DOF 115,0:DOF 116,0
  Else
    DOF 114,RGB_r:DOF 115,RGB_g:DOF 116,RGB_b
    Flasherlit5.visible = 1
  end If
  If FlashLevel5 < 0 Then
    Flasherflash5.TimerEnabled = False
    Flasherflash5_5.TimerEnabled = False
    Flasherflash5.visible = 0
    Flasherflash5_5.visible = 0
    DOF 114,0:DOF 115,0:DOF 116,0
  End If
End Sub

Sub CheckGadgetSpecial()  ' Special Gadget on diverter
  If (PlayerState(CurrentPlayer).Gadgets>0) and (lLock1.state=2 or lLock2.state=2 or lLock3.state=2) Then
    bCheckGadgetSpecialEnabled=True
    SternButtonFlash "yellow", True
  End if
End Sub

Sub CheckGadgetSpecialEnd()
  bCheckGadgetSpecialEnabled=False
  CheckGadget False
End Sub

Sub CheckGadget(bUseIt)   ' Execute the Gadget if we have one
  Dim bValid
  Dim a:a=0
  Dim i
  Dim Screen
  Dim wizardIdx
  bValid = False

  ' See if a wizard mode is active
  wizardIdx=-1
  For i = kWiz_VillainEscape to kWiz_Holy         ' End this wizard
    If PlayerState(CurrentPlayer).isActive(i) then
      wizardIdx=i
      exit for
    End if
  Next

'WriteToLog "     ", "Check Gadgets: " & bBallInPlungerLane & " " & bAutoPlunger & " " & bMultiBallMode

' if bBallInPlungerLane and bAutoPlunger=False and bMultiBallMode=False then  ' Flash white on launch
'   SternButtonFlash "white", True
'   Exit sub
' End if

  If (PlayerState(CurrentPlayer).Gadgets>0) and bSceneCollect=False and (PlayerState(CurrentPlayer).bMajQual or PlayerState(CurrentPlayer).bMinorActive or wizardIdx<>-1) Then
'WriteToLog "     ", "Check Gadgets"

    ' Gadget Lock
    if bCheckGadgetSpecialEnabled and bMultiBallMode=False then
      if bBackGateIsOpen=False and PlayerState(CurrentPlayer).bMajQual and (lLock1.state = 2 or lLock2.state=2 or lLock3.state=2) and BallsInLockVirtual<3 then
        OpenPFAGate True
        EnableBallLock(True)  ' Activate the ball trough to capture balls
      End if
    End if

    ' Gadgets only work on the main screen
    for i = 0 to kMAX_MODES
      ' This is the main screen
      if PlayerState(CurrentPlayer).Villains(i).pupScreen=sSwapPos _
        and ((i<=kMajV_S2Riddler and PlayerState(CurrentPlayer).isQual(i)=2) or i >kMajV_S2Riddler) then    ' Major Villian and its active, or other mode

        ' See if the crane or any lights left to right are active for this villain
        if (lCrane1.state<>1 or lCrane2.state<>1 or lCrane3.state<>1 or lCrane4.state<>1 or lCrane5.state<>1) and _
          (i=kMajV_S1Peng or i=kMajV_S2Peng) and UpdateCrane.Enabled=False then  ' Crane is parked at a flashing location for penguin
          a=-1
          bValid=True
        elseif PlayerState(CurrentPlayer).LightState(i, kLightRiddlerArrow1)<>0 then
          a=kLightRiddlerArrow1
          bValid=True
        elseif PlayerState(CurrentPlayer).LightState(i, kLightCatArrow1)<>0 then
          a=kLightCatArrow1
          bValid=True
        elseif PlayerState(CurrentPlayer).LightState(i, kLightJokerArrow)<>0 then
          a=kLightJokerArrow
          bValid=True
        elseif PlayerState(CurrentPlayer).LightState(i, kLightCatArrow2)<>0 then
          a=kLightCatArrow2
          bValid=True
        elseif PlayerState(CurrentPlayer).LightState(i, kLightPengArrow)<>0 Then
          if PlayerState(CurrentPlayer).LightState(i, kLightSuperJArrow)=0 then   ' Cant use Gadget on SJP
            a=kLightPengArrow
            bValid=True
          End if
        elseif PlayerState(CurrentPlayer).LightState(i, kLightRiddlerArrow2)<>0 then
          a=kLightRiddlerArrow2
          bValid=True
        elseif UpdateCrane.Enabled=False then

        End If

if a=-1 then
  'WriteToLog "     ", "Current Villain:" & i & " Light:" & a & " bValid:" & bValid & " bUseIt:" & bUseIt
else
  'WriteToLog "     ", "Current Villain:" & i & " Light:" & LightMap(a).name & " bValid:" & bValid & " bUseIt:" & bUseIt
End if


        if bValid then  ' See if we found a valid shot
          select case i
            case kMajV_S1Joker:
              SternButtonFlash "yellow", True
              if bUseIt then
                if PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)=7 and a=kLightJokerArrow then
                  ClearDebounce(i):ProgressJokerS1(swBatmobile)
                else
                  ClearDebounce(i):ProgressJokerS1(LightMap(a))
                End if
              End if
            case kMajV_S2Joker:
              SternButtonFlash "yellow", True
              if bUseIt then
                if PlayerState(CurrentPlayer).TProgress(kMajV_S1Joker)=7 and a=kLightJokerArrow then
                  ClearDebounce(i):ProgressJokerS2(swBatmobile)
                else
                  ClearDebounce(i):ProgressJokerS2(LightMap(a))
                End if
              End if
            case kMajV_S1CatWoman:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressCatWomanS1(LightMap(a))
            case kMajV_S2CatWoman:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressCatWomanS2(LightMap(a))
            case kMajV_S1Peng:
              SternButtonFlash "yellow", True
              if bUseIt and a=-1 then
                ClearDebounce(i):ProgressPengS1(lCrane0)  ' Target Crane first
              elseif bUseIt then
                ClearDebounce(i):ProgressPengS1(LightMap(a))
              End if
            case kMajV_S2Peng:
              SternButtonFlash "yellow", True
              if bUseIt and a=-1 then             ' Target Crane first
                ClearDebounce(i):ProgressPengS2(lCrane0)
              elseif bUseIt then
                ClearDebounce(i):ProgressPengS2(LightMap(a))
              End if
            case kMajV_S1Riddler:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressRiddlerS1(LightMap(a))
              if bUseIt and a=kLightRiddlerArrow1 then BatPoleSeqFinish     ' Gadget does both
            case kMajV_S2Riddler:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressRiddlerS2(LightMap(a))
              if bUseIt and a=kLightRiddlerArrow1 then BatPoleSeqFinish     ' Gadget does both
            case kMinV_S1MadHatter:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressS1MadHatter(LightMap(a))
            case kMinV_S2MadHatter:
              if PlayerState(CurrentPlayer).Villains(kMinV_S2MadHatter).lStates(a).color <> "pink" then   ' cant do pink shots
                SternButtonFlash "yellow", True
                if bUseIt then ClearDebounce(i):ProgressS2MadHatter(LightMap(a))
              else
                bValid=False
              End if
            case kMinV_S1KingTut:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressS1KingTut(LightMap(a))
            case kMinV_S2KingTut1:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressS2Tut1(LightMap(a))
            case kMinV_S2KingTut2:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressS2Tut2(LightMap(a))
            case kMinV_S3KingTut1:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressS3Tut1(LightMap(a))
            case kMinV_S3KingTut2:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressS3Tut2(LightMap(a))
            case kMinV_S1Bookworm:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressS1Bookworm(LightMap(a))
            case kMinV_S2EggHead:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressS2Egg1(LightMap(a))
            case kMinV_S3EggHead1:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressS3Egg1(LightMap(a))
            case kMinV_S3EggHead2 :
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressS3Egg2(LightMap(a))
            case kMinV_S2MrFreeze:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressS2Freeze(LightMap(a))
            case kMinV_S2Shame:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressS2Shame(LightMap(a))
            case kMinV_S3Shame:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressS3Shame(LightMap(a))
            case kWiz_VillainEscape:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressVESC(LightMap(a))
            case kWiz_VillainMB:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressVMB(LightMap(a))
            case kWiz_BatTurn:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressBatTurn(LightMap(a))
            case kWiz_Batusi:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressBatusi(LightMap(a))
            case kWiz_GasAttack:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressGas(LightMap(a))
            case kWiz_Holy:
              SternButtonFlash "yellow", True
              if bUseIt then ClearDebounce(i):ProgressHoly(LightMap(a))
          End Select
        End if

        exit for
      End If
    Next

'WriteToLog "     ", "CheckGadget cnt:" & PlayerState(CurrentPlayer).Gadgets & " bValid:" & bValid & " useIt:" & bUseIt
    If bValid and bUseIt Then
'     pDMDEvent(kDMD_UseHadron)
      PlaySoundVol "b66-gadget" & INT(RND*5)+1, VolDef
      PlayerState(CurrentPlayer).Gadgets = PlayerState(CurrentPlayer).Gadgets - 1
      if PlayerState(CurrentPlayer).Gadgets <= 0 Then
        SternButtonFlash "", False
      End If
    Elseif bUseIt = False then    ' See if we would have used the Hadron
      if PlayerState(CurrentPlayer).Gadgets <= 0 Then
        SternButtonFlash "", False
      End If
    End If
  Else
    SternButtonFlash "", False
  End If
End Sub


Sub Flasherflash20_Timer
  dim flashx3, matdim
  If Flasherflash20.TimerEnabled = False Then
    Flasherflash20.TimerEnabled = True
    Flasherflash20_1.TimerEnabled = True
    Flasherflash20.visible = 1
    Flasherflash20_1.visible = 1
'   Flasherlit1.visible = 1
  End If
  flashx3 = FlashLevel20 * FlashLevel20 * FlashLevel20
  Flasherflash20.opacity = 3000 * flashx3
' Flasherlit1.BlendDisableLighting = 30 * flashx3
  Flasherbase1.BlendDisableLighting =  flashx3
  Flasherflash20_1.opacity = 6000 * flashx3
  matdim = Round(10 * FlashLevel20)
' Flasherlit1.material = "domelit" & matdim
  FlashLevel20 = FlashLevel20 * 0.9 - 0.01
  If FlashLevel20 < 0.15 Then
    bFlash20Enabled=False
'   Flasherlit1.visible = 0
  Else
'   Flasherlit1.visible = 1
  end If
  If FlashLevel20 < 0 Then
    Flasherflash20.TimerEnabled = False
    Flasherflash20.visible = 0
    Flasherflash20_1.TimerEnabled = False
    FlasherFlash20_1.visible = 0
  End If
End Sub


Sub tmrAtomicFlash_Timer
  'tmrRedLightFlash.Enabled = False
  if bFlash1Enabled and Flasherflash1.TimerEnabled=False then FlashLevel1 = 1 : Flasherflash1_Timer
  if bFlash20Enabled and Flasherflash20.TimerEnabled=False then FlashLevel20 = 1 : Flasherflash20_Timer
End Sub

Sub Flasherflash1_Timer
  dim flashx3, matdim
  If Flasherflash1.TimerEnabled = False Then
    Flasherflash1.TimerEnabled = True
    FlasherFlash1_1.TimerEnabled = True
    Flasherflash1.visible = 1
    FlasherFlash1_1.visible = 1
    Flasherlit1.visible = 1
  End If
  flashx3 = FlashLevel1 * FlashLevel1 * FlashLevel1
  Flasherflash1.opacity = 3000 * flashx3
  Flasherlit1.BlendDisableLighting = 30 * flashx3
  Flasherbase1.BlendDisableLighting =  flashx3
  FlasherFlash1_1.opacity = 6000 * flashx3
  matdim = Round(10 * FlashLevel1)
  Flasherlit1.material = "domelit" & matdim
  FlashLevel1 = FlashLevel1 * 0.9 - 0.01
  If FlashLevel1 < 0.15 Then
    Flasherlit1.visible = 0
  Else
    Flasherlit1.visible = 1
  end If
  If FlashLevel1 < 0 Then
    Flasherflash1.TimerEnabled = False
    Flasherflash1.visible = 0
    Flasherflash1_1.TimerEnabled = False
    FlasherFlash1_1.visible = 0
  End If
End Sub


Sub tmrSkillshot_Timer()
  if tmrSkillshot.Enabled then
'WriteToLog "     ", "Skillshot Countdown: " & tmrSkillshot.UserValue & " " & bSkillshotsReady(2) & ":" & SuperSkillShotTime
    tmrSkillshot.UserValue=tmrSkillshot.UserValue+1
    ' ************************************************************************************************
    if tmrSkillshot.UserValue = 3 then                ' Penguin Clear
      if bSkillshotsReady(2)=False and bSkillshotsReady(1) = True then      ' Super Skillshot Not Ready and Penguin Shot is
        PlayerState(CurrentPlayer).SSetLightColorRestore kLightPengArrow    ' Clear the Penguin Skillshot
      End if
    elseif tmrSkillshot.UserValue = 4 then                ' Penguin Stop
      bSkillshotsReady(1) = False   ' Penguin


    ' ************************************************************************************************
    elseif tmrSkillshot.UserValue = 5 then                ' Normal Clear
      ' Clear the skillshot0 flashing
      bSkillshotsReady(0) = False   ' Shooter Lane
      if flshBat1.UserValue=2 then SetLightFlasher flshBat1, SaveUpperLaneStates(0)
      if flshBat2.UserValue=2 then SetLightFlasher flshBat2, SaveUpperLaneStates(0)
      if flshBat3.UserValue=2 then SetLightFlasher flshBat3, SaveUpperLaneStates(0)

    End if
    ' ************************************************************************************************
    if bSkillshotsReady(2) then

      if tmrSkillshot.UserValue = SuperSkillShotTime+5 then               ' Super Clear
        SuperSkillshotEnable False
        Gate002.Open = False
      elseif tmrSkillshot.UserValue = SuperSkillShotTime+7 then             ' Super Stop
        tmrSkillshot.Enabled = False
        bSkillshotsReady(2) = False   ' Hold Left, Loop around and hit Orb, Right Ramp or Right Orbit
      End if
    elseif tmrSkillshot.UserValue > 6 then
      ' No more skillshots... cancel the timer
      tmrSkillshot.Enabled = False
    End if

  End if

End Sub


dim LightSeqIdx:LightSeqIdx=0
Sub tmrMyLightSeq_Timer()
  'kMaxLightSeq
  lightSeqShooterLane(0)
  lightSeqGadgets(1)
  LightSeqUpperInlanes(2)

  if bGameInPlay=False and (Credits=0 or bFreePlay) then ' Stern cycles colors when in attract and no credits
    if LightSeqIdx=0 then SternButtonFlash "green", True
    if LightSeqIdx=10 then SternButtonFlash "cyan", True
    if LightSeqIdx=20 then SternButtonFlash "blue", True
    if LightSeqIdx=30 then SternButtonFlash "purple", True
    if LightSeqIdx=40 then SternButtonFlash "red", True
    if LightSeqIdx=50 then SternButtonFlash "orange", True
    if LightSeqIdx=60 then SternButtonFlash "orangedark", True
    if LightSeqIdx=70 then SternButtonFlash "yellow", True
    LightSeqIdx=LightSeqIdx+1
    if LightSeqIdx>70 then LightSeqIdx=0
    'tmrSternButtonFlash.Enabled = True
  elseif bGameInPlay=False and bFreePlay=False then
    SternButtonFlash "green", True
  End if

End Sub

Sub tmrMyLightSeq_StopPlay()
  lGadgetG1.state = 0
  lGadgetA.state = 0
  lGadgetD.state = 0
  lGadgetG2.state = 0
  lGadgetE.state = 0
  lGadgetT.state = 0

  flshBat1.visible = 0
  flshBat2.visible = 0
  flshBat3.visible = 0

End Sub


Sub CheckVillainMB(bSwitchHit)
'WriteToLog "     ", "CheckVillainMB"
  if PlayerState(CurrentPlayer).isActive(kWiz_VillainMB)=False and bMultiBallMode=False then          ' We are not in Villain MB or any other MB
'WriteToLog "     ", "CheckVillainMB2"

    ' We havent started making progress
    if PlayerState(CurrentPlayer).isEnabled(kWiz_VillainMB)=False then
      if BallsInLockVirtual=0 and PlayerState(CurrentPlayer).VillainMBCnt=0 then
        ' First one you get them all for free
        if (lArrowBatComp.state = 1 or lArrowBatAnalyzer.state = 1) then
          PlayerState(CurrentPlayer).SetBallLockStates 0, 2   ' Set lock1,2,3 to flash
          PlayerState(CurrentPlayer).SetBallLockStates 1, 2
          PlayerState(CurrentPlayer).SetBallLockStates 2, 2

          PlayerState(CurrentPlayer).VillainMBCnt=PlayerState(CurrentPlayer).VillainMBCnt+1
          DoBallLockScene sSwapPos, 0
          PlayerState(CurrentPlayer).SetEnabled(kWiz_VillainMB)=True
        End if
      elseif (lArrowBatAnalyzer.state = 1 and lArrowBatComp.state = 1 and PlayerState(CurrentPlayer).VillainMBCnt<>0) then  ' Need to work harder now
        if lLock1.state = 0 then
          PlayerState(CurrentPlayer).SetBallLockStates 0, 2
        elseif lLock2.state = 0 then
          PlayerState(CurrentPlayer).SetBallLockStates 1, 2
        elseif lLock3.state = 0 then
          PlayerState(CurrentPlayer).VillainMBCnt=PlayerState(CurrentPlayer).VillainMBCnt+1
          PlayerState(CurrentPlayer).SetBallLockStates 2, 2
          PlayerState(CurrentPlayer).SetEnabled(kWiz_VillainMB)=True
        End if
        DoBallLockScene sSwapPos, 0
      End if
    else
      if bLockIsLitCallout = False and bSwitchHit=False then
        PlaySoundVol "b66-lock-is-lit", VolDef
        bLockIsLitCallout=True
      End if
    End if

    ' Open back gate if the Ball Lock is flashing
    if bBackGateIsOpen=False and PlayerState(CurrentPlayer).bMajQual and (lLock1.state = 2 or lLock2.state=2 or lLock3.state=2) and BallsInLockVirtual<3 then
      OpenPFAGate True
    End if
  End if
End Sub


Sub lightSeqGadgets(idx)
  if bGameInPlay = False then             ' Attract
    myLightSeqCtr(idx)=(myLightSeqCtr(idx)+1) mod 3
    if myLightSeqCtr(idx) = 0 then
      lGadgetG1.state = 0
      lGadgetA.state = 0
      lGadgetD.state = 0
      lGadgetG2.state = 0
      lGadgetE.state = 0
      lGadgetT.state = 0
      Select case myLightSeqIdx(idx)
        case 0:lGadgetG1.state = 1
        case 1:lGadgetA.state = 1
        case 2:lGadgetD.state = 1
        case 3:lGadgetG2.state = 1
        case 4:lGadgetE.state = 1
        case 5:lGadgetT.state = 1
        case 6:lGadgetE.state = 1
        case 7:lGadgetG2.state = 1
        case 8:lGadgetD.state = 1
        case 9:lGadgetA.state = 1
      End Select
      myLightSeqIdx(idx) = (myLightSeqIdx(idx)+1) mod 10
    End If
  End If
End Sub

Sub LightSeqUpperInlanes(idx)
  if bGameInPlay = False then
    myLightSeqCtr(idx)=(myLightSeqCtr(idx)+1) mod 3
    if myLightSeqCtr(idx) = 0 then
      flshBat1.visible = 0
      flshBat2.visible = 0
      flshBat3.visible = 0
      select case myLightSeqIdx(idx)
        case 0:flshBat1.visible = 1
        case 1:flshBat2.visible = 1
        case 2:flshBat3.visible = 1
        case 3:flshBat2.visible = 1
      End Select
      myLightSeqIdx(idx) = (myLightSeqIdx(idx)+1) mod 4
    End if
  End if
End Sub

Sub SetSlowPulse3(Light)
  Light.blinkInterval=900
  Light.fadespeedUp=0.01
  Light.fadespeedDown=0.01
  Light.intensity=7
End Sub
Sub SetDefPulse3(Light)
  Light.blinkInterval=125
  Light.fadespeedUp=0.2
  Light.fadespeedDown=0.2
  Light.intensity=5
End Sub

Sub enableLaneLights(bEnable)
  dim light
  bSSLaneLightsEnabled=bEnable
  if bSSLaneLightsEnabled then
    ChangeGi GILane, "white", 1
    For Each light In GILane
      SetSlowPulse3(light)
      light.state=2
    Next
  else
    For Each light In GILane
      SetDefPulse3(light)
      light.state=1
    Next
  End if
End sub

Sub lightSeqShooterLane(idx)
  if bGameInPlay = False then             ' Attract
    myLightSeqCtr(idx)=(myLightSeqCtr(idx)+1) mod 3
    if myLightSeqCtr(idx) = 0 then
      lArrowPlunger1.state = 0
      lArrowPlunger2.state = 0
      lArrowPlunger3.state = 0
      select case myLightSeqIdx(idx)
        case 0:lArrowPlunger1.state = 1
        case 1:lArrowPlunger2.state = 1
        case 2:lArrowPlunger3.state = 1
      End Select
      myLightSeqIdx(idx) = (myLightSeqIdx(idx)+1) mod 3
    End if
  Elseif bSSLaneLightsEnabled Then
    myLightSeqCtr(idx)=(myLightSeqCtr(idx)+1) mod 46
    if myLightSeqCtr(idx) = 0 then
      lArrowPlunger1.state = 1
      lArrowPlunger2.state = 0
      lArrowPlunger3.state = 0
    elseif myLightSeqCtr(idx) = 5 then
      lArrowPlunger1.state = 1
      lArrowPlunger2.state = 1
      lArrowPlunger3.state = 0
    elseif myLightSeqCtr(idx) = 10 then
      lArrowPlunger1.state = 1
      lArrowPlunger2.state = 1
      lArrowPlunger3.state = 1
    elseif myLightSeqCtr(idx) = 15 then
      lArrowPlunger1.state = 0
      lArrowPlunger2.state = 1
      lArrowPlunger3.state = 1
    elseif myLightSeqCtr(idx) = 20 then
      lArrowPlunger1.state = 0
      lArrowPlunger2.state = 0
      lArrowPlunger3.state = 1
    elseif myLightSeqCtr(idx) = 25 then
      lArrowPlunger1.state = 0
      lArrowPlunger2.state = 0
      lArrowPlunger3.state = 0
    elseif myLightSeqCtr(idx) = 30 then
      lArrowPlunger1.state = 1
      lArrowPlunger2.state = 0
      lArrowPlunger3.state = 0
    elseif myLightSeqCtr(idx) = 35 then
      lArrowPlunger1.state = 0
      lArrowPlunger2.state = 1
      lArrowPlunger3.state = 0
    elseif myLightSeqCtr(idx) = 40 then
      lArrowPlunger1.state = 0
      lArrowPlunger2.state = 0
      lArrowPlunger3.state = 1
    elseif myLightSeqCtr(idx) = 45 then
      lArrowPlunger1.state = 0
      lArrowPlunger2.state = 0
      lArrowPlunger3.state = 0
    End if

  End if

End Sub


' ***************************************************************************************************
' ******************************  Lampz from funhouse
Dim MaterialWhiteArray: MaterialWhiteArray = Array("BulbWhiteOff", "BulbWhiteOff","BulbWhiteOff","BulbWhiteOn")
Dim MaterialBlueArray: MaterialBlueArray = Array("BulbBlueOff", "BulbBlueOff","BulbBlueOff","BulbBlueOn")
Dim MaterialRedArray: MaterialRedArray = Array("BulbRedOff", "BulbRedOff","BulbRedOff","BulbRedOn")
Dim MaterialYellowArray: MaterialYellowArray = Array("BulbYellowOff", "BulbYellowOff","BulbYellowOff","BulbYellowOn")

Dim NullFader : set NullFader = new NullFadingObject
Dim Lampz : Set Lampz = New LampFader
InitLampsNF              ' Setup lamp assignments
'LampTimer.Interval = -1
'LampTimer.Enabled = 1
'Lampz.SetLamp 1, True
'Lampz.SetLamp 1, True

Sub LampTimer()
  dim x, chglamp
  if b2son then chglamp = Controller.ChangedLamps
  If Not IsEmpty(chglamp) Then
    For x = 0 To UBound(chglamp)      'nmbr = chglamp(x, 0), state = chglamp(x, 1)
      Lampz.state(chglamp(x, 0)) = chglamp(x, 1)
    next
  End If
  Lampz.Update1 'update (fading logic only)
End Sub

dim FrameTime, InitFrameTime : InitFrameTime = 0
LampTimer2.Interval = -1
LampTimer2.Enabled = True
Sub LampTimer2_Timer()  'Stealing this random wall's timer for -1 updates
  FrameTime = gametime - InitFrameTime : InitFrameTime = gametime 'Count frametime. Unused atm?
  Lampz.Update 'updates on frametime (Object updates only)
End Sub

Function FlashLevelToIndex(Input, MaxSize)
  FlashLevelToIndex = cInt(MaxSize * Input)
End Function

'***Material Swap***
'Fade material for green, red, yellow colored Bulb prims
Sub FadeMaterialColoredBulb(pri, group, ByVal aLvl) 'cp's script
' if Lampz.UseFunction then aLvl = LampFilter(aLvl) 'Callbacks don't get this filter automatically
  if Lampz.UseFunction then aLvl = Lampz.FilterOut(aLvl)  'Callbacks don't get this filter automatically
    Select case FlashLevelToIndex(aLvl, 3)
    Case 0:pri.Material = group(0) 'Off
    Case 1:pri.Material = group(1) 'Fading...
    Case 2:pri.Material = group(2) 'Fading...
        Case 3:pri.Material = group(3) 'Full
    End Select
  'if tb.text <> pri.image then tb.text = pri.image : 'WriteToLog "     ", pri.image end If 'debug
pri.blenddisablelighting = aLvl * 1 'Intensity Adjustment
End Sub


'Fade material for red, yellow colored bulb Filiment prims
Sub FadeMaterialColoredFiliment(pri, group, ByVal aLvl) 'cp's script
' if Lampz.UseFunction then aLvl = LampFilter(aLvl) 'Callbacks don't get this filter automatically
  if Lampz.UseFunction then aLvl = Lampz.FilterOut(aLvl)  'Callbacks don't get this filter automatically
    Select case FlashLevelToIndex(aLvl, 3)
    Case 0:pri.Material = group(0) 'Off
    Case 1:pri.Material = group(1) 'Fading...
    Case 2:pri.Material = group(2) 'Fading...
        Case 3:pri.Material = group(3) 'Full
    End Select
  'if tb.text <> pri.image then tb.text = pri.image : 'WriteToLog "     ", pri.image end If 'debug
pri.blenddisablelighting = aLvl * 50  'Intensity Adjustment
End Sub


Sub InitLampsNF()

  'Filtering (comment out to disable)
  Lampz.Filter = "LampFilter" 'Puts all lamp intensityscale output (no callbacks) through this function before updating

  'Adjust fading speeds (1 / full MS fading time)
  dim x : for x = 0 to 140 : Lampz.FadeSpeedUp(x) = 3/10 : Lampz.FadeSpeedDown(x) = 3/10 : next

  'Lamp Assignments
  'MassAssign is an optional way to do assignments. It'll create arrays automatically / append objects to existing arrays
    Lampz.MassAssign(1)= l80
    Lampz.Callback(1) =         "FadeMaterialColoredBulb pFBase80, MaterialRedArray, "
    Lampz.Callback(1) = "FadeMaterialColoredFiliment pFiliment80, MaterialRedArray, "

    Lampz.MassAssign(2)= l81
    Lampz.Callback(2) =         "FadeMaterialColoredBulb pFBase81, MaterialRedArray, "
    Lampz.Callback(2) = "FadeMaterialColoredFiliment pFiliment81, MaterialRedArray, "

    Lampz.MassAssign(3)= l82
    Lampz.Callback(3) =         "FadeMaterialColoredBulb pFBase82, MaterialRedArray, "
    Lampz.Callback(3) = "FadeMaterialColoredFiliment pFiliment82, MaterialRedArray, "

    Lampz.MassAssign(4)= l83
    Lampz.Callback(4) =         "FadeMaterialColoredBulb pFBase83, MaterialRedArray, "
    Lampz.Callback(4) = "FadeMaterialColoredFiliment pFiliment83, MaterialRedArray, "

    Lampz.MassAssign(5)= l84
    Lampz.Callback(5) =         "FadeMaterialColoredBulb pFBase84, MaterialRedArray, "
    Lampz.Callback(5) = "FadeMaterialColoredFiliment pFiliment84, MaterialRedArray, "

    Lampz.MassAssign(6)= l85
    Lampz.Callback(6) =         "FadeMaterialColoredBulb pFBase85, MaterialRedArray, "
    Lampz.Callback(6) = "FadeMaterialColoredFiliment pFiliment85, MaterialRedArray, "

    Lampz.MassAssign(7)= l7
    Lampz.Callback(7) =         "FadeMaterialColoredBulb pFBase7, MaterialWhiteArray, "
    Lampz.Callback(7) = "FadeMaterialColoredFiliment pFiliment7, MaterialWhiteArray, "

    Lampz.MassAssign(8)= l8
    Lampz.Callback(8) =         "FadeMaterialColoredBulb pFBase8, MaterialWhiteArray, "
    Lampz.Callback(8) = "FadeMaterialColoredFiliment pFiliment8, MaterialWhiteArray, "

    Lampz.MassAssign(9)= l9
    Lampz.Callback(9) =         "FadeMaterialColoredBulb pFBase9, MaterialWhiteArray, "
    Lampz.Callback(9) = "FadeMaterialColoredFiliment pFiliment9, MaterialWhiteArray, "

    Lampz.MassAssign(10)= l10
    Lampz.Callback(10) =         "FadeMaterialColoredBulb pFBase10, MaterialWhiteArray, "
    Lampz.Callback(10) = "FadeMaterialColoredFiliment pFiliment10, MaterialWhiteArray, "

    Lampz.MassAssign(11)= l11
    Lampz.Callback(11) =         "FadeMaterialColoredBulb pFBase11, MaterialWhiteArray, "
    Lampz.Callback(11) = "FadeMaterialColoredFiliment pFiliment11, MaterialWhiteArray, "

    Lampz.MassAssign(12)= l12
    Lampz.Callback(12) =         "FadeMaterialColoredBulb pFBase12, MaterialWhiteArray, "
    Lampz.Callback(12) = "FadeMaterialColoredFiliment pFiliment12, MaterialWhiteArray, "


  'Turn off all lamps on startup
  Lampz.Init  'This just turns state of any lamps to 1

  'Immediate update to turn on GI, turn off lamps
  Lampz.update

End Sub


'====================
'Class jungle nf
'=============

'No-op object instead of adding more conditionals to the main loop
'It also prevents errors if empty lamp numbers are called, and it's only one object
'should be g2g?

Class NullFadingObject : Public Property Let IntensityScale(input) : : End Property : End Class

'version 0.11 - Mass Assign, Changed modulate style
'version 0.12 - Update2 (single -1 timer update) update method for core.vbs
'Version 0.12a - Filter can now be accessed via 'FilterOut'
'Version 0.12b - Changed MassAssign from a sub to an indexed property (new syntax: lampfader.MassAssign(15) = Light1 )
'Version 0.13 - No longer requires setlocale. Callback() can be assigned multiple times per index
' Note: if using multiple 'LampFader' objects, set the 'name' variable to avoid conflicts with callbacks

Class LampFader
  Public FadeSpeedDown(140), FadeSpeedUp(140)
  Private Lock(140), Loaded(140), OnOff(140)
  Public UseFunction
  Private cFilter
  Public UseCallback(140), cCallback(140)
  Public Lvl(140), Obj(140)
  Private Mult(140)
  Public FrameTime
  Private InitFrame
  Public Name

  Sub Class_Initialize()
    InitFrame = 0
    dim x : for x = 0 to uBound(OnOff)  'Set up fade speeds
      FadeSpeedDown(x) = 1/100  'fade speed down
      FadeSpeedUp(x) = 1/80   'Fade speed up
      UseFunction = False
      lvl(x) = 0
      OnOff(x) = False
      Lock(x) = True : Loaded(x) = False
      Mult(x) = 1
    Next
    Name = "LampFaderNF" 'NEEDS TO BE CHANGED IF THERE'S MULTIPLE OF THESE OBJECTS, OTHERWISE CALLBACKS WILL INTERFERE WITH EACH OTHER!!
    for x = 0 to uBound(OnOff)    'clear out empty obj
      if IsEmpty(obj(x) ) then Set Obj(x) = NullFader' : Loaded(x) = True
    Next
  End Sub

  Public Property Get Locked(idx) : Locked = Lock(idx) : End Property   ''WriteToLog "     ", Lampz.Locked(100) 'debug
  Public Property Get state(idx) : state = OnOff(idx) : end Property
  Public Property Let Filter(String) : Set cFilter = GetRef(String) : UseFunction = True : End Property
  Public Function FilterOut(aInput) : if UseFunction Then FilterOut = cFilter(aInput) Else FilterOut = aInput End If : End Function
  'Public Property Let Callback(idx, String) : cCallback(idx) = String : UseCallBack(idx) = True : End Property
  Public Property Let Callback(idx, String)
    UseCallBack(idx) = True
    'cCallback(idx) = String 'old execute method
    'New method: build wrapper subs using ExecuteGlobal, then call them
    cCallback(idx) = cCallback(idx) & "___" & String  'multiple strings dilineated by 3x _

    dim tmp : tmp = Split(cCallback(idx), "___")

    dim str, x : for x = 0 to uBound(tmp) 'build proc contents
      'If Not tmp(x)="" then str = str & "  " & tmp(x) & " aLVL" & "  '" & x & vbnewline  'more verbose
      If Not tmp(x)="" then str = str & tmp(x) & " aLVL:"
    Next
'msgbox "Sub " & name & idx & "(aLvl):" & str & "End Sub"
    dim out : out = "Sub " & name & idx & "(aLvl):" & str & "End Sub"
    'if idx = 132 then msgbox out 'debug
    ExecuteGlobal Out

  End Property

  Public Property Let state(ByVal idx, input) 'Major update path
    if Input <> OnOff(idx) then  'discard redundant updates
      OnOff(idx) = input
      Lock(idx) = False
      Loaded(idx) = False
    End If
  End Property

  'Mass assign, Builds arrays where necessary
  'Sub MassAssign(aIdx, aInput)
  Public Property Let MassAssign(aIdx, aInput)
    If typename(obj(aIdx)) = "NullFadingObject" Then 'if empty, use Set
      if IsArray(aInput) then
        obj(aIdx) = aInput
      Else
        Set obj(aIdx) = aInput
      end if
    Else
      Obj(aIdx) = AppendArray(obj(aIdx), aInput)
    end if
  end Property

  Sub SetLamp(aIdx, aOn) : state(aIdx) = aOn : End Sub  'Solenoid Handler

  Public Sub TurnOnStates() 'If obj contains any light objects, set their states to 1 (Fading is our job!)
    dim debugstr
    dim idx : for idx = 0 to uBound(obj)
      if IsArray(obj(idx)) then
        'debugstr = debugstr & "array found at " & idx & "..."
        dim x, tmp : tmp = obj(idx) 'set tmp to array in order to access it
        for x = 0 to uBound(tmp)
          if typename(tmp(x)) = "Light" then DisableState tmp(x)' : debugstr = debugstr & tmp(x).name & " state'd" & vbnewline
          tmp(x).intensityscale = 0.001 ' this can prevent init stuttering
        Next
      Else
        if typename(obj(idx)) = "Light" then DisableState obj(idx)' : debugstr = debugstr & obj(idx).name & " state'd (not array)" & vbnewline
        obj(idx).intensityscale = 0.001 ' this can prevent init stuttering
      end if
    Next
    ''WriteToLog "     ", debugstr
  End Sub
  Private Sub DisableState(ByRef aObj) : aObj.FadeSpeedUp = 1000 : aObj.State = 1 : End Sub 'turn state to 1

  Public Sub Init() 'Just runs TurnOnStates right now
    TurnOnStates
  End Sub

  Public Property Let Modulate(aIdx, aCoef) : Mult(aIdx) = aCoef : Lock(aIdx) = False : Loaded(aIdx) = False: End Property
  Public Property Get Modulate(aIdx) : Modulate = Mult(aIdx) : End Property

  Public Sub Update1()   'Handle all boolean numeric fading. If done fading, Lock(x) = True. Update on a '1' interval Timer!
    dim x : for x = 0 to uBound(OnOff)
      if not Lock(x) then 'and not Loaded(x) then
        if OnOff(x) then 'Fade Up
          Lvl(x) = Lvl(x) + FadeSpeedUp(x)
          if Lvl(x) >= 1 then Lvl(x) = 1 : Lock(x) = True
        elseif Not OnOff(x) then 'fade down
          Lvl(x) = Lvl(x) - FadeSpeedDown(x)
          if Lvl(x) <= 0 then Lvl(x) = 0 : Lock(x) = True
        end if
      end if
    Next
  End Sub

  Public Sub Update2()   'Both updates on -1 timer (Lowest latency, but less accurate fading at 60fps vsync)
    FrameTime = gametime - InitFrame : InitFrame = GameTime 'Calculate frametime
    dim x : for x = 0 to uBound(OnOff)
      if not Lock(x) then 'and not Loaded(x) then
        if OnOff(x) then 'Fade Up
          Lvl(x) = Lvl(x) + FadeSpeedUp(x) * FrameTime
          if Lvl(x) >= 1 then Lvl(x) = 1 : Lock(x) = True
        elseif Not OnOff(x) then 'fade down
          Lvl(x) = Lvl(x) - FadeSpeedDown(x) * FrameTime
          if Lvl(x) <= 0 then Lvl(x) = 0 : Lock(x) = True
        end if
      end if
    Next
    Update
  End Sub

  Public Sub Update() 'Handle object updates. Update on a -1 Timer! If done fading, loaded(x) = True
    dim x,xx : for x = 0 to uBound(OnOff)
      if not Loaded(x) then
        if IsArray(obj(x) ) Then  'if array
          If UseFunction then
            for each xx in obj(x) : xx.IntensityScale = cFilter(Lvl(x)*Mult(x)) : Next
          Else
            for each xx in obj(x) : xx.IntensityScale = Lvl(x)*Mult(x) : Next
          End If
        else            'if single lamp or flasher
          If UseFunction then
            obj(x).Intensityscale = cFilter(Lvl(x)*Mult(x))
          Else
            obj(x).Intensityscale = Lvl(x)
          End If
        end if
        if TypeName(lvl(x)) <> "Double" and typename(lvl(x)) <> "Integer" then msgbox "uhh " & 2 & " = " & lvl(x)
        'If UseCallBack(x) then execute cCallback(x) & " " & (Lvl(x)) 'Callback
        If UseCallBack(x) then Proc name & x,Lvl(x)*mult(x) 'Proc
        If Lock(x) Then
          if Lvl(x) = 1 or Lvl(x) = 0 then Loaded(x) = True 'finished fading
        end if
      end if
    Next
  End Sub
End Class


'Lamp Filter
Function LampFilter(aLvl)
  LampFilter = aLvl^1.6 'exponential curve?
End Function


'Helper functions
Sub Proc(string, Callback)  'proc using a string and one argument
  'On Error Resume Next
  dim p : Set P = GetRef(String)
  P Callback
  If err.number = 13 then  msgbox "Proc error! No such procedure: " & vbnewline & string
  if err.number = 424 then msgbox "Proc error! No such Object"
End Sub

Function AppendArray(ByVal aArray, aInput)  'append one value, object, or Array onto the end of a 1 dimensional array
  if IsArray(aInput) then 'Input is an array...
    dim tmp : tmp = aArray
    If not IsArray(aArray) Then 'if not array, create an array
      tmp = aInput
    Else            'Append existing array with aInput array
      Redim Preserve tmp(uBound(aArray) + uBound(aInput)+1) 'If existing array, increase bounds by uBound of incoming array
      dim x : for x = 0 to uBound(aInput)
        if isObject(aInput(x)) then
          Set tmp(x+uBound(aArray)+1 ) = aInput(x)
        Else
          tmp(x+uBound(aArray)+1 ) = aInput(x)
        End If
      Next
    AppendArray = tmp  'return new array
    End If
  Else 'Input is NOT an array...
    If not IsArray(aArray) Then 'if not array, create an array
      aArray = Array(aArray, aInput)
    Else
      Redim Preserve aArray(uBound(aArray)+1) 'If array, increase bounds by 1
      if isObject(aInput) then
        Set aArray(uBound(aArray)) = aInput
      Else
        aArray(uBound(aArray)) = aInput
      End If
    End If
    AppendArray = aArray 'return new array
  End If
End Function

' ******************************  END Lampz from funhouse
' ***************************************************************************************************


' ***************************************************************************************************
' ******************************  Start FlupperDomes2.2 (Flashers)

Dim TestFlashers, TableRef, FlasherLightIntensity, FlasherFlareIntensity, FlasherOffBrightness

                ' *********************************************************************
TestFlashers = 0        ' *** set this to 1 to check position of flasher object       ***
Set TableRef = Table1       ' *** change this, if your table has another name             ***
FlasherLightIntensity = .3    ' *** lower this, if the VPX lights are too bright (i.e. 0.1)   ***
FlasherFlareIntensity = 1   ' *** lower this, if the flares are too bright (i.e. 0.1)     ***
FlasherOffBrightness = 0.5    ' *** brightness of the flasher dome when switched off (range 0-2)  ***
                ' *********************************************************************

Dim ObjLevel(20), objbase(20), objlit(20), objflasher(20), objlight(20)
Dim tablewidth, tableheight : tablewidth = TableRef.width : tableheight = TableRef.height
'initialise the flasher color, you can only choose from "green", "red", "purple", "blue", "white" and "yellow"
InitFlasher 9, "yellow"
RotateFlasher 9, -20

InitFlasher 10, "orange"
RotateFlasher 10, -28

InitFlasher 11, "orange"
RotateFlasher 11, 28


' rotate the flasher with the command below (first argument = flasher nr, second argument = angle in degrees)
'RotateFlasher 4,17 : RotateFlasher 5,0 : RotateFlasher 6,90
'RotateFlasher 7,0 : RotateFlasher 8,0
'RotateFlasher 9,-45 : RotateFlasher 10,90 : RotateFlasher 11,90

Sub InitFlasher(nr, col)
  ' store all objects in an array for use in FlashFlasher subroutine
  Set objbase(nr) = Eval("Flasherbase" & nr) : Set objlit(nr) = Eval("Flasherlit" & nr)
  Set objflasher(nr) = Eval("Flasherflash" & nr) : Set objlight(nr) = Eval("Flasherlight" & nr)
  ' If the flasher is parallel to the playfield, rotate the VPX flasher object for POV and place it at the correct height
  If objbase(nr).RotY = 0 Then
    objbase(nr).ObjRotZ =  atn( (tablewidth/2 - objbase(nr).x) / (objbase(nr).y - tableheight*1.1)) * 180 / 3.14159
    objflasher(nr).RotZ = objbase(nr).ObjRotZ : objflasher(nr).height = objbase(nr).z + 0  ' 60
  End If
  ' set all effects to invisible and move the lit primitive at the same position and rotation as the base primitive
  objlight(nr).IntensityScale = 0 : objlit(nr).visible = 0 : objlit(nr).material = "Flashermaterial" & nr
  objlit(nr).RotX = objbase(nr).RotX : objlit(nr).RotY = objbase(nr).RotY : objlit(nr).RotZ = objbase(nr).RotZ
  objlit(nr).ObjRotX = objbase(nr).ObjRotX : objlit(nr).ObjRotY = objbase(nr).ObjRotY : objlit(nr).ObjRotZ = objbase(nr).ObjRotZ
  objlit(nr).x = objbase(nr).x : objlit(nr).y = objbase(nr).y : objlit(nr).z = objbase(nr).z
  objbase(nr).BlendDisableLighting = FlasherOffBrightness
  ' set the texture and color of all objects
  select case objbase(nr).image
    Case "dome2basewhite" : objbase(nr).image = "dome2base" & col : objlit(nr).image = "dome2lit" & col :
    Case "ronddomebasewhite" : objbase(nr).image = "ronddomebase" & col : objlit(nr).image = "ronddomelit" & col
    Case "domeearbasewhite" : objbase(nr).image = "domeearbase" & col : objlit(nr).image = "domeearlit" & col
  end select
  If TestFlashers = 0 Then objflasher(nr).imageA = "domeflashwhite" : objflasher(nr).visible = 0 : End If
  select case col
    Case "blue" :   objlight(nr).color = RGB(4,120,255) : objflasher(nr).color = RGB(200,255,255) : objlight(nr).intensity = 5000
    Case "green" :  objlight(nr).color = RGB(12,255,4) : objflasher(nr).color = RGB(12,255,4)
    Case "red" :    objlight(nr).color = RGB(255,32,4) : objflasher(nr).color = RGB(255,32,4)
    Case "purple" : objlight(nr).color = RGB(230,49,255) : objflasher(nr).color = RGB(255,64,255)
    Case "yellow" : objlight(nr).color = RGB(200,173,25) : objflasher(nr).color = RGB(255,200,50)
    Case "orange" : objlight(nr).color = RGB(230,115, 0) : objflasher(nr).color = RGB(255,140,26)
    Case "white" :  objlight(nr).color = RGB(255,240,150) : objflasher(nr).color = RGB(100,86,59)
  end select
  objlight(nr).colorfull = objlight(nr).color
  If TableRef.ShowDT and ObjFlasher(nr).RotX = -45 Then
    objflasher(nr).height = objflasher(nr).height - 20 * ObjFlasher(nr).y / tableheight
    ObjFlasher(nr).y = ObjFlasher(nr).y + 10
  End If
End Sub

Sub RotateFlasher(nr, angle) : angle = ((angle + 360 - objbase(nr).ObjRotZ) mod 180)/30 : objbase(nr).showframe(angle) : objlit(nr).showframe(angle) : End Sub

Sub FlashFlasher(nr)
  If not objflasher(nr).TimerEnabled Then objflasher(nr).TimerEnabled = True : objflasher(nr).visible = 1 : objlit(nr).visible = 1 : End If
  objflasher(nr).opacity = 1000 *  FlasherFlareIntensity * ObjLevel(nr)^2.5
  objlight(nr).IntensityScale = 0.5 * FlasherLightIntensity * ObjLevel(nr)^3
  objbase(nr).BlendDisableLighting =  FlasherOffBrightness + 10 * ObjLevel(nr)^3
  objlit(nr).BlendDisableLighting = 10 * ObjLevel(nr)^2
  UpdateMaterial "Flashermaterial" & nr,0,0,0,0,0,0,ObjLevel(nr),RGB(255,255,255),0,0,False,True,0,0,0,0
  ObjLevel(nr) = ObjLevel(nr) * 0.9 - 0.01
  If ObjLevel(nr) < 0 Then objflasher(nr).TimerEnabled = False : objflasher(nr).visible = 0 : objlit(nr).visible = 0 : End If
End Sub

Sub FlasherFlash9_Timer() : FlashFlasher(9) : End Sub
Sub FlasherFlash10_Timer() : FlashFlasher(10) : End Sub
Sub FlasherFlash11_Timer() : FlashFlasher(11) : End Sub

Sub tmrCraneDomeFlash_Timer
  ObjLevel(9) = 1 : FlasherFlash9_Timer
End Sub

' ******************************  End Flupper Flashers
' ***************************************************************************************************




'******************************************************
' ZRST: STAND-UP TARGETS by Rothbauerw
'******************************************************

Class StandupTarget
  Private m_primary, m_prim, m_sw, m_animate

  Public Property Get Primary(): Set Primary = m_primary: End Property
  Public Property Let Primary(input): Set m_primary = input: End Property

  Public Property Get Prim(): Set Prim = m_prim: End Property
  Public Property Let Prim(input): Set m_prim = input: End Property

  Public Property Get Sw(): Sw = m_sw: End Property
  Public Property Let Sw(input): m_sw = input: End Property

  Public Property Get Animate(): Animate = m_animate: End Property
  Public Property Let Animate(input): m_animate = input: End Property

  Public default Function init(primary, prim, sw, animate)
    Set m_primary = primary
    Set m_prim = prim
    m_sw = sw
    m_animate = animate

    Set Init = Me
  End Function
End Class

'Define a variable for each stand-up target
Dim STG, STA, STD, STG2, STE, STT, STTV1, STTV2, STTV3

'Set array with stand-up target objects
'
'StandupTargetvar = Array(primary, prim, swtich)
'   primary:  vp target to determine target hit
'   prim:    primitive target used for visuals and animation
'          IMPORTANT!!!
'          transy must be used to offset the target animation
'   switch:  ROM switch number
'   animate:  Arrary slot for handling the animation instrucitons, set to 0
'
'You will also need to add a secondary hit object for each stand up (name sw11o, sw12o, and sw13o on the example Table1)
'these are inclined primitives to simulate hitting a bent target and should provide so z velocity on high speed impacts

Set STG = (new StandupTarget)(tgtG, ptgtG,1, 0)
Set STA = (new StandupTarget)(tgtA, ptgtA,2, 0)
Set STD = (new StandupTarget)(tgtD, ptgtD,3, 0)
Set STG2 = (new StandupTarget)(tgtG2, ptgtG2,4, 0)
Set STE = (new StandupTarget)(tgtE, ptgtE,5, 0)
Set STT = (new StandupTarget)(tgtT, ptgtT,6, 0)

Set STTV1 = (new StandupTarget)(tgtTV1, ptgtTV1,7, 0)
Set STTV2 = (new StandupTarget)(tgtTV2, ptgtTV2,8, 0)
Set STTV3 = (new StandupTarget)(tgtTV3, ptgtTV3,9, 0)




'Add all the Stand-up Target Arrays to Stand-up Target Animation Array
'   STAnimationArray = Array(ST1, ST2, ....)
Dim STArray
STArray = Array(STG, STA, STD, STG2, STE, STT, STTV1, STTV2, STTV3)

'Configure the behavior of Stand-up Targets
Const STAnimStep = 1.5  'vpunits per animation step (control return to Start)
Const STMaxOffset = 9   'max vp units target moves when hit

Const STMass = 0.2    'Mass of the Stand-up Target (between 0 and 1), higher values provide more resistance

'******************************************************
'       STAND-UP TARGETS FUNCTIONS
'******************************************************

Sub STHit(switch)
  Dim i
  i = STArrayID(switch)

' PlayTargetSound
  STArray(i).animate = STCheckHit(ActiveBall,STArray(i).primary)

  If STArray(i).animate <> 0 Then
    DTBallPhysics ActiveBall, STArray(i).primary.orientation, STMass
  End If
  DoSTAnim
End Sub

Function STArrayID(switch)
  Dim i
  For i = 0 To UBound(STArray)
    If STArray(i).sw = switch Then
      STArrayID = i
      Exit Function
    End If
  Next
End Function

Function STCheckHit(aBall, target) 'Check if target is hit on it's face
  Dim bangle, bangleafter, rangle, rangle2, perpvel, perpvelafter, paravel, paravelafter
  rangle = (target.orientation - 90) * 3.1416 / 180
  bangle = atn2(cor.ballvely(aball.id),cor.ballvelx(aball.id))
  bangleafter = Atn2(aBall.vely,aball.velx)

  perpvel = cor.BallVel(aball.id) * Cos(bangle - rangle)
  paravel = cor.BallVel(aball.id) * Sin(bangle - rangle)

  perpvelafter = BallSpeed(aBall) * Cos(bangleafter - rangle)
  paravelafter = BallSpeed(aBall) * Sin(bangleafter - rangle)

  If perpvel > 0 And  perpvelafter <= 0 Then
    STCheckHit = 1
  ElseIf perpvel > 0 And ((paravel > 0 And paravelafter > 0) Or (paravel < 0 And paravelafter < 0)) Then
    STCheckHit = 1
  Else
    STCheckHit = 0
  End If
End Function

Sub DoSTAnim()
  Dim i
  For i = 0 To UBound(STArray)
    STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
  Next
End Sub

Function STAnimate(primary, prim, switch,  animate)
  Dim animtime

  STAnimate = animate

  If animate = 0  Then
    primary.uservalue = 0
    STAnimate = 0
    Exit Function
  ElseIf primary.uservalue = 0 Then
    primary.uservalue = GameTime
  End If

  animtime = GameTime - primary.uservalue

  If animate = 1 Then
    primary.collidable = 0
    prim.transy =  - STMaxOffset

    STAction switch   'call the switch action

    STAnimate = 2
    Exit Function
  ElseIf animate = 2 Then
    prim.transy = prim.transy + STAnimStep
    If prim.transy >= 0 Then
      prim.transy = 0
      primary.collidable = 1
      STAnimate = 0
'     debug.print "exit anim"
      Exit Function
    Else
      STAnimate = 2
    End If
  End If
End Function


Sub STAction(Switch)
' debug.print "action: " & Switch
  Select Case Switch
    Case 1
      tgtGEvent
    Case 2
      tgtAEvent
    Case 3
      tgtDEvent
    Case 4
      tgtG2Event
    Case 5
      tgtEEvent
    Case 6
      tgtTEvent
    Case 7
      tgtTV1Event
    Case 8
      tgtTV2Event
    Case 9
      tgtTV3Event
  End Select
End Sub

Sub DTBallPhysics(aBall, angle, mass)
  Dim rangle,bangle,calc1, calc2, calc3
  rangle = (angle - 90) * 3.1416 / 180
  bangle = atn2(cor.ballvely(aball.id),cor.ballvelx(aball.id))

  calc1 = cor.BallVel(aball.id) * Cos(bangle - rangle) * (aball.mass - mass) / (aball.mass + mass)
  calc2 = cor.BallVel(aball.id) * Sin(bangle - rangle) * Cos(rangle + 4 * Atn(1) / 2)
  calc3 = cor.BallVel(aball.id) * Sin(bangle - rangle) * Sin(rangle + 4 * Atn(1) / 2)

  aBall.velx = calc1 * Cos(rangle) + calc2
  aBall.vely = calc1 * Sin(rangle) + calc3
  TargetBouncer aBall, 1
End Sub


'******************************************************
'****   END STAND-UP TARGETS
'******************************************************


'******************************************************
' ZBRL:  BALL ROLLING AND DROP SOUNDS
'******************************************************

' Be sure to call RollingUpdate in a timer with a 10ms interval see the GameTimer_Timer() sub

ReDim rolling(tnob)
InitRolling

Dim DropCount
ReDim DropCount(tnob)

Sub InitRolling
  Dim i
  For i = 0 To tnob
    rolling(i) = False
  Next
End Sub

Sub RollingUpdate()
  Dim b
' Dim BOT : BOT = GetBalls

  ' stop the sound of deleted balls
  For b = UBound(gBOT) + 1 To tnob - 1
    rolling(b) = False
    StopSound("BallRoll_" & b)
  Next

  ' exit the sub if no balls on the table
  If UBound(gBOT) =  - 1 Then Exit Sub

  ' play the rolling sound for each ball
  For b = 0 To UBound(gBOT) - 3
    If BallVel(gBOT(b)) > 1 And gBOT(b).z < 30 Then
      rolling(b) = True
      PlaySound ("BallRoll_" & b), - 1, VolPlayfieldRoll(gBOT(b)) * BallRollVolume * VolumeDial, AudioPan(gBOT(b)), 0, PitchPlayfieldRoll(gBOT(b)), 1, 0, AudioFade(gBOT(b))
    Else
      If rolling(b) = True Then
        StopSound("BallRoll_" & b)
        rolling(b) = False
      End If
    End If

    ' Ball Drop Sounds
    If gBOT(b).VelZ <  - 1 And gBOT(b).z < 55 And gBOT(b).z > 27 Then 'height adjust for ball drop sounds
      If DropCount(b) >= 5 Then
        DropCount(b) = 0
        If gBOT(b).velz >  - 7 Then
          RandomSoundBallBouncePlayfieldSoft gBOT(b)
        Else
          RandomSoundBallBouncePlayfieldHard gBOT(b)
        End If
      End If
    End If

    If DropCount(b) < 5 Then
      DropCount(b) = DropCount(b) + 1
    End If
  Next
End Sub

'******************************************************
'****  END BALL ROLLING AND DROP SOUNDS
'******************************************************




'******************************************************
'   ZRRL: RAMP ROLLING SFX
'******************************************************

'Ball tracking ramp SFX 1.0
'   Reqirements:
'     * Import A Sound File for each ball on the table for plastic ramps.  Call It RampLoop<Ball_Number> ex: RampLoop1, RampLoop2, ...
'     * Import a Sound File for each ball on the table for wire ramps. Call it WireLoop<Ball_Number> ex: WireLoop1, WireLoop2, ...
'     * Create a Timer called RampRoll, that is enabled, with a interval of 100
'     * Set RampBAlls and RampType variable to Total Number of Balls
' Usage:
'     * Setup hit events and call WireRampOn True or WireRampOn False (True = Plastic ramp, False = Wire Ramp)
'     * To stop tracking ball
'        * call WireRampOff
'        * Otherwise, the ball will auto remove if it's below 30 vp units
'

Dim RampMinLoops
RampMinLoops = 4

' RampBalls
' Setup:  Set the array length of x in RampBalls(x,2) Total Number of Balls on table + 1:  if tnob = 5, then RampBalls(6,2)
Dim RampBalls(6,2)
'x,0 = ball x,1 = ID, 2 = Protection against ending early (minimum amount of updates)

'0,0 is boolean on/off, 0,1 unused for now
RampBalls(0,0) = False

' RampType
' Setup: Set this array to the number Total number of balls that can be tracked at one time + 1.  5 ball multiball then set value to 6
' Description: Array type indexed on BallId and a values used to deterimine what type of ramp the ball is on: False = Wire Ramp, True = Plastic Ramp
Dim RampType(6)

Sub WireRampOn(input)
  Waddball ActiveBall, input
  RampRollUpdate
End Sub

Sub WireRampOff()
  WRemoveBall ActiveBall.ID
End Sub

' WaddBall (Active Ball, Boolean)
Sub Waddball(input, RampInput) 'This subroutine is called from WireRampOn to Add Balls to the RampBalls Array
  ' This will loop through the RampBalls array checking each element of the array x, position 1
  ' To see if the the ball was already added to the array.
  ' If the ball is found then exit the subroutine
  Dim x
  For x = 1 To UBound(RampBalls)  'Check, don't add balls twice
    If RampBalls(x, 1) = input.id Then
      If Not IsEmpty(RampBalls(x,1) ) Then Exit Sub 'Frustating issue with BallId 0. Empty variable = 0
    End If
  Next

  ' This will itterate through the RampBalls Array.
  ' The first time it comes to a element in the array where the Ball Id (Slot 1) is empty.  It will add the current ball to the array
  ' The RampBalls assigns the ActiveBall to element x,0 and ball id of ActiveBall to 0,1
  ' The RampType(BallId) is set to RampInput
  ' RampBalls in 0,0 is set to True, this will enable the timer and the timer is also turned on
  For x = 1 To UBound(RampBalls)
    If IsEmpty(RampBalls(x, 1)) Then
      Set RampBalls(x, 0) = input
      RampBalls(x, 1) = input.ID
      RampType(x) = RampInput
      RampBalls(x, 2) = 0
      'exit For
      RampBalls(0,0) = True
      RampRoll.Enabled = 1   'Turn on timer
      'RampRoll.Interval = RampRoll.Interval 'reset timer
      Exit Sub
    End If
    If x = UBound(RampBalls) Then  'debug
      Debug.print "WireRampOn error, ball queue Is full: " & vbNewLine & _
      RampBalls(0, 0) & vbNewLine & _
      TypeName(RampBalls(1, 0)) & " ID:" & RampBalls(1, 1) & "type:" & RampType(1) & vbNewLine & _
      TypeName(RampBalls(2, 0)) & " ID:" & RampBalls(2, 1) & "type:" & RampType(2) & vbNewLine & _
      TypeName(RampBalls(3, 0)) & " ID:" & RampBalls(3, 1) & "type:" & RampType(3) & vbNewLine & _
      TypeName(RampBalls(4, 0)) & " ID:" & RampBalls(4, 1) & "type:" & RampType(4) & vbNewLine & _
      TypeName(RampBalls(5, 0)) & " ID:" & RampBalls(5, 1) & "type:" & RampType(5) & vbNewLine & _
      " "
    End If
  Next
End Sub

' WRemoveBall (BallId)
Sub WRemoveBall(ID) 'This subroutine is called from the RampRollUpdate subroutine and is used to remove and stop the ball rolling sounds
  '   Debug.Print "In WRemoveBall() + Remove ball from loop array"
  Dim ballcount
  ballcount = 0
  Dim x
  For x = 1 To UBound(RampBalls)
    If ID = RampBalls(x, 1) Then 'remove ball
      Set RampBalls(x, 0) = Nothing
      RampBalls(x, 1) = Empty
      RampType(x) = Empty
      StopSound("RampLoop" & x)
      StopSound("wireloop" & x)
    End If
    'if RampBalls(x,1) = Not IsEmpty(Rampballs(x,1) then ballcount = ballcount + 1
    If Not IsEmpty(Rampballs(x,1)) Then ballcount = ballcount + 1
  Next
  If BallCount = 0 Then RampBalls(0,0) = False  'if no balls in queue, disable timer update
End Sub

Sub RampRoll_Timer()
  RampRollUpdate
End Sub

Sub RampRollUpdate()  'Timer update
  Dim x
  For x = 1 To UBound(RampBalls)
    If Not IsEmpty(RampBalls(x,1) ) Then
      If BallVel(RampBalls(x,0) ) > 1 Then ' if ball is moving, play rolling sound
        If RampType(x) Then
          PlaySound("RampLoop" & x), - 1, VolPlayfieldRoll(RampBalls(x,0)) * RampRollVolume * VolumeDial, AudioPan(RampBalls(x,0)), 0, BallPitchV(RampBalls(x,0)), 1, 0, AudioFade(RampBalls(x,0))
          StopSound("wireloop" & x)
        Else
          StopSound("RampLoop" & x)
          PlaySound("wireloop" & x), - 1, VolPlayfieldRoll(RampBalls(x,0)) * RampRollVolume * VolumeDial, AudioPan(RampBalls(x,0)), 0, BallPitch(RampBalls(x,0)), 1, 0, AudioFade(RampBalls(x,0))
        End If
        RampBalls(x, 2) = RampBalls(x, 2) + 1
      Else
        StopSound("RampLoop" & x)
        StopSound("wireloop" & x)
      End If
      If RampBalls(x,0).Z < 30 And RampBalls(x, 2) > RampMinLoops Then  'if ball is on the PF, remove  it
        StopSound("RampLoop" & x)
        StopSound("wireloop" & x)
        Wremoveball RampBalls(x,1)
      End If
    Else
      StopSound("RampLoop" & x)
      StopSound("wireloop" & x)
    End If
  Next
  If Not RampBalls(0,0) Then RampRoll.enabled = 0
End Sub

' This can be used to debug the Ramp Roll time.  You need to enable the tbWR timer on the TextBox
Sub tbWR_Timer()  'debug textbox
  Me.text = "on? " & RampBalls(0, 0) & " timer: " & RampRoll.Enabled & vbNewLine & _
  "1 " & TypeName(RampBalls(1, 0)) & " ID:" & RampBalls(1, 1) & " type:" & RampType(1) & " Loops:" & RampBalls(1, 2) & vbNewLine & _
  "2 " & TypeName(RampBalls(2, 0)) & " ID:" & RampBalls(2, 1) & " type:" & RampType(2) & " Loops:" & RampBalls(2, 2) & vbNewLine & _
  "3 " & TypeName(RampBalls(3, 0)) & " ID:" & RampBalls(3, 1) & " type:" & RampType(3) & " Loops:" & RampBalls(3, 2) & vbNewLine & _
  "4 " & TypeName(RampBalls(4, 0)) & " ID:" & RampBalls(4, 1) & " type:" & RampType(4) & " Loops:" & RampBalls(4, 2) & vbNewLine & _
  "5 " & TypeName(RampBalls(5, 0)) & " ID:" & RampBalls(5, 1) & " type:" & RampType(5) & " Loops:" & RampBalls(5, 2) & vbNewLine & _
  "6 " & TypeName(RampBalls(6, 0)) & " ID:" & RampBalls(6, 1) & " type:" & RampType(6) & " Loops:" & RampBalls(6, 2) & vbNewLine & _
  " "
End Sub

Function BallPitch(ball) ' Calculates the pitch of the sound based on the ball speed
  BallPitch = pSlope(BallVel(ball), 1, - 1000, 60, 10000)
End Function

Function BallPitchV(ball) ' Calculates the pitch of the sound based on the ball speed Variation
  BallPitchV = pSlope(BallVel(ball), 1, - 4000, 60, 7000)
End Function

Sub RandomSoundRampStop(obj)
  Select Case Int(rnd*3)
    Case 0: PlaySoundAtVol "wireramp_stop1", obj, 0.2*VolumeDial:PlaySoundAtLevelActiveBall ("Rubber_Strong_1"), Vol(ActiveBall) * RubberStrongSoundFactor * 0.6
    Case 1: PlaySoundAtVol "wireramp_stop2", obj, 0.2*VolumeDial:PlaySoundAtLevelActiveBall ("Rubber_Strong_2"), Vol(ActiveBall) * RubberStrongSoundFactor * 0.6
    Case 2: PlaySoundAtVol "wireramp_stop3", obj, 0.2*VolumeDial:PlaySoundAtLevelActiveBall ("Rubber_1_Hard"), Vol(ActiveBall) * RubberStrongSoundFactor * 0.6
  End Select
End Sub


Sub LeftRampStart_Hit()
' Debug.Print("Left ramp hit, sound on")
' WireRampOn False
  If activeball.vely < 1 Then
    WireRampOn False   'Play Metal Ramp Sound
    '   PlaySoundAtLevelActiveBall "LeftRampMetal", Vol(ActiveBall) * MetalImpactSoundFactor
  Else
    WireRampOff
  End If

  If (ActiveBall.VelY > 0) Then
    'ball is traveling down the playfield
'   debug.print "down"
    RandomSoundRampFlapDown()
  ElseIf (ActiveBall.VelY < 0) Then
    'ball is traveling up the playfield
'   debug.print "up"
    RandomSoundRampFlapUp()
  End If
End Sub

Sub LeftRampStop_Hit()
' Debug.Print("Left ramp end hit, sound off")
  RandomSoundRampStop LeftRampStop
  WireRampOff
End Sub

Sub LeftRampStop_UnHit()
  RandomSoundDelayedBallDropOnPlayfield ActiveBall
End Sub

Sub RightRampStart_Hit()
' Debug.Print("Right ramp hit, sound on")
' WireRampOn False
  If activeball.vely < 1 Then
    WireRampOn False   'Play Metal Ramp Sound
    '   PlaySoundAtLevelActiveBall "RightRampMetal", Vol(ActiveBall) * MetalImpactSoundFactor
  Else
    WireRampOff
  End If
' debug.print ActiveBall.VelY
  If (ActiveBall.VelY > 0) Then
    'ball is traveling down the playfield
'   debug.print "down"
    RandomSoundRampFlapDown()
  ElseIf (ActiveBall.VelY < 0) Then
'   debug.print "up"
    RandomSoundRampFlapUp()

  End If
End Sub

sub aPenguinKickToWire_hit()
' debug.print "Peng wire on"
  WireRampOn False   'Play Metal Ramp Sound
end sub

Sub RightRampStop_Hit()
' Debug.Print("Right ramp end hit, sound off")
  RandomSoundRampStop RightRampStop
  WireRampOff
End Sub

Sub RightRampStop_UnHit()
  RandomSoundDelayedBallDropOnPlayfield ActiveBall
End Sub


dim FlapSoundLevel
FlapSoundLevel = 0.8                          'volume level; range [0, 1]

'/////////////////////////////  RAMPS FLAPS - SOUNDS  ////////////////////////////
Sub RandomSoundRampFlapUp()

  Select Case Int(Rnd*3)+1
    Case 1 : PlaySoundAtLevelActiveBall ("TOM_Ramp_Flap_Up_1"), FlapSoundLevel
    Case 2 : PlaySoundAtLevelActiveBall ("TOM_Ramp_Flap_Up_2"), FlapSoundLevel
    Case 3 : PlaySoundAtLevelActiveBall ("TOM_Ramp_Flap_Up_3"), FlapSoundLevel
  End Select
End Sub

Sub RandomSoundRampFlapDown()
  Select Case Int(Rnd*3)+1
    Case 1 : PlaySoundAtLevelActiveBall ("TOM_Ramp_Flap_Down_1"), FlapSoundLevel
    Case 2 : PlaySoundAtLevelActiveBall ("TOM_Ramp_Flap_Down_2"), FlapSoundLevel
    Case 3 : PlaySoundAtLevelActiveBall ("TOM_Ramp_Flap_Down_3"), FlapSoundLevel
  End Select
End Sub


'******************************************************
'**** END RAMP ROLLING SFX
'******************************************************



'******************************************************
'   ZFLE:  FLEEP MECHANICAL SOUNDS
'******************************************************

' This part in the script is an entire block that is dedicated to the physics sound system.
' Various scripts and sounds that may be pretty generic and could suit other WPC systems, but the most are tailored specifically for the TOM table

' Many of the sounds in this package can be added by creating collections and adding the appropriate objects to those collections.
' Create the following new collections:
'  Metals (all metal objects, metal walls, metal posts, metal wire guides)
'  Apron (the apron walls and plunger wall)
'  Walls (all wood or plastic walls)
'  Rollovers (wire rollover triggers, star triggers, or button triggers)
'  Targets (standup or drop targets, these are hit sounds only ... you will want to add separate dropping sounds for drop targets)
'  Gates (plate gates)
'  GatesWire (wire gates)
'  Rubbers (all rubbers including posts, sleeves, pegs, and bands)
' When creating the collections, make sure "Fire events for this collection" is checked.
' You'll also need to make sure "Has Hit Event" is checked for each object placed in these collections (not necessary for gates and triggers).
' Once the collections and objects are added, the save, close, and restart VPX.
'
' Many places in the script need to be modified to include the correct sound effect subroutine calls. The tutorial videos linked below demonstrate
' how to make these updates. But in summary the following needs to be updated:
' - Nudging, plunger, coin-in, start button sounds will be added to the keydown and keyup subs.
' - Flipper sounds in the flipper solenoid subs. Flipper collision sounds in the flipper collide subs.
' - Bumpers, slingshots, drain, ball release, knocker, spinner, and saucers in their respective subs
' - Ball rolling sounds sub
'
' Tutorial videos by Apophis
' Audio : Adding Fleep Part 1         https://youtu.be/rG35JVHxtx4?si=zdN9W4cZWEyXbOz_
' Audio : Adding Fleep Part 2         https://youtu.be/dk110pWMxGo?si=2iGMImXXZ0SFKVCh
' Audio : Adding Fleep Part 3         https://youtu.be/ESXWGJZY_EI?si=6D20E2nUM-xAw7xy


'///////////////////////////////  SOUNDS PARAMETERS  //////////////////////////////
Dim GlobalSoundLevel, CoinSoundLevel, PlungerReleaseSoundLevel, PlungerPullSoundLevel, NudgeLeftSoundLevel
Dim NudgeRightSoundLevel, NudgeCenterSoundLevel, StartButtonSoundLevel, RollingSoundFactor

CoinSoundLevel = 1            'volume level; range [0, 1]
NudgeLeftSoundLevel = 1        'volume level; range [0, 1]
NudgeRightSoundLevel = 1        'volume level; range [0, 1]
NudgeCenterSoundLevel = 1        'volume level; range [0, 1]
StartButtonSoundLevel = 0.1      'volume level; range [0, 1]
PlungerReleaseSoundLevel = 0.8 '1 wjr   'volume level; range [0, 1]
PlungerPullSoundLevel = 1        'volume level; range [0, 1]
RollingSoundFactor = 1.1 / 5

'///////////////////////-----Solenoids, Kickers and Flash Relays-----///////////////////////
Dim FlipperUpAttackMinimumSoundLevel, FlipperUpAttackMaximumSoundLevel, FlipperUpAttackLeftSoundLevel, FlipperUpAttackRightSoundLevel
Dim FlipperUpSoundLevel, FlipperDownSoundLevel, FlipperLeftHitParm, FlipperRightHitParm
Dim SlingshotSoundLevel, BumperSoundFactor, KnockerSoundLevel

FlipperUpAttackMinimumSoundLevel = 0.010    'volume level; range [0, 1]
FlipperUpAttackMaximumSoundLevel = 0.635    'volume level; range [0, 1]
FlipperUpSoundLevel = 1.0            'volume level; range [0, 1]
FlipperDownSoundLevel = 0.45          'volume level; range [0, 1]
FlipperLeftHitParm = FlipperUpSoundLevel    'sound helper; not configurable
FlipperRightHitParm = FlipperUpSoundLevel    'sound helper; not configurable
SlingshotSoundLevel = 0.95            'volume level; range [0, 1]
BumperSoundFactor = 4.25            'volume multiplier; must not be zero
KnockerSoundLevel = 1              'volume level; range [0, 1]

'///////////////////////-----Ball Drops, Bumps and Collisions-----///////////////////////
Dim RubberStrongSoundFactor, RubberWeakSoundFactor, RubberFlipperSoundFactor,BallWithBallCollisionSoundFactor
Dim BallBouncePlayfieldSoftFactor, BallBouncePlayfieldHardFactor, PlasticRampDropToPlayfieldSoundLevel, WireRampDropToPlayfieldSoundLevel, DelayedBallDropOnPlayfieldSoundLevel
Dim WallImpactSoundFactor, MetalImpactSoundFactor, SubwaySoundLevel, SubwayEntrySoundLevel, ScoopEntrySoundLevel
Dim SaucerLockSoundLevel, SaucerKickSoundLevel

BallWithBallCollisionSoundFactor = 3.2      'volume multiplier; must not be zero
RubberStrongSoundFactor = 0.055 / 5      'volume multiplier; must not be zero
RubberWeakSoundFactor = 0.075 / 5        'volume multiplier; must not be zero
RubberFlipperSoundFactor = 0.075 / 5      'volume multiplier; must not be zero
BallBouncePlayfieldSoftFactor = 0.025      'volume multiplier; must not be zero
BallBouncePlayfieldHardFactor = 0.025      'volume multiplier; must not be zero
DelayedBallDropOnPlayfieldSoundLevel = 0.8    'volume level; range [0, 1]
WallImpactSoundFactor = 0.075          'volume multiplier; must not be zero
MetalImpactSoundFactor = 0.075 / 3
SaucerLockSoundLevel = 0.8
SaucerKickSoundLevel = 0.8

'///////////////////////-----Gates, Spinners, Rollovers and Targets-----///////////////////////

Dim GateSoundLevel, TargetSoundFactor, SpinnerSoundLevel, RolloverSoundLevel, DTSoundLevel

GateSoundLevel = 0.5 / 5      'volume level; range [0, 1]
TargetSoundFactor = 0.0025 * 10  'volume multiplier; must not be zero
DTSoundLevel = 0.25        'volume multiplier; must not be zero
RolloverSoundLevel = 0.25      'volume level; range [0, 1]
SpinnerSoundLevel = 0.5      'volume level; range [0, 1]

'///////////////////////-----Ball Release, Guides and Drain-----///////////////////////
Dim DrainSoundLevel, BallReleaseSoundLevel, BottomArchBallGuideSoundFactor, FlipperBallGuideSoundFactor

DrainSoundLevel = 0.8          'volume level; range [0, 1]
BallReleaseSoundLevel = 1        'volume level; range [0, 1]
BottomArchBallGuideSoundFactor = 0.2  'volume multiplier; must not be zero
FlipperBallGuideSoundFactor = 0.015  'volume multiplier; must not be zero

'///////////////////////-----Loops and Lanes-----///////////////////////
Dim ArchSoundFactor
ArchSoundFactor = 0.025 / 5      'volume multiplier; must not be zero

'/////////////////////////////  SOUND PLAYBACK FUNCTIONS  ////////////////////////////
'/////////////////////////////  POSITIONAL SOUND PLAYBACK METHODS  ////////////////////////////
' Positional sound playback methods will play a sound, depending on the X,Y position of the table element or depending on ActiveBall object position
' These are similar subroutines that are less complicated to use (e.g. simply use standard parameters for the PlaySound call)
' For surround setup - positional sound playback functions will fade between front and rear surround channels and pan between left and right channels
' For stereo setup - positional sound playback functions will only pan between left and right channels
' For mono setup - positional sound playback functions will not pan between left and right channels and will not fade between front and rear channels

' PlaySound full syntax - PlaySound(string, int loopcount, float volume, float pan, float randompitch, int pitch, bool useexisting, bool restart, float front_rear_fade)
' Note - These functions will not work (currently) for walls/slingshots as these do not feature a simple, single X,Y position
Sub PlaySoundAtLevelStatic(playsoundparams, aVol, tableobj)
  PlaySound playsoundparams, 0, min(aVol,1) * VolumeDial, AudioPan(tableobj), 0, 0, 0, 0, AudioFade(tableobj)
End Sub

Sub PlaySoundAtLevelExistingStatic(playsoundparams, aVol, tableobj)
  PlaySound playsoundparams, 0, min(aVol,1) * VolumeDial, AudioPan(tableobj), 0, 0, 1, 0, AudioFade(tableobj)
End Sub

Sub PlaySoundAtLevelStaticLoop(playsoundparams, aVol, tableobj)
  PlaySound playsoundparams, - 1, min(aVol,1) * VolumeDial, AudioPan(tableobj), 0, 0, 0, 0, AudioFade(tableobj)
End Sub

Sub PlaySoundAtLevelStaticRandomPitch(playsoundparams, aVol, randomPitch, tableobj)
  PlaySound playsoundparams, 0, min(aVol,1) * VolumeDial, AudioPan(tableobj), randomPitch, 0, 0, 0, AudioFade(tableobj)
End Sub

Sub PlaySoundAtLevelActiveBall(playsoundparams, aVol)
  PlaySound playsoundparams, 0, min(aVol,1) * VolumeDial, AudioPan(ActiveBall), 0, 0, 0, 0, AudioFade(ActiveBall)
End Sub

Sub PlaySoundAtLevelExistingActiveBall(playsoundparams, aVol)
  PlaySound playsoundparams, 0, min(aVol,1) * VolumeDial, AudioPan(ActiveBall), 0, 0, 1, 0, AudioFade(ActiveBall)
End Sub

Sub PlaySoundAtLeveTimerActiveBall(playsoundparams, aVol, ballvariable)
  PlaySound playsoundparams, 0, min(aVol,1) * VolumeDial, AudioPan(ballvariable), 0, 0, 0, 0, AudioFade(ballvariable)
End Sub

Sub PlaySoundAtLevelTimerExistingActiveBall(playsoundparams, aVol, ballvariable)
  PlaySound playsoundparams, 0, min(aVol,1) * VolumeDial, AudioPan(ballvariable), 0, 0, 1, 0, AudioFade(ballvariable)
End Sub

Sub PlaySoundAtLevelRoll(playsoundparams, aVol, pitch)
  PlaySound playsoundparams, - 1, min(aVol,1) * VolumeDial, AudioPan(tableobj), randomPitch, 0, 0, 0, AudioFade(tableobj)
End Sub

' Previous Positional Sound Subs

Sub PlaySoundAt(soundname, tableobj)
  PlaySound soundname, 1, 1 * VolumeDial, AudioPan(tableobj), 0,0,0, 1, AudioFade(tableobj)
End Sub

Sub PlaySoundAtVol(soundname, tableobj, aVol)
  PlaySound soundname, 1, min(aVol,1) * VolumeDial, AudioPan(tableobj), 0,0,0, 1, AudioFade(tableobj)
End Sub

Sub PlaySoundAtBall(soundname)
  PlaySoundAt soundname, ActiveBall
End Sub

Sub PlaySoundAtBallVol (Soundname, aVol)
  PlaySound soundname, 1,min(aVol,1) * VolumeDial, AudioPan(ActiveBall), 0,0,0, 1, AudioFade(ActiveBall)
End Sub

Sub PlaySoundAtBallVolM (Soundname, aVol)
  PlaySound soundname, 1,min(aVol,1) * VolumeDial, AudioPan(ActiveBall), 0,0,0, 0, AudioFade(ActiveBall)
End Sub

Sub PlaySoundAtVolLoops(sound, tableobj, Vol, Loops)
  PlaySound sound, Loops, Vol * VolumeDial, AudioPan(tableobj), 0,0,0, 1, AudioFade(tableobj)
End Sub

'******************************************************
'  Fleep  Supporting Ball & Sound Functions
'******************************************************

Function AudioFade(tableobj) ' Fades between front and back of the table (for surround systems or 2x2 speakers, etc), depending on the Y position on the table. "table1" is the name of the table
  Dim tmp
  tmp = tableobj.y * 2 / tableheight - 1

  If tmp > 7000 Then
    tmp = 7000
  ElseIf tmp <  - 7000 Then
    tmp =  - 7000
  End If

' Thalamus, AudioFade patched
	If tmp > 0 Then
		AudioFade = CSng(tmp ^ 5) 'was 10
	Else
		AudioFade = CSng( - (( - tmp) ^ 5) ) 'was 10
	End If
End Function

Function AudioPan(tableobj) ' Calculates the pan for a tableobj based on the X position on the table. "table1" is the name of the table
  Dim tmp
  tmp = tableobj.x * 2 / tablewidth - 1

  If tmp > 7000 Then
    tmp = 7000
  ElseIf tmp <  - 7000 Then
    tmp =  - 7000
  End If

' Thalamus, AudioPan patched
	If tmp > 0 Then
		AudioPan = CSng(tmp ^ 5) 'was 10
	Else
		AudioPan = CSng( - (( - tmp) ^ 5) ) 'was 10
	End If
End Function

Function Vol(ball) ' Calculates the volume of the sound based on the ball speed
  Vol = CSng(BallVel(ball) ^ 2)
End Function

Function Volz(ball) ' Calculates the volume of the sound based on the ball speed
  Volz = CSng((ball.velz) ^ 2)
End Function

Function Pitch(ball) ' Calculates the pitch of the sound based on the ball speed
  Pitch = BallVel(ball) * 20
End Function

Function BallVel(ball) 'Calculates the ball speed
  BallVel = Int(Sqr((ball.VelX ^ 2) + (ball.VelY ^ 2) ) )
End Function

Function VolPlayfieldRoll(ball) ' Calculates the roll volume of the sound based on the ball speed
  VolPlayfieldRoll = RollingSoundFactor * 0.0005 * CSng(BallVel(ball) ^ 3)
End Function

Function PitchPlayfieldRoll(ball) ' Calculates the roll pitch of the sound based on the ball speed
  PitchPlayfieldRoll = BallVel(ball) ^ 2 * 15
End Function

Function RndInt(min, max) ' Sets a random number integer between min and max
  RndInt = Int(Rnd() * (max - min + 1) + min)
End Function

Function RndNum(min, max) ' Sets a random number between min and max
  RndNum = Rnd() * (max - min) + min
End Function

'/////////////////////////////  GENERAL SOUND SUBROUTINES  ////////////////////////////

Sub SoundStartButton()
  PlaySound ("Start_Button"), 0, StartButtonSoundLevel, 0, 0.25
End Sub

Sub SoundNudgeLeft()
  PlaySound ("Nudge_" & Int(Rnd * 2) + 1), 0, NudgeLeftSoundLevel * VolumeDial, - 0.1, 0.25
End Sub

Sub SoundNudgeRight()
  PlaySound ("Nudge_" & Int(Rnd * 2) + 1), 0, NudgeRightSoundLevel * VolumeDial, 0.1, 0.25
End Sub

Sub SoundNudgeCenter()
  PlaySound ("Nudge_" & Int(Rnd * 2) + 1), 0, NudgeCenterSoundLevel * VolumeDial, 0, 0.25
End Sub

Sub SoundPlungerPull()
  PlaySoundAtLevelStatic ("Plunger_Pull_1"), PlungerPullSoundLevel, Plunger
End Sub

Sub SoundPlungerReleaseBall()
  PlaySoundAtLevelStatic ("Plunger_Release_Ball"), PlungerReleaseSoundLevel, Plunger
End Sub

Sub SoundPlungerReleaseNoBall()
  PlaySoundAtLevelStatic ("Plunger_Release_No_Ball"), PlungerReleaseSoundLevel, Plunger
End Sub

'/////////////////////////////  KNOCKER SOLENOID  ////////////////////////////

Sub KnockerSolenoid()
  PlaySoundAtLevelStatic SoundFX("Knocker_1",DOFKnocker), KnockerSoundLevel, KnockerPosition
End Sub

'/////////////////////////////  DRAIN SOUNDS  ////////////////////////////

Sub RandomSoundDrain(drainswitch)
  PlaySoundAtLevelStatic ("Drain_" & Int(Rnd * 11) + 1), DrainSoundLevel, drainswitch
End Sub

'/////////////////////////////  TROUGH BALL RELEASE SOLENOID SOUNDS  ////////////////////////////

Sub RandomSoundBallRelease(drainswitch)
  PlaySoundAtLevelStatic SoundFX("BallRelease" & Int(Rnd * 7) + 1,DOFContactors), BallReleaseSoundLevel, drainswitch
End Sub

'/////////////////////////////  SLINGSHOT SOLENOID SOUNDS  ////////////////////////////

Sub RandomSoundSlingshotLeft(sling)
  'PlaySoundAtLevelStatic SoundFX("Sling_L" & Int(Rnd * 10) + 1,DOFContactors), SlingshotSoundLevel, Sling
  PlaySoundAtLevelStatic SoundFXDOF("Sling_L" & Int(Rnd * 10) + 1, 103, DOFPulse, DOFContactors), SlingshotSoundLevel, Sling
  'SoundFXDOF("left_slingshot", 103, DOFPulse, DOFContactors)
  'SoundFXDOF("Sling_L" & Int(Rnd * 10) + 1, 103, DOFPulse, DOFContactors)
End Sub

Sub RandomSoundSlingshotRight(sling)
  'PlaySoundAtLevelStatic SoundFX("Sling_R" & Int(Rnd * 8) + 1,DOFContactors), SlingshotSoundLevel, Sling
  PlaySoundAtLevelStatic SoundFXDOF("Sling_R" & Int(Rnd * 8) + 1, 105, DOFPulse, DOFContactors), SlingshotSoundLevel, Sling
  ' PlaySoundAt SoundFXDOF("right_slingshot", 105, DOFPulse, DOFContactors), RemK
End Sub

'/////////////////////////////  BUMPER SOLENOID SOUNDS  ////////////////////////////

Sub RandomSoundBumperTop(Bump)
  PlaySoundAtLevelStatic SoundFX("Bumpers_Top_" & Int(Rnd * 5) + 1,DOFContactors), Vol(ActiveBall) * BumperSoundFactor, Bump
End Sub

Sub RandomSoundBumperMiddle(Bump)
  PlaySoundAtLevelStatic SoundFX("Bumpers_Middle_" & Int(Rnd * 5) + 1,DOFContactors), Vol(ActiveBall) * BumperSoundFactor, Bump
End Sub

Sub RandomSoundBumperBottom(Bump)
  PlaySoundAtLevelStatic SoundFX("Bumpers_Bottom_" & Int(Rnd * 5) + 1,DOFContactors), Vol(ActiveBall) * BumperSoundFactor, Bump
End Sub

'/////////////////////////////  SPINNER SOUNDS  ////////////////////////////

Sub SoundSpinner(spinnerswitch)
  PlaySoundAtLevelStatic ("Spinner"), SpinnerSoundLevel, spinnerswitch
End Sub

'/////////////////////////////  FLIPPER BATS SOUND SUBROUTINES  ////////////////////////////
'/////////////////////////////  FLIPPER BATS SOLENOID ATTACK SOUND  ////////////////////////////

Sub SoundFlipperUpAttackLeft(flipper)
  FlipperUpAttackLeftSoundLevel = RndNum(FlipperUpAttackMinimumSoundLevel, FlipperUpAttackMaximumSoundLevel)
  PlaySoundAtLevelStatic SoundFX("Flipper_Attack-L01",DOFFlippers), FlipperUpAttackLeftSoundLevel, flipper
End Sub

Sub SoundFlipperUpAttackRight(flipper)
  FlipperUpAttackRightSoundLevel = RndNum(FlipperUpAttackMinimumSoundLevel, FlipperUpAttackMaximumSoundLevel)
  PlaySoundAtLevelStatic SoundFX("Flipper_Attack-R01",DOFFlippers), FlipperUpAttackLeftSoundLevel, flipper
End Sub

'/////////////////////////////  FLIPPER BATS SOLENOID CORE SOUND  ////////////////////////////

Sub RandomSoundFlipperUpLeft(flipper)
  'PlaySoundAtLevelStatic SoundFX("Flipper_L0" & Int(Rnd * 9) + 1,DOFFlippers), FlipperLeftHitParm, Flipper
  PlaySoundAtLevelStatic SoundFXDOF("Flipper_L0" & Int(Rnd * 9) + 1, 101, DOFOn, DOFFlippers), FlipperLeftHitParm, Flipper
  'PlaySoundAt SoundFXDOF("Flipper_L0" & Int(Rnd * 9) + 1, 101, DOFOn, DOFFlippers), LeftFlipper
End Sub

Sub RandomSoundFlipperUpRight(flipper)
  'PlaySoundAtLevelStatic SoundFX("Flipper_R0" & Int(Rnd * 9) + 1,DOFFlippers), FlipperRightHitParm, Flipper
  PlaySoundAtLevelStatic SoundFXDOF("Flipper_R0" & Int(Rnd * 9) + 1, 102, DOFOn, DOFFlippers), FlipperRightHitParm, Flipper
End Sub

Sub RandomSoundReflipUpLeft(flipper)
  PlaySoundAtLevelStatic SoundFX("Flipper_ReFlip_L0" & Int(Rnd * 3) + 1,DOFFlippers), (RndNum(0.8, 1)) * FlipperUpSoundLevel, Flipper
End Sub

Sub RandomSoundReflipUpRight(flipper)
  PlaySoundAtLevelStatic SoundFX("Flipper_ReFlip_R0" & Int(Rnd * 3) + 1,DOFFlippers), (RndNum(0.8, 1)) * FlipperUpSoundLevel, Flipper
End Sub

Sub RandomSoundFlipperDownLeft(flipper)
  'PlaySoundAtLevelStatic SoundFX("Flipper_Left_Down_" & Int(Rnd * 7) + 1,DOFFlippers), FlipperDownSoundLevel, Flipper
  PlaySoundAtLevelStatic SoundFXDOF("Flipper_Left_Down_" & Int(Rnd * 7) + 1, 101, DOFOff, DOFFlippers), FlipperDownSoundLevel, Flipper
End Sub

Sub RandomSoundFlipperDownRight(flipper)
  'PlaySoundAtLevelStatic SoundFX("Flipper_Right_Down_" & Int(Rnd * 8) + 1,DOFFlippers), FlipperDownSoundLevel, Flipper
  PlaySoundAtLevelStatic SoundFXDOF("Flipper_Right_Down_" & Int(Rnd * 8) + 1, 102, DOFOff, DOFFlippers), FlipperDownSoundLevel, Flipper
End Sub

'/////////////////////////////  FLIPPER BATS BALL COLLIDE SOUND  ////////////////////////////

Sub LeftFlipperCollide(parm)
  FlipperLeftHitParm = parm / 10
  If FlipperLeftHitParm > 1 Then
    FlipperLeftHitParm = 1
  End If
  FlipperLeftHitParm = FlipperUpSoundLevel * FlipperLeftHitParm
  RandomSoundRubberFlipper(parm)
End Sub

Sub RightFlipperCollide(parm)
  FlipperRightHitParm = parm / 10
  If FlipperRightHitParm > 1 Then
    FlipperRightHitParm = 1
  End If
  FlipperRightHitParm = FlipperUpSoundLevel * FlipperRightHitParm
  RandomSoundRubberFlipper(parm)
End Sub

Sub RandomSoundRubberFlipper(parm)
  PlaySoundAtLevelActiveBall ("Flipper_Rubber_" & Int(Rnd * 7) + 1), parm * RubberFlipperSoundFactor
End Sub

'/////////////////////////////  ROLLOVER SOUNDS  ////////////////////////////

Sub RandomSoundRollover()
  PlaySoundAtLevelActiveBall ("Rollover_" & Int(Rnd * 4) + 1), RolloverSoundLevel
End Sub

Sub aRollovers_Hit(idx)
  RandomSoundRollover
End Sub

'/////////////////////////////  VARIOUS PLAYFIELD SOUND SUBROUTINES  ////////////////////////////
'/////////////////////////////  RUBBERS AND POSTS  ////////////////////////////
'/////////////////////////////  RUBBERS - EVENTS  ////////////////////////////

Sub Rubbers_Hit(idx)
  Dim finalspeed
  finalspeed = Sqr(ActiveBall.velx * ActiveBall.velx + ActiveBall.vely * ActiveBall.vely)
  If finalspeed > 5 Then
    RandomSoundRubberStrong 1
  End If
  If finalspeed <= 5 Then
    RandomSoundRubberWeak()
  End If
End Sub

'/////////////////////////////  RUBBERS AND POSTS - STRONG IMPACTS  ////////////////////////////

Sub RandomSoundRubberStrong(voladj)
  Select Case Int(Rnd * 10) + 1
    Case 1
      PlaySoundAtLevelActiveBall ("Rubber_Strong_1"), Vol(ActiveBall) * RubberStrongSoundFactor * voladj
    Case 2
      PlaySoundAtLevelActiveBall ("Rubber_Strong_2"), Vol(ActiveBall) * RubberStrongSoundFactor * voladj
    Case 3
      PlaySoundAtLevelActiveBall ("Rubber_Strong_3"), Vol(ActiveBall) * RubberStrongSoundFactor * voladj
    Case 4
      PlaySoundAtLevelActiveBall ("Rubber_Strong_4"), Vol(ActiveBall) * RubberStrongSoundFactor * voladj
    Case 5
      PlaySoundAtLevelActiveBall ("Rubber_Strong_5"), Vol(ActiveBall) * RubberStrongSoundFactor * voladj
    Case 6
      PlaySoundAtLevelActiveBall ("Rubber_Strong_6"), Vol(ActiveBall) * RubberStrongSoundFactor * voladj
    Case 7
      PlaySoundAtLevelActiveBall ("Rubber_Strong_7"), Vol(ActiveBall) * RubberStrongSoundFactor * voladj
    Case 8
      PlaySoundAtLevelActiveBall ("Rubber_Strong_8"), Vol(ActiveBall) * RubberStrongSoundFactor * voladj
    Case 9
      PlaySoundAtLevelActiveBall ("Rubber_Strong_9"), Vol(ActiveBall) * RubberStrongSoundFactor * voladj
    Case 10
      PlaySoundAtLevelActiveBall ("Rubber_1_Hard"), Vol(ActiveBall) * RubberStrongSoundFactor * 0.6 * voladj
  End Select
End Sub

'/////////////////////////////  RUBBERS AND POSTS - WEAK IMPACTS  ////////////////////////////

Sub RandomSoundRubberWeak()
  PlaySoundAtLevelActiveBall ("Rubber_" & Int(Rnd * 9) + 1), Vol(ActiveBall) * RubberWeakSoundFactor
End Sub

'/////////////////////////////  WALL IMPACTS  ////////////////////////////

Sub Walls_Hit(idx)
  RandomSoundWall()
End Sub

Sub RandomSoundWall()
  Dim finalspeed
  finalspeed = Sqr(ActiveBall.velx * ActiveBall.velx + ActiveBall.vely * ActiveBall.vely)
  If finalspeed > 16 Then
    Select Case Int(Rnd * 5) + 1
      Case 1
        PlaySoundAtLevelExistingActiveBall ("Wall_Hit_1"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 2
        PlaySoundAtLevelExistingActiveBall ("Wall_Hit_2"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 3
        PlaySoundAtLevelExistingActiveBall ("Wall_Hit_5"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 4
        PlaySoundAtLevelExistingActiveBall ("Wall_Hit_7"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 5
        PlaySoundAtLevelExistingActiveBall ("Wall_Hit_9"), Vol(ActiveBall) * WallImpactSoundFactor
    End Select
  End If
  If finalspeed >= 6 And finalspeed <= 16 Then
    Select Case Int(Rnd * 4) + 1
      Case 1
        PlaySoundAtLevelExistingActiveBall ("Wall_Hit_3"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 2
        PlaySoundAtLevelExistingActiveBall ("Wall_Hit_4"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 3
        PlaySoundAtLevelExistingActiveBall ("Wall_Hit_6"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 4
        PlaySoundAtLevelExistingActiveBall ("Wall_Hit_8"), Vol(ActiveBall) * WallImpactSoundFactor
    End Select
  End If
  If finalspeed < 6 Then
    Select Case Int(Rnd * 3) + 1
      Case 1
        PlaySoundAtLevelExistingActiveBall ("Wall_Hit_4"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 2
        PlaySoundAtLevelExistingActiveBall ("Wall_Hit_6"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 3
        PlaySoundAtLevelExistingActiveBall ("Wall_Hit_8"), Vol(ActiveBall) * WallImpactSoundFactor
    End Select
  End If
End Sub

'/////////////////////////////  METAL TOUCH SOUNDS  ////////////////////////////

Sub RandomSoundMetal()
  PlaySoundAtLevelActiveBall ("Metal_Touch_" & Int(Rnd * 13) + 1), Vol(ActiveBall) * MetalImpactSoundFactor
End Sub

'/////////////////////////////  METAL - EVENTS  ////////////////////////////

Sub Metals_Hit (idx)
  RandomSoundMetal
End Sub

'Sub ShooterDiverter_collide(idx)
' RandomSoundMetal
'End Sub

'/////////////////////////////  BOTTOM ARCH BALL GUIDE  ////////////////////////////
'/////////////////////////////  BOTTOM ARCH BALL GUIDE - SOFT BOUNCES  ////////////////////////////

Sub RandomSoundBottomArchBallGuide()
  Dim finalspeed
  finalspeed = Sqr(ActiveBall.velx * ActiveBall.velx + ActiveBall.vely * ActiveBall.vely)
  If finalspeed > 16 Then
    PlaySoundAtLevelActiveBall ("Apron_Bounce_" & Int(Rnd * 2) + 1), Vol(ActiveBall) * BottomArchBallGuideSoundFactor
  End If
  If finalspeed >= 6 And finalspeed <= 16 Then
    Select Case Int(Rnd * 2) + 1
      Case 1
        PlaySoundAtLevelActiveBall ("Apron_Bounce_1"), Vol(ActiveBall) * BottomArchBallGuideSoundFactor
      Case 2
        PlaySoundAtLevelActiveBall ("Apron_Bounce_Soft_1"), Vol(ActiveBall) * BottomArchBallGuideSoundFactor
    End Select
  End If
  If finalspeed < 6 Then
    Select Case Int(Rnd * 2) + 1
      Case 1
        PlaySoundAtLevelActiveBall ("Apron_Bounce_Soft_1"), Vol(ActiveBall) * BottomArchBallGuideSoundFactor
      Case 2
        PlaySoundAtLevelActiveBall ("Apron_Medium_3"), Vol(ActiveBall) * BottomArchBallGuideSoundFactor
    End Select
  End If
End Sub

'/////////////////////////////  BOTTOM ARCH BALL GUIDE - HARD HITS  ////////////////////////////

Sub RandomSoundBottomArchBallGuideHardHit()
  PlaySoundAtLevelActiveBall ("Apron_Hard_Hit_" & Int(Rnd * 3) + 1), BottomArchBallGuideSoundFactor * 0.25
End Sub

Sub aApron_Hit (idx)
  If Abs(cor.ballvelx(ActiveBall.id) < 4) And cor.ballvely(ActiveBall.id) > 7 Then
    RandomSoundBottomArchBallGuideHardHit()
  Else
    RandomSoundBottomArchBallGuide
  End If
End Sub

'/////////////////////////////  FLIPPER BALL GUIDE  ////////////////////////////

Sub RandomSoundFlipperBallGuide()
  Dim finalspeed
  finalspeed = Sqr(ActiveBall.velx * ActiveBall.velx + ActiveBall.vely * ActiveBall.vely)
  If finalspeed > 16 Then
    Select Case Int(Rnd * 2) + 1
      Case 1
        PlaySoundAtLevelActiveBall ("Apron_Hard_1"),  Vol(ActiveBall) * FlipperBallGuideSoundFactor
      Case 2
        PlaySoundAtLevelActiveBall ("Apron_Hard_2"),  Vol(ActiveBall) * 0.8 * FlipperBallGuideSoundFactor
    End Select
  End If
  If finalspeed >= 6 And finalspeed <= 16 Then
    PlaySoundAtLevelActiveBall ("Apron_Medium_" & Int(Rnd * 3) + 1),  Vol(ActiveBall) * FlipperBallGuideSoundFactor
  End If
  If finalspeed < 6 Then
    PlaySoundAtLevelActiveBall ("Apron_Soft_" & Int(Rnd * 7) + 1),  Vol(ActiveBall) * FlipperBallGuideSoundFactor
  End If
End Sub

'/////////////////////////////  TARGET HIT SOUNDS  ////////////////////////////

Sub RandomSoundTargetHitStrong()
  PlaySoundAtLevelActiveBall SoundFX("Target_Hit_" & Int(Rnd * 4) + 5,DOFTargets), Vol(ActiveBall) * 0.45 * TargetSoundFactor
End Sub

Sub RandomSoundTargetHitWeak()
  PlaySoundAtLevelActiveBall SoundFX("Target_Hit_" & Int(Rnd * 4) + 1,DOFTargets), Vol(ActiveBall) * TargetSoundFactor
End Sub

Sub PlayTargetSound()
  Dim finalspeed
  finalspeed = Sqr(ActiveBall.velx * ActiveBall.velx + ActiveBall.vely * ActiveBall.vely)
  If finalspeed > 10 Then
    RandomSoundTargetHitStrong()
    RandomSoundBallBouncePlayfieldSoft ActiveBall
  Else
    RandomSoundTargetHitWeak()
  End If
End Sub

Sub Targets_Hit (idx)
  PlayTargetSound
  TargetBouncer activeball, 0.3
End Sub

'/////////////////////////////  BALL BOUNCE SOUNDS  ////////////////////////////

Sub RandomSoundBallBouncePlayfieldSoft(aBall)
  Select Case Int(Rnd * 9) + 1
    Case 1
      PlaySoundAtLevelStatic ("Ball_Bounce_Playfield_Soft_1"), volz(aBall) * BallBouncePlayfieldSoftFactor, aBall
    Case 2
      PlaySoundAtLevelStatic ("Ball_Bounce_Playfield_Soft_2"), volz(aBall) * BallBouncePlayfieldSoftFactor * 0.5, aBall
    Case 3
      PlaySoundAtLevelStatic ("Ball_Bounce_Playfield_Soft_3"), volz(aBall) * BallBouncePlayfieldSoftFactor * 0.8, aBall
    Case 4
      PlaySoundAtLevelStatic ("Ball_Bounce_Playfield_Soft_4"), volz(aBall) * BallBouncePlayfieldSoftFactor * 0.5, aBall
    Case 5
      PlaySoundAtLevelStatic ("Ball_Bounce_Playfield_Soft_5"), volz(aBall) * BallBouncePlayfieldSoftFactor, aBall
    Case 6
      PlaySoundAtLevelStatic ("Ball_Bounce_Playfield_Hard_1"), volz(aBall) * BallBouncePlayfieldSoftFactor * 0.2, aBall
    Case 7
      PlaySoundAtLevelStatic ("Ball_Bounce_Playfield_Hard_2"), volz(aBall) * BallBouncePlayfieldSoftFactor * 0.2, aBall
    Case 8
      PlaySoundAtLevelStatic ("Ball_Bounce_Playfield_Hard_5"), volz(aBall) * BallBouncePlayfieldSoftFactor * 0.2, aBall
    Case 9
      PlaySoundAtLevelStatic ("Ball_Bounce_Playfield_Hard_7"), volz(aBall) * BallBouncePlayfieldSoftFactor * 0.3, aBall
  End Select
End Sub

Sub RandomSoundBallBouncePlayfieldHard(aBall)
  PlaySoundAtLevelStatic ("Ball_Bounce_Playfield_Hard_" & Int(Rnd * 7) + 1), volz(aBall) * BallBouncePlayfieldHardFactor, aBall
End Sub

'/////////////////////////////  DELAYED DROP - TO PLAYFIELD - SOUND  ////////////////////////////

Sub RandomSoundDelayedBallDropOnPlayfield(aBall)
  Select Case Int(Rnd * 5) + 1
    Case 1
      PlaySoundAtLevelStatic ("Ball_Drop_Playfield_1_Delayed"), DelayedBallDropOnPlayfieldSoundLevel, aBall
    Case 2
      PlaySoundAtLevelStatic ("Ball_Drop_Playfield_2_Delayed"), DelayedBallDropOnPlayfieldSoundLevel, aBall
    Case 3
      PlaySoundAtLevelStatic ("Ball_Drop_Playfield_3_Delayed"), DelayedBallDropOnPlayfieldSoundLevel, aBall
    Case 4
      PlaySoundAtLevelStatic ("Ball_Drop_Playfield_4_Delayed"), DelayedBallDropOnPlayfieldSoundLevel, aBall
    Case 5
      PlaySoundAtLevelStatic ("Ball_Drop_Playfield_5_Delayed"), DelayedBallDropOnPlayfieldSoundLevel, aBall
  End Select
End Sub

'/////////////////////////////  BALL GATES AND BRACKET GATES SOUNDS  ////////////////////////////

Sub SoundPlayfieldGate()
  PlaySoundAtLevelStatic ("Gate_FastTrigger_" & Int(Rnd * 2) + 1), GateSoundLevel, ActiveBall
End Sub

Sub SoundHeavyGate()
  PlaySoundAtLevelStatic ("Gate_2"), GateSoundLevel, ActiveBall
End Sub

Sub Gates_hit(idx)
  SoundHeavyGate
End Sub

Sub GatesWire_hit(idx)
  SoundPlayfieldGate
End Sub

'/////////////////////////////  LEFT LANE ENTRANCE - SOUNDS  ////////////////////////////

Sub RandomSoundLeftArch()
  PlaySoundAtLevelActiveBall ("Arch_L" & Int(Rnd * 4) + 1), Vol(ActiveBall) * ArchSoundFactor
End Sub

Sub RandomSoundRightArch()
  PlaySoundAtLevelActiveBall ("Arch_R" & Int(Rnd * 4) + 1), Vol(ActiveBall) * ArchSoundFactor
End Sub

Sub Arch1_hit()
  If ActiveBall.velx > 1 Then SoundPlayfieldGate
  StopSound "Arch_L1"
  StopSound "Arch_L2"
  StopSound "Arch_L3"
  StopSound "Arch_L4"
End Sub

Sub Arch1_unhit()
  If ActiveBall.velx <  - 8 Then
    RandomSoundRightArch
  End If
End Sub

Sub Arch2_hit()
  If ActiveBall.velx < 1 Then SoundPlayfieldGate
  StopSound "Arch_R1"
  StopSound "Arch_R2"
  StopSound "Arch_R3"
  StopSound "Arch_R4"
End Sub

Sub Arch2_unhit()
  If ActiveBall.velx > 10 Then
    RandomSoundLeftArch
  End If
End Sub

'/////////////////////////////  SAUCERS (KICKER HOLES)  ////////////////////////////

Sub SoundSaucerLock()
  PlaySoundAtLevelStatic ("Saucer_Enter_" & Int(Rnd * 2) + 1), SaucerLockSoundLevel, ActiveBall
End Sub

Sub SoundSaucerKick(scenario, saucer)
  Select Case scenario
    Case 0
      PlaySoundAtLevelStatic SoundFX("Saucer_Empty", DOFContactors), SaucerKickSoundLevel, saucer
    Case 1
      PlaySoundAtLevelStatic SoundFX("Saucer_Kick", DOFContactors), SaucerKickSoundLevel, saucer
  End Select
End Sub

'/////////////////////////////  BALL COLLISION SOUND  ////////////////////////////




'///////////////////////////  DROP TARGET HIT SOUNDS  ///////////////////////////

Sub RandomSoundDropTargetReset(obj)
  PlaySoundAtLevelStatic SoundFX("Drop_Target_Reset_" & Int(Rnd * 6) + 1,DOFContactors), 1, obj
End Sub

Sub SoundDropTargetDrop(obj)
  PlaySoundAtLevelStatic ("Drop_Target_Down_" & Int(Rnd * 6) + 1), 200, obj
End Sub

'/////////////////////////////  GI AND FLASHER RELAYS  ////////////////////////////

Const RelayFlashSoundLevel = 0.315  'volume level; range [0, 1];
Const RelayGISoundLevel = 1.05    'volume level; range [0, 1];

Sub Sound_GI_Relay(toggle, obj)
  Select Case toggle
    Case 1
      PlaySoundAtLevelStatic ("Relay_GI_On"), 0.025 * RelayGISoundLevel, obj
    Case 0
      PlaySoundAtLevelStatic ("Relay_GI_Off"), 0.025 * RelayGISoundLevel, obj
  End Select
End Sub

Sub Sound_Flash_Relay(toggle, obj)
  Select Case toggle
    Case 1
      PlaySoundAtLevelStatic ("Relay_Flash_On"), 0.025 * RelayFlashSoundLevel, obj
    Case 0
      PlaySoundAtLevelStatic ("Relay_Flash_Off"), 0.025 * RelayFlashSoundLevel, obj
  End Select
End Sub

'/////////////////////////////////////////////////////////////////
'         End Mechanical Sounds
'/////////////////////////////////////////////////////////////////



'*****************************
' AUTO TESTING
' by:NailBuster
' Global variable "AutoQA" below will switch all this on/off during testing.
'
'*****************************
' NailBusters AutoQA Code and triggers..
' this to do for ROM based:  timeout on keydown.  if 30 seconds, then assume game is over and you add coins/start game key.
' add a timer called AutoQAStartGame.  you can run every 10000 interval.

Dim AutoQA:AutoQa=False                 'Main QA Testing FLAG setting to false will disable all this stuff.
Dim QACoinStartSec:QACoinStartSec=30   'timeout seconds for AutoCoinStartSec
Dim QANumberOfCoins:QANumberOfCoins=1 'number of coins to add for each start
Dim QASecondsDiff

Dim QALastFlipperTime:QALastFlipperTime=Now()
Dim AutoFlipperLeft:AutoFlipperLeft=false
Dim AutoFlipperRight:AutoFlipperRight=false
if AutoQa then TriggerLeftAuto.Enabled = True
if AutoQa then TriggerRightAuto.Enabled = True
if AutoQa then AutoQAStartGame.Enabled = True   ' Start it up if this is enabled

Sub AutoQAStartGame_Timer()                 'this is a timeout when sitting in attract with no flipper presses for 60 seconds, then add coins and start game.
 if AutoQA=false Then Exit Sub

 QASecondsDiff = DateDiff("s",QALastFlipperTime,NOW())

 if QASecondsDiff>QACoinStartSec Then

    'simulate quarters and start game keys
    Dim fx : fx=0
    Dim keydelay : keydelay=100
  Do While fx<QANumberOfCoins
    vpmtimer.addtimer keydelay,"Table1_KeyDown(AddCreditKey) '"
        vpmtimer.addtimer keydelay+200,"Table1_KeyUp(AddCreditKey) '"
        keydelay=keydelay+500
    fx=fx+1
  Loop
    vpmtimer.addtimer keydelay,"Table1_KeyDown(StartGameKey) '"
    vpmtimer.addtimer keydelay+200,"Table1_KeyUp(StartGameKey) '"
    QALastFlipperTime=Now()
  AutoFlipperLeft=false
    AutoFlipperRight=false
 End if

  if QASecondsDiff>30 Then   'safety of stuck up flipers.
   AutoFlipperLeft=false
   AutoFlipperRight=false
  End if

  if bGameInPlay and QASecondsDiff>20 Then   'Press the magna
  vpmtimer.addtimer keydelay,"Table1_KeyDown(RightMagnaSave) '"
  vpmtimer.addtimer keydelay+200,"Table1_KeyUp(RightMagnaSave) '"
  End if

End Sub


Sub TriggerAutoPlunger_Hit()          'add a trigger in front of plunger.  adjust the delay timings if needed.
    if AutoQA=false Then Exit Sub
  vpmtimer.addtimer 10,"Table1_KeyDown(PlungerKey) '"
    vpmtimer.addtimer 700+RND(400),"Table1_KeyUp(PlungerKey) '"
End Sub


Sub FlipperUP(which)  'which=1 left 2 right
QALastFlipperTime=Now()
if which=1 Then
   Table1_KeyDown(LeftFlipperKey)
   vpmtimer.addtimer 200+Rnd(200),"Table1_KeyUP(LeftFlipperKey):AutoFlipperLeft=false  '"
Else
   Table1_KeyDown(RightFlipperKey)
   vpmtimer.addtimer 200+Rnd(200),"Table1_KeyUP(RightFlipperKey):AutoFlipperRight=false  '"
end If

End Sub


Sub TriggerLeftAuto_Hit()
  if AutoQA And AutoFlipperLeft=false then vpmtimer.addtimer 20+Rnd(50),"FlipperUP(1) '"
    AutoFlipperLeft=true
End Sub

Sub TriggerRightAuto_Hit()
  if AutoQA and AutoFlipperRight=false then vpmtimer.addtimer 20+Rnd(20),"FlipperUP(2) '"
    AutoFlipperRight=true
End Sub

Sub TriggerLeftAuto2_Hit()
  TriggerLeftAuto_Hit()
End Sub

Sub TriggerRightAuto2_Hit()
  TriggerRightAuto_Hit()
End Sub
'*****************************************************

Dim MPUserIdx
Dim bInMultiplayerSelect
Dim MPUsers
Dim bAcceptIdx  ' -1=No Request, 0=No, 1=Yes
Dim UserRequest
Sub SceneMultiplayer()
  Dim users
  Dim i
'WriteToLog "     ", "SceneMultiplayer: "

  VPXMP.Register VPXMPUser, bVPXMPEnabled
  if VPXMP.bEnabled=False then exit sub

  MPUsers = VPXMP.GetUsers()
' if ubound(MPUsers)=0 then exit sub

  tmrVPXMP.Interval = 500
  tmrVPXMP.Enabled = True

  MPUserIdx=0
  UserRequest=""
  bInMultiplayerSelect=True
  bAcceptIdx=-1
  pInAttract=False
  PuPlayer.playlistplayex pOverVid,"PupOverlays","clear.png", 1, 1
  PuPlayer.PlayStop pOverVid
  PuPlayer.playlistplayex pOverVid,"PupVideos","blank.mp4", 1, 1
  PuPlayer.SetLoop pOverVid, 1

  PuPlayer.LabelShowPage pMVideo, 4, 0,""   ' Show Blank Page so it doesnt overlap (We shouldnt need this but labels are popping over)
  PuPlayer.LabelShowPage pOverVid, 5,0,""

  puPlayer.LabelSet pOverVid,"PlayerMessage", "Select Opponent" ,1,"{'mt':2,'color':" & pupOrange & ", 'yalign':0,'xalign':1}"
  SceneMultiplayerDraw
' PlaySoundVol "sfx-mystery4", VolDef   ' I think I got it callout

End Sub

Sub SceneMultiplayerDraw
  Dim i
  puPlayer.LabelSet pOverVid,"PlayerMessage", "Select Opponent" ,1,"{'mt':2,'color':" & pupOrange & ", 'yalign':0,'xalign':1}"
  if ubound(MPUsers)>=0 then
    For i=0 to 3
      if MPUserIdx+i <= ubound(MPUsers) then
        if i=0 then
          puPlayer.LabelSet pOverVid,"PlayerList" & i+1, ">" & MPUsers(MPUserIdx+i) & "<",1,"{'mt':2,'color':" & pupOrange & ", 'yalign':0,'xalign':1, 'size':12}"
        else
          puPlayer.LabelSet pOverVid,"PlayerList" & i+1, MPUsers(MPUserIdx+i) ,1,"{'mt':2,'color':" & pupOrange & ", 'yalign':0,'xalign':1, 'size':9}"
        End if
      else
        puPlayer.LabelSet pOverVid,"PlayerList" & i+1, "" ,1,"{'mt':2,'color':" & pupOrange & ", 'yalign':0,'xalign':1, 'size':9}"
      End if
    Next
  else
    MPUsers = VPXMP.GetUsers()
  End if
End Sub

Sub SceneMPSelect(keycode)
  if keycode=50 then
    if bInMultiplayerSelect=False then
      if pInAttract then SceneMultiplayer
    else
      tmrVPXMP.Enabled = False
      bInMultiplayerSelect=False
      pAttractStart
      PuPlayer.LabelShowPage pMVideo, 1, 0,""   ' Show Blank Page so it doesnt overlap (We shouldnt need this but labels are popping over)
      PuPlayer.LabelShowPage pOverVid, 1,0,""
      PuPlayer.PlayStop pOverVid
      PuPlayer.SetLoop pOverVid, 0
    End if
  elseif bInMultiplayerSelect and bAcceptIdx<>-1 then
    If keycode = LeftFlipperKey Then
      bAcceptIdx=1
      puPlayer.LabelSet pOverVid,"PlayerList3", "[YES]  NO" ,1,"{'mt':2,'color':" & pupOrange & ", 'yalign':0,'xalign':1, 'size':9}"

    elseif keycode = RightFlipperKey Then
      bAcceptIdx=0
      puPlayer.LabelSet pOverVid,"PlayerList3", " YES  [NO]" ,1,"{'mt':2,'color':" & pupOrange & ", 'yalign':0,'xalign':1, 'size':9}"

    elseif keycode= StartGameKey then
      if bAcceptIdx=1 then
'WriteToLog "     ", "Starting Game - Waiting for Turn"
        SceneMPSelect 50        ' Exit Multiplayer Selection
        tmrVPXMP.Enabled = True
        VPXMP.JoinAccept UserRequest
'       Table1_KeyDown(StartGameKey)
        Table1_KeyDown(StartGameKey)
      else
'WriteToLog "     ", "Deny Request"
        VPXMP.JoinDeny UserRequest
        UserRequest=""
        SceneMultiplayerDraw
      End if
      bAcceptIdx=-1
    End if

  elseif bInMultiplayerSelect then
    If keycode = LeftFlipperKey Then
      MPUserIdx=MPUserIdx-1
      if MPUserIdx < 0 then MPUserIdx=0
      SceneMultiplayerDraw

    elseif keycode = RightFlipperKey Then
      MPUserIdx=MPUserIdx+1
      if MPUserIdx > Ubound(MPUsers) then MPUserIdx=ubound(MPUsers)
      puPlayer.LabelSet pOverVid,"PlayerList1", "" ,1,"{'mt':2,'color':" & pupOrange & ", 'yalign':0,'xalign':1, 'size':9}"
      puPlayer.LabelSet pOverVid,"PlayerList2", "" ,1,"{'mt':2,'color':" & pupOrange & ", 'yalign':0,'xalign':1, 'size':9}"
      puPlayer.LabelSet pOverVid,"PlayerList3", "" ,1,"{'mt':2,'color':" & pupOrange & ", 'yalign':0,'xalign':1, 'size':9}"
      SceneMultiplayerDraw

    elseif keycode= StartGameKey then
      puPlayer.LabelSet pOverVid,"PlayerMessage", "Sending Request to:" & MPUsers(MPUserIdx) ,1,"{'mt':2,'color':" & pupOrange & ", 'yalign':0,'xalign':1}"

      VPXMP.JoinUser MPUsers(MPUserIdx)
    End if
  End if
End sub

Sub tmrVPXMP_Timer()
  dim Resp
  Dim value

  if VPXMP.IsMyTurn() then
    VPXMP.Score(Score(CurrentPlayer))
  else

    resp = vpxMP.Scan(value)

  'if resp<>"" then 'WriteToLog "     ", "VPXMP SCAN:" & resp & ":" & value

    select case resp
      case "StartGame"
'       tmrVPXMP.Enabled = False    ' Dont need this during my turn
        SceneMPSelect 50        ' Exit Multiplayer Selection
        tmrVPXMP.Enabled = True
        Table1_KeyDown(StartGameKey)
        Table1_KeyDown(StartGameKey)
      case "YourTurn"
        if BallsOnPlayfield<>0 then
  '       if tmrVPXMP.Enabled then tmrVPXMP.Enabled=False   ' Dont need timer on my turn
          BallSaverTimerCancel
          Drain_Hit       ' Fake a drain to end the other player
        End if
      case "Score"
        Score(CurrentPlayer)=Value
        PlaySoundVol "sfx-pow"&INT(RND*2)+1 , VolSfx

      case "JoinRequest"
        if UserRequest="" then
          puPlayer.LabelSet pOverVid,"PlayerMessage", "Accept Request?" ,1,"{'mt':2,'color':" & pupOrange & ", 'yalign':0,'xalign':1}"
          puPlayer.LabelSet pOverVid,"PlayerList1", "Request From" ,1,"{'mt':2,'color':" & pupOrange & ", 'yalign':0,'xalign':1, 'size':9}"
          puPlayer.LabelSet pOverVid,"PlayerList2", Value ,1,"{'mt':2,'color':" & pupOrange & ", 'yalign':0,'xalign':1, 'size':9}"
          puPlayer.LabelSet pOverVid,"PlayerList3", "[YES]  NO" ,1,"{'mt':2,'color':" & pupOrange & ", 'yalign':0,'xalign':1, 'size':9}"
          UserRequest=Value
          bAcceptIdx=1
          ' Add Second player
    '     PlayersPlayingGame = PlayersPlayingGame + 1
    '     TotalGamesPlayed = TotalGamesPlayed + 1
    '     UpdateNumberPlayers ' Update the screen layout on pup for multiple players
        End if
    End Select
  End if
End sub


class VPXMultiplayer
  private myKey
  private myUsername
  private theirUsername
  public bEnabled
  private URLBase
  Private json
  Private bWaitForAccept
  Private bMyTurn
  Private lastScore
  Dim objXmlHttpMain
  Dim objXmlHttpMainAsync

  Property Get IsMyTurn()   ' Always returns true if not in multiplayer
    IsMyTurn=bEnabled=False or bMyTurn
  End Property

  Sub SetMyTurn()       ' Switch after we cleanup the current player
    bMyTurn=True
  End Sub

  Public Sub Register(User, bEnable)
    Dim resultStr
    Dim JsonArray
    bWaitForAccept=False
    bMyTurn=False
    Set json = New VbsJson
    URLBase = "http://gamesserver:8080/"
    myUsername=User
    bEnabled=bEnable
    if bEnabled then
      Dim PostData

      Set objXmlHttpMain = CreateObject("Msxml2.ServerXMLHTTP")
      Set objXmlHttpMainAsync = CreateObject("Microsoft.XMLHTTP")

      PostData = "user=" & User
      resultStr = PostMsg("register", PostData)
      If resultStr <> "" Then
        set JsonArray = json.Decode(resultStr)
        myKey=JsonArray("key")
      else
        bEnabled=False
      End if
    End if
  End Sub

  Public Sub Unregister()
    if bEnabled then
      Dim resultStr
      Dim PostData
      PostData = "key=" & myKey
      resultStr = PostMsg("unregister", PostData)
    End if
  End Sub

  Public Function GetUsers()    ' Returns an array of users
    if bEnabled then
      Dim resultStr
      Dim PostData
      Dim JsonArray
      PostData = "key=" & myKey
      resultStr = PostMsg("users", PostData)
      If resultStr <> "" Then
        set JsonArray = json.Decode(resultStr)
        GetUsers=JsonArray("users")
      End if
    End if
  End Function

  Public Function JoinUser(user)    ' Ask user to join a game
    if bEnabled then
      Dim resultStr
      Dim PostData
      Dim JsonArray
      lastScore=0
      bWaitForAccept=True
      theirUsername=user
      PostData = "key=" & myKey & "&data=JoinRequest&recipient=" & user
      resultStr = PostMsg("playUser", PostData)
      If resultStr <> "" Then
'       set JsonArray = json.Decode(resultStr)
      End if
    End if
  End Function

  Public Function JoinDeny(user)  ' Cancel/deny The Join
    if bEnabled then
      Dim resultStr
      Dim PostData
      Dim JsonArray
      lastScore=0
      bWaitForAccept=False
      PostData = "key=" & myKey & "&data=JoinDeny&recipient=" & user
      resultStr = PostMsg("playUser", PostData)
      If resultStr <> "" Then
'       set JsonArray = json.Decode(resultStr)
      End if
    End if
  End Function

  Public Function JoinAccept(user)  ' Accept The Request
    if bEnabled then
      Dim resultStr
      Dim PostData
      Dim JsonArray
      lastScore=0
      bWaitForAccept=False
      bMyTurn=False
      theirUsername=user
      PostData = "key=" & myKey & "&data=JoinAccept&recipient=" & user
      resultStr = PostMsg("playUser", PostData)
      If resultStr <> "" Then
'       set JsonArray = json.Decode(resultStr)
      End if
    End if
  End Function

  Public Function GameOver()  ' End the game
    if bEnabled then
      Dim resultStr
      Dim PostData
      Dim JsonArray
      lastScore=0
      bWaitForAccept=False
      bMyTurn=False
      PostData = "key=" & myKey & "&data=GameOver&recipient=" & theirUsername
      resultStr = PostMsg("playUser", PostData)
      If resultStr <> "" Then
'       set JsonArray = json.Decode(resultStr)
      End if
    End if
  End Function

  Public Function Score(value)  ' Cancel/deny The Join
'WriteToLog "     ", "VPXMP.Score " & bEnabled & " "  & bMyTurn & " " & myKey & " " & theirUsername
    if bEnabled and bMyTurn then
      Dim resultStr
      Dim PostData
      Dim JsonArray
      lastScore=0
      PostData = "key=" & myKey & "&data=score:" & value & "&recipient=" & theirUsername
      resultStr = PostMsg("playUser", PostData)
      If resultStr <> "" Then
'       set JsonArray = json.Decode(resultStr)
      End if
    End if
  End Function

  Public Function NextPlayer()  ' Cycle Turn
'WriteToLog "     ", "NextPlayer:" & bMyTurn
    if bEnabled and bMyTurn then
      tmrVPXMP.Enabled=True
      bMyTurn=False
      Dim resultStr
      Dim PostData
      Dim JsonArray
      lastScore=0
      PostData = "key=" & myKey & "&data=NextPlayer&recipient=" & theirUsername
      resultStr = PostMsg("playUser", PostData)
      If resultStr <> "" Then
'       set JsonArray = json.Decode(resultStr)
      End if
    else
      bMyTurn=True
    End if
  End Function


  Public Function Scan(ByRef value)       ' Scan for updates
    if bEnabled then
      Dim resultStr
      Dim PostData
      Dim JsonArray
      PostData = "key=" & myKey
      resultStr = PostMsg("status", PostData)
      If resultStr <> "" Then
'WriteToLog "     ", "RESP:" & resultStr
        set JsonArray = json.Decode(resultStr)
        if bWaitForAccept then
          if JsonArray("joinState")=3 then
            bMyTurn=True
            bWaitForAccept=False
            Scan="StartGame"
          End if
        elseif JsonArray("joinState")=2 then  ' Join Request
          Scan="JoinRequest"
          value=JsonArray("userPlaying")
        elseif bMyTurn=False then
          if JsonArray("joinState")=3 then
'           bMyTurn=True
            Scan="YourTurn"
          elseif bGameInPlay and lastScore <> JsonArray("score") then
            Scan="Score"
            value=JsonArray("score")
            lastScore=value
          End if
        End if
      End if

    End if
  End Function


  Private Function PostMsg( endpoint, PostData)
    Dim Url

'WriteToLog "     ", "PostMSg:" & endpoint & " " & PostData
    Url = URLBase + endpoint

'   if bMyTurn then
'     objXmlHttpMainAsync.open "POST",Url, False
'     objXmlHttpMainAsync.setRequestHeader "Content-Type", "application/x-www-form-urlencoded"
'     objXmlHttpMainAsync.setRequestHeader "Content-Length", Len(PostData)
'     on error resume next
'     objXmlHttpMainAsync.send PostData
'     if err.number=-2147012867 then
'       MsgBox "Multiplayer ServerA is down (" & err.number & ") " & Err.Description
'       bEnabled=False
'     elseif err.number <> 0 then
'       'WriteToLog "     ", "Multiplayer ServerA error (" & err.number & ") " & Err.Description
'     End if
'     On error goto 0
'   else
      objXmlHttpMain.open "POST",Url, False
      objXmlHttpMain.setRequestHeader "Content-Type", "application/x-www-form-urlencoded"
      objXmlHttpMain.setRequestHeader "Content-Length", Len(PostData)

      on error resume next
      objXmlHttpMain.send PostData
      if err.number=-2147012867 then
        MsgBox "Multiplayer Server is down (" & err.number & ") " & Err.Description
        bEnabled=False
      elseif err.number <> 0 then
        'WriteToLog "     ", "Multiplayer Server error (" & err.number & ") " & Err.Description
      End if
'     msgbox objXmlHttpMain.status
'     msgbox objXmlHttpMain.responseText
'     'WriteToLog "     ", "VPMMP Init: (" & objXmlHttpMain.status & ")" & objXmlHttpMain.responseText

''WriteToLog "     ", "PostMSg Resp:" & objXmlHttpMain.responseText
      If objXmlHttpMain.status = 200 Then
        PostMsg = objXmlHttpMain.responseText
      else
        PostMsg=""
      End if
'   End if
    On error goto 0
  End Function

' Public Property Get name()
'   name = lname
' End Property
' Public Property Let name(value)
'   lname = value
' End Property

End Class

Class VbsJson   'https://gist.github.com/douglascrp/26477fa0c523186b55705890a97b9821
 'Author: Demon
 'Date: 2012/5/3
 'Website: http://demon.tw
 Private Whitespace, NumberRegex, StringChunk
 Private b, f, r, n, t

 Private Sub Class_Initialize
   Whitespace = " " & vbTab & vbCr & vbLf
   b = ChrW( 8 )
   f = vbFormFeed
   r = vbCr
   n = vbLf
   t = vbTab

   Set NumberRegex = New RegExp
   NumberRegex.Pattern = "(-?(?:0|[1-9]\d*))(\.\d+)?([eE][-+]?\d+)?"
   NumberRegex.Global = False
   NumberRegex.MultiLine = True
   NumberRegex.IgnoreCase = True

   Set StringChunk = New RegExp
   StringChunk.Pattern = "([\s\S]*?)([""\\\x00-\x1f])"
   StringChunk.Global = False
   StringChunk.MultiLine = True
   StringChunk.IgnoreCase = True
 End Sub

 'Return a JSON string representation of a VBScript data structure
 'Supports the following objects and types
 '+-------------------+---------------+
 '| VBScript | JSON |
 '+======================================
 '| Dictionary | object |
 '+-------------------+---------------+
 '| Array | array |
 '+-------------------+---------------+
 '| String | string |
 '+-------------------+---------------+
 '| Number | number |
 '+-------------------+---------------+
 '| True | true |
 '+-------------------+---------------+
 '| False | false |
 '+-------------------+---------------+
 '| Null | null |
 '+-------------------+---------------+
 Public Function Encode( ByRef obj)
   Dim buf, i, c, g
   Set buf = CreateObject ( "Scripting.Dictionary" )
   Select Case VarType (obj)
     Case vbNull
       buf.Add buf.Count, "null"
     Case vbBoolean
       If obj Then
         buf.Add buf.Count, "true"
       Else
         buf.Add buf.Count, "false"
       End If
     Case vbInteger , vbLong , vbSingle , vbDouble
       buf.Add buf.Count, obj
     Case vbString
       buf.Add buf.Count, """"
       For i = 1 To Len (obj)
         c = Mid (obj, i, 1 )
         Select Case c
           Case """" buf.Add buf.Count, "\"""
           Case "\" buf.Add buf.Count, "\\"
           Case "/" buf.Add buf.Count, "/"
           Case b buf.Add buf.Count, "\b"
           Case f buf.Add buf.Count, "\f"
           Case r buf.Add buf.Count, "\r"
           Case n buf.Add buf.Count, "\n"
           Case t buf.Add buf.Count, "\t"
           Case Else
             If AscW(c) >= 0 And AscW(c) <= 31 Then
               c = Right ( "0" & Hex (AscW(c)), 2 )
               buf.Add buf.Count, "\u00" & c
             Else
               buf.Add buf.Count, c
             End If
         End Select
       Next
       buf.Add buf.Count, """"
     Case vbArray + vbVariant
       g = True
       buf.Add buf.Count, "["
       For Each i In obj
         If g Then g = False Else buf.Add buf.Count, ","
         buf.Add buf.Count, Encode(i)
       Next
       buf.Add buf.Count, "]"
     Case vbObject
       If TypeName (obj) = "Dictionary" Then
         g = True
         buf.Add buf.Count, "{"
         For Each i In obj
           If g Then g = False Else buf.Add buf.Count, ","
           buf.Add buf.Count, """" & i & """" & ":" & Encode(obj(i))
         Next
         buf.Add buf.Count, "}"
       Else
         Err.Raise 8732 ,, "None dictionary object"
       End If
     Case Else
       buf.Add buf.Count, """" & CStr (obj) & """"
   End Select
   Encode = Join (buf.Items, "" )
 End Function

 'Return the VBScript representation of ``str(``
 'Performs the following translations in decoding
 '+---------------+-------------------+
 '| JSON | VBScript |
 '+======================================
 '| object | Dictionary |
 '+---------------+-------------------+
 '| array | Array |
 '+---------------+-------------------+
 '| string | String |
 '+---------------+-------------------+
 '| number | Double |
 '+---------------+-------------------+
 '| true | True |
 '+---------------+-------------------+
 '| false | False |
 '+---------------+-------------------+
 '| null | Null |
 '+---------------+-------------------+
 Public Function Decode( ByRef str)
   Dim idx
   Idx = SkipWhitespace(str, 1 )

   If Mid (str, idx, 1 ) = "{" Then
     Set Decode = ScanOnce(str, 1 )
   Else
     Decode = ScanOnce(str, 1 )
   End If
 End Function

 Private Function ScanOnce( ByRef str, ByRef idx)
   Dim c, ms

   Idx = SkipWhitespace(str, idx)
   c = Mid (str, idx, 1 )

   If c = "{" Then
     Idx = idx + 1
     Set ScanOnce = ParseObject(str, idx)
     Exit Function
   ElseIf c = "[" Then
     Idx = idx + 1
     ScanOnce = ParseArray(str, idx)
     Exit Function
   ElseIf c = """" Then
     Idx = idx + 1
     ScanOnce = ParseString(str, idx)
     Exit Function
   ElseIf c = "n" And StrComp ( "null" , Mid (str, idx, 4 )) = 0 Then
     Idx = idx + 4
     ScanOnce = Null
     Exit Function
   ElseIf c = "t" And StrComp ( "true" , Mid (str, idx, 4 )) = 0 Then
     Idx = idx + 4
     ScanOnce = True
     Exit Function
   ElseIf c = "f" And StrComp ( "false" , Mid (str, idx, 5 )) = 0 Then
     Idx = idx + 5
     ScanOnce = False
     Exit Function
   End If

   Set ms = NumberRegex.Execute( Mid (str, idx))
   If ms.Count = 1 Then
     Idx = idx + ms( 0 ).Length
     ScanOnce = CDbl (ms( 0 ))
     Exit Function
   End If

   Err.Raise 8732 ,, "No JSON object could be ScanOnced"
 End Function

 Private Function ParseObject( ByRef str, ByRef idx)
   Dim c, key, value
   Set ParseObject = CreateObject ( "Scripting.Dictionary" )
   Idx = SkipWhitespace(str, idx)
   c = Mid (str, idx, 1 )

   If c = "}" Then
     Exit Function
   ElseIf c <> """" Then
     Err.Raise 8732 ,, "Expecting property name"
   End If

   Idx = idx + 1

   Do
     Key = ParseString(str, idx)

     Idx = SkipWhitespace(str, idx)
     If Mid (str, idx, 1 ) <> ":" Then
       Err.Raise 8732 ,, "Expecting : delimiter"
     End If

     Idx = SkipWhitespace(str, idx + 1 )
     If Mid (str, idx, 1 ) = "{" Then
       Set value = ScanOnce(str, idx)
     Else
       Value = ScanOnce(str, idx)
     End If
     ParseObject.Add key, value

     Idx = SkipWhitespace(str, idx)
     c = Mid (str, idx, 1 )
     If c = "}" Then
       Exit Do
     ElseIf c <> "," Then
      exit do
'msgbox str
'      Err.Raise 8732 ,, "Expecting , delimiter"
     End If

     Idx = SkipWhitespace(str, idx + 1 )
     c = Mid (str, idx, 1 )
     If c <> """" Then
       Err.Raise 8732 ,, "Expecting property name"
     End If

     Idx = idx + 1
   Loop

   Idx = idx + 1
 End Function

 Private Function ParseArray( ByRef str, ByRef idx)
   Dim c, values, value
   Set values = CreateObject ( "Scripting.Dictionary" )
   Idx = SkipWhitespace(str, idx)
   c = Mid (str, idx, 1 )

   If c = "]" Then
     ParseArray = values.Items
     Exit Function
   End If

   Do
     Idx = SkipWhitespace(str, idx)
     If Mid (str, idx, 1 ) = "{" Then
       Set value = ScanOnce(str, idx)
     Else
       Value = ScanOnce(str, idx)
     End If
     values.Add values.Count, value

     Idx = SkipWhitespace(str, idx)
     c = Mid (str, idx, 1 )
     If c = "]" Then
       Exit Do
     ElseIf c <> "," Then
       Err.Raise 8732 ,, "Expecting , delimiter"
     End If

     Idx = idx + 1
   Loop

   Idx = idx + 1
   ParseArray = values.Items
 End Function

 Private Function ParseString( ByRef str, ByRef idx)
   Dim chunks, content, terminator, ms, esc, char
   Set chunks = CreateObject ( "Scripting.Dictionary" )

   Do
     Set ms = StringChunk.Execute( Mid (str, idx))
     If ms.Count = 0 Then
       Err.Raise 8732 ,, "Unterminated string starting"
     End If

     Content = ms( 0 ).Submatches( 0 )
     Terminator = ms( 0 ).Submatches( 1 )
     If Len (content) > 0 Then
       chunks.Add chunks.Count, content
     End If

     Idx = idx + ms( 0 ).Length

     If terminator = """" Then
       Exit Do
     ElseIf terminator <> "\" Then
       Err.Raise 8732 ,, "Invalid control character"
     End If

     Esc = Mid (str, idx, 1 )

     If esc <> "u" Then
       Select Case esc
         Case """" char = """"
         Case "\" char = "\"
         Case "/" char = "/"
         Case "b" char = b
         Case "f" char = f
         Case "n" char = n
         Case "r" char = r
         Case "t" char = t
         Case Else Err.Raise 8732 ,, "Invalid escape"
       End Select
       Idx = idx + 1
     Else
       Char = ChrW( "&H" & Mid (str, idx + 1 , 4 ))
       Idx = idx + 5
     End If

     chunks.Add chunks.Count, char
   Loop

   ParseString = Join (chunks.Items, "" )
 End Function

 Private Function SkipWhitespace( ByRef str, ByVal idx)
   Do While idx <= Len (str) And _
     InStr (Whitespace, Mid (str, idx, 1 )) > 0
     Idx = idx + 1
   Loop
   SkipWhitespace = idx
 End Function

End Class






'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
' X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X
'/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/
'  Orbital Scoreboard Code
'\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\ /\
' X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X

'****************************
' POST SCORES
'****************************
Dim osbtemp
Dim osbtempscore:osbtempscore = 0
if osbactive = 1 or osbactive = 2 Then osbtemp = osbdefinit
Sub SubmitOSBScore(bWait)
  dim vers
  Dim ver
  vers=split(myVersion,".")     ' Convert x.y.z to x.y
  ver=vers(0) & "." & vers(1)

  On Error Resume Next
  if osbactive = 1 or osbactive = 2 Then
    PuPlayer.LabelShowPage pBackglass, 3,0,""
    puPlayer.LabelSet pBackglass,"EnterHS1", "Sending to Orbital... "   ,1,""

    Dim objXmlHttpMain, Url, strJSONToSend
WriteToLog "     ", "SUBMITTING ORBITAL:" & CStr(osbtempscore)
    Url = "https://hook.integromat.com/82bu988v9grj31vxjklh2e4s6h97rnu0"
    if dmdCriticalChanged=False then
      strJSONToSend = "{""auth"":""" & osbkey &""",""player id"": """ & osbid & """,""player initials"": """ & osbtemp &""",""score"": " & CStr(osbtempscore) & ",""table"":"""& TableName & """,""version"":""" & ver & """}"
    else
      strJSONToSend = "{""auth"":""" & osbkey &""",""player id"": """ & osbid & """,""player initials"": """ & osbtemp & "*" &""",""score"": " & CStr(osbtempscore) & ",""table"":"""& TableName & """,""version"":""" & ver & """}"
    End if

    'Set objXmlHttpMain = CreateObject("Msxml2.ServerXMLHTTP")
    Set objXmlHttpMain = CreateObject("Microsoft.XMLHTTP")
    objXmlHttpMain.open "PUT",Url, True                   ' execute Asynch
    objXmlHttpMain.setRequestHeader "Content-Type", "application/json"
    objXmlHttpMain.setRequestHeader "application", "application/json"

    objXmlHttpMain.send strJSONToSend

    puPlayer.LabelSet pBackglass,"EnterHS1", ""   ,1,""
    if bWait then CheckHighScoresPlayer
  end if
End Sub

'****************************
' GET SCORES
'****************************
dim worldscores

Sub GetScores()
  if osbactive =0 then exit sub
  if osbkey="" then exit sub
  On Error Resume Next
  Dim objXmlHttpMain, Url, strJSONToSend

  Url = "https://hook.integromat.com/kj765ojs42ac3w4915elqj5b870jrm5c"

  strJSONToSend = "{""auth"":"""& osbkey &""", ""table"":"""& TableName & """}"

  Set objXmlHttpMain = CreateObject("Msxml2.ServerXMLHTTP")
  objXmlHttpMain.open "PUT",Url, False
  objXmlHttpMain.setRequestHeader "Content-Type", "application/json"
  objXmlHttpMain.setRequestHeader "application", "application/json"

  objXmlHttpMain.send strJSONToSend

  worldscores = objXmlHttpMain.responseText
  'vpmtimer.addtimer 3000, "showsuccess '"
  'WriteToLog "     ", "Got OSB scores"
  ''WriteToLog "     ", worldscores
  splitscores
End Sub

Dim scorevar(22)
Dim dailyvar(22)
Dim weeklyvar(22)
Dim alltimevar(42)
sub emptyscores
  dim i
  For i = 0 to 42
    alltimevar(i) = "0"
  Next
  For i = 0 to 22
    weeklyvar(i) = "0"
    dailyvar(i) = "0"
  Next
End Sub
emptyscores


Sub splitscores
  On Error Resume Next
  dim a,scoreset,subset,subit,myNum,daily,weekly,alltime,x
  a = Split(worldscores,": {")
  subset = Split(a(1),"[")

'   'WriteToLog "     ", subset(1)
'   'WriteToLog "     ", subset(2)
'   'WriteToLog "     ", subset(3)
' daily scores
  myNum = 0
  daily = Split(subset(1),": ")
  for each x in daily
    myNum = MyNum + 1
    x = Replace(x, vbCr, "")
    x = Replace(x, vbLf, "")
    x = Replace(x, ",", "")
    x = Replace(x, """", "")
    x = Replace(x, "{", "")
    x = Replace(x, "}", "")
    x = Replace(x, "score", "")
    x = Replace(x, "initials", "")
    x = Replace(x, "weekly", "")
    x = Replace(x, "]", "")
    x = Replace(x, "alltime", "")
    dailyvar(MyNum) = x
    if dailyvar(MyNum) = "" Then
      if MyNum = 2 or 4 or 6 or 8 or 10 or 12 or 14 or 16 or 18 or 20 Then
        dailyvar(MyNum) = "OBS"
      Else
        dailyvar(MyNum) = 0
      end if
    end if
    'WriteToLog "     ", "dailyvar(" &MyNum & ")=" & x
  Next

' weekly scores
  myNum = 0
  weekly = Split(subset(2),": ")
  for each x in weekly
    myNum = MyNum + 1
    x = Replace(x, vbCr, "")
    x = Replace(x, vbLf, "")
    x = Replace(x, ",", "")
    x = Replace(x, """", "")
    x = Replace(x, "{", "")
    x = Replace(x, "}", "")
    x = Replace(x, "score", "")
    x = Replace(x, "initials", "")
    x = Replace(x, "weekly", "")
    x = Replace(x, "]", "")
    x = Replace(x, "alltime", "")
    weeklyvar(MyNum) = x
    if weeklyvar(MyNum) = "" Then
      if MyNum = 2 or 4 or 6 or 8 or 10 or 12 or 14 or 16 or 18 or 20 Then
        weeklyvar(MyNum) = "OBS"
      Else
        weeklyvar(MyNum) = 0
      end if
    end if
    'WriteToLog "     ", "weeklyvar(" &MyNum & ")=" & x
  Next

' alltime scores
  myNum = 0
  alltime = Split(subset(3),": ")
  for each x in alltime
    myNum = MyNum + 1
    x = Replace(x, vbCr, "")
    x = Replace(x, vbLf, "")
    x = Replace(x, ",", "")
    x = Replace(x, """", "")
    x = Replace(x, "{", "")
    x = Replace(x, "}", "")
    x = Replace(x, "score", "")
    x = Replace(x, "initials", "")
    x = Replace(x, "weekly", "")
    x = Replace(x, "]", "")
    x = Replace(x, "alltime", "")
    alltimevar(MyNum) = x
    if alltimevar(MyNum) = "" Then
      if MyNum = 2 or 4 or 6 or 8 or 10 or 12 or 14 or 16 or 18 or 20 or 22 or 24 or 26 or 28 or 30 or 32 or 34 or 36 or 38 or 40 Then
        alltimevar(MyNum) = "OBS"
      Else
        alltimevar(MyNum) = "0"
      end if
    end if
    'WriteToLog "     ", "alltimevar(" &MyNum & ")=" & x
  Next

end Sub


sub showsuccess
  'pNote "Scoreboard","Updated"
  pupDMDDisplay "-","Scoreboard^Updated","",3,0,10
end sub





Class PinupNULL ' Dummy Pinup class so I dont have to keep adding if cases when people dont choose pinup
  Public Sub LabelShowPage(screen, pagenum, vis, Special)
  End Sub
  Public Sub LabelSet(screen, label, text, vis, Special)
  End Sub
  Public Sub playlistplayex(screen, dir, fname, volume, priority)
  End Sub
  Public Sub LabelInit(screen)
  End Sub
End Class

'********************* START OF PUPDMD FRAMEWORK v1.0 *************************
'******************** DO NOT MODIFY STUFF BELOW   THIS LINE!!!! ***************
'******************************************************************************
'*****   Create a PUPPack within PUPPackEditor for layout config!!!  **********
'******************************************************************************
'
'
'  Quick Steps:
'      1>  create a folder in PUPVideos with Starter_PuPPack.zip and call the folder "yourgame"
'      2>  above set global variable pGameName="yourgame"
'      3>  copy paste the settings section above to top of table script for user changes.
'      4>  on Table you need to create ONE timer only called pupDMDUpdate and set it to 250 ms enabled on startup.
'      5>  go to your table1_init or table first startup function and call PUPINIT function
'      6>  Go to bottom on framework here and setup game to call the appropriate events like pStartGame (call that in your game code where needed)...etc
'      7>  attractmodenext at bottom is setup for you already,  just go to each case and add/remove as many as you want and setup the messages to show.
'      8>  Have fun and use pDMDDisplay(xxxx)  sub all over where needed.  remember its best to make a bunch of mp4 with text animations... looks the best for sure!
'
'
'Note:  for *Future Pinball* "pupDMDupdate_Timer()" timer needs to be renamed to "pupDMDupdate_expired()"  and then all is good.
'       and for future pinball you need to add the follow lines near top
'Need to use BAM and have com idll enabled.
'       Dim icom : Set icom = xBAM.Get("icom") ' "icom" is name of "icom.dll" in BAM\Plugins dir
'       if icom is Nothing then MSGBOX "Error cannot run without icom.dll plugin"
'       Function CreateObject(className)
'             Set CreateObject = icom.CreateObject(className)
'       End Function


Const HasPuP = True   'dont set to false as it will break pup

Const pTopper=0
Const pDMD=1
Dim pBackglass:pBackglass=5
'Const pBackglass=2
Const pPlayfield=3
Const pMusic=4
Const pAudio=14
Const pCallouts=6
Const pBackglass2=7
Const pPup0=8
Const pBonusScreen = 12
Const pOverVid=13
Const pPopUP1=11
Const pPopUP2=12
Const pPopUP3=13
Const pPopUP4=14
Const pPopUP5=15
Const pMVideo=16
Const pLVideo=17
Const pRVideo=18
Const pLVideo2=19
'Const pOverlayFrame=13

'pages
Const pDMDBlank=0
Const pScores=1
Const pBigLine=2
Const pThreeLines=3
Const pTwoLines=4
Const pTargerLetters=5

'dmdType
Const pDMDTypeLCD=0
Const pDMDTypeReal=1
Const pDMDTypeFULL=2

Dim bFlash1Enabled        ' AtomicPile Flasher Enabler
Dim FlashLevel1

Dim bFlash20Enabled
Dim FlashLevel20        ' Bumper Flasher


Dim PuPlayer
dim PUPDMDObject  'for realtime mirroring.
Dim pDMDlastchk: pDMDLastchk= -1    'performance of updates
Dim pDMDCurPage: pDMDCurPage= 0     'default page is empty.
Dim pInAttract : pInAttract=false   'pAttract mode




'*************  starts PUP system,  must be called AFTER b2s/controller running so put in last line of table1_init
Sub PuPInit

on error resume next
Set PuPlayer = CreateObject("PinUpPlayer.PinDisplay")
'puPlayer.Init pBonusScreen, ""
PuPlayer.B2SInit "", cGameName
on error goto 0
if not IsObject(PuPlayer) then
  set PuPlayer = New PinupNULL
End If

if (PuPDMDDriverType=pDMDTypeReal) and (useRealDMDScale=1) Then
       PuPlayer.setScreenEx pDMD,0,0,128,32,0  'if hardware set the dmd to 128,32
End if

PuPlayer.LabelInit pBackglass
PuPlayer.LabelInit pDMD

if PuPDMDDriverType=pDMDTypeReal then
  Set PUPDMDObject = CreateObject("PUPDMDControl.DMD")
  PUPDMDObject.DMDOpen
  PUPDMDObject.DMDPuPMirror
  PUPDMDObject.DMDPuPTextMirror
  PuPlayer.SendMSG "{ ""mt"":301, ""SN"": 1, ""FN"":33 }"             'set pupdmd for mirror and hide behind other pups
  PuPlayer.SendMSG "{ ""mt"":301, ""SN"": 1, ""FN"":32, ""FQ"":3 }"   'set no antialias on font render if real
'Else
' PuPlayer.SendMSG "{ ""mt"":301, ""SN"": 2, ""FN"":33 }"             'set pupdmd for mirror and hide behind other pups
End If




pSetPageLayouts
pDMDSetPage(pDMDBlank)   'set blank text overlay page.
pDMDStartUP        ' firsttime running for like an startup video..


  if ScorbitActive then
    if Scorbit.DoInit(2253, "PupOverlays", myVersion, "GRoz4-MjBV6-VPIN") then  ' Prod
      tmrScorbit.Interval=2000
      tmrScorbit.UserValue = 0
      tmrScorbit.Enabled=True
      Scorbit.UploadLog = ScorbitUploadLog
    End if
  End if

End Sub 'end PUPINIT



'PinUP Player DMD Helper Functions

Sub pDMDLabelHide(labName)
  PuPlayer.LabelSet pDMD,labName,"",0,""
end sub

Sub DisplayDMDText(Line1, Line2, duration)
  ''WriteToLog "     ", "DMDText " & Line1 & " " & Line2
  if Line1 = "" or Line1 = "_" then
    pupDMDDisplay "-", Line2, "" ,Duration/1000, 0, 10
  else
    pupDMDDisplay "-", Line1 & "^" & Line2, "" ,Duration/1000, 0, 10
  End If
End Sub




Sub pDMDScrollBig(msgText,timeSec,mColor)
PuPlayer.LabelShowPage pDMD,2,timeSec,""
PuPlayer.LabelSet pDMD,"Splash",msgText,0,"{'mt':1,'at':2,'xps':1,'xpe':-1,'len':" & (timeSec*1000000) & ",'mlen':" & (timeSec*1000) & ",'tt':0,'fc':" & mColor & "}"
end sub

Sub pDMDScrollBigV(msgText,timeSec,mColor)
PuPlayer.LabelShowPage pDMD,2,timeSec,""
PuPlayer.LabelSet pDMD,"Splash",msgText,0,"{'mt':1,'at':2,'yps':1,'ype':-1,'len':" & (timeSec*1000000) & ",'mlen':" & (timeSec*1000) & ",'tt':0,'fc':" & mColor & "}"
end sub


Sub pDMDSplashScore(msgText,timeSec,mColor)
PuPlayer.LabelSet pDMD,"MsgScore",msgText,0,"{'mt':1,'at':1,'fq':250,'len':"& (timeSec*1000) &",'fc':" & mColor & "}"
end Sub

Sub pDMDSplashScoreScroll(msgText,timeSec,mColor)
PuPlayer.LabelSet pDMD,"MsgScore",msgText,0,"{'mt':1,'at':2,'xps':1,'xpe':-1,'len':"& (timeSec*1000) &", 'mlen':"& (timeSec*1000) &",'tt':0, 'fc':" & mColor & "}"
end Sub

Sub pDMDZoomBig(msgText,timeSec,mColor)  'new Zoom
PuPlayer.LabelShowPage pDMD,2,timeSec,""
PuPlayer.LabelSet pDMD,"Splash",msgText,0,"{'mt':1,'at':3,'hstart':5,'hend':80,'len':" & (timeSec*1000) & ",'mlen':" & (timeSec*500) & ",'tt':5,'fc':" & mColor & "}"
end sub

Sub pDMDTargetLettersInfo(msgText,msgInfo, timeSec)  'msgInfo = '0211'  0= layer 1, 1=layer 2, 2=top layer3.
'this function is when you want to hilite spelled words.  Like B O N U S but have O S hilited as already hit markers... see example.
PuPlayer.LabelShowPage pDMD,5,timeSec,""  'show page 5
Dim backText
Dim middleText
Dim flashText
Dim curChar
Dim i
Dim offchars:offchars=0
Dim spaces:spaces=" "  'set this to 1 or more depends on font space width.  only works with certain fonts
                          'if using a fixed font width then set spaces to just one space.

For i=1 To Len(msgInfo)
    curChar="" & Mid(msgInfo,i,1)
    if curChar="0" Then
            backText=backText & Mid(msgText,i,1)
            middleText=middleText & spaces
            flashText=flashText & spaces
            offchars=offchars+1
    End If
    if curChar="1" Then
            backText=backText & spaces
            middleText=middleText & Mid(msgText,i,1)
            flashText=flashText & spaces
    End If
    if curChar="2" Then
            backText=backText & spaces
            middleText=middleText & spaces
            flashText=flashText & Mid(msgText,i,1)
    End If
Next

if offchars=0 Then 'all litup!... flash entire string
   backText=""
   middleText=""
   FlashText=msgText
end if

PuPlayer.LabelSet pDMD,"Back5"  ,backText  ,1,""
PuPlayer.LabelSet pDMD,"Middle5",middleText,1,""
PuPlayer.LabelSet pDMD,"Flash5" ,flashText ,0,"{'mt':1,'at':1,'fq':150,'len':" & (timeSec*1000) & "}"
end Sub


Sub pDMDSetPage(pagenum)
  'WriteToLog "     ", "Changing Page: " & pagenum
  PuPlayer.LabelShowPage pDMD,pagenum,0,""   'set page to blank 0 page if want off
  PDMDCurPage=pagenum
end Sub

Sub pHideOverlayText(pDisp)
    PuPlayer.SendMSG "{ ""mt"":301, ""SN"": "& pDisp &", ""FN"": 34 }"             'hideoverlay text during next videoplay on DMD auto return
end Sub



Sub pDMDShowLines3(msgText,msgText2,msgText3,timeSec)
Dim vis:vis=1
if pLine1Ani<>"" Then vis=0
PuPlayer.LabelShowPage pDMD,3,timeSec,""
PuPlayer.LabelSet pDMD,"Splash3a",msgText,vis,pLine1Ani
PuPlayer.LabelSet pDMD,"Splash3b",msgText2,vis,pLine2Ani
PuPlayer.LabelSet pDMD,"Splash3c",msgText3,vis,pLine3Ani
end Sub


Sub pDMDShowLines2(msgText,msgText2,timeSec)
Dim vis:vis=1
if pLine1Ani<>"" Then vis=0
PuPlayer.LabelShowPage pDMD,4,timeSec,""
PuPlayer.LabelSet pDMD,"Splash4a",msgText,vis,pLine1Ani
PuPlayer.LabelSet pDMD,"Splash4b",msgText2,vis,pLine2Ani
end Sub

Sub pDMDShowCounter(msgText,msgText2,msgText3,timeSec)
Dim vis:vis=1
if pLine1Ani<>"" Then vis=0
PuPlayer.LabelShowPage pDMD,6,timeSec,""
PuPlayer.LabelSet pDMD,"Splash6a",msgText,vis, pLine1Ani
PuPlayer.LabelSet pDMD,"Splash6b",msgText2,vis,pLine2Ani
PuPlayer.LabelSet pDMD,"Splash6c",msgText3,vis,pLine3Ani
end Sub


Sub pDMDShowBig(msgText,timeSec, mColor)
Dim vis:vis=1
if pLine1Ani<>"" Then vis=0
PuPlayer.LabelShowPage pDMD,2,timeSec,""
PuPlayer.LabelSet pDMD,"Splash",msgText,vis,pLine1Ani
end sub


Sub pDMDShowHS(msgText,msgText2,msgText3,timeSec) 'High Score
Dim vis:vis=1
if pLine1Ani<>"" Then vis=0
PuPlayer.LabelShowPage pDMD,7,timeSec,""
PuPlayer.LabelSet pDMD,"Splash7a",msgText,vis,pLine1Ani
PuPlayer.LabelSet pDMD,"Splash7b",msgText2,vis,pLine2Ani
PuPlayer.LabelSet pDMD,"Splash7c",msgText3,vis,pLine3Ani
end Sub


Sub pDMDSetBackFrame(fname)
  PuPlayer.playlistplayex pDMD,"PUPFrames",fname,0,1
end Sub

Sub pDMDStartBackLoop(fPlayList,fname)
  PuPlayer.playlistplayex pDMD,fPlayList,fname,0,1
  PuPlayer.SetBackGround pDMD,1
end Sub

Sub pDMDStopBackLoop
  PuPlayer.SetBackGround pDMD,0
  PuPlayer.playstop pDMD
end Sub


Dim pNumLines

'Theme Colors for Text (not used currenlty,  use the |<colornum> in text labels for colouring.
Dim SpecialInfo
Dim pLine1Color : pLine1Color=8454143
Dim pLine2Color : pLine2Color=8454143
Dim pLine3Color :  pLine3Color=8454143
Dim curLine1Color: curLine1Color=pLine1Color  'can change later
Dim curLine2Color: curLine2Color=pLine2Color  'can change later
Dim curLine3Color: curLine3Color=pLine3Color  'can change later


Dim pDMDCurPriority: pDMDCurPriority =-1
Dim pDMDDefVolume: pDMDDefVolume = 0   'default no audio on pDMD

Dim pLine1
Dim pLine2
Dim pLine3
Dim pLine1Ani
Dim pLine2Ani
Dim pLine3Ani

Dim PriorityReset:PriorityReset=-1
DIM pAttractReset:pAttractReset=-1
DIM pAttractBetween: pAttractBetween=2000 '1 second between calls to next attract page
DIM pDMDVideoPlaying: pDMDVideoPlaying=false


'************************ where all the MAGIC goes,  pretty much call this everywhere  ****************************************
'*************************                see docs for examples                ************************************************
'****************************************   DONT TOUCH THIS CODE   ************************************************************

Sub pupDMDDisplay(pEventID, pText, VideoName,TimeSec, pAni,pPriority)
' pEventID = reference if application,
' pText = "text to show" separate lines by ^ in same string
' VideoName "gameover.mp4" will play in background  "@gameover.mp4" will play and disable text during gameplay.
'       also global variable useDMDVideos=true/false if user wishes only TEXT
' TimeSec how long to display msg in Seconds
' animation if any 0=none 1=Flasher
' also,  now can specify color of each line (when no animation).  "sometext|12345"  will set label to "sometext" and set color to 12345

DIM curPos
  if pDMDCurPriority>pPriority then
    Exit Sub  'if something is being displayed that we don't want interrupted.  same level will interrupt.
    'WriteToLog "     ", "DMD Skipping - Hi Pri"
  End If
  pDMDCurPriority=pPriority
  if timeSec=0 then timeSec=1 'don't allow page default page by accident


  pLine1=""
  pLine2=""
  pLine3=""
  pLine1Ani=""
  pLine2Ani=""
  pLine3Ani=""


  if pAni=1 Then  'we flashy now aren't we
  pLine1Ani="{'mt':1,'at':1,'fq':150,'len':" & (timeSec*1000) &  "}"
  pLine2Ani="{'mt':1,'at':1,'fq':150,'len':" & (timeSec*1000) &  "}"
  pLine3Ani="{'mt':1,'at':1,'fq':150,'len':" & (timeSec*1000) &  "}"
  end If

  curPos=InStr(pText,"^")   'Lets break apart the string if needed
  if curPos>0 Then
     pLine1=Left(pText,curPos-1)
     pText=Right(pText,Len(pText) - curPos)

     curPos=InStr(pText,"^")   'Lets break apart the string
     if curPOS>0 Then
      pLine2=Left(pText,curPos-1)
      pText=Right(pText,Len(pText) - curPos)

      curPos=InStr("^",pText)   'Lets break apart the string
      if curPos>0 Then
       pline3=Left(pText,curPos-1)
      Else
      if pText<>"" Then pline3=pText
      End if
     Else
      if pText<>"" Then pLine2=pText
     End if
  Else
    pLine1=pText  'just one line with no break
  End if


  'lets see how many lines to Show
  pNumLines=0
  if pLine1<>"" then pNumLines=pNumlines+1
  if pLine2<>"" then pNumLines=pNumlines+1
  if pLine3<>"" then pNumLines=pNumlines+1

  if pDMDVideoPlaying Then
        PuPlayer.playstop pDMD
        pDMDVideoPlaying=False
  End if


  if (VideoName<>"") and (useDMDVideos) Then  'we are showing a splash video instead of the text.

    PuPlayer.playlistplayex pDMD,"DMDSplash",VideoName,pDMDDefVolume,pPriority  'should be an attract background (no text is displayed)
    pDMDVideoPlaying=true
  end if 'if showing a splash video with no text


  if StrComp(pEventID,"shownum",1)=0 Then              'check eventIDs
    pDMDShowCounter pLine1,pLine2,pLine3,timeSec
  Elseif StrComp(pEventID,"target",1)=0 Then              'check eventIDs
    pDMDTargetLettersInfo pLine1,pLine2,timeSec
  Elseif StrComp(pEventID,"highscore",1)=0 Then              'check eventIDs
    pDMDShowHS pLine1,pLine2,pline3,timeSec
  Elseif (pNumLines=3) Then                'depends on # of lines which one to use.  pAni=1 will flash.
    pDMDShowLines3 pLine1,pLine2,pLine3,TimeSec
  Elseif (pNumLines=2) Then
    pDMDShowLines2 pLine1,pLine2,TimeSec
  Elseif (pNumLines=1) Then
    pDMDShowBig pLine1,timeSec, curLine1Color
  Else
    pDMDShowBig pLine1,timeSec, curLine1Color
  End if

  PriorityReset=TimeSec*1000
End Sub 'pupDMDDisplay message

Sub pupDMDupdate_Timer()
  pUpdateScores

    if PriorityReset>0 Then  'for splashes we need to reset current prioirty on timer
    PriorityReset=PriorityReset-pupDMDUpdate.interval
    if PriorityReset<=0 Then
            pDMDCurPriority=-1
            if pInAttract then pAttractReset=pAttractBetween ' pAttractNext  call attract next after 1 second
      pDMDVideoPlaying=false
    End if
    End if

    if pAttractReset>0 Then  'for splashes we need to reset current prioirty on timer
    pAttractReset=pAttractReset-pupDMDUpdate.interval
    if pAttractReset<=0 Then
            pAttractReset=-1
            if pInAttract then pAttractNext
    End if
    end if
End Sub

Sub PuPEvent(EventNum)
if hasPUP=false then Exit Sub
PuPlayer.B2SData "E"&EventNum,1  'send event to puppack driver
End Sub


'********************* END OF PUPDMD FRAMEWORK v1.0 *************************
'******************** DO NOT MODIFY STUFF ABOVE THIS LINE!!!! ***************
'****************************************************************************

'*****************************************************************
'   **********  PUPDMD  MODIFY THIS SECTION!!!  ***************
'PUPDMD Layout for each Table1
'Setup Pages.  Note if you use fonts they must be in FONTS folder of the pupVideos\tablename\FONTS  "case sensitive exact naming fonts!"
'*****************************************************************

Sub pSetPageLayouts
DIM i
Dim j
DIM dmddef
DIM dmdalt
DIM dmdscr
DIM dmdfixed
DIM digitLCD
DIM b66Font
DIM footFont
DIM popFont
Dim monoFont
Dim serviceFont
Dim serviceFont2

'labelNew <screen#>, <Labelname>, <fontName>,<size%>,<colour>,<rotation>,<xalign>,<yalign>,<xpos>,<ypos>,<PageNum>,<visible>
'***********************************************************************'
'<screen#>, in standard wed set this to pDMD ( or 1)
'<Labelname>, your name of the label. keep it short no spaces (like 8 chars) although you can call it anything really. When setting the label you will use this labelname to access the label.
'<fontName> Windows font name, this must be exact match of OS front name. if you are using custom TTF fonts then double check the name of font names.
'<size%>, Height as a percent of display height. 20=20% of screen height.
'<colour>, integer value of windows color.
'<rotation>, degrees in tenths   (900=90 degrees)
'<xAlign>, 0= horizontal left align, 1 = center horizontal, 2= right horizontal
'<yAlign>, 0 = top, 1 = center, 2=bottom vertical alignment
'<xpos>, this should be 0, but if you want to force a position you can set this. it is a % of horizontal width. 20=20% of screen width.
'<ypos> same as xpos.
'<PageNum> IMPORTANT this will assign this label to this page or group.
'<visible> initial state of label. visible=1 show, 0 = off.

' Overlay
  'puPlayer.LabelInit pOverlayFrame

' Backglass - this is basically the FullLCD-DMD
'   --------------------------------B66------------------------------
' Prgrs | Player                           Ball
'     |
'   |
'   |
'   |
'   |
'   | Play1Score   Play2Score   CurScore  Play3Score  Play4Score
'   -------------------------------------------------------------------------
'
' digitLCD="DIGIT LCD"
' monoFont="Bitstream Vera Sans Mono"    'main scorefont
  monoFont="SternSystem Mono"    'main scorefont.  Good FontTool: https://fontforge.org/docs/tutorial/editexample2.html#creating-the-letter-o-consistent-directions
  dmdscr="Impact"    'main scorefont
' b66Font="Ad Lib"
  b66Font="Bat66"
  popFont="Laffayette Comic Pro"
  footFont="Footlight MT Light"
  serviceFont2="Gas"
  serviceFont="DotMatrix"

'            Scrn LblName    Fnt          Size  Color             R AxAy X Y pagenum Visible
' puPlayer.LabelInit pBackglass

  puPlayer.LabelNew pBackglass,"BallImg",b66Font,     1,RGB(247, 170, 51)         ,0,2,0 ,0,0    ,1,1
' puPlayer.LabelSet pBackglass,"BallImg", "PuPOverlays\\BatSymbolBall.png",1,""
  puPlayer.LabelNew pBackglass,"CurScoreImg",dmdscr,    6*FontScale,RGB(255, 255, 255)    ,0,1,2 ,0,0    ,1,1
' puPlayer.LabelSet pBackglass,"CurScoreImg", "PuPOverlays\\BatSymbolScore2.png",0,"{'mt':2,'color':111111,'width':50, 'height':27,'yalign':2,'xalign':1,'ypos':0,'xpos':0,'pagenum':1}"
  puPlayer.LabelNew pBackglass,"Play1scoreImg",dmdscr,  6*FontScale,RGB(255, 255, 255)    ,0,1,2 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"Play2scoreImg",dmdscr,  6*FontScale,RGB(255, 255, 255)    ,0,1,2 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"Play3scoreImg",dmdscr,  6*FontScale,RGB(255, 255, 255)    ,0,1,2 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"Play4scoreImg",dmdscr,  6*FontScale,RGB(255, 255, 255)    ,0,1,2 ,0,0    ,1,1
' puPlayer.LabelSet pBackglass,"Play1scoreImg", "PuPOverlays\\BatSymbolScore2.png",0,"{'mt':2,'color':111111,'width':50, 'height':27,'yalign':2,'xalign':1,'ypos':0,'xpos':0,'pagenum':1}"
' puPlayer.LabelSet pBackglass,"Play2scoreImg", "PuPOverlays\\BatSymbolScore2.png",0,"{'mt':2,'color':111111,'width':50, 'height':27,'yalign':2,'xalign':1,'ypos':0,'xpos':0,'pagenum':1}"
' puPlayer.LabelSet pBackglass,"Play3scoreImg", "PuPOverlays\\BatSymbolScore2.png",0,"{'mt':2,'color':111111,'width':50, 'height':27,'yalign':2,'xalign':1,'ypos':0,'xpos':0,'pagenum':1}"
' puPlayer.LabelSet pBackglass,"Play4scoreImg", "PuPOverlays\\BatSymbolScore2.png",0,"{'mt':2,'color':111111,'width':50, 'height':27,'yalign':2,'xalign':1,'ypos':0,'xpos':0,'pagenum':1}"


  puPlayer.LabelNew pBackglass,"PFMOn",b66Font,     10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PFMTime",b66Font,     10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PFMTimeText",b66Font,   8,RGB(32, 209, 43)        ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PFMX",b66Font,      10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"GeneralCenter1",b66Font,  14,RGB(247, 170, 51)      ,0,1,0 ,0,40    ,1,1
  puPlayer.LabelNew pBackglass,"GeneralCenter2",b66Font,  14,RGB(247, 170, 51)      ,0,1,0 ,0,50    ,1,1


  puPlayer.LabelNew pBackglass,"ScorbitQR"      ,dmdscr,     1,RGB(247, 170, 51)      ,0,2,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"ScorbitQRicon"    ,dmdscr,     1,RGB(247, 170, 51)      ,0,2,0 ,0,0    ,1,1


  puPlayer.LabelNew pBackglass,"Ball",b66Font,      6.5*FontScale,RGB(247, 170, 51)     ,3098,0,0,91,1.5  ,1,1
  puPlayer.LabelNew pBackglass,"CurScore1",b66Font,   18*FontScale,RGB(247, 170, 51)    ,0,1,2 ,0,102    ,1,1
  puPlayer.LabelNew pBackglass,"Play1score",b66Font,    18*FontScale,RGB(247, 170, 51)      ,0,1,2 ,0,102    ,1,1
  puPlayer.LabelNew pBackglass,"Play2score",b66Font,    18*FontScale,RGB(247, 170, 51)      ,0,1,2 ,0,102    ,1,1
  puPlayer.LabelNew pBackglass,"Play3score",b66Font,    18*FontScale,RGB(247, 170, 51)      ,0,1,2 ,0,102    ,1,1
  puPlayer.LabelNew pBackglass,"Play4score",b66Font,    18*FontScale,RGB(247, 170, 51)      ,0,1,2 ,0,102    ,1,1
  puPlayer.LabelNew pBackglass,"PlayCallout", b66Font,  18*FontScale,RGB(0, 255, 0)     ,0,1,2 ,0,0      ,1,1


  ' Top Popup
  puPlayer.LabelNew pBackglass,"PopTBg" ,popFont, 6*FontScale,RGB(0, 0, 0)      ,0,1,2 ,50,60  ,1,0
  puPlayer.LabelSet pBackglass,"PopTBg", "PupOverlays\\popOrange1.png",0,"{'mt':2,'width':25, 'height':24.5, 'ypos':50,'xpos':99}"
  puPlayer.LabelNew pBackglass,"PopT1"  ,popFont, 4*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PopT2"  ,popFont, 4*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PopT3"  ,popFont, 4*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PopT4"  ,popFont, 4*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PopT5"  ,popFont, 4*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1

  ' Right Popup
  puPlayer.LabelNew pBackglass,"PopRBg" ,popFont, 6*FontScale,RGB(0, 0, 0)    ,0,0,0 ,50,60    ,1,0
  puPlayer.LabelSet pBackglass,"PopRBg", "PupOverlays\\popOrange1.png",0,"{'mt':2,'width':25, 'height':24.5, 'ypos':50,'xpos':99}"
  puPlayer.LabelNew pBackglass,"PopR1"  ,popFont, 4*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PopR2"  ,popFont, 4*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PopR3"  ,popFont, 4*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PopR4"  ,popFont, 4*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PopR5"  ,popFont, 4*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1

  ' Left Popup
  puPlayer.LabelNew pBackglass,"PopLBg" ,popFont, 6*FontScale,RGB(0, 0, 0)      ,0,2,0 ,50,60    ,1,0
  puPlayer.LabelSet pBackglass,"PopLBg", "PupOverlays\\popOrange4.png",0,"{'mt':2,'width':25, 'height':24.5, 'ypos':50,'xpos':99}"
  puPlayer.LabelNew pBackglass,"PopL1"  ,popFont, 5*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PopL2"  ,popFont, 5*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PopL3"  ,popFont, 5*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PopL4"  ,popFont, 5*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PopL5"  ,popFont, 5*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PopL6"  ,popFont, 5*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PopL7"  ,popFont, 5*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"PopL8"  ,popFont, 5*FontScale,RGB(0, 0, 0)    ,0,1,0 ,0,0    ,1,1

  ' Timer (Main)
  puPlayer.LabelNew pBackglass,"MVTimerImg",b66Font,    10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,1,0
  puPlayer.LabelSet pBackglass,"MVTimerImg", "PuPOverlays\\clear.png" ,0,"{'mt':2,'color':111111, 'anigif':100, 'width':100, 'height':100,'yalign':0,'xalign':0,'ypos':0,'xpos':0}"
  puPlayer.LabelNew pBackglass,"MVTimer",b66Font,     10,RGB(191, 0, 0)       ,0,1,0 ,0,0    ,1,0     ' RED Font

  ' Timer (L1)
  puPlayer.LabelNew pBackglass,"L1MVTimerImg",b66Font,    5,RGB(255, 255, 255)      ,0,0,0 ,0,0    ,1,0
  puPlayer.LabelSet pBackglass,"L1MVTimerImg", "PuPOverlays\\clear.png" ,0,"{'mt':2,'color':111111, 'width':20, 'height':40,'yalign':0,'xalign':0,'ypos':10,'xpos':10}"
  puPlayer.LabelNew pBackglass,"L1MVTimer",b66Font,     5,RGB(191, 0, 0)        ,0,1,0 ,0,0    ,1,1     ' RED Font

  ' Timer (R1)
  puPlayer.LabelNew pBackglass,"R1MVTimerImg",b66Font,    5,RGB(255, 255, 255)      ,0,0,0 ,0,0    ,1,0
  puPlayer.LabelSet pBackglass,"R1MVTimerImg", "PuPOverlays\\clear.png" ,0,"{'mt':2,'color':111111, 'width':100, 'height':100,'yalign':0,'xalign':0,'ypos':10,'xpos':70}"
  puPlayer.LabelNew pBackglass,"R1MVTimer",b66Font,     5,RGB(191, 0, 0)        ,0,1,0 ,0,0    ,1,1     ' RED Font

  ' Timer (L2)
  puPlayer.LabelNew pBackglass,"L2MVTimerImg",b66Font,    5,RGB(255, 255, 255)      ,0,0,0 ,0,0    ,1,0
  puPlayer.LabelSet pBackglass,"L2MVTimerImg", "PuPOverlays\\clear.png" ,0,"{'mt':2,'color':111111, 'width':100, 'height':100,'yalign':0,'xalign':0,'ypos':80,'xpos':10}"
  puPlayer.LabelNew pBackglass,"L2MVTimer",b66Font,     5,RGB(191, 0, 0)        ,0,1,0 ,0,0    ,1,1     ' RED Font


  puPlayer.LabelNew pBackglass,"ImageGrow",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,1,0
  puPlayer.LabelSet pBackglass,"ImageGrow", "PuPOverlays\\clear.png" ,0,"{'mt':2,'color':111111, 'anigif':100, 'width':100, 'height':100,'yalign':0,'xalign':0,'ypos':0,'xpos':0}"
  puPlayer.LabelNew pBackglass,"ImageGrowTxt",b66Font,    2,RGB(255, 255, 255)      ,0,1,0 ,0,0    ,1,1


  for i = 0 to 5
    puPlayer.LabelNew pBackglass,"BumperBG" & i,b66Font,    10,RGB(255, 255, 255) ,0,1,0 ,0,0    ,1,0
    puPlayer.LabelSet pBackglass,"ImageGrow", "PuPOverlays\\clear.png" ,0,"{'mt':2, 'zback':1, 'width':100, 'height':100,'yalign':1,'xalign':1,'ypos':0,'xpos':0}"
    puPlayer.LabelNew pBackglass,"BumperTxt" & i, b66Font,    2,RGB(255, 255, 255)  ,0,1,0 ,0,0    ,1,1
  Next

  puPlayer.LabelNew pBackglass,"TutMultipler", b66Font,   13,RGB(255, 0, 0)     ,0,1,0 ,29,12.2    ,1,1


  puPlayer.LabelNew pBackglass,"InstantInfoBG",dmdscr,    10,RGB(255, 255, 255)     ,0,1,0 ,0,0  ,1,0
  puPlayer.LabelSet pBackglass,"InstantInfoBG", "PuPOverlays\\Info1.png" ,0,"{'mt':2,'color':111111, 'anigif':100, 'width':100, 'height':100,'yalign':0,'xalign':0,'ypos':0,'xpos':0}"
  puPlayer.LabelNew pBackglass,"InstantInfoL1",dmdscr,  10,RGB(64, 64, 64)      ,0,1,0 ,0,35    ,1,1
  puPlayer.LabelNew pBackglass,"InstantInfoL2",dmdscr,  10,RGB(64, 64, 64)      ,0,1,0 ,0,45    ,1,1
  puPlayer.LabelNew pBackglass,"InstantInfoL3",dmdscr,  10,RGB(64, 64, 64)      ,0,1,0 ,0,55    ,1,1


  ' MAKE SURE THESE ARE THE LAST ITEMS ON PAGE 1
  puPlayer.LabelNew pBackglass,"VehicleIcon",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"ComboText1",b66Font,    10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"ComboText2",b66Font,    10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"ComboText3",b66Font,    10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"GadgetBelt",b66Font,    10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,1,0
  puPlayer.LabelSet pBackglass,"GadgetBelt", "PuPOverlays\\clear.png" ,0,"{'mt':2,'color':111111, 'anigif':100, 'width':100, 'height':100,'yalign':0,'xalign':0,'ypos':0,'xpos':0}"
' replaced with new outline option from pup
' puPlayer.LabelNew pBackglass,"GadgetBeltCntb",b66Font,    10,RGB(0, 0, 0)       ,0,1,0 ,0,0    ,1,0
  puPlayer.LabelNew pBackglass,"GadgetBeltCnt",b66Font,   10,RGB(212, 174, 85)    ,0,1,0 ,0,0    ,1,0

  puPlayer.LabelNew pBackglass,"GadgetBelt0",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"GadgetBelt1",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"GadgetBelt2",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"GadgetBelt3",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"GadgetBelt4",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,1,1
  puPlayer.LabelNew pBackglass,"GadgetBelt5",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,1,1


  ' Page 2 (Minir Villain Select)
  puPlayer.LabelNew pBackglass,"SelectTitle",b66Font,   11*FontScale,RGB(247, 170, 51)  ,0,1,0 ,0,1   ,2,1
  puPlayer.LabelNew pBackglass,"SelectCountdown",b66Font, 11*FontScale,RGB(247, 170, 51)  ,0,0,0 ,1,1   ,2,1
  puPlayer.LabelNew pBackglass,"SelectTv1",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,2,1
  puPlayer.LabelNew pBackglass,"SelectTv2",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,2,1
  puPlayer.LabelNew pBackglass,"SelectTv3",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,2,1
  puPlayer.LabelNew pBackglass,"SelectTv1Txt",b66Font,  10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,2,1   ' Used for Take Points
  puPlayer.LabelNew pBackglass,"SelectIcon0",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,2,1
  puPlayer.LabelNew pBackglass,"SelectIcon1",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,2,1
  puPlayer.LabelNew pBackglass,"SelectIcon2",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,2,1
  puPlayer.LabelNew pBackglass,"SelectIcon3",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,2,1
  puPlayer.LabelNew pBackglass,"SelectIcon4",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,2,1
  puPlayer.LabelNew pBackglass,"SelectIcon5",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,2,1
  puPlayer.LabelNew pBackglass,"SelectIcon6",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,2,1
  puPlayer.LabelNew pBackglass,"SelectIcon7",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,2,1
  puPlayer.LabelNew pBackglass,"SelectIcon8",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,2,1
  puPlayer.LabelNew pBackglass,"SelectIcon9",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,2,1
  puPlayer.LabelNew pBackglass,"SelectIcon10",b66Font,  10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,2,1


  ' Page 3  (High Score Entry)
  puPlayer.LabelNew pBackglass,"EnterHS1",dmdscr,     15*FontScale,RGB(237, 227, 46)    ,0,1,1 ,0,20   ,3,1       ' HS Entry
  puPlayer.LabelNew pBackglass,"EnterHS2",dmdscr,     16*FontScale,RGB(237, 227, 46)    ,0,1,1 ,0,40   ,3,1       ' HS Entry
  for i = 1 to 11
    puPlayer.LabelNew pBackglass,"EnterHS3" & i, monoFont,17*FontScale,RGB(119, 189, 14)    ,0,0,1 ,20+(i*5),70   ,3,1        ' HS Entry
    puPlayer.LabelNew pBackglass,"EnterHSU3" & i, dmdscr,17*FontScale,RGB(194, 194, 194)    ,0,0,1 ,20+(i*5),70.1   ,3,1      ' HS Entry
    puPlayer.LabelSet pBackglass,"EnterHSU3" & i, " ", 1, ""
  Next
  puPlayer.LabelNew pBackglass,"EnterHS4",monoFont,   14*FontScale,RGB(119, 189, 14)    ,0,0,1 ,0,88   ,3,1       ' HS Entry
  puPlayer.LabelNew pBackglass,"EnterHS4Sel",dmdscr,    15*FontScale,RGB(194, 194, 194)   ,0,1,1 ,0,88   ,3,1       ' HS Entry
  puPlayer.LabelSet pBackglass,"EnterHS4Sel", "     ", 1, ""

  ' Page 4  (Mystery)
  puPlayer.LabelNew pBackglass,"Map",b66Font,   10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,4,0
  puPlayer.LabelSet pBackglass,"Map", "PuPOverlays\\mystery-map.png" ,0,"{'mt':2,'color':111111, 'anigif':100, 'width':100, 'height':100,'yalign':0,'xalign':0,'ypos':0,'xpos':0}"
  puPlayer.LabelNew pBackglass,"MapOverlay",b66Font,    10,RGB(255, 255, 255)     ,0,1,0 ,0,0    ,4,0
  puPlayer.LabelSet pBackglass,"MapOverlay", "PuPOverlays\\mystery-computer.png" ,0,"{'mt':2,'color':111111, 'width':100, 'height':100,'yalign':0,'xalign':0,'ypos':0,'xpos':0}"
  puPlayer.LabelNew pBackglass,"Text1",footFont,    14,RGB(255, 255, 255)     ,0,1,1 ,0,64    ,4,0
  puPlayer.LabelNew pBackglass,"Text2",footFont,    14,RGB(255, 255, 255)     ,0,1,1 ,0,74    ,4,0

  PuPlayer.LabelShowPage pBackglass, 1,0,""
  puPlayer.LabelSet pBackglass,"CurScoreImg", "PuPOverlays\\BatSymbolScore2.png",1,"{'mt':2,'color':111111,'width':50.93, 'height':28.33,'yalign':2,'xalign':1,'ypos':0,'xpos':0,'zback':1}"
  puPlayer.LabelSet pBackglass,"BallImg", "PuPOverlays\\BatSymbolBall.png",1,"{'mt':2,'width':10, 'height':21,'yalign':0,'xalign':0,'ypos':0,'xpos':90,'zback':1}"


  'puPlayer.LabelSet pBackglass,"VehicleIcon", "Vehicles\\Car_right.gif",1,"{'mt':2,'color':111111, 'anigif':100, 'width':100, 'height':100,'yalign':0,'xalign':0,'ypos':0,'xpos':0}"
  'puPlayer.LabelSet pBackglass,"TutMultipler", "2X" ,1,"{'mt':2, 'bold':1}"


' ' Page 1 (pMVideo)
''    -------------------------------------------------------------------------
''    |
''    |               GeneralTop1
''    |               GeneralTop2
''    |               GeneralTop3
''    |                AniGif
'   |               GeneralCenter3
'''   |               GeneralCenter1
''    |               GeneralCenter2        PopROrange
''    |
''    |
''    |             GeneralBottom3
''    |             GeneralBottom1
''    |             GeneralBottom2
''    -------------------------------------------------------------------------

  ' ************ SCREEN 0 (MAIN SCREEN)
  puPlayer.LabelInit pMVideo
  puPlayer.LabelNew pMVideo,"GeneralTop1",b66Font,    8*FontScale,RGB(255, 255, 255)    ,0,1,1 ,0,6   ,1,1
  puPlayer.LabelNew pMVideo,"GeneralTop2",b66Font,    8*FontScale,RGB(255, 255, 255)    ,0,1,1 ,0,13   ,1,1
  puPlayer.LabelNew pMVideo,"GeneralTop3",b66Font,    8*FontScale,RGB(255, 255, 255)    ,0,1,1 ,0,20   ,1,1
  puPlayer.LabelNew pMVideo,"GeneralCenter3",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,1 ,0,40   ,1,1
  puPlayer.LabelNew pMVideo,"GeneralCenter1",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,1 ,0,47   ,1,1
  puPlayer.LabelNew pMVideo,"GeneralCenter2",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,1 ,0,54   ,1,1
  puPlayer.LabelNew pMVideo,"GeneralBottom3",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,1 ,0,67   ,1,1
  puPlayer.LabelNew pMVideo,"GeneralBottom1",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,1 ,0,74   ,1,1
  puPlayer.LabelNew pMVideo,"GeneralBottom2",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,1 ,0,83   ,1,1
  puPlayer.LabelNew pMVideo,"AniGif",b66Font,       8*FontScale,RGB(255, 255, 255)    ,0,1,1 ,0,0    ,1,1
  PuPlayer.LabelShowPage pMVideo, 1, 0,""

  ' Setup font shadows
  PuPlayer.LabelSet pMVideo, "GeneralTop1",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pMVideo, "GeneralTop2",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pMVideo, "GeneralTop3",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pMVideo, "GeneralCenter1", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pMVideo, "GeneralCenter2", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pMVideo, "GeneralCenter3", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pMVideo, "GeneralBottom1", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pMVideo, "GeneralBottom2", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pMVideo, "GeneralBottom3", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"

  puPlayer.LabelNew pMVideo,"ArrowLeft",b66Font,      8*FontScale,RGB(247, 170, 51)   ,0,0,0 ,0,0   ,2,1
  puPlayer.LabelNew pMVideo,"ArrowRight",b66Font,     8*FontScale,RGB(247, 170, 51)   ,0,0,0 ,0,0   ,2,1
  puPlayer.LabelNew pMVideo,"txtLeft1",b66Font,     7*FontScale,RGB(247, 170, 51)   ,0,0,0 ,0,0    ,2,1
  puPlayer.LabelNew pMVideo,"txtLeft2",b66Font,     7*FontScale,RGB(247, 170, 51)   ,0,0,0 ,0,0    ,2,1
  puPlayer.LabelNew pMVideo,"txtRight1",b66Font,      7*FontScale,RGB(247, 170, 51)   ,0,2,0 ,0,0    ,2,1
  puPlayer.LabelNew pMVideo,"txtRight2",b66Font,      7*FontScale,RGB(247, 170, 51)   ,0,2,0 ,0,0    ,2,1

  puPlayer.LabelNew pMVideo,"Bonus1",b66Font,       15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,3   ,3,1
  puPlayer.LabelNew pMVideo,"Bonus2",b66Font,       15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,25   ,3,1
  puPlayer.LabelNew pMVideo,"Bonus3",b66Font,       15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,38   ,3,1
  puPlayer.LabelNew pMVideo,"Bonus4",b66Font,       12*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,51   ,3,1
  puPlayer.LabelNew pMVideo,"Bonus5",b66Font,       15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,65   ,3,1

  puPlayer.LabelNew pMVideo,"dummy",b66Font,        15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,65   ,4,1     ' Blank Screen

  ' ************ SCREEN 1 (LEFT SCREEN UPPER)
  puPlayer.LabelInit pLVideo
  puPlayer.LabelNew pLVideo,"GeneralTop1",b66Font,    8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,6   ,1,1
  puPlayer.LabelNew pLVideo,"GeneralTop2",b66Font,    8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,13   ,1,1
  puPlayer.LabelNew pLVideo,"GeneralTop3",b66Font,    8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,20   ,1,1
  puPlayer.LabelNew pLVideo,"GeneralCenter3",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,40   ,1,1
  puPlayer.LabelNew pLVideo,"GeneralCenter1",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,47   ,1,1
  puPlayer.LabelNew pLVideo,"GeneralCenter2",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,54   ,1,1
  puPlayer.LabelNew pLVideo,"GeneralBottom3",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,67   ,1,1
  puPlayer.LabelNew pLVideo,"GeneralBottom1",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,74   ,1,1
  puPlayer.LabelNew pLVideo,"GeneralBottom2",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,83   ,1,1
  puPlayer.LabelNew pLVideo,"AniGif",b66Font,       8*FontScale,RGB(255, 255, 255)    ,0,1,1 ,0,0    ,1,1
  PuPlayer.LabelShowPage pLVideo, 1, 0,""

  ' Setup font shadows
  PuPlayer.LabelSet pLVideo, "GeneralTop1",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pLVideo, "GeneralTop2",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pLVideo, "GeneralTop3",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pLVideo, "GeneralCenter1", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pLVideo, "GeneralCenter2", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pLVideo, "GeneralCenter3", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pLVideo, "GeneralBottom1", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pLVideo, "GeneralBottom2", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pLVideo, "GeneralBottom3", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"

  puPlayer.LabelNew pLVideo,"ArrowLeft",b66Font,      8*FontScale,RGB(247, 170, 51)   ,0,0,0 ,0,0   ,2,1      'It would be better to make this on the main screen but then I would have to rework that code
  puPlayer.LabelNew pLVideo,"ArrowRight",b66Font,     8*FontScale,RGB(247, 170, 51)   ,0,0,0 ,0,0   ,2,1
  puPlayer.LabelNew pLVideo,"txtLeft1",b66Font,     7*FontScale,RGB(247, 170, 51)   ,0,0,0 ,0,0    ,2,1
  puPlayer.LabelNew pLVideo,"txtLeft2",b66Font,     7*FontScale,RGB(247, 170, 51)   ,0,0,0 ,0,0    ,2,1
  puPlayer.LabelNew pLVideo,"txtRight1",b66Font,      7*FontScale,RGB(247, 170, 51)   ,0,2,0 ,0,0    ,2,1
  puPlayer.LabelNew pLVideo,"txtRight2",b66Font,      7*FontScale,RGB(247, 170, 51)   ,0,2,0 ,0,0    ,2,1

  puPlayer.LabelNew pLVideo,"Bonus1",b66Font,       15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,3   ,3,1
  puPlayer.LabelNew pLVideo,"Bonus2",b66Font,       15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,25   ,3,1
  puPlayer.LabelNew pLVideo,"Bonus3",b66Font,       15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,38   ,3,1
  puPlayer.LabelNew pLVideo,"Bonus4",b66Font,       12*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,51   ,3,1
  puPlayer.LabelNew pLVideo,"Bonus5",b66Font,       15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,65   ,3,1

  puPlayer.LabelNew pLVideo,"dummy",b66Font,        15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,65   ,4,1     ' Blank Screen


  'PuPlayer.LabelSet pLVideo,"GeneralTop1","XXX" ,1,"{'mt':2,'color':"&RGB(247, 170, 51)&",'size':6}"

  ' ************ SCREEN 2 (RIGHT SCREEN UPPER)
  puPlayer.LabelInit pRVideo
  puPlayer.LabelNew pRVideo,"GeneralTop1",b66Font,    8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,6   ,1,1
  puPlayer.LabelNew pRVideo,"GeneralTop2",b66Font,    8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,13   ,1,1
  puPlayer.LabelNew pRVideo,"GeneralTop3",b66Font,    8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,20   ,1,1
  puPlayer.LabelNew pRVideo,"GeneralCenter3",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,40   ,1,1
  puPlayer.LabelNew pRVideo,"GeneralCenter1",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,47   ,1,1
  puPlayer.LabelNew pRVideo,"GeneralCenter2",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,54   ,1,1
  puPlayer.LabelNew pRVideo,"GeneralBottom3",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,67   ,1,1
  puPlayer.LabelNew pRVideo,"GeneralBottom1",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,74   ,1,1
  puPlayer.LabelNew pRVideo,"GeneralBottom2",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,83   ,1,1
  puPlayer.LabelNew pRVideo,"AniGif",b66Font,       8*FontScale,RGB(255, 255, 255)    ,0,1,1 ,0,0    ,1,1
  PuPlayer.LabelShowPage pRVideo, 1, 0,""

  ' Setup font shadows
  PuPlayer.LabelSet pRVideo, "GeneralTop1",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pRVideo, "GeneralTop2",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pRVideo, "GeneralTop3",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pRVideo, "GeneralCenter1", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pRVideo, "GeneralCenter2", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pRVideo, "GeneralCenter3", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pRVideo, "GeneralBottom1", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pRVideo, "GeneralBottom2", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pRVideo, "GeneralBottom3", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"

  puPlayer.LabelNew pRVideo,"ArrowLeft",b66Font,      8*FontScale,RGB(247, 170, 51)   ,0,0,0 ,0,0   ,2,1      'It would be better to make this on the main screen but then I would have to rework that code
  puPlayer.LabelNew pRVideo,"ArrowRight",b66Font,     8*FontScale,RGB(247, 170, 51)   ,0,0,0 ,0,0   ,2,1
  puPlayer.LabelNew pRVideo,"txtLeft1",b66Font,     7*FontScale,RGB(247, 170, 51)   ,0,0,0 ,0,0    ,2,1
  puPlayer.LabelNew pRVideo,"txtLeft2",b66Font,     7*FontScale,RGB(247, 170, 51)   ,0,0,0 ,0,0    ,2,1
  puPlayer.LabelNew pRVideo,"txtRight1",b66Font,      7*FontScale,RGB(247, 170, 51)   ,0,2,0 ,0,0    ,2,1
  puPlayer.LabelNew pRVideo,"txtRight2",b66Font,      7*FontScale,RGB(247, 170, 51)   ,0,2,0 ,0,0    ,2,1

  puPlayer.LabelNew pRVideo,"Bonus1",b66Font,       15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,3   ,3,1
  puPlayer.LabelNew pRVideo,"Bonus2",b66Font,       15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,25   ,3,1
  puPlayer.LabelNew pRVideo,"Bonus3",b66Font,       15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,38   ,3,1
  puPlayer.LabelNew pRVideo,"Bonus4",b66Font,       12*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,51   ,3,1
  puPlayer.LabelNew pRVideo,"Bonus5",b66Font,       15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,65   ,3,1

  puPlayer.LabelNew pRVideo,"dummy",b66Font,        15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,65   ,4,1     ' Blank Screen

  ' ************ SCREEN 1 (LEFT SCREEN Lower)
  puPlayer.LabelInit pLVideo2
  puPlayer.LabelNew pLVideo2,"GeneralTop1",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,6   ,1,1
  puPlayer.LabelNew pLVideo2,"GeneralTop2",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,13   ,1,1
  puPlayer.LabelNew pLVideo2,"GeneralTop3",b66Font,   8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,20   ,1,1
  puPlayer.LabelNew pLVideo2,"GeneralCenter3",b66Font,    8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,40   ,1,1
  puPlayer.LabelNew pLVideo2,"GeneralCenter1",b66Font,    8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,47   ,1,1
  puPlayer.LabelNew pLVideo2,"GeneralCenter2",b66Font,    8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,54   ,1,1
  puPlayer.LabelNew pLVideo2,"GeneralBottom3",b66Font,    8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,67   ,1,1
  puPlayer.LabelNew pLVideo2,"GeneralBottom1",b66Font,    8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,74   ,1,1
  puPlayer.LabelNew pLVideo2,"GeneralBottom2",b66Font,    8*FontScale,RGB(255, 255, 255)    ,0,1,0 ,0,83   ,1,1
  puPlayer.LabelNew pLVideo2,"AniGif",b66Font,        8*FontScale,RGB(255, 255, 255)    ,0,1,1 ,0,0    ,1,1
  PuPlayer.LabelShowPage pLVideo2, 1, 0,""

  ' Setup font shadows
  PuPlayer.LabelSet pLVideo2, "GeneralTop1",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pLVideo2, "GeneralTop2",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pLVideo2, "GeneralTop3",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pLVideo2, "GeneralCenter1", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pLVideo2, "GeneralCenter2", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pLVideo2, "GeneralCenter3", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pLVideo2, "GeneralBottom1", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pLVideo2, "GeneralBottom2", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pLVideo2, "GeneralBottom3", " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"

  puPlayer.LabelNew pLVideo2,"ArrowLeft",b66Font,     8*FontScale,RGB(247, 170, 51)   ,0,0,0 ,0,0   ,2,1      'It would be better to make this on the main screen but then I would have to rework that code
  puPlayer.LabelNew pLVideo2,"ArrowRight",b66Font,    8*FontScale,RGB(247, 170, 51)   ,0,0,0 ,0,0   ,2,1
  puPlayer.LabelNew pLVideo2,"txtLeft1",b66Font,      7*FontScale,RGB(247, 170, 51)   ,0,0,0 ,0,0    ,2,1
  puPlayer.LabelNew pLVideo2,"txtLeft2",b66Font,      7*FontScale,RGB(247, 170, 51)   ,0,0,0 ,0,0    ,2,1
  puPlayer.LabelNew pLVideo2,"txtRight1",b66Font,     7*FontScale,RGB(247, 170, 51)   ,0,2,0 ,0,0    ,2,1
  puPlayer.LabelNew pLVideo2,"txtRight2",b66Font,     7*FontScale,RGB(247, 170, 51)   ,0,2,0 ,0,0    ,2,1

  puPlayer.LabelNew pLVideo2,"Bonus1",b66Font,        15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,3   ,3,1
  puPlayer.LabelNew pLVideo2,"Bonus2",b66Font,        15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,25   ,3,1
  puPlayer.LabelNew pLVideo2,"Bonus3",b66Font,        15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,38   ,3,1
  puPlayer.LabelNew pLVideo2,"Bonus4",b66Font,        12*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,51   ,3,1
  puPlayer.LabelNew pLVideo2,"Bonus5",b66Font,        15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,65   ,3,1

  puPlayer.LabelNew pLVideo2,"dummy",b66Font,       15*FontScale,RGB(247, 170, 51)    ,0,1,0 ,0,65   ,4,1     ' Blank Screen



  puPlayer.LabelInit pOverVid
  puPlayer.LabelNew pOverVid,"Splash1", b66Font,    10,RGB(247, 170, 51)      ,0,1,1 ,0,0    ,1,1
  puPlayer.LabelNew pOverVid,"Splash2", b66Font,    10,RGB(247, 170, 51)      ,0,1,1 ,0,0    ,1,1
  puPlayer.LabelNew pOverVid,"Splash3", b66Font,    10,RGB(247, 170, 51)      ,0,1,1 ,0,0    ,1,1
  puPlayer.LabelNew pOverVid,"Splash4", b66Font,    10,RGB(247, 170, 51)      ,0,1,1 ,0,0    ,1,1
  puPlayer.LabelNew pOverVid,"SplashHS1", b66Font,    10,RGB(247, 170, 51)      ,0,1,1 ,0,0    ,1,1
  puPlayer.LabelNew pOverVid,"SplashHS2", b66Font,    10,RGB(247, 170, 51)      ,0,1,1 ,0,0    ,1,1
  puPlayer.LabelNew pOverVid,"SplashHS3", b66Font,    10,RGB(247, 170, 51)      ,0,1,1 ,0,0    ,1,1
  puPlayer.LabelNew pOverVid,"SplashHS4", b66Font,    10,RGB(247, 170, 51)      ,0,1,1 ,0,0    ,1,1
  PuPlayer.LabelSet pOverVid, "Splash1",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pOverVid, "Splash2",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pOverVid, "Splash3",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pOverVid, "Splash4",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pOverVid, "SplashHS1",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pOverVid, "SplashHS2",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pOverVid, "SplashHS3",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"
  PuPlayer.LabelSet pOverVid, "SplashHS4",    " ", 1, "{'mt':2,'shadowstate': 1, 'xoffset': 15, 'yoffset': 15, 'shadowcolor':"&RGB(0, 0, 0)&"}"

  puPlayer.LabelNew pOverVid,"ScorbitQR_a"    ,dmdscr,  1,RGB(247, 170, 51)     ,0,2,0 ,0,0    ,1,1
  puPlayer.LabelNew pOverVid,"ScorbitQRicon_a"  ,dmdscr,  1,RGB(247, 170, 51)     ,0,2,0 ,0,0    ,1,1

  puPlayer.LabelNew pOverVid,"Match1",  b66Font,    10,RGB(255, 255, 255)     ,0,1,1 ,0,0    ,2,1
  puPlayer.LabelNew pOverVid,"MatchI0", b66Font,    10,RGB(255, 255, 255)     ,0,1,1 ,0,0    ,2,1
  puPlayer.LabelNew pOverVid,"MatchI1", b66Font,    10,RGB(255, 255, 255)     ,0,1,1 ,0,0    ,2,1
  puPlayer.LabelNew pOverVid,"MatchI2", b66Font,    10,RGB(255, 255, 255)     ,0,1,1 ,0,0    ,2,1
  puPlayer.LabelNew pOverVid,"MatchI3", b66Font,    10,RGB(255, 255, 255)     ,0,1,1 ,0,0    ,2,1
  For i = 0 to 3
    For j = 0 to 13
       puPlayer.LabelNew pOverVid,"MatchS" & i & j, b66Font,    10,RGB(255, 255, 255)     ,0,1,1 ,0,0    ,2,1
    Next
  Next
  PuPlayer.LabelShowPage pOverVid, 1, 0,""
  PuPlayer.SendMSG "{ ""mt"":301, ""SN"": 13, ""FN"":6 }"   ' Bring screen to the front

  ' Page 3 (Service)
  puPlayer.LabelNew pOverVid,"ServiceL1",serviceFont,   8*FontScale,RGB(252, 239, 3)  ,0,1,0 ,0,1    ,3,1
  puPlayer.LabelNew pOverVid,"ServiceL2",serviceFont,   8*FontScale,RGB(252, 239, 3)  ,0,1,0 ,0,1    ,3,1
  puPlayer.LabelNew pOverVid,"ServiceL3",serviceFont,     8*FontScale,RGB(252, 239, 3)  ,0,1,0 ,0,1    ,3,1
  puPlayer.LabelNew pOverVid,"ServiceL3B",serviceFont2,  20*FontScale,RGB(252, 239, 3)  ,0,1,0 ,0,1    ,3,1
  puPlayer.LabelNew pOverVid,"ServiceL3Img",serviceFont2,           1,RGB(252, 239, 3)  ,0,1,0 ,0,1    ,3,1
  puPlayer.LabelNew pOverVid,"ServiceL4",serviceFont,   8*FontScale,RGB(252, 239, 3)  ,0,1,0 ,0,1    ,3,1

  For i = 0 to 50
    puPlayer.LabelNew pOverVid,"ServiceV"&i,serviceFont,  8*FontScale,RGB(252, 239, 3)  ,0,1,0 ,0,1    ,3,1
  Next

  ' Page 4  Spinning Paper
  puPlayer.LabelNew pOverVid,"PaperL1",dmdscr,    10*FontScale,RGB(64, 64, 64)    ,0,1,1 ,0,20   ,4,1       ' Paper HS
  puPlayer.LabelNew pOverVid,"PaperL2",dmdscr,    10*FontScale,RGB(64, 64, 64)    ,0,1,1 ,0,20   ,4,1       ' Paper HS

  ' Page 5 (Multiplayer)
  puPlayer.LabelNew pOverVid,"PlayerList1",dmdscr,      15*FontScale,RGB(237, 227, 46)    ,0,1,1 ,0,20   ,5,1       ' Multiplayer 1
  puPlayer.LabelNew pOverVid,"PlayerList2",dmdscr,      15*FontScale,RGB(237, 227, 46)    ,0,1,1 ,0,40   ,5,1       ' Multiplayer 2
  puPlayer.LabelNew pOverVid,"PlayerList3",dmdscr,      15*FontScale,RGB(237, 227, 46)    ,0,1,1 ,0,60   ,5,1       ' Multiplayer 3
  puPlayer.LabelNew pOverVid,"PlayerMessage",dmdscr,    12*FontScale,RGB(237, 227, 46)    ,0,1,1 ,0,80   ,5,1       '


if PuPDMDDriverType=pDMDTypeReal Then 'using RealDMD Mirroring.  **********  128x32 Real Color DMD
  dmdalt="PKMN Pinball"
    dmdfixed="Instruction"
    dmdscr="Impact"    'main scorefont
  dmddef="Gameplay"


  ' Player          Balls
  '         SCORE
  '
  '         Switch    Credits


  'Page 1 (default score display)
  '            Scrn LblName    Fnt    Size  Color       R AxAy X Y pagenum Visible
     PuPlayer.LabelNew pDMD,"Player"  ,dmddef,21*FontScaleDmd ,RGB(3, 57, 252)  ,1,0,0, 0,0,  1,  0
     PuPlayer.LabelNew pDMD,"Ball"    ,dmddef,21*FontScaleDmd ,RGB(3, 57, 252)  ,1,2,0, 0,0,  1,  0
     PuPlayer.LabelNew pDMD,"CurScore",dmdscr,50*FontScaleDmd ,RGB(255, 255, 255),0,1,2, 0,68,  1,  0
     PuPlayer.LabelNew pDMD,"Status"  ,dmddef,30*FontScaleDmd ,RGB(255, 255, 255) ,0,0,2, 0,0,  1,  0
     PuPlayer.LabelNew pDMD,"Credits" ,dmddef,21*FontScaleDmd ,RGB(3, 57, 252)  ,0,2,2, 0,0,  1,  0
' '            Scrn LblName    Fnt    Size  Color  R AxAy X Y pagenum Visible
'      PuPlayer.LabelNew pDMD,"Credits" ,dmddef,20  ,33023  ,0,2,2,95,0,  1,  0
'    PuPlayer.LabelNew pDMD,"Play1"   ,dmdalt,21  ,33023  ,1,0,0,15,0,  1,  0
'    PuPlayer.LabelNew pDMD,"Ball"    ,dmdalt,21  ,33023  ,1,2,0,85,0,  1,  0
'    PuPlayer.LabelNew pDMD,"MsgScore",dmddef,45  ,33023  ,0,1,0, 0,40, 1,  0
'    PuPlayer.LabelNew pDMD,"CurScore",dmdscr,60  ,8454143,0,1,1, 0,0,  1,  0


  'Page 2 (default Text Splash 1 Big Line)
     PuPlayer.LabelNew pDMD,"Splash"  ,dmdalt,40*FontScaleDmd,33023,0,1,1,0,0,2,0

  'Page 3 (default Text Splash 2 and 3 Lines)
     PuPlayer.LabelNew pDMD,"Splash3a",dmddef,30*FontScaleDmd,8454143,0,1,0,0,2,3,0
     PuPlayer.LabelNew pDMD,"Splash3b",dmdalt,30*FontScaleDmd,33023,0,1,0,0,30,3,0
       PuPlayer.LabelNew pDMD,"Splash3c",dmdalt,25*FontScaleDmd,33023,0,1,0,0,55,3,0


  'Page 4 (2 Line Gameplay DMD)
     PuPlayer.LabelNew pDMD,"Splash4a",dmddef,40*FontScaleDmd,8454143,0,1,0,0,0,4,0
       PuPlayer.LabelNew pDMD,"Splash4b",dmddef,30*FontScaleDmd,33023,0,1,2,0,75,4,0

  'Page 5 (3 layer large text for overlay targets function,  must you fixed width font!
    PuPlayer.LabelNew pDMD,"Back5"    ,dmdfixed,80*FontScaleDmd,8421504,0,1,1,0,0,5,0
    PuPlayer.LabelNew pDMD,"Middle5"  ,dmdfixed,80*FontScaleDmd,65535  ,0,1,1,0,0,5,0
    PuPlayer.LabelNew pDMD,"Flash5"   ,dmdfixed,80*FontScaleDmd,65535  ,0,1,1,0,0,5,0

  'Page 6 (3 Lines for big # with two lines,  "19^Orbits^Count")
    PuPlayer.LabelNew pDMD,"Splash6a",dmddef,90*FontScaleDmd,65280,0,0,0,15,1,6,0
    PuPlayer.LabelNew pDMD,"Splash6b",dmddef,50*FontScaleDmd,33023,0,1,0,60,0,6,0
    PuPlayer.LabelNew pDMD,"Splash6c",dmddef,40*FontScaleDmd,33023,0,1,0,60,50,6,0

  'Page 7 (Show High Scores Fixed Fonts)
    PuPlayer.LabelNew pDMD,"Splash7a",dmddef,20*FontScaleDmd,8454143,0,1,0,0,2,7,0
    PuPlayer.LabelNew pDMD,"Splash7b",dmdfixed,40*FontScaleDmd,33023,0,1,0,0,20,7,0
    PuPlayer.LabelNew pDMD,"Splash7c",dmdfixed,40*FontScaleDmd,33023,0,1,0,0,50,7,0


END IF  ' use PuPDMDDriver

if PuPDMDDriverType=pDMDTypeLCD THEN  'Using 4:1 Standard ratio LCD PuPDMD  ************ lcd **************

  'dmddef="Impact"
  dmdalt="PKMN Pinball"
    dmdfixed="Instruction"
  dmdscr="Impact"  'main score font
  dmddef="Impact"

  'Page 1 (default score display)
  '            Scrn LblName    Fnt    Size  Color  R AxAy X Y pagenum Visible
     PuPlayer.LabelNew pDMD,"Player"  ,dmddef,21*FontScaleDmd ,RGB(3, 57, 252)  ,1,0,0, 0,0,  1,  0
     PuPlayer.LabelNew pDMD,"Ball"    ,dmddef,21*FontScaleDmd ,RGB(3, 57, 252)  ,1,2,0, 0,0,  1,  0
     PuPlayer.LabelNew pDMD,"CurScore",dmdscr,50*FontScaleDmd ,RGB(255, 255, 255),0,1,2, 0,60,  1,  0
     PuPlayer.LabelNew pDMD,"Status"  ,dmddef,30*FontScaleDmd ,RGB(255, 255, 255) ,0,0,2, 0,0,  1,  0
     PuPlayer.LabelNew pDMD,"Credits" ,dmddef,21*FontScaleDmd ,RGB(3, 57, 252)  ,0,2,2, 0,0,  1,  0


  'Page 2 (default Text Splash 1 Big Line)
    PuPlayer.LabelNew pDMD,"Splash"  ,dmdalt,40*FontScaleDmd,33023,0,1,1,0,0,2,0

  'Page 3 (default Text 3 Lines)
    PuPlayer.LabelNew pDMD,"Splash3a",dmddef,30*FontScaleDmd,8454143,0,1,0,0,2,3,0
    PuPlayer.LabelNew pDMD,"Splash3b",dmdalt,30*FontScaleDmd,33023,0,1,0,0,30,3,0
    PuPlayer.LabelNew pDMD,"Splash3c",dmdalt,25*FontScaleDmd,33023,0,1,0,0,57,3,0


  'Page 4 (default Text 2 Line)
    PuPlayer.LabelNew pDMD,"Splash4a",dmddef,40*FontScaleDmd,8454143,0,1,0,0,0,4,0
    PuPlayer.LabelNew pDMD,"Splash4b",dmddef,30*FontScaleDmd,33023,0,1,2,0,75,4,0

  'Page 5 (3 layer large text for overlay targets function,  must you fixed width font!
    PuPlayer.LabelNew pDMD,"Back5"    ,dmdfixed,80*FontScaleDmd,8421504,0,1,1,0,0,5,0
    PuPlayer.LabelNew pDMD,"Middle5"  ,dmdfixed,80*FontScaleDmd,65535  ,0,1,1,0,0,5,0
    PuPlayer.LabelNew pDMD,"Flash5"   ,dmdfixed,80*FontScaleDmd,65535  ,0,1,1,0,0,5,0

  'Page 6 (3 Lines for big # with two lines,  "19^Orbits^Count")
    PuPlayer.LabelNew pDMD,"Splash6a",dmddef,90*FontScaleDmd,65280,0,0,0,15,1,6,0
    PuPlayer.LabelNew pDMD,"Splash6b",dmddef,50*FontScaleDmd,33023,0,1,0,60,0,6,0
    PuPlayer.LabelNew pDMD,"Splash6c",dmddef,40*FontScaleDmd,33023,0,1,0,60,50,6,0

  'Page 7 (Show High Scores Fixed Fonts)
    PuPlayer.LabelNew pDMD,"Splash7a",dmddef,20*FontScaleDmd,8454143,0,1,0,0,2,7,0
    PuPlayer.LabelNew pDMD,"Splash7b",dmdfixed,40*FontScaleDmd,33023,0,1,0,0,20,7,0
    PuPlayer.LabelNew pDMD,"Splash7c",dmdfixed,40*FontScaleDmd,33023,0,1,0,0,50,7,0


END IF  ' use PuPDMDDriver

if PuPDMDDriverType=pDMDTypeFULL THEN  'Using FULL BIG LCD PuPDMD  ************ lcd **************

  'dmddef="Impact"
  dmdalt="PKMN Pinball"
    dmdfixed="Instruction"
  dmdscr="Impact"  'main score font
  dmddef="Impact"

  'Page 1 (default score display)
  '            Scrn LblName    Fnt    Size  Color  R AxAy X Y pagenum Visible
     PuPlayer.LabelNew pDMD,"Player"  ,dmddef,21*FontScaleDmd ,RGB(3, 57, 252)  ,1,0,0, 0,0,  1,  0
     PuPlayer.LabelNew pDMD,"Ball"    ,dmddef,21*FontScaleDmd ,RGB(3, 57, 252)  ,1,2,0, 0,0,  1,  0
     PuPlayer.LabelNew pDMD,"CurScore",dmdscr,50*FontScaleDmd ,RGB(255, 255, 255),0,1,2, 0,60,  1,  0
     PuPlayer.LabelNew pDMD,"Status"  ,dmddef,30*FontScaleDmd ,RGB(255, 255, 255) ,0,0,2, 0,0,  1,  0
     PuPlayer.LabelNew pDMD,"Credits" ,dmddef,21*FontScaleDmd ,RGB(3, 57, 252)  ,0,2,2, 0,0,  1,  0


  'Page 2 (default Text Splash 1 Big Line)
    PuPlayer.LabelNew pDMD,"Splash"  ,dmdalt,40*FontScaleDmd,33023,0,1,1,0,0,2,0

  'Page 3 (default Text 3 Lines)
    PuPlayer.LabelNew pDMD,"Splash3a",dmddef,30*FontScaleDmd,8454143,0,1,0,0,2,3,0
    PuPlayer.LabelNew pDMD,"Splash3b",dmdalt,30*FontScaleDmd,33023,0,1,0,0,30,3,0
    PuPlayer.LabelNew pDMD,"Splash3c",dmdalt,25*FontScaleDmd,33023,0,1,0,0,57,3,0


  'Page 4 (default Text 2 Line)
    PuPlayer.LabelNew pDMD,"Splash4a",dmddef,40*FontScaleDmd,8454143,0,1,0,0,0,4,0
    PuPlayer.LabelNew pDMD,"Splash4b",dmddef,30*FontScaleDmd,33023,0,1,2,0,75,4,0

  'Page 5 (3 layer large text for overlay targets function,  must you fixed width font!
    PuPlayer.LabelNew pDMD,"Back5"    ,dmdfixed,80*FontScaleDmd,8421504,0,1,1,0,0,5,0
    PuPlayer.LabelNew pDMD,"Middle5"  ,dmdfixed,80*FontScaleDmd,65535  ,0,1,1,0,0,5,0
    PuPlayer.LabelNew pDMD,"Flash5"   ,dmdfixed,80*FontScaleDmd,65535  ,0,1,1,0,0,5,0

  'Page 6 (3 Lines for big # with two lines,  "19^Orbits^Count")
    PuPlayer.LabelNew pDMD,"Splash6a",dmddef,90*FontScaleDmd,65280,0,0,0,15,1,6,0
    PuPlayer.LabelNew pDMD,"Splash6b",dmddef,50*FontScaleDmd,33023,0,1,0,60,0,6,0
    PuPlayer.LabelNew pDMD,"Splash6c",dmddef,40*FontScaleDmd,33023,0,1,0,60,50,6,0

  'Page 7 (Show High Scores Fixed Fonts)
    PuPlayer.LabelNew pDMD,"Splash7a",dmddef,20*FontScaleDmd,8454143,0,1,0,0,2,7,0
    PuPlayer.LabelNew pDMD,"Splash7b",dmdfixed,40*FontScaleDmd,33023,0,1,0,0,20,7,0
    PuPlayer.LabelNew pDMD,"Splash7c",dmdfixed,40*FontScaleDmd,33023,0,1,0,0,50,7,0


END IF  ' use PuPDMDDriver




end Sub 'page Layouts


'*****************************************************************
'        PUPDMD Custom SUBS/Events for each Table1
'     **********    MODIFY THIS SECTION!!!  ***************
'*****************************************************************
'
'
'  we need to somewhere in code if applicable
'
'   call pDMDStartGame,pDMDStartBall,pGameOver,pAttractStart
'
'
'

Sub pDMDMulti()
  PlayerState(CurrentPlayer).numScreens=4       ' Number of screens to test


' PuPlayer.playlistplayex pMVideo,"PupVideos","Start_Movie.mp4", 1, 1
  PuPlayer.playlistplayex pLVideo,"PupVideos","BatClimb.mp4", 1, 1
  PuPlayer.playlistplayex pRVideo,"PupVideos","BatClimb2.mp4", 1, 1
  PuPlayer.playlistplayex pLVideo2,"PupVideos","idle-1.mp4", 1, 1
  PuPlayer.SetLoop pMVideo, 1
  PuPlayer.SetLoop pLVideo, 1
  PuPlayer.SetLoop pRVideo, 1
  PuPlayer.SetLoop pLVideo2, 1


  if PlayerState(CurrentPlayer).numScreens=4 then
    PlayerState(CurrentPlayer).Villains(0).pupScreen=pMVideo
    PlayerState(CurrentPlayer).Villains(1).pupScreen=pLVideo
    PlayerState(CurrentPlayer).Villains(2).pupScreen=pRVideo
    PlayerState(CurrentPlayer).Villains(3).pupScreen=pLVideo2
  elseif PlayerState(CurrentPlayer).numScreens=3 then
    PlayerState(CurrentPlayer).Villains(0).pupScreen=pMVideo
    PlayerState(CurrentPlayer).Villains(1).pupScreen=pLVideo
    PlayerState(CurrentPlayer).Villains(2).pupScreen=pRVideo
  elseif PlayerState(CurrentPlayer).numScreens=2 then
    PlayerState(CurrentPlayer).Villains(0).pupScreen=pMVideo
    PlayerState(CurrentPlayer).Villains(1).pupScreen=pLVideo
  End if

  PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"batsignal"&PlayerState(CurrentPlayer).numScreens&".png",  1, 1

End Sub


Sub pDMDMulti2Last(screen)                  ' Make screen the last screen so we can delete
  Dim i
  Dim numScreens
  numScreens=PlayerState(CurrentPlayer).numScreens

  if numScreens=0 then Exit Sub                   ' Nothing to do, already the last one
  if screen=NewScreens(numScreens-1) then   Exit sub      ' Nothing to do, already the last one

  For i = 0 to numScreens-1
    if NewScreens(i)=screen then
      pDMDMulti2 NewScreens(i+1)    ' Shift to the screen after this one
      Exit For
    End if
  Next

End Sub

dim sSwapPos:sSwapPos=pMVideo
dim NewScreens(4)                   ' Make this global so we can see what position our screen is in
dim MainScreenVillainIdx:MainScreenVillainIdx=-1
Sub pDMDMulti2(pos)
' dim ActiveScreens(4)
  Dim i
  Dim j
  dim InactivePos
  dim ActivePos
  Dim thisScreen

'WriteToLog "     ", "pDMDMulti2:" & PlayerState(CurrentPlayer).numScreens & " SwapPos:" & sSwapPos

  if PlayerState(CurrentPlayer).numScreens <=0 then exit sub

  ' Get all the active screens to see how we rotate and skip ones not visible
' ActiveScreens(0)=False
' ActiveScreens(1)=False
' ActiveScreens(2)=False
' ActiveScreens(3)=False
' for i = 0 to kMAX_MODES
'   if PlayerState(CurrentPlayer).Villains(i).pupScreen <> -1 then    ' Get the Real one
'     ActiveScreens(PlayerState(CurrentPlayer).getPupScreen(i) - pMVideo)=True
'   End If
' Next
'WriteToLog "     ", "DumpScreenPos Active:----------->"
'WriteToLog "     ", "    0=" & PlayerState(CurrentPlayer).ActiveScreens(0)
'WriteToLog "     ", "    1=" & PlayerState(CurrentPlayer).ActiveScreens(1)
'WriteToLog "     ", "    2=" & PlayerState(CurrentPlayer).ActiveScreens(2)
'WriteToLog "     ", "    3=" & PlayerState(CurrentPlayer).ActiveScreens(3)
'WriteToLog "     ", "DumpScreenPos:----------->"

  ' Cycle to the next screen if -1 otherwise to to specified screen
  if pos=-1 then
    sSwapPos=sSwapPos+1     '  mod PlayerState(CurrentPlayer).numScreens
    if sSwapPos>pLVideo2 then sSwapPos=pMVideo
  else
    sSwapPos=pos
  End if


  InactivePos=0
  ActivePos=0
' NewScreens(0)=sSwapPos
  thisScreen=sSwapPos
  for i = 0 to 3
    if thisScreen>pLVideo2 then thisScreen=pMVideo
    if PlayerState(CurrentPlayer).ActiveScreens(thisScreen - pMVideo) then
      NewScreens(ActivePos) = thisScreen
      ActivePos=ActivePos+1
    else
      NewScreens(3-InactivePos) = thisScreen
      InactivePos=InactivePos+1
    End if
    thisScreen=thisScreen+1
  Next
  sSwapPos=NewScreens(0)

  MainScreenVillainIdx=-1     ' Clear this in case no modes are active
  for i = 0 to kMAX_MODES
    if PlayerState(CurrentPlayer).Villains(i).pupScreen = NewScreens(0) Then  ' Restore the lights and prioritize main screen for all modes
      MainScreenVillainIdx = i
      PlayerState(CurrentPlayer).RestoreAllLights
      Exit for
    End If
  Next

'WriteToLog "     ", "DumpScreenPos:----------->"
'WriteToLog "     ", "    0 (Main )=" & NewScreens(0)
'WriteToLog "     ", "    1 (Left )=" & NewScreens(1)
'WriteToLog "     ", "    2 (Right)=" & NewScreens(2)
'WriteToLog "     ", "    3 (Left2)=" & NewScreens(3)
'WriteToLog "     ", "DumpScreenPos:----------->"

  PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(0)&",'FN':3,'OT':'0'}"    ' Hide all the screens so they recalculate their positions for text
  PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(1)&",'FN':3,'OT':'0'}"
  PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(2)&",'FN':3,'OT':'0'}"
  PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(3)&",'FN':3,'OT':'0'}"

  if PuPDMDDriverType=pDMDTypeFULL then
    PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(0)&",'FN':15,'CP':'5,20.5,4,60,77'}"
    PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(1)&",'FN':15,'CP':'5,3,16.5,18,24.6'}"
    PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(2)&",'FN':15,'CP':'5,80,29,18,24'}"
    PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(3)&",'FN':15,'CP':'5,3,60,18,24'}"
  elseif bDesktop then
    PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(0)&",'FN':15,'CP':'2,20.5,4,60,77'}"
    PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(1)&",'FN':15,'CP':'2,3,16.5,18,24.6'}"
    PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(2)&",'FN':15,'CP':'2,80,29,18,24'}"
    PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(3)&",'FN':15,'CP':'2,3,60,18,24'}"
  elseif b5x4Mode then
        PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(0)&",'FN':15,'CP':'2,30,53.7,40,35.7'}"
        PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(1)&",'FN':15,'CP':'2,19,60,11.4,10.4'}"
        PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(2)&",'FN':15,'CP':'2,69.6,65,9.3,10.5'}"
        PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(3)&",'FN':15,'CP':'2,19,79.3,11.4,10.4'}"
  Else
    PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(0)&",'FN':15,'CP':'2,32,42,33.7,43.5'}"
    PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(1)&",'FN':15,'CP':'2,22.2,50,9.8,12.6'}"
    PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(2)&",'FN':15,'CP':'2,65.5,56,8,12.7'}"
    PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(3)&",'FN':15,'CP':'2,22.2,73.3,9.8,12.6'}"
  End if

  PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(0)&",'FN':3,'OT':'1'}"  ' show all the screens after we moved them around
  PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(1)&",'FN':3,'OT':'1'}"
  PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(2)&",'FN':3,'OT':'1'}"
  PuPlayer.SendMsg "{ 'mt':301, 'SN':"&NewScreens(3)&",'FN':3,'OT':'1'}"


  ' Update timers if we need to ****************************************************************
  ' *******  Clear all the timers so we can redraw them ****************************************
  if tmrMinor.Enabled then DrawModeTimer tmrMinorPos, "", True, True          ' Clear it
  if tmrBatTurn.Enabled then DrawModeTimer tmrBatTurnPos, "", True, True        ' Clear it
  if tmrVillainEscape.Enabled then DrawModeTimer tmrVillainEscapePos, "", True, True  ' Clear it

  ' Minor timer ********************************************************************************
  if tmrMinor.Enabled then
'   DrawModeTimer tmrMinorPos, "", True, True ' Clear it
    for i = 0 to 3
      if NewScreens(i) = PlayerState(CurrentPlayer).Villains(MVSelectIdx).pupScreen then
        tmrMinorPos=i
        exit for
      End if
    Next
    DrawModeTimer tmrMinorPos, tmrMinor.UserValue-2, True, False
  End if
  ' BatTurn Timer  *****************************************************************************
  if tmrBatTurn.Enabled then
'   DrawModeTimer tmrBatTurnPos, "", True, True ' Clear it
    for i = 0 to 3
      if NewScreens(i) = PlayerState(CurrentPlayer).Villains(kWiz_BatTurn).pupScreen then
        tmrBatTurnPos=i
        exit for
      End if
    Next
    DrawModeTimer tmrBatTurnPos, tmrBatTurn.UserValue-2, True, False
  End if
  ' VillainEscape Timer  *****************************************************************************
  if tmrVillainEscape.Enabled then
'   DrawModeTimer tmrVillainEscapePos, "", True, True ' Clear it
    for i = 0 to 3
      if NewScreens(i) = PlayerState(CurrentPlayer).Villains(kWiz_VillainEscape).pupScreen then
        tmrVillainEscapePos=i
        exit for
      End if
    Next
    DrawModeTimer tmrVillainEscapePos, tmrVillainEscape.UserValue, True, False
  End if


  ' Reset the gadget based on Main ScreenSelection
  CheckGadget False

End Sub


Sub pDMDStartGame
  Dim fsize
  fsize=10*FontScale
'WriteToLog "     ", "STOP ATTRACT"

  pInAttract=false
  if pDMDVideoPlaying Then
    PuPlayer.playstop pDMD
    pDMDVideoPlaying=False
  End if
  ' Clear the overvideo just in case it is playing
  PuPlayer.playlistplayex pOverVid,"PupVideos","blank.mp4", 1, 1      ' Clear any video showing
  PuPlayer.SetLoop pOverVid, 1
' PuPlayer.playlistplayex pOverVid,"PupOverlays","clear.png", 1, 1
  playclear pOverVid
  PuPlayer.PlayStop pOverVid
  PuPlayer.SetLoop pOverVid, 0
  PuPlayer.SetBackGround pOverVid, 0

  PuPlayer.LabelSet pOverVid, "Splash1", "" , 1, "{'mt':2,'size':14, 'xalign':1, 'xpos':0, 'ypos':50}"
  PuPlayer.LabelSet pOverVid, "Splash2", "" , 1, "{'mt':2,'size':14, 'xalign':1, 'xpos':0, 'ypos':50}"
  PuPlayer.LabelSet pOverVid, "Splash3", "" , 1, "{'mt':2,'size':10, 'xalign':1, 'xpos':0, 'ypos':70}"
  PuPlayer.LabelSet pOverVid, "Splash4", "" , 1, "{'mt':2,'size':10, 'xalign':1, 'xpos':0, 'ypos':70}"
  PuPlayer.LabelSet pOverVid, "SplashHS1", "" , 1, "{'mt':2,'size':14, 'xalign':1, 'xpos':0, 'ypos':50}"
  PuPlayer.LabelSet pOverVid, "SplashHS2", "" , 1, "{'mt':2,'size':14, 'xalign':1, 'xpos':0, 'ypos':50}"
  PuPlayer.LabelSet pOverVid, "SplashHS3", "" , 1, "{'mt':2,'size':10, 'xalign':1, 'xpos':0, 'ypos':70}"
  PuPlayer.LabelSet pOverVid, "SplashHS4", "" , 1, "{'mt':2,'size':10, 'xalign':1, 'xpos':0, 'ypos':70}"



  PuPlayer.LabelSet pOverVid,"OverMessage1","",1,""
  PuPlayer.LabelSet pOverVid,"OverMessage2","",1,""
  PuPlayer.LabelSet pOverVid,"OverMessage3", "", 1, "{'mt':2,'color':"&RGB(255, 255, 255)&", 'size': "&fsize&",'ypos': 65}"
  'PuPlayer.LabelSet pBackglass,"HighScore3","",1,""
  pDMDSetPage(pScores)   'set blank text overlay page.

  ' Put start screen up
  PuPlayer.playlistplayex pOverVid,"PupOverlays","clear.png", 1, 1
  PuPlayer.playlistplayex pBackglass, "PuPOverlays" ,"batsignal1.png",  1, 1
  'PuPlayer.playlistplayex pMVideo,"PupVideos","Start_Movie.mp4", 1, 1

  ' Show red Batlogo and play sound
  QueueSceneS pMVideo, "SceneGeneralStart2 pMVideo, 0, 0, ""PupVideos"", ""Start_Movie.mp4"", """" ", 5000, 1
  PlaySoundVol "b66-intro1", VolSfx
  DOF_Batman_Song.enabled = false 'disable DOF Batman Song Sequence if in progress
  DOF_Batman_Song_Credits.enabled = false 'disable DOF Batman Song Credits Sequence if in progress
  DOF 408, DOFPulse 'Start Game
  ' Start the default music after that
' vpmtimer.AddTimer 3000, "playclear pMusic:playmedia ""gotham" & INT(RND*4)+1 & ".mp3"", ""Topper"", pMusic, """", -1, """", 1, 1 '"
  vpmtimer.AddTimer 3200, "PlaySoundVol ""b66-start" & INT(RND*13)+1 & """, VolSfx:bVMajSeasonSelectReady=True '"

  pBGGamePlay
  bFirstPlay=False

end Sub

Sub pBGPlayerSelect
End Sub


Sub pBGGamePlay
  PuPlayer.LabelShowPage pBackglass,1,0,""
' PuPlayer.LabelSet pBackglass, "Guardians2", "PuPOverlays\\GUARDIAN-"&SpellGuardians&".png",1,"{'mt':2,'color':111111,'width':31, 'height':8,'yalign':0,'ypos':0.0,'xpos':50.4}"
' puPlayer.LabelSet pBackglass,"TimeLbl", "Timer" ,1,""
' pDMDEvent(kDMD_PlayerMode)
' puPlayer.LabelSet pBackglass,"MessageT","",1,""
End Sub

Sub pBGCutScene
End Sub

Sub pBgShowBonus(Message1, Message2)
End Sub

Sub pDMDStartBall
end Sub

Sub pDMDEvent(id)
  PuPEvent(id)  ' Send an event to the pup pack the E500 trigger
End Sub

Sub pResynchLayers()  ' For desktop users this will force VPX to the back so pup is in front (Disabled since David has cut through working now)
  exit sub
  if bDesktop then
    ' WT: Window Title
    ' WZ: HWND_BOTTOM=1
    ' WP: SWP_NOSIZE=1
    PuPlayer.SendMSG "{ ""mt"":301, ""SN"": ""2"", ""FN"":17, ""WT"":""Visual Pinball Player"", ""WZ"": 1, ""WP"": 1 }"
  End if
End Sub


Sub pDMDGameOver
'WriteToLog "     ", "Game Over"
  StartAttractMode

  PuPlayer.PlayStop pOverVid
  PuPlayer.SetLoop pOverVid, 0

  playclear pBackglass
  'playclear pMusic
  'StopSound "m_wait"   ' Just in case
  playclear pAudio

  PuPlayer.LabelShowPage pBackglass, 1,0,""

' pDMDEvent(kDMD_Attract)
  pAttractStart   ' Take too long to start and kills Game Over
end Sub

Sub pAttractStart
  PriorityReset=1
  if (pInAttract = False) then
    'WriteToLog "     ", "STARTING ATTRACT"
    pDMDSetPage(pDMDBlank)   'set blank text overlay page.
    pCurAttractPos=0
    pDMDStartUP
  end if
end Sub


'playclear pOverVid
'PuPlayer.LabelShowPage pOverVid, 1,0,""
'playmedia "BallSave.mp4", "PupVideos", pOverVid, "", -1, "", 1, 1

Sub pDMDStartUP
  'WriteToLog "     ", "STARTING ATTRACT2"
  pupDMDDisplay "attract","Game Over","vidIntro.mp4",9,0,10
  PuPlayer.LabelShowPage pOverVid, 1,0,""
  PuPlayer.playlistplayex pOverVid,"PupOverlays","Attract1.png", 1, 1
  PuPlayer.LabelSet pOverVid, "Splash1", "GAME OVER", 1, "{'mt':2,'size':20,'ypos':50}"

  'PuPlayer.playlistplayex pBackglass,"PupVideos","clear.mp4", 1, 1
  PuPlayer.playlistplayex pMVideo,"PupVideos","black800x600.mp4", 1, 1
  PuPlayer.SetLoop pMVideo, 1

  if bDesktop then
    PuPlayer.playlistplayex pBackglass,"PupFrames","clear.png", 1, 1    ' Hide Screen2 if we are on Desktop and just show DMD
    'PuPlayer.SendMSG "{ ""mt"":301, ""SN"": 2, ""FN"":3, ""OT"": 0 }"
  End If

  pAttractReset=-1
  pDMDCurPriority=-1
  PriorityReset=1
  pInAttract=true
end Sub

DIM pCurAttractPos: pCurAttractPos=37


'********************** gets called auto each page next and timed already in DMD_Timer.  make sure you use pupDMDDisplay or it wont advance auto.
Sub pAttractNext
Dim TmpStr1
Dim TmpStr2
Dim i
Dim cnt
dim yPos

pCurAttractPos=pCurAttractPos+1
WriteToLog "     ", "ATTRACT Next:" & pCurAttractPos

PriorityReset=1000

  Select Case pCurAttractPos
    Case 1:
    PuPlayer.playlistplayex pOverVid,"PupVideos","attract.mp4", 1, 1
    PuPlayer.SetLoop pOverVid, 1
    PuPlayer.playlistplayex pOverVid,"PupOverlays","Attract1.png", 1, 1
    PuPlayer.LabelSet pOverVid, "Splash1", "GAME OVER", 1, "{'mt':2,'size':20,'xpos':0,'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash2", "" , 1, ""
    PuPlayer.LabelSet pOverVid, "Splash3", "" , 1, ""
    PuPlayer.LabelSet pOverVid, "Splash4", "" , 1, "{'mt':2,'size':10, 'xalign':1, 'xpos':0, 'ypos':70}"
    PuPlayer.LabelSet pOverVid, "SplashHS1", "" , 1, "{'mt':2,'size':14, 'xalign':1, 'xpos':0, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "SplashHS2", "" , 1, "{'mt':2,'size':14, 'xalign':1, 'xpos':0, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "SplashHS3", "" , 1, "{'mt':2,'size':10, 'xalign':1, 'xpos':0, 'ypos':70}"
    PuPlayer.LabelSet pOverVid, "SplashHS4", "" , 1, "{'mt':2,'size':10, 'xalign':1, 'xpos':0, 'ypos':70}"
    Case 2:
    PriorityReset=3000
'   LastScore(0)=1300300000
'   LastScore(1)=1300300000
'   LastScore(2)=1300300000
'   LastScore(3)=1300300000
    if LastScore(0)<>0 then
      PuPlayer.LabelSet pOverVid, "Splash1", "" , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
      PuPlayer.LabelSet pOverVid, "Splash2", "" , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
      PuPlayer.LabelSet pOverVid, "Splash3", "" , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
      cnt=0
      for i = 0 to MaxPlayers-1
        if LastScore(i)<> 0 then cnt=cnt+1
      Next

      for i = 0 to MaxPlayers-1
        If LastScore(i)<>0 then
          yPos=(i+1)*(100\(cnt+1))-10
          PuPlayer.LabelSet pOverVid, "Splash" & i+1  ,"Player " & i+1 & " ", 1,           "{'mt':2,'size':" & 9 - cnt & ",'xalign':1,'yalign':1,'ypos':" & yPos & ",'xpos':" & (i+1)*(50\(cnt+1)) + 25 & "}"
          PuPlayer.LabelSet pOverVid, "SplashHS"& i+1 ,FormatScore(LastScore(i)), 1, "{'mt':2,'size':" & 13 - cnt & ",'xalign':1,'yalign':1,'ypos':" & yPos +(13-cnt) & ",'xpos':" & (i+1)*(50\(cnt+1)) + 25 & "}"
          ' TBD Add trophy icons
        End if
      Next
    else
      pAttractNext 'No last high score
    End if
    Case 3:

    if (Scorbit.bNeedsPairing) then
      PuPlayer.LabelSet pOverVid, "ScorbitQR_a", "PuPOverlays\\QRcode.png",1,"{'mt':2,'width':32, 'height':64,'xalign':0,'yalign':0,'ypos':5,'xpos':5}"
      PuPlayer.LabelSet pOverVid, "ScorbitQRIcon_a", "PuPOverlays\\QRcodeS.png",1,"{'mt':2,'width':36, 'height':85,'xalign':0,'yalign':0,'ypos':3,'xpos':3,'zback':1}"
    End if

    PuPlayer.LabelSet pOverVid, "Splash1", "" , 1, "{'mt':2,'size':14, 'xalign':1, 'xpos':0, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash2", "" , 1, "{'mt':2,'size':14, 'xalign':1, 'xpos':0, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", "" , 1, "{'mt':2,'size':10, 'xalign':1, 'xpos':0, 'ypos':70}"
    PuPlayer.LabelSet pOverVid, "Splash4", "" , 1, "{'mt':2,'size':10, 'xalign':1, 'xpos':0, 'ypos':70}"
    PuPlayer.LabelSet pOverVid, "SplashHS1", "" , 1, "{'mt':2,'size':14, 'xalign':1, 'xpos':0, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "SplashHS2", "" , 1, "{'mt':2,'size':14, 'xalign':1, 'xpos':0, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "SplashHS3", "" , 1, "{'mt':2,'size':10, 'xalign':1, 'xpos':0, 'ypos':70}"
    PuPlayer.LabelSet pOverVid, "SplashHS4", "" , 1, "{'mt':2,'size':10, 'xalign':1, 'xpos':0, 'ypos':70}"

    PuPlayer.playlistplayex pOverVid,"PupVideos","attract.mp4", 1, 1
    PuPlayer.SetLoop pOverVid, 1
    PuPlayer.playlistplayex pOverVid,"PupOverlays","BatLogo1.png", 1, 1
    PuPlayer.LabelSet pOverVid, "Splash1", "Replay At~1,000,000", 1, "{'mt':2,'size':10,'xalign':1,'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash2", "" , 1, ""
    PuPlayer.LabelSet pOverVid, "Splash3", "" , 1, ""

    Case 4:
    PuPlayer.playlistplayex pOverVid,"PupOverlays","clear.png", 1, 1
    PuPlayer.LabelSet pOverVid, "Splash1", "Grand Champion... "     , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", HighScoreName(0)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(HighScore(0))  , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"

    Case 5:
    PuPlayer.LabelSet pOverVid, "Splash1", "" , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash2", "" , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", "" , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    PuPlayer.LabelSet pOverVid, "Splash1", "High Score #1...~  "&HighScoreName(1)&"~    "&FormatScore(HighScore(1))&"~~      High Score #2...~         "&HighScoreName(2)&"~            "&FormatScore(HighScore(2))&"", 1, "{'mt':2,'size':8}"
    Case 6:
    PuPlayer.LabelSet pOverVid, "Splash1", "High Score #3...~  "&HighScoreName(3)&"~    "&FormatScore(HighScore(3))&"~~      High Score #4...~         "&HighScoreName(4)&"~            "&FormatScore(HighScore(4))&"", 1, "{'mt':2,'size':8}"
    PuPlayer.LabelSet pOverVid, "Splash2", "" , 1, ""
    PuPlayer.LabelSet pOverVid, "Splash3", "" , 1, ""
    Case 7:
'
'pCurAttractPos=0
'pAttractNext 'reset to beginning

    PuPlayer.LabelSet pOverVid, "Splash1", "Combo Champion... "           , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", StatScore(pCurAttractPos-7) & " COMBOS"  , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 8:
    PuPlayer.LabelSet pOverVid, "Splash1", "Best Combo Champion... "        , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", StatScore(pCurAttractPos-7) & "-WAY"   , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 9:
    PuPlayer.LabelSet pOverVid, "Splash1", "Bat Turn Champion... "          , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 10:
    PuPlayer.LabelSet pOverVid, "Splash1", "Bat Phone Champion... "         , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 11:
    PuPlayer.LabelSet pOverVid, "Splash1", "Catwoman 19/20 Champion... "      , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 12:
    PuPlayer.LabelSet pOverVid, "Splash1", "Catwoman 108 Champion... "        , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 13:
    PuPlayer.LabelSet pOverVid, "Splash1", "Joker 5/6 Champion... "         , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 14:
    PuPlayer.LabelSet pOverVid, "Splash1", "Joker 104 Champion... "         , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 15:
    PuPlayer.LabelSet pOverVid, "Splash1", "Penguin 3/4 Champion... "       , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 16:
    PuPlayer.LabelSet pOverVid, "Splash1", "Penguin 95 Champion... "        , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 17:
    PuPlayer.LabelSet pOverVid, "Splash1", "Riddler 1/2 Champion... "       , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 18:
    PuPlayer.LabelSet pOverVid, "Splash1", "Riddler 96 Champion... "        , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 19:
    PuPlayer.LabelSet pOverVid, "Splash1", "Villain Escape Champion... "      , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 20:
    PuPlayer.LabelSet pOverVid, "Splash1", "Bookworm 20/30 Champion... "      , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 21:
    PuPlayer.LabelSet pOverVid, "Splash1", "Egghead 47/48 Champion... "       , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 22:
    PuPlayer.LabelSet pOverVid, "Splash1", "Egghead 102/103 Champion... "     , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 23:
    PuPlayer.LabelSet pOverVid, "Splash1", "Egghead 109 Champion... "       , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 24:
    PuPlayer.LabelSet pOverVid, "Splash1", "King Tut 27/28 Champion... "      , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 25:
    PuPlayer.LabelSet pOverVid, "Splash1", "King Tut 41/42 Champion... "      , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 26:
    PuPlayer.LabelSet pOverVid, "Splash1", "King Tut 87/88 Champion... "      , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 27:
    PuPlayer.LabelSet pOverVid, "Splash1", "King Tut 100 Champion... "          , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 28:
    PuPlayer.LabelSet pOverVid, "Splash1", "King Tut 117 Champion... "          , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 29:
    PuPlayer.LabelSet pOverVid, "Splash1", "Mad Hatter 13/14 Champion... "      , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 30:
    PuPlayer.LabelSet pOverVid, "Splash1", "Mad Hatter 69/70 Champion... "      , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 31:
    PuPlayer.LabelSet pOverVid, "Splash1", "Mr. Freeze 53/54 Champion... "      , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 32:
    PuPlayer.LabelSet pOverVid, "Splash1", "Shame 59/60 Champion... "       , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 33:
    PuPlayer.LabelSet pOverVid, "Splash1", "Shame 115/116 Champion... "       , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 34:
    PuPlayer.LabelSet pOverVid, "Splash1", "Batusi Champion... "          , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 35:
    PuPlayer.LabelSet pOverVid, "Splash1", "Gas Attack Champion... "        , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 36:
    PuPlayer.LabelSet pOverVid, "Splash1", "Holy Champion... "        , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    Case 37:
    PuPlayer.LabelSet pOverVid, "Splash1", "Bonus Champion... "       , 1, "{'mt':2,'size':7 , 'xalign':0, 'ypos':30}"
    PuPlayer.LabelSet pOverVid, "Splash2", StatName(pCurAttractPos-7)       , 1, "{'mt':2,'size':14, 'xalign':1, 'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash3", FormatScore(StatScore(pCurAttractPos-7)) , 1, "{'mt':2,'size':10, 'xalign':1, 'ypos':70}"
    case 38:
    PriorityReset=CreditsDelay        ' Add a bit of delay for the first one to give some machines times to start pup all the way (If not case 39 below doesnt work correctly)
    PuPlayer.playlistplayex pOverVid,"PupVideos","attract.mp4", 1, 1
    PuPlayer.SetLoop pOverVid, 1
    PuPlayer.playlistplayex pOverVid,"PupOverlays","Attract1.png", 1, 1
    PuPlayer.LabelSet pOverVid, "Splash1", "GAME OVER", 1, "{'mt':2,'size':20,'xalign':1,'xpos':0,'ypos':50}"
    PuPlayer.LabelSet pOverVid, "Splash2", "" , 1, ""
    PuPlayer.LabelSet pOverVid, "Splash3", "" , 1, ""
  case 39:
    PriorityReset=49500
    PuPlayer.playlistplayex pOverVid,"PupOverlays","clear.png", 1, 1
    if bFirstPlay then
      PuPlayer.playlistplayex pOverVid,"PupVideos","Credits.mp4", VolBGVideo*50, 1
      DOF_BM_Song_Credits = -1: DOF_Batman_Song_Credits_Timer ' DOF Attract Sequence
    else
      if AttractSilent = 1 then
        PuPlayer.playlistplayex pOverVid,"PupVideos","Credits.mp4", 0, 1
        DOF_Batman_Song_Credits.enabled = false ' DOF Attract Sequence
      end if
      if AttractSilent = 0 then
        PuPlayer.playlistplayex pOverVid,"PupVideos","Credits.mp4", VolBGVideo*50, 1
        DOF_BM_Song_Credits = -1: DOF_Batman_Song_Credits_Timer ' DOF Attract Sequence
      end if
    End if
    PuPlayer.LabelSet pOverVid, "Splash1", "", 1, ""
    PuPlayer.LabelSet pOverVid, "Splash2", "" , 1, ""
    PuPlayer.LabelSet pOverVid, "Splash3", "" , 1, ""
    Case Else
    pCurAttractPos=0
    pAttractNext 'reset to beginning
  end Select

end Sub


'Function Min(value, minVal)
' if value < minVal then
'   Min=minVal
' Else
'   Min=Value
' End If
'
'End Function

'************************ called during gameplay to update Scores ***************************
Sub pUpdateScores  'call this ONLY on timer 300ms is good enough
Dim StatusStr
Dim PlayerName
Dim Size(4)
dim ScoreTag(4)
  if pDMDCurPage <> pScores then Exit Sub

  StatusStr = ""

  ScoreSize(CurrentPlayer)=18 - 0.9*Min(Len(Score(CurrentPlayer) & ""),5)
  if PlayersPlayingGame>1 then
    ScoreSize(CurrentPlayer)=ScoreSize(CurrentPlayer)-(PlayersPlayingGame+.5)
    if ScorbitActive then
      if Scorbit.bSessionActive then
        PlayerName=Scorbit.GetName(CurrentPlayer+1)
        if PlayerName="" then PlayerName= "Player " & CurrentPlayer+1
      End if
    End if
  End if
  ScoreTag(0)="{'mt':2,'size':"& ScoreSize(0) &"}"
  ScoreTag(1)="{'mt':2,'size':"& ScoreSize(1) &"}"
  ScoreTag(2)="{'mt':2,'size':"& ScoreSize(2) &"}"
  ScoreTag(3)="{'mt':2,'size':"& ScoreSize(3) &"}"


'ScoreTag(CurrentPlayer)=""

' puPlayer.LabelSet pBackglass,"Player",  "Player " & CurrentPlayer+1 ,1,""
' puPlayer.LabelSet pBackglass,"Ball",  "BALL " & Balls  & "    " ,1,""
  Select case PlayersPlayingGame
    case 1:
      if Score(CurrentPlayer)=0 then
        puPlayer.LabelSet pBackglass,"CurScore1", "00"                ,1,ScoreTag(0)
      else
        If ScoreSave(0)<>Score(0) then puPlayer.LabelSet pBackglass,"CurScore1", FormatScore(Score(CurrentPlayer))   ,1,ScoreTag(0)
      End if
    case 2:
      If ScoreSave(0)<>Score(0) then PuPlayer.LabelSet pBackglass,"Play1score",FormatScore(Score(0)),1,ScoreTag(0)
      If ScoreSave(1)<>Score(1) then PuPlayer.LabelSet pBackglass,"Play2score",FormatScore(Score(1)),1,ScoreTag(1)
    case 3:
      If ScoreSave(0)<>Score(0) then PuPlayer.LabelSet pBackglass,"Play1score",FormatScore(Score(0)),1,ScoreTag(0)
      If ScoreSave(1)<>Score(1) then PuPlayer.LabelSet pBackglass,"Play2score",FormatScore(Score(1)),1,ScoreTag(1)
      If ScoreSave(2)<>Score(2) then PuPlayer.LabelSet pBackglass,"Play3score",FormatScore(Score(2)),1,ScoreTag(2)
    case 4:
      If ScoreSave(0)<>Score(0) then PuPlayer.LabelSet pBackglass,"Play1score",FormatScore(Score(0)),1,ScoreTag(0)
      If ScoreSave(1)<>Score(1) then PuPlayer.LabelSet pBackglass,"Play2score",FormatScore(Score(1)),1,ScoreTag(1)
      If ScoreSave(2)<>Score(2) then PuPlayer.LabelSet pBackglass,"Play3score",FormatScore(Score(2)),1,ScoreTag(2)
      If ScoreSave(3)<>Score(3) then PuPlayer.LabelSet pBackglass,"Play4score",FormatScore(Score(3)),1,ScoreTag(3)
  End Select

  ScoreSave(0)=Score(0)
  ScoreSave(1)=Score(1)
  ScoreSave(2)=Score(2)
  ScoreSave(3)=Score(3)

' puPlayer.LabelSet pDMD,"Player",  "Player " & CurrentPlayer+1       ,1,""
' puPlayer.LabelSet pDMD,"Ball",    "Ball " & Balls             ,1,""
' puPlayer.LabelSet pDMD,"CurScore",  FormatScore(Score(CurrentPlayer))   ,1,""
' puPlayer.LabelSet pDMD,"Status",  StatusStr               ,1,"1"
' puPlayer.LabelSet pDMD,"Credits",   "C  " & Credits             ,1,""

end Sub



'*****************************************************************************************************************************************
' ERROR LOGS by baldgeek
' Daphishbowl - optimized
' Usage:
'   WriteToLog "Label 1", "Message 1 "
'   WriteToLog "Label 2", "Message 2 "
'
' Logs will be stored in the tables directory <Table_Name>_debug_log.txt"
'*****************************************************************************************************************************************

Class DebugLogFile

    Private Filename
    Private TxtFileStream

  Public Sub LogInit()
    Filename = cGameName + "_debug_log.txt"
        Set TxtFileStream = CreateObject("Scripting.FileSystemObject").OpenTextFile(Filename, 2, True)
  End Sub

    Private Function LZ(ByVal Number, ByVal Places)
        Dim Zeros
        Zeros = String(CInt(Places), "0")
        LZ = Right(Zeros & CStr(Number), Places)
    End Function

    Private Function GetTimeStamp
        Dim CurrTime, Elapsed, MilliSecs
        CurrTime = Now()
        Elapsed = Timer()
        MilliSecs = Int((Elapsed - Int(Elapsed)) * 1000)
        GetTimeStamp = _
            LZ(Year(CurrTime),   4) & "-" _
            & LZ(Month(CurrTime),  2) & "-" _
            & LZ(Day(CurrTime),    2) & " " _
            & LZ(Hour(CurrTime),   2) & ":" _
            & LZ(Minute(CurrTime), 2) & ":" _
            & LZ(Second(CurrTime), 2) & ":" _
            & LZ(MilliSecs, 4)
    End Function

' *** WriteToLog "     ", the time with milliseconds, and a message of your choice
    Public Sub WriteToLog(label, message)
        TxtFileStream.WriteLine GetTimeStamp + " : " + label + " : " + message
    Debug.print label & " : " & message
  End Sub

End Class

Dim LogFileObj
Dim LogInit:LogInit=False
Sub WriteToLog(label, message)
  if KeepLogs Then
    if LogInit=False then NewLog()
    LogFileObj.WriteToLog label, message
  end if
End Sub

Sub NewLog()
  if KeepLogs Then
    LogInit=True
    Set LogFileObj = New DebugLogFile
    LogFileObj.LogInit
    LogFileObj.WriteToLog "NEW LOG", " "
  end if
End Sub




'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
' X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X  X
'/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/
'  SCORBIT Interface
' To Use:
' 1) Define a timer tmrScorbit
' 2) Call DoInit at the end of PupInit or in Table Init if you are nto using pup with the appropriate parameters
'     Replace 2108 with your TableID from Scorbit
'     Replace GRWvz-MP37P from your table on OPDB - eg: https://opdb.org/machines/2103
'   if Scorbit.DoInit(389, "PupOverlays", "1.0.0", "GRWvz-MP37P") then
'     tmrScorbit.Interval=2000
'     tmrScorbit.UserValue = 0
'     tmrScorbit.Enabled=True
'   End if
' 3) Customize helper functions below for different events if you want or make your own
' 4) Call
'   DoInit - After Pup/Screen is setup (PuPInit)
'   StartSession - When a game starts (ResetForNewGame)
'   StopSession - When the game is over (Table1_Exit, EndOfGame)
'   SendUpdate - called when Score Changes (AddScore)
'     SendUpdate(P1Score, P2Score, P3Score, P4Score, CurrentBall, CurrentPlayer, NumberPlayers)
'     Example:  Scorbit.SendUpdate Score(0), Score(1), Score(2), Score(3), Balls, CurrentPlayer+1, PlayersPlayingGame
'   SetGameMode - When different game events happen like starting a mode, MB etc.  (ScorbitBuildGameModes helper function shows you how)
' 5) Drop the binaries sQRCode.exe and sToken.exe in your Pup Root so we can create session tokens and QRCodes.
' - Drop QRCode Images (QRCodeS.png, QRcodeB.png) in yur pup PuPOverlays if you want to use those
' 6) Callbacks
'   Scorbit_Paired    - Called when machine is successfully paired.  Hide QRCode and play a sound
'   Scorbit_PlayerClaimed - Called when player is claimed.  Hide QRCode, play a sound and display name
'   ScorbitClaimQR    - Call before/after plunge (swPlungerRest_Hit, swPlungerRest_UnHit)
' 7) Other
'   Set Pair QR Code  - During Attract
'     if (Scorbit.bNeedsPairing) then
'       PuPlayer.LabelSet pDMDFull, "ScorbitQR_a", "PuPOverlays\\QRcode.png",1,"{'mt':2,'width':32, 'height':64,'xalign':0,'yalign':0,'ypos':5,'xpos':5}"
'       PuPlayer.LabelSet pDMDFull, "ScorbitQRIcon_a", "PuPOverlays\\QRcodeS.png",1,"{'mt':2,'width':36, 'height':85,'xalign':0,'yalign':0,'ypos':3,'xpos':3,'zback':1}"
'     End if
'   Set Player Names  - Wherever it makes sense but I do it here: (pPupdateScores)
'      if ScorbitActive then
'     if Scorbit.bSessionActive then
'       PlayerName=Scorbit.GetName(CurrentPlayer+1)
'       if PlayerName="" then PlayerName= "Player " & CurrentPlayer+1
'     End if
'      End if
'
'
'>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
' TABLE CUSTOMIZATION START HERE

Sub Scorbit_Paired()                ' Scorbit callback when new machine is paired
WriteToLog "     ", "Scorbit PAIRED"
  PlaySoundVol "scorbit_detected_2", VolSfx
  PuPlayer.LabelSet pOverVid, "ScorbitQR_a", "PuPOverlays\\clear.png",0,""
  PuPlayer.LabelSet pOverVid, "ScorbitQRIcon_a", "PuPOverlays\\clear.png",0,""
End Sub

Sub Scorbit_PlayerClaimed(PlayerNum, PlayerName)  ' Scorbit callback when QR Is Claimed
WriteToLog "     ", "Scorbit LOGIN"
  PlaySoundVol "scorbit_login", VolSfx
  ScorbitClaimQR(False)
  puPlayer.LabelSet pBackglass,"Player",  PlayerName  ,1,""
'WriteToLog "     ", "Scorbit_PlayerClaimed:" & PlayerNum & " " & PlayerName
End Sub


Sub ScorbitClaimQR(bShow)           '  Show QRCode on first ball for users to claim this position
  if Scorbit.bSessionActive=False then Exit Sub
  if ScorbitShowClaimQR=False then Exit Sub
  if Scorbit.bNeedsPairing then exit sub

  if bShow and balls=1 and bGameInPlay and Scorbit.GetName(CurrentPlayer+1)="" then
    if PupOption=0 or ScorbitClaimSmall=0 then ' Desktop Make it Larger
      PuPlayer.LabelSet pBackglass, "ScorbitQR", "PuPOverlays\\QRclaim.png",1,"{'mt':2,'width':20, 'height':40,'xalign':0,'yalign':0,'ypos':40,'xpos':5}"
      PuPlayer.LabelSet pBackglass, "ScorbitQRIcon", "PuPOverlays\\QRcodeB.png",1,"{'mt':2,'width':23, 'height':52,'xalign':0,'yalign':0,'ypos':38,'xpos':3.5,'zback':1}"
    else
      PuPlayer.LabelSet pBackglass, "ScorbitQR", "PuPOverlays\\QRclaim.png",1,"{'mt':2,'width':12, 'height':24,'xalign':0,'yalign':0,'ypos':60,'xpos':5}"
      PuPlayer.LabelSet pBackglass, "ScorbitQRIcon", "PuPOverlays\\QRcodeB.png",1,"{'mt':2,'width':14, 'height':32.5,'xalign':0,'yalign':0,'ypos':58,'xpos':4,'zback':1}"
    End if
  Else
    PuPlayer.LabelSet pBackglass, "ScorbitQR", "PuPOverlays\\clear.png",0,""
    PuPlayer.LabelSet pBackglass, "ScorbitQRIcon", "PuPOverlays\\clear.png",0,""
  End if
End Sub

Sub ScorbitBuildGameModes()   ' Custom function to build the game modes for better stats
  dim GameModeStr
  if Scorbit.bSessionActive=False then Exit Sub
  GameModeStr="NA:"

' Select Case PlayerMode
'   case -1:' No Mode Selected
'   Case 0: ' Nebula - Pod Chase (10 shots)
'     GameModeStr="NA{blue}:Pod Chase"
'        Case 1: ' Ronan - Sanctuary (5 shots)
'     GameModeStr="NA{yellow}:Sanctuary"
'        Case 2: ' Yandu - Yaka Arrow (8 shots)
'     GameModeStr="NA{blue}:Yaka Arrow"
'        Case 3: ' Star Lord - Quills Quest (12 shots)
'     GameModeStr="NA{yellow}:Quills Quest"
'        Case 4: ' Drax - Knowhere (8 shots)
'     GameModeStr="NA{red}:Knowhere"
'        Case 5: ' Rocket - Escape Kyln (7 shots, Hadron Enforcer works on all except Rocket)
'     GameModeStr="NA{orange}:Escape Kyln"
'        Case 6: ' Gamora - Siblng Rvlry (8 shots)
'     GameModeStr="NA{green}:Siblng"
'        Case 7: ' Broker - Antique Shop (7 shots)
'     GameModeStr="NA{blue}:Antique Shop"
' End Select
'
' if bPlayerModeSelect=False and bSecondMode then
'   Select Case PlayerMode2
'     case -1:' No Mode Selected
'     Case 0: ' Nebula - Pod Chase (10 shots)
'       GameModeStr="NA{blue}:Pod Chase 2nd"
'     Case 1: ' Ronan - Sanctuary (5 shots)
'       GameModeStr="NA{yellow}:Sanctuary 2nd"
'     Case 2: ' Yandu - Yaka Arrow (8 shots)
'       GameModeStr="NA{blue}:Yaka Arrow 2nd"
'     Case 3: ' Star Lord - Quills Quest (12 shots)
'       GameModeStr="NA{yellow}:Quills Quest 2nd"
'     Case 4: ' Drax - Knowhere (8 shots)
'       GameModeStr="NA{red}:Knowhere 2nd"
'     Case 5: ' Rocket - Escape Kyln (7 shots, Hadron Enforcer works on all except Rocket)
'       GameModeStr="NA{orange}:Escape Kyln 2nd"
'     Case 6: ' Gamora - Siblng Rvlry (8 shots)
'       GameModeStr="NA{green}:Siblng 2nd"
'     Case 7: ' Broker - Antique Shop (7 shots)
'       GameModeStr="NA{blue}:Antique Shop 2nd"
'   End Select
' End if
'
' if bGrootMultiball then
'   if GameModeStr<>"" then GameModeStr=GameModeStr & ";"
'   GameModeStr=GameModeStr&"MB{green}:Groot"
' End if
' if bOrbMultiBall then
'   if GameModeStr<>"" then GameModeStr=GameModeStr & ";"
'   GameModeStr=GameModeStr&"MB{purple}:Orb"
' End if
' if tmrCherryBomb.Enabled then
'   if GameModeStr<>"" then GameModeStr=GameModeStr & ";"
'   GameModeStr=GameModeStr&"WM{red}:Cherry Bomb"
' End if
' if tmrImmolation.Enabled then
'   if GameModeStr<>"" then GameModeStr=GameModeStr & ";"
'   GameModeStr=GameModeStr&"WM{purple}:Immolation Initiative"
' End if
' if tmrXandar.Enabled then
'   if GameModeStr<>"" then GameModeStr=GameModeStr & ";"
'   GameModeStr=GameModeStr&"WM{purple}:Save Xandar"
' End if

  Scorbit.SetGameMode(GameModeStr)

End Sub

Sub Scorbit_LOGUpload(state)  ' Callback during the log creation process.  0=Creating Log, 1=Uploading Log, 2=Done
  Select Case state
    case 0:
      WriteToLog "     ", "CREATING LOG"
    case 1:
      WriteToLog "     ", "Uploading LOG"
    case 2:
      WriteToLog "     ", "LOG Complete"
  End Select
End Sub
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
' TABLE CUSTOMIZATION END HERE - NO NEED TO EDIT BELOW THIS LINE


dim Scorbit : Set Scorbit = New ScorbitIF
' Workaround - Call get a reference to Member Function
Sub tmrScorbit_Timer()                ' Timer to send heartbeat
  Scorbit.DoTimer(tmrScorbit.UserValue)
  tmrScorbit.UserValue=tmrScorbit.UserValue+1
  if tmrScorbit.UserValue>5 then tmrScorbit.UserValue=0
End Sub
Function ScorbitIF_Callback()
  Scorbit.Callback()
End Function
Class ScorbitIF

  Public bSessionActive
  Public bNeedsPairing
  Private bUploadLog
  Private bActive
  Private LOGFILE(10000000)
  Private LogIdx

  Private bProduction

  Private TypeLib
  Private MyMac
  Private Serial
  Private MyUUID
  Private TableVersion

  Private SessionUUID
  Private SessionSeq
  Private SessionTimeStart
  Private bRunAsynch
  Private bWaitResp
  Private GameMode
  Private GameModeOrig    ' Non escaped version for log
  Private VenueMachineID
  Private CachedPlayerNames(4)
  Private SaveCurrentPlayer

  Public bEnabled
  Private sToken
  Private machineID
  Private dirQRCode
  Private opdbID
  Private wsh

  Private objXmlHttpMain
  Private objXmlHttpMainAsync
  Private fso
  Private Domain

  Public Sub Class_Initialize()
    bActive="false"
    bSessionActive=False
    bEnabled=False
  End Sub

  Property Let UploadLog(bValue)
    bUploadLog = bValue
  End Property

  Sub DoTimer(bInterval)  ' 2 second interval
    dim holdScores(4)
    dim i
    if bInterval=0 then
      SendHeartbeat()
    elseif bRunAsynch then ' Game in play
      Scorbit.SendUpdate Score(0), Score(1), Score(2), Score(3), Balls, CurrentPlayer+1, PlayersPlayingGame
    End if
  End Sub

  Function GetName(PlayerNum) ' Return Parsed Players name
    if PlayerNum<1 or PlayerNum>4 then
      GetName=""
    else
      GetName=CachedPlayerNames(PlayerNum-1)
    End if
  End Function

  Function DoInit(MyMachineID, Directory_PupQRCode, Version, opdb)
    dim Nad
    Dim EndPoint
    Dim resultStr
    Dim UUIDParts
    Dim UUIDFile

    bProduction=1
'   bProduction=0
    SaveCurrentPlayer=0
    VenueMachineID=""
    bWaitResp=False
    bRunAsynch=False
    DoInit=False
    opdbID=opdb
    dirQrCode=Directory_PupQRCode
    MachineID=MyMachineID
    TableVersion=version
    bNeedsPairing=False
    if bProduction then
      domain = "api.scorbit.io"
    else
      domain = "staging.scorbit.io"
      domain = "scorbit-api-staging.herokuapp.com"
    End if
    Set fso = CreateObject("Scripting.FileSystemObject")
    dim objLocator:Set objLocator = CreateObject("WbemScripting.SWbemLocator")
    Dim objService:Set objService = objLocator.ConnectServer(".", "root\cimv2")
    Set objXmlHttpMain = CreateObject("Msxml2.ServerXMLHTTP")
    Set objXmlHttpMainAsync = CreateObject("Microsoft.XMLHTTP")
    objXmlHttpMain.onreadystatechange = GetRef("ScorbitIF_Callback")
    Set wsh = CreateObject("WScript.Shell")

    ' Get Mac for Serial Number
    dim Nads: set Nads = objService.ExecQuery("Select * from Win32_NetworkAdapter where physicaladapter=true")
    for each Nad in Nads
      if not isnull(Nad.MACAddress) then
        if left(Nad.MACAddress, 6)<>"00090F" then ' Skip over forticlient MAC
          WriteToLog "Scorbit", "Using MAC Addresses:" & Nad.MACAddress & " From Adapter:" & Nad.description
          MyMac=replace(Nad.MACAddress, ":", "")
          Exit For
        End if
      End if
    Next
    Serial=eval("&H" & mid(MyMac, 5))
    if Serial<0 then Serial=eval("&H" & mid(MyMac, 6))    ' Mac Address Overflow Special Case
    if MyMachineID<>2108 then       ' GOTG did it wrong but MachineID should be added to serial number also
      Serial=Serial+MyMachineID
    End if
'   Serial=123456
    WriteToLog "     ", "Serial:" & Serial

    ' Get System UUID
    set Nads = objService.ExecQuery("SELECT * FROM Win32_ComputerSystemProduct")
    for each Nad in Nads
      WriteToLog "     ", "Using UUID:" & Nad.UUID
      MyUUID=Nad.UUID
      Exit For
    Next

    if MyUUID="" then
      MsgBox "SCORBIT - Can get UUID, Disabling."
      Exit Function
    elseif MyUUID="03000200-0400-0500-0006-000700080009" or ScorbitAlternateUUID then
      If fso.FolderExists(UserDirectory) then
        If fso.FileExists(UserDirectory & "ScorbitUUID.dat") then
          Set UUIDFile = fso.OpenTextFile(UserDirectory & "ScorbitUUID.dat",1)
          MyUUID = UUIDFile.ReadLine()
          UUIDFile.Close
          Set UUIDFile = Nothing
        Else
          MyUUID=GUID()
          Set UUIDFile=fso.CreateTextFile(UserDirectory & "ScorbitUUID.dat",True)
          UUIDFile.WriteLine MyUUID
          UUIDFile.Close
          Set UUIDFile=Nothing
        End if
      End if
    End if

    ' Clean UUID
    UUIDParts=split(MyUUID, "-")
    MyUUID=LCASE(Hex(eval("&h" & UUIDParts(0))+MyMachineID) & UUIDParts(1) &  UUIDParts(2) &  UUIDParts(3) & UUIDParts(4))     ' Add MachineID to UUID
    MyUUID=LPad(MyUUID, 32, "0")
'   MyUUID=Replace(MyUUID, "-",  "")
'   WriteToLog "     ", "MyUUID:" & MyUUID


' Debug
'   myUUID="adc12b19a3504453a7414e722f58737f"
'   Serial="123456778"

    ' Authenticate and get our token
    if getStoken() then
      bEnabled=True
'     SendHeartbeat
      DoInit=True
    End if
  End Function

  Sub Callback()
    Dim ResponseStr
    Dim i
    Dim Parts
    Dim Parts2
    Dim Parts3
    if bEnabled=False then Exit Sub

    if bWaitResp and objXmlHttpMain.readystate=4 then
'     WriteToLog "     ", "CALLBACK: " & objXmlHttpMain.Status & " " & objXmlHttpMain.readystate
      if objXmlHttpMain.Status=200 and objXmlHttpMain.readystate = 4 then
        ResponseStr=objXmlHttpMain.responseText
        WriteToLog "     ", "RESPONSE: " & ResponseStr

        ' Parse Name
        if CachedPlayerNames(SaveCurrentPlayer-1)="" then  ' Player doesnt have a name
          if instr(1, ResponseStr, "cached_display_name") <> 0 Then ' There are names in the result
            Parts=Split(ResponseStr,",{")             ' split it
            if ubound(Parts)>=SaveCurrentPlayer-1 then        ' Make sure they are enough avail
              if instr(1, Parts(SaveCurrentPlayer-1), "cached_display_name")<>0 then  ' See if mine has a name
                CachedPlayerNames(SaveCurrentPlayer-1)=GetJSONValue(Parts(SaveCurrentPlayer-1), "cached_display_name")    ' Get my name
                CachedPlayerNames(SaveCurrentPlayer-1)=Replace(CachedPlayerNames(SaveCurrentPlayer-1), """", "")
                Scorbit_PlayerClaimed SaveCurrentPlayer, CachedPlayerNames(SaveCurrentPlayer-1)
'               WriteToLog "     ", "Player Claim:" & SaveCurrentPlayer & " " & CachedPlayerNames(SaveCurrentPlayer-1)
              End if
            End if
          End if
        else                            ' Check for unclaim
          if instr(1, ResponseStr, """player"":null")<>0 Then ' Someone doesnt have a name
            Parts=Split(ResponseStr,"[")            ' split it
'WriteToLog "     ", "Parts:" & Parts(1)
            Parts2=Split(Parts(1),"}")              ' split it
            for i = 0 to Ubound(Parts2)
'WriteToLog "     ", "Parts2:" & Parts2(i)
              if instr(1, Parts2(i), """player"":null")<>0 Then
                CachedPlayerNames(i)=""
              End if
            Next
          End if
        End if
      End if
      bWaitResp=False
    End if
  End Sub

  Public Sub StartSession()
    if bEnabled=False then Exit Sub
WriteToLog "     ", "Scorbit Start Session"
    CachedPlayerNames(0)=""
    CachedPlayerNames(1)=""
    CachedPlayerNames(2)=""
    CachedPlayerNames(3)=""
    bRunAsynch=True
    bActive="true"
    bSessionActive=True
    SessionSeq=0
    SessionUUID=GUID()
    SessionTimeStart=GameTime
    LogIdx=0
    SendUpdate 0, 0, 0, 0, 1, 1, 1
  End Sub

  Public Sub StopSession(P1Score, P2Score, P3Score, P4Score, NumberPlayers)
    StopSession2 P1Score, P2Score, P3Score, P4Score, NumberPlayers, False
  End Sub

  Public Sub StopSession2(P1Score, P2Score, P3Score, P4Score, NumberPlayers, bCancel)
    Dim i
    dim objFile
    if bEnabled=False then Exit Sub
    if bSessionActive=False then Exit Sub
WriteToLog "     ", "Scorbit Stop Session"

    bRunAsynch=False
    bActive="false"
    SendUpdate P1Score, P2Score, P3Score, P4Score, -1, -1, NumberPlayers
    bSessionActive=False
'   SendHeartbeat

    if bUploadLog and LogIdx<>0 and bCancel=False then
      WriteToLog "     ", "Creating Scorbit Log: Size" & LogIdx
      Scorbit_LOGUpload(0)
      Set objFile = fso.CreateTextFile(puplayer.getroot&"\" & cGameName & "\sGameLog.csv")
      For i = 0 to LogIdx-1
        objFile.Writeline LOGFILE(i)
      Next
      objFile.Close
      LogIdx=0
      Scorbit_LOGUpload(1)
      pvPostFile "https://" & domain & "/api/session_log/", puplayer.getroot&"\" & cGameName & "\sGameLog.csv", False
      Scorbit_LOGUpload(2)
      on error resume next
      fso.DeleteFile(puplayer.getroot&"\" & cGameName & "\sGameLog.csv")
      on error goto 0
    End if

  End Sub

  Public Sub SetGameMode(GameModeStr)
    GameModeOrig=GameModeStr
    GameMode=GameModeStr
    GameMode=Replace(GameMode, ":", "%3a")
    GameMode=Replace(GameMode, ";", "%3b")
    GameMode=Replace(GameMode, " ", "%20")
    GameMode=Replace(GameMode, "{", "%7B")
    GameMode=Replace(GameMode, "}", "%7D")
  End sub

  Public Sub SendUpdate(P1Score, P2Score, P3Score, P4Score, CurrentBall, CurrentPlayer, NumberPlayers)
    SendUpdateAsynch P1Score, P2Score, P3Score, P4Score, CurrentBall, CurrentPlayer, NumberPlayers, bRunAsynch
  End Sub

  Public Sub SendUpdateAsynch(P1Score, P2Score, P3Score, P4Score, CurrentBall, CurrentPlayer, NumberPlayers, bAsynch)
    dim i
    Dim PostData
    Dim resultStr
    dim LogScores(4)

    if bUploadLog then
      if NumberPlayers>=1 then LogScores(0)=P1Score
      if NumberPlayers>=2 then LogScores(1)=P2Score
      if NumberPlayers>=3 then LogScores(2)=P3Score
      if NumberPlayers>=4 then LogScores(3)=P4Score
      LOGFILE(LogIdx)=DateDiff("S", "1/1/1970", Now()) & "," & LogScores(0) & "," & LogScores(1) & "," & LogScores(2) & "," & LogScores(3) & ",,," &  CurrentPlayer & "," & CurrentBall & ",""" & GameModeOrig & """"
      LogIdx=LogIdx+1
    End if

    if bSessionActive=False then Exit Sub
    if bEnabled=False then Exit Sub
    if bWaitResp then exit sub ' Drop message until we get our next response

    SaveCurrentPlayer=CurrentPlayer
'   PostData = "session_uuid=" & SessionUUID & "&session_time=" & DateDiff("S", "1/1/1970", Now()) & _
'         "&session_sequence=" & SessionSeq & "&active=" & bActive
    PostData = "session_uuid=" & SessionUUID & "&session_time=" & GameTime-SessionTimeStart+1 & _
          "&session_sequence=" & SessionSeq & "&active=" & bActive

    SessionSeq=SessionSeq+1
    if NumberPlayers > 0 then
      for i = 0 to NumberPlayers-1
        PostData = PostData & "&current_p" & i+1 & "_score="
        if i <= NumberPlayers-1 then
          if i = 0 then PostData = PostData & P1Score
          if i = 1 then PostData = PostData & P2Score
          if i = 2 then PostData = PostData & P3Score
          if i = 3 then PostData = PostData & P4Score
        else
          PostData = PostData & "-1"
        End if
      Next

      PostData = PostData & "&current_ball=" & CurrentBall & "&current_player=" & CurrentPlayer
      if GameMode<>"" then PostData=PostData & "&game_modes=" & GameMode
    End if
    resultStr = PostMsg("https://" & domain, "/api/entry/", PostData, bAsynch)
    if resultStr<>"" then WriteToLog "     ", "SendUpdate Resp:" & resultStr
  End Sub

' PRIVATE BELOW
  Private Function LPad(StringToPad, Length, CharacterToPad)
    Dim x : x = 0
    If Length > Len(StringToPad) Then x = Length - len(StringToPad)
    LPad = String(x, CharacterToPad) & StringToPad
  End Function

  Private Function GUID()
    Dim TypeLib
    Set TypeLib = CreateObject("Scriptlet.TypeLib")
    GUID = Mid(TypeLib.Guid, 2, 36)

'   Set wsh = CreateObject("WScript.Shell")
'   Set fso = CreateObject("Scripting.FileSystemObject")
'
'   dim rc
'   dim result
'   dim objFileToRead
'   Dim sessionID:sessionID=puplayer.getroot&"\" & cGameName & "\sessionID.txt"
'
'   on error resume next
'   fso.DeleteFile(sessionID)
'   On error goto 0
'
'   rc = wsh.Run("powershell -Command ""(New-Guid).Guid"" | out-file -encoding ascii " & sessionID, 0, True)
'   if FileExists(sessionID) and rc=0 then
'     Set objFileToRead = fso.OpenTextFile(sessionID,1)
'     result = objFileToRead.ReadLine()
'     objFileToRead.Close
'     GUID=result
'   else
'     MsgBox "Cant Create SessionUUID through powershell. Disabling Scorbit"
'     bEnabled=False
'   End if

  End Function

  Private Function GetJSONValue(JSONStr, key)
    dim i
    Dim tmpStrs,tmpStrs2
    if Instr(1, JSONStr, key)<>0 then
      tmpStrs=split(JSONStr,",")
      for i = 0 to ubound(tmpStrs)
        if instr(1, tmpStrs(i), key)<>0 then
          tmpStrs2=split(tmpStrs(i),":")
          GetJSONValue=tmpStrs2(1)
          exit for
        End if
      Next
    End if
  End Function

  Private Sub SendHeartbeat()
    Dim resultStr
    dim TmpStr
    Dim Command
    Dim rc
    Dim QRFile:QRFile=puplayer.getroot&"\" & cGameName & "\" & dirQrCode
    if bEnabled=False then Exit Sub
    resultStr = GetMsgHdr("https://" & domain, "/api/heartbeat/", "Authorization", "SToken " & sToken)
    WriteToLog "     ", "Heartbeat Resp:" & resultStr
    If VenueMachineID="" then

      if resultStr<>"" and Instr(resultStr, """unpaired"":true")=0 then   ' We Paired
        bNeedsPairing=False
        WriteToLog "     ", "Paired"
        Scorbit_Paired()
      else
        bNeedsPairing=True
      End if

      TmpStr=GetJSONValue(resultStr, "venuemachine_id")
      if TmpStr<>"" then
        VenueMachineID=TmpStr
'WriteToLog "     ", "VenueMachineID=" & VenueMachineID
        Command = """" & puplayer.getroot&"\" & cGameName & "\sQRCode.exe"" " & VenueMachineID & " " & opdbID & " """ & QRFile & """"
        rc = wsh.Run(Command, 0, False)
      End if
    End if
  End Sub

  Private Function getStoken()
    Dim result
    Dim results
'   dim wsh
    Dim tmpUUID:tmpUUID="adc12b19a3504453a7414e722f58736b"
    Dim tmpVendor:tmpVendor="vscorbitron"
    Dim tmpSerial:tmpSerial="999990104"
    Dim QRFile:QRFile=puplayer.getroot&"\" & cGameName & "\" & dirQrCode
    Dim sTokenFile:sTokenFile=puplayer.getroot&"\" & cGameName & "\sToken.dat"

    ' Set everything up
    tmpUUID=MyUUID
    tmpVendor="vpin"
    tmpSerial=Serial

    on error resume next
    fso.DeleteFile(sTokenFile)
    On error goto 0

    ' get sToken and generate QRCode
'   Set wsh = CreateObject("WScript.Shell")
    Dim waitOnReturn: waitOnReturn = True
    Dim windowStyle: windowStyle = 0
    Dim Command
    Dim rc
    Dim objFileToRead

    Command = """" & puplayer.getroot&"\" & cGameName & "\sToken.exe"" " & tmpUUID & " " & tmpVendor & " " &  tmpSerial & " " & MachineID & " """ & QRFile & """ """ & sTokenFile & """ " & domain
WriteToLog "     ", "RUNNING Command:" & Command
    rc = wsh.Run(Command, windowStyle, waitOnReturn)
WriteToLog "     ", "Return:" & rc
    if FileExists(puplayer.getroot&"\" & cGameName & "\sToken.dat") and rc=0 then
      Set objFileToRead = fso.OpenTextFile(puplayer.getroot&"\" & cGameName & "\sToken.dat",1)
      result = objFileToRead.ReadLine()
      objFileToRead.Close
      Set objFileToRead = Nothing
'WriteToLog "     ", result

      if Instr(1, result, "Invalid timestamp")<> 0 then
        MsgBox "Scorbit Timestamp Error: Please make sure the time on your system is exact"
        getStoken=False
      elseif Instr(1, result, ":")<>0 then
        results=split(result, ":")
        sToken=results(1)
        sToken=mid(sToken, 3, len(sToken)-4)
WriteToLog "     ", "Got TOKEN:" & sToken
        getStoken=True
      Else
WriteToLog "     ", "ERROR:" & result
        getStoken=False
      End if
    else
WriteToLog "     ", "ERROR No File:" & rc
    End if

  End Function

  private Function FileExists(FilePath)
    If fso.FileExists(FilePath) Then
      FileExists=CBool(1)
    Else
      FileExists=CBool(0)
    End If
  End Function

  Private Function GetMsg(URLBase, endpoint)
    GetMsg = GetMsgHdr(URLBase, endpoint, "", "")
  End Function

  Private Function GetMsgHdr(URLBase, endpoint, Hdr1, Hdr1Val)
    Dim Url
    Url = URLBase + endpoint & "?session_active=" & bActive
WriteToLog "     ", "Url:" & Url  & "  Async=" & bRunAsynch
    objXmlHttpMain.open "GET", Url, bRunAsynch
'   objXmlHttpMain.setRequestHeader "Content-Type", "text/xml"
    objXmlHttpMain.setRequestHeader "Cache-Control", "no-cache"
    if Hdr1<> "" then objXmlHttpMain.setRequestHeader Hdr1, Hdr1Val

'   on error resume next
      err.clear
      objXmlHttpMain.send ""
      if err.number=-2147012867 then
        MsgBox "Multiplayer Server is down (" & err.number & ") " & Err.Description
        bEnabled=False
      elseif err.number <> 0 then
        WriteToLog "     ", "Server error: (" & err.number & ") " & Err.Description
      End if
      if bRunAsynch=False then
WriteToLog "     ", "Status: " & objXmlHttpMain.status
        If objXmlHttpMain.status = 200 Then
          GetMsgHdr = objXmlHttpMain.responseText
        Else
          GetMsgHdr=""
        End if
      Else
        bWaitResp=True
        GetMsgHdr=""
      End if
'   On error goto 0

  End Function

  Private Function PostMsg(URLBase, endpoint, PostData, bAsynch)
    Dim Url

    Url = URLBase + endpoint
WriteToLog "     ", "PostMSg:" & Url & " " & PostData

    objXmlHttpMain.open "POST",Url, bAsynch
    objXmlHttpMain.setRequestHeader "Content-Type", "application/x-www-form-urlencoded"
    objXmlHttpMain.setRequestHeader "Content-Length", Len(PostData)
    objXmlHttpMain.setRequestHeader "Cache-Control", "no-cache"
    objXmlHttpMain.setRequestHeader "Authorization", "SToken " & sToken
    if bAsynch then bWaitResp=True

    on error resume next
      objXmlHttpMain.send PostData
      if err.number=-2147012867 then
        MsgBox "Multiplayer Server is down (" & err.number & ") " & Err.Description
        bEnabled=False
      elseif err.number <> 0 then
        'WriteToLog "     ", "Multiplayer Server error (" & err.number & ") " & Err.Description
      End if
      If objXmlHttpMain.status = 200 Then
        PostMsg = objXmlHttpMain.responseText
      else
        PostMsg="ERROR: " & objXmlHttpMain.status & " >" & objXmlHttpMain.responseText & "<"
      End if
    On error goto 0
  End Function

  Private Function pvPostFile(sUrl, sFileName, bAsync)
WriteToLog "     ", "Posting File " & sUrl & " " & sFileName & " " & bAsync & " File:" & Mid(sFileName, InStrRev(sFileName, "\") + 1)
    Dim STR_BOUNDARY:STR_BOUNDARY  = GUID()
    Dim nFile
    Dim baBuffer()
    Dim sPostData
    Dim Response

    '--- read file
    Set nFile = fso.GetFile(sFileName)
    With nFile.OpenAsTextStream()
      sPostData = .Read(nFile.Size)
      .Close
    End With
'   fso.Open sFileName For Binary Access Read As nFile
'   If LOF(nFile) > 0 Then
'     ReDim baBuffer(0 To LOF(nFile) - 1) As Byte
'     Get nFile, , baBuffer
'     sPostData = StrConv(baBuffer, vbUnicode)
'   End If
'   Close nFile

    '--- prepare body
    sPostData = "--" & STR_BOUNDARY & vbCrLf & _
      "Content-Disposition: form-data; name=""uuid""" & vbCrLf & vbCrLf & _
      SessionUUID & vbcrlf & _
      "--" & STR_BOUNDARY & vbCrLf & _
      "Content-Disposition: form-data; name=""log_file""; filename=""" & SessionUUID & ".csv""" & vbCrLf & _
      "Content-Type: application/octet-stream" & vbCrLf & vbCrLf & _
      sPostData & vbCrLf & _
      "--" & STR_BOUNDARY & "--"

'WriteToLog "     ", "POSTDATA: " & sPostData & vbcrlf

    '--- post
    With objXmlHttpMain
      .Open "POST", sUrl, bAsync
      .SetRequestHeader "Content-Type", "multipart/form-data; boundary=" & STR_BOUNDARY
      .SetRequestHeader "Authorization", "SToken " & sToken
      .Send sPostData ' pvToByteArray(sPostData)
      If Not bAsync Then
        Response= .ResponseText
        pvPostFile = Response
WriteToLog "     ", "Upload Response: " & Response
      End If
    End With

  End Function

  Private Function pvToByteArray(sText)
    pvToByteArray = StrConv(sText, 128)   ' vbFromUnicode
  End Function

End Class
'  END SCORBIT
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX




'**********************
'   VR Stuff
'**********************

DIM VRThings
If VRRoom > 0 Then
  scoretext.visible = 0
  Pincab_Rails.visible = 1
  Pincab_Backglass.blenddisablelighting = 1
  RightWireRail.BlendDisableLightingFromBelow = 1
  If VRRoom = 1 Then
    for each VRThings in VR_Cab:VRThings.visible = 1:Next
    for each VRThings in VR_360:VRThings.visible = 1:Next
    for each VRThings in VR_Min:VRThings.visible = 0:Next
  End If
  If VRRoom = 2 Then
    for each VRThings in VR_Cab:VRThings.visible = 1:Next
    for each VRThings in VR_360:VRThings.visible = 0:Next
    for each VRThings in VR_Min:VRThings.visible = 1:Next
  End If
  If VRRoom = 3 Then
    for each VRThings in VR_Cab:VRThings.visible = 0:Next
    for each VRThings in VR_360:VRThings.visible = 0:Next
    for each VRThings in VR_Min:VRThings.visible = 0:Next
    PinCab_Backglass.visible = 1
    PinCab_Backbox.visible = 1
    PinCab_DMD.visible = 1
    DMD.visible = 1
  End If
  If VRRoom = 4 Then
    for each VRThings in VR_Cab:VRThings.visible = 1:Next
    for each VRThings in VR_360:VRThings.visible = 0:Next
    for each VRThings in VR_Min:VRThings.visible = 0:Next
        for each VRThings in VR_Max:VRThings.visible = 1:Next
  End If
Else
  for each VRThings in VR_Cab:VRThings.visible = 0:Next
  for each VRThings in VR_360:VRThings.visible = 0:Next
  for each VRThings in VR_Min:VRThings.visible = 0:Next
    for each VRThings in VR_Max:VRThings.visible = 0:Next
  RightWireRail.BlendDisableLightingFromBelow = 0
' If DesktopMode then scoretext.visible = 1 else scoretext.visible = 0 End If
' If DesktopMode then Pincab_Rails.visible = 1 else Pincab_Rails.visible = 0 End If
End if

Sub Frametimer_Timer()
  RollingUpdate
  BallShadowUpdate
  LampTimer
  FlipperLSh.RotZ = LeftFlipper.currentangle
  FlipperRSh.RotZ = RightFlipper.currentangle
  LFlipPrim.RotZ = LeftFlipper.currentangle
  RFlipPrim.RotZ = RightFlipper.currentangle
' Pincab_Shooter.Y = -175.4 + (5* Plunger.Position) -20
End sub

'**********************
'       VR BATS
'**********************
If VRBats = 1 then RunBats()   'Runs once at game load...

Dim VRBathings
sub RunBats()
  for each VRBathings in VR_Bats:VRBathings.visible = 1:Next
  VRBat1.PlayAnimEndless(0.15)
  VRBat2.PlayAnimEndless(0.13)
  VRBat3.PlayAnimEndless(0.14)
  VRBat4.PlayAnimEndless(0.14)
  VRBat5.PlayAnimEndless(0.16)
  VRBat6.PlayAnimEndless(0.11)
  VRBat7.PlayAnimEndless(0.17)
  VRBat8.PlayAnimEndless(0.13)
  VRBat9.PlayAnimEndless(0.17)
  VRBat10.PlayAnimEndless(0.13)

  BatTimer.enabled = true
  BatLengthTimer.enabled = true
end Sub

Dim BatsOn
BatsOn = true

Sub BatTimer_Timer()
  VRBat1.ObjRotZ=VRBat1.ObjRotZ+.7
  VRBat2.ObjRotZ=VRBat2.ObjRotZ+.9
  VRBat3.ObjRotZ=VRBat3.ObjRotZ+.8
  VRBat4.ObjRotZ=VRBat4.ObjRotZ+1.12
  VRBat5.ObjRotZ=VRBat5.ObjRotZ+.75
  VRBat6.ObjRotZ=VRBat6.ObjRotZ+.95
  VRBat7.ObjRotZ=VRBat7.ObjRotZ-.75
  VRBat8.ObjRotZ=VRBat8.ObjRotZ-.95
  VRBat9.ObjRotZ=VRBat9.ObjRotZ-.75
  VRBat10.ObjRotZ=VRBat10.ObjRotZ-.95
  if BatsOn = true Then PlaySound "Bats",0,0.05
  BatsOn = false
end Sub

Sub BatLengthTimer_Timer()
  StopSound "Bats"
  BatTimer.enabled = False
  BatsOn = true
  for each VRBathings in VR_Bats:VRBathings.visible = 0:Next
  for each VRBathings in VR_Bats:VRBathings.StopAnim():Next
  BatLengthTimer.enabled = False
  VRBatsOn = false  'stops bats timer from repeating and animation works
end Sub

'**********************************
'       VR BATMOBILE SPINNING
'**********************************
If VRRoom = 4  Then BatmobileTimer.enabled = True
  sub Batmobiletimer_timer()
  VR_Mega007.Objrotz = VR_Mega007.Objrotz + 0.08
  VR_Mega016Turntable.Objrotz = VR_Mega016Turntable.Objrotz + 0.08
  VR_MegaWindshields.Objrotz = VR_MegaWindshields.Objrotz + 0.08

End Sub

'**********************************
'       VR ATOMIC PILE FLASHING
'**********************************
Dim VRLight
VRLight = 0
If VRRoom = 4  Then AtomicTimer.enabled = True
Sub AtomicTimer_timer()

if VRLight = 2 then VRLight = 0
if VRLight = 0 then VR_Mega011.Blenddisablelighting = 1 :VR_Mega011.image = "11":VR_Mega009.Blenddisablelighting = 1 :VR_Mega009.image = "09"
if VRLight = 1 then VR_Mega011.Blenddisablelighting = 1: VR_Mega011.image = "11dodge1":VR_Mega009.Blenddisablelighting = 1: VR_Mega009.image = "09dodge10"
Vrlight = VRlight + 1

End Sub

'***********************************
'     DOF - TerryRed
'***********************************

Sub DOF_UnderCab(Colour)
  DOF_UnderCab_Off
  if Colour = "Bonus_Cyan" then DOF 501, DOFOn  'Bonus - Cyan
  if Colour = "Bonus_Red" then DOF 502, DOFOn   'BatPhone - Red
  if Colour = "Bonus_Orange" then DOF 503, DOFOn  'Combos - Orange
  if Colour = "Bonus_Yellow" then DOF 504, DOFOn  'Gadgets - Yellow
  if Colour = "Bonus_Pink" then DOF 505, DOFOn  'Joker - Pink
  if Colour = "Bonus_White" then DOF 506, DOFOn 'Catwoman - White
  if Colour = "Bonus_Green" then DOF 507, DOFOn 'Riddler - Green
  if Colour = "Bonus_Purple" then DOF 508, DOFOn  'Penguin - Purple
  if Colour = "Bonus_Blue" then DOF 509, DOFOn  'Bonus End
  if Colour = "Black" then DOF 510, DOFOn   'Black
  if Colour = "Cyan" then DOF 511, DOFOn    'Bonus - Cyan
  if Colour = "Red" then DOF 512, DOFOn   'BatPhone - Red
  if Colour = "Orange" then DOF 513, DOFOn  'Combos - Orange
  if Colour = "Yellow" then DOF 514, DOFOn  'Gadgets - Yellow
  if Colour = "Pink" then DOF 515, DOFOn    'Joker - Pink
  if Colour = "White" then DOF 516, DOFOn   'Catwoman - White
  if Colour = "Green" then DOF 517, DOFOn   'Riddler - Green
  if Colour = "Purple" then DOF 518, DOFOn  'Penguin - Purple
  if Colour = "Blue" then DOF 519, DOFOn    'Bonus End
End Sub

Sub DOF_UnderCab_Off
  'End of Ball Bonus Colours
  DOF 501, DOFOff 'Bonus Start - Cyan
  DOF 502, DOFOff 'BatPhone - Red
  DOF 503, DOFOff 'Combos - Orange
  DOF 504, DOFOff 'Gadgets - Yellow
  DOF 505, DOFOff 'Joker - Pink
  DOF 506, DOFOff 'Catwoman - White
  DOF 507, DOFOff 'Riddler - Green
  DOF 508, DOFOff 'Penguin - Purple
  DOF 509, DOFOff 'Bonus End - Blue
  'In Game Colours
  DOF 510, DOFOff 'Black
  DOF 511, DOFOff 'Default - Cyan
  DOF 512, DOFOff 'BatPhone - Red
  DOF 513, DOFOff 'Combos - Orange
  DOF 514, DOFOff 'Gadgets - Yellow
  DOF 515, DOFOff 'Joker - Pink
  DOF 516, DOFOff 'Catwoman - White
  DOF 517, DOFOff 'Riddler - Green
  DOF 518, DOFOff 'Penguin - Purple
  DOF 519, DOFOff 'Misc - Blue
End Sub

Dim DOF_BM_Song: DOF_BM_Song = -1

Sub DOF_Batman_Song_Timer
  DOF_BM_Song = DOF_BM_Song +1
  Select Case DOF_BM_Song
    Case 0: DOF_Batman_Song.interval = 2000: DOF_Batman_Song.enabled = true
    Case 1: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song.interval = 3200
    Case 2: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song.interval = 3125
    Case 3: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song.interval = 3000
    Case 4: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song.interval = 3200
    Case 5: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song.interval = 1590
    Case 6: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song.interval = 1558
    Case 7: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song.interval = 3177
    Case 8: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song.interval = 1525
    Case 9: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song.interval = 1640
    Case 10: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song.interval = 4760
    Case 11: DOF 402, DOFPulse: DOF_Batman_Song.interval = 200
    Case 12: DOF 404, DOFPulse: DOF_Batman_Song.interval = 200
    Case 13: DOF 403, DOFPulse: DOF_Batman_Song.interval = 180
    Case 14: DOF 405, DOFPulse: DOF_Batman_Song.interval = 200
    Case 15: DOF 402, DOFPulse: DOF_Batman_Song.interval = 200
    Case 16: DOF 404, DOFPulse: DOF_Batman_Song.interval = 200
    Case 17: DOF 403, DOFPulse: DOF_Batman_Song.interval = 190
    Case 18: DOF 405, DOFPulse: DOF_Batman_Song.interval = 210
    Case 19: DOF 402, DOFPulse: DOF_Batman_Song.interval = 200
    Case 20: DOF 404, DOFPulse: DOF_Batman_Song.interval = 200
    Case 21: DOF 403, DOFPulse: DOF_Batman_Song.interval = 200
    Case 22: DOF 405, DOFPulse: DOF_Batman_Song.interval = 200
    Case 23: DOF 402, DOFPulse: DOF_Batman_Song.interval = 180
    Case 24: DOF 404, DOFPulse: DOF_Batman_Song.interval = 220
    Case 25: DOF 403, DOFPulse: DOF_Batman_Song.interval = 170
    Case 26: DOF 405, DOFPulse: DOF_Batman_Song.interval = 200
    Case 27: DOF 402, DOFPulse: DOF_Batman_Song.interval = 1085
    Case 28: DOF 406, DOFPulse: DOF 407, DOFPulse: DOF_Batman_Song.interval = 500
    Case 29: DOF_Batman_Song.enabled = false: DOF_BM_Song = -1
  End Select
End Sub

Dim DOF_BM_Song_Credits: DOF_BM_Song_Credits = -1

Sub DOF_Batman_Song_Credits_Timer
  DOF_BM_Song_Credits = DOF_BM_Song_Credits +1
  Select Case DOF_BM_Song_Credits
    Case 0: DOF_Batman_Song_Credits.interval = 19000: DOF_Batman_Song_Credits.enabled = true
    Case 1: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song_Credits.interval = 3200
    Case 2: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song_Credits.interval = 3125
    Case 3: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song_Credits.interval = 3200
    Case 4: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song_Credits.interval = 3200
    Case 5: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song_Credits.interval = 1590
    Case 6: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song_Credits.interval = 1558
    Case 7: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song_Credits.interval = 3177
    Case 8: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song_Credits.interval = 1525
    Case 9: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song_Credits.interval = 1640
    Case 10: DOF 400, DOFPulse: DOF 401, DOFPulse: DOF_Batman_Song_Credits.interval = 2400
    Case 11: DOF 402, DOFPulse: DOF_Batman_Song_Credits.interval = 200
    Case 12: DOF 404, DOFPulse: DOF_Batman_Song_Credits.interval = 200
    Case 13: DOF 403, DOFPulse: DOF_Batman_Song_Credits.interval = 180
    Case 14: DOF 405, DOFPulse: DOF_Batman_Song_Credits.interval = 200
    Case 15: DOF 402, DOFPulse: DOF_Batman_Song_Credits.interval = 200
    Case 16: DOF 404, DOFPulse: DOF_Batman_Song_Credits.interval = 200
    Case 17: DOF 403, DOFPulse: DOF_Batman_Song_Credits.interval = 190
    Case 18: DOF 405, DOFPulse: DOF_Batman_Song_Credits.interval = 210
    Case 19: DOF 402, DOFPulse: DOF_Batman_Song_Credits.interval = 200
    Case 20: DOF 404, DOFPulse: DOF_Batman_Song_Credits.interval = 200
    Case 21: DOF 403, DOFPulse: DOF_Batman_Song_Credits.interval = 200
    Case 22: DOF 405, DOFPulse: DOF_Batman_Song_Credits.interval = 200
    Case 23: DOF 402, DOFPulse: DOF_Batman_Song_Credits.interval = 180
    Case 24: DOF 404, DOFPulse: DOF_Batman_Song_Credits.interval = 500
    Case 25: DOF 406, DOFPulse: DOF 407, DOFPulse: DOF_Batman_Song_Credits.interval = 500
    Case 26: DOF_Batman_Song_Credits.enabled = false: DOF_BM_Song_Credits = -1
  End Select
End Sub


' DOF Triggers

'#### Buttons ####

'Start Button   E140
'Launch Button    E139
'Fire Button    E141
'Fire Button RGB  E115/E114/E116
'Launch Button    E139

'#### Solenoids ####

'Left Flipper   E101
'Right Flipper    E102
'Left Slingshot   E103
'Right Slingshot  E105
'Bumper 1     E107
'Bumper 2     E108
'Bumper 3     E109
'Ball Release   E106
'AutoPlunger    E121
'Penguin Kicker   E110
'Bat Signal Kicker  E111
'Knocker      E122

' #### Misc ####

'Strobes      E112
'Beacon       E128
'Gear       E154
'Shaker - 1 Sec   E159
'Crane Hit      E153
'Bat Phone Lit    E155
'TILT       E310
'TILT Warning   E311
'Drained      E312
'Left OuterLane   E144
'Left Innerlane   E145
'Right Inner Lane E147
'Right Outer Lane E148
'Riddler Orbit    E625
'Riddler Orbit    E626
'Left Ramp      E627
'Right Ramp     E628

' #### Targets ####

'Gadget Target Hit  E200
'Gadget Complete  E201
'TV Target Hit    E202
'Crane Hit      E153
'Joker Hit      E209
'Analyzer Target  E206
'Computer Target  E205
'Pow Target Hit   E203
'Gordon Target Hit  E204
'Bat Phone Hit    E207
'Bat Cave Hit   E208
'Joker Targets Hit  E209
'Spinner      E156
'Bat Turn     E150

' #### Words / Letters ####

'"BAT" - Letters  E400
'"MAN" - Letters  E401
'"BATMAN"     E406
'"BATMAN"     E407
'StartGame "Batman" E408
'"DA"       E402
'"DA"       E403
'"DA"       E404
'"DA"       E405
'Bonus - BatPhone E502
'Bonus - Combos   E503
'Bonus - Gadgets  E504
'Bonus - Joker    E505
'Bonus - Catwoman E506
'Bonus - Riddler  E507
'Bonus - Penguin  E508
'Bonus End      E500
'Bumper 1 - BAM   E302
'Bumper 2 - ZOK   E303
'Bumper 3 - POW   E304
'"EEEYOW"     E601
'"KRUNCH"     E602
'"POWIE"      E603
'"THWACK"     E604
'"CRUNCH"     E611
'"JACKPOT"      E612
'"OUCH"       E613
'"SOCK"       E614
'"THWACK"     E615
'"ZOK"        E616
'"CRASH"      E617
'"KAPOW"      E618
'"KLONK"      E619
'"POWIE"      E620
'"POW"        E621
'"SUPER JACKPOT"  E622


