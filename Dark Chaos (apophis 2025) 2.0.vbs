'
'  ______  _______  ______ _     _      _______ _     _ _______  _____  _______
'  |     \ |_____| |_____/ |____/       |       |_____| |_____| |     | |______
'  |_____/ |     | |    \_ |    \_      |_____  |     | |     | |_____| ______|
'
'
'                          An Original Game By
'                                APOPHIS
'                                 2025
'
' ------------------------------------------------------------------------------
'
' Defenders and Destroyers
'   * Apophis: Game design, modeling, light shows, DOF, and coding.
'   * Unsavory: Music, sound effects, and callouts. Art design support.
'   * Flux: Game logic framework. Coding support.

' Special Thanks
'   * Idigstuff: Ideation and music support.
'   * DaRdog: help on VR room.
'   * Niwak: Blender toolkit.
'   * VPW testers: Bug hunting and advice.
'   * The VP dev team: for making this all possible
'
' ------------------------------------------------------------------------------
'
'
' This table was developed using the Game Logic Framework (GLF).
' For detailed information, see: https://mpcarr.github.io/vpx-glf/
'
' Dark Chaos repo: https://github.com/apophis79/darkchaos
'
'
'
' ZTOC : File table of contents
' ------------------------------
' ZVLM : VLM  Arrays
' ZVAR : Table Variables
' ZINI : Table Initialization
' ZOPT : User Options
' ZKEY : Key Press Handling
' ZTIM : General Timers
' ZANI : Misc Animations
' ZAST : Asteroid Animation
' ZSHP : Ship Wobble Animations
' ZBBR : Ball Brightness
' ZSHD : Ball shadows
' ZDRT : Drop target
' ZFLE : Fleep sounds
' ZFLP : Flippers
' ZMAT : General Math Functions
' ZMIS : Miscellaneous support function
' ZCOR : Flipper, slingshot, rubber and corrections
' ZROL : Ball rolling and ramp sounds
' ZRBR : Room Brightness
' ZSLN : Slingshots
' ZSOL : Other Solenoids
' ZSUT : Stand-up targets
' ZVRR : VR Room / VR Cabinet
' ZGCF : GLF Configurations
' ZGLF : Game Logic Framework (GLF)
'
'
'
'
' B2S Backglass IDs
' ------------
' E001 0/1 DARK
' E002 0/1 CHAOS
' E003 0/1 Fire cluster bombs
' E004 0/1 Shields
' E005 0/1 Wave incoming
' E006 0/1 Ball
' E007 0/1 Fire moon missiles
' E008 0/1 Left ship
' E009 0/1 Right ship
' E010 0/1 Main window left
' E011 0/1 Right window bottom
' E012 0/1 Right window top
' E013 0/1 Left window
' E014 0/1 Right cockpit
' E015 0/1 Main window right
' E016 0/1 Left cockpit
'
'
' DOF IDs
' ------------
' E101 0/1 LeftFlipper
' E102 0/1 RightFlipper
' E103 2 Leftslingshot
' E104 2 Rightslingshot
' E105 2 side bumper
' E106 2 top bumper left
' E107 2 top bumper center
' E108 2 top bumper right
' E109 2 scoop solenoid
' E110 2 plunger auto fire
' E111 2 diverter pin
' E112 2 lock pin
' E113 2 knocker
' E114 2 meteor solenoid 12
' E115 2 meteor solenoid 34
' E120 2 flashers white
' E121 2 flashers red
' E122 2 flashers orange
' E123 2 flashers yellow
' E124 2 flashers green
' E125 2 flashers cyan
' E126 2 flashers blue
' E127 2 flashers purple
' E128 2 flashers magenta
' E129 2 flashers pink
' E130 0/1 undercab Normal
' E131 2 ball launch from plunger
' E132 2 ball ended
' E133 0/1 new ball in plunger lane
' E134 0/1 attract
' E135 2 spinner
' E136 2 cluster bomb fired
' E137 2 extra ball achieved
' E138 2 health added
' E139 2 wave incoming
' E140 2 proton fired
' E141 2 meteor hit
' E142 2 earth hit
' E143 2 moon missile fired
' E144 2 shields up
' E145 2 shields down
' E146 2 time warp
' E150 2 combo command wizard jackpot
' E151 2 fully loaded wizard jackpot
' E152 2 final wave wizard asteroid hit
' E153 2 final wave wizard asteroid destroyed
' E160 2 victory lap white
' E161 2 victory lap red
' E162 2 victory lap orange
' E163 2 victory lap yellow
' E164 2 victory lap green
' E165 2 victory lap cyan
' E166 2 victory lap blue
' E167 2 victory lap purple
' E168 2 victory lap magenta
' E170 2 cluster bomb aquired
' E171 2 moon missile aquired
' E172 2 proton round aquired
' E173 2 ship save aquired



Option Explicit
Randomize
SetLocale 1033

On Error Resume Next
ExecuteGlobal GetTextFile("controller.vbs")
If Err Then MsgBox "You need the controller.vbs in order to run this table, available in the vp10 package"
On Error Goto 0

Sub LoadCoreFiles
  On Error Resume Next
  ExecuteGlobal GetTextFile("core.vbs")
  If Err Then MsgBox "Can't open core.vbs"
  On Error Goto 0
End Sub

'*****************************************************************************************************************************************
'  ZVLM : VLM  Arrays
'*****************************************************************************************************************************************



' VLM  Arrays - Start
' Arrays per baked part
Dim BP_Asteroid1: BP_Asteroid1=Array(BM_Asteroid1, LM_F_FL1_Asteroid1, LM_F_FL2_Asteroid1, LM_F_FL3_Asteroid1, LM_F_FL4_Asteroid1, LM_F_FL7a_Asteroid1, LM_L_LB2_Asteroid1, LM_L_LB3_Asteroid1, LM_L_LM3_Asteroid1, LM_L_LPC1_Asteroid1, LM_L_LPC4_Asteroid1, LM_L_LPC5_Asteroid1, LM_L_LPF_Asteroid1, LM_L_LSwC1_Asteroid1, LM_L_LSwC2_Asteroid1, LM_L_LSwC3_Asteroid1, LM_L_Lspot1_Asteroid1, LM_GI_gi20_Asteroid1, LM_GI_gi21_Asteroid1, LM_GI_gi22_Asteroid1)
Dim BP_Asteroid2: BP_Asteroid2=Array(LM_F_FL1_Asteroid2, LM_F_FL2_Asteroid2, LM_F_FL3_Asteroid2, LM_F_FL4_Asteroid2, LM_F_FL7a_Asteroid2, LM_L_LB2_Asteroid2, LM_L_LB3_Asteroid2, LM_L_LM3_Asteroid2, LM_L_LPC4_Asteroid2, LM_L_LPC5_Asteroid2, LM_L_LPF_Asteroid2, LM_L_LSwC1_Asteroid2, LM_L_LSwC2_Asteroid2, LM_L_LSwC3_Asteroid2, LM_L_Lspot1_Asteroid2, LM_GI_gi20_Asteroid2, LM_GI_gi21_Asteroid2, LM_GI_gi22_Asteroid2)
Dim BP_Asteroid3: BP_Asteroid3=Array(LM_F_FL1_Asteroid3, LM_F_FL2_Asteroid3, LM_F_FL3_Asteroid3, LM_F_FL4_Asteroid3, LM_F_FL7a_Asteroid3, LM_L_LB2_Asteroid3, LM_L_LB3_Asteroid3, LM_L_LM3_Asteroid3, LM_L_LPC4_Asteroid3, LM_L_LPC5_Asteroid3, LM_L_LPF_Asteroid3, LM_L_LSwC1_Asteroid3, LM_L_LSwC2_Asteroid3, LM_L_LSwC3_Asteroid3, LM_L_Lspot1_Asteroid3, LM_GI_gi20_Asteroid3, LM_GI_gi21_Asteroid3, LM_GI_gi22_Asteroid3)
Dim BP_Asteroid4: BP_Asteroid4=Array(LM_F_FL1_Asteroid4, LM_F_FL2_Asteroid4, LM_F_FL3_Asteroid4, LM_F_FL4_Asteroid4, LM_F_FL7a_Asteroid4, LM_L_LB2_Asteroid4, LM_L_LB3_Asteroid4, LM_L_LM3_Asteroid4, LM_L_LPC4_Asteroid4, LM_L_LPC5_Asteroid4, LM_L_LPF_Asteroid4, LM_L_LSwC1_Asteroid4, LM_L_LSwC2_Asteroid4, LM_L_LSwC3_Asteroid4, LM_L_Lspot1_Asteroid4, LM_GI_gi20_Asteroid4, LM_GI_gi21_Asteroid4, LM_GI_gi22_Asteroid4)
Dim BP_BR1: BP_BR1=Array(BM_BR1, LM_F_FL5b_BR1, LM_F_FL5e_BR1, LM_L_LB1_BR1, LM_L_LMet1_BR1, LM_GI_gi02_BR1)
Dim BP_BR2: BP_BR2=Array(BM_BR2, LM_F_FL1_BR2, LM_F_FL3_BR2, LM_F_FL7a_BR2, LM_L_LB2_BR2, LM_L_LB3_BR2, LM_L_LDP_BR2, LM_L_Lspot1_BR2, LM_GI_gi13_BR2, LM_GI_gi22_BR2)
Dim BP_BR3: BP_BR3=Array(BM_BR3, LM_F_FL1_BR3, LM_F_FL3_BR3, LM_F_FL7a_BR3, LM_L_LB2_BR3, LM_L_LB3_BR3, LM_L_LDP_BR3, LM_GI_gi13_BR3, LM_GI_gi22_BR3)
Dim BP_BS1: BP_BS1=Array(BM_BS1, LM_L_LB1_BS1, LM_L_LMet1_BS1, LM_L_LS1_BS1, LM_L_LS2_BS1, LM_GI_gi11_BS1, LM_GI_gi20_BS1)
Dim BP_BS2: BP_BS2=Array(BM_BS2, LM_F_FL1_BS2, LM_F_FL2_BS2, LM_F_FL3_BS2, LM_F_FL7a_BS2, LM_L_LB2_BS2, LM_L_LB3_BS2, LM_L_LDP_BS2, LM_GI_gi13_BS2, LM_GI_gi17_BS2, LM_GI_gi22_BS2)
Dim BP_BS3: BP_BS3=Array(BM_BS3, LM_F_FL1_BS3, LM_F_FL2_BS3, LM_F_FL3_BS3, LM_F_FL4_BS3, LM_F_FL7a_BS3, LM_L_LB2_BS3, LM_L_LB3_BS3, LM_L_LDP_BS3, LM_L_Lspot1_BS3, LM_GI_gi13_BS3, LM_GI_gi22_BS3)
Dim BP_BmpBot: BP_BmpBot=Array(BM_BmpBot, LM_F_FL1_BmpBot, LM_F_FL2_BmpBot, LM_F_FL3_BmpBot, LM_F_FL4_BmpBot, LM_F_FL7a_BmpBot, LM_L_LB1_BmpBot, LM_L_LB2_BmpBot, LM_L_LB3_BmpBot, LM_L_LDP_BmpBot, LM_L_LMet2_BmpBot, LM_L_LS2_BmpBot, LM_L_Lspot1_BmpBot, LM_GI_gi12_BmpBot, LM_GI_gi13_BmpBot, LM_GI_gi17_BmpBot, LM_GI_gi22_BmpBot)
Dim BP_BmpTop: BP_BmpTop=Array(BM_BmpTop)
Dim BP_Card: BP_Card=Array(BM_Card)
Dim BP_DiverterPin: BP_DiverterPin=Array(BM_DiverterPin, LM_F_FL3_DiverterPin, LM_F_FL7a_DiverterPin, LM_L_LB2_DiverterPin, LM_L_LB3_DiverterPin, LM_L_LDP_DiverterPin)
Dim BP_Gate2: BP_Gate2=Array(BM_Gate2, LM_L_LDS_Gate2, LM_GI_gi10_Gate2, LM_GI_gi14_Gate2)
Dim BP_GateL: BP_GateL=Array(BM_GateL, LM_F_FL2_GateL, LM_F_FL7a_GateL, LM_L_LPC1_GateL, LM_GI_gi20_GateL, LM_GI_gi21_GateL)
Dim BP_GateR: BP_GateR=Array(BM_GateR, LM_F_FL7a_GateR, LM_L_LX_GateR, LM_L_Lspot1_GateR)
Dim BP_LArm: BP_LArm=Array(BM_LArm, LM_F_FL5a_LArm, LM_F_FL5b_LArm, LM_F_FL5c_LArm, LM_F_FL5d_LArm, LM_F_FL5e_LArm, LM_F_FL5f_LArm, LM_F_FL5g_LArm, LM_F_FL5h_LArm, LM_GI_gi01_LArm, LM_GI_gi02_LArm, LM_GI_gi03_LArm, LM_GI_gi04_LArm)
Dim BP_LFlip: BP_LFlip=Array(BM_LFlip, LM_F_FL5a_LFlip, LM_F_FL5b_LFlip, LM_F_FL5c_LFlip, LM_F_FL5d_LFlip, LM_F_FL5e_LFlip, LM_F_FL5f_LFlip, LM_F_FL5g_LFlip, LM_F_FL5h_LFlip, LM_F_FL6a_LFlip, LM_F_FL6b_LFlip, LM_L_LC1_LFlip, LM_L_LC2_LFlip, LM_L_LC3_LFlip, LM_L_LC4_LFlip, LM_L_LH1_LFlip, LM_L_LH2_LFlip, LM_L_LH3_LFlip, LM_L_LH4_LFlip, LM_L_LH5_LFlip, LM_L_LPR4_LFlip, LM_L_LSA_LFlip, LM_GI_gi01_LFlip, LM_GI_gi02_LFlip, LM_GI_gi03_LFlip, LM_GI_gi04_LFlip, LM_GI_gi05_LFlip, LM_GI_gi07_LFlip, LM_GI_giapron_LFlip)
Dim BP_LFlipU: BP_LFlipU=Array(BM_LFlipU, LM_F_FL5a_LFlipU, LM_F_FL5b_LFlipU, LM_F_FL5c_LFlipU, LM_F_FL5d_LFlipU, LM_F_FL5e_LFlipU, LM_F_FL5f_LFlipU, LM_F_FL5g_LFlipU, LM_F_FL5h_LFlipU, LM_F_FL6a_LFlipU, LM_F_FL6b_LFlipU, LM_F_FL6g_LFlipU, LM_L_LC1_LFlipU, LM_L_LC2_LFlipU, LM_L_LC3_LFlipU, LM_L_LC4_LFlipU, LM_L_LC5_LFlipU, LM_L_LC6_LFlipU, LM_L_LH1_LFlipU, LM_L_LH2_LFlipU, LM_L_LH3_LFlipU, LM_L_LH4_LFlipU, LM_L_LH5_LFlipU, LM_L_LH6_LFlipU, LM_L_LPR4_LFlipU, LM_L_LPR5_LFlipU, LM_L_LSA_LFlipU, LM_GI_gi01_LFlipU, LM_GI_gi02_LFlipU, LM_GI_gi03_LFlipU, LM_GI_gi04_LFlipU, LM_GI_gi05_LFlipU, LM_GI_gi07_LFlipU, LM_GI_giapron_LFlipU)
Dim BP_Layer1: BP_Layer1=Array(BM_Layer1, LM_F_FL4_Layer1, LM_F_FL7a_Layer1, LM_L_LB2_Layer1, LM_L_LB3_Layer1, LM_L_Lspot1_Layer1, LM_GI_gi22_Layer1)
Dim BP_LockPin: BP_LockPin=Array(BM_LockPin, LM_F_FL1_LockPin, LM_GI_gi14_LockPin, LM_GI_gi15_LockPin, LM_GI_gi19_LockPin)
Dim BP_Lsling1: BP_Lsling1=Array(BM_Lsling1, LM_F_FL5a_Lsling1, LM_F_FL5b_Lsling1, LM_F_FL5c_Lsling1, LM_F_FL5d_Lsling1, LM_F_FL5e_Lsling1, LM_F_FL5f_Lsling1, LM_F_FL5g_Lsling1, LM_F_FL5h_Lsling1, LM_L_LC1_Lsling1, LM_L_LCR2_Lsling1, LM_L_LH1_Lsling1, LM_L_LH2_Lsling1, LM_L_LLI_Lsling1, LM_GI_gi01_Lsling1, LM_GI_gi02_Lsling1, LM_GI_gi03_Lsling1, LM_GI_gi04_Lsling1)
Dim BP_Lsling2: BP_Lsling2=Array(BM_Lsling2, LM_F_FL5a_Lsling2, LM_F_FL5b_Lsling2, LM_F_FL5c_Lsling2, LM_F_FL5d_Lsling2, LM_F_FL5e_Lsling2, LM_F_FL5f_Lsling2, LM_F_FL5g_Lsling2, LM_F_FL5h_Lsling2, LM_L_LC1_Lsling2, LM_L_LCR2_Lsling2, LM_L_LH1_Lsling2, LM_L_LH2_Lsling2, LM_L_LLI_Lsling2, LM_GI_gi01_Lsling2, LM_GI_gi02_Lsling2, LM_GI_gi03_Lsling2, LM_GI_gi04_Lsling2, LM_GI_gi07_Lsling2)
Dim BP_Lsling3: BP_Lsling3=Array(BM_Lsling3, LM_F_FL5a_Lsling3, LM_F_FL5b_Lsling3, LM_F_FL5c_Lsling3, LM_F_FL5d_Lsling3, LM_F_FL5e_Lsling3, LM_F_FL5f_Lsling3, LM_F_FL5g_Lsling3, LM_F_FL5h_Lsling3, LM_L_LC1_Lsling3, LM_L_LCR2_Lsling3, LM_L_LH1_Lsling3, LM_L_LH2_Lsling3, LM_L_LLI_Lsling3, LM_GI_gi01_Lsling3, LM_GI_gi02_Lsling3, LM_GI_gi03_Lsling3, LM_GI_gi04_Lsling3, LM_GI_gi07_Lsling3, LM_GI_gi08_Lsling3)
Dim BP_Parts: BP_Parts=Array(BM_Parts, LM_L_LShip_Parts, LM_F_FL1_Parts, LM_F_FL2_Parts, LM_F_FL3_Parts, LM_F_FL4_Parts, LM_F_FL5a_Parts, LM_F_FL5b_Parts, LM_F_FL5c_Parts, LM_F_FL5d_Parts, LM_F_FL5e_Parts, LM_F_FL5f_Parts, LM_F_FL5g_Parts, LM_F_FL5h_Parts, LM_F_FL6a_Parts, LM_F_FL6b_Parts, LM_F_FL6c_Parts, LM_F_FL6d_Parts, LM_F_FL6e_Parts, LM_F_FL6f_Parts, LM_F_FL6g_Parts, LM_F_FL6h_Parts, LM_F_FL7a_Parts, LM_L_LB1_Parts, LM_L_LB2_Parts, LM_L_LB3_Parts, LM_L_LC1_Parts, LM_L_LC8_Parts, LM_L_LCC1_Parts, LM_L_LCC2_Parts, LM_L_LCC3_Parts, LM_L_LCR1_Parts, LM_L_LCR2_Parts, LM_L_LCWiz_Parts, LM_L_LDP_Parts, LM_L_LDS_Parts, LM_L_LEBR_Parts, LM_L_LF1_Parts, LM_L_LF2_Parts, LM_L_LF3_Parts, LM_L_LH1_Parts, LM_L_LH2_Parts, LM_L_LH3_Parts, LM_L_LH5_Parts, LM_L_LH9_Parts, LM_L_LL_Parts, LM_L_LLI_Parts, LM_L_LLO_Parts, LM_L_LLWiz_Parts, LM_L_LM1_Parts, LM_L_LM2_Parts, LM_L_LM4_Parts, LM_L_LM5_Parts, LM_L_LMLR_Parts, LM_L_LMR1_Parts, LM_L_LMR2_Parts, LM_L_LMR_Parts, LM_L_LMet1_Parts, LM_L_LMet2_Parts, LM_L_LMet3_Parts, _
  LM_L_LMet4_Parts, LM_L_LPC1_Parts, LM_L_LPC2_Parts, LM_L_LPC3_Parts, LM_L_LPC4_Parts, LM_L_LPC5_Parts, LM_L_LPF_Parts, LM_L_LPR1_Parts, LM_L_LPR2_Parts, LM_L_LPR3_Parts, LM_L_LPR4_Parts, LM_L_LPR6_Parts, LM_L_LRI_Parts, LM_L_LRO_Parts, LM_L_LS1_Parts, LM_L_LS2_Parts, LM_L_LS3_Parts, LM_L_LS4_Parts, LM_L_LS5_Parts, LM_L_LS6_Parts, LM_L_LSC1_Parts, LM_L_LSC2_Parts, LM_L_LSC3_Parts, LM_L_LSL_Parts, LM_L_LSR_Parts, LM_Stars_Parts, LM_L_LSwC1_Parts, LM_L_LSwC2_Parts, LM_L_LSwC3_Parts, LM_L_LTW1_Parts, LM_L_LTW2_Parts, LM_L_LW1_Parts, LM_L_LW2_Parts, LM_L_LW3_Parts, LM_L_LW4_Parts, LM_L_LW5_Parts, LM_L_LW6_Parts, LM_L_LW7_Parts, LM_L_LW8_Parts, LM_L_LW9_Parts, LM_L_LWiz_Parts, LM_L_LX_Parts, LM_L_Lspot1_Parts, LM_GI_gi01_Parts, LM_GI_gi02_Parts, LM_GI_gi03_Parts, LM_GI_gi04_Parts, LM_GI_gi05_Parts, LM_GI_gi06_Parts, LM_GI_gi07_Parts, LM_GI_gi08_Parts, LM_GI_gi09_Parts, LM_GI_gi10_Parts, LM_GI_gi11_Parts, LM_GI_gi12_Parts, LM_GI_gi13_Parts, LM_GI_gi14_Parts, LM_GI_gi15_Parts, LM_GI_gi16_Parts, LM_GI_gi17_Parts, _
  LM_GI_gi18_Parts, LM_GI_gi19_Parts, LM_GI_gi20_Parts, LM_GI_gi21_Parts, LM_GI_gi22_Parts, LM_GI_giapron_Parts)
Dim BP_Playfield: BP_Playfield=Array(BM_Playfield, LM_F_FL1_Playfield, LM_F_FL2_Playfield, LM_F_FL3_Playfield, LM_F_FL4_Playfield, LM_F_FL5a_Playfield, LM_F_FL5b_Playfield, LM_F_FL5c_Playfield, LM_F_FL5d_Playfield, LM_F_FL5e_Playfield, LM_F_FL5f_Playfield, LM_F_FL5g_Playfield, LM_F_FL5h_Playfield, LM_F_FL6a_Playfield, LM_F_FL6b_Playfield, LM_F_FL6c_Playfield, LM_F_FL6d_Playfield, LM_F_FL6e_Playfield, LM_F_FL6f_Playfield, LM_F_FL6g_Playfield, LM_F_FL6h_Playfield, LM_F_FL7a_Playfield, LM_L_LB1_Playfield, LM_L_LB2_Playfield, LM_L_LB3_Playfield, LM_L_LC1_Playfield, LM_L_LC2_Playfield, LM_L_LC3_Playfield, LM_L_LC4_Playfield, LM_L_LC5_Playfield, LM_L_LC6_Playfield, LM_L_LC7_Playfield, LM_L_LC8_Playfield, LM_L_LCC1_Playfield, LM_L_LCC2_Playfield, LM_L_LCC3_Playfield, LM_L_LCR1_Playfield, LM_L_LCR2_Playfield, LM_L_LCWiz_Playfield, LM_L_LDP_Playfield, LM_L_LDS_Playfield, LM_L_LEBR_Playfield, LM_L_LF1_Playfield, LM_L_LF2_Playfield, LM_L_LF3_Playfield, LM_L_LH1_Playfield, LM_L_LH2_Playfield, LM_L_LH3_Playfield, _
  LM_L_LH4_Playfield, LM_L_LH5_Playfield, LM_L_LH6_Playfield, LM_L_LH7_Playfield, LM_L_LH8_Playfield, LM_L_LH9_Playfield, LM_L_LL_Playfield, LM_L_LLI_Playfield, LM_L_LLO_Playfield, LM_L_LLWiz_Playfield, LM_L_LM1_Playfield, LM_L_LM2_Playfield, LM_L_LM3_Playfield, LM_L_LM4_Playfield, LM_L_LM5_Playfield, LM_L_LMLR_Playfield, LM_L_LMR1_Playfield, LM_L_LMR2_Playfield, LM_L_LMR_Playfield, LM_L_LMet1_Playfield, LM_L_LMet2_Playfield, LM_L_LMet3_Playfield, LM_L_LMet4_Playfield, LM_L_LPC1_Playfield, LM_L_LPC2_Playfield, LM_L_LPC3_Playfield, LM_L_LPC4_Playfield, LM_L_LPC5_Playfield, LM_L_LPF_Playfield, LM_L_LPR1_Playfield, LM_L_LPR2_Playfield, LM_L_LPR3_Playfield, LM_L_LPR4_Playfield, LM_L_LPR5_Playfield, LM_L_LPR6_Playfield, LM_L_LRI_Playfield, LM_L_LRO_Playfield, LM_L_LS1_Playfield, LM_L_LS2_Playfield, LM_L_LS3_Playfield, LM_L_LS4_Playfield, LM_L_LS5_Playfield, LM_L_LS6_Playfield, LM_L_LSA_Playfield, LM_L_LSC1_Playfield, LM_L_LSC2_Playfield, LM_L_LSC3_Playfield, LM_L_LSL_Playfield, LM_L_LSR_Playfield, _
  LM_L_LSwC1_Playfield, LM_L_LSwC2_Playfield, LM_L_LSwC3_Playfield, LM_L_LTW1_Playfield, LM_L_LTW2_Playfield, LM_L_LW1_Playfield, LM_L_LW2_Playfield, LM_L_LW3_Playfield, LM_L_LW4_Playfield, LM_L_LW5_Playfield, LM_L_LW6_Playfield, LM_L_LW7_Playfield, LM_L_LW8_Playfield, LM_L_LW9_Playfield, LM_L_LWiz_Playfield, LM_L_LX_Playfield, LM_L_Lspot1_Playfield, LM_GI_gi01_Playfield, LM_GI_gi02_Playfield, LM_GI_gi03_Playfield, LM_GI_gi04_Playfield, LM_GI_gi05_Playfield, LM_GI_gi06_Playfield, LM_GI_gi07_Playfield, LM_GI_gi08_Playfield, LM_GI_gi09_Playfield, LM_GI_gi10_Playfield, LM_GI_gi11_Playfield, LM_GI_gi12_Playfield, LM_GI_gi13_Playfield, LM_GI_gi14_Playfield, LM_GI_gi15_Playfield, LM_GI_gi16_Playfield, LM_GI_gi17_Playfield, LM_GI_gi18_Playfield, LM_GI_gi19_Playfield, LM_GI_gi20_Playfield, LM_GI_gi21_Playfield, LM_GI_gi22_Playfield, LM_GI_giapron_Playfield)
Dim BP_RArm: BP_RArm=Array(BM_RArm, LM_F_FL6a_RArm, LM_F_FL6b_RArm, LM_F_FL6c_RArm, LM_F_FL6d_RArm, LM_F_FL6e_RArm, LM_F_FL6f_RArm, LM_F_FL6g_RArm, LM_F_FL6h_RArm, LM_L_LMR1_RArm, LM_L_LRI_RArm, LM_GI_gi01_RArm, LM_GI_gi02_RArm, LM_GI_gi05_RArm, LM_GI_gi06_RArm, LM_GI_gi07_RArm, LM_GI_gi08_RArm, LM_GI_gi09_RArm, LM_GI_gi10_RArm)
Dim BP_RFlip: BP_RFlip=Array(BM_RFlip, LM_F_FL5a_RFlip, LM_F_FL6a_RFlip, LM_F_FL6b_RFlip, LM_F_FL6c_RFlip, LM_F_FL6d_RFlip, LM_F_FL6e_RFlip, LM_F_FL6f_RFlip, LM_F_FL6h_RFlip, LM_L_LC5_RFlip, LM_L_LC6_RFlip, LM_L_LC7_RFlip, LM_L_LC8_RFlip, LM_L_LH5_RFlip, LM_L_LH6_RFlip, LM_L_LH7_RFlip, LM_L_LH8_RFlip, LM_L_LH9_RFlip, LM_L_LSA_RFlip, LM_GI_gi01_RFlip, LM_GI_gi02_RFlip, LM_GI_gi03_RFlip, LM_GI_gi05_RFlip, LM_GI_gi06_RFlip, LM_GI_gi07_RFlip, LM_GI_gi08_RFlip, LM_GI_giapron_RFlip)
Dim BP_RFlip1: BP_RFlip1=Array(BM_RFlip1, LM_F_FL1_RFlip1, LM_F_FL4_RFlip1, LM_L_LDS_RFlip1, LM_L_LS6_RFlip1, LM_GI_gi13_RFlip1, LM_GI_gi14_RFlip1, LM_GI_gi15_RFlip1, LM_GI_gi19_RFlip1)
Dim BP_RFlip1U: BP_RFlip1U=Array(BM_RFlip1U, LM_F_FL1_RFlip1U, LM_F_FL4_RFlip1U, LM_L_LDS_RFlip1U, LM_L_LS5_RFlip1U, LM_L_LS6_RFlip1U, LM_GI_gi10_RFlip1U, LM_GI_gi13_RFlip1U, LM_GI_gi14_RFlip1U, LM_GI_gi15_RFlip1U, LM_GI_gi19_RFlip1U)
Dim BP_RFlipU: BP_RFlipU=Array(BM_RFlipU, LM_F_FL5a_RFlipU, LM_F_FL5b_RFlipU, LM_F_FL5h_RFlipU, LM_F_FL6a_RFlipU, LM_F_FL6b_RFlipU, LM_F_FL6c_RFlipU, LM_F_FL6d_RFlipU, LM_F_FL6e_RFlipU, LM_F_FL6f_RFlipU, LM_F_FL6g_RFlipU, LM_F_FL6h_RFlipU, LM_L_LC3_RFlipU, LM_L_LC4_RFlipU, LM_L_LC5_RFlipU, LM_L_LC6_RFlipU, LM_L_LC7_RFlipU, LM_L_LC8_RFlipU, LM_L_LH4_RFlipU, LM_L_LH5_RFlipU, LM_L_LH6_RFlipU, LM_L_LH7_RFlipU, LM_L_LH8_RFlipU, LM_L_LH9_RFlipU, LM_L_LPR5_RFlipU, LM_L_LPR6_RFlipU, LM_L_LSA_RFlipU, LM_GI_gi01_RFlipU, LM_GI_gi02_RFlipU, LM_GI_gi03_RFlipU, LM_GI_gi05_RFlipU, LM_GI_gi06_RFlipU, LM_GI_gi07_RFlipU, LM_GI_gi08_RFlipU, LM_GI_giapron_RFlipU)
Dim BP_Rails: BP_Rails=Array(BM_Rails)
Dim BP_Ramp: BP_Ramp=Array(BM_Ramp, LM_F_FL2_Ramp, LM_F_FL3_Ramp, LM_F_FL4_Ramp, LM_F_FL7a_Ramp, LM_L_LCC1_Ramp, LM_L_LPC1_Ramp, LM_L_LPC4_Ramp, LM_Stars_Ramp, LM_L_LTW1_Ramp, LM_L_Lspot1_Ramp, LM_GI_gi16_Ramp, LM_GI_gi20_Ramp, LM_GI_gi21_Ramp)
Dim BP_Rsling1: BP_Rsling1=Array(BM_Rsling1, LM_F_FL6a_Rsling1, LM_F_FL6b_Rsling1, LM_F_FL6c_Rsling1, LM_F_FL6d_Rsling1, LM_F_FL6e_Rsling1, LM_F_FL6f_Rsling1, LM_F_FL6g_Rsling1, LM_F_FL6h_Rsling1, LM_L_LC8_Rsling1, LM_L_LH8_Rsling1, LM_L_LH9_Rsling1, LM_L_LMR2_Rsling1, LM_L_LRI_Rsling1, LM_GI_gi01_Rsling1, LM_GI_gi05_Rsling1, LM_GI_gi06_Rsling1, LM_GI_gi07_Rsling1, LM_GI_gi08_Rsling1, LM_GI_giapron_Rsling1)
Dim BP_Rsling2: BP_Rsling2=Array(BM_Rsling2, LM_F_FL6a_Rsling2, LM_F_FL6b_Rsling2, LM_F_FL6c_Rsling2, LM_F_FL6d_Rsling2, LM_F_FL6e_Rsling2, LM_F_FL6f_Rsling2, LM_F_FL6g_Rsling2, LM_F_FL6h_Rsling2, LM_L_LC8_Rsling2, LM_L_LH8_Rsling2, LM_L_LH9_Rsling2, LM_L_LMR2_Rsling2, LM_L_LRI_Rsling2, LM_GI_gi03_Rsling2, LM_GI_gi05_Rsling2, LM_GI_gi06_Rsling2, LM_GI_gi07_Rsling2, LM_GI_gi08_Rsling2, LM_GI_giapron_Rsling2)
Dim BP_Rsling3: BP_Rsling3=Array(BM_Rsling3, LM_F_FL6a_Rsling3, LM_F_FL6b_Rsling3, LM_F_FL6c_Rsling3, LM_F_FL6d_Rsling3, LM_F_FL6e_Rsling3, LM_F_FL6f_Rsling3, LM_F_FL6g_Rsling3, LM_F_FL6h_Rsling3, LM_L_LC8_Rsling3, LM_L_LH8_Rsling3, LM_L_LH9_Rsling3, LM_L_LMR1_Rsling3, LM_L_LMR2_Rsling3, LM_L_LRI_Rsling3, LM_GI_gi01_Rsling3, LM_GI_gi02_Rsling3, LM_GI_gi03_Rsling3, LM_GI_gi04_Rsling3, LM_GI_gi05_Rsling3, LM_GI_gi06_Rsling3, LM_GI_gi07_Rsling3, LM_GI_gi08_Rsling3, LM_GI_giapron_Rsling3)
Dim BP_Screen: BP_Screen=Array(BM_Screen, LM_GI_giapron_Screen)
Dim BP_Ship: BP_Ship=Array(BM_Ship, LM_L_LShip_Ship, LM_F_FL7a_Ship, LM_L_LB1_Ship)
Dim BP_Spin: BP_Spin=Array(BM_Spin, LM_F_FL2_Spin, LM_F_FL3_Spin, LM_F_FL4_Spin, LM_F_FL7a_Spin, LM_L_Lspot1_Spin, LM_GI_gi20_Spin, LM_GI_gi21_Spin)
Dim BP_SpinU: BP_SpinU=Array(BM_SpinU, LM_F_FL2_SpinU, LM_F_FL3_SpinU, LM_F_FL4_SpinU, LM_F_FL7a_SpinU, LM_L_Lspot1_SpinU, LM_GI_gi20_SpinU, LM_GI_gi21_SpinU)
Dim BP_SpinWire: BP_SpinWire=Array(BM_SpinWire, LM_F_FL2_SpinWire, LM_F_FL7a_SpinWire, LM_L_Lspot1_SpinWire, LM_GI_gi20_SpinWire, LM_GI_gi21_SpinWire)
Dim BP_TM1: BP_TM1=Array(BM_TM1, LM_L_LB1_TM1, LM_L_LM1_TM1, LM_L_LS1_TM1)
Dim BP_TM2: BP_TM2=Array(BM_TM2, LM_F_FL3_TM2, LM_F_FL4_TM2, LM_F_FL7a_TM2, LM_L_LM2_TM2, LM_L_LPC1_TM2, LM_L_LPC2_TM2, LM_GI_gi20_TM2)
Dim BP_TM3: BP_TM3=Array(BM_TM3, LM_F_FL2_TM3, LM_F_FL3_TM3, LM_F_FL4_TM3, LM_F_FL7a_TM3, LM_L_LM3_TM3, LM_L_LPC4_TM3, LM_L_LPC5_TM3, LM_L_LPF_TM3, LM_L_LSwC2_TM3, LM_L_Lspot1_TM3)
Dim BP_TM4: BP_TM4=Array(BM_TM4, LM_F_FL1_TM4, LM_F_FL4_TM4, LM_F_FL7a_TM4, LM_L_LB3_TM4, LM_L_LM4_TM4, LM_L_LPC5_TM4, LM_L_LX_TM4, LM_L_Lspot1_TM4, LM_GI_gi13_TM4, LM_GI_gi22_TM4)
Dim BP_TM5: BP_TM5=Array(BM_TM5, LM_F_FL1_TM5, LM_L_LF2_TM5, LM_L_LF3_TM5, LM_L_LM5_TM5, LM_GI_gi13_TM5)
Dim BP_TMet1: BP_TMet1=Array(BM_TMet1, LM_L_LMet1_TMet1)
Dim BP_TMet2: BP_TMet2=Array(BM_TMet2, LM_L_LMet2_TMet2)
Dim BP_TMet3: BP_TMet3=Array(BM_TMet3, LM_L_LMet3_TMet3)
Dim BP_TMet4: BP_TMet4=Array(BM_TMet4, LM_L_LMet4_TMet4)
Dim BP_TS1: BP_TS1=Array(BM_TS1, LM_L_LSC1_TS1, LM_L_LSC2_TS1, LM_GI_gi10_TS1)
Dim BP_TS2: BP_TS2=Array(BM_TS2, LM_L_LSC1_TS2, LM_L_LSC2_TS2, LM_GI_gi10_TS2)
Dim BP_TS3: BP_TS3=Array(BM_TS3, LM_L_LSC2_TS3, LM_L_LSC3_TS3, LM_GI_gi10_TS3)
Dim BP_TrustPost: BP_TrustPost=Array(BM_TrustPost, LM_L_LSA_TrustPost, LM_GI_giapron_TrustPost)
Dim BP_UnderPF: BP_UnderPF=Array(BM_UnderPF, LM_F_FL1_UnderPF, LM_F_FL3_UnderPF, LM_F_FL4_UnderPF, LM_F_FL5a_UnderPF, LM_F_FL5b_UnderPF, LM_F_FL5c_UnderPF, LM_F_FL5d_UnderPF, LM_F_FL5e_UnderPF, LM_F_FL5f_UnderPF, LM_F_FL5g_UnderPF, LM_F_FL5h_UnderPF, LM_F_FL7a_UnderPF, LM_L_LB2_UnderPF, LM_L_LB3_UnderPF, LM_L_LC1_UnderPF, LM_L_LC2_UnderPF, LM_L_LC3_UnderPF, LM_L_LC4_UnderPF, LM_L_LC5_UnderPF, LM_L_LC6_UnderPF, LM_L_LC7_UnderPF, LM_L_LC8_UnderPF, LM_L_LCC1_UnderPF, LM_L_LCC2_UnderPF, LM_L_LCC3_UnderPF, LM_L_LCR1_UnderPF, LM_L_LCR2_UnderPF, LM_L_LCWiz_UnderPF, LM_L_LDP_UnderPF, LM_L_LDS_UnderPF, LM_L_LEBR_UnderPF, LM_L_LF1_UnderPF, LM_L_LF2_UnderPF, LM_L_LF3_UnderPF, LM_L_LH1_UnderPF, LM_L_LH2_UnderPF, LM_L_LH3_UnderPF, LM_L_LH4_UnderPF, LM_L_LH5_UnderPF, LM_L_LH6_UnderPF, LM_L_LH7_UnderPF, LM_L_LH8_UnderPF, LM_L_LH9_UnderPF, LM_L_LL_UnderPF, LM_L_LLI_UnderPF, LM_L_LLO_UnderPF, LM_L_LLWiz_UnderPF, LM_L_LM1_UnderPF, LM_L_LM2_UnderPF, LM_L_LM3_UnderPF, LM_L_LM4_UnderPF, LM_L_LM5_UnderPF, LM_L_LMLR_UnderPF, _
  LM_L_LMR1_UnderPF, LM_L_LMR2_UnderPF, LM_L_LMR_UnderPF, LM_L_LMet1_UnderPF, LM_L_LMet2_UnderPF, LM_L_LMet3_UnderPF, LM_L_LMet4_UnderPF, LM_L_LPC1_UnderPF, LM_L_LPC2_UnderPF, LM_L_LPC3_UnderPF, LM_L_LPC4_UnderPF, LM_L_LPC5_UnderPF, LM_L_LPF_UnderPF, LM_L_LPR1_UnderPF, LM_L_LPR2_UnderPF, LM_L_LPR3_UnderPF, LM_L_LPR4_UnderPF, LM_L_LPR5_UnderPF, LM_L_LPR6_UnderPF, LM_L_LRI_UnderPF, LM_L_LRO_UnderPF, LM_L_LS1_UnderPF, LM_L_LS2_UnderPF, LM_L_LS3_UnderPF, LM_L_LS4_UnderPF, LM_L_LS5_UnderPF, LM_L_LS6_UnderPF, LM_L_LSA_UnderPF, LM_L_LSC1_UnderPF, LM_L_LSC2_UnderPF, LM_L_LSC3_UnderPF, LM_L_LSL_UnderPF, LM_L_LSR_UnderPF, LM_L_LSwC1_UnderPF, LM_L_LSwC2_UnderPF, LM_L_LSwC3_UnderPF, LM_L_LTW1_UnderPF, LM_L_LTW2_UnderPF, LM_L_LW1_UnderPF, LM_L_LW2_UnderPF, LM_L_LW3_UnderPF, LM_L_LW4_UnderPF, LM_L_LW5_UnderPF, LM_L_LW6_UnderPF, LM_L_LW7_UnderPF, LM_L_LW8_UnderPF, LM_L_LW9_UnderPF, LM_L_LWiz_UnderPF, LM_L_LX_UnderPF, LM_L_Lspot1_UnderPF, LM_GI_gi01_UnderPF, LM_GI_gi02_UnderPF, LM_GI_gi04_UnderPF, LM_GI_gi05_UnderPF, _
  LM_GI_gi08_UnderPF, LM_GI_gi10_UnderPF, LM_GI_gi13_UnderPF, LM_GI_gi15_UnderPF, LM_GI_gi19_UnderPF, LM_GI_gi20_UnderPF, LM_GI_gi22_UnderPF, LM_GI_giapron_UnderPF)
Dim BP_swC1: BP_swC1=Array(BM_swC1, LM_F_FL2_swC1, LM_F_FL3_swC1, LM_F_FL4_swC1, LM_F_FL7a_swC1, LM_L_LPC4_swC1, LM_L_LSwC1_swC1, LM_L_LSwC2_swC1, LM_L_Lspot1_swC1)
Dim BP_swC2: BP_swC2=Array(BM_swC2, LM_F_FL3_swC2, LM_F_FL4_swC2, LM_F_FL7a_swC2, LM_L_LSwC1_swC2, LM_L_LSwC2_swC2, LM_L_LSwC3_swC2, LM_L_Lspot1_swC2)
Dim BP_swC3: BP_swC3=Array(BM_swC3, LM_F_FL1_swC3, LM_F_FL3_swC3, LM_F_FL4_swC3, LM_F_FL7a_swC3, LM_L_LB3_swC3, LM_L_LPC5_swC3, LM_L_LSwC3_swC3, LM_L_Lspot1_swC3, LM_GI_gi22_swC3)
Dim BP_swI1: BP_swI1=Array(BM_swI1, LM_F_FL2_swI1, LM_F_FL3_swI1, LM_F_FL7a_swI1, LM_GI_gi20_swI1)
Dim BP_swI2: BP_swI2=Array(BM_swI2, LM_F_FL2_swI2, LM_F_FL3_swI2, LM_F_FL7a_swI2, LM_L_LB3_swI2, LM_L_Lspot1_swI2)
Dim BP_swL1: BP_swL1=Array(BM_swL1, LM_F_FL7a_swL1, LM_L_LCC1_swL1, LM_GI_gi20_swL1, LM_GI_gi21_swL1)
Dim BP_swL2: BP_swL2=Array(BM_swL2, LM_F_FL2_swL2, LM_F_FL3_swL2, LM_GI_gi20_swL2, LM_GI_gi21_swL2)
Dim BP_swLB: BP_swLB=Array(BM_swLB, LM_L_LB1_swLB)
Dim BP_swLI: BP_swLI=Array(BM_swLI, LM_F_FL5h_swLI, LM_L_LLI_swLI, LM_GI_gi01_swLI, LM_GI_gi02_swLI, LM_GI_gi03_swLI, LM_GI_gi04_swLI, LM_GI_gi09_swLI)
Dim BP_swLO: BP_swLO=Array(BM_swLO, LM_F_FL5a_swLO, LM_F_FL5g_swLO, LM_F_FL5h_swLO, LM_L_LLI_swLO, LM_L_LLO_swLO, LM_GI_gi01_swLO, LM_GI_gi02_swLO, LM_GI_gi04_swLO)
Dim BP_swP1: BP_swP1=Array(BM_swP1, LM_GI_giapron_swP1)
Dim BP_swP2: BP_swP2=Array(BM_swP2)
Dim BP_swR1: BP_swR1=Array(BM_swR1, LM_F_FL1_swR1, LM_F_FL3_swR1, LM_F_FL7a_swR1, LM_L_LF1_swR1, LM_GI_gi13_swR1, LM_GI_gi15_swR1)
Dim BP_swR2: BP_swR2=Array(BM_swR2, LM_F_FL1_swR2, LM_F_FL2_swR2, LM_L_LB2_swR2, LM_GI_gi22_swR2)
Dim BP_swRI: BP_swRI=Array(BM_swRI, LM_L_LRI_swRI, LM_GI_gi05_swRI, LM_GI_gi06_swRI, LM_GI_gi07_swRI, LM_GI_gi08_swRI)
Dim BP_swRO: BP_swRO=Array(BM_swRO, LM_L_LRO_swRO, LM_GI_gi05_swRO, LM_GI_gi06_swRO, LM_GI_gi08_swRO, LM_GI_gi10_swRO)
' ' Arrays per lighting scenario
' Dim BL_F_FL1: BL_F_FL1=Array(LM_F_FL1_Asteroid1, LM_F_FL1_Asteroid2, LM_F_FL1_Asteroid3, LM_F_FL1_Asteroid4, LM_F_FL1_BR2, LM_F_FL1_BR3, LM_F_FL1_BS2, LM_F_FL1_BS3, LM_F_FL1_BmpBot, LM_F_FL1_LockPin, LM_F_FL1_Parts, LM_F_FL1_Playfield, LM_F_FL1_RFlip1, LM_F_FL1_RFlip1U, LM_F_FL1_TM4, LM_F_FL1_TM5, LM_F_FL1_UnderPF, LM_F_FL1_swC3, LM_F_FL1_swR1, LM_F_FL1_swR2)
' Dim BL_F_FL2: BL_F_FL2=Array(LM_F_FL2_Asteroid1, LM_F_FL2_Asteroid2, LM_F_FL2_Asteroid3, LM_F_FL2_Asteroid4, LM_F_FL2_BS2, LM_F_FL2_BS3, LM_F_FL2_BmpBot, LM_F_FL2_GateL, LM_F_FL2_Parts, LM_F_FL2_Playfield, LM_F_FL2_Ramp, LM_F_FL2_Spin, LM_F_FL2_SpinU, LM_F_FL2_SpinWire, LM_F_FL2_TM3, LM_F_FL2_swC1, LM_F_FL2_swI1, LM_F_FL2_swI2, LM_F_FL2_swL2, LM_F_FL2_swR2)
' Dim BL_F_FL3: BL_F_FL3=Array(LM_F_FL3_Asteroid1, LM_F_FL3_Asteroid2, LM_F_FL3_Asteroid3, LM_F_FL3_Asteroid4, LM_F_FL3_BR2, LM_F_FL3_BR3, LM_F_FL3_BS2, LM_F_FL3_BS3, LM_F_FL3_BmpBot, LM_F_FL3_DiverterPin, LM_F_FL3_Parts, LM_F_FL3_Playfield, LM_F_FL3_Ramp, LM_F_FL3_Spin, LM_F_FL3_SpinU, LM_F_FL3_TM2, LM_F_FL3_TM3, LM_F_FL3_UnderPF, LM_F_FL3_swC1, LM_F_FL3_swC2, LM_F_FL3_swC3, LM_F_FL3_swI1, LM_F_FL3_swI2, LM_F_FL3_swL2, LM_F_FL3_swR1)
' Dim BL_F_FL4: BL_F_FL4=Array(LM_F_FL4_Asteroid1, LM_F_FL4_Asteroid2, LM_F_FL4_Asteroid3, LM_F_FL4_Asteroid4, LM_F_FL4_BS3, LM_F_FL4_BmpBot, LM_F_FL4_Layer1, LM_F_FL4_Parts, LM_F_FL4_Playfield, LM_F_FL4_RFlip1, LM_F_FL4_RFlip1U, LM_F_FL4_Ramp, LM_F_FL4_Spin, LM_F_FL4_SpinU, LM_F_FL4_TM2, LM_F_FL4_TM3, LM_F_FL4_TM4, LM_F_FL4_UnderPF, LM_F_FL4_swC1, LM_F_FL4_swC2, LM_F_FL4_swC3)
' Dim BL_F_FL5a: BL_F_FL5a=Array(LM_F_FL5a_LArm, LM_F_FL5a_LFlip, LM_F_FL5a_LFlipU, LM_F_FL5a_Lsling1, LM_F_FL5a_Lsling2, LM_F_FL5a_Lsling3, LM_F_FL5a_Parts, LM_F_FL5a_Playfield, LM_F_FL5a_RFlip, LM_F_FL5a_RFlipU, LM_F_FL5a_UnderPF, LM_F_FL5a_swLO)
' Dim BL_F_FL5b: BL_F_FL5b=Array(LM_F_FL5b_BR1, LM_F_FL5b_LArm, LM_F_FL5b_LFlip, LM_F_FL5b_LFlipU, LM_F_FL5b_Lsling1, LM_F_FL5b_Lsling2, LM_F_FL5b_Lsling3, LM_F_FL5b_Parts, LM_F_FL5b_Playfield, LM_F_FL5b_RFlipU, LM_F_FL5b_UnderPF)
' Dim BL_F_FL5c: BL_F_FL5c=Array(LM_F_FL5c_LArm, LM_F_FL5c_LFlip, LM_F_FL5c_LFlipU, LM_F_FL5c_Lsling1, LM_F_FL5c_Lsling2, LM_F_FL5c_Lsling3, LM_F_FL5c_Parts, LM_F_FL5c_Playfield, LM_F_FL5c_UnderPF)
' Dim BL_F_FL5d: BL_F_FL5d=Array(LM_F_FL5d_LArm, LM_F_FL5d_LFlip, LM_F_FL5d_LFlipU, LM_F_FL5d_Lsling1, LM_F_FL5d_Lsling2, LM_F_FL5d_Lsling3, LM_F_FL5d_Parts, LM_F_FL5d_Playfield, LM_F_FL5d_UnderPF)
' Dim BL_F_FL5e: BL_F_FL5e=Array(LM_F_FL5e_BR1, LM_F_FL5e_LArm, LM_F_FL5e_LFlip, LM_F_FL5e_LFlipU, LM_F_FL5e_Lsling1, LM_F_FL5e_Lsling2, LM_F_FL5e_Lsling3, LM_F_FL5e_Parts, LM_F_FL5e_Playfield, LM_F_FL5e_UnderPF)
' Dim BL_F_FL5f: BL_F_FL5f=Array(LM_F_FL5f_LArm, LM_F_FL5f_LFlip, LM_F_FL5f_LFlipU, LM_F_FL5f_Lsling1, LM_F_FL5f_Lsling2, LM_F_FL5f_Lsling3, LM_F_FL5f_Parts, LM_F_FL5f_Playfield, LM_F_FL5f_UnderPF)
' Dim BL_F_FL5g: BL_F_FL5g=Array(LM_F_FL5g_LArm, LM_F_FL5g_LFlip, LM_F_FL5g_LFlipU, LM_F_FL5g_Lsling1, LM_F_FL5g_Lsling2, LM_F_FL5g_Lsling3, LM_F_FL5g_Parts, LM_F_FL5g_Playfield, LM_F_FL5g_UnderPF, LM_F_FL5g_swLO)
' Dim BL_F_FL5h: BL_F_FL5h=Array(LM_F_FL5h_LArm, LM_F_FL5h_LFlip, LM_F_FL5h_LFlipU, LM_F_FL5h_Lsling1, LM_F_FL5h_Lsling2, LM_F_FL5h_Lsling3, LM_F_FL5h_Parts, LM_F_FL5h_Playfield, LM_F_FL5h_RFlipU, LM_F_FL5h_UnderPF, LM_F_FL5h_swLI, LM_F_FL5h_swLO)
' Dim BL_F_FL6a: BL_F_FL6a=Array(LM_F_FL6a_LFlip, LM_F_FL6a_LFlipU, LM_F_FL6a_Parts, LM_F_FL6a_Playfield, LM_F_FL6a_RArm, LM_F_FL6a_RFlip, LM_F_FL6a_RFlipU, LM_F_FL6a_Rsling1, LM_F_FL6a_Rsling2, LM_F_FL6a_Rsling3)
' Dim BL_F_FL6b: BL_F_FL6b=Array(LM_F_FL6b_LFlip, LM_F_FL6b_LFlipU, LM_F_FL6b_Parts, LM_F_FL6b_Playfield, LM_F_FL6b_RArm, LM_F_FL6b_RFlip, LM_F_FL6b_RFlipU, LM_F_FL6b_Rsling1, LM_F_FL6b_Rsling2, LM_F_FL6b_Rsling3)
' Dim BL_F_FL6c: BL_F_FL6c=Array(LM_F_FL6c_Parts, LM_F_FL6c_Playfield, LM_F_FL6c_RArm, LM_F_FL6c_RFlip, LM_F_FL6c_RFlipU, LM_F_FL6c_Rsling1, LM_F_FL6c_Rsling2, LM_F_FL6c_Rsling3)
' Dim BL_F_FL6d: BL_F_FL6d=Array(LM_F_FL6d_Parts, LM_F_FL6d_Playfield, LM_F_FL6d_RArm, LM_F_FL6d_RFlip, LM_F_FL6d_RFlipU, LM_F_FL6d_Rsling1, LM_F_FL6d_Rsling2, LM_F_FL6d_Rsling3)
' Dim BL_F_FL6e: BL_F_FL6e=Array(LM_F_FL6e_Parts, LM_F_FL6e_Playfield, LM_F_FL6e_RArm, LM_F_FL6e_RFlip, LM_F_FL6e_RFlipU, LM_F_FL6e_Rsling1, LM_F_FL6e_Rsling2, LM_F_FL6e_Rsling3)
' Dim BL_F_FL6f: BL_F_FL6f=Array(LM_F_FL6f_Parts, LM_F_FL6f_Playfield, LM_F_FL6f_RArm, LM_F_FL6f_RFlip, LM_F_FL6f_RFlipU, LM_F_FL6f_Rsling1, LM_F_FL6f_Rsling2, LM_F_FL6f_Rsling3)
' Dim BL_F_FL6g: BL_F_FL6g=Array(LM_F_FL6g_LFlipU, LM_F_FL6g_Parts, LM_F_FL6g_Playfield, LM_F_FL6g_RArm, LM_F_FL6g_RFlipU, LM_F_FL6g_Rsling1, LM_F_FL6g_Rsling2, LM_F_FL6g_Rsling3)
' Dim BL_F_FL6h: BL_F_FL6h=Array(LM_F_FL6h_Parts, LM_F_FL6h_Playfield, LM_F_FL6h_RArm, LM_F_FL6h_RFlip, LM_F_FL6h_RFlipU, LM_F_FL6h_Rsling1, LM_F_FL6h_Rsling2, LM_F_FL6h_Rsling3)
' Dim BL_F_FL7a: BL_F_FL7a=Array(LM_F_FL7a_Asteroid1, LM_F_FL7a_Asteroid2, LM_F_FL7a_Asteroid3, LM_F_FL7a_Asteroid4, LM_F_FL7a_BR2, LM_F_FL7a_BR3, LM_F_FL7a_BS2, LM_F_FL7a_BS3, LM_F_FL7a_BmpBot, LM_F_FL7a_DiverterPin, LM_F_FL7a_GateL, LM_F_FL7a_GateR, LM_F_FL7a_Layer1, LM_F_FL7a_Parts, LM_F_FL7a_Playfield, LM_F_FL7a_Ramp, LM_F_FL7a_Ship, LM_F_FL7a_Spin, LM_F_FL7a_SpinU, LM_F_FL7a_SpinWire, LM_F_FL7a_TM2, LM_F_FL7a_TM3, LM_F_FL7a_TM4, LM_F_FL7a_UnderPF, LM_F_FL7a_swC1, LM_F_FL7a_swC2, LM_F_FL7a_swC3, LM_F_FL7a_swI1, LM_F_FL7a_swI2, LM_F_FL7a_swL1, LM_F_FL7a_swR1)
' Dim BL_GI_gi01: BL_GI_gi01=Array(LM_GI_gi01_LArm, LM_GI_gi01_LFlip, LM_GI_gi01_LFlipU, LM_GI_gi01_Lsling1, LM_GI_gi01_Lsling2, LM_GI_gi01_Lsling3, LM_GI_gi01_Parts, LM_GI_gi01_Playfield, LM_GI_gi01_RArm, LM_GI_gi01_RFlip, LM_GI_gi01_RFlipU, LM_GI_gi01_Rsling1, LM_GI_gi01_Rsling3, LM_GI_gi01_UnderPF, LM_GI_gi01_swLI, LM_GI_gi01_swLO)
' Dim BL_GI_gi02: BL_GI_gi02=Array(LM_GI_gi02_BR1, LM_GI_gi02_LArm, LM_GI_gi02_LFlip, LM_GI_gi02_LFlipU, LM_GI_gi02_Lsling1, LM_GI_gi02_Lsling2, LM_GI_gi02_Lsling3, LM_GI_gi02_Parts, LM_GI_gi02_Playfield, LM_GI_gi02_RArm, LM_GI_gi02_RFlip, LM_GI_gi02_RFlipU, LM_GI_gi02_Rsling3, LM_GI_gi02_UnderPF, LM_GI_gi02_swLI, LM_GI_gi02_swLO)
' Dim BL_GI_gi03: BL_GI_gi03=Array(LM_GI_gi03_LArm, LM_GI_gi03_LFlip, LM_GI_gi03_LFlipU, LM_GI_gi03_Lsling1, LM_GI_gi03_Lsling2, LM_GI_gi03_Lsling3, LM_GI_gi03_Parts, LM_GI_gi03_Playfield, LM_GI_gi03_RFlip, LM_GI_gi03_RFlipU, LM_GI_gi03_Rsling2, LM_GI_gi03_Rsling3, LM_GI_gi03_swLI)
' Dim BL_GI_gi04: BL_GI_gi04=Array(LM_GI_gi04_LArm, LM_GI_gi04_LFlip, LM_GI_gi04_LFlipU, LM_GI_gi04_Lsling1, LM_GI_gi04_Lsling2, LM_GI_gi04_Lsling3, LM_GI_gi04_Parts, LM_GI_gi04_Playfield, LM_GI_gi04_Rsling3, LM_GI_gi04_UnderPF, LM_GI_gi04_swLI, LM_GI_gi04_swLO)
' Dim BL_GI_gi05: BL_GI_gi05=Array(LM_GI_gi05_LFlip, LM_GI_gi05_LFlipU, LM_GI_gi05_Parts, LM_GI_gi05_Playfield, LM_GI_gi05_RArm, LM_GI_gi05_RFlip, LM_GI_gi05_RFlipU, LM_GI_gi05_Rsling1, LM_GI_gi05_Rsling2, LM_GI_gi05_Rsling3, LM_GI_gi05_UnderPF, LM_GI_gi05_swRI, LM_GI_gi05_swRO)
' Dim BL_GI_gi06: BL_GI_gi06=Array(LM_GI_gi06_Parts, LM_GI_gi06_Playfield, LM_GI_gi06_RArm, LM_GI_gi06_RFlip, LM_GI_gi06_RFlipU, LM_GI_gi06_Rsling1, LM_GI_gi06_Rsling2, LM_GI_gi06_Rsling3, LM_GI_gi06_swRI, LM_GI_gi06_swRO)
' Dim BL_GI_gi07: BL_GI_gi07=Array(LM_GI_gi07_LFlip, LM_GI_gi07_LFlipU, LM_GI_gi07_Lsling2, LM_GI_gi07_Lsling3, LM_GI_gi07_Parts, LM_GI_gi07_Playfield, LM_GI_gi07_RArm, LM_GI_gi07_RFlip, LM_GI_gi07_RFlipU, LM_GI_gi07_Rsling1, LM_GI_gi07_Rsling2, LM_GI_gi07_Rsling3, LM_GI_gi07_swRI)
' Dim BL_GI_gi08: BL_GI_gi08=Array(LM_GI_gi08_Lsling3, LM_GI_gi08_Parts, LM_GI_gi08_Playfield, LM_GI_gi08_RArm, LM_GI_gi08_RFlip, LM_GI_gi08_RFlipU, LM_GI_gi08_Rsling1, LM_GI_gi08_Rsling2, LM_GI_gi08_Rsling3, LM_GI_gi08_UnderPF, LM_GI_gi08_swRI, LM_GI_gi08_swRO)
' Dim BL_GI_gi09: BL_GI_gi09=Array(LM_GI_gi09_Parts, LM_GI_gi09_Playfield, LM_GI_gi09_RArm, LM_GI_gi09_swLI)
' Dim BL_GI_gi10: BL_GI_gi10=Array(LM_GI_gi10_Gate2, LM_GI_gi10_Parts, LM_GI_gi10_Playfield, LM_GI_gi10_RArm, LM_GI_gi10_RFlip1U, LM_GI_gi10_TS1, LM_GI_gi10_TS2, LM_GI_gi10_TS3, LM_GI_gi10_UnderPF, LM_GI_gi10_swRO)
' Dim BL_GI_gi11: BL_GI_gi11=Array(LM_GI_gi11_BS1, LM_GI_gi11_Parts, LM_GI_gi11_Playfield)
' Dim BL_GI_gi12: BL_GI_gi12=Array(LM_GI_gi12_BmpBot, LM_GI_gi12_Parts, LM_GI_gi12_Playfield)
' Dim BL_GI_gi13: BL_GI_gi13=Array(LM_GI_gi13_BR2, LM_GI_gi13_BR3, LM_GI_gi13_BS2, LM_GI_gi13_BS3, LM_GI_gi13_BmpBot, LM_GI_gi13_Parts, LM_GI_gi13_Playfield, LM_GI_gi13_RFlip1, LM_GI_gi13_RFlip1U, LM_GI_gi13_TM4, LM_GI_gi13_TM5, LM_GI_gi13_UnderPF, LM_GI_gi13_swR1)
' Dim BL_GI_gi14: BL_GI_gi14=Array(LM_GI_gi14_Gate2, LM_GI_gi14_LockPin, LM_GI_gi14_Parts, LM_GI_gi14_Playfield, LM_GI_gi14_RFlip1, LM_GI_gi14_RFlip1U)
' Dim BL_GI_gi15: BL_GI_gi15=Array(LM_GI_gi15_LockPin, LM_GI_gi15_Parts, LM_GI_gi15_Playfield, LM_GI_gi15_RFlip1, LM_GI_gi15_RFlip1U, LM_GI_gi15_UnderPF, LM_GI_gi15_swR1)
' Dim BL_GI_gi16: BL_GI_gi16=Array(LM_GI_gi16_Parts, LM_GI_gi16_Playfield, LM_GI_gi16_Ramp)
' Dim BL_GI_gi17: BL_GI_gi17=Array(LM_GI_gi17_BS2, LM_GI_gi17_BmpBot, LM_GI_gi17_Parts, LM_GI_gi17_Playfield)
' Dim BL_GI_gi18: BL_GI_gi18=Array(LM_GI_gi18_Parts, LM_GI_gi18_Playfield)
' Dim BL_GI_gi19: BL_GI_gi19=Array(LM_GI_gi19_LockPin, LM_GI_gi19_Parts, LM_GI_gi19_Playfield, LM_GI_gi19_RFlip1, LM_GI_gi19_RFlip1U, LM_GI_gi19_UnderPF)
' Dim BL_GI_gi20: BL_GI_gi20=Array(LM_GI_gi20_Asteroid1, LM_GI_gi20_Asteroid2, LM_GI_gi20_Asteroid3, LM_GI_gi20_Asteroid4, LM_GI_gi20_BS1, LM_GI_gi20_GateL, LM_GI_gi20_Parts, LM_GI_gi20_Playfield, LM_GI_gi20_Ramp, LM_GI_gi20_Spin, LM_GI_gi20_SpinU, LM_GI_gi20_SpinWire, LM_GI_gi20_TM2, LM_GI_gi20_UnderPF, LM_GI_gi20_swI1, LM_GI_gi20_swL1, LM_GI_gi20_swL2)
' Dim BL_GI_gi21: BL_GI_gi21=Array(LM_GI_gi21_Asteroid1, LM_GI_gi21_Asteroid2, LM_GI_gi21_Asteroid3, LM_GI_gi21_Asteroid4, LM_GI_gi21_GateL, LM_GI_gi21_Parts, LM_GI_gi21_Playfield, LM_GI_gi21_Ramp, LM_GI_gi21_Spin, LM_GI_gi21_SpinU, LM_GI_gi21_SpinWire, LM_GI_gi21_swL1, LM_GI_gi21_swL2)
' Dim BL_GI_gi22: BL_GI_gi22=Array(LM_GI_gi22_Asteroid1, LM_GI_gi22_Asteroid2, LM_GI_gi22_Asteroid3, LM_GI_gi22_Asteroid4, LM_GI_gi22_BR2, LM_GI_gi22_BR3, LM_GI_gi22_BS2, LM_GI_gi22_BS3, LM_GI_gi22_BmpBot, LM_GI_gi22_Layer1, LM_GI_gi22_Parts, LM_GI_gi22_Playfield, LM_GI_gi22_TM4, LM_GI_gi22_UnderPF, LM_GI_gi22_swC3, LM_GI_gi22_swR2)
' Dim BL_GI_giapron: BL_GI_giapron=Array(LM_GI_giapron_LFlip, LM_GI_giapron_LFlipU, LM_GI_giapron_Parts, LM_GI_giapron_Playfield, LM_GI_giapron_RFlip, LM_GI_giapron_RFlipU, LM_GI_giapron_Rsling1, LM_GI_giapron_Rsling2, LM_GI_giapron_Rsling3, LM_GI_giapron_Screen, LM_GI_giapron_TrustPost, LM_GI_giapron_UnderPF, LM_GI_giapron_swP1)
' Dim BL_L_LB1: BL_L_LB1=Array(LM_L_LB1_BR1, LM_L_LB1_BS1, LM_L_LB1_BmpBot, LM_L_LB1_Parts, LM_L_LB1_Playfield, LM_L_LB1_Ship, LM_L_LB1_TM1, LM_L_LB1_swLB)
' Dim BL_L_LB2: BL_L_LB2=Array(LM_L_LB2_Asteroid1, LM_L_LB2_Asteroid2, LM_L_LB2_Asteroid3, LM_L_LB2_Asteroid4, LM_L_LB2_BR2, LM_L_LB2_BR3, LM_L_LB2_BS2, LM_L_LB2_BS3, LM_L_LB2_BmpBot, LM_L_LB2_DiverterPin, LM_L_LB2_Layer1, LM_L_LB2_Parts, LM_L_LB2_Playfield, LM_L_LB2_UnderPF, LM_L_LB2_swR2)
' Dim BL_L_LB3: BL_L_LB3=Array(LM_L_LB3_Asteroid1, LM_L_LB3_Asteroid2, LM_L_LB3_Asteroid3, LM_L_LB3_Asteroid4, LM_L_LB3_BR2, LM_L_LB3_BR3, LM_L_LB3_BS2, LM_L_LB3_BS3, LM_L_LB3_BmpBot, LM_L_LB3_DiverterPin, LM_L_LB3_Layer1, LM_L_LB3_Parts, LM_L_LB3_Playfield, LM_L_LB3_TM4, LM_L_LB3_UnderPF, LM_L_LB3_swC3, LM_L_LB3_swI2)
' Dim BL_L_LC1: BL_L_LC1=Array(LM_L_LC1_LFlip, LM_L_LC1_LFlipU, LM_L_LC1_Lsling1, LM_L_LC1_Lsling2, LM_L_LC1_Lsling3, LM_L_LC1_Parts, LM_L_LC1_Playfield, LM_L_LC1_UnderPF)
' Dim BL_L_LC2: BL_L_LC2=Array(LM_L_LC2_LFlip, LM_L_LC2_LFlipU, LM_L_LC2_Playfield, LM_L_LC2_UnderPF)
' Dim BL_L_LC3: BL_L_LC3=Array(LM_L_LC3_LFlip, LM_L_LC3_LFlipU, LM_L_LC3_Playfield, LM_L_LC3_RFlipU, LM_L_LC3_UnderPF)
' Dim BL_L_LC4: BL_L_LC4=Array(LM_L_LC4_LFlip, LM_L_LC4_LFlipU, LM_L_LC4_Playfield, LM_L_LC4_RFlipU, LM_L_LC4_UnderPF)
' Dim BL_L_LC5: BL_L_LC5=Array(LM_L_LC5_LFlipU, LM_L_LC5_Playfield, LM_L_LC5_RFlip, LM_L_LC5_RFlipU, LM_L_LC5_UnderPF)
' Dim BL_L_LC6: BL_L_LC6=Array(LM_L_LC6_LFlipU, LM_L_LC6_Playfield, LM_L_LC6_RFlip, LM_L_LC6_RFlipU, LM_L_LC6_UnderPF)
' Dim BL_L_LC7: BL_L_LC7=Array(LM_L_LC7_Playfield, LM_L_LC7_RFlip, LM_L_LC7_RFlipU, LM_L_LC7_UnderPF)
' Dim BL_L_LC8: BL_L_LC8=Array(LM_L_LC8_Parts, LM_L_LC8_Playfield, LM_L_LC8_RFlip, LM_L_LC8_RFlipU, LM_L_LC8_Rsling1, LM_L_LC8_Rsling2, LM_L_LC8_Rsling3, LM_L_LC8_UnderPF)
' Dim BL_L_LCC1: BL_L_LCC1=Array(LM_L_LCC1_Parts, LM_L_LCC1_Playfield, LM_L_LCC1_Ramp, LM_L_LCC1_UnderPF, LM_L_LCC1_swL1)
' Dim BL_L_LCC2: BL_L_LCC2=Array(LM_L_LCC2_Parts, LM_L_LCC2_Playfield, LM_L_LCC2_UnderPF)
' Dim BL_L_LCC3: BL_L_LCC3=Array(LM_L_LCC3_Parts, LM_L_LCC3_Playfield, LM_L_LCC3_UnderPF)
' Dim BL_L_LCR1: BL_L_LCR1=Array(LM_L_LCR1_Parts, LM_L_LCR1_Playfield, LM_L_LCR1_UnderPF)
' Dim BL_L_LCR2: BL_L_LCR2=Array(LM_L_LCR2_Lsling1, LM_L_LCR2_Lsling2, LM_L_LCR2_Lsling3, LM_L_LCR2_Parts, LM_L_LCR2_Playfield, LM_L_LCR2_UnderPF)
' Dim BL_L_LCWiz: BL_L_LCWiz=Array(LM_L_LCWiz_Parts, LM_L_LCWiz_Playfield, LM_L_LCWiz_UnderPF)
' Dim BL_L_LDP: BL_L_LDP=Array(LM_L_LDP_BR2, LM_L_LDP_BR3, LM_L_LDP_BS2, LM_L_LDP_BS3, LM_L_LDP_BmpBot, LM_L_LDP_DiverterPin, LM_L_LDP_Parts, LM_L_LDP_Playfield, LM_L_LDP_UnderPF)
' Dim BL_L_LDS: BL_L_LDS=Array(LM_L_LDS_Gate2, LM_L_LDS_Parts, LM_L_LDS_Playfield, LM_L_LDS_RFlip1, LM_L_LDS_RFlip1U, LM_L_LDS_UnderPF)
' Dim BL_L_LEBR: BL_L_LEBR=Array(LM_L_LEBR_Parts, LM_L_LEBR_Playfield, LM_L_LEBR_UnderPF)
' Dim BL_L_LF1: BL_L_LF1=Array(LM_L_LF1_Parts, LM_L_LF1_Playfield, LM_L_LF1_UnderPF, LM_L_LF1_swR1)
' Dim BL_L_LF2: BL_L_LF2=Array(LM_L_LF2_Parts, LM_L_LF2_Playfield, LM_L_LF2_TM5, LM_L_LF2_UnderPF)
' Dim BL_L_LF3: BL_L_LF3=Array(LM_L_LF3_Parts, LM_L_LF3_Playfield, LM_L_LF3_TM5, LM_L_LF3_UnderPF)
' Dim BL_L_LH1: BL_L_LH1=Array(LM_L_LH1_LFlip, LM_L_LH1_LFlipU, LM_L_LH1_Lsling1, LM_L_LH1_Lsling2, LM_L_LH1_Lsling3, LM_L_LH1_Parts, LM_L_LH1_Playfield, LM_L_LH1_UnderPF)
' Dim BL_L_LH2: BL_L_LH2=Array(LM_L_LH2_LFlip, LM_L_LH2_LFlipU, LM_L_LH2_Lsling1, LM_L_LH2_Lsling2, LM_L_LH2_Lsling3, LM_L_LH2_Parts, LM_L_LH2_Playfield, LM_L_LH2_UnderPF)
' Dim BL_L_LH3: BL_L_LH3=Array(LM_L_LH3_LFlip, LM_L_LH3_LFlipU, LM_L_LH3_Parts, LM_L_LH3_Playfield, LM_L_LH3_UnderPF)
' Dim BL_L_LH4: BL_L_LH4=Array(LM_L_LH4_LFlip, LM_L_LH4_LFlipU, LM_L_LH4_Playfield, LM_L_LH4_RFlipU, LM_L_LH4_UnderPF)
' Dim BL_L_LH5: BL_L_LH5=Array(LM_L_LH5_LFlip, LM_L_LH5_LFlipU, LM_L_LH5_Parts, LM_L_LH5_Playfield, LM_L_LH5_RFlip, LM_L_LH5_RFlipU, LM_L_LH5_UnderPF)
' Dim BL_L_LH6: BL_L_LH6=Array(LM_L_LH6_LFlipU, LM_L_LH6_Playfield, LM_L_LH6_RFlip, LM_L_LH6_RFlipU, LM_L_LH6_UnderPF)
' Dim BL_L_LH7: BL_L_LH7=Array(LM_L_LH7_Playfield, LM_L_LH7_RFlip, LM_L_LH7_RFlipU, LM_L_LH7_UnderPF)
' Dim BL_L_LH8: BL_L_LH8=Array(LM_L_LH8_Playfield, LM_L_LH8_RFlip, LM_L_LH8_RFlipU, LM_L_LH8_Rsling1, LM_L_LH8_Rsling2, LM_L_LH8_Rsling3, LM_L_LH8_UnderPF)
' Dim BL_L_LH9: BL_L_LH9=Array(LM_L_LH9_Parts, LM_L_LH9_Playfield, LM_L_LH9_RFlip, LM_L_LH9_RFlipU, LM_L_LH9_Rsling1, LM_L_LH9_Rsling2, LM_L_LH9_Rsling3, LM_L_LH9_UnderPF)
Dim BL_L_LL: BL_L_LL=Array(LM_L_LL_Parts, LM_L_LL_Playfield, LM_L_LL_UnderPF)
' Dim BL_L_LLI: BL_L_LLI=Array(LM_L_LLI_Lsling1, LM_L_LLI_Lsling2, LM_L_LLI_Lsling3, LM_L_LLI_Parts, LM_L_LLI_Playfield, LM_L_LLI_UnderPF, LM_L_LLI_swLI, LM_L_LLI_swLO)
' Dim BL_L_LLO: BL_L_LLO=Array(LM_L_LLO_Parts, LM_L_LLO_Playfield, LM_L_LLO_UnderPF, LM_L_LLO_swLO)
' Dim BL_L_LLWiz: BL_L_LLWiz=Array(LM_L_LLWiz_Parts, LM_L_LLWiz_Playfield, LM_L_LLWiz_UnderPF)
' Dim BL_L_LM1: BL_L_LM1=Array(LM_L_LM1_Parts, LM_L_LM1_Playfield, LM_L_LM1_TM1, LM_L_LM1_UnderPF)
' Dim BL_L_LM2: BL_L_LM2=Array(LM_L_LM2_Parts, LM_L_LM2_Playfield, LM_L_LM2_TM2, LM_L_LM2_UnderPF)
' Dim BL_L_LM3: BL_L_LM3=Array(LM_L_LM3_Asteroid1, LM_L_LM3_Asteroid2, LM_L_LM3_Asteroid3, LM_L_LM3_Asteroid4, LM_L_LM3_Playfield, LM_L_LM3_TM3, LM_L_LM3_UnderPF)
' Dim BL_L_LM4: BL_L_LM4=Array(LM_L_LM4_Parts, LM_L_LM4_Playfield, LM_L_LM4_TM4, LM_L_LM4_UnderPF)
' Dim BL_L_LM5: BL_L_LM5=Array(LM_L_LM5_Parts, LM_L_LM5_Playfield, LM_L_LM5_TM5, LM_L_LM5_UnderPF)
' Dim BL_L_LMLR: BL_L_LMLR=Array(LM_L_LMLR_Parts, LM_L_LMLR_Playfield, LM_L_LMLR_UnderPF)
' Dim BL_L_LMR: BL_L_LMR=Array(LM_L_LMR_Parts, LM_L_LMR_Playfield, LM_L_LMR_UnderPF)
' Dim BL_L_LMR1: BL_L_LMR1=Array(LM_L_LMR1_Parts, LM_L_LMR1_Playfield, LM_L_LMR1_RArm, LM_L_LMR1_Rsling3, LM_L_LMR1_UnderPF)
' Dim BL_L_LMR2: BL_L_LMR2=Array(LM_L_LMR2_Parts, LM_L_LMR2_Playfield, LM_L_LMR2_Rsling1, LM_L_LMR2_Rsling2, LM_L_LMR2_Rsling3, LM_L_LMR2_UnderPF)
' Dim BL_L_LMet1: BL_L_LMet1=Array(LM_L_LMet1_BR1, LM_L_LMet1_BS1, LM_L_LMet1_Parts, LM_L_LMet1_Playfield, LM_L_LMet1_TMet1, LM_L_LMet1_UnderPF)
' Dim BL_L_LMet2: BL_L_LMet2=Array(LM_L_LMet2_BmpBot, LM_L_LMet2_Parts, LM_L_LMet2_Playfield, LM_L_LMet2_TMet2, LM_L_LMet2_UnderPF)
' Dim BL_L_LMet3: BL_L_LMet3=Array(LM_L_LMet3_Parts, LM_L_LMet3_Playfield, LM_L_LMet3_TMet3, LM_L_LMet3_UnderPF)
' Dim BL_L_LMet4: BL_L_LMet4=Array(LM_L_LMet4_Parts, LM_L_LMet4_Playfield, LM_L_LMet4_TMet4, LM_L_LMet4_UnderPF)
' Dim BL_L_LPC1: BL_L_LPC1=Array(LM_L_LPC1_Asteroid1, LM_L_LPC1_GateL, LM_L_LPC1_Parts, LM_L_LPC1_Playfield, LM_L_LPC1_Ramp, LM_L_LPC1_TM2, LM_L_LPC1_UnderPF)
' Dim BL_L_LPC2: BL_L_LPC2=Array(LM_L_LPC2_Parts, LM_L_LPC2_Playfield, LM_L_LPC2_TM2, LM_L_LPC2_UnderPF)
' Dim BL_L_LPC3: BL_L_LPC3=Array(LM_L_LPC3_Parts, LM_L_LPC3_Playfield, LM_L_LPC3_UnderPF)
' Dim BL_L_LPC4: BL_L_LPC4=Array(LM_L_LPC4_Asteroid1, LM_L_LPC4_Asteroid2, LM_L_LPC4_Asteroid3, LM_L_LPC4_Asteroid4, LM_L_LPC4_Parts, LM_L_LPC4_Playfield, LM_L_LPC4_Ramp, LM_L_LPC4_TM3, LM_L_LPC4_UnderPF, LM_L_LPC4_swC1)
' Dim BL_L_LPC5: BL_L_LPC5=Array(LM_L_LPC5_Asteroid1, LM_L_LPC5_Asteroid2, LM_L_LPC5_Asteroid3, LM_L_LPC5_Asteroid4, LM_L_LPC5_Parts, LM_L_LPC5_Playfield, LM_L_LPC5_TM3, LM_L_LPC5_TM4, LM_L_LPC5_UnderPF, LM_L_LPC5_swC3)
' Dim BL_L_LPF: BL_L_LPF=Array(LM_L_LPF_Asteroid1, LM_L_LPF_Asteroid2, LM_L_LPF_Asteroid3, LM_L_LPF_Asteroid4, LM_L_LPF_Parts, LM_L_LPF_Playfield, LM_L_LPF_TM3, LM_L_LPF_UnderPF)
' Dim BL_L_LPR1: BL_L_LPR1=Array(LM_L_LPR1_Parts, LM_L_LPR1_Playfield, LM_L_LPR1_UnderPF)
' Dim BL_L_LPR2: BL_L_LPR2=Array(LM_L_LPR2_Parts, LM_L_LPR2_Playfield, LM_L_LPR2_UnderPF)
' Dim BL_L_LPR3: BL_L_LPR3=Array(LM_L_LPR3_Parts, LM_L_LPR3_Playfield, LM_L_LPR3_UnderPF)
' Dim BL_L_LPR4: BL_L_LPR4=Array(LM_L_LPR4_LFlip, LM_L_LPR4_LFlipU, LM_L_LPR4_Parts, LM_L_LPR4_Playfield, LM_L_LPR4_UnderPF)
' Dim BL_L_LPR5: BL_L_LPR5=Array(LM_L_LPR5_LFlipU, LM_L_LPR5_Playfield, LM_L_LPR5_RFlipU, LM_L_LPR5_UnderPF)
' Dim BL_L_LPR6: BL_L_LPR6=Array(LM_L_LPR6_Parts, LM_L_LPR6_Playfield, LM_L_LPR6_RFlipU, LM_L_LPR6_UnderPF)
' Dim BL_L_LRI: BL_L_LRI=Array(LM_L_LRI_Parts, LM_L_LRI_Playfield, LM_L_LRI_RArm, LM_L_LRI_Rsling1, LM_L_LRI_Rsling2, LM_L_LRI_Rsling3, LM_L_LRI_UnderPF, LM_L_LRI_swRI)
' Dim BL_L_LRO: BL_L_LRO=Array(LM_L_LRO_Parts, LM_L_LRO_Playfield, LM_L_LRO_UnderPF, LM_L_LRO_swRO)
' Dim BL_L_LS1: BL_L_LS1=Array(LM_L_LS1_BS1, LM_L_LS1_Parts, LM_L_LS1_Playfield, LM_L_LS1_TM1, LM_L_LS1_UnderPF)
' Dim BL_L_LS2: BL_L_LS2=Array(LM_L_LS2_BS1, LM_L_LS2_BmpBot, LM_L_LS2_Parts, LM_L_LS2_Playfield, LM_L_LS2_UnderPF)
' Dim BL_L_LS3: BL_L_LS3=Array(LM_L_LS3_Parts, LM_L_LS3_Playfield, LM_L_LS3_UnderPF)
' Dim BL_L_LS4: BL_L_LS4=Array(LM_L_LS4_Parts, LM_L_LS4_Playfield, LM_L_LS4_UnderPF)
' Dim BL_L_LS5: BL_L_LS5=Array(LM_L_LS5_Parts, LM_L_LS5_Playfield, LM_L_LS5_RFlip1U, LM_L_LS5_UnderPF)
' Dim BL_L_LS6: BL_L_LS6=Array(LM_L_LS6_Parts, LM_L_LS6_Playfield, LM_L_LS6_RFlip1, LM_L_LS6_RFlip1U, LM_L_LS6_UnderPF)
' Dim BL_L_LSA: BL_L_LSA=Array(LM_L_LSA_LFlip, LM_L_LSA_LFlipU, LM_L_LSA_Playfield, LM_L_LSA_RFlip, LM_L_LSA_RFlipU, LM_L_LSA_TrustPost, LM_L_LSA_UnderPF)
' Dim BL_L_LSC1: BL_L_LSC1=Array(LM_L_LSC1_Parts, LM_L_LSC1_Playfield, LM_L_LSC1_TS1, LM_L_LSC1_TS2, LM_L_LSC1_UnderPF)
' Dim BL_L_LSC2: BL_L_LSC2=Array(LM_L_LSC2_Parts, LM_L_LSC2_Playfield, LM_L_LSC2_TS1, LM_L_LSC2_TS2, LM_L_LSC2_TS3, LM_L_LSC2_UnderPF)
' Dim BL_L_LSC3: BL_L_LSC3=Array(LM_L_LSC3_Parts, LM_L_LSC3_Playfield, LM_L_LSC3_TS3, LM_L_LSC3_UnderPF)
' Dim BL_L_LSL: BL_L_LSL=Array(LM_L_LSL_Parts, LM_L_LSL_Playfield, LM_L_LSL_UnderPF)
' Dim BL_L_LSR: BL_L_LSR=Array(LM_L_LSR_Parts, LM_L_LSR_Playfield, LM_L_LSR_UnderPF)
' Dim BL_L_LShip: BL_L_LShip=Array(LM_L_LShip_Parts, LM_L_LShip_Ship)
' Dim BL_L_LSwC1: BL_L_LSwC1=Array(LM_L_LSwC1_Asteroid1, LM_L_LSwC1_Asteroid2, LM_L_LSwC1_Asteroid3, LM_L_LSwC1_Asteroid4, LM_L_LSwC1_Parts, LM_L_LSwC1_Playfield, LM_L_LSwC1_UnderPF, LM_L_LSwC1_swC1, LM_L_LSwC1_swC2)
' Dim BL_L_LSwC2: BL_L_LSwC2=Array(LM_L_LSwC2_Asteroid1, LM_L_LSwC2_Asteroid2, LM_L_LSwC2_Asteroid3, LM_L_LSwC2_Asteroid4, LM_L_LSwC2_Parts, LM_L_LSwC2_Playfield, LM_L_LSwC2_TM3, LM_L_LSwC2_UnderPF, LM_L_LSwC2_swC1, LM_L_LSwC2_swC2)
' Dim BL_L_LSwC3: BL_L_LSwC3=Array(LM_L_LSwC3_Asteroid1, LM_L_LSwC3_Asteroid2, LM_L_LSwC3_Asteroid3, LM_L_LSwC3_Asteroid4, LM_L_LSwC3_Parts, LM_L_LSwC3_Playfield, LM_L_LSwC3_UnderPF, LM_L_LSwC3_swC2, LM_L_LSwC3_swC3)
' Dim BL_L_LTW1: BL_L_LTW1=Array(LM_L_LTW1_Parts, LM_L_LTW1_Playfield, LM_L_LTW1_Ramp, LM_L_LTW1_UnderPF)
' Dim BL_L_LTW2: BL_L_LTW2=Array(LM_L_LTW2_Parts, LM_L_LTW2_Playfield, LM_L_LTW2_UnderPF)
' Dim BL_L_LW1: BL_L_LW1=Array(LM_L_LW1_Parts, LM_L_LW1_Playfield, LM_L_LW1_UnderPF)
' Dim BL_L_LW2: BL_L_LW2=Array(LM_L_LW2_Parts, LM_L_LW2_Playfield, LM_L_LW2_UnderPF)
' Dim BL_L_LW3: BL_L_LW3=Array(LM_L_LW3_Parts, LM_L_LW3_Playfield, LM_L_LW3_UnderPF)
' Dim BL_L_LW4: BL_L_LW4=Array(LM_L_LW4_Parts, LM_L_LW4_Playfield, LM_L_LW4_UnderPF)
' Dim BL_L_LW5: BL_L_LW5=Array(LM_L_LW5_Parts, LM_L_LW5_Playfield, LM_L_LW5_UnderPF)
' Dim BL_L_LW6: BL_L_LW6=Array(LM_L_LW6_Parts, LM_L_LW6_Playfield, LM_L_LW6_UnderPF)
' Dim BL_L_LW7: BL_L_LW7=Array(LM_L_LW7_Parts, LM_L_LW7_Playfield, LM_L_LW7_UnderPF)
' Dim BL_L_LW8: BL_L_LW8=Array(LM_L_LW8_Parts, LM_L_LW8_Playfield, LM_L_LW8_UnderPF)
' Dim BL_L_LW9: BL_L_LW9=Array(LM_L_LW9_Parts, LM_L_LW9_Playfield, LM_L_LW9_UnderPF)
' Dim BL_L_LWiz: BL_L_LWiz=Array(LM_L_LWiz_Parts, LM_L_LWiz_Playfield, LM_L_LWiz_UnderPF)
' Dim BL_L_LX: BL_L_LX=Array(LM_L_LX_GateR, LM_L_LX_Parts, LM_L_LX_Playfield, LM_L_LX_TM4, LM_L_LX_UnderPF)
' Dim BL_L_Lspot1: BL_L_Lspot1=Array(LM_L_Lspot1_Asteroid1, LM_L_Lspot1_Asteroid2, LM_L_Lspot1_Asteroid3, LM_L_Lspot1_Asteroid4, LM_L_Lspot1_BR2, LM_L_Lspot1_BS3, LM_L_Lspot1_BmpBot, LM_L_Lspot1_GateR, LM_L_Lspot1_Layer1, LM_L_Lspot1_Parts, LM_L_Lspot1_Playfield, LM_L_Lspot1_Ramp, LM_L_Lspot1_Spin, LM_L_Lspot1_SpinU, LM_L_Lspot1_SpinWire, LM_L_Lspot1_TM3, LM_L_Lspot1_TM4, LM_L_Lspot1_UnderPF, LM_L_Lspot1_swC1, LM_L_Lspot1_swC2, LM_L_Lspot1_swC3, LM_L_Lspot1_swI2)
' Dim BL_Stars: BL_Stars=Array(LM_Stars_Parts, LM_Stars_Ramp)
' Dim BL_World: BL_World=Array(BM_Asteroid1, BM_BR1, BM_BR2, BM_BR3, BM_BS1, BM_BS2, BM_BS3, BM_BmpBot, BM_BmpTop, BM_Card, BM_DiverterPin, BM_Gate2, BM_GateL, BM_GateR, BM_LArm, BM_LFlip, BM_LFlipU, BM_Layer1, BM_LockPin, BM_Lsling1, BM_Lsling2, BM_Lsling3, BM_Parts, BM_Playfield, BM_RArm, BM_RFlip, BM_RFlip1, BM_RFlip1U, BM_RFlipU, BM_Rails, BM_Ramp, BM_Rsling1, BM_Rsling2, BM_Rsling3, BM_Screen, BM_Ship, BM_Spin, BM_SpinU, BM_SpinWire, BM_TM1, BM_TM2, BM_TM3, BM_TM4, BM_TM5, BM_TMet1, BM_TMet2, BM_TMet3, BM_TMet4, BM_TS1, BM_TS2, BM_TS3, BM_TrustPost, BM_UnderPF, BM_swC1, BM_swC2, BM_swC3, BM_swI1, BM_swI2, BM_swL1, BM_swL2, BM_swLB, BM_swLI, BM_swLO, BM_swP1, BM_swP2, BM_swR1, BM_swR2, BM_swRI, BM_swRO)
' ' Global arrays
' Dim BG_Bakemap: BG_Bakemap=Array(BM_Asteroid1, BM_BR1, BM_BR2, BM_BR3, BM_BS1, BM_BS2, BM_BS3, BM_BmpBot, BM_BmpTop, BM_Card, BM_DiverterPin, BM_Gate2, BM_GateL, BM_GateR, BM_LArm, BM_LFlip, BM_LFlipU, BM_Layer1, BM_LockPin, BM_Lsling1, BM_Lsling2, BM_Lsling3, BM_Parts, BM_Playfield, BM_RArm, BM_RFlip, BM_RFlip1, BM_RFlip1U, BM_RFlipU, BM_Rails, BM_Ramp, BM_Rsling1, BM_Rsling2, BM_Rsling3, BM_Screen, BM_Ship, BM_Spin, BM_SpinU, BM_SpinWire, BM_TM1, BM_TM2, BM_TM3, BM_TM4, BM_TM5, BM_TMet1, BM_TMet2, BM_TMet3, BM_TMet4, BM_TS1, BM_TS2, BM_TS3, BM_TrustPost, BM_UnderPF, BM_swC1, BM_swC2, BM_swC3, BM_swI1, BM_swI2, BM_swL1, BM_swL2, BM_swLB, BM_swLI, BM_swLO, BM_swP1, BM_swP2, BM_swR1, BM_swR2, BM_swRI, BM_swRO)
' Dim BG_Lightmap: BG_Lightmap=Array(LM_F_FL1_Asteroid1, LM_F_FL1_Asteroid2, LM_F_FL1_Asteroid3, LM_F_FL1_Asteroid4, LM_F_FL1_BR2, LM_F_FL1_BR3, LM_F_FL1_BS2, LM_F_FL1_BS3, LM_F_FL1_BmpBot, LM_F_FL1_LockPin, LM_F_FL1_Parts, LM_F_FL1_Playfield, LM_F_FL1_RFlip1, LM_F_FL1_RFlip1U, LM_F_FL1_TM4, LM_F_FL1_TM5, LM_F_FL1_UnderPF, LM_F_FL1_swC3, LM_F_FL1_swR1, LM_F_FL1_swR2, LM_F_FL2_Asteroid1, LM_F_FL2_Asteroid2, LM_F_FL2_Asteroid3, LM_F_FL2_Asteroid4, LM_F_FL2_BS2, LM_F_FL2_BS3, LM_F_FL2_BmpBot, LM_F_FL2_GateL, LM_F_FL2_Parts, LM_F_FL2_Playfield, LM_F_FL2_Ramp, LM_F_FL2_Spin, LM_F_FL2_SpinU, LM_F_FL2_SpinWire, LM_F_FL2_TM3, LM_F_FL2_swC1, LM_F_FL2_swI1, LM_F_FL2_swI2, LM_F_FL2_swL2, LM_F_FL2_swR2, LM_F_FL3_Asteroid1, LM_F_FL3_Asteroid2, LM_F_FL3_Asteroid3, LM_F_FL3_Asteroid4, LM_F_FL3_BR2, LM_F_FL3_BR3, LM_F_FL3_BS2, LM_F_FL3_BS3, LM_F_FL3_BmpBot, LM_F_FL3_DiverterPin, LM_F_FL3_Parts, LM_F_FL3_Playfield, LM_F_FL3_Ramp, LM_F_FL3_Spin, LM_F_FL3_SpinU, LM_F_FL3_TM2, LM_F_FL3_TM3, LM_F_FL3_UnderPF, LM_F_FL3_swC1, _
'   LM_F_FL3_swC2, LM_F_FL3_swC3, LM_F_FL3_swI1, LM_F_FL3_swI2, LM_F_FL3_swL2, LM_F_FL3_swR1, LM_F_FL4_Asteroid1, LM_F_FL4_Asteroid2, LM_F_FL4_Asteroid3, LM_F_FL4_Asteroid4, LM_F_FL4_BS3, LM_F_FL4_BmpBot, LM_F_FL4_Layer1, LM_F_FL4_Parts, LM_F_FL4_Playfield, LM_F_FL4_RFlip1, LM_F_FL4_RFlip1U, LM_F_FL4_Ramp, LM_F_FL4_Spin, LM_F_FL4_SpinU, LM_F_FL4_TM2, LM_F_FL4_TM3, LM_F_FL4_TM4, LM_F_FL4_UnderPF, LM_F_FL4_swC1, LM_F_FL4_swC2, LM_F_FL4_swC3, LM_F_FL5a_LArm, LM_F_FL5a_LFlip, LM_F_FL5a_LFlipU, LM_F_FL5a_Lsling1, LM_F_FL5a_Lsling2, LM_F_FL5a_Lsling3, LM_F_FL5a_Parts, LM_F_FL5a_Playfield, LM_F_FL5a_RFlip, LM_F_FL5a_RFlipU, LM_F_FL5a_UnderPF, LM_F_FL5a_swLO, LM_F_FL5b_BR1, LM_F_FL5b_LArm, LM_F_FL5b_LFlip, LM_F_FL5b_LFlipU, LM_F_FL5b_Lsling1, LM_F_FL5b_Lsling2, LM_F_FL5b_Lsling3, LM_F_FL5b_Parts, LM_F_FL5b_Playfield, LM_F_FL5b_RFlipU, LM_F_FL5b_UnderPF, LM_F_FL5c_LArm, LM_F_FL5c_LFlip, LM_F_FL5c_LFlipU, LM_F_FL5c_Lsling1, LM_F_FL5c_Lsling2, LM_F_FL5c_Lsling3, LM_F_FL5c_Parts, LM_F_FL5c_Playfield, LM_F_FL5c_UnderPF, _
'   LM_F_FL5d_LArm, LM_F_FL5d_LFlip, LM_F_FL5d_LFlipU, LM_F_FL5d_Lsling1, LM_F_FL5d_Lsling2, LM_F_FL5d_Lsling3, LM_F_FL5d_Parts, LM_F_FL5d_Playfield, LM_F_FL5d_UnderPF, LM_F_FL5e_BR1, LM_F_FL5e_LArm, LM_F_FL5e_LFlip, LM_F_FL5e_LFlipU, LM_F_FL5e_Lsling1, LM_F_FL5e_Lsling2, LM_F_FL5e_Lsling3, LM_F_FL5e_Parts, LM_F_FL5e_Playfield, LM_F_FL5e_UnderPF, LM_F_FL5f_LArm, LM_F_FL5f_LFlip, LM_F_FL5f_LFlipU, LM_F_FL5f_Lsling1, LM_F_FL5f_Lsling2, LM_F_FL5f_Lsling3, LM_F_FL5f_Parts, LM_F_FL5f_Playfield, LM_F_FL5f_UnderPF, LM_F_FL5g_LArm, LM_F_FL5g_LFlip, LM_F_FL5g_LFlipU, LM_F_FL5g_Lsling1, LM_F_FL5g_Lsling2, LM_F_FL5g_Lsling3, LM_F_FL5g_Parts, LM_F_FL5g_Playfield, LM_F_FL5g_UnderPF, LM_F_FL5g_swLO, LM_F_FL5h_LArm, LM_F_FL5h_LFlip, LM_F_FL5h_LFlipU, LM_F_FL5h_Lsling1, LM_F_FL5h_Lsling2, LM_F_FL5h_Lsling3, LM_F_FL5h_Parts, LM_F_FL5h_Playfield, LM_F_FL5h_RFlipU, LM_F_FL5h_UnderPF, LM_F_FL5h_swLI, LM_F_FL5h_swLO, LM_F_FL6a_LFlip, LM_F_FL6a_LFlipU, LM_F_FL6a_Parts, LM_F_FL6a_Playfield, LM_F_FL6a_RArm, LM_F_FL6a_RFlip, _
'   LM_F_FL6a_RFlipU, LM_F_FL6a_Rsling1, LM_F_FL6a_Rsling2, LM_F_FL6a_Rsling3, LM_F_FL6b_LFlip, LM_F_FL6b_LFlipU, LM_F_FL6b_Parts, LM_F_FL6b_Playfield, LM_F_FL6b_RArm, LM_F_FL6b_RFlip, LM_F_FL6b_RFlipU, LM_F_FL6b_Rsling1, LM_F_FL6b_Rsling2, LM_F_FL6b_Rsling3, LM_F_FL6c_Parts, LM_F_FL6c_Playfield, LM_F_FL6c_RArm, LM_F_FL6c_RFlip, LM_F_FL6c_RFlipU, LM_F_FL6c_Rsling1, LM_F_FL6c_Rsling2, LM_F_FL6c_Rsling3, LM_F_FL6d_Parts, LM_F_FL6d_Playfield, LM_F_FL6d_RArm, LM_F_FL6d_RFlip, LM_F_FL6d_RFlipU, LM_F_FL6d_Rsling1, LM_F_FL6d_Rsling2, LM_F_FL6d_Rsling3, LM_F_FL6e_Parts, LM_F_FL6e_Playfield, LM_F_FL6e_RArm, LM_F_FL6e_RFlip, LM_F_FL6e_RFlipU, LM_F_FL6e_Rsling1, LM_F_FL6e_Rsling2, LM_F_FL6e_Rsling3, LM_F_FL6f_Parts, LM_F_FL6f_Playfield, LM_F_FL6f_RArm, LM_F_FL6f_RFlip, LM_F_FL6f_RFlipU, LM_F_FL6f_Rsling1, LM_F_FL6f_Rsling2, LM_F_FL6f_Rsling3, LM_F_FL6g_LFlipU, LM_F_FL6g_Parts, LM_F_FL6g_Playfield, LM_F_FL6g_RArm, LM_F_FL6g_RFlipU, LM_F_FL6g_Rsling1, LM_F_FL6g_Rsling2, LM_F_FL6g_Rsling3, LM_F_FL6h_Parts, LM_F_FL6h_Playfield, _
'   LM_F_FL6h_RArm, LM_F_FL6h_RFlip, LM_F_FL6h_RFlipU, LM_F_FL6h_Rsling1, LM_F_FL6h_Rsling2, LM_F_FL6h_Rsling3, LM_F_FL7a_Asteroid1, LM_F_FL7a_Asteroid2, LM_F_FL7a_Asteroid3, LM_F_FL7a_Asteroid4, LM_F_FL7a_BR2, LM_F_FL7a_BR3, LM_F_FL7a_BS2, LM_F_FL7a_BS3, LM_F_FL7a_BmpBot, LM_F_FL7a_DiverterPin, LM_F_FL7a_GateL, LM_F_FL7a_GateR, LM_F_FL7a_Layer1, LM_F_FL7a_Parts, LM_F_FL7a_Playfield, LM_F_FL7a_Ramp, LM_F_FL7a_Ship, LM_F_FL7a_Spin, LM_F_FL7a_SpinU, LM_F_FL7a_SpinWire, LM_F_FL7a_TM2, LM_F_FL7a_TM3, LM_F_FL7a_TM4, LM_F_FL7a_UnderPF, LM_F_FL7a_swC1, LM_F_FL7a_swC2, LM_F_FL7a_swC3, LM_F_FL7a_swI1, LM_F_FL7a_swI2, LM_F_FL7a_swL1, LM_F_FL7a_swR1, LM_GI_gi01_LArm, LM_GI_gi01_LFlip, LM_GI_gi01_LFlipU, LM_GI_gi01_Lsling1, LM_GI_gi01_Lsling2, LM_GI_gi01_Lsling3, LM_GI_gi01_Parts, LM_GI_gi01_Playfield, LM_GI_gi01_RArm, LM_GI_gi01_RFlip, LM_GI_gi01_RFlipU, LM_GI_gi01_Rsling1, LM_GI_gi01_Rsling3, LM_GI_gi01_UnderPF, LM_GI_gi01_swLI, LM_GI_gi01_swLO, LM_GI_gi02_BR1, LM_GI_gi02_LArm, LM_GI_gi02_LFlip, LM_GI_gi02_LFlipU, _
'   LM_GI_gi02_Lsling1, LM_GI_gi02_Lsling2, LM_GI_gi02_Lsling3, LM_GI_gi02_Parts, LM_GI_gi02_Playfield, LM_GI_gi02_RArm, LM_GI_gi02_RFlip, LM_GI_gi02_RFlipU, LM_GI_gi02_Rsling3, LM_GI_gi02_UnderPF, LM_GI_gi02_swLI, LM_GI_gi02_swLO, LM_GI_gi03_LArm, LM_GI_gi03_LFlip, LM_GI_gi03_LFlipU, LM_GI_gi03_Lsling1, LM_GI_gi03_Lsling2, LM_GI_gi03_Lsling3, LM_GI_gi03_Parts, LM_GI_gi03_Playfield, LM_GI_gi03_RFlip, LM_GI_gi03_RFlipU, LM_GI_gi03_Rsling2, LM_GI_gi03_Rsling3, LM_GI_gi03_swLI, LM_GI_gi04_LArm, LM_GI_gi04_LFlip, LM_GI_gi04_LFlipU, LM_GI_gi04_Lsling1, LM_GI_gi04_Lsling2, LM_GI_gi04_Lsling3, LM_GI_gi04_Parts, LM_GI_gi04_Playfield, LM_GI_gi04_Rsling3, LM_GI_gi04_UnderPF, LM_GI_gi04_swLI, LM_GI_gi04_swLO, LM_GI_gi05_LFlip, LM_GI_gi05_LFlipU, LM_GI_gi05_Parts, LM_GI_gi05_Playfield, LM_GI_gi05_RArm, LM_GI_gi05_RFlip, LM_GI_gi05_RFlipU, LM_GI_gi05_Rsling1, LM_GI_gi05_Rsling2, LM_GI_gi05_Rsling3, LM_GI_gi05_UnderPF, LM_GI_gi05_swRI, LM_GI_gi05_swRO, LM_GI_gi06_Parts, LM_GI_gi06_Playfield, LM_GI_gi06_RArm, LM_GI_gi06_RFlip, _
'   LM_GI_gi06_RFlipU, LM_GI_gi06_Rsling1, LM_GI_gi06_Rsling2, LM_GI_gi06_Rsling3, LM_GI_gi06_swRI, LM_GI_gi06_swRO, LM_GI_gi07_LFlip, LM_GI_gi07_LFlipU, LM_GI_gi07_Lsling2, LM_GI_gi07_Lsling3, LM_GI_gi07_Parts, LM_GI_gi07_Playfield, LM_GI_gi07_RArm, LM_GI_gi07_RFlip, LM_GI_gi07_RFlipU, LM_GI_gi07_Rsling1, LM_GI_gi07_Rsling2, LM_GI_gi07_Rsling3, LM_GI_gi07_swRI, LM_GI_gi08_Lsling3, LM_GI_gi08_Parts, LM_GI_gi08_Playfield, LM_GI_gi08_RArm, LM_GI_gi08_RFlip, LM_GI_gi08_RFlipU, LM_GI_gi08_Rsling1, LM_GI_gi08_Rsling2, LM_GI_gi08_Rsling3, LM_GI_gi08_UnderPF, LM_GI_gi08_swRI, LM_GI_gi08_swRO, LM_GI_gi09_Parts, LM_GI_gi09_Playfield, LM_GI_gi09_RArm, LM_GI_gi09_swLI, LM_GI_gi10_Gate2, LM_GI_gi10_Parts, LM_GI_gi10_Playfield, LM_GI_gi10_RArm, LM_GI_gi10_RFlip1U, LM_GI_gi10_TS1, LM_GI_gi10_TS2, LM_GI_gi10_TS3, LM_GI_gi10_UnderPF, LM_GI_gi10_swRO, LM_GI_gi11_BS1, LM_GI_gi11_Parts, LM_GI_gi11_Playfield, LM_GI_gi12_BmpBot, LM_GI_gi12_Parts, LM_GI_gi12_Playfield, LM_GI_gi13_BR2, LM_GI_gi13_BR3, LM_GI_gi13_BS2, LM_GI_gi13_BS3, _
'   LM_GI_gi13_BmpBot, LM_GI_gi13_Parts, LM_GI_gi13_Playfield, LM_GI_gi13_RFlip1, LM_GI_gi13_RFlip1U, LM_GI_gi13_TM4, LM_GI_gi13_TM5, LM_GI_gi13_UnderPF, LM_GI_gi13_swR1, LM_GI_gi14_Gate2, LM_GI_gi14_LockPin, LM_GI_gi14_Parts, LM_GI_gi14_Playfield, LM_GI_gi14_RFlip1, LM_GI_gi14_RFlip1U, LM_GI_gi15_LockPin, LM_GI_gi15_Parts, LM_GI_gi15_Playfield, LM_GI_gi15_RFlip1, LM_GI_gi15_RFlip1U, LM_GI_gi15_UnderPF, LM_GI_gi15_swR1, LM_GI_gi16_Parts, LM_GI_gi16_Playfield, LM_GI_gi16_Ramp, LM_GI_gi17_BS2, LM_GI_gi17_BmpBot, LM_GI_gi17_Parts, LM_GI_gi17_Playfield, LM_GI_gi18_Parts, LM_GI_gi18_Playfield, LM_GI_gi19_LockPin, LM_GI_gi19_Parts, LM_GI_gi19_Playfield, LM_GI_gi19_RFlip1, LM_GI_gi19_RFlip1U, LM_GI_gi19_UnderPF, LM_GI_gi20_Asteroid1, LM_GI_gi20_Asteroid2, LM_GI_gi20_Asteroid3, LM_GI_gi20_Asteroid4, LM_GI_gi20_BS1, LM_GI_gi20_GateL, LM_GI_gi20_Parts, LM_GI_gi20_Playfield, LM_GI_gi20_Ramp, LM_GI_gi20_Spin, LM_GI_gi20_SpinU, LM_GI_gi20_SpinWire, LM_GI_gi20_TM2, LM_GI_gi20_UnderPF, LM_GI_gi20_swI1, LM_GI_gi20_swL1, _
'   LM_GI_gi20_swL2, LM_GI_gi21_Asteroid1, LM_GI_gi21_Asteroid2, LM_GI_gi21_Asteroid3, LM_GI_gi21_Asteroid4, LM_GI_gi21_GateL, LM_GI_gi21_Parts, LM_GI_gi21_Playfield, LM_GI_gi21_Ramp, LM_GI_gi21_Spin, LM_GI_gi21_SpinU, LM_GI_gi21_SpinWire, LM_GI_gi21_swL1, LM_GI_gi21_swL2, LM_GI_gi22_Asteroid1, LM_GI_gi22_Asteroid2, LM_GI_gi22_Asteroid3, LM_GI_gi22_Asteroid4, LM_GI_gi22_BR2, LM_GI_gi22_BR3, LM_GI_gi22_BS2, LM_GI_gi22_BS3, LM_GI_gi22_BmpBot, LM_GI_gi22_Layer1, LM_GI_gi22_Parts, LM_GI_gi22_Playfield, LM_GI_gi22_TM4, LM_GI_gi22_UnderPF, LM_GI_gi22_swC3, LM_GI_gi22_swR2, LM_GI_giapron_LFlip, LM_GI_giapron_LFlipU, LM_GI_giapron_Parts, LM_GI_giapron_Playfield, LM_GI_giapron_RFlip, LM_GI_giapron_RFlipU, LM_GI_giapron_Rsling1, LM_GI_giapron_Rsling2, LM_GI_giapron_Rsling3, LM_GI_giapron_Screen, LM_GI_giapron_TrustPost, LM_GI_giapron_UnderPF, LM_GI_giapron_swP1, LM_L_LB1_BR1, LM_L_LB1_BS1, LM_L_LB1_BmpBot, LM_L_LB1_Parts, LM_L_LB1_Playfield, LM_L_LB1_Ship, LM_L_LB1_TM1, LM_L_LB1_swLB, LM_L_LB2_Asteroid1, _
'   LM_L_LB2_Asteroid2, LM_L_LB2_Asteroid3, LM_L_LB2_Asteroid4, LM_L_LB2_BR2, LM_L_LB2_BR3, LM_L_LB2_BS2, LM_L_LB2_BS3, LM_L_LB2_BmpBot, LM_L_LB2_DiverterPin, LM_L_LB2_Layer1, LM_L_LB2_Parts, LM_L_LB2_Playfield, LM_L_LB2_UnderPF, LM_L_LB2_swR2, LM_L_LB3_Asteroid1, LM_L_LB3_Asteroid2, LM_L_LB3_Asteroid3, LM_L_LB3_Asteroid4, LM_L_LB3_BR2, LM_L_LB3_BR3, LM_L_LB3_BS2, LM_L_LB3_BS3, LM_L_LB3_BmpBot, LM_L_LB3_DiverterPin, LM_L_LB3_Layer1, LM_L_LB3_Parts, LM_L_LB3_Playfield, LM_L_LB3_TM4, LM_L_LB3_UnderPF, LM_L_LB3_swC3, LM_L_LB3_swI2, LM_L_LC1_LFlip, LM_L_LC1_LFlipU, LM_L_LC1_Lsling1, LM_L_LC1_Lsling2, LM_L_LC1_Lsling3, LM_L_LC1_Parts, LM_L_LC1_Playfield, LM_L_LC1_UnderPF, LM_L_LC2_LFlip, LM_L_LC2_LFlipU, LM_L_LC2_Playfield, LM_L_LC2_UnderPF, LM_L_LC3_LFlip, LM_L_LC3_LFlipU, LM_L_LC3_Playfield, LM_L_LC3_RFlipU, LM_L_LC3_UnderPF, LM_L_LC4_LFlip, LM_L_LC4_LFlipU, LM_L_LC4_Playfield, LM_L_LC4_RFlipU, LM_L_LC4_UnderPF, LM_L_LC5_LFlipU, LM_L_LC5_Playfield, LM_L_LC5_RFlip, LM_L_LC5_RFlipU, LM_L_LC5_UnderPF, LM_L_LC6_LFlipU, _
'   LM_L_LC6_Playfield, LM_L_LC6_RFlip, LM_L_LC6_RFlipU, LM_L_LC6_UnderPF, LM_L_LC7_Playfield, LM_L_LC7_RFlip, LM_L_LC7_RFlipU, LM_L_LC7_UnderPF, LM_L_LC8_Parts, LM_L_LC8_Playfield, LM_L_LC8_RFlip, LM_L_LC8_RFlipU, LM_L_LC8_Rsling1, LM_L_LC8_Rsling2, LM_L_LC8_Rsling3, LM_L_LC8_UnderPF, LM_L_LCC1_Parts, LM_L_LCC1_Playfield, LM_L_LCC1_Ramp, LM_L_LCC1_UnderPF, LM_L_LCC1_swL1, LM_L_LCC2_Parts, LM_L_LCC2_Playfield, LM_L_LCC2_UnderPF, LM_L_LCC3_Parts, LM_L_LCC3_Playfield, LM_L_LCC3_UnderPF, LM_L_LCR1_Parts, LM_L_LCR1_Playfield, LM_L_LCR1_UnderPF, LM_L_LCR2_Lsling1, LM_L_LCR2_Lsling2, LM_L_LCR2_Lsling3, LM_L_LCR2_Parts, LM_L_LCR2_Playfield, LM_L_LCR2_UnderPF, LM_L_LCWiz_Parts, LM_L_LCWiz_Playfield, LM_L_LCWiz_UnderPF, LM_L_LDP_BR2, LM_L_LDP_BR3, LM_L_LDP_BS2, LM_L_LDP_BS3, LM_L_LDP_BmpBot, LM_L_LDP_DiverterPin, LM_L_LDP_Parts, LM_L_LDP_Playfield, LM_L_LDP_UnderPF, LM_L_LDS_Gate2, LM_L_LDS_Parts, LM_L_LDS_Playfield, LM_L_LDS_RFlip1, LM_L_LDS_RFlip1U, LM_L_LDS_UnderPF, LM_L_LEBR_Parts, LM_L_LEBR_Playfield, _
'   LM_L_LEBR_UnderPF, LM_L_LF1_Parts, LM_L_LF1_Playfield, LM_L_LF1_UnderPF, LM_L_LF1_swR1, LM_L_LF2_Parts, LM_L_LF2_Playfield, LM_L_LF2_TM5, LM_L_LF2_UnderPF, LM_L_LF3_Parts, LM_L_LF3_Playfield, LM_L_LF3_TM5, LM_L_LF3_UnderPF, LM_L_LH1_LFlip, LM_L_LH1_LFlipU, LM_L_LH1_Lsling1, LM_L_LH1_Lsling2, LM_L_LH1_Lsling3, LM_L_LH1_Parts, LM_L_LH1_Playfield, LM_L_LH1_UnderPF, LM_L_LH2_LFlip, LM_L_LH2_LFlipU, LM_L_LH2_Lsling1, LM_L_LH2_Lsling2, LM_L_LH2_Lsling3, LM_L_LH2_Parts, LM_L_LH2_Playfield, LM_L_LH2_UnderPF, LM_L_LH3_LFlip, LM_L_LH3_LFlipU, LM_L_LH3_Parts, LM_L_LH3_Playfield, LM_L_LH3_UnderPF, LM_L_LH4_LFlip, LM_L_LH4_LFlipU, LM_L_LH4_Playfield, LM_L_LH4_RFlipU, LM_L_LH4_UnderPF, LM_L_LH5_LFlip, LM_L_LH5_LFlipU, LM_L_LH5_Parts, LM_L_LH5_Playfield, LM_L_LH5_RFlip, LM_L_LH5_RFlipU, LM_L_LH5_UnderPF, LM_L_LH6_LFlipU, LM_L_LH6_Playfield, LM_L_LH6_RFlip, LM_L_LH6_RFlipU, LM_L_LH6_UnderPF, LM_L_LH7_Playfield, LM_L_LH7_RFlip, LM_L_LH7_RFlipU, LM_L_LH7_UnderPF, LM_L_LH8_Playfield, LM_L_LH8_RFlip, LM_L_LH8_RFlipU, _
'   LM_L_LH8_Rsling1, LM_L_LH8_Rsling2, LM_L_LH8_Rsling3, LM_L_LH8_UnderPF, LM_L_LH9_Parts, LM_L_LH9_Playfield, LM_L_LH9_RFlip, LM_L_LH9_RFlipU, LM_L_LH9_Rsling1, LM_L_LH9_Rsling2, LM_L_LH9_Rsling3, LM_L_LH9_UnderPF, LM_L_LL_Parts, LM_L_LL_Playfield, LM_L_LL_UnderPF, LM_L_LLI_Lsling1, LM_L_LLI_Lsling2, LM_L_LLI_Lsling3, LM_L_LLI_Parts, LM_L_LLI_Playfield, LM_L_LLI_UnderPF, LM_L_LLI_swLI, LM_L_LLI_swLO, LM_L_LLO_Parts, LM_L_LLO_Playfield, LM_L_LLO_UnderPF, LM_L_LLO_swLO, LM_L_LLWiz_Parts, LM_L_LLWiz_Playfield, LM_L_LLWiz_UnderPF, LM_L_LM1_Parts, LM_L_LM1_Playfield, LM_L_LM1_TM1, LM_L_LM1_UnderPF, LM_L_LM2_Parts, LM_L_LM2_Playfield, LM_L_LM2_TM2, LM_L_LM2_UnderPF, LM_L_LM3_Asteroid1, LM_L_LM3_Asteroid2, LM_L_LM3_Asteroid3, LM_L_LM3_Asteroid4, LM_L_LM3_Playfield, LM_L_LM3_TM3, LM_L_LM3_UnderPF, LM_L_LM4_Parts, LM_L_LM4_Playfield, LM_L_LM4_TM4, LM_L_LM4_UnderPF, LM_L_LM5_Parts, LM_L_LM5_Playfield, LM_L_LM5_TM5, LM_L_LM5_UnderPF, LM_L_LMLR_Parts, LM_L_LMLR_Playfield, LM_L_LMLR_UnderPF, LM_L_LMR_Parts, _
'   LM_L_LMR_Playfield, LM_L_LMR_UnderPF, LM_L_LMR1_Parts, LM_L_LMR1_Playfield, LM_L_LMR1_RArm, LM_L_LMR1_Rsling3, LM_L_LMR1_UnderPF, LM_L_LMR2_Parts, LM_L_LMR2_Playfield, LM_L_LMR2_Rsling1, LM_L_LMR2_Rsling2, LM_L_LMR2_Rsling3, LM_L_LMR2_UnderPF, LM_L_LMet1_BR1, LM_L_LMet1_BS1, LM_L_LMet1_Parts, LM_L_LMet1_Playfield, LM_L_LMet1_TMet1, LM_L_LMet1_UnderPF, LM_L_LMet2_BmpBot, LM_L_LMet2_Parts, LM_L_LMet2_Playfield, LM_L_LMet2_TMet2, LM_L_LMet2_UnderPF, LM_L_LMet3_Parts, LM_L_LMet3_Playfield, LM_L_LMet3_TMet3, LM_L_LMet3_UnderPF, LM_L_LMet4_Parts, LM_L_LMet4_Playfield, LM_L_LMet4_TMet4, LM_L_LMet4_UnderPF, LM_L_LPC1_Asteroid1, LM_L_LPC1_GateL, LM_L_LPC1_Parts, LM_L_LPC1_Playfield, LM_L_LPC1_Ramp, LM_L_LPC1_TM2, LM_L_LPC1_UnderPF, LM_L_LPC2_Parts, LM_L_LPC2_Playfield, LM_L_LPC2_TM2, LM_L_LPC2_UnderPF, LM_L_LPC3_Parts, LM_L_LPC3_Playfield, LM_L_LPC3_UnderPF, LM_L_LPC4_Asteroid1, LM_L_LPC4_Asteroid2, LM_L_LPC4_Asteroid3, LM_L_LPC4_Asteroid4, LM_L_LPC4_Parts, LM_L_LPC4_Playfield, LM_L_LPC4_Ramp, LM_L_LPC4_TM3, _
'   LM_L_LPC4_UnderPF, LM_L_LPC4_swC1, LM_L_LPC5_Asteroid1, LM_L_LPC5_Asteroid2, LM_L_LPC5_Asteroid3, LM_L_LPC5_Asteroid4, LM_L_LPC5_Parts, LM_L_LPC5_Playfield, LM_L_LPC5_TM3, LM_L_LPC5_TM4, LM_L_LPC5_UnderPF, LM_L_LPC5_swC3, LM_L_LPF_Asteroid1, LM_L_LPF_Asteroid2, LM_L_LPF_Asteroid3, LM_L_LPF_Asteroid4, LM_L_LPF_Parts, LM_L_LPF_Playfield, LM_L_LPF_TM3, LM_L_LPF_UnderPF, LM_L_LPR1_Parts, LM_L_LPR1_Playfield, LM_L_LPR1_UnderPF, LM_L_LPR2_Parts, LM_L_LPR2_Playfield, LM_L_LPR2_UnderPF, LM_L_LPR3_Parts, LM_L_LPR3_Playfield, LM_L_LPR3_UnderPF, LM_L_LPR4_LFlip, LM_L_LPR4_LFlipU, LM_L_LPR4_Parts, LM_L_LPR4_Playfield, LM_L_LPR4_UnderPF, LM_L_LPR5_LFlipU, LM_L_LPR5_Playfield, LM_L_LPR5_RFlipU, LM_L_LPR5_UnderPF, LM_L_LPR6_Parts, LM_L_LPR6_Playfield, LM_L_LPR6_RFlipU, LM_L_LPR6_UnderPF, LM_L_LRI_Parts, LM_L_LRI_Playfield, LM_L_LRI_RArm, LM_L_LRI_Rsling1, LM_L_LRI_Rsling2, LM_L_LRI_Rsling3, LM_L_LRI_UnderPF, LM_L_LRI_swRI, LM_L_LRO_Parts, LM_L_LRO_Playfield, LM_L_LRO_UnderPF, LM_L_LRO_swRO, LM_L_LS1_BS1, LM_L_LS1_Parts, _
'   LM_L_LS1_Playfield, LM_L_LS1_TM1, LM_L_LS1_UnderPF, LM_L_LS2_BS1, LM_L_LS2_BmpBot, LM_L_LS2_Parts, LM_L_LS2_Playfield, LM_L_LS2_UnderPF, LM_L_LS3_Parts, LM_L_LS3_Playfield, LM_L_LS3_UnderPF, LM_L_LS4_Parts, LM_L_LS4_Playfield, LM_L_LS4_UnderPF, LM_L_LS5_Parts, LM_L_LS5_Playfield, LM_L_LS5_RFlip1U, LM_L_LS5_UnderPF, LM_L_LS6_Parts, LM_L_LS6_Playfield, LM_L_LS6_RFlip1, LM_L_LS6_RFlip1U, LM_L_LS6_UnderPF, LM_L_LSA_LFlip, LM_L_LSA_LFlipU, LM_L_LSA_Playfield, LM_L_LSA_RFlip, LM_L_LSA_RFlipU, LM_L_LSA_TrustPost, LM_L_LSA_UnderPF, LM_L_LSC1_Parts, LM_L_LSC1_Playfield, LM_L_LSC1_TS1, LM_L_LSC1_TS2, LM_L_LSC1_UnderPF, LM_L_LSC2_Parts, LM_L_LSC2_Playfield, LM_L_LSC2_TS1, LM_L_LSC2_TS2, LM_L_LSC2_TS3, LM_L_LSC2_UnderPF, LM_L_LSC3_Parts, LM_L_LSC3_Playfield, LM_L_LSC3_TS3, LM_L_LSC3_UnderPF, LM_L_LSL_Parts, LM_L_LSL_Playfield, LM_L_LSL_UnderPF, LM_L_LSR_Parts, LM_L_LSR_Playfield, LM_L_LSR_UnderPF, LM_L_LShip_Parts, LM_L_LShip_Ship, LM_L_LSwC1_Asteroid1, LM_L_LSwC1_Asteroid2, LM_L_LSwC1_Asteroid3, LM_L_LSwC1_Asteroid4, _
'   LM_L_LSwC1_Parts, LM_L_LSwC1_Playfield, LM_L_LSwC1_UnderPF, LM_L_LSwC1_swC1, LM_L_LSwC1_swC2, LM_L_LSwC2_Asteroid1, LM_L_LSwC2_Asteroid2, LM_L_LSwC2_Asteroid3, LM_L_LSwC2_Asteroid4, LM_L_LSwC2_Parts, LM_L_LSwC2_Playfield, LM_L_LSwC2_TM3, LM_L_LSwC2_UnderPF, LM_L_LSwC2_swC1, LM_L_LSwC2_swC2, LM_L_LSwC3_Asteroid1, LM_L_LSwC3_Asteroid2, LM_L_LSwC3_Asteroid3, LM_L_LSwC3_Asteroid4, LM_L_LSwC3_Parts, LM_L_LSwC3_Playfield, LM_L_LSwC3_UnderPF, LM_L_LSwC3_swC2, LM_L_LSwC3_swC3, LM_L_LTW1_Parts, LM_L_LTW1_Playfield, LM_L_LTW1_Ramp, LM_L_LTW1_UnderPF, LM_L_LTW2_Parts, LM_L_LTW2_Playfield, LM_L_LTW2_UnderPF, LM_L_LW1_Parts, LM_L_LW1_Playfield, LM_L_LW1_UnderPF, LM_L_LW2_Parts, LM_L_LW2_Playfield, LM_L_LW2_UnderPF, LM_L_LW3_Parts, LM_L_LW3_Playfield, LM_L_LW3_UnderPF, LM_L_LW4_Parts, LM_L_LW4_Playfield, LM_L_LW4_UnderPF, LM_L_LW5_Parts, LM_L_LW5_Playfield, LM_L_LW5_UnderPF, LM_L_LW6_Parts, LM_L_LW6_Playfield, LM_L_LW6_UnderPF, LM_L_LW7_Parts, LM_L_LW7_Playfield, LM_L_LW7_UnderPF, LM_L_LW8_Parts, LM_L_LW8_Playfield, _
'   LM_L_LW8_UnderPF, LM_L_LW9_Parts, LM_L_LW9_Playfield, LM_L_LW9_UnderPF, LM_L_LWiz_Parts, LM_L_LWiz_Playfield, LM_L_LWiz_UnderPF, LM_L_LX_GateR, LM_L_LX_Parts, LM_L_LX_Playfield, LM_L_LX_TM4, LM_L_LX_UnderPF, LM_L_Lspot1_Asteroid1, LM_L_Lspot1_Asteroid2, LM_L_Lspot1_Asteroid3, LM_L_Lspot1_Asteroid4, LM_L_Lspot1_BR2, LM_L_Lspot1_BS3, LM_L_Lspot1_BmpBot, LM_L_Lspot1_GateR, LM_L_Lspot1_Layer1, LM_L_Lspot1_Parts, LM_L_Lspot1_Playfield, LM_L_Lspot1_Ramp, LM_L_Lspot1_Spin, LM_L_Lspot1_SpinU, LM_L_Lspot1_SpinWire, LM_L_Lspot1_TM3, LM_L_Lspot1_TM4, LM_L_Lspot1_UnderPF, LM_L_Lspot1_swC1, LM_L_Lspot1_swC2, LM_L_Lspot1_swC3, LM_L_Lspot1_swI2, LM_Stars_Parts, LM_Stars_Ramp)
' Dim BG_All: BG_All=Array(BM_Asteroid1, BM_BR1, BM_BR2, BM_BR3, BM_BS1, BM_BS2, BM_BS3, BM_BmpBot, BM_BmpTop, BM_Card, BM_DiverterPin, BM_Gate2, BM_GateL, BM_GateR, BM_LArm, BM_LFlip, BM_LFlipU, BM_Layer1, BM_LockPin, BM_Lsling1, BM_Lsling2, BM_Lsling3, BM_Parts, BM_Playfield, BM_RArm, BM_RFlip, BM_RFlip1, BM_RFlip1U, BM_RFlipU, BM_Rails, BM_Ramp, BM_Rsling1, BM_Rsling2, BM_Rsling3, BM_Screen, BM_Ship, BM_Spin, BM_SpinU, BM_SpinWire, BM_TM1, BM_TM2, BM_TM3, BM_TM4, BM_TM5, BM_TMet1, BM_TMet2, BM_TMet3, BM_TMet4, BM_TS1, BM_TS2, BM_TS3, BM_TrustPost, BM_UnderPF, BM_swC1, BM_swC2, BM_swC3, BM_swI1, BM_swI2, BM_swL1, BM_swL2, BM_swLB, BM_swLI, BM_swLO, BM_swP1, BM_swP2, BM_swR1, BM_swR2, BM_swRI, BM_swRO, LM_F_FL1_Asteroid1, LM_F_FL1_Asteroid2, LM_F_FL1_Asteroid3, LM_F_FL1_Asteroid4, LM_F_FL1_BR2, LM_F_FL1_BR3, LM_F_FL1_BS2, LM_F_FL1_BS3, LM_F_FL1_BmpBot, LM_F_FL1_LockPin, LM_F_FL1_Parts, LM_F_FL1_Playfield, LM_F_FL1_RFlip1, LM_F_FL1_RFlip1U, LM_F_FL1_TM4, LM_F_FL1_TM5, LM_F_FL1_UnderPF, LM_F_FL1_swC3, _
'   LM_F_FL1_swR1, LM_F_FL1_swR2, LM_F_FL2_Asteroid1, LM_F_FL2_Asteroid2, LM_F_FL2_Asteroid3, LM_F_FL2_Asteroid4, LM_F_FL2_BS2, LM_F_FL2_BS3, LM_F_FL2_BmpBot, LM_F_FL2_GateL, LM_F_FL2_Parts, LM_F_FL2_Playfield, LM_F_FL2_Ramp, LM_F_FL2_Spin, LM_F_FL2_SpinU, LM_F_FL2_SpinWire, LM_F_FL2_TM3, LM_F_FL2_swC1, LM_F_FL2_swI1, LM_F_FL2_swI2, LM_F_FL2_swL2, LM_F_FL2_swR2, LM_F_FL3_Asteroid1, LM_F_FL3_Asteroid2, LM_F_FL3_Asteroid3, LM_F_FL3_Asteroid4, LM_F_FL3_BR2, LM_F_FL3_BR3, LM_F_FL3_BS2, LM_F_FL3_BS3, LM_F_FL3_BmpBot, LM_F_FL3_DiverterPin, LM_F_FL3_Parts, LM_F_FL3_Playfield, LM_F_FL3_Ramp, LM_F_FL3_Spin, LM_F_FL3_SpinU, LM_F_FL3_TM2, LM_F_FL3_TM3, LM_F_FL3_UnderPF, LM_F_FL3_swC1, LM_F_FL3_swC2, LM_F_FL3_swC3, LM_F_FL3_swI1, LM_F_FL3_swI2, LM_F_FL3_swL2, LM_F_FL3_swR1, LM_F_FL4_Asteroid1, LM_F_FL4_Asteroid2, LM_F_FL4_Asteroid3, LM_F_FL4_Asteroid4, LM_F_FL4_BS3, LM_F_FL4_BmpBot, LM_F_FL4_Layer1, LM_F_FL4_Parts, LM_F_FL4_Playfield, LM_F_FL4_RFlip1, LM_F_FL4_RFlip1U, LM_F_FL4_Ramp, LM_F_FL4_Spin, LM_F_FL4_SpinU, _
'   LM_F_FL4_TM2, LM_F_FL4_TM3, LM_F_FL4_TM4, LM_F_FL4_UnderPF, LM_F_FL4_swC1, LM_F_FL4_swC2, LM_F_FL4_swC3, LM_F_FL5a_LArm, LM_F_FL5a_LFlip, LM_F_FL5a_LFlipU, LM_F_FL5a_Lsling1, LM_F_FL5a_Lsling2, LM_F_FL5a_Lsling3, LM_F_FL5a_Parts, LM_F_FL5a_Playfield, LM_F_FL5a_RFlip, LM_F_FL5a_RFlipU, LM_F_FL5a_UnderPF, LM_F_FL5a_swLO, LM_F_FL5b_BR1, LM_F_FL5b_LArm, LM_F_FL5b_LFlip, LM_F_FL5b_LFlipU, LM_F_FL5b_Lsling1, LM_F_FL5b_Lsling2, LM_F_FL5b_Lsling3, LM_F_FL5b_Parts, LM_F_FL5b_Playfield, LM_F_FL5b_RFlipU, LM_F_FL5b_UnderPF, LM_F_FL5c_LArm, LM_F_FL5c_LFlip, LM_F_FL5c_LFlipU, LM_F_FL5c_Lsling1, LM_F_FL5c_Lsling2, LM_F_FL5c_Lsling3, LM_F_FL5c_Parts, LM_F_FL5c_Playfield, LM_F_FL5c_UnderPF, LM_F_FL5d_LArm, LM_F_FL5d_LFlip, LM_F_FL5d_LFlipU, LM_F_FL5d_Lsling1, LM_F_FL5d_Lsling2, LM_F_FL5d_Lsling3, LM_F_FL5d_Parts, LM_F_FL5d_Playfield, LM_F_FL5d_UnderPF, LM_F_FL5e_BR1, LM_F_FL5e_LArm, LM_F_FL5e_LFlip, LM_F_FL5e_LFlipU, LM_F_FL5e_Lsling1, LM_F_FL5e_Lsling2, LM_F_FL5e_Lsling3, LM_F_FL5e_Parts, LM_F_FL5e_Playfield, _
'   LM_F_FL5e_UnderPF, LM_F_FL5f_LArm, LM_F_FL5f_LFlip, LM_F_FL5f_LFlipU, LM_F_FL5f_Lsling1, LM_F_FL5f_Lsling2, LM_F_FL5f_Lsling3, LM_F_FL5f_Parts, LM_F_FL5f_Playfield, LM_F_FL5f_UnderPF, LM_F_FL5g_LArm, LM_F_FL5g_LFlip, LM_F_FL5g_LFlipU, LM_F_FL5g_Lsling1, LM_F_FL5g_Lsling2, LM_F_FL5g_Lsling3, LM_F_FL5g_Parts, LM_F_FL5g_Playfield, LM_F_FL5g_UnderPF, LM_F_FL5g_swLO, LM_F_FL5h_LArm, LM_F_FL5h_LFlip, LM_F_FL5h_LFlipU, LM_F_FL5h_Lsling1, LM_F_FL5h_Lsling2, LM_F_FL5h_Lsling3, LM_F_FL5h_Parts, LM_F_FL5h_Playfield, LM_F_FL5h_RFlipU, LM_F_FL5h_UnderPF, LM_F_FL5h_swLI, LM_F_FL5h_swLO, LM_F_FL6a_LFlip, LM_F_FL6a_LFlipU, LM_F_FL6a_Parts, LM_F_FL6a_Playfield, LM_F_FL6a_RArm, LM_F_FL6a_RFlip, LM_F_FL6a_RFlipU, LM_F_FL6a_Rsling1, LM_F_FL6a_Rsling2, LM_F_FL6a_Rsling3, LM_F_FL6b_LFlip, LM_F_FL6b_LFlipU, LM_F_FL6b_Parts, LM_F_FL6b_Playfield, LM_F_FL6b_RArm, LM_F_FL6b_RFlip, LM_F_FL6b_RFlipU, LM_F_FL6b_Rsling1, LM_F_FL6b_Rsling2, LM_F_FL6b_Rsling3, LM_F_FL6c_Parts, LM_F_FL6c_Playfield, LM_F_FL6c_RArm, LM_F_FL6c_RFlip, _
'   LM_F_FL6c_RFlipU, LM_F_FL6c_Rsling1, LM_F_FL6c_Rsling2, LM_F_FL6c_Rsling3, LM_F_FL6d_Parts, LM_F_FL6d_Playfield, LM_F_FL6d_RArm, LM_F_FL6d_RFlip, LM_F_FL6d_RFlipU, LM_F_FL6d_Rsling1, LM_F_FL6d_Rsling2, LM_F_FL6d_Rsling3, LM_F_FL6e_Parts, LM_F_FL6e_Playfield, LM_F_FL6e_RArm, LM_F_FL6e_RFlip, LM_F_FL6e_RFlipU, LM_F_FL6e_Rsling1, LM_F_FL6e_Rsling2, LM_F_FL6e_Rsling3, LM_F_FL6f_Parts, LM_F_FL6f_Playfield, LM_F_FL6f_RArm, LM_F_FL6f_RFlip, LM_F_FL6f_RFlipU, LM_F_FL6f_Rsling1, LM_F_FL6f_Rsling2, LM_F_FL6f_Rsling3, LM_F_FL6g_LFlipU, LM_F_FL6g_Parts, LM_F_FL6g_Playfield, LM_F_FL6g_RArm, LM_F_FL6g_RFlipU, LM_F_FL6g_Rsling1, LM_F_FL6g_Rsling2, LM_F_FL6g_Rsling3, LM_F_FL6h_Parts, LM_F_FL6h_Playfield, LM_F_FL6h_RArm, LM_F_FL6h_RFlip, LM_F_FL6h_RFlipU, LM_F_FL6h_Rsling1, LM_F_FL6h_Rsling2, LM_F_FL6h_Rsling3, LM_F_FL7a_Asteroid1, LM_F_FL7a_Asteroid2, LM_F_FL7a_Asteroid3, LM_F_FL7a_Asteroid4, LM_F_FL7a_BR2, LM_F_FL7a_BR3, LM_F_FL7a_BS2, LM_F_FL7a_BS3, LM_F_FL7a_BmpBot, LM_F_FL7a_DiverterPin, LM_F_FL7a_GateL, LM_F_FL7a_GateR, _
'   LM_F_FL7a_Layer1, LM_F_FL7a_Parts, LM_F_FL7a_Playfield, LM_F_FL7a_Ramp, LM_F_FL7a_Ship, LM_F_FL7a_Spin, LM_F_FL7a_SpinU, LM_F_FL7a_SpinWire, LM_F_FL7a_TM2, LM_F_FL7a_TM3, LM_F_FL7a_TM4, LM_F_FL7a_UnderPF, LM_F_FL7a_swC1, LM_F_FL7a_swC2, LM_F_FL7a_swC3, LM_F_FL7a_swI1, LM_F_FL7a_swI2, LM_F_FL7a_swL1, LM_F_FL7a_swR1, LM_GI_gi01_LArm, LM_GI_gi01_LFlip, LM_GI_gi01_LFlipU, LM_GI_gi01_Lsling1, LM_GI_gi01_Lsling2, LM_GI_gi01_Lsling3, LM_GI_gi01_Parts, LM_GI_gi01_Playfield, LM_GI_gi01_RArm, LM_GI_gi01_RFlip, LM_GI_gi01_RFlipU, LM_GI_gi01_Rsling1, LM_GI_gi01_Rsling3, LM_GI_gi01_UnderPF, LM_GI_gi01_swLI, LM_GI_gi01_swLO, LM_GI_gi02_BR1, LM_GI_gi02_LArm, LM_GI_gi02_LFlip, LM_GI_gi02_LFlipU, LM_GI_gi02_Lsling1, LM_GI_gi02_Lsling2, LM_GI_gi02_Lsling3, LM_GI_gi02_Parts, LM_GI_gi02_Playfield, LM_GI_gi02_RArm, LM_GI_gi02_RFlip, LM_GI_gi02_RFlipU, LM_GI_gi02_Rsling3, LM_GI_gi02_UnderPF, LM_GI_gi02_swLI, LM_GI_gi02_swLO, LM_GI_gi03_LArm, LM_GI_gi03_LFlip, LM_GI_gi03_LFlipU, LM_GI_gi03_Lsling1, LM_GI_gi03_Lsling2, _
'   LM_GI_gi03_Lsling3, LM_GI_gi03_Parts, LM_GI_gi03_Playfield, LM_GI_gi03_RFlip, LM_GI_gi03_RFlipU, LM_GI_gi03_Rsling2, LM_GI_gi03_Rsling3, LM_GI_gi03_swLI, LM_GI_gi04_LArm, LM_GI_gi04_LFlip, LM_GI_gi04_LFlipU, LM_GI_gi04_Lsling1, LM_GI_gi04_Lsling2, LM_GI_gi04_Lsling3, LM_GI_gi04_Parts, LM_GI_gi04_Playfield, LM_GI_gi04_Rsling3, LM_GI_gi04_UnderPF, LM_GI_gi04_swLI, LM_GI_gi04_swLO, LM_GI_gi05_LFlip, LM_GI_gi05_LFlipU, LM_GI_gi05_Parts, LM_GI_gi05_Playfield, LM_GI_gi05_RArm, LM_GI_gi05_RFlip, LM_GI_gi05_RFlipU, LM_GI_gi05_Rsling1, LM_GI_gi05_Rsling2, LM_GI_gi05_Rsling3, LM_GI_gi05_UnderPF, LM_GI_gi05_swRI, LM_GI_gi05_swRO, LM_GI_gi06_Parts, LM_GI_gi06_Playfield, LM_GI_gi06_RArm, LM_GI_gi06_RFlip, LM_GI_gi06_RFlipU, LM_GI_gi06_Rsling1, LM_GI_gi06_Rsling2, LM_GI_gi06_Rsling3, LM_GI_gi06_swRI, LM_GI_gi06_swRO, LM_GI_gi07_LFlip, LM_GI_gi07_LFlipU, LM_GI_gi07_Lsling2, LM_GI_gi07_Lsling3, LM_GI_gi07_Parts, LM_GI_gi07_Playfield, LM_GI_gi07_RArm, LM_GI_gi07_RFlip, LM_GI_gi07_RFlipU, LM_GI_gi07_Rsling1, _
'   LM_GI_gi07_Rsling2, LM_GI_gi07_Rsling3, LM_GI_gi07_swRI, LM_GI_gi08_Lsling3, LM_GI_gi08_Parts, LM_GI_gi08_Playfield, LM_GI_gi08_RArm, LM_GI_gi08_RFlip, LM_GI_gi08_RFlipU, LM_GI_gi08_Rsling1, LM_GI_gi08_Rsling2, LM_GI_gi08_Rsling3, LM_GI_gi08_UnderPF, LM_GI_gi08_swRI, LM_GI_gi08_swRO, LM_GI_gi09_Parts, LM_GI_gi09_Playfield, LM_GI_gi09_RArm, LM_GI_gi09_swLI, LM_GI_gi10_Gate2, LM_GI_gi10_Parts, LM_GI_gi10_Playfield, LM_GI_gi10_RArm, LM_GI_gi10_RFlip1U, LM_GI_gi10_TS1, LM_GI_gi10_TS2, LM_GI_gi10_TS3, LM_GI_gi10_UnderPF, LM_GI_gi10_swRO, LM_GI_gi11_BS1, LM_GI_gi11_Parts, LM_GI_gi11_Playfield, LM_GI_gi12_BmpBot, LM_GI_gi12_Parts, LM_GI_gi12_Playfield, LM_GI_gi13_BR2, LM_GI_gi13_BR3, LM_GI_gi13_BS2, LM_GI_gi13_BS3, LM_GI_gi13_BmpBot, LM_GI_gi13_Parts, LM_GI_gi13_Playfield, LM_GI_gi13_RFlip1, LM_GI_gi13_RFlip1U, LM_GI_gi13_TM4, LM_GI_gi13_TM5, LM_GI_gi13_UnderPF, LM_GI_gi13_swR1, LM_GI_gi14_Gate2, LM_GI_gi14_LockPin, LM_GI_gi14_Parts, LM_GI_gi14_Playfield, LM_GI_gi14_RFlip1, LM_GI_gi14_RFlip1U, LM_GI_gi15_LockPin, _
'   LM_GI_gi15_Parts, LM_GI_gi15_Playfield, LM_GI_gi15_RFlip1, LM_GI_gi15_RFlip1U, LM_GI_gi15_UnderPF, LM_GI_gi15_swR1, LM_GI_gi16_Parts, LM_GI_gi16_Playfield, LM_GI_gi16_Ramp, LM_GI_gi17_BS2, LM_GI_gi17_BmpBot, LM_GI_gi17_Parts, LM_GI_gi17_Playfield, LM_GI_gi18_Parts, LM_GI_gi18_Playfield, LM_GI_gi19_LockPin, LM_GI_gi19_Parts, LM_GI_gi19_Playfield, LM_GI_gi19_RFlip1, LM_GI_gi19_RFlip1U, LM_GI_gi19_UnderPF, LM_GI_gi20_Asteroid1, LM_GI_gi20_Asteroid2, LM_GI_gi20_Asteroid3, LM_GI_gi20_Asteroid4, LM_GI_gi20_BS1, LM_GI_gi20_GateL, LM_GI_gi20_Parts, LM_GI_gi20_Playfield, LM_GI_gi20_Ramp, LM_GI_gi20_Spin, LM_GI_gi20_SpinU, LM_GI_gi20_SpinWire, LM_GI_gi20_TM2, LM_GI_gi20_UnderPF, LM_GI_gi20_swI1, LM_GI_gi20_swL1, LM_GI_gi20_swL2, LM_GI_gi21_Asteroid1, LM_GI_gi21_Asteroid2, LM_GI_gi21_Asteroid3, LM_GI_gi21_Asteroid4, LM_GI_gi21_GateL, LM_GI_gi21_Parts, LM_GI_gi21_Playfield, LM_GI_gi21_Ramp, LM_GI_gi21_Spin, LM_GI_gi21_SpinU, LM_GI_gi21_SpinWire, LM_GI_gi21_swL1, LM_GI_gi21_swL2, LM_GI_gi22_Asteroid1, _
'   LM_GI_gi22_Asteroid2, LM_GI_gi22_Asteroid3, LM_GI_gi22_Asteroid4, LM_GI_gi22_BR2, LM_GI_gi22_BR3, LM_GI_gi22_BS2, LM_GI_gi22_BS3, LM_GI_gi22_BmpBot, LM_GI_gi22_Layer1, LM_GI_gi22_Parts, LM_GI_gi22_Playfield, LM_GI_gi22_TM4, LM_GI_gi22_UnderPF, LM_GI_gi22_swC3, LM_GI_gi22_swR2, LM_GI_giapron_LFlip, LM_GI_giapron_LFlipU, LM_GI_giapron_Parts, LM_GI_giapron_Playfield, LM_GI_giapron_RFlip, LM_GI_giapron_RFlipU, LM_GI_giapron_Rsling1, LM_GI_giapron_Rsling2, LM_GI_giapron_Rsling3, LM_GI_giapron_Screen, LM_GI_giapron_TrustPost, LM_GI_giapron_UnderPF, LM_GI_giapron_swP1, LM_L_LB1_BR1, LM_L_LB1_BS1, LM_L_LB1_BmpBot, LM_L_LB1_Parts, LM_L_LB1_Playfield, LM_L_LB1_Ship, LM_L_LB1_TM1, LM_L_LB1_swLB, LM_L_LB2_Asteroid1, LM_L_LB2_Asteroid2, LM_L_LB2_Asteroid3, LM_L_LB2_Asteroid4, LM_L_LB2_BR2, LM_L_LB2_BR3, LM_L_LB2_BS2, LM_L_LB2_BS3, LM_L_LB2_BmpBot, LM_L_LB2_DiverterPin, LM_L_LB2_Layer1, LM_L_LB2_Parts, LM_L_LB2_Playfield, LM_L_LB2_UnderPF, LM_L_LB2_swR2, LM_L_LB3_Asteroid1, LM_L_LB3_Asteroid2, LM_L_LB3_Asteroid3, _
'   LM_L_LB3_Asteroid4, LM_L_LB3_BR2, LM_L_LB3_BR3, LM_L_LB3_BS2, LM_L_LB3_BS3, LM_L_LB3_BmpBot, LM_L_LB3_DiverterPin, LM_L_LB3_Layer1, LM_L_LB3_Parts, LM_L_LB3_Playfield, LM_L_LB3_TM4, LM_L_LB3_UnderPF, LM_L_LB3_swC3, LM_L_LB3_swI2, LM_L_LC1_LFlip, LM_L_LC1_LFlipU, LM_L_LC1_Lsling1, LM_L_LC1_Lsling2, LM_L_LC1_Lsling3, LM_L_LC1_Parts, LM_L_LC1_Playfield, LM_L_LC1_UnderPF, LM_L_LC2_LFlip, LM_L_LC2_LFlipU, LM_L_LC2_Playfield, LM_L_LC2_UnderPF, LM_L_LC3_LFlip, LM_L_LC3_LFlipU, LM_L_LC3_Playfield, LM_L_LC3_RFlipU, LM_L_LC3_UnderPF, LM_L_LC4_LFlip, LM_L_LC4_LFlipU, LM_L_LC4_Playfield, LM_L_LC4_RFlipU, LM_L_LC4_UnderPF, LM_L_LC5_LFlipU, LM_L_LC5_Playfield, LM_L_LC5_RFlip, LM_L_LC5_RFlipU, LM_L_LC5_UnderPF, LM_L_LC6_LFlipU, LM_L_LC6_Playfield, LM_L_LC6_RFlip, LM_L_LC6_RFlipU, LM_L_LC6_UnderPF, LM_L_LC7_Playfield, LM_L_LC7_RFlip, LM_L_LC7_RFlipU, LM_L_LC7_UnderPF, LM_L_LC8_Parts, LM_L_LC8_Playfield, LM_L_LC8_RFlip, LM_L_LC8_RFlipU, LM_L_LC8_Rsling1, LM_L_LC8_Rsling2, LM_L_LC8_Rsling3, LM_L_LC8_UnderPF, LM_L_LCC1_Parts, _
'   LM_L_LCC1_Playfield, LM_L_LCC1_Ramp, LM_L_LCC1_UnderPF, LM_L_LCC1_swL1, LM_L_LCC2_Parts, LM_L_LCC2_Playfield, LM_L_LCC2_UnderPF, LM_L_LCC3_Parts, LM_L_LCC3_Playfield, LM_L_LCC3_UnderPF, LM_L_LCR1_Parts, LM_L_LCR1_Playfield, LM_L_LCR1_UnderPF, LM_L_LCR2_Lsling1, LM_L_LCR2_Lsling2, LM_L_LCR2_Lsling3, LM_L_LCR2_Parts, LM_L_LCR2_Playfield, LM_L_LCR2_UnderPF, LM_L_LCWiz_Parts, LM_L_LCWiz_Playfield, LM_L_LCWiz_UnderPF, LM_L_LDP_BR2, LM_L_LDP_BR3, LM_L_LDP_BS2, LM_L_LDP_BS3, LM_L_LDP_BmpBot, LM_L_LDP_DiverterPin, LM_L_LDP_Parts, LM_L_LDP_Playfield, LM_L_LDP_UnderPF, LM_L_LDS_Gate2, LM_L_LDS_Parts, LM_L_LDS_Playfield, LM_L_LDS_RFlip1, LM_L_LDS_RFlip1U, LM_L_LDS_UnderPF, LM_L_LEBR_Parts, LM_L_LEBR_Playfield, LM_L_LEBR_UnderPF, LM_L_LF1_Parts, LM_L_LF1_Playfield, LM_L_LF1_UnderPF, LM_L_LF1_swR1, LM_L_LF2_Parts, LM_L_LF2_Playfield, LM_L_LF2_TM5, LM_L_LF2_UnderPF, LM_L_LF3_Parts, LM_L_LF3_Playfield, LM_L_LF3_TM5, LM_L_LF3_UnderPF, LM_L_LH1_LFlip, LM_L_LH1_LFlipU, LM_L_LH1_Lsling1, LM_L_LH1_Lsling2, LM_L_LH1_Lsling3, _
'   LM_L_LH1_Parts, LM_L_LH1_Playfield, LM_L_LH1_UnderPF, LM_L_LH2_LFlip, LM_L_LH2_LFlipU, LM_L_LH2_Lsling1, LM_L_LH2_Lsling2, LM_L_LH2_Lsling3, LM_L_LH2_Parts, LM_L_LH2_Playfield, LM_L_LH2_UnderPF, LM_L_LH3_LFlip, LM_L_LH3_LFlipU, LM_L_LH3_Parts, LM_L_LH3_Playfield, LM_L_LH3_UnderPF, LM_L_LH4_LFlip, LM_L_LH4_LFlipU, LM_L_LH4_Playfield, LM_L_LH4_RFlipU, LM_L_LH4_UnderPF, LM_L_LH5_LFlip, LM_L_LH5_LFlipU, LM_L_LH5_Parts, LM_L_LH5_Playfield, LM_L_LH5_RFlip, LM_L_LH5_RFlipU, LM_L_LH5_UnderPF, LM_L_LH6_LFlipU, LM_L_LH6_Playfield, LM_L_LH6_RFlip, LM_L_LH6_RFlipU, LM_L_LH6_UnderPF, LM_L_LH7_Playfield, LM_L_LH7_RFlip, LM_L_LH7_RFlipU, LM_L_LH7_UnderPF, LM_L_LH8_Playfield, LM_L_LH8_RFlip, LM_L_LH8_RFlipU, LM_L_LH8_Rsling1, LM_L_LH8_Rsling2, LM_L_LH8_Rsling3, LM_L_LH8_UnderPF, LM_L_LH9_Parts, LM_L_LH9_Playfield, LM_L_LH9_RFlip, LM_L_LH9_RFlipU, LM_L_LH9_Rsling1, LM_L_LH9_Rsling2, LM_L_LH9_Rsling3, LM_L_LH9_UnderPF, LM_L_LL_Parts, LM_L_LL_Playfield, LM_L_LL_UnderPF, LM_L_LLI_Lsling1, LM_L_LLI_Lsling2, LM_L_LLI_Lsling3, _
'   LM_L_LLI_Parts, LM_L_LLI_Playfield, LM_L_LLI_UnderPF, LM_L_LLI_swLI, LM_L_LLI_swLO, LM_L_LLO_Parts, LM_L_LLO_Playfield, LM_L_LLO_UnderPF, LM_L_LLO_swLO, LM_L_LLWiz_Parts, LM_L_LLWiz_Playfield, LM_L_LLWiz_UnderPF, LM_L_LM1_Parts, LM_L_LM1_Playfield, LM_L_LM1_TM1, LM_L_LM1_UnderPF, LM_L_LM2_Parts, LM_L_LM2_Playfield, LM_L_LM2_TM2, LM_L_LM2_UnderPF, LM_L_LM3_Asteroid1, LM_L_LM3_Asteroid2, LM_L_LM3_Asteroid3, LM_L_LM3_Asteroid4, LM_L_LM3_Playfield, LM_L_LM3_TM3, LM_L_LM3_UnderPF, LM_L_LM4_Parts, LM_L_LM4_Playfield, LM_L_LM4_TM4, LM_L_LM4_UnderPF, LM_L_LM5_Parts, LM_L_LM5_Playfield, LM_L_LM5_TM5, LM_L_LM5_UnderPF, LM_L_LMLR_Parts, LM_L_LMLR_Playfield, LM_L_LMLR_UnderPF, LM_L_LMR_Parts, LM_L_LMR_Playfield, LM_L_LMR_UnderPF, LM_L_LMR1_Parts, LM_L_LMR1_Playfield, LM_L_LMR1_RArm, LM_L_LMR1_Rsling3, LM_L_LMR1_UnderPF, LM_L_LMR2_Parts, LM_L_LMR2_Playfield, LM_L_LMR2_Rsling1, LM_L_LMR2_Rsling2, LM_L_LMR2_Rsling3, LM_L_LMR2_UnderPF, LM_L_LMet1_BR1, LM_L_LMet1_BS1, LM_L_LMet1_Parts, LM_L_LMet1_Playfield, LM_L_LMet1_TMet1, _
'   LM_L_LMet1_UnderPF, LM_L_LMet2_BmpBot, LM_L_LMet2_Parts, LM_L_LMet2_Playfield, LM_L_LMet2_TMet2, LM_L_LMet2_UnderPF, LM_L_LMet3_Parts, LM_L_LMet3_Playfield, LM_L_LMet3_TMet3, LM_L_LMet3_UnderPF, LM_L_LMet4_Parts, LM_L_LMet4_Playfield, LM_L_LMet4_TMet4, LM_L_LMet4_UnderPF, LM_L_LPC1_Asteroid1, LM_L_LPC1_GateL, LM_L_LPC1_Parts, LM_L_LPC1_Playfield, LM_L_LPC1_Ramp, LM_L_LPC1_TM2, LM_L_LPC1_UnderPF, LM_L_LPC2_Parts, LM_L_LPC2_Playfield, LM_L_LPC2_TM2, LM_L_LPC2_UnderPF, LM_L_LPC3_Parts, LM_L_LPC3_Playfield, LM_L_LPC3_UnderPF, LM_L_LPC4_Asteroid1, LM_L_LPC4_Asteroid2, LM_L_LPC4_Asteroid3, LM_L_LPC4_Asteroid4, LM_L_LPC4_Parts, LM_L_LPC4_Playfield, LM_L_LPC4_Ramp, LM_L_LPC4_TM3, LM_L_LPC4_UnderPF, LM_L_LPC4_swC1, LM_L_LPC5_Asteroid1, LM_L_LPC5_Asteroid2, LM_L_LPC5_Asteroid3, LM_L_LPC5_Asteroid4, LM_L_LPC5_Parts, LM_L_LPC5_Playfield, LM_L_LPC5_TM3, LM_L_LPC5_TM4, LM_L_LPC5_UnderPF, LM_L_LPC5_swC3, LM_L_LPF_Asteroid1, LM_L_LPF_Asteroid2, LM_L_LPF_Asteroid3, LM_L_LPF_Asteroid4, LM_L_LPF_Parts, LM_L_LPF_Playfield, _
'   LM_L_LPF_TM3, LM_L_LPF_UnderPF, LM_L_LPR1_Parts, LM_L_LPR1_Playfield, LM_L_LPR1_UnderPF, LM_L_LPR2_Parts, LM_L_LPR2_Playfield, LM_L_LPR2_UnderPF, LM_L_LPR3_Parts, LM_L_LPR3_Playfield, LM_L_LPR3_UnderPF, LM_L_LPR4_LFlip, LM_L_LPR4_LFlipU, LM_L_LPR4_Parts, LM_L_LPR4_Playfield, LM_L_LPR4_UnderPF, LM_L_LPR5_LFlipU, LM_L_LPR5_Playfield, LM_L_LPR5_RFlipU, LM_L_LPR5_UnderPF, LM_L_LPR6_Parts, LM_L_LPR6_Playfield, LM_L_LPR6_RFlipU, LM_L_LPR6_UnderPF, LM_L_LRI_Parts, LM_L_LRI_Playfield, LM_L_LRI_RArm, LM_L_LRI_Rsling1, LM_L_LRI_Rsling2, LM_L_LRI_Rsling3, LM_L_LRI_UnderPF, LM_L_LRI_swRI, LM_L_LRO_Parts, LM_L_LRO_Playfield, LM_L_LRO_UnderPF, LM_L_LRO_swRO, LM_L_LS1_BS1, LM_L_LS1_Parts, LM_L_LS1_Playfield, LM_L_LS1_TM1, LM_L_LS1_UnderPF, LM_L_LS2_BS1, LM_L_LS2_BmpBot, LM_L_LS2_Parts, LM_L_LS2_Playfield, LM_L_LS2_UnderPF, LM_L_LS3_Parts, LM_L_LS3_Playfield, LM_L_LS3_UnderPF, LM_L_LS4_Parts, LM_L_LS4_Playfield, LM_L_LS4_UnderPF, LM_L_LS5_Parts, LM_L_LS5_Playfield, LM_L_LS5_RFlip1U, LM_L_LS5_UnderPF, LM_L_LS6_Parts, _
'   LM_L_LS6_Playfield, LM_L_LS6_RFlip1, LM_L_LS6_RFlip1U, LM_L_LS6_UnderPF, LM_L_LSA_LFlip, LM_L_LSA_LFlipU, LM_L_LSA_Playfield, LM_L_LSA_RFlip, LM_L_LSA_RFlipU, LM_L_LSA_TrustPost, LM_L_LSA_UnderPF, LM_L_LSC1_Parts, LM_L_LSC1_Playfield, LM_L_LSC1_TS1, LM_L_LSC1_TS2, LM_L_LSC1_UnderPF, LM_L_LSC2_Parts, LM_L_LSC2_Playfield, LM_L_LSC2_TS1, LM_L_LSC2_TS2, LM_L_LSC2_TS3, LM_L_LSC2_UnderPF, LM_L_LSC3_Parts, LM_L_LSC3_Playfield, LM_L_LSC3_TS3, LM_L_LSC3_UnderPF, LM_L_LSL_Parts, LM_L_LSL_Playfield, LM_L_LSL_UnderPF, LM_L_LSR_Parts, LM_L_LSR_Playfield, LM_L_LSR_UnderPF, LM_L_LShip_Parts, LM_L_LShip_Ship, LM_L_LSwC1_Asteroid1, LM_L_LSwC1_Asteroid2, LM_L_LSwC1_Asteroid3, LM_L_LSwC1_Asteroid4, LM_L_LSwC1_Parts, LM_L_LSwC1_Playfield, LM_L_LSwC1_UnderPF, LM_L_LSwC1_swC1, LM_L_LSwC1_swC2, LM_L_LSwC2_Asteroid1, LM_L_LSwC2_Asteroid2, LM_L_LSwC2_Asteroid3, LM_L_LSwC2_Asteroid4, LM_L_LSwC2_Parts, LM_L_LSwC2_Playfield, LM_L_LSwC2_TM3, LM_L_LSwC2_UnderPF, LM_L_LSwC2_swC1, LM_L_LSwC2_swC2, LM_L_LSwC3_Asteroid1, LM_L_LSwC3_Asteroid2, _
'   LM_L_LSwC3_Asteroid3, LM_L_LSwC3_Asteroid4, LM_L_LSwC3_Parts, LM_L_LSwC3_Playfield, LM_L_LSwC3_UnderPF, LM_L_LSwC3_swC2, LM_L_LSwC3_swC3, LM_L_LTW1_Parts, LM_L_LTW1_Playfield, LM_L_LTW1_Ramp, LM_L_LTW1_UnderPF, LM_L_LTW2_Parts, LM_L_LTW2_Playfield, LM_L_LTW2_UnderPF, LM_L_LW1_Parts, LM_L_LW1_Playfield, LM_L_LW1_UnderPF, LM_L_LW2_Parts, LM_L_LW2_Playfield, LM_L_LW2_UnderPF, LM_L_LW3_Parts, LM_L_LW3_Playfield, LM_L_LW3_UnderPF, LM_L_LW4_Parts, LM_L_LW4_Playfield, LM_L_LW4_UnderPF, LM_L_LW5_Parts, LM_L_LW5_Playfield, LM_L_LW5_UnderPF, LM_L_LW6_Parts, LM_L_LW6_Playfield, LM_L_LW6_UnderPF, LM_L_LW7_Parts, LM_L_LW7_Playfield, LM_L_LW7_UnderPF, LM_L_LW8_Parts, LM_L_LW8_Playfield, LM_L_LW8_UnderPF, LM_L_LW9_Parts, LM_L_LW9_Playfield, LM_L_LW9_UnderPF, LM_L_LWiz_Parts, LM_L_LWiz_Playfield, LM_L_LWiz_UnderPF, LM_L_LX_GateR, LM_L_LX_Parts, LM_L_LX_Playfield, LM_L_LX_TM4, LM_L_LX_UnderPF, LM_L_Lspot1_Asteroid1, LM_L_Lspot1_Asteroid2, LM_L_Lspot1_Asteroid3, LM_L_Lspot1_Asteroid4, LM_L_Lspot1_BR2, LM_L_Lspot1_BS3, _
'   LM_L_Lspot1_BmpBot, LM_L_Lspot1_GateR, LM_L_Lspot1_Layer1, LM_L_Lspot1_Parts, LM_L_Lspot1_Playfield, LM_L_Lspot1_Ramp, LM_L_Lspot1_Spin, LM_L_Lspot1_SpinU, LM_L_Lspot1_SpinWire, LM_L_Lspot1_TM3, LM_L_Lspot1_TM4, LM_L_Lspot1_UnderPF, LM_L_Lspot1_swC1, LM_L_Lspot1_swC2, LM_L_Lspot1_swC3, LM_L_Lspot1_swI2, LM_Stars_Parts, LM_Stars_Ramp)
' ' VLM  Arrays - End

'*****************************************************************************************************************************************
'  ZVAR : Table Variables
'*****************************************************************************************************************************************

' Constants and Global Variables

Const cGameName = "darkchaos"
Const TableName = "Dark Chaos"

'Game Volumes (value from 0 to 1)
Const Volume_GameSoundEffects = 0.5
Const Volume_GameCallouts = 0.8
Const Volume_GameMusic = 0.8

'Game balls
Const BallSize = 50         'Ball size must be 50
Const BallMass = 1          'Ball mass must be 1
Const tnob = 5            'Total number of balls
Const lob = 0           'Locked balls
Dim gBot

'Table stuff
Dim tablewidth: tablewidth = Table1.width
Dim tableheight: tableheight = Table1.height

Dim GrabMag

Dim DesktopMode
DesktopMode = Table1.ShowDT


'*******************************************
'  ZINI : Table Initialization
'*******************************************

Sub Table1_Init

  ' Controller
  LoadCoreFiles
  LoadEM

    ' Grab magnet
    Set GrabMag = New cvpmMagnet
    With GrabMag
        .InitMagnet GrabMagnet, 30
        .GrabCenter = False
    .strength = 20
        .CreateEvents "GrabMag"
    End With

  ' GLF
  ConfigureGlfDevices
  Glf_Init(Table1)

  ' Ball rolling sounds
  InitRolling

  ' Flipper and sling corrections
  InitPolarity
  InitSlingCorrection

  ' Init some other things
  InitSomeThings

  ' Init VR things
  InitVR

End Sub


Sub Table1_Exit
  Glf_Exit
  If B2SOn Then
    Controller.Pause = False
    Controller.Stop
  End If
End Sub


Sub Table1_Paused
End Sub


Sub Table1_UnPaused
End Sub



'*******************************************
'  ZOPT: User Options
'*******************************************

Dim LightLevel : LightLevel = 0.5       ' Level of room lighting (0 to 1), where 0 is dark and 100 is brightest
Dim MechVol : MechVol = 0.8                 ' Overall Mechanical sound effect volume. Recommended values should be no greater than 1.
Dim BallRollVolume : BallRollVolume = 0.5     ' Level of ball rolling volume. Value between 0 and 1
Dim RampRollVolume : RampRollVolume = 0.5     ' Level of ramp rolling volume. Value between 0 and 1
Dim StagedFlipper : StagedFlipper = 0       ' 0 = Not enabled, 1 = Enabled
Dim BackglassVol : BackglassVol = 1         ' Separate setting that only affects sounds coming from backglass. Range from 0 to 1
Dim CalloutVol : CalloutVol = 1           ' Separate setting that affects verbal callout volume. Note, the backglass volume dial also affects callouts. Range from 0 to 1

Dim VRRoom: VRRoom = 0
Dim VREarthVisible: VREarthVisible = 1      ' 0 - Hidden, 1 - Visible
Dim VRRoomChoice: VRRoomChoice = 1        ' 1 - Asteroid Room, 2 - Minimal Room, 3 - Ultra Minimal Room
Dim VRRoomRotate: VRRoomRotate = 1        ' 1 - X Rot, 2 - Y Rot, 3 - Z Rot
Dim VRRotateRate: VRRotateRate = 0        ' 0 - Stopped, 1 - Slow, 2 - Med, 3 - Fast
Const TestVR = False

' Called when options are tweaked by the player.
' - 0: game has started, good time to load options and adjust accordingly
' - 1: an option has changed
' - 2: options have been reseted
' - 3: player closed the tweak UI, good time to update staticly prerendered parts
' Table1.Option arguments are:
' - option name, minimum value, maximum value, step between valid values, default value, unit (0=None, 1=Percent), an optional arry of literal strings
Dim dspTriggered : dspTriggered = False
Sub Table1_OptionEvent(ByVal eventId)
    If eventId = 1 And Not dspTriggered Then dspTriggered = True : DisableStaticPreRendering = True : End If
  Dim BP, v, x

  'Game logic framework options
  Glf_Options(eventId)

  ' Reflections
    v = Table1.Option("Playfield Reflections", 0, 1, 1, 1, 0, Array("Disabled", "Enabled"))
  If v = 0 Then
    BM_Playfield.ReflectionProbe = ""
  Else
    BM_Playfield.ReflectionProbe = "Playfield Reflections"
  End If

  ' Refractions
    v = Table1.Option("Clear Plastic Refractions", 0, 1, 1, 1, 0, Array("Disabled", "Enabled"))
  If v = 0 Then
    BM_BmpBot.RefractionProbe = ""
    BM_BmpTop.RefractionProbe = ""
    BM_Layer1.RefractionProbe = ""
  Else
    BM_BmpBot.RefractionProbe = "Refraction Pass 1"
    BM_BmpTop.RefractionProbe = "Refraction Pass 2"
    BM_Layer1.RefractionProbe = "Refraction Pass 3"
  End If

    ' Sound volumes
    'BackglassVol = Table1.Option("Game Sounds Volume", 0, 1, 0.01, 0.8, 1)
  'CalloutVol = Table1.Option("Callout Volume", 0, 1, 0.01, 0.8, 1)
    MechVol = Table1.Option("Mechanical Sounds Volume", 0, 1, 0.01, 0.8, 1)
    BallRollVolume = Table1.Option("Ball Roll Volume", 0, 1, 0.01, 0.3, 1)
  RampRollVolume = Table1.Option("Ramp Roll Volume", 0, 1, 0.01, 0.5, 1)


  ' Room brightness
' LightLevel = Table1.Option("Table Brightness (Ambient Light Level)", 0, 1, 0.01, .5, 1)
  LightLevel = NightDay/100
  SetRoomBrightness LightLevel   'Uncomment this line for lightmapped tables.

  ' Trust post
  v = 1 'Table1.Option("Trust Post", 0, 1, 1, 1, 0, Array("No Post", "Post"))
  For Each BP in BP_TrustPost : BP.visible = v: Next
  zCol_Rubber_TrustPost.Collidable = v

  ' Plunger Position Visualization
    v = Table1.Option("Plunger Position Visualization", 0, 1, 1, 1, 0, Array("Disabled", "Enabled"))
  PlungerLine.visible = v
  PlungerLine.blenddisablelighting = 5

  ' Apron Display
  v = Table1.Option("Apron Display", 0, 1, 1, 1, 0, Array("No Display", "Use Display"))
  ApronScreen.visible = v
  For Each BP in BP_Screen : BP.visible = v: Next
  For Each BP in pApronSeg : BP.visible = v: Next
  For Each BP in BP_Card : BP.visible = 1-v: Next

  ' Rails
  v = Table1.Option("Cab Rails", 0, 1, 1, 1, 0, Array("Not Visible", "Visible"))
  For Each BP in BP_Rails : BP.visible = v: Next

  ' Staged Flipper
  StagedFlipper = Table1.Option("Staged Flipper", 0, 1, 1, 0, 0, Array("Not Enabled", "Enabled"))

  ' VR
  VRRoomChoice = Table1.Option("VR Room", 1, 3, 1, 1, 0, Array("Asteroid", "Minimal", "Ultra Minimal"))
  VREarthVisible = Table1.Option("Earth Visible (Asteroid Room Only)", 0, 1, 1, 1, 0, Array("Hidden", "Visible"))
  VRRoomRotate = Table1.Option("VR Asteroid Rotation", 1, 3, 1, 1, 0, Array("X Rotation", "Y Rotation", "Z Rotation"))
  v = Table1.Option("VR Asteroid Rotation Speed", 0, 3, 1, 0, 0, Array("Stopped", "Slow", "Med", "Fast"))
  Select Case v
    Case 0: VRRotateRate = 0
    Case 1: VRRotateRate = 1
    Case 2: VRRotateRate = 3
    Case 3: VRRotateRate = 6
  End Select
  If RenderingMode = 2 or TestVR = True Then: VRRoom = VRRoomChoice: Else VRRoom = 0: End If
  SetupRoom

    If eventId = 3 And dspTriggered Then dspTriggered = False : DisableStaticPreRendering = False : End If
End Sub




'*******************************************
'  ZKEY : Key Press Handling
'*******************************************

Sub Table1_KeyDown(ByVal keycode)

  Glf_KeyDown(keycode)

  If keycode = LeftFlipperKey Then
    PinCab_LeftFlipperButton.TransX = -10
  End if
    If keycode = RightFlipperKey Then
    PinCab_RightFlipperButton.TransX = 10
  End if
  If keycode = LeftMagnaSave Then
    PinCab_LeftMagnaButton.TransX = -10
  End if
    If keycode = RightMagnaSave Then
    PinCab_RightMagnaButton.TransX = 10
  End if

  If keycode = AddCreditKey or keycode = AddCreditKey2 Then RandomCoinSound
  If keycode = PlungerKey Then
    Plunger.Pullback
    SoundPlungerPull
    TimerPlunger.Enabled = True
    TimerPlunger2.Enabled = False
    PinCab_Shooter.TransZ = 0
  End If
  If keycode = StartGameKey Then SoundStartButton
  If keycode = LeftTiltKey Then
    'Nudge 90, 2 'This is set in GLF
    ShipNudge 1, -1, ShipVelX, ShipTimeX, ShipVelX2, ShipMaxMovement, ShipAcc
    SoundNudgeLeft
  End If
  If keycode = RightTiltKey Then
    'Nudge 270, 2
    ShipNudge 1, 1, ShipVelX, ShipTimeX, ShipVelX2, ShipMaxMovement, ShipAcc
    SoundNudgeRight
  End If
  If keycode = CenterTiltKey Then
    'Nudge 0, 2
    ShipNudge 1, -1, ShipVelY, ShipTimeY, ShipVelY2, ShipMaxMovement, ShipAcc
    SoundNudgeCenter
  End If

End Sub



Sub Table1_KeyUp(ByVal keycode)

  ' ANY TIME
  Glf_KeyUp(keycode)

  If keycode = LeftFlipperKey Then
    PinCab_LeftFlipperButton.TransX = 0
  End if
    If keycode = RightFlipperKey Then
    PinCab_RightFlipperButton.TransX = 0
  End if
  If keycode = LeftMagnaSave Then
    PinCab_LeftMagnaButton.TransX = 0
  End if
    If keycode = RightMagnaSave Then
    PinCab_RightMagnaButton.TransX = 0
  End if

  If KeyCode = PlungerKey Then
    Plunger.Fire
    SoundPlungerReleaseBall
    TimerPlunger.Enabled = False
    TimerPlunger2.Enabled = True
  End If

End Sub





'*******************************************
'  ZTIM : General Timers
'*******************************************


' The COR timer interval is 10 ms
CorTimer.Interval = 10
CorTimer.Enabled = True
Sub CorTimer_Timer
  Cor.Update
End Sub


' The frame timer interval is -1, so executes at the display frame rate
dim FrameTime, InitFrameTime : InitFrameTime = 0
FrameTimer.Interval = -1
FrameTimer.Enabled = True
Sub FrameTimer_Timer()
  FrameTime = gametime - InitFrameTime : InitFrameTime = gametime 'Count frametime
  If FrameTime > 25 Then debug.print "---------- FrameTime = " & FrameTime

  RollingUpdate         'update rolling sounds
  DoDTAnim            'handle drop target animations
  UpdateDropTargets
  DoSTAnim            'handle drop target animations
  UpdateStandupTargets
  BSUpdate
  UpdateBallBrightness
  UpdateAsteroid
  NudgeAnim
  RotateSky
End Sub


' Plunger animation timers
Sub TimerPlunger_Timer
  If PinCab_Shooter.TransZ < 90 then
    PinCab_Shooter.TransZ = (6.0* Plunger.Position) - 20
  End If
  PlungerLine.TransY = (6.0* Plunger.Position) - 20
  PlungerLine.TransZ = -0.7*(Plunger.Position - 4.1)
End Sub

Sub TimerPlunger2_Timer
  PinCab_Shooter.TransZ = (6.0* Plunger.Position) - 20
  PlungerLine.TransY = (6.0* Plunger.Position) - 20
  PlungerLine.TransZ = -0.7*(Plunger.Position - 4.1)
End Sub







'******************************************************
'  ZANI: Misc Animations
'******************************************************

' Flippers
Sub LeftFlipper_Animate
  Dim a: a = LeftFlipper.CurrentAngle
  FlipperLSh.RotZ = a

  Dim v, BP
  v = 255.0 * (121.0 - LeftFlipper.CurrentAngle) / (121.0 - 69.0)

  For Each BP in BP_Lflip
    BP.RotZ = a
    BP.visible = v < 128.0
  Next
  For Each BP in BP_LflipU
    BP.RotZ = a
    BP.visible = v >= 128.0
  Next
End Sub

Sub RightFlipper_Animate
  Dim a: a = RightFlipper.CurrentAngle
  FlipperRSh.RotZ = a

  Dim v, BP
  v = 255.0 * (-121.0 - RightFlipper.CurrentAngle) / (-121.0 + 69.0)

  For Each BP in BP_Rflip
    BP.RotZ = a
    BP.visible = v < 128.0
  Next
  For Each BP in BP_RflipU
    BP.RotZ = a
    BP.visible = v >= 128.0
  Next
End Sub

Sub RightFlipper1_Animate
  Dim a: a = RightFlipper1.CurrentAngle
  FlipperR1Sh.RotZ = a

  Dim v, BP
  v = 255.0 * (-161.0 - RightFlipper1.CurrentAngle) / (-161.0 + 108.0)

  For Each BP in BP_Rflip1
    BP.RotZ = a
    BP.visible = v < 128.0
  Next
  For Each BP in BP_Rflip1U
    BP.RotZ = a
    BP.visible = v >= 128.0
  Next
End Sub


' Gates
Sub Gate2_Animate
  Dim a: a = Gate2.CurrentAngle
  Dim BP : For Each BP in BP_Gate2: BP.RotX = a: Next
End Sub

Sub GateL_Animate
  Dim a: a = -GateL.CurrentAngle
  Dim BP : For Each BP in BP_GateL: BP.RotX = a: Next
End Sub

Sub GateR_Animate
  Dim a: a = GateR.CurrentAngle
  Dim BP : For Each BP in BP_GateR: BP.RotX = a: Next
End Sub



' Bumpers
Sub s_Bumper1_Animate
  Dim z, BP
  z = s_Bumper1.CurrentRingOffset
  For Each BP in BP_BR1 : BP.transz = z: Next
End Sub

Sub s_Bumper2_Animate
  Dim z, BP
  z = s_Bumper2.CurrentRingOffset
  For Each BP in BP_BR2 : BP.transz = z: Next
End Sub

Sub s_Bumper3_Animate
  Dim z, BP
  z = s_Bumper3.CurrentRingOffset
  For Each BP in BP_BR3 : BP.transz = z: Next
End Sub

' Sub s_Bumper4_Animate
'   Dim z, BP
'   z = s_Bumper4.CurrentRingOffset
'   For Each BP in BP_BR4 : BP.transz = z: Next
' End Sub


' Switches
Sub s_CenterOrb1_Animate
  Dim z : z = s_CenterOrb1.CurrentAnimOffset
  Dim BP : For Each BP in BP_swC1 : BP.transz = z: Next
End Sub

Sub s_CenterOrb2_Animate
  Dim z : z = s_CenterOrb2.CurrentAnimOffset
  Dim BP : For Each BP in BP_swC2 : BP.transz = z: Next
End Sub

Sub s_CenterOrb3_Animate
  Dim z : z = s_CenterOrb3.CurrentAnimOffset
  Dim BP : For Each BP in BP_swC3 : BP.transz = z: Next
End Sub

Sub s_InnerOrb1_Animate
  Dim z : z = s_InnerOrb1.CurrentAnimOffset
  Dim BP : For Each BP in BP_swI1 : BP.transz = z: Next
End Sub

Sub s_InnerOrb2_Animate
  Dim z : z = s_InnerOrb2.CurrentAnimOffset
  Dim BP : For Each BP in BP_swI2 : BP.transz = z: Next
End Sub

Sub s_LeftOrb1_Animate
  Dim z : z = s_LeftOrb1.CurrentAnimOffset
  Dim BP : For Each BP in BP_swL1 : BP.transz = z: Next
End Sub

Sub s_LeftOrb2_Animate
  Dim z : z = s_LeftOrb2.CurrentAnimOffset
  Dim BP : For Each BP in BP_swL2 : BP.transz = z: Next
End Sub

Sub s_LeftBumper1_Animate
  Dim z : z = s_LeftBumper1.CurrentAnimOffset
  Dim BP : For Each BP in BP_swLB : BP.transz = z: Next
End Sub

Sub s_LeftInlane_Animate
  Dim z : z = s_LeftInlane.CurrentAnimOffset
  Dim BP : For Each BP in BP_swLI : BP.transz = z: Next
End Sub

Sub s_LeftOutlane_Animate
  Dim z : z = s_LeftOutlane.CurrentAnimOffset
  Dim BP : For Each BP in BP_swLO : BP.transz = z: Next
End Sub

Sub s_Plunger1_Animate
  Dim z : z = s_Plunger1.CurrentAnimOffset
  Dim BP : For Each BP in BP_swP1 : BP.transz = z: Next
End Sub

Sub s_Plunger2_Animate
  Dim z : z = s_Plunger2.CurrentAnimOffset
  Dim BP : For Each BP in BP_swP2 : BP.transz = z: Next
End Sub

Sub s_RightOrb1_Animate
  Dim z : z = s_RightOrb1.CurrentAnimOffset
  Dim BP : For Each BP in BP_swR1 : BP.transz = z: Next
End Sub

Sub s_RightOrb2_Animate
  Dim z : z = s_RightOrb2.CurrentAnimOffset
  Dim BP : For Each BP in BP_swR2 : BP.transz = z: Next
End Sub

Sub s_RightInlane_Animate
  Dim z : z = s_RightInlane.CurrentAnimOffset
  Dim BP : For Each BP in BP_swRI : BP.transz = z: Next
End Sub

Sub s_RightOutlane_Animate
  Dim z : z = s_RightOutlane.CurrentAnimOffset
  Dim BP : For Each BP in BP_swRO : BP.transz = z: Next
End Sub


' Standup Targets
Sub UpdateStandupTargets
  dim BP, ty

    ty = BM_TM1.transy
  For each BP in BP_TM1 : BP.transy = ty: Next

    ty = BM_TM2.transy
  For each BP in BP_TM2 : BP.transy = ty: Next

    ty = BM_TM3.transy
  For each BP in BP_TM3 : BP.transy = ty: Next

    ty = BM_TM4.transy
  For each BP in BP_TM4 : BP.transy = ty: Next

    ty = BM_TM5.transy
  For each BP in BP_TM5 : BP.transy = ty: Next

    ty = BM_TS1.transy
  For each BP in BP_TS1 : BP.transy = ty: Next

    ty = BM_TS2.transy
  For each BP in BP_TS2 : BP.transy = ty: Next

    ty = BM_TS3.transy
  For each BP in BP_TS3 : BP.transy = ty: Next

End Sub


' Drop Targets
Sub UpdateDropTargets
  dim BP, tz, rx, ry

    tz = BM_TMet1.transz
  rx = BM_TMet1.rotx
  ry = BM_TMet1.roty
  For each BP in BP_TMet1 : BP.transz = tz: BP.rotx = rx: BP.roty = ry: Next

    tz = BM_TMet2.transz
  rx = BM_TMet2.rotx
  ry = BM_TMet2.roty
  For each BP in BP_TMet2 : BP.transz = tz: BP.rotx = rx: BP.roty = ry: Next

    tz = BM_TMet3.transz
  rx = BM_TMet3.rotx
  ry = BM_TMet3.roty
  For each BP in BP_TMet3 : BP.transz = tz: BP.rotx = rx: BP.roty = ry: Next

    tz = BM_TMet4.transz
  rx = BM_TMet4.rotx
  ry = BM_TMet4.roty
  For each BP in BP_TMet4 : BP.transz = tz: BP.rotx = rx: BP.roty = ry: Next
End Sub



' Spinner
Dim LMs_Spin, LMs_SpinU

InitSpinner
Sub InitSpinner
  Dim i, LM
  BM_Spin.Visible = 1
  BM_SpinU.Visible = 0
  ' Create LM arrays
  ReDim LMs_Spin(UBound(BP_Spin)-1)
  ReDim LMs_SpinU(UBound(BP_SpinU)-1)
  For i = 0 to (UBound(BP_Spin)-1): Set LMs_Spin(i) = BP_Spin(i+1): Next
  For i = 0 to (UBound(BP_SpinU)-1): Set LMs_SpinU(i) = BP_SpinU(i+1): Next
  'Scale down the inner spinner a little more in y-dir
' Dim BP
' For Each BP in BP_Spin
'   BP.Size_X = BP.Size_X * 0.99
'   BP.Size_Y = BP.Size_Y * 0.99
'   BP.Size_Z = BP.Size_Z * 0.99
' Next
  s_spinner_animate
End Sub

Sub s_spinner_animate
  Dim LM, a, b, c, offset
  a = -s_spinner.currentangle
  c = 360+a
  If c >= 0 And c < 60 Then
        b = 0
    ElseIf c >= 60 And c < 120 Then
        b = (c - 60) / 60
    ElseIf c >= 120 And c < 240 Then
        b = 1
    ElseIf c >= 240 And c < 300 Then
        b = 1 + (240 - c) / 60
    Else
        b = 0
    End If

  BM_Spin.RotX = a
  For Each LM in LMs_Spin
    LM.RotX = a
    LM.Opacity = 100 * (1 - b)
  Next
  For Each LM in LMs_SpinU
    LM.RotX = a + 180
    LM.Opacity = 100 * b
  Next
  For Each LM in BP_SpinWire: LM.RotX = a: Next
End Sub



'******************************************************
' ZAST: Asteroid Animation
'******************************************************


Const AstVel = 0.01
Dim AstAngle, SpinAst, AstDelta
Dim LMs_Asteroid1 ', LMs_Asteroid2, LMs_Asteroid3, LMs_Asteroid4

InitAsteroid
Sub InitAsteroid
  Dim i, LM
  ' Init angle and visibility
  AstAngle = 0
  AstDelta = 0
  SpinAst = False
  BM_Asteroid1.Visible = 1
  'BM_Asteroid2.Visible = 0
  'BM_Asteroid3.Visible = 0
  'BM_Asteroid4.Visible = 0
  ' Create LM arrays
  ReDim LMs_Asteroid1(UBound(BP_Asteroid1)-1)
' ReDim LMs_Asteroid2(UBound(BP_Asteroid2)-1)
' ReDim LMs_Asteroid3(UBound(BP_Asteroid3)-1)
' ReDim LMs_Asteroid4(UBound(BP_Asteroid4)-1)
  For i = 0 to (UBound(BP_Asteroid1)-1): Set LMs_Asteroid1(i) = BP_Asteroid1(i+1): Next
' For i = 0 to (UBound(BP_Asteroid2)-1): Set LMs_Asteroid2(i) = BP_Asteroid2(i+1): Next
' For i = 0 to (UBound(BP_Asteroid3)-1): Set LMs_Asteroid3(i) = BP_Asteroid3(i+1): Next
' For i = 0 to (UBound(BP_Asteroid4)-1): Set LMs_Asteroid4(i) = BP_Asteroid4(i+1): Next
  LM_F_FL7a_Asteroid1.Visible = 1
  LM_F_FL7a_Asteroid2.Visible = 0
  LM_F_FL7a_Asteroid3.Visible = 0
  LM_F_FL7a_Asteroid4.Visible = 0
  ' Adjust size to eliminate zfighting
  BM_Asteroid1.Size_X = BM_Asteroid1.Size_X*0.999 '0.998
  BM_Asteroid1.Size_Y = BM_Asteroid1.Size_Y*0.999 '0.998
  BM_Asteroid1.Size_Z = BM_Asteroid1.Size_Z*0.999 '0.998
' BM_Asteroid3.Size_X = BM_Asteroid1.Size_X*0.999
' BM_Asteroid3.Size_Y = BM_Asteroid1.Size_Y*0.999
' BM_Asteroid3.Size_Z = BM_Asteroid1.Size_Z*0.999
  'BM_Asteroid3.material = "VLM.Bake.Active"
  ' Initial draw
  DrawAsteroid AstAngle
End Sub

Sub SolSpinAsteroid(Enabled)
  AstDelta = AstVel
  If Enabled <> False And SpinAst = False Then
    PlaySoundAtLevelStaticLoop "mfx_Motor", MechVol*0.02, BM_Asteroid1
  ElseIf Enabled = False Then
    StopSound "mfx_Motor"
  End If
  SpinAst = Enabled
End Sub

Sub UpdateAsteroid
  If AstDelta > 0.005 Then
    If SpinAst <> False Then
      AstDelta = AstVel
    Else
      AstDelta = AstDelta - FrameTime*AstVel/2000  'Deceleration
      If AstDelta < 0.005 Then AstDelta = 0
    End If
    AstAngle = AstAngle + AstDelta*FrameTime
    If AstAngle >= 360 Then AstAngle = AstAngle - 360
    DrawAsteroid AstAngle
  End If
End Sub


Sub DrawAsteroid(a)
  Dim LM, v1, v2, v3, v4, op13, op24
  v1 = ((a > 270) or (a < 90))
  v2 = ((a > 180) and (a < 360))
  v3 = ((a > 90) and (a < 270))
  v4 = ((a > 0) and (a < 180))
  op13 = abs(100*dCos(a))
  op24 = abs(100*dSin(a))
  op24 = abs(100*dSin(a))

  BM_Asteroid1.RotZ = a
' BM_Asteroid3.RotZ = a
' BM_Asteroid3.Visible = v3
' BM_Asteroid3.Opacity = op13

  LM_F_FL7a_Asteroid1.RotZ = a

  For each LM in LMs_Asteroid1
    LM.Visible = v1
    LM.Opacity = op13
    LM.RotZ = a
  Next
  For each LM in BP_Asteroid2
    LM.Visible = v2
    LM.Opacity = op24
    LM.RotZ = a
  Next
  For each LM in BP_Asteroid3
    LM.Visible = v3
    LM.Opacity = op13
    LM.RotZ = a
  Next
  For each LM in BP_Asteroid4
    LM.Visible = v4
    LM.Opacity = op24
    LM.RotZ = a
  Next
  LM_F_FL7a_Asteroid1.opacity = LM_F_FL7a_Asteroid1.opacity*8 'Glllowwwwwwww
  LM_F_FL7a_Asteroid2.opacity = LM_F_FL7a_Asteroid2.opacity*8
  LM_F_FL7a_Asteroid3.opacity = LM_F_FL7a_Asteroid3.opacity*8
  LM_F_FL7a_Asteroid4.opacity = LM_F_FL7a_Asteroid4.opacity*8

' debug.print "AstAngle = "&a
' debug.print "Asteroid1  Visible = "&v1&"  Opacity = "&op13
' debug.print "Asteroid2  Visible = "&v2&"  Opacity = "&op24
' debug.print "Asteroid3  Visible = "&v3&"  Opacity = "&op13
' debug.print "Asteroid4  Visible = "&v4&"  Opacity = "&op24
End Sub




'******************************************************
' ZSHP:  Ship Wobble Animations   (based on code from rothbauerw)
'******************************************************

' Wobble Script to animate objects when the table is nudged. The below shows how to animate a single axis. Additional scripting is needed to animate for another axis.
'
'  You'll need variables for each object to:
'   1 - track time interval (objtime)
'   2 - two to track velocity (objvel, objvel2)
'   3 - track the displacement (objdisp)
'   4 - define the maximum movement of the object (objmaxmovement)
'   5 - define the acceleration of the object, or how fast it moves (objacc)
'   6 - define the how fast the object movement decays (objdecay)
'
'  NudgeAnim should be placed in a frame timer (interval = -1)
'   - NudgeAnim should be used to read any analog nudges, and if so, apply an impulse to the object
'   - NudgeAnim should also call the animation sub for the object
'
'  A sub should be created to apply an impulse to the object when the table is nudged. It will be placed in the NudgeAnim sub for analog nudges and the nudge key presses for digital nudge
'
' Sub ObjNudge(namp, ndir)
'   CalcVelTime namp - rnd * namp * 0.1 , ndir, objvel, objtime, objvel2, objmaxmovement, objacc  'adds some randomness to the impulse
' End Sub
'
'   Where:
'  - namp is the amplitude of the impulse
'  - ndir is the direction of the impulse
'
'  A sub should be created to update the displacement of the object. It will be placed in the NudgeAnim sub.
'
' Sub ObjUpdate()
'   CalcDisplacement objvel, objtime, objdisp, objvel2, objmaxmovement, objacc, objdecay
'   obj.transy = - objdisp
' End Sub


Dim ShipTimeX:ShipTimeX=0
Dim Ship1TimeX:Ship1TimeX=0

Dim ShipVelX, ShipVelX2:ShipVelX = 0: ShipVelX2 = 0
Dim Ship1VelX, Ship1VelX2:Ship1VelX = 0: Ship1VelX2 = 0

Dim ShipDispX:ShipDispX = 0
Dim Ship1DispX:Ship1DispX = 0

Dim ShipTimeY:ShipTimeY=0
Dim Ship1TimeY:Ship1TimeY=0

Dim ShipVelY, ShipVelY2:ShipVelY = 0: ShipVelY2 = 0
Dim Ship1VelY, Ship1VelY2:Ship1VelY = 0: Ship1VelY2 = 0

Dim ShipDispY:ShipDispY = 0
Dim Ship1DispY:Ship1DispY = 0


Const ShipMaxMovement = 5
Const ShipDecay = 0.90
Const ShipAcc = 3000

Sub NudgeAnim() 'Call from FrameTimer
    Dim X, Y
    NudgeSensorStatus X, Y
  'debug.print "X = "&X&"  Y = "&Y

  'Add impulse to any objects that wobble around the y-axis
    If ABS(X) > 0.05 Then
    ShipNudge Abs(x)/0.125, x/Abs(x), ShipVelX, ShipTimeX, ShipVelX2, ShipMaxMovement, ShipAcc
    End If

  'Add impulse to any objects that wobble around the x-axis
    If ABS(Y) > 0.05 Then
    ShipNudge Abs(y)/0.125, y/Abs(y), ShipVelY, ShipTimeY, ShipVelY2, ShipMaxMovement, ShipAcc
    End If

    ShipUpdate
End Sub

Sub ShipNudge(namp, ndir, Vel, nTime, Vel2, MaxMovement, Acc)
  CalcVelTime namp - rnd * namp * 0.1 , ndir, Vel, nTime, Vel2, MaxMovement, Acc  'adds some randomness to the impulse
End Sub

Sub ShipUpdate()
  Dim BP
  CalcDisplacement ShipVelX, ShipTimeX, ShipDispX, ShipVelX2, ShipMaxMovement, ShipAcc, ShipDecay
  CalcDisplacement ShipVelY, ShipTimeY, ShipDispY, ShipVelY2, ShipMaxMovement, ShipAcc, ShipDecay
  BM_Ship.roty = ShipDispX
  BM_Ship.rotx = ShipDispY

  'debug.print "ShipDispX = "&ShipDispX&"  ShipDispY = "&ShipDispY
  For each BP in BP_Ship: BP.rotx = BM_Ship.rotx: BP.roty = BM_Ship.roty:Next
End Sub

Sub RndShipNudge
  ShipNudge 0.7-(0.5*Rnd),Sgn(rnd-0.5), ShipVelX, ShipTimeX, ShipVelX2, ShipMaxMovement, ShipAcc
  ShipNudge 0.7-(0.5*Rnd),Sgn(rnd-0.5), ShipVelY, ShipTimeY, ShipVelY2, ShipMaxMovement, ShipAcc
End Sub


' Wobble Supporting Functions
'*****************************

' Calculate the change in velocity of the object due to the impulse from the nudge
Sub CalcVelTime(simpulse, sidir, svel, stime, nvel, smaxmovement, sacc)
  if simpulse > 1 then simpulse = 1

  if svel = 0 Then
    svel = simpulse * sidir * Vel0(sMaxMovement, sacc)
    stime = GameTime
    nvel = 0
  else
    nvel = simpulse * sidir * Vel0(sMaxMovement, sacc)
  end If
End Sub

Function Vel0(displacement, acceleration)
  Vel0 = SQR(acceleration* ABS(displacement) * 2)
End Function

' Calculate the current displacement of the object
Sub CalcDisplacement(svel, stime, sdisp, nvel, smaxmovement, sacc, sdecay)
  dim velM, accM , stimef, stimec

  stimec = Gametime - stime
  stimef = TimeF(MaxDisplacement(svel, sacc), sacc)

  If stimec > stimef Then
    stimec = stimec - stimef
    stime = Gametime - stimec

    If nvel <> 0 Then
      if abs(nvel) > abs(svel) then
        svel = -sgn(svel)*abs(nvel)
      Else
        svel = -svel * sdecay
      End If

      nvel = 0
    Else
      svel = -svel * sdecay
    End If

    stimef = TimeF(MaxDisplacement(svel, sacc), sacc)

    If stimec > stimef Then
      svel = 0
      sdisp  = 0
    End If
  End If

  velM = svel * stimec / 1000
  accM = (sacc * (stimec / 1000)^2) / 2

  If svel < 0 Then
    sdisp = velM + accM
  ElseIf svel > 0 Then
    sdisp = velM - accM
  End If
End Sub

Function MaxDisplacement(velocity, acceleration)
  MaxDisplacement = Velocity^2/(2*acceleration)
End Function

Function TimeF(displacement, acceleration)
  TimeF = 1000*2*SQR(Abs(displacement)*acceleration*2)/acceleration
End Function





'******************************************************
'   ZBBR: BALL BRIGHTNESS
'******************************************************

Const BallBrightness =  1       'Ball brightness - Value between 0 and 1 (0=Dark ... 1=Bright)

' Constants for plunger lane ball darkening.
' You can make a temporary wall in the plunger lane area and use the co-ordinates from the corner control points.
Const PLOffset = 0.5      'Minimum ball brightness scale in plunger lane
Const PLLeft = 860      'X position of punger lane left
Const PLRight = 940       'X position of punger lane right
Const PLTop = 1475        'Y position of punger lane top
Const PLBottom = 1900       'Y position of punger lane bottom
Dim PLGain: PLGain = (1-PLOffset)/(PLTop-PLBottom)

Sub UpdateBallBrightness
  Dim s, b_base, b_r, b_g, b_b, d_w
  b_base = 120 * BallBrightness + 135 ' orig was 120 and 70

  For s = 0 To UBound(gBOT)
    ' Handle z direction
    d_w = b_base*(1 - (gBOT(s).z-25)/500)
    If d_w < 30 Then d_w = 30
    ' Handle plunger lane
    If InRect(gBOT(s).x,gBOT(s).y,PLLeft,PLBottom,PLLeft,PLTop,PLRight,PLTop,PLRight,PLBottom) Then
      d_w = d_w*(PLOffset+PLGain*(gBOT(s).y-PLBottom))
    End If
    ' Assign color
    b_r = Int(d_w)
    b_g = Int(d_w)
    b_b = Int(d_w)
    If b_r > 255 Then b_r = 255
    If b_g > 255 Then b_g = 255
    If b_b > 255 Then b_b = 255
    gBOT(s).color = b_r + (b_g * 256) + (b_b * 256 * 256)
    'debug.print "--- ball.color level="&b_r
  Next
End Sub


'***************************************************************
'* ZSHD : Ball shadows
'***************************************************************
' For dynamic ball shadows, Check the "Raytraced ball shadows" box for the specific light.
' Also make sure the light's z position is around 25 (mid ball)

'Ambient (Room light source)
Const AmbientBSFactor = 0.9    '0 To 1, higher is darker
Const AmbientMovement = 1    '1+ higher means more movement as the ball moves left and right
Const offsetX = 0        'Offset x position under ball (These are if you want to change where the "room" light is for calculating the shadow position,)
Const offsetY = 0        'Offset y position under ball (^^for example 5,5 if the light is in the back left corner)

' *** Trim or extend these to match the number of balls/primitives/flashers on the table!  (will throw errors if there aren't enough objects)
Dim objBallShadow(5)

'Initialization
BSInit

Sub BSInit()
  Dim iii
  'Prepare the shadow objects before play begins
  For iii = 0 To tnob - 1
    Set objBallShadow(iii) = Eval("BallShadow" & iii)
    objBallShadow(iii).material = "BallShadow" & iii
    UpdateMaterial objBallShadow(iii).material,1,0,0,0,0,0,AmbientBSFactor,RGB(0,0,0),0,0,False,True,0,0,0,0
    objBallShadow(iii).Z = 3 + iii / 1000
    objBallShadow(iii).visible = 0
  Next
End Sub


Sub BSUpdate
  Dim s: For s = lob To UBound(gBOT)
    ' *** Normal "ambient light" ball shadow

    'Primitive shadow on playfield, flasher shadow in ramps
    '** If on main and upper pf
    If gBOT(s).Z > 20 And gBOT(s).Z < 30 Then
      objBallShadow(s).visible = 1
      objBallShadow(s).X = gBOT(s).X + (gBOT(s).X - (tablewidth / 2)) / (Ballsize / AmbientMovement) + offsetX
      objBallShadow(s).Y = gBOT(s).Y + offsetY
      'objBallShadow(s).Z = gBOT(s).Z + s/1000 + 1.04 - 25

    '** No shadow if ball is off the main playfield (this may need to be adjusted per table)
    Else
      objBallShadow(s).visible = 0
    End If
  Next
End Sub

'******************************************************
'  ZDRT : DROP TARGETS by Rothbauerw
'******************************************************


'  DROP TARGETS INITIALIZATION

Class DropTarget
    Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped, m_keepup

    Public Property Get Primary(): Set Primary = m_primary: End Property
    Public Property Let Primary(input): Set m_primary = input: End Property

    Public Property Get Secondary(): Set Secondary = m_secondary: End Property
    Public Property Let Secondary(input): Set m_secondary = input: End Property

    Public Property Get Prim(): Set Prim = m_prim: End Property
    Public Property Let Prim(input): Set m_prim = input: End Property

    Public Property Get Sw(): Sw = m_sw: End Property
    Public Property Let Sw(input): m_sw = input: End Property

    Public Property Get Animate(): Animate = m_animate: End Property
    Public Property Let Animate(input): m_animate = input: End Property

    Public Property Get Keepup(): Keepup = m_keepup: End Property
    Public Property Let Keepup(input): m_keepup = input: End Property

    Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
    Public Property Let IsDropped(input): m_isDropped = input: End Property

    Public default Function init(primary, secondary, prim, sw, animate, isDropped)
      Set m_primary = primary
      Set m_secondary = secondary
      Set m_prim = prim
      m_sw = sw
      m_animate = animate
      m_isDropped = isDropped
      m_keepup = False

      Set Init = Me
    End Function
End Class

'Define a variable for each drop target
Dim DT1, DT2, DT3, DT4

'Set array with drop target objects
'
'DropTargetvar = Array(primary, secondary, prim, swtich, animate)
'   primary:      primary target wall to determine drop
' secondary:      wall used to simulate the ball striking a bent or offset target after the initial Hit
' prim:       primitive target used for visuals and animation
'             IMPORTANT!!!
'             rotz must be used for orientation
'             rotx to bend the target back
'             transz to move it up and down
'             the pivot point should be in the center of the target on the x, y and at or below the playfield (0) on z
' switch:       ROM switch number
' animate:      Arrary slot for handling the animation instrucitons, set to 0
'
' Values for annimate: 1 - bend target (hit to primary), 2 - drop target (hit to secondary), 3 - brick target (high velocity hit to secondary), -1 - raise target

Set DT1 = (new DropTarget)(s_DTMeteor1, aDTMeteor1, BM_TMet1, 1, 0, False)
Set DT2 = (new DropTarget)(s_DTMeteor2, aDTMeteor2, BM_TMet2, 2, 0, False)
Set DT3 = (new DropTarget)(s_DTMeteor3, aDTMeteor3, BM_TMet3, 3, 0, False)
Set DT4 = (new DropTarget)(s_DTMeteor4, aDTMeteor4, BM_TMet4, 4, 0, False)


Dim DTArray
DTArray = Array(DT1, DT2, DT3, DT4)

'Configure the behavior of Drop Targets.
Const DTDropSpeed = 90 'in milliseconds
Const DTDropUpSpeed = 40 'in milliseconds
Const DTDropUnits = 54 'VP units primitive drops so top of at or below the playfield
Const DTDropUpUnits = 10 'VP units primitive raises above the up position on drops up
Const DTMaxBend = 8 'max degrees primitive rotates when hit
Const DTDropDelay = 20 'time in milliseconds before target drops (due to friction/impact of the ball)
Const DTRaiseDelay = 40 'time in milliseconds before target drops back to normal up position after the solenoid fires to raise the target
Const DTBrickVel = 30 'velocity at which the target will brick, set to '0' to disable brick
Const DTEnableBrick = 0 'Set to 0 to disable bricking, 1 to enable bricking
Const DTBackHitVel = 15 'velocity at which the target will drop if hit from behind
Const DTBackHitDrops = 1 'Set to 0 to disable dropping from back hits, 1 to enable dropping from back hits
Const DTMass = 0.2 'Mass of the Drop Target (between 0 and 1), higher values provide more resistance


'  DROP TARGETS FUNCTIONS

Sub DTHit(switch)
    Dim i
    i = DTArrayID(switch)

    PlayTargetSound
    If DTArray(i).Keepup = True Then
        DTArray(i).animate = 3
    Else
        DTArray(i).animate = DTCheckBrick(ActiveBall,DTArray(i).prim)
    End If
    If DTArray(i).animate = 1 Or DTArray(i).animate = 3 Or DTArray(i).animate = 4 Then
        DTBallPhysics ActiveBall, DTArray(i).prim.rotz, DTMass
    End If
    DoDTAnim
End Sub

Sub DTRaise(switch)
    Dim i
    i = DTArrayID(switch)

    DTArray(i).animate =  - 1
    DoDTAnim
End Sub

Sub DTDrop(switch)
    Dim i
    i = DTArrayID(switch)

    DTArray(i).animate = 1
    DoDTAnim
End Sub

Sub DTEnableKeepup(switch)
    Dim i
    i = DTArrayID(switch)
    DTArray(i).Keepup = True
    DTRaise(switch)
End Sub

Sub DTDisableKeepup(switch)
    Dim i
    i = DTArrayID(switch)
    DTArray(i).Keepup = False
End Sub

Function DTArrayID(switch)
    Dim i
    For i = 0 To UBound(DTArray)
        If DTArray(i).sw = switch Then
            DTArrayID = i
            Exit Function
        End If
    Next
End Function

Sub DTBallPhysics(aBall, angle, mass)
    Dim rangle,bangle,calc1, calc2, calc3
    rangle = (angle - 90) * 3.1416 / 180
    bangle = atn2(cor.ballvely(aball.id),cor.ballvelx(aball.id))

    calc1 = cor.BallVel(aball.id) * Cos(bangle - rangle) * (aball.mass - mass) / (aball.mass + mass)
    calc2 = cor.BallVel(aball.id) * Sin(bangle - rangle) * Cos(rangle + 4 * Atn(1) / 2)
    calc3 = cor.BallVel(aball.id) * Sin(bangle - rangle) * Sin(rangle + 4 * Atn(1) / 2)

    aBall.velx = calc1 * Cos(rangle) + calc2
    aBall.vely = calc1 * Sin(rangle) + calc3
End Sub

'Check if target is hit on it's face or sides and whether a 'brick' occurred
Function DTCheckBrick(aBall, dtprim)
    Dim bangle, bangleafter, rangle, rangle2, Xintersect, Yintersect, cdist, perpvel, perpvelafter, paravel, paravelafter
    rangle = (dtprim.rotz - 90) * 3.1416 / 180
    rangle2 = dtprim.rotz * 3.1416 / 180
    bangle = atn2(cor.ballvely(aball.id),cor.ballvelx(aball.id))
    bangleafter = Atn2(aBall.vely,aball.velx)

    Xintersect = (aBall.y - dtprim.y - Tan(bangle) * aball.x + Tan(rangle2) * dtprim.x) / (Tan(rangle2) - Tan(bangle))
    Yintersect = Tan(rangle2) * Xintersect + (dtprim.y - Tan(rangle2) * dtprim.x)

    cdist = Distance(dtprim.x, dtprim.y, Xintersect, Yintersect)

    perpvel = cor.BallVel(aball.id) * Cos(bangle - rangle)
    paravel = cor.BallVel(aball.id) * Sin(bangle - rangle)

    perpvelafter = BallSpeed(aBall) * Cos(bangleafter - rangle)
    paravelafter = BallSpeed(aBall) * Sin(bangleafter - rangle)

    If perpvel > 0 And  perpvelafter <= 0 Then
        If DTEnableBrick = 1 And  perpvel > DTBrickVel And DTBrickVel <> 0 And cdist < 8 Then
            DTCheckBrick = 3
        Else
            DTCheckBrick = 1
        End If
    ElseIf perpvel > 0 And ((paravel > 0 And paravelafter > 0) Or (paravel < 0 And paravelafter < 0)) Then
        DTCheckBrick = 4
    Else
        DTCheckBrick = 0
    End If

    If DTBackHitDrops = 1 And perpvel < -DTBackHitVel And perpvelafter >= 0 Then
        DTCheckBrick = 1
    End If
End Function

Sub DoDTAnim()
    Dim i
    For i = 0 To UBound(DTArray)
        DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
    Next
End Sub

Function DTAnimate(primary, secondary, prim, switch, animate)
    Dim transz, switchid
    Dim animtime, rangle

    switchid = switch

    Dim ind
    ind = DTArrayID(switchid)

    rangle = prim.rotz * PI / 180

    DTAnimate = animate

    If animate = 0 Then
        primary.uservalue = 0
        DTAnimate = 0
        Exit Function
    ElseIf primary.uservalue = 0 Then
        primary.uservalue = GameTime
    End If

    animtime = GameTime - primary.uservalue

    If (animate = 1 Or animate = 4) And animtime < DTDropDelay Then  'Drop
        primary.collidable = 0
        If animate = 1 Then secondary.collidable = 1 Else secondary.collidable = 0
        prim.rotx = DTMaxBend * Cos(rangle)
        prim.roty = DTMaxBend * Sin(rangle)
        DTAnimate = animate
        Exit Function
    ElseIf (animate = 1 Or animate = 4) And animtime > DTDropDelay Then
        primary.collidable = 0
        If animate = 1 Then secondary.collidable = 1 Else secondary.collidable = 1 'If animate = 1 Then secondary.collidable = 1 Else secondary.collidable = 0 'updated by rothbauerw to account for edge case
        prim.rotx = DTMaxBend * Cos(rangle)
        prim.roty = DTMaxBend * Sin(rangle)
        animate = 2
        SoundDropTargetDrop prim
    End If

    If animate = 2 Then  'Dropping
        transz = (animtime - DTDropDelay) / DTDropSpeed * DTDropUnits *  - 1
        If prim.transz >  - DTDropUnits  Then
            prim.transz = transz
        End If

        prim.rotx = DTMaxBend * Cos(rangle) / 2
        prim.roty = DTMaxBend * Sin(rangle) / 2

        If prim.transz <= - DTDropUnits Then
            prim.transz =  - DTDropUnits
            secondary.collidable = 0
            DTArray(ind).isDropped = True 'Mark target as dropped
            DTAction switchid, 1
            primary.uservalue = 0
            DTAnimate = 0
            Exit Function
        Else
            DTAnimate = 2
            Exit Function
        End If
    End If

    If animate = 3 And animtime < DTDropDelay Then  'Hit, but keep up
        primary.collidable = 0
        secondary.collidable = 1
        prim.rotx = DTMaxBend * Cos(rangle)
        prim.roty = DTMaxBend * Sin(rangle)
    ElseIf animate = 3 And animtime > DTDropDelay Then
        primary.collidable = 1
        secondary.collidable = 0
        prim.rotx = 0
        prim.roty = 0
        primary.uservalue = 0
        DTAnimate = 0
        Exit Function
    End If

    If animate =  - 1 Then  'Raise
        transz = (1 - (animtime) / DTDropUpSpeed) * DTDropUnits *  - 1

        If prim.transz =  - DTDropUnits Then
            Dim b
            'Dim gBOT
            'gBOT = GetBalls

            For b = 0 To UBound(gBOT)
                If InRotRect(gBOT(b).x,gBOT(b).y,prim.x, prim.y, prim.rotz, - 25, - 10,25, - 10,25,25, - 25,25) And gBOT(b).z < prim.z + DTDropUnits + 25 Then
                    gBOT(b).velz = 20
                End If
            Next
        End If

        If prim.transz < 0 Then
            prim.transz = transz
        ElseIf transz > 0 Then
            prim.transz = transz
        End If

        If prim.transz > DTDropUpUnits Then
            DTAnimate =  - 2
            prim.transz = DTDropUpUnits
            prim.rotx = 0
            prim.roty = 0
            primary.uservalue = GameTime
        End If
        primary.collidable = 0
        secondary.collidable = 1
        DTArray(ind).isDropped = False 'Mark target as not dropped
        DTAction switchid, 0
    End If

    If animate =  - 2 And animtime > DTRaiseDelay Then  'Raise recoil
        prim.transz = (animtime - DTRaiseDelay) / DTDropSpeed * DTDropUnits *  - 1 + DTDropUpUnits
        If prim.transz < 0 Then
            prim.transz = 0
            primary.uservalue = 0
            DTAnimate = 0

            primary.collidable = 1
            secondary.collidable = 0
        End If
    End If
End Function

Function DTDropped(switchid)
    Dim ind
    ind = DTArrayID(switchid)

    DTDropped = DTArray(ind).isDropped
End Function

Sub DTAction(switchid, dropped)
    If dropped = 1 Then
        DispatchPinEvent DTArray(DTArrayID(switchid)).Primary.Name & "_active", Null
    Else
        DispatchPinEvent DTArray(DTArrayID(switchid)).Primary.Name & "_inactive", Null
    End If
End Sub


Sub DTMeteor1Callback(state)
    Select Case state
        Case 0
            DTRaise 1
            SoundDropTargetDrop BM_TMet1
        Case 1
            DTDrop 1
        Case 3
            'Enable Keep up, i.e. prevent roth drop from dropping when a ball hits
            DTEnableKeepup 1
        Case 4
            'Disable Keep up, i.e. allow roth drop to drop when a ball hits
            DTDisableKeepup 1
    End Select
End Sub

Sub DTMeteor2Callback(state)
    Select Case state
        Case 0
            DTRaise 2
            SoundDropTargetDrop BM_TMet2
        Case 1
            DTDrop 2
        Case 3
            'Enable Keep up, i.e. prevent roth drop from dropping when a ball hits
            DTEnableKeepup 2
        Case 4
            'Disable Keep up, i.e. allow roth drop to drop when a ball hits
            DTDisableKeepup 2
    End Select
End Sub

Sub DTMeteor3Callback(state)
    Select Case state
        Case 0
            DTRaise 3
            SoundDropTargetDrop BM_TMet3
        Case 1
            DTDrop 3
        Case 3
            'Enable Keep up, i.e. prevent roth drop from dropping when a ball hits
            DTEnableKeepup 3
        Case 4
            'Disable Keep up, i.e. allow roth drop to drop when a ball hits
            DTDisableKeepup 3
    End Select
End Sub

Sub DTMeteor4Callback(state)
    Select Case state
        Case 0
            DTRaise 4
            SoundDropTargetDrop BM_TMet4
        Case 1
            DTDrop 4
        Case 3
            'Enable Keep up, i.e. prevent roth drop from dropping when a ball hits
            DTEnableKeepup 4
        Case 4
            'Disable Keep up, i.e. allow roth drop to drop when a ball hits
            DTDisableKeepup 4
    End Select
End Sub




'******************************************************
'****  ZFLE : FLEEP MECHANICAL SOUNDS
'******************************************************

'///////////////////////////////  SOUNDS PARAMETERS  //////////////////////////////
Dim GlobalSoundLevel, CoinSoundLevel, PlungerReleaseSoundLevel, PlungerPullSoundLevel, NudgeLeftSoundLevel
Dim NudgeRightSoundLevel, NudgeCenterSoundLevel, StartButtonSoundLevel, RollingSoundFactor

CoinSoundLevel = 1                            'volume level; range [0, 1]
NudgeLeftSoundLevel = 1                         'volume level; range [0, 1]
NudgeRightSoundLevel = 1                        'volume level; range [0, 1]
NudgeCenterSoundLevel = 1                       'volume level; range [0, 1]
StartButtonSoundLevel = 0.1                       'volume level; range [0, 1]
PlungerReleaseSoundLevel = 0.8 '1 wjr                     'volume level; range [0, 1]
PlungerPullSoundLevel = 1                       'volume level; range [0, 1]
RollingSoundFactor = 1.1/5

'///////////////////////-----Solenoids, Kickers and Flash Relays-----///////////////////////
Dim FlipperUpAttackMinimumSoundLevel, FlipperUpAttackMaximumSoundLevel, FlipperUpAttackLeftSoundLevel, FlipperUpAttackRightSoundLevel
Dim FlipperUpSoundLevel, FlipperDownSoundLevel, FlipperLeftHitParm, FlipperRightHitParm
Dim SlingshotSoundLevel, BumperSoundFactor, KnockerSoundLevel

FlipperUpAttackMinimumSoundLevel = 0.010                      'volume level; range [0, 1]
FlipperUpAttackMaximumSoundLevel = 0.635                'volume level; range [0, 1]
FlipperUpSoundLevel = 1.0                                   'volume level; range [0, 1]
FlipperDownSoundLevel = 0.45                                  'volume level; range [0, 1]
FlipperLeftHitParm = FlipperUpSoundLevel                'sound helper; not configurable
FlipperRightHitParm = FlipperUpSoundLevel               'sound helper; not configurable
SlingshotSoundLevel = 0.95                        'volume level; range [0, 1]
BumperSoundFactor = 1                             'volume multiplier; must not be zero
KnockerSoundLevel = 1                           'volume level; range [0, 1]

'///////////////////////-----Ball Drops, Bumps and Collisions-----///////////////////////
Dim RubberStrongSoundFactor, RubberWeakSoundFactor, RubberFlipperSoundFactor,BallWithBallCollisionSoundFactor
Dim BallBouncePlayfieldSoftFactor, BallBouncePlayfieldHardFactor, PlasticRampDropToPlayfieldSoundLevel, WireRampDropToPlayfieldSoundLevel, DelayedBallDropOnPlayfieldSoundLevel
Dim WallImpactSoundFactor, MetalImpactSoundFactor, SubwaySoundLevel, SubwayEntrySoundLevel, ScoopEntrySoundLevel
Dim SaucerLockSoundLevel, SaucerKickSoundLevel

BallWithBallCollisionSoundFactor = 3.2                  'volume multiplier; must not be zero
RubberStrongSoundFactor = 0.055/5                     'volume multiplier; must not be zero
RubberWeakSoundFactor = 0.075/5                     'volume multiplier; must not be zero
RubberFlipperSoundFactor = 0.075/5                    'volume multiplier; must not be zero
BallBouncePlayfieldSoftFactor = 0.025                 'volume multiplier; must not be zero
BallBouncePlayfieldHardFactor = 0.025                 'volume multiplier; must not be zero
DelayedBallDropOnPlayfieldSoundLevel = 0.8                  'volume level; range [0, 1]
WallImpactSoundFactor = 0.075                     'volume multiplier; must not be zero
MetalImpactSoundFactor = 0.075/3
SaucerLockSoundLevel = 0.8
SaucerKickSoundLevel = 0.8

'///////////////////////-----Gates, Spinners, Rollovers and Targets-----///////////////////////

Dim GateSoundLevel, TargetSoundFactor, SpinnerSoundLevel, RolloverSoundLevel, DTSoundLevel

GateSoundLevel = 0.5/5                          'volume level; range [0, 1]
TargetSoundFactor = 0.0025 * 10                     'volume multiplier; must not be zero
DTSoundLevel = 0.25                           'volume multiplier; must not be zero
RolloverSoundLevel = 0.25                                       'volume level; range [0, 1]
SpinnerSoundLevel = 0.5                                       'volume level; range [0, 1]

'///////////////////////-----Ball Release, Guides and Drain-----///////////////////////
Dim DrainSoundLevel, BallReleaseSoundLevel, BottomArchBallGuideSoundFactor, FlipperBallGuideSoundFactor

DrainSoundLevel = 0.8                           'volume level; range [0, 1]
BallReleaseSoundLevel = 1                       'volume level; range [0, 1]
BottomArchBallGuideSoundFactor = 0.2                  'volume multiplier; must not be zero
FlipperBallGuideSoundFactor = 0.015                   'volume multiplier; must not be zero

'///////////////////////-----Loops and Lanes-----///////////////////////
Dim ArchSoundFactor
ArchSoundFactor = 0.025/5                         'volume multiplier; must not be zero


'/////////////////////////////  SOUND PLAYBACK FUNCTIONS  ////////////////////////////
'/////////////////////////////  POSITIONAL SOUND PLAYBACK METHODS  ////////////////////////////
' Positional sound playback methods will play a sound, depending on the X,Y position of the table element or depending on ActiveBall object position
' These are similar subroutines that are less complicated to use (e.g. simply use standard parameters for the PlaySound call)
' For surround setup - positional sound playback functions will fade between front and rear surround channels and pan between left and right channels
' For stereo setup - positional sound playback functions will only pan between left and right channels
' For mono setup - positional sound playback functions will not pan between left and right channels and will not fade between front and rear channels

' PlaySound full syntax - PlaySound(string, int loopcount, float volume, float pan, float randompitch, int pitch, bool useexisting, bool restart, float front_rear_fade)
' Note - These functions will not work (currently) for walls/slingshots as these do not feature a simple, single X,Y position
Sub PlaySoundAtLevelStatic(playsoundparams, aVol, tableobj)
  PlaySound playsoundparams, 0, min(aVol,1) * MechVol, AudioPan(tableobj), 0, 0, 0, 0, AudioFade(tableobj)
End Sub

Sub PlaySoundAtLevelExistingStatic(playsoundparams, aVol, tableobj)
  PlaySound playsoundparams, 0, min(aVol,1) * MechVol, AudioPan(tableobj), 0, 0, 1, 0, AudioFade(tableobj)
End Sub

Sub PlaySoundAtLevelStaticLoop(playsoundparams, aVol, tableobj)
  PlaySound playsoundparams, -1, min(aVol,1) * MechVol, AudioPan(tableobj), 0, 0, 0, 0, AudioFade(tableobj)
End Sub

Sub PlaySoundAtLevelStaticRandomPitch(playsoundparams, aVol, randomPitch, tableobj)
  PlaySound playsoundparams, 0, min(aVol,1) * MechVol, AudioPan(tableobj), randomPitch, 0, 0, 0, AudioFade(tableobj)
End Sub

Sub PlaySoundAtLevelActiveBall(playsoundparams, aVol)
  PlaySound playsoundparams, 0, min(aVol,1) * MechVol, AudioPan(ActiveBall), 0, 0, 0, 0, AudioFade(ActiveBall)
End Sub

Sub PlaySoundAtLevelExistingActiveBall(playsoundparams, aVol)
  PlaySound playsoundparams, 0, min(aVol,1) * MechVol, AudioPan(ActiveBall), 0, 0, 1, 0, AudioFade(ActiveBall)
End Sub

Sub PlaySoundAtLeveTimerActiveBall(playsoundparams, aVol, ballvariable)
  PlaySound playsoundparams, 0, min(aVol,1) * MechVol, AudioPan(ballvariable), 0, 0, 0, 0, AudioFade(ballvariable)
End Sub

Sub PlaySoundAtLevelTimerExistingActiveBall(playsoundparams, aVol, ballvariable)
  PlaySound playsoundparams, 0, min(aVol,1) * MechVol, AudioPan(ballvariable), 0, 0, 1, 0, AudioFade(ballvariable)
End Sub

Sub PlaySoundAtLevelRoll(playsoundparams, aVol, pitch)
  PlaySound playsoundparams, -1, min(aVol,1) * MechVol, AudioPan(tableobj), randomPitch, 0, 0, 0, AudioFade(tableobj)
End Sub

' Previous Positional Sound Subs

Sub PlaySoundAt(soundname, tableobj)
  PlaySound soundname, 1, 1 * MechVol, AudioPan(tableobj), 0,0,0, 1, AudioFade(tableobj)
End Sub

Sub PlaySoundAtVol(soundname, tableobj, aVol)
  PlaySound soundname, 1, min(aVol,1) * MechVol, AudioPan(tableobj), 0,0,0, 1, AudioFade(tableobj)
End Sub

Sub PlaySoundAtBall(soundname)
  PlaySoundAt soundname, ActiveBall
End Sub

Sub PlaySoundAtBallVol (Soundname, aVol)
  Playsound soundname, 1,min(aVol,1) * MechVol, AudioPan(ActiveBall), 0,0,0, 1, AudioFade(ActiveBall)
End Sub

Sub PlaySoundAtBallVolM (Soundname, aVol)
  Playsound soundname, 1,min(aVol,1) * MechVol, AudioPan(ActiveBall), 0,0,0, 0, AudioFade(ActiveBall)
End Sub

Sub PlaySoundAtVolLoops(sound, tableobj, Vol, Loops)
  PlaySound sound, Loops, Vol * MechVol, AudioPan(tableobj), 0,0,0, 1, AudioFade(tableobj)
End Sub

' Sub PlaySoundVol(soundname, Volume)
'   PlaySound soundname, 1, Volume*BackglassVol
' End Sub

'******************************************************
'  Fleep  Supporting Ball & Sound Functions
'******************************************************

Function AudioFade(tableobj) ' Fades between front and back of the table (for surround systems or 2x2 speakers, etc), depending on the Y position on the table. "table1" is the name of the table
  Dim tmp
    tmp = tableobj.y * 2 / tableheight-1

  if tmp > 7000 Then
    tmp = 7000
  elseif tmp < -7000 Then
    tmp = -7000
  end if

    If tmp > 0 Then
    AudioFade = Csng(tmp ^5)
    Else
        AudioFade = Csng(-((- tmp) ^5) )
    End If
End Function

Function AudioPan(tableobj) ' Calculates the pan for a tableobj based on the X position on the table. "table1" is the name of the table
    Dim tmp
    tmp = tableobj.x * 2 / tablewidth-1

  if tmp > 7000 Then
    tmp = 7000
  elseif tmp < -7000 Then
    tmp = -7000
  end if

    If tmp > 0 Then
        AudioPan = Csng(tmp ^5)
    Else
        AudioPan = Csng(-((- tmp) ^5) )
    End If
End Function

Function Vol(ball) ' Calculates the volume of the sound based on the ball speed
  Vol = Csng(BallVel(ball) ^2)
End Function

Function Volz(ball) ' Calculates the volume of the sound based on the ball speed
  Volz = Csng((ball.velz) ^2)
End Function

Function Pitch(ball) ' Calculates the pitch of the sound based on the ball speed
  Pitch = BallVel(ball) * 20
End Function

Function BallVel(ball) 'Calculates the ball speed
  BallVel = INT(SQR((ball.VelX ^2) + (ball.VelY ^2) ) )
End Function

Function VolPlayfieldRoll(ball) ' Calculates the roll volume of the sound based on the ball speed
  VolPlayfieldRoll = RollingSoundFactor * 0.0005 * Csng(BallVel(ball) ^3)
End Function

Function PitchPlayfieldRoll(ball) ' Calculates the roll pitch of the sound based on the ball speed
  PitchPlayfieldRoll = BallVel(ball) ^2 * 15
End Function

Function RndInt(min, max)
  RndInt = Int(Rnd() * (max-min + 1) + min)' Sets a random number integer between min and max
End Function

Function RndNum(min, max)
  RndNum = Rnd() * (max-min) + min' Sets a random number between min and max
End Function

'/////////////////////////////  GENERAL SOUND SUBROUTINES  ////////////////////////////
Sub SoundStartButton()
  PlaySound ("mfx_Start_Button"), 0, StartButtonSoundLevel, 0, 0.25
End Sub

Sub SoundNudgeLeft()
  PlaySound ("mfx_Nudge_" & Int(Rnd*2)+1), 0, NudgeLeftSoundLevel * MechVol, -0.1, 0.25
End Sub

Sub SoundNudgeRight()
  PlaySound ("mfx_Nudge_" & Int(Rnd*2)+1), 0, NudgeRightSoundLevel * MechVol, 0.1, 0.25
End Sub

Sub SoundNudgeCenter()
  PlaySound ("mfx_Nudge_" & Int(Rnd*2)+1), 0, NudgeCenterSoundLevel * MechVol, 0, 0.25
End Sub


Sub SoundPlungerPull()
  PlaySoundAtLevelStatic ("mfx_Plunger_Pull_1"), PlungerPullSoundLevel, Plunger
End Sub

Sub SoundPlungerReleaseBall()
  PlaySoundAtLevelStatic ("mfx_Plunger_Release_Ball"), PlungerReleaseSoundLevel, Plunger
End Sub

Sub SoundPlungerReleaseNoBall()
  PlaySoundAtLevelStatic ("mfx_Plunger_Release_No_Ball"), PlungerReleaseSoundLevel, Plunger
End Sub


'/////////////////////////////  COIN IN  ////////////////////////////
Sub RandomCoinSound
  Select Case Int(rnd*3)
    Case 0: PlaySound ("mfx_Coin_In_1"), 0, CoinSoundLevel, 0, 0.25
    Case 1: PlaySound ("mfx_Coin_In_2"), 0, CoinSoundLevel, 0, 0.25
    Case 2: PlaySound ("mfx_Coin_In_3"), 0, CoinSoundLevel, 0, 0.25
  End Select
End Sub


'/////////////////////////////  KNOCKER SOLENOID  ////////////////////////////
Sub KnockerSolenoid()
  PlaySoundAtLevelStatic SoundFX("mfx_Knocker_1",DOFKnocker), KnockerSoundLevel, KnockerPosition
End Sub

'/////////////////////////////  DRAIN SOUNDS  ////////////////////////////
Sub RandomSoundDrain(drainswitch)
  PlaySoundAtLevelStatic ("mfx_Drain_" & Int(Rnd*11)+1), DrainSoundLevel, drainswitch
End Sub

'/////////////////////////////  TROUGH BALL RELEASE SOLENOID SOUNDS  ////////////////////////////

Sub RandomSoundBallRelease(drainswitch)
  PlaySoundAtLevelStatic SoundFX("mfx_BallRelease" & Int(Rnd*7)+1,DOFContactors), BallReleaseSoundLevel, drainswitch
End Sub

'/////////////////////////////  SLINGSHOT SOLENOID SOUNDS  ////////////////////////////
Sub RandomSoundSlingshotLeft(sling)
  PlaySoundAtLevelStatic SoundFX("mfx_Sling_L" & Int(Rnd*10)+1,DOFContactors), SlingshotSoundLevel, Sling
End Sub

Sub RandomSoundSlingshotRight(sling)
  PlaySoundAtLevelStatic SoundFX("mfx_Sling_R" & Int(Rnd*8)+1,DOFContactors), SlingshotSoundLevel, Sling
End Sub

'/////////////////////////////  BUMPER SOLENOID SOUNDS  ////////////////////////////
Sub RandomSoundBumperTop(Bump)
  PlaySoundAtLevelStatic SoundFX("mfx_Bumpers_Top_" & Int(Rnd*5)+1,DOFContactors), BumperSoundFactor, Bump
End Sub

Sub RandomSoundBumperMiddle(Bump)
  PlaySoundAtLevelStatic SoundFX("mfx_Bumpers_Middle_" & Int(Rnd*5)+1,DOFContactors), BumperSoundFactor, Bump
End Sub

Sub RandomSoundBumperBottom(Bump)
  PlaySoundAtLevelStatic SoundFX("mfx_Bumpers_Bottom_" & Int(Rnd*5)+1,DOFContactors), BumperSoundFactor, Bump
End Sub

'/////////////////////////////  SPINNER SOUNDS  ////////////////////////////
Sub SoundSpinner(spinnerswitch)
  PlaySoundAtLevelStatic ("mfx_Spinner"), SpinnerSoundLevel, spinnerswitch
End Sub


'/////////////////////////////  FLIPPER BATS SOUND SUBROUTINES  ////////////////////////////
'/////////////////////////////  FLIPPER BATS SOLENOID ATTACK SOUND  ////////////////////////////
Sub SoundFlipperUpAttackLeft(flipper)
  FlipperUpAttackLeftSoundLevel = RndNum(FlipperUpAttackMinimumSoundLevel, FlipperUpAttackMaximumSoundLevel)
  PlaySoundAtLevelStatic SoundFX("mfx_Flipper_Attack-L01",DOFFlippers), FlipperUpAttackLeftSoundLevel, flipper
End Sub

Sub SoundFlipperUpAttackRight(flipper)
  FlipperUpAttackRightSoundLevel = RndNum(FlipperUpAttackMinimumSoundLevel, FlipperUpAttackMaximumSoundLevel)
  PlaySoundAtLevelStatic SoundFX("mfx_Flipper_Attack-R01",DOFFlippers), FlipperUpAttackLeftSoundLevel, flipper
End Sub

'/////////////////////////////  FLIPPER BATS SOLENOID CORE SOUND  ////////////////////////////
Sub RandomSoundFlipperUpLeft(flipper)
  PlaySoundAtLevelStatic SoundFX("mfx_Flipper_L0" & Int(Rnd*9)+1,DOFFlippers), FlipperLeftHitParm, Flipper
End Sub

Sub RandomSoundFlipperUpRight(flipper)
  PlaySoundAtLevelStatic SoundFX("mfx_Flipper_R0" & Int(Rnd*9)+1,DOFFlippers), FlipperRightHitParm, Flipper
End Sub

Sub RandomSoundReflipUpLeft(flipper)
  PlaySoundAtLevelStatic SoundFX("mfx_Flipper_ReFlip_L0" & Int(Rnd*3)+1,DOFFlippers), (RndNum(0.8, 1))*FlipperUpSoundLevel, Flipper
End Sub

Sub RandomSoundReflipUpRight(flipper)
  PlaySoundAtLevelStatic SoundFX("mfx_Flipper_ReFlip_R0" & Int(Rnd*3)+1,DOFFlippers), (RndNum(0.8, 1))*FlipperUpSoundLevel, Flipper
End Sub

Sub RandomSoundFlipperDownLeft(flipper)
  PlaySoundAtLevelStatic SoundFX("mfx_Flipper_Left_Down_" & Int(Rnd*7)+1,DOFFlippers), FlipperDownSoundLevel, Flipper
End Sub

Sub RandomSoundFlipperDownRight(flipper)
  PlaySoundAtLevelStatic SoundFX("mfx_Flipper_Right_Down_" & Int(Rnd*8)+1,DOFFlippers), FlipperDownSoundLevel, Flipper
End Sub

'/////////////////////////////  FLIPPER BATS BALL COLLIDE SOUND  ////////////////////////////

Sub LeftFlipperCollide(parm)
  FlipperLeftHitParm = parm/10
  If FlipperLeftHitParm > 1 Then
    FlipperLeftHitParm = 1
  End If
  FlipperLeftHitParm = FlipperUpSoundLevel * FlipperLeftHitParm
  RandomSoundRubberFlipper(parm)
End Sub

Sub RightFlipperCollide(parm)
  FlipperRightHitParm = parm/10
  If FlipperRightHitParm > 1 Then
    FlipperRightHitParm = 1
  End If
  FlipperRightHitParm = FlipperUpSoundLevel * FlipperRightHitParm
  RandomSoundRubberFlipper(parm)
End Sub

Sub RandomSoundRubberFlipper(parm)
  PlaySoundAtLevelActiveBall ("mfx_Flipper_Rubber_" & Int(Rnd*7)+1), parm  * RubberFlipperSoundFactor
End Sub

'/////////////////////////////  ROLLOVER SOUNDS  ////////////////////////////
Sub RandomSoundRollover()
  PlaySoundAtLevelActiveBall ("mfx_Rollover_" & Int(Rnd*4)+1), RolloverSoundLevel
End Sub

Sub Rollovers_Hit(idx)
  RandomSoundRollover
End Sub

'/////////////////////////////  VARIOUS PLAYFIELD SOUND SUBROUTINES  ////////////////////////////
'/////////////////////////////  RUBBERS AND POSTS  ////////////////////////////
'/////////////////////////////  RUBBERS - EVENTS  ////////////////////////////
Sub Rubbers_Hit(idx)
  dim finalspeed
  finalspeed=SQR(activeball.velx * activeball.velx + activeball.vely * activeball.vely)
  If finalspeed > 5 then
    RandomSoundRubberStrong 1
  End if
  If finalspeed <= 5 then
    RandomSoundRubberWeak()
  End If
End Sub

'/////////////////////////////  RUBBERS AND POSTS - STRONG IMPACTS  ////////////////////////////
Sub RandomSoundRubberStrong(voladj)
  Select Case Int(Rnd*10)+1
    Case 1 : PlaySoundAtLevelActiveBall ("mfx_Rubber_Strong_1"), Vol(ActiveBall) * RubberStrongSoundFactor*voladj
    Case 2 : PlaySoundAtLevelActiveBall ("mfx_Rubber_Strong_2"), Vol(ActiveBall) * RubberStrongSoundFactor*voladj
    Case 3 : PlaySoundAtLevelActiveBall ("mfx_Rubber_Strong_3"), Vol(ActiveBall) * RubberStrongSoundFactor*voladj
    Case 4 : PlaySoundAtLevelActiveBall ("mfx_Rubber_Strong_4"), Vol(ActiveBall) * RubberStrongSoundFactor*voladj
    Case 5 : PlaySoundAtLevelActiveBall ("mfx_Rubber_Strong_5"), Vol(ActiveBall) * RubberStrongSoundFactor*voladj
    Case 6 : PlaySoundAtLevelActiveBall ("mfx_Rubber_Strong_6"), Vol(ActiveBall) * RubberStrongSoundFactor*voladj
    Case 7 : PlaySoundAtLevelActiveBall ("mfx_Rubber_Strong_7"), Vol(ActiveBall) * RubberStrongSoundFactor*voladj
    Case 8 : PlaySoundAtLevelActiveBall ("mfx_Rubber_Strong_8"), Vol(ActiveBall) * RubberStrongSoundFactor*voladj
    Case 9 : PlaySoundAtLevelActiveBall ("mfx_Rubber_Strong_9"), Vol(ActiveBall) * RubberStrongSoundFactor*voladj
    Case 10 : PlaySoundAtLevelActiveBall ("mfx_Rubber_1_Hard"), Vol(ActiveBall) * RubberStrongSoundFactor * 0.6*voladj
  End Select
End Sub

'/////////////////////////////  RUBBERS AND POSTS - WEAK IMPACTS  ////////////////////////////
Sub RandomSoundRubberWeak()
  PlaySoundAtLevelActiveBall ("mfx_Rubber_" & Int(Rnd*9)+1), Vol(ActiveBall) * RubberWeakSoundFactor
End Sub

'/////////////////////////////  WALL IMPACTS  ////////////////////////////
Sub Walls_Hit(idx)
  RandomSoundWall()
End Sub

Sub RandomSoundWall()
  dim finalspeed
  finalspeed=SQR(activeball.velx * activeball.velx + activeball.vely * activeball.vely)
  If finalspeed > 16 then
    Select Case Int(Rnd*5)+1
      Case 1 : PlaySoundAtLevelExistingActiveBall ("mfx_Wall_Hit_1"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 2 : PlaySoundAtLevelExistingActiveBall ("mfx_Wall_Hit_2"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 3 : PlaySoundAtLevelExistingActiveBall ("mfx_Wall_Hit_5"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 4 : PlaySoundAtLevelExistingActiveBall ("mfx_Wall_Hit_7"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 5 : PlaySoundAtLevelExistingActiveBall ("mfx_Wall_Hit_9"), Vol(ActiveBall) * WallImpactSoundFactor
    End Select
  End if
  If finalspeed >= 6 AND finalspeed <= 16 then
    Select Case Int(Rnd*4)+1
      Case 1 : PlaySoundAtLevelExistingActiveBall ("mfx_Wall_Hit_3"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 2 : PlaySoundAtLevelExistingActiveBall ("mfx_Wall_Hit_4"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 3 : PlaySoundAtLevelExistingActiveBall ("mfx_Wall_Hit_6"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 4 : PlaySoundAtLevelExistingActiveBall ("mfx_Wall_Hit_8"), Vol(ActiveBall) * WallImpactSoundFactor
    End Select
  End If
  If finalspeed < 6 Then
    Select Case Int(Rnd*3)+1
      Case 1 : PlaySoundAtLevelExistingActiveBall ("mfx_Wall_Hit_4"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 2 : PlaySoundAtLevelExistingActiveBall ("mfx_Wall_Hit_6"), Vol(ActiveBall) * WallImpactSoundFactor
      Case 3 : PlaySoundAtLevelExistingActiveBall ("mfx_Wall_Hit_8"), Vol(ActiveBall) * WallImpactSoundFactor
    End Select
  End if
End Sub

'/////////////////////////////  METAL TOUCH SOUNDS  ////////////////////////////
Sub RandomSoundMetal()
  PlaySoundAtLevelActiveBall ("mfx_Metal_Touch_" & Int(Rnd*13)+1), Vol(ActiveBall) * MetalImpactSoundFactor
End Sub

'/////////////////////////////  METAL - EVENTS  ////////////////////////////

Sub Metals_Hit (idx)
  RandomSoundMetal
End Sub

Sub DiverterFlipper_collide(idx)
  RandomSoundMetal
End Sub


'/////////////////////////////  BOTTOM ARCH BALL GUIDE  ////////////////////////////
'/////////////////////////////  BOTTOM ARCH BALL GUIDE - SOFT BOUNCES  ////////////////////////////
Sub RandomSoundBottomArchBallGuide()
  dim finalspeed
  finalspeed=SQR(activeball.velx * activeball.velx + activeball.vely * activeball.vely)
  If finalspeed > 16 then
    PlaySoundAtLevelActiveBall ("mfx_Apron_Bounce_"& Int(Rnd*2)+1), Vol(ActiveBall) * BottomArchBallGuideSoundFactor
  End if
  If finalspeed >= 6 AND finalspeed <= 16 then
    Select Case Int(Rnd*2)+1
      Case 1 : PlaySoundAtLevelActiveBall ("mfx_Apron_Bounce_1"), Vol(ActiveBall) * BottomArchBallGuideSoundFactor
      Case 2 : PlaySoundAtLevelActiveBall ("mfx_Apron_Bounce_Soft_1"), Vol(ActiveBall) * BottomArchBallGuideSoundFactor
    End Select
  End If
  If finalspeed < 6 Then
    Select Case Int(Rnd*2)+1
      Case 1 : PlaySoundAtLevelActiveBall ("mfx_Apron_Bounce_Soft_1"), Vol(ActiveBall) * BottomArchBallGuideSoundFactor
      Case 2 : PlaySoundAtLevelActiveBall ("mfx_Apron_Medium_3"), Vol(ActiveBall) * BottomArchBallGuideSoundFactor
    End Select
  End if
End Sub

'/////////////////////////////  BOTTOM ARCH BALL GUIDE - HARD HITS  ////////////////////////////
Sub RandomSoundBottomArchBallGuideHardHit()
  PlaySoundAtLevelActiveBall ("mfx_Apron_Hard_Hit_" & Int(Rnd*3)+1), BottomArchBallGuideSoundFactor * 0.25
End Sub

Sub Apron_Hit (idx)
  If Abs(cor.ballvelx(activeball.id) < 4) and cor.ballvely(activeball.id) > 7 then
    RandomSoundBottomArchBallGuideHardHit()
  Else
    RandomSoundBottomArchBallGuide
  End If
End Sub

'/////////////////////////////  FLIPPER BALL GUIDE  ////////////////////////////
Sub RandomSoundFlipperBallGuide()
  dim finalspeed
  finalspeed=SQR(activeball.velx * activeball.velx + activeball.vely * activeball.vely)
  If finalspeed > 16 then
    Select Case Int(Rnd*2)+1
      Case 1 : PlaySoundAtLevelActiveBall ("mfx_Apron_Hard_1"),  Vol(ActiveBall) * FlipperBallGuideSoundFactor
      Case 2 : PlaySoundAtLevelActiveBall ("mfx_Apron_Hard_2"),  Vol(ActiveBall) * 0.8 * FlipperBallGuideSoundFactor
    End Select
  End if
  If finalspeed >= 6 AND finalspeed <= 16 then
    PlaySoundAtLevelActiveBall ("mfx_Apron_Medium_" & Int(Rnd*3)+1),  Vol(ActiveBall) * FlipperBallGuideSoundFactor
  End If
  If finalspeed < 6 Then
    PlaySoundAtLevelActiveBall ("mfx_Apron_Soft_" & Int(Rnd*7)+1),  Vol(ActiveBall) * FlipperBallGuideSoundFactor
  End If
End Sub

'/////////////////////////////  TARGET HIT SOUNDS  ////////////////////////////
Sub RandomSoundTargetHitStrong()
  PlaySoundAtLevelActiveBall SoundFX("mfx_Target_Hit_" & Int(Rnd*4)+5,DOFTargets), Vol(ActiveBall) * 0.45 * TargetSoundFactor
End Sub

Sub RandomSoundTargetHitWeak()
  PlaySoundAtLevelActiveBall SoundFX("mfx_Target_Hit_" & Int(Rnd*4)+1,DOFTargets), Vol(ActiveBall) * TargetSoundFactor
End Sub

Sub PlayTargetSound()
  dim finalspeed
  finalspeed=SQR(activeball.velx * activeball.velx + activeball.vely * activeball.vely)
  If finalspeed > 10 then
    RandomSoundTargetHitStrong()
    RandomSoundBallBouncePlayfieldSoft Activeball
  Else
    RandomSoundTargetHitWeak()
  End If
End Sub

Sub Targets_Hit (idx)
  PlayTargetSound
End Sub

'/////////////////////////////  BALL BOUNCE SOUNDS  ////////////////////////////
Sub RandomSoundBallBouncePlayfieldSoft(aBall)
  Select Case Int(Rnd*9)+1
    Case 1 : PlaySoundAtLevelStatic ("mfx_Ball_Bounce_Playfield_Soft_1"), volz(aBall) * BallBouncePlayfieldSoftFactor, aBall
    Case 2 : PlaySoundAtLevelStatic ("mfx_Ball_Bounce_Playfield_Soft_2"), volz(aBall) * BallBouncePlayfieldSoftFactor * 0.5, aBall
    Case 3 : PlaySoundAtLevelStatic ("mfx_Ball_Bounce_Playfield_Soft_3"), volz(aBall) * BallBouncePlayfieldSoftFactor * 0.8, aBall
    Case 4 : PlaySoundAtLevelStatic ("mfx_Ball_Bounce_Playfield_Soft_4"), volz(aBall) * BallBouncePlayfieldSoftFactor * 0.5, aBall
    Case 5 : PlaySoundAtLevelStatic ("mfx_Ball_Bounce_Playfield_Soft_5"), volz(aBall) * BallBouncePlayfieldSoftFactor, aBall
    Case 6 : PlaySoundAtLevelStatic ("mfx_Ball_Bounce_Playfield_Hard_1"), volz(aBall) * BallBouncePlayfieldSoftFactor * 0.2, aBall
    Case 7 : PlaySoundAtLevelStatic ("mfx_Ball_Bounce_Playfield_Hard_2"), volz(aBall) * BallBouncePlayfieldSoftFactor * 0.2, aBall
    Case 8 : PlaySoundAtLevelStatic ("mfx_Ball_Bounce_Playfield_Hard_5"), volz(aBall) * BallBouncePlayfieldSoftFactor * 0.2, aBall
    Case 9 : PlaySoundAtLevelStatic ("mfx_Ball_Bounce_Playfield_Hard_7"), volz(aBall) * BallBouncePlayfieldSoftFactor * 0.3, aBall
  End Select
End Sub

Sub RandomSoundBallBouncePlayfieldHard(aBall)
  PlaySoundAtLevelStatic ("mfx_Ball_Bounce_Playfield_Hard_" & Int(Rnd*7)+1), volz(aBall) * BallBouncePlayfieldHardFactor, aBall
End Sub

'/////////////////////////////  DELAYED DROP - TO PLAYFIELD - SOUND  ////////////////////////////
Sub RandomSoundDelayedBallDropOnPlayfield(aBall)
  Select Case Int(Rnd*5)+1
    Case 1 : PlaySoundAtLevelStatic ("mfx_Ball_Drop_Playfield_1_Delayed"), DelayedBallDropOnPlayfieldSoundLevel, aBall
    Case 2 : PlaySoundAtLevelStatic ("mfx_Ball_Drop_Playfield_2_Delayed"), DelayedBallDropOnPlayfieldSoundLevel, aBall
    Case 3 : PlaySoundAtLevelStatic ("mfx_Ball_Drop_Playfield_3_Delayed"), DelayedBallDropOnPlayfieldSoundLevel, aBall
    Case 4 : PlaySoundAtLevelStatic ("mfx_Ball_Drop_Playfield_4_Delayed"), DelayedBallDropOnPlayfieldSoundLevel, aBall
    Case 5 : PlaySoundAtLevelStatic ("mfx_Ball_Drop_Playfield_5_Delayed"), DelayedBallDropOnPlayfieldSoundLevel, aBall
  End Select
End Sub

'/////////////////////////////  BALL GATES AND BRACKET GATES SOUNDS  ////////////////////////////

Sub SoundPlayfieldGate()
  PlaySoundAtLevelStatic ("mfx_Gate_FastTrigger_" & Int(Rnd*2)+1), GateSoundLevel, Activeball
End Sub

Sub SoundHeavyGate()
  PlaySoundAtLevelStatic ("mfx_Gate_2"), GateSoundLevel, Activeball
End Sub

Sub Gates_hit(idx)
  SoundHeavyGate
End Sub

Sub GatesWire_hit(idx)
  SoundPlayfieldGate
End Sub

'/////////////////////////////  LEFT LANE ENTRANCE - SOUNDS  ////////////////////////////

Sub RandomSoundLeftArch()
  PlaySoundAtLevelActiveBall ("mfx_Arch_L" & Int(Rnd*4)+1), Vol(ActiveBall) * ArchSoundFactor
End Sub

Sub RandomSoundRightArch()
  PlaySoundAtLevelActiveBall ("mfx_Arch_R" & Int(Rnd*4)+1), Vol(ActiveBall) * ArchSoundFactor
End Sub


Sub Arch1_hit()
  If Activeball.velx > 1 Then SoundPlayfieldGate
  StopSound "mfx_Arch_L1"
  StopSound "mfx_Arch_L2"
  StopSound "mfx_Arch_L3"
  StopSound "mfx_Arch_L4"
End Sub

Sub Arch1_unhit()
  If activeball.velx < -8 Then
    RandomSoundRightArch
  End If
End Sub

Sub Arch2_hit()
  If Activeball.velx < 1 Then SoundPlayfieldGate
  StopSound "mfx_Arch_R1"
  StopSound "mfx_Arch_R2"
  StopSound "mfx_Arch_R3"
  StopSound "mfx_Arch_R4"
End Sub

Sub Arch2_unhit()
  If activeball.velx > 10 Then
    RandomSoundLeftArch
  End If
End Sub

'/////////////////////////////  SAUCERS (KICKER HOLES)  ////////////////////////////

Sub SoundSaucerLock()
  PlaySoundAtLevelStatic ("mfx_Saucer_Enter_" & Int(Rnd*2)+1), SaucerLockSoundLevel, Activeball
End Sub

Sub SoundSaucerKick(scenario, saucer)
  Select Case scenario
    Case 0: PlaySoundAtLevelStatic SoundFX("mfx_Saucer_Empty", DOFContactors), SaucerKickSoundLevel, saucer
    Case 1: PlaySoundAtLevelStatic SoundFX("mfx_Saucer_Kick", DOFContactors), SaucerKickSoundLevel, saucer
  End Select
End Sub

'/////////////////////////////  BALL COLLISION SOUND  ////////////////////////////
Sub OnBallBallCollision(ball1, ball2, velocity)

  FlipperCradleCollision ball1, ball2, velocity

  Dim snd
  Select Case Int(Rnd*7)+1
    Case 1 : snd = "mfx_Ball_Collide_1"
    Case 2 : snd = "mfx_Ball_Collide_2"
    Case 3 : snd = "mfx_Ball_Collide_3"
    Case 4 : snd = "mfx_Ball_Collide_4"
    Case 5 : snd = "mfx_Ball_Collide_5"
    Case 6 : snd = "mfx_Ball_Collide_6"
    Case 7 : snd = "mfx_Ball_Collide_7"
  End Select

  PlaySound (snd), 0, Csng(velocity) ^2 / 200 * BallWithBallCollisionSoundFactor * MechVol, AudioPan(ball1), 0, Pitch(ball1), 0, 0, AudioFade(ball1)
End Sub


'///////////////////////////  DROP TARGET HIT SOUNDS  ///////////////////////////

Sub RandomSoundDropTargetReset(obj)
  PlaySoundAtLevelStatic SoundFX("mfx_Drop_Target_Reset_" & Int(Rnd*6)+1,DOFContactors), 1, obj
End Sub

Sub SoundDropTargetDrop(obj)
  PlaySoundAtLevelStatic ("mfx_Drop_Target_Down_" & Int(Rnd*6)+1), 200, obj
End Sub

'/////////////////////////////  GI AND FLASHER RELAYS  ////////////////////////////

Const RelayFlashSoundLevel = 0.315                  'volume level; range [0, 1];
Const RelayGISoundLevel = 1.05                  'volume level; range [0, 1];

Sub Sound_GI_Relay(toggle, obj)
  Select Case toggle
    Case 1
      PlaySoundAtLevelStatic ("mfx_Relay_GI_On"), 0.025*RelayGISoundLevel, obj
    Case 0
      PlaySoundAtLevelStatic ("mfx_Relay_GI_Off"), 0.025*RelayGISoundLevel, obj
  End Select
End Sub

Sub Sound_Flash_Relay(toggle, obj)
  Select Case toggle
    Case 1
      PlaySoundAtLevelStatic ("mfx_Relay_Flash_On"), 0.025*RelayFlashSoundLevel, obj
    Case 0
      PlaySoundAtLevelStatic ("mfx_Relay_Flash_Off"), 0.025*RelayFlashSoundLevel, obj
  End Select
End Sub

'/////////////////////////////////////////////////////////////////
'         End Mechanical Sounds
'/////////////////////////////////////////////////////////////////

'******************************************************
'****  FLEEP MECHANICAL SOUNDS
'******************************************************





'*******************************************
'  ZFLP : Flippers
'*******************************************


' Flipper callbacks

Const ReflipAngle = 20

Sub LeftFlipperAction(Enabled)
  If Enabled Then
    DOF 101, DOFOn
    FlipperActivate LeftFlipper, LFPress
    LF.Fire
    If LeftFlipper.currentangle < LeftFlipper.endangle + ReflipAngle Then
      RandomSoundReflipUpLeft LeftFlipper
    Else
      SoundFlipperUpAttackLeft LeftFlipper
      RandomSoundFlipperUpLeft LeftFlipper
    End If
  Else
    DOF 101, DOFOff
    FlipperDeActivate LeftFlipper, LFPress
    LeftFlipper.RotateToStart
    If LeftFlipper.currentangle < LeftFlipper.startAngle - 5 Then
      RandomSoundFlipperDownLeft LeftFlipper
    End If
    FlipperLeftHitParm = FlipperUpSoundLevel
  End If
End Sub

Sub RightFlipperAction(Enabled)
  If Enabled Then
    DOF 102, DOFOn
    FlipperActivate RightFlipper, RFPress
    RF.Fire
    If StagedFlipper = 0 Then RightFlipper1.rotatetoend
    If RightFlipper.currentangle > RightFlipper.endangle - ReflipAngle Then
      RandomSoundReflipUpRight RightFlipper
    Else
      SoundFlipperUpAttackRight RightFlipper
      RandomSoundFlipperUpRight RightFlipper
    End If
  Else
    DOF 102, DOFOff
    FlipperDeActivate RightFlipper, RFPress
    RightFlipper.RotateToStart
    If StagedFlipper = 0 Then RightFlipper1.RotateToStart
    If RightFlipper.currentangle > RightFlipper.startAngle + 5 Then
      RandomSoundFlipperDownRight RightFlipper
    End If
    FlipperRightHitParm = FlipperUpSoundLevel
  End If
End Sub

Sub RightFlipper1Action(Enabled)
  If StagedFlipper = 0 Then Exit Sub
  If Enabled Then
    RightFlipper1.rotatetoend
    If RightFlipper1.currentangle > RightFlipper1.endangle - ReflipAngle Then
      RandomSoundReflipUpRight RightFlipper1
    Else
      SoundFlipperUpAttackRight RightFlipper1
      RandomSoundFlipperUpRight RightFlipper1
    End If
  Else
    RightFlipper1.RotateToStart
    If RightFlipper1.currentangle > RightFlipper1.startAngle + 5 Then
      RandomSoundFlipperDownRight RightFlipper1
    End If
    FlipperRightHitParm = FlipperUpSoundLevel
  End If
End Sub


' Flipper collide subs
Sub LeftFlipper_Collide(parm)
  CheckLiveCatch ActiveBall, LeftFlipper, LFCount, parm
  LF.ReProcessBalls ActiveBall
  LeftFlipperCollide parm
End Sub

Sub RightFlipper_Collide(parm)
  CheckLiveCatch ActiveBall, RightFlipper, RFCount, parm
  RF.ReProcessBalls ActiveBall
  RightFlipperCollide parm
End Sub

Sub RightFlipper1_Collide(parm)
  RightFlipperCollide parm
End Sub

'**********************************
'   ZMAT: General Math Functions
'**********************************
' These get used throughout the script.

Dim PI
PI = 4 * Atn(1)

Function dSin(degrees)
  dsin = Sin(degrees * Pi / 180)
End Function

Function dCos(degrees)
  dcos = Cos(degrees * Pi / 180)
End Function

Function Atn2(dy, dx)
  If dx > 0 Then
    Atn2 = Atn(dy / dx)
  ElseIf dx < 0 Then
    If dy = 0 Then
      Atn2 = pi
    Else
      Atn2 = Sgn(dy) * (pi - Atn(Abs(dy / dx)))
    End If
  ElseIf dx = 0 Then
    If dy = 0 Then
      Atn2 = 0
    Else
      Atn2 = Sgn(dy) * pi / 2
    End If
  End If
End Function

Function ArcCos(x)
  If x = 1 Then
    ArcCos = 0/180*PI
  ElseIf x = -1 Then
    ArcCos = 180/180*PI
  Else
    ArcCos = Atn(-x/Sqr(-x * x + 1)) + 2 * Atn(1)
  End If
End Function

Function max(a,b)
  If a > b Then
    max = a
  Else
    max = b
  End If
End Function

Function min(a,b)
  If a > b Then
    min = b
  Else
    min = a
  End If
End Function

Function Sgn(num)
  If num > 0 Then
    Sgn = 1
  Else
    Sgn = -1
  End If
End Function


' Used for drop targets
Function InRect(px,py,ax,ay,bx,by,cx,cy,dx,dy) 'Determines if a Points (px,py) is inside a 4 point polygon A-D in Clockwise/CCW order
  Dim AB, BC, CD, DA
  AB = (bx * py) - (by * px) - (ax * py) + (ay * px) + (ax * by) - (ay * bx)
  BC = (cx * py) - (cy * px) - (bx * py) + (by * px) + (bx * cy) - (by * cx)
  CD = (dx * py) - (dy * px) - (cx * py) + (cy * px) + (cx * dy) - (cy * dx)
  DA = (ax * py) - (ay * px) - (dx * py) + (dy * px) + (dx * ay) - (dy * ax)

  If (AB <= 0 And BC <= 0 And CD <= 0 And DA <= 0) Or (AB >= 0 And BC >= 0 And CD >= 0 And DA >= 0) Then
    InRect = True
  Else
    InRect = False
  End If
End Function

Function InRotRect(ballx,bally,px,py,angle,ax,ay,bx,by,cx,cy,dx,dy)
  Dim rax,ray,rbx,rby,rcx,rcy,rdx,rdy
  Dim rotxy
  rotxy = RotPoint(ax,ay,angle)
  rax = rotxy(0) + px
  ray = rotxy(1) + py
  rotxy = RotPoint(bx,by,angle)
  rbx = rotxy(0) + px
  rby = rotxy(1) + py
  rotxy = RotPoint(cx,cy,angle)
  rcx = rotxy(0) + px
  rcy = rotxy(1) + py
  rotxy = RotPoint(dx,dy,angle)
  rdx = rotxy(0) + px
  rdy = rotxy(1) + py

  InRotRect = InRect(ballx,bally,rax,ray,rbx,rby,rcx,rcy,rdx,rdy)
End Function

Function RotPoint(x,y,angle)
  Dim rx, ry
  rx = x * dCos(angle) - y * dSin(angle)
  ry = x * dSin(angle) + y * dCos(angle)
  RotPoint = Array(rx,ry)
End Function



'*******************************************
' ZMIS : Miscellaneous support function
'*******************************************



'metal gate hit sfx
Sub swGateSfx_hit
  If activeball.velx > 0 Then RandomSoundMetal
End Sub


Sub InitSomeThings()
  Dim BL

  'brighten the meteor drop targets
  BM_TMet1.blenddisablelighting = 10
  BM_TMet2.blenddisablelighting = 10
  BM_TMet3.blenddisablelighting = 10
  BM_TMet4.blenddisablelighting = 10

  'brighten the insert under moon ramp
  For each BL in BL_L_LL: BL.opacity = 300: Next

  'reset the slings
  LStep = 0 : s_LeftSlingshot.TimerEnabled = 1
  RStep = 0 : s_RightSlingshot.TimerEnabled = 1
  TStep = 0 : s_TopSlingshot.TimerEnabled = 1

End Sub

'******************************************************
'* ZCOR : Slingshot, flipper, rubber and corrections
'******************************************************



'******************************************************
'  SLINGSHOT CORRECTION FUNCTIONS
'******************************************************


dim LS : Set LS = New SlingshotCorrection
dim RS : Set RS = New SlingshotCorrection
dim TS : Set TS = New SlingshotCorrection


Sub InitSlingCorrection

  LS.Object = s_LeftSlingshot
  LS.EndPoint1 = EndPoint1LS
  LS.EndPoint2 = EndPoint2LS

  RS.Object = s_RightSlingshot
  RS.EndPoint1 = EndPoint1RS
  RS.EndPoint2 = EndPoint2RS

  TS.Object = s_TopSlingshot
  TS.EndPoint1 = EndPoint1TS
  TS.EndPoint2 = EndPoint2TS

  'Slingshot angle corrections (pt, BallPos in %, Angle in deg)
  ' These values are best guesses. Retune them if needed based on specific table research.
  AddSlingsPt 0, 0.00,  -4
  AddSlingsPt 1, 0.45,  -7
  AddSlingsPt 2, 0.48,  0
  AddSlingsPt 3, 0.52,  0
  AddSlingsPt 4, 0.55,  7
  AddSlingsPt 5, 1.00,  4

End Sub


Sub AddSlingsPt(idx, aX, aY)        'debugger wrapper for adjusting flipper script in-game
  dim a : a = Array(LS, RS, TS)
  dim x : for each x in a
    x.addpoint idx, aX, aY
  Next
End Sub

Class SlingshotCorrection
  Public DebugOn, Enabled
  private Slingshot, SlingX1, SlingX2, SlingY1, SlingY2

  Public ModIn, ModOut
  Private Sub Class_Initialize : redim ModIn(0) : redim Modout(0): Enabled = True : End Sub

  Public Property let Object(aInput) : Set Slingshot = aInput : End Property
  Public Property Let EndPoint1(aInput) : SlingX1 = aInput.x: SlingY1 = aInput.y: End Property
  Public Property Let EndPoint2(aInput) : SlingX2 = aInput.x: SlingY2 = aInput.y: End Property

  Public Sub AddPoint(aIdx, aX, aY)
    ShuffleArrays ModIn, ModOut, 1 : ModIn(aIDX) = aX : ModOut(aIDX) = aY : ShuffleArrays ModIn, ModOut, 0
    If gametime > 100 then Report
  End Sub

  Public Sub Report()         'debug, reports all coords in tbPL.text
    If not debugOn then exit sub
    dim a1, a2 : a1 = ModIn : a2 = ModOut
    dim str, x : for x = 0 to uBound(a1) : str = str & x & ": " & round(a1(x),4) & ", " & round(a2(x),4) & vbnewline : next
    TBPout.text = str
  End Sub


  Public Sub VelocityCorrect(aBall)
    dim BallPos, XL, XR, YL, YR

    'Assign right and left end points
    If SlingX1 < SlingX2 Then
      XL = SlingX1 : YL = SlingY1 : XR = SlingX2 : YR = SlingY2
    Else
      XL = SlingX2 : YL = SlingY2 : XR = SlingX1 : YR = SlingY1
    End If

    'Find BallPos = % on Slingshot
    If Not IsEmpty(aBall.id) Then
      If ABS(XR-XL) > ABS(YR-YL) Then
        BallPos = PSlope(aBall.x, XL, 0, XR, 1)
      Else
        BallPos = PSlope(aBall.y, YL, 0, YR, 1)
      End If
      If BallPos < 0 Then BallPos = 0
      If BallPos > 1 Then BallPos = 1
    End If

    'Velocity angle correction
    If not IsEmpty(ModIn(0) ) then
      Dim Angle, RotVxVy
      Angle = LinearEnvelope(BallPos, ModIn, ModOut)
      'DebugPrint " BallPos=" & BallPos &" Angle=" & Angle
      'DebugPrint " BEFORE: aBall.Velx=" & aBall.Velx &" aBall.Vely" & aBall.Vely
      RotVxVy = RotPoint(aBall.Velx,aBall.Vely,Angle)
      If Enabled then aBall.Velx = RotVxVy(0)
      If Enabled then aBall.Vely = RotVxVy(1)
      'DebugPrint " AFTER: aBall.Velx=" & aBall.Velx &" aBall.Vely" & aBall.Vely
      'DebugPrint " "
    End If
  End Sub

End Class




'******************************************************
' Flippers Polarity (Select appropriate sub based on era)
'******************************************************

dim LF : Set LF = New FlipperPolarity
dim RF : Set RF = New FlipperPolarity



'*******************************************
'  Late 80's early 90's

Sub InitPolarity()
  Dim x, a
  a = Array(LF, RF)
  For Each x In a
    x.AddPt "Ycoef", 0, RightFlipper.Y-65, 1 'disabled
    x.AddPt "Ycoef", 1, RightFlipper.Y-11, 1
    x.enabled = True
    x.TimeDelay = 60
    x.DebugOn=False ' prints some info in debugger

    x.AddPt "Polarity", 0, 0, 0
    x.AddPt "Polarity", 1, 0.05, - 5.5
    x.AddPt "Polarity", 2, 0.16, - 5.5
    x.AddPt "Polarity", 3, 0.20, - 0.75
    x.AddPt "Polarity", 4, 0.25, - 1.25
    x.AddPt "Polarity", 5, 0.3, - 1.75
    x.AddPt "Polarity", 6, 0.4, - 3.5
    x.AddPt "Polarity", 7, 0.5, - 5.25
    x.AddPt "Polarity", 8, 0.7, - 4.0
    x.AddPt "Polarity", 9, 0.75, - 3.5
    x.AddPt "Polarity", 10, 0.8, - 3.0
    x.AddPt "Polarity", 11, 0.85, - 2.5
    x.AddPt "Polarity", 12, 0.9, - 2.0
    x.AddPt "Polarity", 13, 0.95, - 1.5
    x.AddPt "Polarity", 14, 1, - 1.0
    x.AddPt "Polarity", 15, 1.05, -0.5
    x.AddPt "Polarity", 16, 1.1, 0
    x.AddPt "Polarity", 17, 1.3, 0

    x.AddPt "Velocity", 0, 0, 0.85
    x.AddPt "Velocity", 1, 0.23, 0.85
    x.AddPt "Velocity", 2, 0.27, 1
    x.AddPt "Velocity", 3, 0.3, 1
    x.AddPt "Velocity", 4, 0.35, 1
    x.AddPt "Velocity", 5, 0.6, 1 '0.982
    x.AddPt "Velocity", 6, 0.62, 1.0
    x.AddPt "Velocity", 7, 0.702, 0.968
    x.AddPt "Velocity", 8, 0.95,  0.968
    x.AddPt "Velocity", 9, 1.03,  0.945
    x.AddPt "Velocity", 10, 1.5,  0.945

  Next

  ' SetObjects arguments: 1: name of object 2: flipper object: 3: Trigger object around flipper
  LF.SetObjects "LF", LeftFlipper, TriggerLF
  RF.SetObjects "RF", RightFlipper, TriggerRF
End Sub


'******************************************************
'  FLIPPER CORRECTION FUNCTIONS
'******************************************************

' modified 2023 by nFozzy
' Removed need for 'endpoint' objects
' Added 'createvents' type thing for TriggerLF / TriggerRF triggers.
' Removed AddPt function which complicated setup imo
' made DebugOn do something (prints some stuff in debugger)
'   Otherwise it should function exactly the same as before\
' modified 2024 by rothbauerw
' Added Reprocessballs for flipper collisions (LF.Reprocessballs Activeball and RF.Reprocessballs Activeball must be added to the flipper collide subs
' Improved handling to remove correction for backhand shots when the flipper is raised

Class FlipperPolarity
  Public DebugOn, Enabled
  Private FlipAt    'Timer variable (IE 'flip at 723,530ms...)
  Public TimeDelay    'delay before trigger turns off and polarity is disabled
  Private Flipper, FlipperStart, FlipperEnd, FlipperEndY, LR, PartialFlipCoef, FlipStartAngle
  Private Balls(20), balldata(20)
  Private Name

  Dim PolarityIn, PolarityOut
  Dim VelocityIn, VelocityOut
  Dim YcoefIn, YcoefOut
  Public Sub Class_Initialize
    ReDim PolarityIn(0)
    ReDim PolarityOut(0)
    ReDim VelocityIn(0)
    ReDim VelocityOut(0)
    ReDim YcoefIn(0)
    ReDim YcoefOut(0)
    Enabled = True
    TimeDelay = 50
    LR = 1
    Dim x
    For x = 0 To UBound(balls)
      balls(x) = Empty
      Set Balldata(x) = new SpoofBall
    Next
  End Sub

  Public Sub SetObjects(aName, aFlipper, aTrigger)

    If TypeName(aName) <> "String" Then MsgBox "FlipperPolarity: .SetObjects error: first argument must be a String (And name of Object). Found:" & TypeName(aName) End If
    If TypeName(aFlipper) <> "Flipper" Then MsgBox "FlipperPolarity: .SetObjects error: Second argument must be a flipper. Found:" & TypeName(aFlipper) End If
    If TypeName(aTrigger) <> "Trigger" Then MsgBox "FlipperPolarity: .SetObjects error: third argument must be a trigger. Found:" & TypeName(aTrigger) End If
    If aFlipper.EndAngle > aFlipper.StartAngle Then LR = -1 Else LR = 1 End If
    Name = aName
    Set Flipper = aFlipper
    FlipperStart = aFlipper.x
    FlipperEnd = Flipper.Length * Sin((Flipper.StartAngle / 57.295779513082320876798154814105)) + Flipper.X ' big floats for degree to rad conversion
    FlipperEndY = Flipper.Length * Cos(Flipper.StartAngle / 57.295779513082320876798154814105)*-1 + Flipper.Y

    Dim str
    str = "Sub " & aTrigger.name & "_Hit() : " & aName & ".AddBall ActiveBall : End Sub'"
    ExecuteGlobal(str)
    str = "Sub " & aTrigger.name & "_UnHit() : " & aName & ".PolarityCorrect ActiveBall : End Sub'"
    ExecuteGlobal(str)

  End Sub

  ' Legacy: just no op
  Public Property Let EndPoint(aInput)

  End Property

  Public Sub AddPt(aChooseArray, aIDX, aX, aY) 'Index #, X position, (in) y Position (out)
    Select Case aChooseArray
      Case "Polarity"
        ShuffleArrays PolarityIn, PolarityOut, 1
        PolarityIn(aIDX) = aX
        PolarityOut(aIDX) = aY
        ShuffleArrays PolarityIn, PolarityOut, 0
      Case "Velocity"
        ShuffleArrays VelocityIn, VelocityOut, 1
        VelocityIn(aIDX) = aX
        VelocityOut(aIDX) = aY
        ShuffleArrays VelocityIn, VelocityOut, 0
      Case "Ycoef"
        ShuffleArrays YcoefIn, YcoefOut, 1
        YcoefIn(aIDX) = aX
        YcoefOut(aIDX) = aY
        ShuffleArrays YcoefIn, YcoefOut, 0
    End Select
  End Sub

  Public Sub AddBall(aBall)
    Dim x
    For x = 0 To UBound(balls)
      If IsEmpty(balls(x)) Then
        Set balls(x) = aBall
        Exit Sub
      End If
    Next
  End Sub

  Private Sub RemoveBall(aBall)
    Dim x
    For x = 0 To UBound(balls)
      If TypeName(balls(x) ) = "IBall" Then
        If aBall.ID = Balls(x).ID Then
          balls(x) = Empty
          Balldata(x).Reset
        End If
      End If
    Next
  End Sub

  Public Sub Fire()
    Flipper.RotateToEnd
    processballs
  End Sub

  Public Property Get Pos 'returns % position a ball. For debug stuff.
    Dim x
    For x = 0 To UBound(balls)
      If Not IsEmpty(balls(x)) Then
        pos = pSlope(Balls(x).x, FlipperStart, 0, FlipperEnd, 1)
      End If
    Next
  End Property

  Public Sub ProcessBalls() 'save data of balls in flipper range
    FlipAt = GameTime
    Dim x
    For x = 0 To UBound(balls)
      If Not IsEmpty(balls(x)) Then
        balldata(x).Data = balls(x)
      End If
    Next
    FlipStartAngle = Flipper.currentangle
    PartialFlipCoef = ((Flipper.StartAngle - Flipper.CurrentAngle) / (Flipper.StartAngle - Flipper.EndAngle))
    PartialFlipCoef = abs(PartialFlipCoef-1)
  End Sub

  Public Sub ReProcessBalls(aBall) 'save data of balls in flipper range
    If FlipperOn() Then
      Dim x
      For x = 0 To UBound(balls)
        If Not IsEmpty(balls(x)) Then
          if balls(x).ID = aBall.ID Then
            If isempty(balldata(x).ID) Then
              balldata(x).Data = balls(x)
            End If
          End If
        End If
      Next
    End If
  End Sub

  'Timer shutoff for polaritycorrect
  Private Function FlipperOn()
    If GameTime < FlipAt+TimeDelay Then
      FlipperOn = True
    End If
  End Function

  Public Sub PolarityCorrect(aBall)
    If FlipperOn() Then
      Dim tmp, BallPos, x, IDX, Ycoef, BalltoFlip, BalltoBase, NoCorrection, checkHit
      Ycoef = 1

      'y safety Exit
      If aBall.VelY > -8 Then 'ball going down
        RemoveBall aBall
        Exit Sub
      End If

      'Find balldata. BallPos = % on Flipper
      For x = 0 To UBound(Balls)
        If aBall.id = BallData(x).id And Not IsEmpty(BallData(x).id) Then
          idx = x
          BallPos = PSlope(BallData(x).x, FlipperStart, 0, FlipperEnd, 1)
          BalltoFlip = DistanceFromFlipperAngle(BallData(x).x, BallData(x).y, Flipper, FlipStartAngle)
          If ballpos > 0.65 Then  Ycoef = LinearEnvelope(BallData(x).Y, YcoefIn, YcoefOut)                'find safety coefficient 'ycoef' data
        End If
      Next

      If BallPos = 0 Then 'no ball data meaning the ball is entering and exiting pretty close to the same position, use current values.
        BallPos = PSlope(aBall.x, FlipperStart, 0, FlipperEnd, 1)
        If ballpos > 0.65 Then  Ycoef = LinearEnvelope(aBall.Y, YcoefIn, YcoefOut)                        'find safety coefficient 'ycoef' data
        NoCorrection = 1
      Else
        checkHit = 50 + (20 * BallPos)

        If BalltoFlip > checkHit or (PartialFlipCoef < 0.5 and BallPos > 0.22) Then
          NoCorrection = 1
        Else
          NoCorrection = 0
        End If
      End If

      'Velocity correction
      If Not IsEmpty(VelocityIn(0) ) Then
        Dim VelCoef
        VelCoef = LinearEnvelope(BallPos, VelocityIn, VelocityOut)

        'If partialflipcoef < 1 Then VelCoef = PSlope(partialflipcoef, 0, 1, 1, VelCoef)

        If Enabled Then aBall.Velx = aBall.Velx*VelCoef
        If Enabled Then aBall.Vely = aBall.Vely*VelCoef
      End If

      'Polarity Correction (optional now)
      If Not IsEmpty(PolarityIn(0) ) Then
        Dim AddX
        AddX = LinearEnvelope(BallPos, PolarityIn, PolarityOut) * LR

        If Enabled and NoCorrection = 0 Then aBall.VelX = aBall.VelX + 1 * (AddX*ycoef*PartialFlipcoef*VelCoef)
      End If
      If DebugOn Then debug.print "PolarityCorrect" & " " & Name & " @ " & GameTime & " " & Round(BallPos*100) & "%" & " AddX:" & Round(AddX,2) & " Vel%:" & Round(VelCoef*100)
    End If
    RemoveBall aBall
  End Sub
End Class

'******************************************************
'  FLIPPER POLARITY AND RUBBER DAMPENER SUPPORTING FUNCTIONS
'******************************************************

' Used for flipper correction and rubber dampeners
Sub ShuffleArray(ByRef aArray, byVal offset) 'shuffle 1d array
  Dim x, aCount
  aCount = 0
  ReDim a(UBound(aArray) )
  For x = 0 To UBound(aArray)   'Shuffle objects in a temp array
    If Not IsEmpty(aArray(x) ) Then
      If IsObject(aArray(x)) Then
        Set a(aCount) = aArray(x)
      Else
        a(aCount) = aArray(x)
      End If
      aCount = aCount + 1
    End If
  Next
  If offset < 0 Then offset = 0
  ReDim aArray(aCount-1+offset)   'Resize original array
  For x = 0 To aCount-1       'set objects back into original array
    If IsObject(a(x)) Then
      Set aArray(x) = a(x)
    Else
      aArray(x) = a(x)
    End If
  Next
End Sub

' Used for flipper correction and rubber dampeners
Sub ShuffleArrays(aArray1, aArray2, offset)
  ShuffleArray aArray1, offset
  ShuffleArray aArray2, offset
End Sub

' Used for flipper correction, rubber dampeners, and drop targets
Function BallSpeed(ball) 'Calculates the ball speed
  BallSpeed = Sqr(ball.VelX^2 + ball.VelY^2 + ball.VelZ^2)
End Function

' Used for flipper correction and rubber dampeners
Function PSlope(Input, X1, Y1, X2, Y2)    'Set up line via two points, no clamping. Input X, output Y
  Dim x, y, b, m
  x = input
  m = (Y2 - Y1) / (X2 - X1)
  b = Y2 - m*X2
  Y = M*x+b
  PSlope = Y
End Function

' Used for flipper correction
Class spoofball
  Public X, Y, Z, VelX, VelY, VelZ, ID, Mass, Radius
  Public Property Let Data(aBall)
    With aBall
      x = .x
      y = .y
      z = .z
      velx = .velx
      vely = .vely
      velz = .velz
      id = .ID
      mass = .mass
      radius = .radius
    End With
  End Property
  Public Sub Reset()
    x = Empty
    y = Empty
    z = Empty
    velx = Empty
    vely = Empty
    velz = Empty
    id = Empty
    mass = Empty
    radius = Empty
  End Sub
End Class

' Used for flipper correction and rubber dampeners
Function LinearEnvelope(xInput, xKeyFrame, yLvl)
  Dim y 'Y output
  Dim L 'Line
  'find active line
  Dim ii
  For ii = 1 To UBound(xKeyFrame)
    If xInput <= xKeyFrame(ii) Then
      L = ii
      Exit For
    End If
  Next
  If xInput > xKeyFrame(UBound(xKeyFrame) ) Then L = UBound(xKeyFrame)    'catch line overrun
  Y = pSlope(xInput, xKeyFrame(L-1), yLvl(L-1), xKeyFrame(L), yLvl(L) )

  If xInput <= xKeyFrame(LBound(xKeyFrame) ) Then Y = yLvl(LBound(xKeyFrame) )     'Clamp lower
  If xInput >= xKeyFrame(UBound(xKeyFrame) ) Then Y = yLvl(UBound(xKeyFrame) )    'Clamp upper

  LinearEnvelope = Y
End Function

'******************************************************
'  FLIPPER TRICKS
'******************************************************
' To add the flipper tricks you must
'  - Include a call to FlipperCradleCollision from within OnBallBallCollision subroutine
'  - Include a call the CheckLiveCatch from the LeftFlipper_Collide and RightFlipper_Collide subroutines
'  - Include FlipperActivate and FlipperDeactivate in the Flipper solenoid subs

RightFlipper.timerinterval = 1
Rightflipper.timerenabled = True

Sub RightFlipper_timer()
  FlipperTricks LeftFlipper, LFPress, LFCount, LFEndAngle, LFState
  FlipperTricks RightFlipper, RFPress, RFCount, RFEndAngle, RFState
  FlipperNudge RightFlipper, RFEndAngle, RFEOSNudge, LeftFlipper, LFEndAngle
  FlipperNudge LeftFlipper, LFEndAngle, LFEOSNudge,  RightFlipper, RFEndAngle
End Sub

Dim LFEOSNudge, RFEOSNudge

Sub FlipperNudge(Flipper1, Endangle1, EOSNudge1, Flipper2, EndAngle2)
  Dim b
  '   Dim BOT
  '   BOT = GetBalls

  If Flipper1.currentangle = Endangle1 And EOSNudge1 <> 1 Then
    EOSNudge1 = 1
    '   debug.print Flipper1.currentangle &" = "& Endangle1 &"--"& Flipper2.currentangle &" = "& EndAngle2
    If Flipper2.currentangle = EndAngle2 Then
      For b = 0 To UBound(gBOT)
        If FlipperTrigger(gBOT(b).x, gBOT(b).y, Flipper1) Then
          'Debug.Print "ball in flip1. exit"
          Exit Sub
        End If
      Next
      For b = 0 To UBound(gBOT)
        If FlipperTrigger(gBOT(b).x, gBOT(b).y, Flipper2) Then
          gBOT(b).velx = gBOT(b).velx / 1.3
          gBOT(b).vely = gBOT(b).vely - 0.5
        End If
      Next
    End If
  Else
    If Abs(Flipper1.currentangle) > Abs(EndAngle1) + 30 Then EOSNudge1 = 0
  End If
End Sub


Dim FCCDamping: FCCDamping = 0.4

Sub FlipperCradleCollision(ball1, ball2, velocity)
  if velocity < 0.7 then exit sub   'filter out gentle collisions
    Dim DoDamping, coef
    DoDamping = false
    'Check left flipper
    If LeftFlipper.currentangle = LFEndAngle Then
    If FlipperTrigger(ball1.x, ball1.y, LeftFlipper) OR FlipperTrigger(ball2.x, ball2.y, LeftFlipper) Then DoDamping = true
    End If
    'Check right flipper
    If RightFlipper.currentangle = RFEndAngle Then
    If FlipperTrigger(ball1.x, ball1.y, RightFlipper) OR FlipperTrigger(ball2.x, ball2.y, RightFlipper) Then DoDamping = true
    End If
    If DoDamping Then
    coef = FCCDamping
        ball1.velx = ball1.velx * coef: ball1.vely = ball1.vely * coef: ball1.velz = ball1.velz * coef
        ball2.velx = ball2.velx * coef: ball2.vely = ball2.vely * coef: ball2.velz = ball2.velz * coef
    End If
End Sub





'*************************************************
'  Check ball distance from Flipper for Rem
'*************************************************

Function Distance(ax,ay,bx,by)
  Distance = Sqr((ax - bx) ^ 2 + (ay - by) ^ 2)
End Function

Function DistancePL(px,py,ax,ay,bx,by) 'Distance between a point and a line where point Is px,py
  DistancePL = Abs((by - ay) * px - (bx - ax) * py + bx * ay - by * ax) / Distance(ax,ay,bx,by)
End Function

Function Radians(Degrees)
  Radians = Degrees * PI / 180
End Function

Function AnglePP(ax,ay,bx,by)
  AnglePP = Atn2((by - ay),(bx - ax)) * 180 / PI
End Function

Function DistanceFromFlipper(ballx, bally, Flipper)
  DistanceFromFlipper = DistancePL(ballx, bally, Flipper.x, Flipper.y, Cos(Radians(Flipper.currentangle + 90)) + Flipper.x, Sin(Radians(Flipper.currentangle + 90)) + Flipper.y)
End Function

Function DistanceFromFlipperAngle(ballx, bally, Flipper, Angle)
  DistanceFromFlipperAngle = DistancePL(ballx, bally, Flipper.x, Flipper.y, Cos(Radians(Angle + 90)) + Flipper.x, Sin(Radians(angle + 90)) + Flipper.y)
End Function

Function FlipperTrigger(ballx, bally, Flipper)
  Dim DiffAngle
  DiffAngle = Abs(Flipper.currentangle - AnglePP(Flipper.x, Flipper.y, ballx, bally) - 90)
  If DiffAngle > 180 Then DiffAngle = DiffAngle - 360

  If DistanceFromFlipper(ballx,bally,Flipper) < 48 And DiffAngle <= 90 And Distance(ballx,bally,Flipper.x,Flipper.y) < Flipper.Length Then
    FlipperTrigger = True
  Else
    FlipperTrigger = False
  End If
End Function

'*************************************************
'  End - Check ball distance from Flipper for Rem
'*************************************************

Dim LFPress, RFPress, LFCount, RFCount
Dim LFState, RFState
Dim EOST, EOSA,Frampup, FElasticity,FReturn
Dim RFEndAngle, LFEndAngle

Const FlipperCoilRampupMode = 0 '0 = fast, 1 = medium, 2 = slow (tap passes should work)

LFState = 1
RFState = 1
EOST = leftflipper.eostorque
EOSA = leftflipper.eostorqueangle
Frampup = LeftFlipper.rampup
FElasticity = LeftFlipper.elasticity
FReturn = LeftFlipper.return
'Const EOSTnew = 1.5 'EM's to late 80's - new recommendation by rothbauerw (previously 1)
Const EOSTnew = 1.2 '90's and later - new recommendation by rothbauerw (previously 0.8)
Const EOSAnew = 1
Const EOSRampup = 0
Dim SOSRampup
Select Case FlipperCoilRampupMode
  Case 0
    SOSRampup = 2.5
  Case 1
    SOSRampup = 6
  Case 2
    SOSRampup = 8.5
End Select

Const LiveCatch = 16
Const LiveElasticity = 0.45
Const SOSEM = 0.815
'   Const EOSReturn = 0.055  'EM's
'   Const EOSReturn = 0.045  'late 70's to mid 80's
Const EOSReturn = 0.035  'mid 80's to early 90's
'   Const EOSReturn = 0.025  'mid 90's and later

LFEndAngle = Leftflipper.endangle
RFEndAngle = RightFlipper.endangle

Sub FlipperActivate(Flipper, FlipperPress)
  FlipperPress = 1
  Flipper.Elasticity = FElasticity

  Flipper.eostorque = EOST
  Flipper.eostorqueangle = EOSA
End Sub

Sub FlipperDeactivate(Flipper, FlipperPress)
  FlipperPress = 0
  Flipper.eostorqueangle = EOSA
  Flipper.eostorque = EOST * EOSReturn / FReturn

  If Abs(Flipper.currentangle) <= Abs(Flipper.endangle) + 0.1 Then
    Dim b', BOT
    '   BOT = GetBalls

    For b = 0 To UBound(gBOT)
      If Distance(gBOT(b).x, gBOT(b).y, Flipper.x, Flipper.y) < 55 Then 'check for cradle
        If gBOT(b).vely >= - 0.4 Then gBOT(b).vely =  - 0.4
      End If
    Next
  End If
End Sub

Sub FlipperTricks (Flipper, FlipperPress, FCount, FEndAngle, FState)
  Dim Dir
  Dir = Flipper.startangle / Abs(Flipper.startangle) '-1 for Right Flipper

  If Abs(Flipper.currentangle) > Abs(Flipper.startangle) - 0.05 Then
    If FState <> 1 Then
      Flipper.rampup = SOSRampup
      Flipper.endangle = FEndAngle - 3 * Dir
      Flipper.Elasticity = FElasticity * SOSEM
      FCount = 0
      FState = 1
    End If
  ElseIf Abs(Flipper.currentangle) <= Abs(Flipper.endangle) And FlipperPress = 1 Then
    If FCount = 0 Then FCount = GameTime

    If FState <> 2 Then
      Flipper.eostorqueangle = EOSAnew
      Flipper.eostorque = EOSTnew
      Flipper.rampup = EOSRampup
      Flipper.endangle = FEndAngle
      FState = 2
    End If
  ElseIf Abs(Flipper.currentangle) > Abs(Flipper.endangle) + 0.01 And FlipperPress = 1 Then
    If FState <> 3 Then
      Flipper.eostorque = EOST
      Flipper.eostorqueangle = EOSA
      Flipper.rampup = Frampup
      Flipper.Elasticity = FElasticity
      FState = 3
    End If
  End If
End Sub

Const LiveDistanceMin = 5  'minimum distance In vp units from flipper base live catch dampening will occur
Const LiveDistanceMax = 114 'maximum distance in vp units from flipper base live catch dampening will occur (tip protection)
Const BaseDampen = 0.55

Sub CheckLiveCatch(ball, Flipper, FCount, parm) 'Experimental new live catch
    Dim Dir, LiveDist
    Dir = Flipper.startangle / Abs(Flipper.startangle)    '-1 for Right Flipper
    Dim LiveCatchBounce   'If live catch is not perfect, it won't freeze ball totally
    Dim CatchTime
    CatchTime = GameTime - FCount
    LiveDist = Abs(Flipper.x - ball.x)

    If CatchTime <= LiveCatch And parm > 3 And LiveDist > LiveDistanceMin And LiveDist < LiveDistanceMax Then
        If CatchTime <= LiveCatch * 0.5 Then   'Perfect catch only when catch time happens in the beginning of the window
            LiveCatchBounce = 0
        Else
            LiveCatchBounce = Abs((LiveCatch / 2) - CatchTime)  'Partial catch when catch happens a bit late
        End If

        If LiveCatchBounce = 0 And ball.velx * Dir > 0 And LiveDist > 30 Then ball.velx = 0

        If ball.velx * Dir > 0 And LiveDist < 30 Then
            ball.velx = BaseDampen * ball.velx
            ball.vely = BaseDampen * ball.vely
            ball.angmomx = BaseDampen * ball.angmomx
            ball.angmomy = BaseDampen * ball.angmomy
            ball.angmomz = BaseDampen * ball.angmomz
        Elseif LiveDist > 30 Then
            ball.vely = LiveCatchBounce * (32 / LiveCatch) ' Multiplier for inaccuracy bounce
            ball.angmomx = 0
            ball.angmomy = 0
            ball.angmomz = 0
        End If
    Else
        If Abs(Flipper.currentangle) <= Abs(Flipper.endangle) + 1 Then FlippersD.Dampenf ActiveBall, parm
    End If
End Sub

'******************************************************
'****  END FLIPPER CORRECTIONS
'******************************************************







'******************************************************
'****  PHYSICS DAMPENERS
'******************************************************
'
' These are data mined bounce curves,
' dialed in with the in-game elasticity as much as possible to prevent angle / spin issues.
' Requires tracking ballspeed to calculate COR



Sub dPosts_Hit(idx)
  RubbersD.dampen Activeball
  TargetBouncer Activeball, 1
End Sub

Sub dSleeves_Hit(idx)
  SleevesD.Dampen Activeball
  TargetBouncer Activeball, 0.7
End Sub

Sub zCol_Rubber_leftsling
  RubbersD.dampen Activeball
End Sub

Sub zCol_Rubber_rightsling
  RubbersD.dampen Activeball
End Sub

' Sub zCol_Rubber_moonramp
'   RubbersD.dampen Activeball
' End Sub


Dim RubbersD        'frubber
Set RubbersD = New Dampener
RubbersD.name = "Rubbers"
RubbersD.debugOn = False  'shows info in textbox "TBPout"
RubbersD.Print = False    'debug, reports In debugger (In vel, out cor); cor bounce curve (linear)

'for best results, try to match in-game velocity as closely as possible to the desired curve
'   RubbersD.addpoint 0, 0, 0.935   'point# (keep sequential), ballspeed, CoR (elasticity)
RubbersD.addpoint 0, 0, 1.1    'point# (keep sequential), ballspeed, CoR (elasticity)
RubbersD.addpoint 1, 3.77, 0.97
RubbersD.addpoint 2, 5.76, 0.967  'dont take this as gospel. if you can data mine rubber elasticitiy, please help!
RubbersD.addpoint 3, 15.84, 0.874
RubbersD.addpoint 4, 56, 0.64    'there's clamping so interpolate up to 56 at least

Dim SleevesD  'this is just rubber but cut down to 85%...
Set SleevesD = New Dampener
SleevesD.name = "Sleeves"
SleevesD.debugOn = False  'shows info in textbox "TBPout"
SleevesD.Print = False    'debug, reports In debugger (In vel, out cor)
SleevesD.CopyCoef RubbersD, 0.85

'######################### Add new FlippersD Profile
'######################### Adjust these values to increase or lessen the elasticity

Dim FlippersD
Set FlippersD = New Dampener
FlippersD.name = "Flippers"
FlippersD.debugOn = False
FlippersD.Print = False
FlippersD.addpoint 0, 0, 1.1
FlippersD.addpoint 1, 3.77, 0.99
FlippersD.addpoint 2, 6, 0.99

Class Dampener
  Public Print, debugOn   'tbpOut.text
  Public name, Threshold  'Minimum threshold. Useful for Flippers, which don't have a hit threshold.
  Public ModIn, ModOut
  Private Sub Class_Initialize
    ReDim ModIn(0)
    ReDim Modout(0)
  End Sub

  Public Sub AddPoint(aIdx, aX, aY)
    ShuffleArrays ModIn, ModOut, 1
    ModIn(aIDX) = aX
    ModOut(aIDX) = aY
    ShuffleArrays ModIn, ModOut, 0
    If GameTime > 100 Then Report
  End Sub

  Public Sub Dampen(aBall)
    If threshold Then
      If BallSpeed(aBall) < threshold Then Exit Sub
    End If
    Dim RealCOR, DesiredCOR, str, coef
    DesiredCor = LinearEnvelope(cor.ballvel(aBall.id), ModIn, ModOut )
    RealCOR = BallSpeed(aBall) / (cor.ballvel(aBall.id) + 0.0001)
    coef = desiredcor / realcor
    If debugOn Then str = name & " In vel:" & Round(cor.ballvel(aBall.id),2 ) & vbNewLine & "desired cor: " & Round(desiredcor,4) & vbNewLine & _
    "actual cor: " & Round(realCOR,4) & vbNewLine & "ballspeed coef: " & Round(coef, 3) & vbNewLine
    If Print Then Debug.print Round(cor.ballvel(aBall.id),2) & ", " & Round(desiredcor,3)

    aBall.velx = aBall.velx * coef
    aBall.vely = aBall.vely * coef
    aBall.velz = aBall.velz * coef
    If debugOn Then TBPout.text = str
  End Sub

  Public Sub Dampenf(aBall, parm) 'Rubberizer is handle here
    Dim RealCOR, DesiredCOR, str, coef
    DesiredCor = LinearEnvelope(cor.ballvel(aBall.id), ModIn, ModOut )
    RealCOR = BallSpeed(aBall) / (cor.ballvel(aBall.id) + 0.0001)
    coef = desiredcor / realcor
    If Abs(aball.velx) < 2 And aball.vely < 0 And aball.vely >  - 3.75 Then
      aBall.velx = aBall.velx * coef
      aBall.vely = aBall.vely * coef
    End If
  End Sub

  Public Sub CopyCoef(aObj, aCoef) 'alternative addpoints, copy with coef
    Dim x
    For x = 0 To UBound(aObj.ModIn)
      addpoint x, aObj.ModIn(x), aObj.ModOut(x) * aCoef
    Next
  End Sub

  Public Sub Report() 'debug, reports all coords in tbPL.text
    If Not debugOn Then Exit Sub
    Dim a1, a2
    a1 = ModIn
    a2 = ModOut
    Dim str, x
    For x = 0 To UBound(a1)
      str = str & x & ": " & Round(a1(x),4) & ", " & Round(a2(x),4) & vbNewLine
    Next
    TBPout.text = str
  End Sub
End Class


'******************************************************
'  TRACK ALL BALL VELOCITIES
'  FOR RUBBER DAMPENER AND DROP TARGETS
'******************************************************

dim cor : set cor = New CoRTracker

Class CoRTracker
  Public ballvel, ballvelx, ballvely

  Private Sub Class_Initialize
    ReDim ballvel(0)
    ReDim ballvelx(0)
    ReDim ballvely(0)
  End Sub

  Public Sub Update() 'tracks in-ball-velocity
    Dim str, b, AllBalls, highestID
    allBalls = GetBalls

    For Each b In allballs
      If b.id >= HighestID Then highestID = b.id
    Next

    If UBound(ballvel) < highestID Then ReDim ballvel(highestID)  'set bounds
    If UBound(ballvelx) < highestID Then ReDim ballvelx(highestID)  'set bounds
    If UBound(ballvely) < highestID Then ReDim ballvely(highestID)  'set bounds

    For Each b In allballs
      ballvel(b.id) = BallSpeed(b)
      ballvelx(b.id) = b.velx
      ballvely(b.id) = b.vely
    Next
  End Sub
End Class




'******************************************************
'****  END PHYSICS DAMPENERS
'******************************************************


'******************************************************
' VPW TargetBouncer for targets and posts by Iaakki, Wrd1972, Apophis
'******************************************************

Const TargetBouncerEnabled = 1    '0 = normal standup targets, 1 = bouncy targets
Const TargetBouncerFactor = 0.9   'Level of bounces. Recommmended value of 0.7

sub TargetBouncer(aBall,defvalue)
    dim zMultiplier, vel, vratio
    if TargetBouncerEnabled = 1 and aball.z < 30 then
        'DebugPrint "velx: " & aball.velx & " vely: " & aball.vely & " velz: " & aball.velz
        vel = BallSpeed(aBall)
        if aBall.velx = 0 then vratio = 1 else vratio = aBall.vely/aBall.velx
        Select Case Int(Rnd * 6) + 1
            Case 1: zMultiplier = 0.2*defvalue
      Case 2: zMultiplier = 0.25*defvalue
            Case 3: zMultiplier = 0.3*defvalue
      Case 4: zMultiplier = 0.4*defvalue
            Case 5: zMultiplier = 0.45*defvalue
            Case 6: zMultiplier = 0.5*defvalue
        End Select
        aBall.velz = abs(vel * zMultiplier * TargetBouncerFactor)
        aBall.velx = sgn(aBall.velx) * sqr(abs((vel^2 - aBall.velz^2)/(1+vratio^2)))
        aBall.vely = aBall.velx * vratio
        'DebugPrint "---> velx: " & aball.velx & " vely: " & aball.vely & " velz: " & aball.velz
        'DebugPrint "conservation check: " & BallSpeed(aBall)/vel
  end if
end sub

' Add targets or posts to the TargetBounce collection if you want to activate the targetbouncer code from them
Sub TargetBounce_Hit(idx)
  TargetBouncer activeball, 1
End Sub



'******************************************************
'****  ZROL : BALL ROLLING AND DROP SOUNDS
'******************************************************

ReDim rolling(tnob)


Dim DropCount
ReDim DropCount(tnob)

Sub InitRolling
  Dim i
  For i = 0 to tnob
    rolling(i) = False
  Next
End Sub

Sub RollingUpdate()
  Dim b', BOT
' BOT = GetBalls

  ' stop the sound of deleted balls
  For b = UBound(gBOT) + 1 to tnob - 1
    rolling(b) = False
    StopSound("BallRoll_" & b)
  Next

  ' exit the sub if no balls on the table
  If UBound(gBOT) = -1 Then Exit Sub

  ' play the rolling sound for each ball

  For b = 0 to UBound(gBOT)
    If BallVel(gBOT(b)) > 1 and gBOT(b).z < 30 and not InRect(gBOT(b).x, gBOT(b).y, 380, 2068, 850, 1790, 850, 1893, 425, 2135) Then
      rolling(b) = True
      PlaySound ("mfx_BallRoll_" & b), -1, VolPlayfieldRoll(gBOT(b)) * BallRollVolume * MechVol, AudioPan(gBOT(b)), 0, PitchPlayfieldRoll(gBOT(b)), 1, 0, AudioFade(gBOT(b))

    Else
      If rolling(b) = True Then
        StopSound("mfx_BallRoll_" & b)
        rolling(b) = False
      End If
    End If

    ' Ball Drop Sounds
    If gBOT(b).VelZ < -1 and gBOT(b).z < 55 and gBOT(b).z > 27 Then 'height adjust for ball drop sounds
      If DropCount(b) >= 5 Then
        DropCount(b) = 0
        If gBOT(b).velz > -7 Then
          RandomSoundBallBouncePlayfieldSoft gBOT(b)
        Else
          RandomSoundBallBouncePlayfieldHard gBOT(b)
        End If
      End If
    End If
    If DropCount(b) < 5 Then
      DropCount(b) = DropCount(b) + 1
    End If

  Next
End Sub


'******************************************************
'****  END BALL ROLLING AND DROP SOUNDS
'******************************************************




'******************************************************
'**** RAMP ROLLING SFX
'******************************************************

'Ball tracking ramp SFX 1.0
'   Reqirements:
'          * Import A Sound File for each ball on the table for plastic ramps.  Call It RampLoop<Ball_Number> ex: RampLoop1, RampLoop2, ...
'          * Import a Sound File for each ball on the table for wire ramps. Call it WireLoop<Ball_Number> ex: WireLoop1, WireLoop2, ...
'          * Create a Timer called RampRoll, that is enabled, with a interval of 100
'          * Set RampBAlls and RampType variable to Total Number of Balls
' Usage:
'          * Setup hit events and call WireRampOn True or WireRampOn False (True = Plastic ramp, False = Wire Ramp)
'          * To stop tracking ball
'                 * call WireRampOff
'                 * Otherwise, the ball will auto remove if it's below 30 vp units
'

dim RampMinLoops : RampMinLoops = 4

' RampBalls
'      Setup:        Set the array length of x in RampBalls(x,2) Total Number of Balls on table + 1:  if tnob = 5, then RammBalls(6,2)
'      Description:
dim RampBalls(6,2)
'x,0 = ball x,1 = ID, 2 = Protection against ending early (minimum amount of updates)
'0,0 is boolean on/off, 0,1 unused for now
RampBalls(0,0) = False

' RampType
'     Setup: Set this array to the number Total number of balls that can be tracked at one time + 1.  5 ball multiball then set value to 6
'     Description: Array type indexed on BallId and a values used to deterimine what type of ramp the ball is on: False = Wire Ramp, True = Plastic Ramp
dim RampType(6)

Sub WireRampOn(input)  : Waddball ActiveBall, input : RampRollUpdate: End Sub
Sub WireRampOff() : WRemoveBall ActiveBall.ID : End Sub


' WaddBall (Active Ball, Boolean)
'     Description: This subroutine is called from WireRampOn to Add Balls to the RampBalls Array
Sub Waddball(input, RampInput)  'Add ball
  ' This will loop through the RampBalls array checking each element of the array x, position 1
  ' To see if the the ball was already added to the array.
  ' If the ball is found then exit the subroutine
  dim x : for x = 1 to uBound(RampBalls)  'Check, don't add balls twice
    if RampBalls(x, 1) = input.id then
      if Not IsEmpty(RampBalls(x,1) ) then Exit Sub 'Frustating issue with BallId 0. Empty variable = 0
    End If
  Next

  ' This will itterate through the RampBalls Array.
  ' The first time it comes to a element in the array where the Ball Id (Slot 1) is empty.  It will add the current ball to the array
  ' The RampBalls assigns the ActiveBall to element x,0 and ball id of ActiveBall to 0,1
  ' The RampType(BallId) is set to RampInput
  ' RampBalls in 0,0 is set to True, this will enable the timer and the timer is also turned on
  For x = 1 to uBound(RampBalls)
    if IsEmpty(RampBalls(x, 1)) then
      Set RampBalls(x, 0) = input
      RampBalls(x, 1) = input.ID
      RampType(x) = RampInput
      RampBalls(x, 2) = 0
      'exit For
      RampBalls(0,0) = True
      RampRoll.Enabled = 1   'Turn on timer
      'RampRoll.Interval = RampRoll.Interval 'reset timer
      exit Sub
    End If
    if x = uBound(RampBalls) then   'debug
      DebugPrint "WireRampOn error, ball queue is full: " & vbnewline & _
      RampBalls(0, 0) & vbnewline & _
      Typename(RampBalls(1, 0)) & " ID:" & RampBalls(1, 1) & "type:" & RampType(1) & vbnewline & _
      Typename(RampBalls(2, 0)) & " ID:" & RampBalls(2, 1) & "type:" & RampType(2) & vbnewline & _
      Typename(RampBalls(3, 0)) & " ID:" & RampBalls(3, 1) & "type:" & RampType(3) & vbnewline & _
      Typename(RampBalls(4, 0)) & " ID:" & RampBalls(4, 1) & "type:" & RampType(4) & vbnewline & _
      Typename(RampBalls(5, 0)) & " ID:" & RampBalls(5, 1) & "type:" & RampType(5) & vbnewline & _
      " "
    End If
  next
End Sub

' WRemoveBall (BallId)
'    Description: This subroutine is called from the RampRollUpdate subroutine
'                 and is used to remove and stop the ball rolling sounds
Sub WRemoveBall(ID)   'Remove ball
  'DebugPrint "In WRemoveBall() + Remove ball from loop array"
  dim ballcount : ballcount = 0
  dim x : for x = 1 to Ubound(RampBalls)
    if ID = RampBalls(x, 1) then 'remove ball
      Set RampBalls(x, 0) = Nothing
      RampBalls(x, 1) = Empty
      RampType(x) = Empty
      StopSound("mfx_RampLoop" & x)
      StopSound("mfx_wireloop" & x)
    end If
    'if RampBalls(x,1) = Not IsEmpty(Rampballs(x,1) then ballcount = ballcount + 1
    if not IsEmpty(Rampballs(x,1)) then ballcount = ballcount + 1
  next
  if BallCount = 0 then RampBalls(0,0) = False  'if no balls in queue, disable timer update
End Sub

Sub RampRoll_Timer():RampRollUpdate:End Sub

Sub RampRollUpdate()    'Timer update
  dim x : for x = 1 to uBound(RampBalls)
    if Not IsEmpty(RampBalls(x,1) ) then
      if BallVel(RampBalls(x,0) ) > 1 then ' if ball is moving, play rolling sound
        If RampType(x) then
          PlaySound("mfx_RampLoop" & x), -1, VolPlayfieldRoll(RampBalls(x,0)) * RampRollVolume * MechVol, AudioPan(RampBalls(x,0)), 0, BallPitchV(RampBalls(x,0)), 1, 0, AudioFade(RampBalls(x,0))
          StopSound("mfx_wireloop" & x)
        Else
          StopSound("mfx_RampLoop" & x)
          PlaySound("mfx_wireloop" & x), -1, VolPlayfieldRoll(RampBalls(x,0)) * RampRollVolume * MechVol, AudioPan(RampBalls(x,0)), 0, BallPitch(RampBalls(x,0)), 1, 0, AudioFade(RampBalls(x,0))
        End If
        RampBalls(x, 2) = RampBalls(x, 2) + 1
      Else
        StopSound("mfx_RampLoop" & x)
        StopSound("mfx_wireloop" & x)
      end if
      if RampBalls(x,0).Z < 30 and RampBalls(x, 2) > RampMinLoops then  'if ball is on the PF, remove  it
        StopSound("mfx_RampLoop" & x)
        StopSound("mfx_wireloop" & x)
        Wremoveball RampBalls(x,1)
      End If
    Else
      StopSound("mfx_RampLoop" & x)
      StopSound("mfx_wireloop" & x)
    end if
  next
  if not RampBalls(0,0) then RampRoll.enabled = 0

End Sub

' ' This can be used to debug the Ramp Roll time.  You need to enable the tbWR timer on the TextBox
' Sub tbWR_Timer()  'debug textbox
'   me.text = "on? " & RampBalls(0, 0) & " timer: " & RampRoll.Enabled & vbnewline & _
'   "1 " & Typename(RampBalls(1, 0)) & " ID:" & RampBalls(1, 1) & " type:" & RampType(1) & " Loops:" & RampBalls(1, 2) & vbnewline & _
'   "2 " & Typename(RampBalls(2, 0)) & " ID:" & RampBalls(2, 1) & " type:" & RampType(2) & " Loops:" & RampBalls(2, 2) & vbnewline & _
'   "3 " & Typename(RampBalls(3, 0)) & " ID:" & RampBalls(3, 1) & " type:" & RampType(3) & " Loops:" & RampBalls(3, 2) & vbnewline & _
'   "4 " & Typename(RampBalls(4, 0)) & " ID:" & RampBalls(4, 1) & " type:" & RampType(4) & " Loops:" & RampBalls(4, 2) & vbnewline & _
'   "5 " & Typename(RampBalls(5, 0)) & " ID:" & RampBalls(5, 1) & " type:" & RampType(5) & " Loops:" & RampBalls(5, 2) & vbnewline & _
'   "6 " & Typename(RampBalls(6, 0)) & " ID:" & RampBalls(6, 1) & " type:" & RampType(6) & " Loops:" & RampBalls(6, 2) & vbnewline & _
'   " "
' End Sub


Function BallPitch(ball) ' Calculates the pitch of the sound based on the ball speed
    BallPitch = pSlope(BallVel(ball), 1, -1000, 60, 10000)
End Function

Function BallPitchV(ball) ' Calculates the pitch of the sound based on the ball speed Variation
  BallPitchV = pSlope(BallVel(ball), 1, -4000, 60, 7000)
End Function




'  Ramp Triggers

Sub swRamp1_hit
  If activeball.vely<0 Then
    WireRampOn True 'plastic
  Else
    WireRampOff
  End If
End Sub

Sub swRamp2_hit
  WireRampOff
  WireRampOn False 'wire
End Sub

Sub swRamp3_hit
  WireRampOff
End Sub

Sub swRamp4_hit
  If activeball.vely<0 Then
    WireRampOn True 'plastic
  Else
    WireRampOff
  End If
End Sub

Sub swRamp5_hit
  WireRampOff
End Sub

Sub swRamp6_hit
  WireRampOn True 'plastic
End Sub

Sub swRamp7_hit
  WireRampOff
  WireRampOn False 'wire
End Sub

Sub swRamp8_hit
  WireRampOff
End Sub

Sub swRamp9_hit
  WireRampOn False 'wire
End Sub

Sub swRampScoop_hit
  If activeball.vely>0 Then
    Select Case Int(Rnd*2)+1
      Case 1 : PlaySoundAtLevelActiveBall ("mfx_ScoopHit1"), MechVol
      Case 2 : PlaySoundAtLevelActiveBall ("mfx_ScoopHit2"), MechVol
    End Select
  End If
End Sub

'******************************************************
'**** END RAMP ROLLING SFX
'******************************************************




'****************************
'   ZRBR: Room Brightness
'****************************

'This code only applies to lightmapped tables. It is here for reference.
'NOTE: Objects bightness will be affected by the Day/Night slider only if their blenddisablelighting property is less than 1.
'      Lightmapped table primitives have their blenddisablelighting equal to 1, therefore we need this SetRoomBrightness sub
'      to handle updating their effective ambient brighness.

' Update these arrays if you want to change more materials with room light level
Dim RoomBrightnessMtlArray: RoomBrightnessMtlArray = Array("VLM.Bake.Active","VLM.Bake.Solid","VLM.Bake.Ramp","VLM.Bake.Bumper","VLM.Bake.BumperTop","VLM.Bake.Metals", _
                              "VR.BlackPowderCoat","VR.PlasticMagenta","VR.PlasticRed","VR.PlasticYellow","VR.PlasticGray")

Sub SetRoomBrightness(lvl)
  If lvl > 1 Then lvl = 1
  If lvl < 0 Then lvl = 0

  ' Lighting level
  Dim v: v=(lvl * 245 + 10)/255

  Dim i: For i = 0 to UBound(RoomBrightnessMtlArray)
    ModulateMaterialBaseColor RoomBrightnessMtlArray(i), i, v
  Next

  dim c: c = int(5 + 90*(lvl))
  BGTranslite.color = RGB(c,c,c)
End Sub

Dim SavedMtlColorArray
SaveMtlColors
Sub SaveMtlColors
  ReDim SavedMtlColorArray(UBound(RoomBrightnessMtlArray))
  Dim i: For i = 0 to UBound(RoomBrightnessMtlArray)
    SaveMaterialBaseColor RoomBrightnessMtlArray(i), i
  Next
End Sub

Sub SaveMaterialBaseColor(name, idx)
  Dim wrapLighting, roughness, glossyImageLerp, thickness, edge, edgeAlpha, opacity, base, glossy, clearcoat, isMetal, opacityActive, elasticity, elasticityFalloff, friction, scatterAngle
  GetMaterial name, wrapLighting, roughness, glossyImageLerp, thickness, edge, edgeAlpha, opacity, base, glossy, clearcoat, isMetal, opacityActive, elasticity, elasticityFalloff, friction, scatterAngle
  SavedMtlColorArray(idx) = round(base,0)
End Sub


Sub ModulateMaterialBaseColor(name, idx, val)
  Dim wrapLighting, roughness, glossyImageLerp, thickness, edge, edgeAlpha, opacity, base, glossy, clearcoat, isMetal, opacityActive, elasticity, elasticityFalloff, friction, scatterAngle
  Dim red, green, blue, saved_base, new_base

  'First get the existing material properties
  GetMaterial name, wrapLighting, roughness, glossyImageLerp, thickness, edge, edgeAlpha, opacity, base, glossy, clearcoat, isMetal, opacityActive, elasticity, elasticityFalloff, friction, scatterAngle

  'Get saved color
  saved_base = SavedMtlColorArray(idx)

  'Next extract the r,g,b values from the base color
  red = saved_base And &HFF
  green = (saved_base \ &H100) And &HFF
  blue = (saved_base \ &H10000) And &HFF
  'msgbox red & " " & green & " " & blue

  'Create new color scaled down by 'val', and update the material
  new_base = RGB(red*val, green*val, blue*val)
  UpdateMaterial name, wrapLighting, roughness, glossyImageLerp, thickness, edge, edgeAlpha, opacity, new_base, glossy, clearcoat, isMetal, opacityActive, elasticity, elasticityFalloff, friction, scatterAngle
End Sub


'****************************************************************
'  ZSLN : Slingshots
'****************************************************************

Dim LStep
Dim RStep
Dim TStep

Sub LeftSlingshotAction(args)
  Dim enabled, ball : enabled = args(0)
  If enabled then
    If Not IsNull(args(1)) Then
      LS.VelocityCorrect(args(1))
    End If
    LStep = 0
    s_LeftSlingshot_Timer
    s_LeftSlingshot.TimerEnabled = 1
    s_LeftSlingshot.TimerInterval = 17
    RandomSoundSlingshotLeft BM_LArm
    DOF 103, DOFPulse
  End If
End Sub

Sub LeftSlingshotDisabled(args)
  s_LeftSlingshot.Disabled = True
End Sub

Sub LeftSlingshotEnabled(args)
  s_LeftSlingshot.Disabled = False
End Sub

Sub s_LeftSlingshot_Timer
  Dim BL
  Dim x1, x2, x3, y
    Select Case LStep
    Case 0: x1 = True:  x2 = False: x3 = False: y = 20
        Case 3: x1 = False: x2 = True:  x3 = False: y = 10
        Case 4: x1 = False: x2 = False: x3 = True:  y = 0: s_LeftSlingshot.TimerEnabled = 0
    End Select

  For Each BL in BP_LSling1 : BL.Visible = x1: Next
  For Each BL in BP_LSling2 : BL.Visible = x2: Next
  For Each BL in BP_LSling3 : BL.Visible = True: Next
  For Each BL in BP_LArm : BL.transx = y: Next

    LStep = LStep + 1
End Sub


Sub RightSlingshotAction(args)
  Dim enabled, ball : enabled = args(0)
  If enabled then
    If Not IsNull(args(1)) Then
      RS.VelocityCorrect(args(1))
    End If
    RStep = 0
    s_RightSlingshot_Timer
    s_RightSlingshot.TimerEnabled = 1
    s_RightSlingshot.TimerInterval = 17
    RandomSoundSlingshotRight BM_RArm
    DOF 104, DOFPulse
  End If
End Sub

Sub RightSlingshotDisabled(args)
  s_RightSlingshot.Disabled = True
End Sub

Sub RightSlingshotEnabled(args)
  s_RightSlingshot.Disabled = False
End Sub


Sub s_RightSlingshot_Timer
  Dim BL
  Dim x1, x2, x3, y
    Select Case RStep
    Case 0: x1 = True:  x2 = False: x3 = False: y = 20
        Case 3: x1 = False: x2 = True:  x3 = False: y = 10
        Case 4: x1 = False: x2 = False: x3 = True:  y = 0: s_RightSlingshot.TimerEnabled = 0
    End Select

  For Each BL in BP_RSling1 : BL.Visible = x1: Next
  For Each BL in BP_RSling2 : BL.Visible = x2: Next
  For Each BL in BP_RSling3 : BL.Visible = True: Next
  For Each BL in BP_RArm : BL.transx = y: Next

    RStep = RStep + 1
End Sub


Sub TopSlingshotAction(args)
  Dim enabled, ball : enabled = args(0)
  If enabled then
    If Not IsNull(args(1)) Then
      TS.VelocityCorrect(args(1))
    End If
    TStep = 0
    s_TopSlingshot_Timer
    s_TopSlingshot.TimerEnabled = 1
    s_TopSlingshot.TimerInterval = 17
    RandomSoundSlingshotLeft s_Bumper2
    DOF 107, DOFPulse
  End If
End Sub

Sub TopSlingshotDisabled(args)
  s_TopSlingshot.Disabled = True
End Sub

Sub TopSlingshotEnabled(args)
  s_TopSlingshot.Disabled = False
End Sub

Sub s_TopSlingshot_Timer
  Dim BL
  Dim x1, x2, y: x1 = True:x2 = False:y = 20
    Select Case TStep
        Case 3:x1 = False:x2 = True:y = 10
        Case 4:x1 = False:x2 = False:y = 0: s_TopSlingshot.TimerEnabled = 0
    End Select

  'For Each BL in BP_TSling1 : BL.Visible = x1: Next
  'For Each BL in BP_TSling2 : BL.Visible = x2: Next
  'For Each BL in BP_TArm : BL.transx = y: Next

    TStep = TStep + 1
End Sub






' '*******************************************
' '  ZSOL : Other Solenoids
' '*******************************************



'  Kickers, Saucers
'*******************************************

'To include some randomness in the Kicker's kick, use the following parmeters
Const ScoopAngleTol = 1      'Number of degrees the kicker angle varies around its intended direction
Const ScoopStrengthTol = 3   'Number of strength units the kicker varies around its intended strength


Sub KickBall(kball, kangle, kvel, kvelz, kzlift)
  dim rangle
  rangle = PI * (kangle - 90) / 180

  kball.z = kball.z + kzlift
  kball.velz = kvelz
  kball.velx = cos(rangle)*kvel
  kball.vely = sin(rangle)*kvel
End Sub


Sub ScoopEjectCallback(ball)
  Dim ang, vel
  If s_Scoop.BallCntOver > 0 Then
    ang = 14.8 + ScoopAngleTol*2*(rnd-0.5)
    vel = 70.0 + ScoopStrengthTol*2*(rnd-0.5)
    KickBall ball, ang, vel, 0, 0
    SoundSaucerKick 1, s_Scoop
  Else
    SoundSaucerKick 0, s_Scoop
  End If
  DOF 109, DOFPulse
End Sub

' Sub MoonLockEjectCallback(ball)
'   If Not IsNull(ball) Then
'     DropLockPin 1
'   Else
'     DropLockPin 0
'   End If
' End Sub


Sub PlungerEjectCallback(ball)
  If s_Plunger1.BallCntOver > 0 Then
    KickBall ball, 0, 60, 0, 0
    SoundSaucerKick 1, s_Plunger1
  Else
    SoundSaucerKick 0, s_Plunger1
  End If
  DOF 110, DOFPulse
End Sub



'  Grab Magnet
'*******************************************

Sub GrabMagnetAction(Enabled)
  GrabMag.MagnetOn = Enabled
end sub




'  Diverters
'*******************************************


Sub RaiseDiverterPin(Enabled)
  Dim BP
  If Enabled Then
    DiverterPin.isdropped=False
    SoundSaucerKick 0,swRamp6
    For Each BP in BP_DiverterPin : BP.transz = 0: Next
  Else
    DiverterPin.isdropped=True
    SoundSaucerKick 0,swRamp6
    For Each BP in BP_DiverterPin : BP.transz = -50: Next
  End If
  DOF 111, DOFPulse
End Sub


'  Lock Pin
'*******************************************

Sub DropLockPin(enabled)
  Dim BP,b
  If Enabled Then
    LockPin.isdropped=True
    SoundSaucerKick 0,s_Lock1
    For each BP in BP_LockPin: BP.transz = -50: Next
  Else
    LockPin.isdropped=False
    SoundSaucerKick 0,s_Lock1
    For each BP in BP_LockPin: BP.transz = 0: Next
  End If
  DOF 112, DOFPulse
  'balls are sinking into ramp and getting stuck, so move balls up a little for a hacky fix
  For each b in gBOT
    If b.z > 50 Then
      b.z = b.z + 3
    End If
  Next
End Sub



'  Knocker
'*******************************************

Sub SolKnocker(Enabled)
  If enabled Then
    KnockerSolenoid 'Add knocker position object
    DOF 113, DOFPulse
  End If
End Sub



'  Bumpers
'*******************************************

Sub Bumper1Action(args)
  Dim enabled, ball : enabled = args(0)
    If IsNull(args(1)) And enabled Then
        s_Bumper1.PlayHit()
    End If
  If enabled Then
    RandomSoundBumperMiddle s_Bumper1
    DOF 105, DOFPulse
  End If
End Sub

Sub Bumper1Disabled(args)
  s_Bumper1.Threshold = 100
End Sub

Sub Bumper1Enabled(args)
  s_Bumper1.Threshold = 1.5
End Sub


Sub Bumper2Action(args)
  Dim enabled, ball : enabled = args(0)
    If IsNull(args(1)) And enabled Then
        s_Bumper2.PlayHit()
    End If
  If enabled Then
    RandomSoundBumperTop s_Bumper2
    DOF 108, DOFPulse
  End If
End Sub

Sub Bumper2Disabled(args)
  s_Bumper2.Threshold = 100
End Sub

Sub Bumper2Enabled(args)
  s_Bumper2.Threshold = 1.5
End Sub


Sub Bumper3Action(args)
  Dim enabled, ball : enabled = args(0)
    If IsNull(args(1)) And enabled Then
        s_Bumper3.PlayHit()
    End If
  If enabled Then
    RandomSoundBumperTop s_Bumper3
    DOF 106, DOFPulse
  End If
End Sub

Sub Bumper3Disabled(args)
  s_Bumper3.Threshold = 100
End Sub

Sub Bumper3Enabled(args)
  s_Bumper3.Threshold = 1.5
End Sub


' Sub Bumper4Action(args)
'   Dim enabled, ball : enabled = args(0)
'     If IsNull(args(1)) And enabled Then
'         s_Bumper4.PlayHit()
'     End If
'   If enabled Then
'     RandomSoundBumperTop s_Bumper4
'     DOF 107, DOFPulse
'   End If
' End Sub

' Sub Bumper4Disabled()
'   s_Bumper4.Threshold = 100
' End Sub

' Sub Bumper4Enabled()
'   s_Bumper4.Threshold = 1.5
' End Sub




'******************************************************
' ZSUT: STAND-UP TARGETS by Rothbauerw
'******************************************************


Class StandupTarget
    Private m_primary, m_prim, m_sw, m_animate

    Public Property Get Primary(): Set Primary = m_primary: End Property
    Public Property Let Primary(input): Set m_primary = input: End Property

    Public Property Get Prim(): Set Prim = m_prim: End Property
    Public Property Let Prim(input): Set m_prim = input: End Property

    Public Property Get Sw(): Sw = m_sw: End Property
    Public Property Let Sw(input): m_sw = input: End Property

    Public Property Get Animate(): Animate = m_animate: End Property
    Public Property Let Animate(input): m_animate = input: End Property

    Public default Function init(primary, prim, sw, animate)
      Set m_primary = primary
      Set m_prim = prim
      m_sw = sw
      m_animate = animate

      Set Init = Me
    End Function
End Class

'Define a variable for each stand-up target
Dim ST1, ST2, ST3, ST4, ST5, ST6, ST7, ST8

'Set array with stand-up target objects
'
'StandupTargetvar = Array(primary, prim, swtich)
'   primary:  vp target to determine target hit
'   prim:    primitive target used for visuals and animation
'          IMPORTANT!!!
'          transy must be used to offset the target animation
'   switch:  ROM switch number
'   animate:  Arrary slot for handling the animation instrucitons, set to 0
'
'You will also need to add a secondary hit object for each stand up (name sw11o, sw12o, and sw13o on the example Table1)
'these are inclined primitives to simulate hitting a bent target and should provide so z velocity on high speed impacts


Set ST1 = (new StandupTarget)(s_TargetMystery1, BM_TM1, 1, 0)
Set ST2 = (new StandupTarget)(s_TargetMystery2, BM_TM2, 2, 0)
Set ST3 = (new StandupTarget)(s_TargetMystery3, BM_TM3, 3, 0)
Set ST4 = (new StandupTarget)(s_TargetMystery4, BM_TM4, 4, 0)
Set ST5 = (new StandupTarget)(s_TargetMystery5, BM_TM5, 5, 0)
Set ST6 = (new StandupTarget)(s_TargetShield1, BM_TS1, 6, 0)
Set ST7 = (new StandupTarget)(s_TargetShield2, BM_TS2, 7, 0)
Set ST8 = (new StandupTarget)(s_TargetShield3, BM_TS3, 8, 0)

'Add all the Stand-up Target Arrays to Stand-up Target Animation Array
'   STAnimationArray = Array(ST1, ST2, ....)
Dim STArray
STArray = Array(ST1, ST2, ST3, ST4, ST5, ST6, ST7, ST8)

'Configure the behavior of Stand-up Targets
Const STAnimStep = 1.5  'vpunits per animation step (control return to Start)
Const STMaxOffset = 9   'max vp units target moves when hit

Const STMass = 0.2    'Mass of the Stand-up Target (between 0 and 1), higher values provide more resistance

'******************************************************
'       STAND-UP TARGETS FUNCTIONS
'******************************************************

Sub STHit(switch)
    Dim i
    i = STArrayID(switch)

    PlayTargetSound
    STArray(i).animate = STCheckHit(ActiveBall,STArray(i).primary)

    If STArray(i).animate <> 0 Then
        DTBallPhysics ActiveBall, STArray(i).primary.orientation, STMass
    End If
    DoSTAnim
End Sub

Function STArrayID(switch)
    Dim i
    For i = 0 To UBound(STArray)
        If STArray(i).sw = switch Then
            STArrayID = i
            Exit Function
        End If
    Next
End Function

Function STCheckHit(aBall, target) 'Check if target is hit on it's face
    Dim bangle, bangleafter, rangle, rangle2, perpvel, perpvelafter, paravel, paravelafter
    rangle = (target.orientation - 90) * 3.1416 / 180
    bangle = atn2(cor.ballvely(aball.id),cor.ballvelx(aball.id))
    bangleafter = Atn2(aBall.vely,aball.velx)

    perpvel = cor.BallVel(aball.id) * Cos(bangle - rangle)
    paravel = cor.BallVel(aball.id) * Sin(bangle - rangle)

    perpvelafter = BallSpeed(aBall) * Cos(bangleafter - rangle)
    paravelafter = BallSpeed(aBall) * Sin(bangleafter - rangle)

    If perpvel > 0 And  perpvelafter <= 0 Then
        STCheckHit = 1
    ElseIf perpvel > 0 And ((paravel > 0 And paravelafter > 0) Or (paravel < 0 And paravelafter < 0)) Then
        STCheckHit = 1
    Else
        STCheckHit = 0
    End If
End Function

Sub DoSTAnim()
    Dim i
    For i = 0 To UBound(STArray)
        STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
    Next
End Sub

Function STAnimate(primary, prim, switch, animate)
    Dim animtime

    STAnimate = animate

    If animate = 0  Then
        primary.uservalue = 0
        STAnimate = 0
        Exit Function
    ElseIf primary.uservalue = 0 Then
        primary.uservalue = GameTime
    End If

    animtime = GameTime - primary.uservalue

    If animate = 1 Then
        primary.collidable = 0
        prim.transy =  - STMaxOffset
        STAction switch, 1
        STAnimate = 2
        Exit Function
    ElseIf animate = 2 Then
        prim.transy = prim.transy + STAnimStep
        If prim.transy >= 0 Then
            prim.transy = 0
            primary.collidable = 1
            STAction switch, 0
            STAnimate = 0
            Exit Function
        Else
            STAnimate = 2
        End If
    End If
End Function


Sub STAction(switchid, hit)
    If hit = 1 Then
        DispatchPinEvent STArray(STArrayID(switchid)).Primary.Name & "_active", Null
    Else
        DispatchPinEvent STArray(STArrayID(switchid)).Primary.Name & "_inactive", Null
    End If
End Sub


'*******************************************
' ZVRR : VR Room / VR Cabinet
'*******************************************

Sub SetupRoom
  Dim VRThing, x
  TimerPlunger2.Enabled = True

  If VRRoom <> 0 Then
    For Each x In DesktopLights: x.visible = 0: Next
    For Each x in BP_Rails : x.visible = 1: Next  'overrides option menu setting
    For Each VRThing in VR_Cab: VRThing.visible = 1: Next
    For Each VRThing in VR_Backglass: VRThing.visible = 1: Next
    For Each VRThing in VR_Flashers: VRThing.visible = 1: Next
    For Each VRThing in VR_Display: VRThing.visible = 1: Next
    For Each VRThing in VR_DisplayBall: VRThing.visible = 1: Next

    'Asteroid Room
    If VRRoom = 1 Then
      For Each VRThing in VR_Planet: VRThing.visible = VREarthVisible: Next
      For Each VRThing in VR_Mega: VRThing.visible = 1: Next
      For Each VRThing in VR_Min: VRThing.visible = 0: Next
    End If

    'Minimal Room
    If VRRoom = 2 Then
      For Each VRThing in VR_Planet: VRThing.visible = 0: Next
      For Each VRThing in VR_Mega: VRThing.visible = 0: Next
      For Each VRThing in VR_Min: VRThing.visible = 1: Next
    End If

    'Ultra Minimal Room
    If VRRoom = 3 Then
      For Each VRThing in VR_Planet: VRThing.visible = 0: Next
      For Each VRThing in VR_Mega: VRThing.visible = 0: Next
      For Each VRThing in VR_Min: VRThing.visible = 0: Next
    End If

  Else
    For Each VRThing in VR_Mega: VRThing.visible = 0: Next
    For Each VRThing in VR_Planet: VRThing.visible = 0: Next
    For Each VRThing in VR_Min: VRThing.visible = 0: Next
    For Each VRThing in VR_Cab: VRThing.visible = 0: Next
    For Each VRThing in VR_Backglass: VRThing.visible = 0: Next
    For Each VRThing in VR_Flashers: VRThing.visible = 0: Next
    For Each VRThing in VR_Display: VRThing.visible = 0: Next
    For Each VRThing in VR_DisplayBall: VRThing.visible = 0: Next
    'Hide desktop lights if not in desktop mode
    For Each x In DesktopLights: x.visible = DesktopMode: Next
  End if
End Sub


Sub InitVR
  Dim obj

  For Each obj in VR_Backglass
    obj.x = obj.x + 0
    obj.height = -obj.y + 375
    obj.y = 10    'adjusts the distance from the backglass towards the user
    obj.rotx = -86.5
  Next

  For Each obj in VR_Flashers
    obj.x = obj.x + 0
    obj.height = -obj.y + 375
    obj.y = 15    'adjusts the distance from the backglass towards the user
    obj.rotx = -86.5
  Next

  For Each obj in VR_DisplayBall
    obj.x = obj.x + 0
    obj.z = -obj.y + 375
    obj.y = 25    'adjusts the distance from the backglass towards the user
    obj.rotx = -86.5
  Next
  BGDisplayBall.y = 20

  For Each obj in VR_Display
    obj.x = obj.x + 0
    obj.z = -obj.y + 375
    obj.y = 90    'adjusts the distance from the backglass towards the user
    obj.rotx = -86.5
  Next
  BGDisplay.y = 85


  NewSkyAngle
End Sub


Sub NewSkyAngle
    'Randomize VR starry sky angles
  VRSphere.rotx = Rnd*360
  VRSphere.roty = Rnd*360
  VRSphere.rotz = Rnd*360
End Sub

Sub RotateSky
  Dim obj
  if VRRoom <> 1 Or VRRotateRate = 0 Then Exit Sub
    'Randomize VR starry sky angles
  Select Case VRRoomRotate
    Case 1
      VRSphere.objrotx = VRSphere.objrotx + FrameTime*VRRotateRate*0.0001
      For each obj in VR_Planet: obj.objrotx = obj.objrotx + FrameTime*VRRotateRate*0.0001: Next
    Case 2
      VRSphere.objroty = VRSphere.objroty + FrameTime*VRRotateRate*0.0001
      For each obj in VR_Planet: obj.objroty = obj.objroty + FrameTime*VRRotateRate*0.0001: Next
    Case 3
      VRSphere.objrotz = VRSphere.objrotz + FrameTime*VRRotateRate*0.0001
      For each obj in VR_Planet: obj.objrotz = obj.objrotz + FrameTime*VRRotateRate*0.0001: Next
  End Select
End Sub





'******************************************************
' ZGCF:  GLF Configurations
'******************************************************

' Light color settings
Const GIColorWhite = "ffffff"
Const GIColor2700k = "ffA957"
Const GIColor3000k = "ffb46b"

Const TimewarpColor = "ccccdd"
Const ShipSaveColor = "0500ee"
Const ShieldsColor = "0010cc"
Const ProtonColor = "00dddd"
Const MysteryColor = "aa33aa"
Const MoonColor = "ccbb00"
Const ClusterBombColor = "dd00dd"
Const CombosColor = "ffb46b"
Const TrainingColor = "ff4c00"
Const HealthColor1 = "00dd00"
Const HealthColor2 = "d14c00"
Const HealthColor3 = "ff0300"
Const SkillshotColor = "33dd33"
Const AlienColor = "ff0300"
Const AlienFlashColor = "ffb2a6"
Const DoubleScoringColor = "ff3300"

Const MeteorCoolColor = "ffA957"
Const MeteorWarmColor = "edb600"
Const MeteorHotColor = "ed1800"
Const MeteorWaveColor = "dd0400"
Const MeteorFlashColor = "ffe7a6"

Const EarthHitColor = "ff0909"
Const EarthHitColor2 = "880303"

Const SegmentsColor = "ff0000"

Const SlingDomePowerUpBrightness = 100  '0 to 100

Dim RainbowColors
RainbowColors = Array(MeteorWaveColor,TrainingColor,MoonColor,HealthColor1,ProtonColor,ShieldsColor,ClusterBombColor,TimewarpColor)

' Playfield display light names
Dim PFDisplayLightNames
PFDisplayLightNames = Array("pf_seg1", "pf_seg2", "pf_seg3", "pf_seg4", "pf_seg5", "pf_seg6", "pf_seg7", "pf_seg8", "pf_seg9", "pf_seg10","pf_seg11","pf_seg12","pf_seg13","pf_seg14","pf_seg15", _
                            "pf_seg16","pf_seg17","pf_seg18","pf_seg19","pf_seg20","pf_seg21","pf_seg22","pf_seg23","pf_seg24","pf_seg25","pf_seg26","pf_seg27","pf_seg28","pf_seg29","pf_seg30")

' Array of main shots and associated light names (used for combos and training modes)
Dim MainShotNames, MainShotLightNames
MainShotNames = Array("left_side","left_orbit","left_ramp","inner_orbit","center_orbit_left","center_orbit_right","right_ramp","right_orbit")
MainShotLightNames = Array("LS1","LS2","LS3","LS4","LPC4","LPC5","LS5","LS6")

' Array of rollover shots and associated light names
Dim RolloverSwitches, RolloverLightNames
RolloverSwitches = Array("s_CenterOrb1","s_CenterOrb2","s_CenterOrb3")
RolloverLightNames = Array("LSwC1","LSwC2","LSwC3")

' Array of training selection shots and associated info
Const TrainingTicks = 69  'uses 1000 ms interval
Dim TrainingSelectionNames, TrainingSelectionLightNames, TrainingColors
TrainingSelectionNames = Array("heal","cluster_bomb","proton_cannon","moon_missile","ship_save","shields","skip")
TrainingSelectionLightNames = Array("tHeal","tClusterAll","tProtonAll","tMoonAll","tSaver","tShields","gi22")
TrainingColors = Array(HealthColor1,ClusterBombColor,ProtonColor,MoonColor,ShipSaveColor,ShieldsColor,GIColorWhite)

Const TrainingCancelTime = 3000
Const TrainingCancelWarningTime = 1500


' Meteor wave qualify settings
Const MeteorWaveDelayTicks = 45  'uses 1000 ms interval

' Meteor wave settings
Const MeteorTimerInitTickInterval = 500
Const MeteorTimerTickInterval = 1000
Const MeteorDropTicks = 2
Const MeteorCoolTicks = 4
Const MeteorWarmTicks = 4
Const MeteorHotTicks = 4

Dim MeteorTotalTicks
MeteorTotalTicks = MeteorDropTicks + MeteorCoolTicks + MeteorWarmTicks + MeteorHotTicks

' Meteor wave multiball settings
Const MeteorMBShootAgainTime = 6000


' Array of rollover shots and associated light names
Dim MoonQualifySwitches, MoonQualifyLightNames
MoonQualifySwitches = Array("s_LeftOutlane","s_LeftInlane","s_RightInlane","s_RightOutlane")
MoonQualifyLightNames = Array("LLO","LLI","LRI","LRO")

' Health settings
Const BumperHitsPerRepair = 9
Const BumperHitsPerRepairTrain = 3

' Ship save settings (more shoot again time)
Const ShipSaveShootAgainTime = 15000

' Timewarp settings
Const TimeWarpPauseTicks = 10
Const TimeWarpTickInterval = 1000

' Combos settings
Const CombosTickInterval = 1000
Const CombosTickLimit = 7
Const CombosTickLimitRelaxed = 11

Const CombosDecayTickInterval = 200
Const CombosDecayTickLimit = 4
Const CombosDecayTickLimitRelaxed = 7

' Skillshots settings
Const SkillshotsTickInterval = 1000
Const SkillshotsTickLimit = 5

' Alien Attack settings
Const AlienTickInterval = 3800

' Mystery settings
Const MysteryShowLength = 4000

' Extra Ball settings
Const EBShowLength = 4000

' Double Scoring settings
Const DoubleScoringShowLength = 5000
Const DoubleScoringTickInterval = 1000
Const DoubleScoringMaxTicks = 60

' Super Spinner Scoring settings
Const SuperSpinnerShowLength = 5000
Const SuperSpinnerTickInterval = 1000
Const SuperSpinnerMaxTicks = 60
Const SuperSpinnerMultiplier = 69

' Super Pops Scoring settings
Const SuperPopsShowLength = 5000
Const SuperPopsTickInterval = 1000
Const SuperPopsMaxTicks = 60
Const SuperPopsMultiplier = 69

' Fully Loaded Wizard settings
Const FLWizMessageInterval = 3000

' Combo Command Wizard settings
Const CCWizMessageInterval = 3400

' Final Wave Wizard settings
Const FWWizMessageInterval = 3000
Const FWWizStartMeteorsInterval = 30000
Const FWWizBallSaveTime = 60000
Const FWWizMaxAsteroidHits = 20

' Victory Lap settings
Const VictoryLapTime = 45 'seconds

' Bonus settings
Const BonusTimerTickInterval = 333
Const BonusrWaveMultiplier = 100000
Const BonusPerTraining = 250000
Const BonusPerClusterBomb = 250000
Const BonusPerMoonMissile = 250000
Const BonusPerProtonRound = 50000



Sub ConfigureGlfDevices

    '*********** INITALIZE SHOWS ***********

    ' Load up the shows
    CreateGeneralShows()
    CreateGIShows()
    CreateInsertShows()
    CreateAttractShows()
    CreateLeftSlingShows()
    CreateRightSlingShows()
    CreateMeteorWaveShows()
    CreateEarthHitShows()
    CreateClusterBombShows()
    CreateShieldShows()
    CreateTimeWarpShows()
    CreateSkillshotShows()
    CreateMoonShows()
    CreateShipSaverBombShows()
    CreateMysteryShows()
    CreateExtraBallShows()
    CreateComboCommandShows()
    CreateFullyLoadedShows()
    CreateFinalWaveWizardShows()
    CreatePostGameShows()
    CreateNukeShows()

    ' Load shared shot profiles
    CreateSharedShotProfiles


    '*********** INITALIZE SOUND EFFECTS ***********

    ' Sound effects bus
    CreateSounds()

    With CreateGlfSoundBus("sfx")
        .SimultaneousSounds = 8
        .Volume = Volume_GameSoundEffects
    End With

    With CreateGlfSoundBus("voc")
        .SimultaneousSounds = 2
        .Volume = Volume_GameCallouts
    End With

    With CreateGlfSoundBus("mus")
        .SimultaneousSounds = 4
        .Volume = Volume_GameMusic
    End With


    ' Trough sound effects
    AddPinEventListener "trough_eject",  "on_trough_eject",  "OnTroughEject", 2000, Null
    AddPinEventListener GLF_BALL_DRAIN, "ball_drain_sound", "BallDrainSound", 100, Null


    '*********** INITALIZE MODES ***********
    'Note, modes must be created after sounds and shows


    ' Modes                         Priority        Active during waves
    '-------                        --------        -------------------
    CreateBasementMode              ' 100           Active all the time
    CreateAttractMode               ' 120           No
    CreateBonusMode                 ' 150           No
    CreatePostGameMode              ' 180           No
    CreateScoreMode                 ' 2000          Always active during a game
    CreateHighScoreMode             ' 120

    CreateBaseMode                  ' 200           Yes
    CreateInstantInfoMode           ' 300           Yes
    CreateNukeMode                  ' 400           Yes
    CreateSkillshotsMode            ' 500           No
    CreateAlienAttackMode           ' 500           No
    CreateShieldsMode               ' 510           No
    CreateShipSaveMode              ' 520           No
    CreateCombosMode                ' 530           No
    CreateTimewarpMode              ' 550           No
    CreateExtraBallMode             ' 560           No
    CreateMysteryMode               ' 580           No
    CreateMoonMultiballQualifyMode  ' 590           No
    CreateMoonMultiballMode         ' 600           Yes
    CreateDoubleScoringMode         ' 700           Yes
    CreateSuperSpinnerMode          ' 700           Yes
    CreateSuperPopsMode             ' 700           Yes
    CreateHealthMode                ' 800           Yes
    CreateProtonCannonMode          ' 900           Yes
    CreateClusterBombMode           ' 1000          Yes

    CreateTrainingQualifyMode       ' 513           No
    CreateTrainingSelectMode        ' 600           No
    CreateTrainingHealMode          ' 700           No
    CreateTrainingClusterBombMode   ' 700           No
    CreateTrainingProtonCannonMode  ' 700           No
    CreateTrainingMoonMissileMode   ' 700           No
    CreateTrainingShipSaveMode      ' 700           No
    CreateTrainingShieldsMode       ' 700           No

    CreateMeteorWaveQualifyMode     ' 1100          No
    CreateMeteorWaveMode            ' 1000          Yes
    CreateMeteorMultiballMode       ' 1000          Yes

    CreateFullyLoadedWizardMode     ' 2000          No
    CreateComboCommandWizardMode    ' 3000          No
    CreateFinalWaveWizardMode       ' 4000          No
    CreateVictoryLapMode            ' 9999          No

    CreateTiltMode                  ' 10000         Yes


    ' Ball search
    With EnableGlfBallSearch()
        .Timeout = 20000
        .SearchInterval = 300
        .BallSearchWaitAfterIteration = 5000
        '.Debug = True
    End With



    '*********** INITALIZE HIGH SCORES ***********
    ' These high scores are tracked for this machine.
    ' Initial values are set first time the machine turns on. After that, values are read from the machines ini file.

    With EnableGlfHighScores()
        With .Categories()
            .Add "score", Array("GRAND CHAMPION", "HIGH SCORE 1", "HIGH SCORE 2", "HIGH SCORE 3")
        End With
        With .Defaults("score")
            .Add "DAN", 9000000
            .Add "MPC", 7000000
            .Add "AVE", 5000000
            .Add "DIG", 3000000
        End With
        .EnterInitialsTimeout = 65000
    End With



    '*********** INITALIZE MACHINE VARIABLES ***********
    ' These variables are tracked for this machine.
    ' Initial values are set first time the machine turns on. After that, values are read from the machines ini file.



    ' Machine variables
    With CreateMachineVar("high_score_initials")
        .InitialValue = ""
        .ValueType = "string"
        .Persist = False
    End With
    With CreateMachineVar("high_score_initials_index")
        .InitialValue = 0
        .ValueType = "int"
        .Persist = False
    End With
    With CreateMachineVar("high_score_initials_chars")
        .InitialValue = 0
        .ValueType = "int"
        .Persist = False
    End With

    With CreateMachineVar("won_game")
        .InitialValue = 0
        .ValueType = "int"
        .Persist = True
    End With
    With CreateMachineVar("message_num")
        .InitialValue = 0
        .ValueType = "int"
        .Persist = True
    End With



    '*********** INITALIZE PLAYER VARIABLES ***********
    ' These variables are tracked per player.
    'Initial values set at the beginning of each game.

    ' Initial Vars
    Glf_SetInitialPlayerVar "flag_ss", 0
    Glf_SetInitialPlayerVar "flag_sss_mystery", 0
    Glf_SetInitialPlayerVar "num_skillshots", 0
    Glf_SetInitialPlayerVar "ball_cradled", 0
    Glf_SetInitialPlayerVar "ball_just_started", 1
    Glf_SetInitialPlayerVar "meteor_wave_running", 0
    Glf_SetInitialPlayerVar "meteor_countdown_value", MeteorWaveDelayTicks
    Glf_SetInitialPlayerVar "meteor_mb_shootagain_time", MeteorMBShootAgainTime
    Glf_SetInitialPlayerVar "num_training_shots", 2
    Glf_SetInitialPlayerVar "num_waves_completed", 0
    Glf_SetInitialPlayerVar "num_waves_completed_this_ball", 0
    Glf_SetInitialPlayerVar "num_training_shots_hit", 2
    Glf_SetInitialPlayerVar "meteors_per_wave", 7
    Glf_SetInitialPlayerVar "disable_moon_launch", 0
    ' Glf_SetInitialPlayerVar "s_Lock1_on", 0
    ' Glf_SetInitialPlayerVar "s_Lock2_on", 0
    ' Glf_SetInitialPlayerVar "s_Lock3_on", 0
    Glf_SetInitialPlayerVar "warping", 0
    Glf_SetInitialPlayerVar "light_the_eb", 0
    Glf_SetInitialPlayerVar "alien_tick_count", -1
    Glf_SetInitialPlayerVar "alien_attack_dir", 0
    Glf_SetInitialPlayerVar "alien_attack_done", 0
    Glf_SetInitialPlayerVar "alien_grace_time", 0
    Glf_SetInitialPlayerVar "scoring_multiplier", 1
    Glf_SetInitialPlayerVar "pop_multiplier", 1
    Glf_SetInitialPlayerVar "spin_multiplier", 1
    Glf_SetInitialPlayerVar "bonus_multiplier", 1
    Glf_SetInitialPlayerVar "combo_ticks", CombosTickLimit
    Glf_SetInitialPlayerVar "combo_decay_ticks", CombosDecayTickLimit
    Glf_SetInitialPlayerVar "training_just_finished", 0
    Glf_SetInitialPlayerVar "training_heal_achieved", 0
    Glf_SetInitialPlayerVar "training_cluster_bomb_achieved", 0
    Glf_SetInitialPlayerVar "training_proton_cannon_achieved", 0
    Glf_SetInitialPlayerVar "training_moon_missile_achieved", 0
    Glf_SetInitialPlayerVar "training_ship_save_achieved", 0
    Glf_SetInitialPlayerVar "training_shields_achieved", 0
    Glf_SetInitialPlayerVar "training_total_achieved", 0
    Glf_SetInitialPlayerVar "training_moon_missile_used", 0
    Glf_SetInitialPlayerVar "wizard_mode_is_ready", 0
    Glf_SetInitialPlayerVar "wizard_mode_running", 0
    Glf_SetInitialPlayerVar "wizard_combo_command_phase", 0
    Glf_SetInitialPlayerVar "wizard_fully_loaded_phase", 0
    Glf_SetInitialPlayerVar "fwwiz_add_ball_ready", 0
    Glf_SetInitialPlayerVar "ccwiz_super_jp", 0
    Glf_SetInitialPlayerVar "flwiz_super_jp", 0
    Glf_SetInitialPlayerVar "wizard_final_hit_count", FWWizMaxAsteroidHits
    Glf_SetInitialPlayerVar "victory", 0
    Glf_SetInitialPlayerVar "bonus_waves", 0
    Glf_SetInitialPlayerVar "bonus_training", 0
    Glf_SetInitialPlayerVar "bonus_bombs", 0
    Glf_SetInitialPlayerVar "bonus_missiles", 0
    Glf_SetInitialPlayerVar "bonus_protons", 0
    Glf_SetInitialPlayerVar "bonus_total", 0
    Glf_SetInitialPlayerVar "flippers_are_dead", 0
    Glf_SetInitialPlayerVar "hs_input_ready", 1
    Glf_SetInitialPlayerVar "nuke_acquired", 0
    Glf_SetInitialPlayerVar "nuke_used", 0
    Glf_SetInitialPlayerVar "nuke_just_used", 0

    'Glf_SetInitialPlayerVar "debug_ball_devices_moon_lock_balls", 0
    'Glf_SetInitialPlayerVar "debug_multiball_lock_moon_launch_balls_locked", 0
    'Glf_SetInitialPlayerVar "debug_leftover_balls_in_lock", 0



   '*********** DEVICE CONFIGS ***********

    ' Plunger
    'NOTE: Plunger switch SHOULD be added to the glf_switches collection (along with all other rollover switches)
    With CreateGlfBallDevice("plunger")
        .BallSwitches = Array("s_Plunger1")
        .EjectTimeout = 10
        .MechanicalEject = True
        .DefaultDevice = True
        .EjectAllEvents = Array("plunger_eject")
    .EjectCallback = "PlungerEjectCallback"
    End With


    ' Flippers
    'NOTE: Flippers SHOULD NOT be added to the glf_switches collection nor any other collection.
    With CreateGlfFlipper("left")
        .Switch = "s_left_flipper"
        .ActionCallback = "LeftFlipperAction"
        .DisableEvents = Array("kill_flippers")
        .EnableEvents = Array(GLF_BALL_STARTED,"enable_flippers")
    End With

    With CreateGlfFlipper("right")
        .Switch = "s_right_flipper"
        .ActionCallback = "RightFlipperAction"
        .DisableEvents = Array("kill_flippers")
        .EnableEvents = Array(GLF_BALL_STARTED,"enable_flippers")
    End With

    With CreateGlfFlipper("upper_right")
        .Switch = "s_right_staged_flipper_key"
        .ActionCallback = "RightFlipper1Action"
        .DisableEvents = Array("kill_flippers")
        .EnableEvents = Array(GLF_BALL_STARTED,"enable_flippers")
    End With



    ' Scoop
    'NOTE: Scoop switches SHOULD be added to the glf_switches collection.
    With CreateGlfBallDevice("scoop")
        .BallSwitches = Array("s_Scoop")
        .EjectTimeout = 2000
        .MechanicalEject = True
    .EjectCallback = "ScoopEjectCallback"
    End With



    ' Drop Targets
    'NOTE: Drop targets SHOULD NOT be added to the glf_switches collection nor any other collection.
    With CreateGlfDroptarget("drop1")
        .Switch = "s_DTMeteor1"
        .KnockdownEvents = Array("meteor1_knockdown",GLF_GAME_START)
        .ResetEvents = Array("meteor1_raise")
        .ActionCallback = "DTMeteor1Callback"
        .ExcludeFromBallSearch = True
        .UseRothDroptarget = True
        .RothDTSwitchID = 1
    End With

    With CreateGlfDroptarget("drop2")
        .Switch = "s_DTMeteor2"
        .KnockdownEvents = Array("meteor2_knockdown",GLF_GAME_START)
        .ResetEvents = Array("meteor2_raise")
        .ActionCallback = "DTMeteor2Callback"
        .ExcludeFromBallSearch = True
        .UseRothDroptarget = True
        .RothDTSwitchID = 2
    End With

    With CreateGlfDroptarget("drop3")
        .Switch = "s_DTMeteor3"
        .KnockdownEvents = Array("meteor3_knockdown",GLF_GAME_START)
        .ResetEvents = Array("meteor3_raise")
        .ActionCallback = "DTMeteor3Callback"
        .ExcludeFromBallSearch = True
        .UseRothDroptarget = True
        .RothDTSwitchID = 3
    End With

    With CreateGlfDroptarget("drop4")
        .Switch = "s_DTMeteor4"
        .KnockdownEvents = Array("meteor4_knockdown",GLF_GAME_START)
        .ResetEvents = Array("meteor4_raise")
        .ActionCallback = "DTMeteor4Callback"
        .ExcludeFromBallSearch = True
        .UseRothDroptarget = True
        .RothDTSwitchID = 4
    End With



    'Standup Targets
    'NOTE: Stand-up targets SHOULD NOT be added to the glf_switches collection nor any other collection.
    With CreateGlfStanduptarget("target1")
        .Switch = "s_TargetMystery1"
        .UseRothStanduptarget = True
        .RothSTSwitchID = 1
    End With

    With CreateGlfStanduptarget("target2")
        .Switch = "s_TargetMystery2"
        .UseRothStanduptarget = True
        .RothSTSwitchID = 2
    End With

    With CreateGlfStanduptarget("target3")
        .Switch = "s_TargetMystery3"
        .UseRothStanduptarget = True
        .RothSTSwitchID = 3
    End With

    With CreateGlfStanduptarget("target4")
        .Switch = "s_TargetMystery4"
        .UseRothStanduptarget = True
        .RothSTSwitchID = 4
    End With

    With CreateGlfStanduptarget("target5")
        .Switch = "s_TargetMystery5"
        .UseRothStanduptarget = True
        .RothSTSwitchID = 5
    End With

    With CreateGlfStanduptarget("target6")
        .Switch = "s_TargetShield1"
        .UseRothStanduptarget = True
        .RothSTSwitchID = 6
    End With

    With CreateGlfStanduptarget("target7")
        .Switch = "s_TargetShield2"
        .UseRothStanduptarget = True
        .RothSTSwitchID = 7
    End With

    With CreateGlfStanduptarget("target8")
        .Switch = "s_TargetShield3"
        .UseRothStanduptarget = True
        .RothSTSwitchID = 8
    End With


    ' Slingshots
    'NOTE: Slingshots SHOULD be added to the glf_slingshots collection.
    With CreateGlfAutoFireDevice("left_sling")
        .Switch = "s_LeftSlingshot"
        .ActionCallback = "LeftSlingshotAction"
        .DisabledCallback = "LeftSlingshotDisabled"
        .EnabledCallback = "LeftSlingshotEnabled"
        .DisableEvents = Array("kill_flippers")
        .EnableEvents = Array(GLF_BALL_STARTED,"enable_flippers")
    End With

    With CreateGlfAutoFireDevice("right_sling")
        .Switch = "s_RightSlingshot"
        .ActionCallback = "RightSlingshotAction"
        .DisabledCallback = "RightSlingshotDisabled"
        .EnabledCallback = "RightSlingshotEnabled"
        .DisableEvents = Array("kill_flippers")
        .EnableEvents = Array(GLF_BALL_STARTED,"enable_flippers")
    End With

    With CreateGlfAutoFireDevice("top_sling")
        .Switch = "s_TopSlingshot"
        .ActionCallback = "TopSlingshotAction"
        .DisabledCallback = "TopSlingshotDisabled"
        .EnabledCallback = "TopSlingshotEnabled"
        .DisableEvents = Array("kill_flippers")
        .EnableEvents = Array(GLF_BALL_STARTED,"enable_flippers")
    End With


    ' Bumpers
    'NOTE: Slingshots SHOULD be added to the glf_switches collection.
    With CreateGlfAutoFireDevice("bumper1")
        .Switch = "s_Bumper1"
        .ActionCallback = "Bumper1Action"
        .DisabledCallback = "Bumper1Disabled"
        .EnabledCallback = "Bumper1Enabled"
        .DisableEvents = Array("kill_flippers")
        .EnableEvents = Array(GLF_BALL_STARTED,"enable_flippers")
    End With

    With CreateGlfAutoFireDevice("bumper2")
        .Switch = "s_Bumper2"
        .ActionCallback = "Bumper2Action"
        .DisabledCallback = "Bumper2Disabled"
        .EnabledCallback = "Bumper2Enabled"
        .DisableEvents = Array("kill_flippers")
        .EnableEvents = Array(GLF_BALL_STARTED,"enable_flippers")
    End With

    With CreateGlfAutoFireDevice("bumper3")
        .Switch = "s_Bumper3"
        .ActionCallback = "Bumper3Action"
        .DisabledCallback = "Bumper3Disabled"
        .EnabledCallback = "Bumper3Enabled"
        .DisableEvents = Array("kill_flippers")
        .EnableEvents = Array(GLF_BALL_STARTED,"enable_flippers")
    End With


    ' Ball Devices
    ' Moon Lock
    With CreateGlfBallDevice("moon_lock")
        .BallSwitches = Array("s_Lock1","s_Lock2","s_Lock3")
    End With


    ' Diverters
    ' Lock pin
    With CreateGlfDiverter("lock_pin")
        .EnableEvents = Array(GLF_BALL_STARTED)
        .ActivateEvents = Array("release_moon_ball", "multiball_moon_started")
        .DeactivateEvents = Array("raise_lock_pin")
        '.ActivationTime = "230 if devices.ball_devices.moon_lock.balls > 0 else 2000"
        .ActivationTime = "3000"
        .ActionCallback = "DropLockPin"
        .ExcludeFromBallSearch = True
    End With

    With CreateGlfDiverter("lock_pin_game_over")
        .EnableEvents = Array(GLF_GAME_STARTED)
        .ActivateEvents = Array("game_ended{devices.ball_devices.moon_lock.balls > 0}")
        .ActivationTime = "3000"
        .ActionCallback = "DropLockPin"
        .ExcludeFromBallSearch = True
    End With


    ' Diverter above pop bumpers
    With CreateGlfDiverter("divert_pin")
        .EnableEvents = Array("reset_complete","enable_diverter",GLF_BALL_STARTED)
        .ActivateEvents = Array("raise_diverter") '"start_meteor_wave","start_training_heal"
        .DeactivateEvents = Array("drop_diverter",GLF_BALL_ENDED) '"stop_meteor_wave","stop_training"
        .ActionCallback = "RaiseDiverterPin"
    End With


    ' Asteroid motor
    With CreateGlfDiverter("asteroid_motor")
        .EnableEvents = Array("reset_complete","enable_asteroid_motor")
        .ActivateEvents = Array("run_asteroid_motor") '"start_meteor_wave","start_training_heal"
        .DeactivateEvents = Array("stop_asteroid_motor") '"stop_meteor_wave","stop_training"
        .ActionCallback = "SolSpinAsteroid"
    End With



    ' Magnet
    With CreateGlfMagnet("mag1")
        .GrabSwitch = "s_TargetMystery5"
        .ReleaseBallEvents = Array("magnet_mag1_grabbed_ball")
        .GrabTime = 1000
        .ActionCallback = "GrabMagnetAction"
    End With





    '*********** INITALIZE ALPHANUMERIC DISPLAYS ***********


    Dim segment_display_pf
    Set segment_display_pf = (New GlfLightSegmentDisplay)("pf")

    segment_display_pf.SegmentType = "14Segment"
    segment_display_pf.SegmentSize = 2
    segment_display_pf.UpdateMethod = "stack"
    segment_display_pf.DefaultColor = SegmentsColor
    segment_display_pf.LightGroup = "pf_seg"


    Dim segment_display_ball
    Set segment_display_ball = (New GlfLightSegmentDisplay)("ball")

    segment_display_ball.SegmentType = "14Segment"
    segment_display_ball.SegmentSize = 2
    segment_display_ball.DefaultColor = SegmentsColor
    segment_display_ball.LightGroup = "ball_seg"
    segment_display_ball.ExternalB2SSegmentIndex = 1


    Dim segment_display_p1
    Set segment_display_p1 = (New GlfLightSegmentDisplay)("player1")

    segment_display_p1.SegmentType = "14Segment"
    segment_display_p1.SegmentSize = 8
    segment_display_p1.LightGroup = "p1_seg"
    segment_display_p1.UpdateMethod = "stack"
    segment_display_p1.DefaultColor = SegmentsColor
    segment_display_p1.UseDotsForCommas = True
    segment_display_p1.ExternalFlexDmdSegmentIndex = 0
    segment_display_p1.ExternalB2SSegmentIndex = 3

    Dim segment_display_p2
    Set segment_display_p2 = (New GlfLightSegmentDisplay)("player2")

    segment_display_p2.SegmentType = "14Segment"
    segment_display_p2.SegmentSize = 8
    segment_display_p2.LightGroup = "p2_seg"
    segment_display_p2.UpdateMethod = "stack"
    segment_display_p2.DefaultColor = SegmentsColor
    segment_display_p2.UseDotsForCommas = True
    segment_display_p2.ExternalFlexDmdSegmentIndex = 8
    segment_display_p2.ExternalB2SSegmentIndex = 11

    Dim segment_display_p3
    Set segment_display_p3 = (New GlfLightSegmentDisplay)("player3")

    segment_display_p3.SegmentType = "14Segment"
    segment_display_p3.SegmentSize = 8
    segment_display_p3.LightGroup = "p3_seg"
    segment_display_p3.UpdateMethod = "stack"
    segment_display_p3.DefaultColor = SegmentsColor
    segment_display_p3.UseDotsForCommas = True
    segment_display_p3.ExternalFlexDmdSegmentIndex = 16
    segment_display_p3.ExternalB2SSegmentIndex = 19

    Dim segment_display_p4
    Set segment_display_p4 = (New GlfLightSegmentDisplay)("player4")

    segment_display_p4.SegmentType = "14Segment"
    segment_display_p4.SegmentSize = 8
    segment_display_p4.LightGroup = "p4_seg"
    segment_display_p4.UpdateMethod = "stack"
    segment_display_p4.DefaultColor = SegmentsColor
    segment_display_p4.UseDotsForCommas = True
    segment_display_p4.ExternalFlexDmdSegmentIndex = 24
    segment_display_p4.ExternalB2SSegmentIndex = 27

    Dim segment_display_all
    Set segment_display_all = (New GlfLightSegmentDisplay)("all")

    segment_display_all.SegmentType = "14Segment"
    segment_display_all.SegmentSize = 32
    segment_display_all.LightGroups = Array("p1_seg", "p2_seg", "p3_seg", "p4_seg")
    segment_display_all.UpdateMethod = "stack"
    segment_display_all.DefaultColor = SegmentsColor
    segment_display_all.UseDotsForCommas = True
    segment_display_all.DefaultTransitionUpdateHz = 10
    segment_display_all.ExternalFlexDmdSegmentIndex = 0
    segment_display_all.ExternalB2SSegmentIndex = 3

    Dim segment_display_p1p2
    Set segment_display_p1p2 = (New GlfLightSegmentDisplay)("p1p2")
    segment_display_p1p2.SegmentType = "14Segment"
    segment_display_p1p2.SegmentSize = 16
    segment_display_p1p2.LightGroups = Array("p1_seg", "p2_seg")
    segment_display_p1p2.UpdateMethod = "stack"
    segment_display_p1p2.DefaultColor = SegmentsColor
    segment_display_p1p2.UseDotsForCommas = True
    segment_display_p1p2.DefaultTransitionUpdateHz = 10
    segment_display_p1p2.ExternalFlexDmdSegmentIndex = 0
    segment_display_p1p2.ExternalB2SSegmentIndex = 3

    ' Dim segment_display_p3p4
    ' Set segment_display_p3p4 = (New GlfLightSegmentDisplay)("p3p4")
    ' segment_display_p3p4.SegmentType = "14Segment"
    ' segment_display_p3p4.SegmentSize = 16
    ' segment_display_p3p4.LightGroups = Array("p3_seg", "p4_seg")
    ' segment_display_p3p4.UpdateMethod = "stack"
    ' segment_display_p3p4.DefaultColor = SegmentsColor
    ' segment_display_p3p4.UseDotsForCommas = True
    ' segment_display_p3p4.DefaultTransitionUpdateHz = 10
    ' segment_display_p3p4.ExternalFlexDmdSegmentIndex = 16
    ' segment_display_p3p4.ExternalB2SSegmentIndex = 19



End Sub



' Event callbacks used for trough sound effects and DOF
Function OnTroughEject(args)
  RandomSoundBallRelease swTrough1
  DOF 110, DOFPulse
End Function

Function BallDrainSound(args)
    RandomSoundDrain Drain
    BallDrainSound = args(1)
End Function



' Shared profiles
Public Sub CreateSharedShotProfiles()

    With GlfShotProfiles("off_on_color")
        With .States("unlit")
            .Show = "off"
            .Key = "key_off_a"
        End With
        With .States("on")
            .Show = "led_color"
            .Key = "key_on_a"
        End With
    End With

    With GlfShotProfiles("flicker_on_flicker_off")
        With .States("lit")
            .Show = "flicker_color_on"
            .Key = "key_off_z"
            .Speed = 3
        End With
        With .States("unlit")
            .Show = "flicker_color_off"
            .Speed = 3
            .Key = "key_on_z"
        End With
    End With

    With GlfShotProfiles("flicker_on")
        With .States("unlit")
            .Show = "off"
            .Key = "key_off_b"
        End With
        With .States("on")
            .Show = "flicker_color_on"
            .Key = "key_on_b"
            .Speed = 4
        End With
    End With

    With GlfShotProfiles("powerups")
        With .States("unlit")
            .Show = "off"
            .Key = "key_off_c"
        End With
        With .States("ready")
            .Show = "flash_color_with_fade"
            .Key = "key_ready_c"
            .Speed = 4
            With .Tokens()
                .Add "fade", 400
            End With
        End With
        With .States("collected")
            .Show = "led_color"
            .Key = "key_collected_c"
        End With
    End With

    With GlfShotProfiles("training_powerups")
        With .States("ready")
            .Show = "flash_color_with_fade"
            .Key = "key_ready_zc"
            .Speed = 12
            With .Tokens()
                .Add "fade", 100
            End With
        End With
        With .States("collected")
            .Show = "led_color"
            .Key = "key_collected_zc"
        End With
    End With

    With GlfShotProfiles("qualified_shot")
        With .States("unlit")
            .Show = "off"
            .Key = "key_off_d"
        End With
        With .States("ready")
            .Show = "flash_color_with_fade"
            .Key = "key_on_d"
            .Speed = 2
            With .Tokens()
                .Add "fade", 100
            End With
        End With
    End With


    With GlfShotProfiles("shoot_again")
      With .States("unlit")
          .Show = "off"
          .Key = "key_off_e"
          '.Priority = 5000
          With .Tokens()
              .Add "lights", "LSA"
          End With
      End With
      With .States("flashing")
          .Show = "flash_color_with_fade"
          .Key = "key_flashing_e"
          .Speed = 2
          .Priority = 5000
          With .Tokens()
              .Add "lights", "LSA"
              .Add "fade", 500
          End With
      End With
      With .States("hurry")
          .Show = "flash_color"
          .Key = "key_hurry_e"
          .Speed = 7
          .Priority = 5000
          With .Tokens()
              .Add "lights", "LSA"
          End With
      End With
    End With


    With GlfShotProfiles("health_shot_ready")
        With .States("unlit")
            .Key = "h_shot_not_ready"
            .Show = "off"
            With .Tokens()
                .Add "lights", "LDP"
            End With
        End With
        With .States("ready")
            .Key = "h_shot_is_ready"
            .Show = "flash_color_with_fade"
            .Speed = 2
            With .Tokens()
                .Add "fade", 500
                .Add "color", HealthColor1
                .Add "lights", "LDP"
            End With
        End With
    End With


    With GlfShotProfiles("wizard_ready1")
        With .States("unlit")
            .Show = "off"
            .Key = "key_off_f"
        End With
        With .States("ready")
            .Show = "flash_color_with_fade"
            .Key = "key_ready_f"
            .Speed = 8
            With .Tokens()
                .Add "fade", 400
            End With
        End With
        With .States("collected")
            .Show = "led_color"
            .Key = "key_collected_f"
        End With
    End With


End Sub




'Alien Attack Mode.

'After every even wave is completed, an alien roving shot will move accross the playfield. Direction is randomly chosen
'If the roving shot makes it all the way accross the playfield, an earth_hit occurs.
'Timewarp will freeze the alien
'Cluster bomb will distroy the alien


Sub CreateAlienAttackMode
    Dim x

    With CreateGlfMode("alien_attack", 500)
        .StartEvents = Array("new_ball_active","stop_meteor_wave","stop_training","wizard_mode_ended")
        .StopEvents = Array("mode_base_stopping","recycle_alien_done","start_training_select","wizard_mode_started")
        '.Debug = True


        With .EventPlayer()
            'start the attack sequence (only after even waves)
            .Add "mode_alien_attack_started{current_player.shot_meteor_wave2 == 2 && current_player.shot_meteor_wave3 == 0}", Array("start_alien_attack")  'after wave 2
            .Add "mode_alien_attack_started{current_player.shot_meteor_wave4 == 2 && current_player.shot_meteor_wave5 == 0}", Array("start_alien_attack")  'after wave 4
            .Add "mode_alien_attack_started{current_player.shot_meteor_wave6 == 2 && current_player.shot_meteor_wave7 == 0}", Array("start_alien_attack")  'after wave 6
            .Add "mode_alien_attack_started{current_player.shot_meteor_wave8 == 2 && current_player.shot_meteor_wave9 == 0}", Array("start_alien_attack")  'after wave 8
            'reset stuff at start of wave
            .Add "start_meteor_wave", Array("recycle_alien_attack")
            .Add "recycle_alien_attack", Array("recycle_alien_done")
            'handle alien hit
            .Add "alien_hit", Array("alien_hit_show","alien_hit_show2","play_voc_AlienHit","start_double_scoring","score_400000")
        End With

        With .RandomEventPlayer()
            '.Debug = True
            With .EventName("reset_alien_attack")
                .Add "alien_attack_from_left", 1
                .Add "alien_attack_from_right", 1
                .ForceAll = False
                .ForceDifferent = False
            End With
        End With


        With .SoundPlayer()
            With .EventName("alien_attacking")
                .Key = "key_voc_AlienAlert"
                .Sound = "voc_AlienAlert"
            End With
            With .EventName("play_voc_AlienHit")
                .Key = "key_voc_AlienHit"
                .Sound = "voc_AlienHit"
            End With
            With .EventName("earth_hit")
                .Key = "key_sfx_alien_ship_crash"
                .Sound = "sfx_alien_ship_crash"
            End With
        End With


        'alien shot profile, two states
        With .ShotProfiles("alien")
            With .States("unlit")
                .Key = "key_alien_unlit"
                .Show = "off"
            End With
            With .States("lit")
                .Key = "key_alien_lit"
                .Show = "flash_color_with_fade"
                .Priority = 10
                .Speed = 7
                With .Tokens()
                    .Add "fade", 200
                    .Add "color", AlienColor
                End With
            End With
            With .States("grace")
                .Key = "key_alien_grace"
                .Show = "off"
            End With
        End With


        'Define alien shots
        For x = 1 to 8
            With .Shots("alien_shot"&x)
                '.Debug = True
                .Profile = "alien"
                With .Tokens()
                    .Add "lights", MainShotLightNames(x-1)
                End With
                With .ControlEvents()
                    .Events = Array(MainShotNames(x-1)&"_hit")
                    .State = 0
                End With
                With .ControlEvents()
                    .Events = Array("alien_shot"&x&"_lit")
                    .State = 1
                End With
                .RestartEvents = Array("reset_alien_shot"&x,"alien_attack_finished")
            End With
        Next



        'Alien attack state machine
        With .StateMachines("attack_state")
            '.Debug = True
            .PersistState = true
            .StartingState = "not_attacking"

            'States
            With .States("not_attacking")
                .Label = "Not Attacking State"
                .EventsWhenStarted = Array("reset_alien_attack","stop_alien_timer")
            End With
            With .States("start_attacking")
                .Label = "Not Attacking State"
                .EventsWhenStarted = Array("start_alien_timer")
            End With
            With .States("attacking")
                .Label = "Attacking State"
            End With
            With .States("attack_paused")
                .Label = "Attack Paused State"
                .EventsWhenStarted = Array("stop_alien_timer")
            End With
            With .States("attack_done")
                .Label = "Attack Done State"
                .EventsWhenStarted = Array("stop_alien_timer","alien_attack_finished")
            End With

            'Transitions
            With .Transitions()
                .Source = Array("not_attacking")
                .Target = "start_attacking"
                .Events = Array("start_alien_attack")
            End With
            With .Transitions()
                .Source = Array("start_attacking")
                .Target = "attacking"
                .Events = Array("timer_alien_attack_tick{devices.timers.alien_attack.ticks > 0}")
                .EventsWhenTransitioning = Array("alien_attacking")
            End With
            With .Transitions() 'pause between modes and during timewarp
                .Source = Array("start_attacking","attacking")
                .Target = "attack_paused"
                .Events = Array("timer_timewarp_tick{devices.timers.timewarp.ticks==1}")  '"mode_alien_attack_stopping"
            End With
            With .Transitions()
                .Source = Array("attack_paused")
                .Target = "start_attacking"
                .Events = Array("timer_timewarp_complete","mode_alien_attack_started")
                .EventsWhenTransitioning = Array("start_alien_timer")
            End With
            With .Transitions()
                .Source = Array("attacking")
                .Target = "start_attacking"
                .Events = Array("mode_alien_attack_started")
                .EventsWhenTransitioning = Array("start_alien_timer")
            End With
            With .Transitions()  'successfully destroyed alien
                .Source = Array("attacking","attack_paused")
                .Target = "attack_done"
                .Events = Array("alien_hit_show")
            End With
            With .Transitions()  'alien made a hit on earth
                .Source = Array("attacking")
                .Target = "attack_done"
                .Events = Array("timer_alien_attack_complete")
                .EventsWhenTransitioning = Array("earth_hit","alien_hit_show")
            End With
            With .Transitions()  'successfully destroed alien
                .Source = Array("attack_done")
                .Target = "not_attacking"
                .Events = Array("recycle_alien_attack")
            End With

        End With


        'Alien ship state machine
        With .StateMachines("alien")
            '.Debug = True
            .PersistState = true
            .StartingState = "init"

            'States
            With .States("init")
                .Label = "Init State"
            End With
            For x = 1 to 8
                With .States("shot"&x)
                    .Label = "Alien Shot "&x
                    .EventsWhenStarted = Array("alien_shot"&x&"_lit")
                End With
            Next

            'Transitions
            With .Transitions()
                .Source = Array("init")
                .Target = "shot1"
                .Events = Array("alien_attacking{current_player.alien_attack_dir == 0}")
            End With
            With .Transitions()
                .Source = Array("init")
                .Target = "shot8"
                .Events = Array("alien_attacking{current_player.alien_attack_dir == 1}")
            End With
            For x = 1 to 7
                With .Transitions()  'move alien from left to right
                    .Source = Array("shot"&x)
                    .Target = "shot"&(x+1)
                    .Events = Array("timer_alien_attack_tick{current_player.alien_attack_dir == 0 && devices.timers.alien_attack.ticks == "&(x+1)&"}")
                    .EventsWhenTransitioning = Array("reset_alien_shot"&x,"restart_alien_grace_timer")
                End With
            Next
            For x = 2 to 8
                With .Transitions()  'move alien from right to left
                    .Source = Array("shot"&x)
                    .Target = "shot"&(x-1)
                    .Events = Array("timer_alien_attack_tick{current_player.alien_attack_dir == 1 && devices.timers.alien_attack.ticks == "&(10-x)&"}")
                    .EventsWhenTransitioning = Array("reset_alien_shot"&x,"restart_alien_grace_timer")
                End With
            Next

            With .Transitions()  'alien destroyed
                .Source = Array("shot1")
                .Target = "init"
                .Events = Array(MainShotNames(0)&"_hit", _
                            MainShotNames(1)&"_hit{current_player.alien_attack_dir == 1 && current_player.alien_grace_time == 1}", _
                            "cluster_bomb_fired","detonate_nuke")
                .EventsWhenTransitioning = Array("reset_alien_shot"&x,"alien_hit")
            End With
            For x = 2 to 7
                With .Transitions()  'alien destroyed
                    .Source = Array("shot"&x)
                    .Target = "init"
                    .Events = Array(MainShotNames(x-1)&"_hit", _
                              MainShotNames(x-2)&"_hit{current_player.alien_attack_dir == 0 && current_player.alien_grace_time == 1}", _
                              MainShotNames(x)&"_hit{current_player.alien_attack_dir == 1 && current_player.alien_grace_time == 1}", _
                              "cluster_bomb_fired","detonate_nuke")
                    .EventsWhenTransitioning = Array("reset_alien_shot"&x,"alien_hit")
                End With
            Next
            With .Transitions()  'alien destroyed
                .Source = Array("shot8")
                .Target = "init"
                .Events = Array(MainShotNames(7)&"_hit", _
                            MainShotNames(6)&"_hit{current_player.alien_attack_dir == 0 && current_player.alien_grace_time == 1}", _
                            "cluster_bomb_fired","detonate_nuke")
                .EventsWhenTransitioning = Array("reset_alien_shot"&x,"alien_hit")
            End With

            For x = 1 to 8
                With .Transitions()  'earth hit
                    .Source = Array("shot"&x)
                    .Target = "init"
                    .Events = Array("earth_hit")
                    .EventsWhenTransitioning = Array("reset_alien_shot"&x)
                End With
            Next

        End With


        With .Timers("alien_attack")
            '.Debug = True
            .TickInterval = AlienTickInterval
            .StartValue = "current_player.alien_tick_count"
            .EndValue = 9
            With .ControlEvents()
                .EventName = "reset_alien_timer"
                .Action = "reset"
            End With
            With .ControlEvents()
                .EventName = "stop_alien_timer"
                .Action = "stop"
            End With
            With .ControlEvents()
                .EventName = "start_alien_timer"
                .Action = "start"
            End With
        End With

        With .Timers("alien_grace")
            '.Debug = True
            .TickInterval = 800
            .StartValue = 0
            .EndValue = 1
            With .ControlEvents()
                .EventName = "restart_alien_grace_timer"
                .Action = "restart"
            End With
        End With


        With .VariablePlayer()
            With .EventName("reset_alien_attack")
                With .Variable("alien_tick_count")
                    .Action = "set"
          .Int = -1
        End With
      End With
            With .EventName("timer_alien_attack_tick")
        With .Variable("alien_tick_count")
                    .Action = "set"
          .Int = "devices.timers.alien_attack.ticks"
        End With
      End With
            With .EventName("alien_attack_from_left")
        With .Variable("alien_attack_dir")
                    .Action = "set"
          .Int = 0
        End With
      End With
            With .EventName("alien_attack_from_right")
        With .Variable("alien_attack_dir")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName("restart_alien_grace_timer")
        With .Variable("alien_grace_time")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName("timer_alien_grace_complete")
        With .Variable("alien_grace_time")
                    .Action = "set"
          .Int = 0
        End With
      End With
    End With


        With .ShowPlayer()
            With .EventName("earth_hit")
                .Key = "key_earth_hit"
                .Priority = 15
                .Show = "earth_hit"
                .Speed = 1
                .Loops = 1
            End With
            With .EventName("alien_hit_show")
                .Key = "key_alien_flash"
                .Show = "flash_color_with_fade"
                .Speed = 20
                .Loops = 5
                With .Tokens()
                    .Add "lights", "tFlasherU"
                    .Add "color", AlienFlashColor
                    .Add "fade", 300
                End With
            End With
            With .EventName("alien_hit_show2")
                .Key = "key_alien_flash2"
                .Show = "insert_swap2"
                .Speed = 1.5
                .Loops = 3
                .Priority = 1000
                With .Tokens()
                    .Add "color1", DoubleScoringColor
                    .Add "color2", AlienColor
                    .Add "intensity", 100
                End With
            End With
        End With


    End With

End Sub



' Attract Mode.


Sub CreateAttractMode()
    Dim x

    With CreateGlfMode("attract", 120)
        .StartEvents = Array("start_attract_mode")
        .StopEvents = Array("stop_attract_mode",GLF_BALL_STARTED)

        With .EventPlayer()
            .Add "mode_attract_started", Array("play_attract_show","play_mus_ambient_bg","stop_asteroid_motor","drop_diverter","backglass_dark_on","backglass_chaos_on")
            .Add "timer_attract_voc_complete", Array("play_attract_voc")
            .Add "mode_attract_stopping", Array("drop_diverter")
            'main attract show timing
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 8}", Array("play_meteor_fall_left")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 16}", Array("play_meteor_fall_right","play_att_lsling_show1","play_att_rsling_show1")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 26}", Array("play_meteor_fall_center")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 30}", Array("play_meteor_fall_right")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 38}", Array("play_meteor_fall_left","play_att_lsling_show2","play_att_rsling_show2")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 42}", Array("play_meteor_fall_center")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 44}", Array("play_meteor_fall_left")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 45}", Array("play_earth_hit_left","play_attract_boom")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 54}", Array("play_meteor_fall_center","play_att_lsling_show3","play_att_rsling_show3")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 60}", Array("play_meteor_fall_right")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 61}", Array("play_earth_hit_right","play_attract_boom")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 70}", Array("play_meteor_fall_center")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 71}", Array("play_earth_hit_center","play_attract_boom")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 80}", Array("play_meteor_fall_left","play_att_lsling_show4","play_att_rsling_show4")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 88}", Array("play_meteor_fall_center")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 98}", Array("play_meteor_fall_right")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 102}", Array("play_meteor_fall_right")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 103}", Array("play_earth_hit_right","play_attract_boom")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 116}", Array("play_meteor_fall_center")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 126}", Array("play_meteor_fall_right")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 128}", Array("play_meteor_fall_left")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 132}", Array("play_meteor_fall_center","play_att_lsling_show5","play_att_rsling_show5")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 133}", Array("play_earth_hit_center","play_attract_boom")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 150}", Array("play_meteor_fall_left")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 151}", Array("play_earth_hit_left","play_attract_boom")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 164}", Array("play_meteor_fall_center")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 178}", Array("play_meteor_fall_right")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 182}", Array("play_meteor_fall_center","play_att_lsling_show2","play_att_rsling_show2")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 184}", Array("play_meteor_fall_right")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 198}", Array("play_meteor_fall_left")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 202}", Array("play_meteor_fall_center")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 203}", Array("play_earth_hit_center","play_attract_boom")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 208}", Array("play_meteor_fall_left","play_att_lsling_show6","play_att_rsling_show6")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 209}", Array("play_earth_hit_left","play_attract_boom")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 216}", Array("play_meteor_fall_center")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 218}", Array("play_meteor_fall_right")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 224}", Array("play_meteor_fall_right")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 225}", Array("play_earth_hit_right","play_att_lsling_show7","play_att_rsling_show7","play_attract_boom")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 228}", Array("play_meteor_fall_center")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 229}", Array("play_earth_hit_center","play_attract_boom")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 232}", Array("play_meteor_fall_right")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 233}", Array("play_earth_hit_right","play_attract_boom")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 238}", Array("play_meteor_fall_left","play_att_lsling_show8","play_att_rsling_show8")
            .Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 239}", Array("play_earth_hit_left","play_attract_boom")


            .Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 1}", Array("show_attract_title")   '5 + 1 sec
            .Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 7}", Array("show_attract_message") '9 + 1 sec
            .Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 17}", Array("show_attract_hs1")    '3 + 1 sec
            .Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 21}", Array("show_attract_hs2")    '3 + 1 sec
            .Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 25}", Array("show_attract_hs3")    '3 + 1 sec
            .Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 29}", Array("show_attract_hs4")    '3 + 1 sec
            .Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 33}", Array("show_attract_lastscores1")    '2 + 1 sec
            .Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 36}", Array("show_attract_lastscores2")    '3 + 1 sec
            .Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 40}", Array("show_attract_credits1") '5 + 1 sec
            .Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 46}", Array("show_attract_credits2") '2 sec
            .Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 48}", Array("show_attract_credits3") '2 sec
            .Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 50}", Array("show_attract_credits4") '4 + 1 sec = 55
        End With

        With .RandomEventPlayer()
            With .EventName("play_attract_voc")
                .Add "play_voc_attract1", 1
                .Add "play_voc_attract2", 1
                .Add "play_voc_attract3", 1
                .Add "play_voc_attract4", 1
                .Add "play_voc_attract5", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
            With .EventName("play_attract_boom")
                .Add "play_sfx_boom1", 1
                .Add "play_sfx_boom2", 1
                .Add "play_sfx_boom3", 1
                .Add "play_sfx_boom4", 1
                .Add "play_sfx_boom5", 1
                .Add "play_sfx_boom6", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
            With .EventName("show_attract_message")
                .Add "show_attract_message1", 1
                .Add "show_attract_message2", 1
                .Add "show_attract_message3", 1
                .Add "show_attract_message4", 1
                .Add "show_attract_message5", 1
                .Add "show_attract_message6", 1
                .Add "show_attract_message7", 1
                .Add "show_attract_message8", 1
                .Add "show_attract_message9", 1
                .Add "show_attract_message10", 1
                .Add "show_attract_message11", 1
                .Add "show_attract_message12", 1
                .Add "show_attract_message13", 1
                .Add "show_attract_message14", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
        End With

        With .DOFPlayer()
            With .EventName("play_attract_show")
                .Action = "DOF_ON"
                .DOFEvent = 134
            End With
            With .EventName("mode_attract_stopping")
                .Action = "DOF_OFF"
                .DOFEvent = 134
            End With
        End With

        With .SoundPlayer()
            For x = 1 to 5
                With .EventName("play_voc_attract"&x)
                    .Key = "key_voc_attract"&x
                    .Sound = "voc_attract"&x
                End With
            Next
            For x = 1 to 6
                With .EventName("play_sfx_boom"&x)
                    .Key = "key_sfx_boom"&x
                    .Sound = "sfx_boom"&x
                End With
            Next
            With .EventName("play_mus_ambient_bg")
                .Key = "key_mus_ambient_bg"
                .Sound = "mus_ambient_bg"
            End With
        End With

        With .Timers("attract_voc")
            .TickInterval = 10000
            .StartValue = 0
            .EndValue = 3
            With .ControlEvents()
                .EventName = "mode_attract_started"
                .Action = "start"
            End With
            With .ControlEvents()
                .EventName = "play_attract_voc"
                .Action = "restart"
            End With
        End With

        With .Timers("attract_shows")
            .TickInterval = 500
            .StartValue = 0
            .EndValue = 240
            With .ControlEvents()
                .EventName = "mode_attract_started"
                .Action = "start"
            End With
            With .ControlEvents()
                .EventName = "timer_attract_shows_complete"
                .Action = "restart"
            End With
        End With

        With .Timers("attract_display")
            .TickInterval = 1000
            .StartValue = 0
            .EndValue = 55
            With .ControlEvents()
                .EventName = "mode_attract_started"
                .Action = "start"
            End With
            With .ControlEvents()
                .EventName = "timer_attract_display_complete"
                .Action = "restart"
            End With
        End With

        With .ShowPlayer()
            With .EventName("play_attract_show")
                .Key = "key_attract_show1"
                .Show = "insert_sparkles"
                With .Tokens()
                    .Add "intensity", 60
                End With
            End With
            With .EventName("play_meteor_fall_left")
                .Key = "key_meteor_fall_left"
                .Show = "meteor_fall_left"
                .Loops = 1
                With .Tokens()
                    .Add "intensity", 100
                End With
            End With
            With .EventName("play_meteor_fall_center")
                .Key = "key_meteor_fall_center"
                .Show = "meteor_fall_center"
                .Loops = 1
                With .Tokens()
                    .Add "intensity", 100
                End With
            End With
            With .EventName("play_meteor_fall_right")
                .Key = "key_meteor_fall_right"
                .Show = "meteor_fall_right"
                .Loops = 1
                With .Tokens()
                    .Add "intensity", 100
                End With
            End With
            With .EventName("play_earth_hit_center")
                .Key = "key_earth_hit_center"
                .Show = "earth_hit_center"
                .Loops = 1
                .Speed = 2
            End With
            With .EventName("play_earth_hit_left")
                .Key = "key_earth_hit_left"
                .Show = "earth_hit_left"
                .Loops = 1
                .Speed = 2
            End With
            With .EventName("play_earth_hit_right")
                .Key = "key_earth_hit_right"
                .Show = "earth_hit_right"
                .Loops = 1
                .Speed = 2
            End With

            With .EventName("play_att_lsling_show1")
                .Key = "key_att_lsling_show1"
                .Show = "lsling_swap_2_2_b"
                .Speed = 1
                .Loops = 5
                With .Tokens()
                    .Add "color1", "ff0000"
                    .Add "color2", "ff9900"
                    .Add "intensity", 50
                End With
            End With
            With .EventName("play_att_rsling_show1")
                .Key = "key_att_rling_show1"
                .Show = "rsling_swap_2_2_a"
                .Speed = 1
                .Loops = 5
                With .Tokens()
                    .Add "color1", "ff0000"
                    .Add "color2", "ff9900"
                    .Add "intensity", 50
                End With
            End With

            With .EventName("play_att_lsling_show2")
                .Key = "key_att_lsling_show2"
                .Show = "lsling_rotate1_cw"
                .Speed = 2
                .Loops = 4
                With .Tokens()
                    .Add "intensity", 80
                    .Add "color", "ffffff"
                End With
            End With
            With .EventName("play_att_rsling_show2")
                .Key = "key_att_rsling_show2"
                .Show = "rsling_rotate1_ccw"
                .Speed = 2
                .Loops = 4
                With .Tokens()
                    .Add "intensity", 80
                    .Add "color", "ffffff"
                End With
            End With

            With .EventName("play_att_lsling_show3")
                .Key = "key_att_lsling_show3"
                .Show = "lsling_rotate2_ccw"
                .Speed = 2
                .Loops = 4
                With .Tokens()
                    .Add "intensity", 80
                    .Add "color1", "00ffee"
                    .Add "color2", "eeff00"
                End With
            End With
            With .EventName("play_att_rsling_show3")
                .Key = "key_att_rsling_show3"
                .Show = "rsling_rotate2_cw"
                .Speed = 2
                .Loops = 4
                With .Tokens()
                    .Add "intensity", 80
                    .Add "color1", "00ffee"
                    .Add "color2", "aa00ff"
                End With
            End With

            With .EventName("play_att_lsling_show4")
                .Key = "key_att_lsling_show4"
                .Show = "lsling_rotate1_ccw"
                .Speed = 2
                .Loops = 4
                With .Tokens()
                    .Add "intensity", 80
                    .Add "color", "05ff05"
                End With
            End With
            With .EventName("play_att_rsling_show4")
                .Key = "key_att_rsling_show4"
                .Show = "rsling_rotate1_cw"
                .Speed = 2
                .Loops = 4
                With .Tokens()
                    .Add "intensity", 80
                    .Add "color", "05ff05"
                End With
            End With


            With .EventName("play_att_lsling_show5")
                .Key = "key_att_lsling_show5"
                .Show = "lsling_rotate1_cw_skip1"
                .Speed = 1
                .Loops = 3
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", ShieldsColor
                End With
            End With
            With .EventName("play_att_rsling_show5")
                .Key = "key_att_rsling_show5"
                .Show = "rsling_rotate1_cw_skip1"
                .Speed = 1
                .Loops = 3
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", ShieldsColor
                End With
            End With


            With .EventName("play_att_lsling_show6")
                .Key = "key_att_lsling_show6"
                .Show = "lsling_rotate2_ccw_skip1"
                .Speed = 1
                .Loops = 3
                With .Tokens()
                    .Add "intensity", 80
                    .Add "color1", HealthColor3
                    .Add "color2", HealthColor3
                End With
            End With
            With .EventName("play_att_rsling_show6")
                .Key = "key_att_rsling_show6"
                .Show = "rsling_rotate2_ccw_skip1"
                .Speed = 1
                .Loops = 3
                With .Tokens()
                    .Add "intensity", 80
                    .Add "color1", HealthColor3
                    .Add "color2", HealthColor3
                End With
            End With

            With .EventName("play_att_lsling_show7")
                .Key = "key_att_lsling_show7"
                .Show = "lsling_rotate1_ccw"
                .Speed = 2
                .Loops = 4
                With .Tokens()
                    .Add "intensity", 80
                    .Add "color", MoonColor
                End With
            End With
            With .EventName("play_att_rsling_show7")
                .Key = "key_att_rsling_show7"
                .Show = "rsling_rotate1_ccw"
                .Speed = 2
                .Loops = 4
                With .Tokens()
                    .Add "intensity", 80
                    .Add "color", MoonColor
                End With
            End With

            With .EventName("play_att_lsling_show8")
                .Key = "key_att_lsling_show8"
                .Show = "lsling_rotate4_ccw"
                .Speed = 1
                .Loops = 3
                With .Tokens()
                    .Add "intensity", 80
                    .Add "color1", MoonColor
                    .Add "color2", HealthColor1
                    .Add "color3", HealthColor3
                    .Add "color4", ShipSaveColor
                End With
            End With
            With .EventName("play_att_rsling_show8")
                .Key = "key_att_rsling_show8"
                .Show = "rsling_rotate4_cw"
                .Speed = 1
                .Loops = 3
                With .Tokens()
                    .Add "intensity", 80
                    .Add "color1", MoonColor
                    .Add "color2", HealthColor1
                    .Add "color3", HealthColor3
                    .Add "color4", ShipSaveColor
                End With
            End With

        End With


        With .SegmentDisplayPlayer()
            With .EventName("show_attract_title")
                With .Display("player2")
                    .Key = "key_top_show_attract_title"
                    .Text = """DARK """
                    .Expire = 5000
                    .Priority = 1
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "right"
                        .Text = ""
                    End With
                End With
                With .Display("player3")
                    .Key = "key_bot_show_attract_title"
                    .Text = """CHAOS   """
                    .Expire = 5000
                    .Priority = 1
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = ""
                    End With
                End With
            End With

            With .EventName("show_attract_hs1")
                With .Display("p1p2")
                    .Key = "key_score_1_label"
                    .Text = "machine.score_1_label"
                    .Expire = 3000
                    .Priority = 3
                End With
                With .Display("player3")
                    .Key = "key_score_1_name"
                    .Text = "machine.score_1_name & "" """
                    .Expire = 3000
                    .Priority = 3
                End With
                With .Display("player4")
                    .Key = "key_score_1_value"
                    .Text = "machine.score_1_value"
                    .Expire = 3000
                    .Priority = 3
                End With
            End With

            With .EventName("show_attract_hs2")
                With .Display("p1p2")
                    .Key = "key_score_2_label"
                    .Text = "machine.score_2_label"
                    .Expire = 3000
                    .Priority = 4
                End With
                With .Display("player3")
                    .Key = "key_score_2_name"
                    .Text = "machine.score_2_name & "" """
                    .Expire = 3000
                    .Priority = 4
                End With
                With .Display("player4")
                    .Key = "key_score_2_value"
                    .Text = "machine.score_2_value"
                    .Expire = 3000
                    .Priority = 4
                End With
            End With

            With .EventName("show_attract_hs3")
                With .Display("p1p2")
                    .Key = "key_score_3_label"
                    .Text = "machine.score_3_label"
                    .Expire = 3000
                    .Priority = 5
                End With
                With .Display("player3")
                    .Key = "key_score_3_name"
                    .Text = "machine.score_3_name & "" """
                    .Expire = 3000
                    .Priority = 5
                End With
                With .Display("player4")
                    .Key = "key_score_3_value"
                    .Text = "machine.score_3_value"
                    .Expire = 3000
                    .Priority = 5
                End With
            End With

            With .EventName("show_attract_hs4")
                With .Display("p1p2")
                    .Key = "key_score_4_label"
                    .Text = "machine.score_4_label"
                    .Expire = 3000
                    .Priority = 6
                End With
                With .Display("player3")
                    .Key = "key_score_4_name"
                    .Text = "machine.score_4_name & "" """
                    .Expire = 3000
                    .Priority = 6
                End With
                With .Display("player4")
                    .Key = "key_score_4_value"
                    .Text = "machine.score_4_value"
                    .Expire = 3000
                    .Priority = 6
                End With
            End With

            With .EventName("show_attract_lastscores1")
                With .Display("player2")
                    .Key = "key_p2_show_last_score"
                    .Text = """LAST """
                    .Expire = 2000
                    .Priority = 7
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "right"
                        .Text = ""
                    End With
                End With
                With .Display("player3")
                    .Key = "key_p3_show_last_score"
                    .Text = """SCORES """
                    .Expire = 2000
                    .Priority = 7
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = ""
                    End With
                End With
            End With

            With .EventName("show_attract_lastscores2")
                With .Display("player1")
                    .Text = "machine.player1_score"
                    .Expire = 3000
                End With
                With .Display("player2")
                    .Text = "machine.player2_score"
                    .Expire = 3000
                End With
                With .Display("player3")
                    .Text = "machine.player3_score"
                    .Expire = 3000
                End With
                With .Display("player4")
                    .Text = "machine.player4_score"
                    .Expire = 3000
                End With
            End With

            With .EventName("show_attract_credits1")
                With .Display("all")
                    .Key = "key_all_show_attract_credits1"
                    .Text = """"""
                    .Expire = 5000
                    .Priority = 9
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = "ORIGINAL TABLE BY"
                    End With
                End With
            End With

            With .EventName("show_attract_credits2")
                With .Display("player2")
                    .Key = "key_p2_show_attract_credits2"
                    .Text = """APOPHIS"""
                    .Expire = 8000
                    .Priority = 10
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "right"
                        .Text = ""
                    End With
                End With
            End With

            With .EventName("show_attract_credits3")
                With .Display("player3")
                    .Key = "key_p3_show_attract_credits3"
                    .Text = """FLUX  """
                    .Expire = 6000
                    .Priority = 10
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "right"
                        .Text = ""
                    End With
                End With
            End With

            With .EventName("show_attract_credits4")
                With .Display("player4")
                    .Key = "key_p4_show_attract_credits4"
                    .Text = """UNSAVORY"""
                    .Expire = 4000
                    .Priority = 10
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "right"
                        .Text = ""
                    End With
                End With
            End With


            With .EventName("show_attract_message1")
                With .Display("all")
                    .Key = "key_all_show_attract_message1"
                    .Text = """"""
                    .Expire = 9000
                    .Priority = 2
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = "DESTROY THE ASTEROID AND SAVE EARTH"
                    End With
                End With
            End With

            With .EventName("show_attract_message2")
                With .Display("all")
                    .Key = "key_all_show_attract_message2"
                    .Text = """"""
                    .Expire = 9000
                    .Priority = 2
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = "COLLECT POWER UPS TO SURVIVE METEOR WAVES"
                    End With
                End With
            End With

            With .EventName("show_attract_message3")
                With .Display("all")
                    .Key = "key_all_show_attract_message3"
                    .Text = """"""
                    .Expire = 9000
                    .Priority = 2
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = "CLUSTER BOMBS DESTROY NEARBY METEORS"
                    End With
                End With
            End With

            With .EventName("show_attract_message4")
                With .Display("all")
                    .Key = "key_all_show_attract_message4"
                    .Text = """"""
                    .Expire = 9000
                    .Priority = 2
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = "PROTON CANNON DESTROYS ONE RANDOM METEOR"
                    End With
                End With
            End With

            With .EventName("show_attract_message5")
                With .Display("all")
                    .Key = "key_all_show_attract_message5"
                    .Text = """"""
                    .Expire = 9000
                    .Priority = 2
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = "LAUNCH MOON MISSILES FOR INSTANT MULTIBALL"
                    End With
                End With
            End With

            With .EventName("show_attract_message6")
                With .Display("all")
                    .Key = "key_all_show_attract_message6"
                    .Text = """"""
                    .Expire = 9000
                    .Priority = 2
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = "COLLECT SHIELDS FOR AN OUTLANE BALL SAVE"
                    End With
                End With
            End With

            With .EventName("show_attract_message7")
                With .Display("all")
                    .Key = "key_all_show_attract_message7"
                    .Text = """"""
                    .Expire = 9000
                    .Priority = 2
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = "COLLECT SHIP SAVER TO INCREASE BALLSAVE TIME"
                    End With
                End With
            End With

            With .EventName("show_attract_message8")
                With .Display("all")
                    .Key = "key_all_show_attract_message8"
                    .Text = """"""
                    .Expire = 9000
                    .Priority = 2
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = "TIME WARP RAMP PAUSES COUNTDOWN FOR 10 SEC"
                    End With
                End With
            End With

            With .EventName("show_attract_message9")
                With .Display("all")
                    .Key = "key_all_show_attract_message9"
                    .Text = """"""
                    .Expire = 9000
                    .Priority = 2
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = "BUMPERS IMPROVE HEALTH METER"
                    End With
                End With
            End With

            With .EventName("show_attract_message10")
                With .Display("all")
                    .Key = "key_all_show_attract_message10"
                    .Text = """"""
                    .Expire = 9000
                    .Priority = 2
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = "COMPLETE TRAININGS TO EASILY COLLECT POWER UPS"
                    End With
                End With
            End With

            With .EventName("show_attract_message11")
                With .Display("all")
                    .Key = "key_all_show_attract_message11"
                    .Text = """"""
                    .Expire = 9000
                    .Priority = 2
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = "METEORS DO DAMAGE IF THEY MAKE IT THRU DEFENSES"
                    End With
                End With
            End With

            With .EventName("show_attract_message12")
                With .Display("all")
                    .Key = "key_all_show_attract_message12"
                    .Text = """"""
                    .Expire = 9000
                    .Priority = 2
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = "COLLECT 8 COMBOS TO START COMBO COMMAND WIZARD"
                    End With
                End With
            End With

            With .EventName("show_attract_message13")
                With .Display("all")
                    .Key = "key_all_show_attract_message13"
                    .Text = """"""
                    .Expire = 9000
                    .Priority = 2
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = "COLLECT ALL AMMO TO START FULLY LOADED WIZARD"
                    End With
                End With
            End With

            With .EventName("show_attract_message14")
                With .Display("all")
                    .Key = "key_all_show_attract_message14"
                    .Text = """"""
                    .Expire = 9000
                    .Priority = 2
                    With .Transition()
                        .TransitionType = "push"
                        .Direction = "left"
                        .Text = "SURVIVE ALL WAVES TO START FINAL WAVE WIZARD"
                    End With
                End With
            End With

        End With




    End With

End Sub



' Base Mode.
'
' Handles the following:
'   - starting/stopping wizard modes
'   - controls starting of other main modes
'   - main sequence shots
'   - delayed moon ball release
'   - scoop holds
'   - player score segment displays
'   - wave shot lights across all waves
'   - some sound effects and wave music
'   - some light shows
'   - some minor scoring



Sub CreateBaseMode()
    Dim x

    With CreateGlfMode("base", 200)
        .StartEvents = Array(GLF_BALL_STARTED)
        .StopEvents = Array(GLF_BALL_ENDED,"mode_bonus_started","tilt")

        With .EventPlayer()

            'new ball
            .Add "mode_base_started", Array("stop_attract_mode","knockdown_meteors","check_base_restart","run_asteroid_motor","backglass_dark_on","backglass_chaos_on","backglass_wave_off","check_plunger")
            .Add "mode_base_started{current_player.wizard_final_hit_count > 0}", Array("new_ball_started")  'start a new ball if not at end of the game.
            .Add "mode_base_started{current_player.number == 1}", Array("flash_player1_score","display34_ball_num")
            .Add "mode_base_started{current_player.number == 2}", Array("flash_player2_score","display34_ball_num")
            .Add "mode_base_started{current_player.number == 3}", Array("flash_player3_score","display12_ball_num")
            .Add "mode_base_started{current_player.number == 4}", Array("flash_player4_score","display12_ball_num")
            .Add "s_Plunger2_active{current_player.wizard_final_hit_count > 0 && current_player.ball_just_started==1}", Array("new_ball_active","remove_display34_ball_num","remove_display12_ball_num", _
                  "stop_flash_player1_score","stop_flash_player2_score","stop_flash_player3_score","stop_flash_player4_score")

            'stopping stuff
            .Add "mode_base_stopping", Array("training_music_stop")

            'wave ended
            .Add "mode_meteor_wave_stopped", Array("backglass_dark_on","backglass_chaos_on","backglass_wave_off")

            'restarting waves
            .Add "stop_training", Array("check_base_restart","training_music_stop")

            .Add "check_base_restart{current_player.nuke_acquired == 1 && current_player.nuke_used == 0}", Array("activate_nuke")

            .Add "check_base_restart{current_player.shot_meteor_wave1 == 0}", Array("meteor_wave0_restart")
            .Add "check_base_restart{current_player.shot_meteor_wave1 == 1}", Array("meteor_wave1_restart")
            .Add "check_base_restart{current_player.shot_meteor_wave2 == 1}", Array("meteor_wave2_restart")
            .Add "check_base_restart{current_player.shot_meteor_wave3 == 1}", Array("meteor_wave3_restart")
            .Add "check_base_restart{current_player.shot_meteor_wave4 == 1}", Array("meteor_wave4_restart")
            .Add "check_base_restart{current_player.shot_meteor_wave5 == 1}", Array("meteor_wave5_restart")
            .Add "check_base_restart{current_player.shot_meteor_wave6 == 1}", Array("meteor_wave6_restart")
            .Add "check_base_restart{current_player.shot_meteor_wave7 == 1}", Array("meteor_wave7_restart")
            .Add "check_base_restart{current_player.shot_meteor_wave8 == 1}", Array("meteor_wave8_restart")
            .Add "check_base_restart{current_player.shot_meteor_wave9 == 1}", Array("meteor_wave9_restart")

            .Add "check_base_restart{current_player.shot_meteor_wave1 == 2 && current_player.shot_meteor_wave2 == 0}", Array("meteor_wave2_restart")
            .Add "check_base_restart{current_player.shot_meteor_wave2 == 2 && current_player.shot_meteor_wave3 == 0}", Array("meteor_wave3_restart")
            .Add "check_base_restart{current_player.shot_meteor_wave3 == 2 && current_player.shot_meteor_wave4 == 0}", Array("meteor_wave4_restart")
            .Add "check_base_restart{current_player.shot_meteor_wave4 == 2 && current_player.shot_meteor_wave5 == 0}", Array("meteor_wave5_restart")
            .Add "check_base_restart{current_player.shot_meteor_wave5 == 2 && current_player.shot_meteor_wave6 == 0}", Array("meteor_wave6_restart")
            .Add "check_base_restart{current_player.shot_meteor_wave6 == 2 && current_player.shot_meteor_wave7 == 0}", Array("meteor_wave7_restart")
            .Add "check_base_restart{current_player.shot_meteor_wave7 == 2 && current_player.shot_meteor_wave8 == 0}", Array("meteor_wave8_restart")
            .Add "check_base_restart{current_player.shot_meteor_wave8 == 2 && current_player.shot_meteor_wave9 == 0}", Array("meteor_wave9_restart")

            'wizard modes
            '   handle case when starting new ball
            .Add "mode_base_started{current_player.shot_final_wave_wizard == 2 && current_player.victory == 0}", Array("run_final_wave_wizard","wizard_mode_started")
            .Add "mode_base_started{current_player.shot_final_wave_wizard == 1 && current_player.victory == 0}", Array("activate_final_wave_wizard")
            .Add "mode_base_started{current_player.shot_combo_command_wizard == 1 && current_player.victory == 0}", Array("activate_combo_command_wizard")
            .Add "mode_base_started{current_player.shot_fully_loaded_wizard == 1 && current_player.victory == 0}", Array("activate_fully_loaded_wizard")
            'restart victory lap if needed (player had more balls after beating the game)
            .Add "mode_base_started{current_player.victory == 1}", Array("restart_victory")
            '   check if fully loaded is ready
            .Add "check_fully_loaded{current_player.shot_fully_loaded_wizard == 0 && current_player.shot_cluster_bomb2 == 1 && current_player.shot_proton_round6 == 1 &&  current_player.shot_moon_missile2 == 1}", Array("prime_fully_loaded_wizard")
            .Add "prime_fully_loaded_wizard{current_player.meteor_wave_running == 0}", Array("activate_fully_loaded_wizard")
            '   handle case when starting and finishing a meteor wave
            .Add "start_meteor_wave", Array("disable_scoop_hold","stop_ccwiz_scoop_show","stop_flwiz_scoop_show")
            .Add "stop_meteor_wave{current_player.shot_final_wave_wizard == 1}", Array("activate_final_wave_wizard")
            .Add "stop_meteor_wave{current_player.shot_combo_command_wizard == 1}", Array("activate_combo_command_wizard")
            .Add "stop_meteor_wave{current_player.shot_fully_loaded_wizard == 1}", Array("activate_fully_loaded_wizard")
            '    wizard mode phase 1 qualifed. Ready the scoop
            .Add "activate_final_wave_wizard", Array("wizard_mode_ready","run_fwwiz_scoop_show","run_asteroid_spotlight_show","wizard_mode_started")
            .Add "activate_combo_command_wizard", Array("wizard_mode_ready","run_ccwiz_scoop_show")
            .Add "activate_fully_loaded_wizard", Array("wizard_mode_ready","run_flwiz_scoop_show")
            .Add "wizard_mode_ready", Array("enable_scoop_hold")
            '    handle multiple scoop shows
            .Add "run_fwwiz_scoop_show", Array("stop_flwiz_scoop_show","stop_ccwiz_scoop_show")
            .Add "run_ccwiz_scoop_show", Array("stop_flwiz_scoop_show")
            .Add "run_ccwiz_scoop_show{current_player.shot_final_wave_wizard == 1}", Array("stop_ccwiz_scoop_show")
            .Add "run_flwiz_scoop_show{current_player.shot_combo_command_wizard == 1 or current_player.shot_final_wave_wizard == 1}", Array("stop_flwiz_scoop_show")
            '    run the wizard mode when qualified and ball enters the scoop. If more than one wizard is qualified, final wizard is top priority, then combo command, then fully loaded.
            .Add "balldevice_scoop_ball_entered{current_player.wizard_mode_is_ready == 1 && current_player.shot_final_wave_wizard == 1 && current_player.meteor_wave_running == 0}", Array("run_final_wave_wizard","wizard_mode_started","stop_fwwiz_scoop_show","stop_asteroid_spotlight_show","clear_wizard_mode_ready")
            .Add "balldevice_scoop_ball_entered{current_player.wizard_mode_is_ready == 1 && current_player.shot_combo_command_wizard == 1 && current_player.shot_final_wave_wizard != 1 && current_player.meteor_wave_running == 0}", Array("run_combo_command_wizard","wizard_mode_started","stop_ccwiz_scoop_show","clear_wizard_mode_ready")
            .Add "balldevice_scoop_ball_entered{current_player.wizard_mode_is_ready == 1 && current_player.shot_fully_loaded_wizard == 1  && current_player.shot_combo_command_wizard != 1 && current_player.shot_final_wave_wizard != 1 && current_player.meteor_wave_running == 0}", Array("run_fully_loaded_wizard","wizard_mode_started","stop_flwiz_scoop_show","clear_wizard_mode_ready")
            '    clean up wizard mode
            .Add "completed_final_wave_wizard", Array("wizard_mode_ended")
            .Add "completed_combo_command_wizard", Array("wizard_mode_ended","check_base_restart")
            .Add "completed_fully_loaded_wizard", Array("wizard_mode_ended","check_base_restart")

            'handle some sound effects, music, and points
            .Add "center_orbit_left_hit", Array("play_sfx_Orb","score_2000")
            .Add "center_orbit_right_hit", Array("play_sfx_Orb","score_2000")
            .Add "left_side_hit", Array("play_sfx_Orb","score_2000")
            .Add "s_Bumper1_active", Array("play_sfx_bumper","score_1300")
            .Add "s_Bumper2_active", Array("play_sfx_bumper","score_1300")
            .Add "s_Bumper3_active", Array("play_sfx_bumper","score_1300")
            .Add "s_TopSlingshot_active", Array("play_sfx_bumper","score_1300")
            .Add "s_spinner_active", Array("score_930")
            .Add "meteor_wave_music_stop", Array("meteor_wave0_music_stop","meteor_wave1_music_stop","meteor_wave2_music_stop","meteor_wave3_music_stop","meteor_wave4_music_stop","meteor_wave5_music_stop","meteor_wave6_music_stop","meteor_wave7_music_stop","meteor_wave8_music_stop","meteor_wave9_music_stop")

            'handle some switches
            .Add "s_TargetMystery5_active", Array("magnet_activated_flash","magnet_activated_gi")
            .Add "s_TimewarpRamp_active", Array("left_ramp_hit")
            .Add "s_MoonRamp_active", Array("right_ramp_hit")
            .Add "s_LeftBumper1_active", Array("left_side_hit")

            'knock'em all down
            .Add "knockdown_meteors", Array("meteor1_knockdown","meteor2_knockdown","meteor3_knockdown","meteor4_knockdown")

            'handle delayed moon ball release
            .Add "balldevice_moon_lock_ball_enter{current_player.shot_final_wave_wizard == 1}", Array("delayed_release_moon_ball")
            .Add "timer_delay_ball_release_complete", Array("release_moon_ball")
            .Add "s_LockOut_active", Array("raise_lock_pin")

            'handle some shows
            .Add "s_LeftSlingshot_active", Array("play_lsling_base_show","score_1000")
            .Add "s_RightSlingshot_active", Array("play_rsling_base_show","score_1000")
            .Add "slings_powerup_added", Array("pu_lsling1_show","pu_lsling2_show","pu_rsling1_show","pu_rsling2_show")
            .Add "balldevice_scoop_ball_exiting", Array("scoop_blast")

            'handle ball stuck in plunger fail
            .Add "check_plunger{current_player.ball_just_started==0}", Array("restart_plunger_check")
            .Add "timer_plunger_check_complete", Array("plunger_eject")

        End With



        With .RandomEventPlayer()
            With .EventName("play_sfx_Orb")
                .Add "play_sfx_Orb1", 1
                .Add "play_sfx_Orb2", 1
                .Add "play_sfx_Orb3", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
            With .EventName("play_sfx_bumper")
                .Add "play_sfx_bumper1", 1
                .Add "play_sfx_bumper2", 1
                .Add "play_sfx_bumper3", 1
                .Add "play_sfx_bumper4", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
            With .EventName("ball_launch_hit")
                .Add "play_sfx_ball_launch1", 1
                .Add "play_sfx_ball_launch2", 1
                .Add "play_sfx_ball_launch3", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
        End With


        With .ComboSwitches("flipper_cancel")
            .Switch1 = "s_left_flipper"
            .Switch2 = "s_start"
            .HoldTime = 5000
            .EventsWhenBoth = Array("glf_game_cancel")
        End With


        With .DOFPlayer()
            With .EventName("ball_launch_hit")
                .Action = "DOF_PULSE"
                .DOFEvent = 131
            End With
            With .EventName("mode_base_stopping")
                .Action = "DOF_PULSE"
                .DOFEvent = 132
            End With
            With .EventName("new_ball_started")
                .Action = "DOF_ON"
                .DOFEvent = 133
            End With
            With .EventName("new_ball_active")
                .Action = "DOF_OFF"
                .DOFEvent = 133
            End With
        End WIth



        With .SegmentDisplayPlayer()
            With .EventName("mode_base_started")
                With .Display("player1")
                    .Text = "{players[0].score:0>2,}"
                End With
            End With
            With .EventName("mode_base_started")
                With .Display("player2")
                    .Text = "{players[1].score:0>2,}"
                End With
            End With
            With .EventName("mode_base_started")
                With .Display("player3")
                    .Text = "{players[2].score:0>2,}"
                End With
            End With
            With .EventName("mode_base_started")
                With .Display("player4")
                    .Text = "{players[3].score:0>2,}"
                End With
            End With
            With .EventName("mode_base_started")
                With .Display("ball")
                    .Text = "{current_player.ball:0>2}"
                End With
            End With
            With .EventName("player_added{kwargs.num==2}")
                With .Display("player2")
                    .Text = "{players[1].score:0>2,}"
                End With
            End With
            With .EventName("player_added{kwargs.num==3}")
                With .Display("player3")
                    .Text = "{players[2].score:0>2,}"
                End With
            End With
            With .EventName("player_added{kwargs.num==4}")
                With .Display("player4")
                    .Text = "{players[3].score:0>2,}"
                End With
            End With

            With .EventName("flash_player1_score")
                With .Display("player1")
                    .key = "p1_score_flash"
                    .Text = "{players[0].score:0>2}"
                    .Flashing = "all"
                    .Priority = 100
                End With
            End With
            With .EventName("stop_flash_player1_score")
                With .Display("player1")
                    .key = "p1_score_flash"
                    .Action = "remove"
                End With
            End With
            With .EventName("flash_player2_score")
                With .Display("player2")
                    .key = "p2_score_flash"
                    .Text = "{players[1].score:0>2}"
                    .Flashing = "all"
                    .Priority = 100
                End With
            End With
            With .EventName("stop_flash_player2_score")
                With .Display("player2")
                    .key = "p2_score_flash"
                    .Action = "remove"
                End With
            End With
            With .EventName("flash_player3_score")
                With .Display("player3")
                    .key = "p3_score_flash"
                    .Text = "{players[2].score:0>2}"
                    .Flashing = "all"
                    .Priority = 100
                End With
            End With
            With .EventName("stop_flash_player3_score")
                With .Display("player3")
                    .key = "p3_score_flash"
                    .Action = "remove"
                End With
            End With
            With .EventName("flash_player4_score")
                With .Display("player4")
                    .key = "p4_score_flash"
                    .Text = "{players[3].score:0>2}"
                    .Flashing = "all"
                    .Priority = 100
                End With
            End With
            With .EventName("stop_flash_player4_score")
                With .Display("player4")
                    .key = "p4_score_flash"
                    .Action = "remove"
                End With
            End With



            With .EventName("display34_ball_num")
                With .Display("player3")
                    .key = "p3_ball_num"
                    .Text = """BALL"""
                    .Priority = 10000
                End With
                With .Display("player4")
                    .key = "p4_ball_num"
                    .Text = "{current_player.ball:0>2}"
                    .Priority = 10000
                End With
            End With
            With .EventName("remove_display34_ball_num")
                With .Display("player3")
                    .key = "p3_ball_num"
                    .Action = "remove"
                End With
                With .Display("player4")
                    .key = "p4_ball_num"
                    .Action = "remove"
                End With
            End With

            With .EventName("display12_ball_num")
                With .Display("player1")
                    .key = "p1_ball_num"
                    .Text = """BALL"""
                    .Priority = 10000
                End With
                With .Display("player2")
                    .key = "p2_ball_num"
                    .Text = "{current_player.ball:0>2}"
                    .Priority = 10000
                End With
            End With
            With .EventName("remove_display12_ball_num")
                With .Display("player1")
                    .key = "p1_ball_num"
                    .Action = "remove"
                End With
                With .Display("player2")
                    .key = "p2_ball_num"
                    .Action = "remove"
                End With
            End With
        End With

        With .LightPlayer()
            With .EventName("mode_base_started")
                With .Lights("GI")
                    .Color = GIColor3000k
                    .Fade = 200
                End With
            End With
            With .EventName("activate_final_wave_wizard")
                With .Lights("GI")
                    '.Priority = 100
                    .Color = "000000"
                End With
            End With
            With .EventName("turn_off_gi")
                With .Lights("GI")
                    '.Priority = 100
                    .Color = "000000"
                End With
            End With
        End With

        'Wizard mode lights
        With .Shots("combo_command_wizard")
            .Profile = "wizard_ready1"
            With .Tokens()
                .Add "lights", "LCWiz"
                .Add "color", CombosColor
            End With
            With .ControlEvents()
                .Events = Array("activate_combo_command_wizard")
                .State = 1
            End With
            With .ControlEvents()
                .Events = Array("run_combo_command_wizard")
                .State = 2
            End With
            .RestartEvents = Array(GLF_GAME_START,"run_final_wave_wizard")
        End With

        With .Shots("fully_loaded_wizard")
            .Profile = "wizard_ready1"
            With .Tokens()
                .Add "lights", "LLWiz"
                .Add "color", CombosColor
            End With
            With .ControlEvents()
                .Events = Array("prime_fully_loaded_wizard")
                .State = 1
            End With
            With .ControlEvents()
                .Events = Array("run_fully_loaded_wizard")
                .State = 2
            End With
            .RestartEvents = Array(GLF_GAME_START,"run_final_wave_wizard")
        End With

        With .Shots("final_wave_wizard")
            .Profile = "wizard_ready1"
            With .Tokens()
                .Add "lights", "LWiz"
                .Add "color", MeteorWaveColor
            End With
            With .ControlEvents()
                .Events = Array("activate_final_wave_wizard")
                .State = 1
            End With
            With .ControlEvents()
                .Events = Array("run_final_wave_wizard")
                .State = 2
            End With
            .RestartEvents = Array(GLF_GAME_START)
        End With



        'Define meteor wave lights
        For x = 1 to 9
            With .Shots("meteor_wave"&x)
                .Profile = "powerups"
                With .Tokens()
                    .Add "lights", "LW"&x
                    .Add "color", MeteorWaveColor
                End With
                With .ControlEvents()
                    .Events = Array("meteor_wave"&x&"_running")
                    .State = 1
                End With
                With .ControlEvents()
                    .Events = Array("meteor_wave"&x&"_done")
                    .State = 2
                End With
                .RestartEvents = Array(GLF_GAME_START,"meteor_wave"&x&"_restart")
            End With
        Next


        'The main shots sequences
        With .SequenceShots("left_orbit")
            .SwitchSequence = Array("s_LeftOrb1", "s_LeftOrb2")
            .SequenceTimeout = 500
        End With

        With .SequenceShots("inner_orbit")
            .SwitchSequence = Array("s_InnerOrb1", "s_InnerOrb2")
            .SequenceTimeout = 300
        End With

        With .SequenceShots("center_orbit_left")
            .SwitchSequence = Array("s_CenterOrb1", "s_CenterOrb2", "s_CenterOrb3")
            .SequenceTimeout = 600
        End With

        With .SequenceShots("center_orbit_right")
            .SwitchSequence = Array("s_CenterOrb3", "s_CenterOrb2", "s_CenterOrb1")
            .SequenceTimeout = 600
        End With

        With .SequenceShots("right_orbit")
            .SwitchSequence = Array("s_RightOrb1", "s_RightOrb2")
            .SequenceTimeout = 500
        End With

        With .SequenceShots("ball_launch")
            .EventSequence = Array("s_Plunger1_inactive", "s_Plunger2_inactive")
            .SequenceTimeout = 300
        End With



        With .ShowPlayer()
            For x = 0 to 2
                With .EventName(RolloverSwitches(x)&"_active")
                    .Key = "key_rollover"&x&"_flash"
                    .Show = "flash_color"
                    .Speed = 20
                    .Loops = 4
                    .Priority = 1000
                    With .Tokens()
                        .Add "lights", RolloverLightNames(x)
                        .Add "color", "ffffff"
                    End With
                End With
            Next

            With .EventName("magnet_activated_flash")
                .Key = "key_ts_mag_flash"
                .Show = "flash_color_with_fade"
                .Speed = 20
                .Loops = 7
                .Priority = 100
                With .Tokens()
                    .Add "lights", "FL1"
                    .Add "color", "aaaaaa"
                    .Add "fade", 200
                End With
            End With


            With .EventName("balldevice_scoop_ball_exiting")
                .Key = "key_ts_scoop_gi"
                .Show = "flash_color" '_with_fade"
                .Speed = 15
                .Loops = 7
                .Priority = 1000
                With .Tokens()
                    .Add "lights", "gi22"
                    .Add "color", GIColor3000k
                    '.Add "fade", 300
                End With
            End With

            ' slings
            With .EventName("play_lsling_base_show")
                .Key = "key_lsling_base_show"
                .Show = "lsling_base_show"
                .Speed = 1
                .Loops = 1
                .Priority = 10000
            End With
            With .EventName("play_rsling_base_show")
                .Key = "key_rsling_base_show"
                .Show = "rsling_base_show"
                .Speed = 1
                .Loops = 1
                .Priority = 10000
            End With

            ' Combo command wizard scoop lights
            With .EventName("run_ccwiz_scoop_show")
                .Key = "key_combo_command_scoop"
                .Show = "combo_command_scoop"
                .Speed = 1
                .Priority = 2000
                With .Tokens()
                    .Add "intensity1", 20
                    .Add "intensity2", 100
                    .Add "color", CombosColor
                End With
            End With
            With .EventName("stop_ccwiz_scoop_show")
                .Key = "key_combo_command_scoop"
                .Show = "combo_command_scoop"
                .Action= "stop"
                .Priority = 2000
                With .Tokens()
                    .Add "intensity1", 20
                    .Add "intensity2", 100
                    .Add "color", CombosColor
                End With
            End With
            With .EventName("scoop_blast")
                .Key = "key_scoop_fire_blast"
                .Show = "insert_gi_slide_diag"
                .Speed = 2.5
                .Loops = 1
                .Priority = 2000
                With .Tokens()
                    .Add "color", MeteorHotColor
                    .Add "intensity", 100
                End With
            End With


            ' Fully loaded wizard scoop lights
            With .EventName("run_flwiz_scoop_show")
                .Key = "key_fully_loaded_scoop"
                .Show = "fully_loaded_scoop"
                .Speed = 1
                .Priority = 1000
                With .Tokens()
                    .Add "intensity1", 20
                    .Add "intensity2", 100
                End With
            End With
            With .EventName("stop_flwiz_scoop_show")
                .Key = "key_fully_loaded_scoop"
                .Show = "fully_loaded_scoop"
                .Action= "stop"
                .Priority = 1000
                With .Tokens()
                    .Add "intensity1", 20
                    .Add "intensity2", 100
                End With
            End With

            ' Final wave wizard scoop lights
            With .EventName("run_fwwiz_scoop_show")
                .Key = "key_final_wave_scoop"
                .Show = "combo_command_scoop"
                .Speed = 1
                .Priority = 3000
                With .Tokens()
                    .Add "intensity1", 20
                    .Add "intensity2", 100
                    .Add "color", MeteorWaveColor
                End With
            End With
            With .EventName("stop_fwwiz_scoop_show")
                .Key = "key_final_wave_scoop"
                .Show = "combo_command_scoop"
                .Action= "stop"
                .Priority = 3000
                With .Tokens()
                    .Add "intensity1", 20
                    .Add "intensity2", 100
                    .Add "color", MeteorWaveColor
                End With
            End With

            With .EventName("run_asteroid_spotlight_show")
                .Key = "key_asteroid_spotlight"
                .Show = "flash_color_with_fade"
                .Speed = 1
                .Priority = 3000
                With .Tokens()
                    .Add "lights", "LSpot1"
                    .Add "color", "ffffff"
                    .Add "fade", 700
                End With
            End With
            With .EventName("stop_asteroid_spotlight_show")
                .Key = "key_asteroid_spotlight"
                .Show = "flash_color_with_fade"
                .Speed = 1
                .Priority = 3000
                .Action= "stop"
                With .Tokens()
                    .Add "lights", "LSpot1"
                    .Add "color", "ffffff"
                    .Add "fade", 700
                End With
            End With

            ' Sling power up show
            With .EventName("pu_lsling1_show")
                .Key = "key_pc_lsling1_show"
                .Show = "flash_color_with_fade"
                .Speed = 9
                .Loops = 9
                With .Tokens()
                    .Add "lights", "gi04"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With
            With .EventName("pu_lsling2_show")
                .Key = "key_pc_lsling2_show"
                .Show = "flash_color_with_fade"
                .Speed = 4
                .Loops = 4
                With .Tokens()
                    .Add "lights", "gi03"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With
            With .EventName("pu_rsling1_show")
                .Key = "key_pu_rsling1_show"
                .Show = "flash_color_with_fade"
                .Speed = 9
                .Loops = 9
                With .Tokens()
                    .Add "lights", "gi08"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With
            With .EventName("pu_rsling2_show")
                .Key = "key_pu_rsling2_show"
                .Show = "flash_color_with_fade"
                .Speed = 4
                .Loops = 4
                With .Tokens()
                    .Add "lights", "gi07"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With

            With .EventName("timer_meteor_countdown_tick{devices.timers.meteor_countdown.ticks == 3}")
                .Key = "key_gi_cracked"
                .Show = "gi_cracked"
                .Priority = 200
                .Speed = 1.3
                .Loops = 1
            End With

            With .EventName("activate_combo_command_wizard")
                .Key = "key_combo_wiz_ready"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 4
                With .Tokens()
                    .Add "lights", "tFlasherU"
                    .Add "color", CombosColor
                End With
            End With

            With .EventName("activate_fully_loaded_wizard")
                .Key = "key_loaded_wiz_ready"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 4
                With .Tokens()
                    .Add "lights", "tFlasherU"
                    .Add "color", ProtonColor
                End With
            End With

        End With

        With .DOFPlayer()
            With .EventName("activate_combo_command_wizard")
                .Action = "DOF_PULSE"
                .DOFEvent = 120
            End With
            With .EventName("activate_fully_loaded_wizard")
                .Action = "DOF_PULSE"
                .DOFEvent = 125
            End With
            With .EventName("activate_final_wave_wizard")
                .Action = "DOF_PULSE"
                .DOFEvent = 121
            End With
        End With


        With .BallSaves("new_ball")
            .ActiveTime = 6000
            .HurryUpTime = 3000
            .GracePeriod = 2000
            .BallsToSave = -1
            .AutoLaunch = True
            .EnableEvents = Array("new_ball_active")
        End With

        With .BallSaves("wave_coming")
            .ActiveTime = 1500
            .HurryUpTime = 0
            .GracePeriod = 500
            .AutoLaunch = True
            .EnableEvents = Array("timer_meteor_countdown_tick{devices.timers.meteor_countdown.ticks == 1}")
        End With

        'Scoop ball hold
        With .BallHolds("scoop_hold")
            '.Debug = True
            .BallsToHold = 1
            .HoldDevices = Array("scoop")
            .EnableEvents = Array("enable_scoop_hold")
            .DisableEvents = Array("disable_scoop_hold")
            .ReleaseAllEvents = Array("release_scoop_hold")
        End With


        With .Shots("base_shoot_again")
            .Profile = "shoot_again"
            With .Tokens()
                .Add "color", ShipSaveColor
            End With
            With .ControlEvents()
                .Events = Array("ball_save_new_ball_enabled")
                .State = 1
            End With
            With .ControlEvents()
                .Events = Array("ball_save_new_ball_hurry_up")
                .State = 2
            End With
            .RestartEvents = Array("ball_save_new_ball_grace_period")
        End With


        With .VariablePlayer()
        With .EventName("mode_base_started")
        With .Variable("ball_just_started")
                    .Action = "set"
          .Int = 1
        End With
                With .Variable("num_waves_completed_this_ball")
                    .Action = "set"
                    .Int = 0
                End With
                With .Variable("flippers_are_dead")
                    .Action = "set"
                    .Int = 0
                End With
      End With
            With .EventName("new_ball_active")
        With .Variable("ball_just_started")
                    .Action = "set"
          .Int = 0
        End With
      End With
            'wizard_mode_is_ready
            With .EventName("wizard_mode_ready")
        With .Variable("wizard_mode_is_ready")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName("clear_wizard_mode_ready")
        With .Variable("wizard_mode_is_ready")
                    .Action = "set"
          .Int = 0
        End With
      End With
    End With




        With .Timers("delay_ball_release")
            .TickInterval = 1000
            .StartValue = 0
            .EndValue = 1
            With .ControlEvents()
                .EventName = "delayed_release_moon_ball"
                .Action = "restart"
            End With
        End With

        With .Timers("plunger_check")
            .TickInterval = 1000
            .StartValue = 0
            .EndValue = 5
            .StartRunning = False
            With .ControlEvents()
                .EventName = "restart_plunger_check"
                .Action = "restart"
            End With
            With .ControlEvents()
                .EventName = "s_Plunger1_inactive"
                .Action = "stop"
            End With
        End With


        With .SoundPlayer()
            'Music pre meteor wave 1
            With .EventName("meteor_wave0_restart")
                .Key = "key_mus_wave0"
                .Sound = "mus_wave0"
            End With
            With .EventName("meteor_wave0_music_stop")
                .Key = "key_mus_wave0"
                .Sound = "mus_wave0"
                .Action = "stop"
            End With


            'Music meteor waves
            For x = 1 to 9
                With .EventName("meteor_wave"&x&"_running")
                    .Key = "key_mus_wave"&x
                    .Sound = "mus_wave"&x
                End With
                With .EventName("meteor_wave"&x&"_restart")
                    .Key = "key_mus_wave"&(x-1)
                    .Sound = "mus_wave"&(x-1)
                End With
                With .EventName("meteor_wave"&x&"_music_stop")
                    .Key = "key_mus_wave"&x
                    .Sound = "mus_wave"&x
                    .Action = "stop"
                End With
            Next

            With .EventName("play_voc_wave_completed")
                .Key = "key_voc_wave_completed"
                .Sound = "voc_wave_completed"
            End With

            'Training
            For x = 1 to 5
                With .EventName("training_music_"&x&"_start")
                    .Key = "key_mus_training_"&x
                    .Sound = "mus_training_"&x
                End With
                With .EventName("training_music_"&x&"_stop")
                    .Key = "key_mus_training_"&x
                    .Sound = "mus_training_"&x
                    .Action = "stop"
                End With
            Next

            With .EventName("play_voc_training_canceled")
                .Key = "key_voc_training_canceled"
                .Sound = "voc_training_canceled"
            End With
            With .EventName("play_voc_training_incomplete")
                .Key = "key_voc_training_incomplete"
                .Sound = "voc_training_incomplete"
            End With


            'Wizard music
            With .EventName("fwwiz_music_start")
                .Key = "key_mus_wizard"
                .Sound = "mus_wizard"
            End With
            With .EventName("fwwiz_music_stop")
                .Key = "key_mus_wizard"
                .Sound = "mus_wizard"
                .Action = "stop"
            End With
            With .EventName("flwiz_music_start")
                .Key = "key_mus_wizard"
                .Sound = "mus_wizard2"
            End With
            With .EventName("flwiz_music_stop")
                .Key = "key_mus_wizard2"
                .Sound = "mus_wizard2"
                .Action = "stop"
            End With
            With .EventName("ccwiz_music_start")
                .Key = "key_mus_wizard2"
                .Sound = "mus_wizard2"
            End With
            With .EventName("ccwiz_music_stop")
                .Key = "key_mus_wizard2"
                .Sound = "mus_wizard2"
                .Action = "stop"
            End With


            'Ball launch
            With .EventName("play_sfx_ball_launch1")
                .Key = "key_sfx_ball_launch1"
                .Sound = "sfx_ball_launch1"
            End With
            With .EventName("play_sfx_ball_launch2")
                .Key = "key_sfx_ball_launch2"
                .Sound = "sfx_ball_launch2"
            End With
            With .EventName("play_sfx_ball_launch3")
                .Key = "key_sfx_ball_launch3"
                .Sound = "sfx_ball_launch3"
            End With


            ' Scoop launch
            With .EventName("balldevice_scoop_ball_exiting")
                .Key = "key_sfx_scoop"
                .Sound = "sfx_scoop"
            End With

            ' Spinner
            With .EventName("s_spinner_active")
                .Key = "key_sfx_Spinner"
                .Sound = "sfx_Spinner"
            End With

            'Slings
            With .EventName("s_LeftSlingshot_active")
                .Key = "key_sfx_left_sling"
                .Sound = "sfx_left_sling"
            End With
            With .EventName("s_RightSlingshot_active")
                .Key = "key_sfx_right_sling"
                .Sound = "sfx_right_sling"
            End With

            'Bumpers
            With .EventName("play_sfx_bumper1")
                .Key = "key_sfx_bumper1"
                .Sound = "sfx_bumper1"
            End With
            With .EventName("play_sfx_bumper2")
                .Key = "key_sfx_bumper2"
                .Sound = "sfx_bumper2"
            End With
            With .EventName("play_sfx_bumper3")
                .Key = "key_sfx_bumper3"
                .Sound = "sfx_bumper3"
            End With
            With .EventName("play_sfx_bumper4")
                .Key = "key_sfx_bumper4"
                .Sound = "sfx_bumper4"
            End With

            'Lanes
            With .EventName("s_LeftOutlane_active")
                .Sound = "sfx_LLO"
            End With
            With .EventName("s_LeftInlane_active")
                .Sound = "sfx_LLI"
            End With
            With .EventName("s_RightInlane_active")
                .Sound = "sfx_LRI"
            End With
            With .EventName("s_RightOutlane_active")
                .Sound = "sfx_LRO"
            End With

            'center orbit
            With .EventName("play_sfx_Orb1")
                .Sound = "sfx_Orb1"
            End With
            With .EventName("play_sfx_Orb2")
                .Sound = "sfx_Orb2"
            End With
            With .EventName("play_sfx_Orb3")
                .Sound = "sfx_Orb3"
            End With

            'Other
            With .EventName("magnet_activated_gi")
                .Sound = "sfx_mag_cap"
            End With

            'training shots
            With .EventName("play_sfx_LS1")
                .Sound = "sfx_LS1"
            End With
            With .EventName("play_sfx_LS2")
                .Sound = "sfx_LS2"
            End With
            With .EventName("play_sfx_LS3")
                .Sound = "sfx_LS3"
            End With
            With .EventName("play_sfx_LS4")
                .Sound = "sfx_LS4"
            End With
            With .EventName("play_sfx_LS5")
                .Sound = "sfx_LS5"
            End With
            With .EventName("play_sfx_LS6")
                .Sound = "sfx_LS6"
            End With

            'Meteor wave sounds (needed here so they dont stop when meteor wave mode stops)
            With .EventName("play_sfx_LMet1")
                .Key = "key_sfx_LMet1"
                .Sound = "sfx_LMet1"
            End With
            With .EventName("play_sfx_LMet2")
                .Key = "key_sfx_LMet2"
                .Sound = "sfx_LMet2"
            End With
            With .EventName("play_sfx_LMet3")
                .Key = "key_sfx_LMet3"
                .Sound = "sfx_LMet3"
            End With
            With .EventName("play_sfx_LMet4")
                .Key = "key_sfx_LMet4"
                .Sound = "sfx_LMet4"
            End With
            With .EventName("play_sfx_LMet5")
                .Key = "key_sfx_LMet5"
                .Sound = "sfx_LMet5"
            End With
            With .EventName("play_sfx_LMet6")
                .Key = "key_sfx_LMet6"
                .Sound = "sfx_LMet6"
            End With
            With .EventName("play_sfx_LMet7")
                .Key = "key_sfx_LMet7"
                .Sound = "sfx_LMet7"
            End With
            With .EventName("play_sfx_LMet8")
                .Key = "key_sfx_LMet8"
                .Sound = "sfx_LMet8"
            End With

            'Earth hits
            With .EventName("play_sfx_EarthHit1")
                .Key = "key_sfx_EarthHit1"
                .Sound = "sfx_EarthHit1"
            End With
            With .EventName("play_sfx_EarthHit2")
                .Key = "key_sfx_EarthHit2"
                .Sound = "sfx_EarthHit2"
            End With
            With .EventName("play_sfx_EarthHit3")
                .Key = "key_sfx_EarthHit3"
                .Sound = "sfx_EarthHit3"
            End With

            'Nuke
            With .EventName("play_voc_nuke")
                .Key = "key_voc_nuke"
                .Sound = "voc_nuke"
            End With
            With .EventName("detonate_nuke")
                .Key = "key_sfx_nuke"
                .Sound = "sfx_nuke"
            End With

            'Health low
            With .EventName("play_voc_critically_low_health")
                .Key = "key_voc_critically_low_health"
                .Sound = "voc_critically_low_health"
            End With

            With .EventName("play_voc_imminent_shutdown")
                .Key = "key_voc_imminent_shutdown"
                .Sound = "voc_imminent_shutdown"
            End With

            'Proton fire
            With .EventName("play_sfx_LPF1")
                .Key = "key_sfx_LPF1"
                .Sound = "sfx_LPF1"
            End With
            With .EventName("play_sfx_LPF2")
                .Key = "key_sfx_LPF2"
                .Sound = "sfx_LPF2"
            End With
            With .EventName("play_sfx_LPF3")
                .Key = "key_sfx_LPF3"
                .Sound = "sfx_LPF3"
            End With
            With .EventName("play_sfx_LPF4")
                .Key = "key_sfx_LPF4"
                .Sound = "sfx_LPF4"
            End With
            With .EventName("play_sfx_LPF5")
                .Key = "key_sfx_LPF5"
                .Sound = "sfx_LPF5"
            End With

            'jackpots
            With .EventName("play_sfx_jackpot")
                .Key = "key_sfx_jackpot"
                .Sound = "sfx_jackpot"
            End With
            With .EventName("play_sfx_super_jackpot")
                .Key = "key_sfx_super_jackpot"
                .Sound = "sfx_super_jackpot"
            End With


            With .EventName("activate_combo_command_wizard")
                .Key = "key_voc_LCWiz"
                .Sound = "voc_LCWiz"
            End With
            With .EventName("activate_fully_loaded_wizard")
                .Key = "key_voc_LLWiz"
                .Sound = "voc_LLWiz"
            End With
            With .EventName("activate_final_wave_wizard")
                .Key = "key_voc_Wiz"
                '.Sound = "voc_Wiz"
                .Sound = "voc_final_wave_ready"
            End With

            'eb
            With .EventName("eb_achieved")
                .Key = "key_voc_extra_ball_acheived"
                .Sound = "voc_extra_ball_acheived"
            End With

        End With


    End With

End Sub



' Basement Mode.
' This mode runs all the time

Sub CreateBasementMode()
    Dim x

    With CreateGlfMode("basement", 100)
        .StartEvents = Array("reset_complete")
        .StopEvents = Array("when_the_universe_ends")

        With .EventPlayer()
            '.Add "s_left_staged_flipper_key_active", Array("test_show1","test_show2") 'DEBUG

            'initialization
            .Add "timer_table_init_complete", Array("start_attract_mode","turn_on_starlight","turn_on_ship_lights")
            'clear won_game flag at start of new game
            .Add GLF_GAME_START, Array("reset_won_game")
            'handle tilt
            .Add "tilt", Array("kill_flippers","training_music_stop","meteor_wave_music_stop","fwwiz_music_stop","flwiz_music_stop","ccwiz_music_stop")
            .Add "training_music_stop", Array("training_music_1_stop","training_music_2_stop","training_music_3_stop","training_music_4_stop","training_music_5_stop")
            'ball search ejects from plunger for this table (special case)
            '.Add "ball_search_started", Array("plunger_eject")
        End With


        ' some sound effects
        With .SoundPlayer()
            With .EventName("player_added{kwargs.num==1}")
                .Key = "key_voc_p1"
                .Sound = "voc_p1"
            End With
            With .EventName("player_added{kwargs.num==2}")
                .Key = "key_voc_p2"
                .Sound = "voc_p2"
            End With
            With .EventName("player_added{kwargs.num==3}")
                .Key = "key_voc_p3"
                .Sound = "voc_p3"
            End With
            With .EventName("player_added{kwargs.num==4}")
                .Key = "key_voc_p4"
                .Sound = "voc_p4"
            End With

            With .EventName("health1_off")
                .Key = "key_sfx_powerdown"
                .Sound = "sfx_powerdown"
            End With
            With .EventName(GLF_BALL_ENDED)
                .Key = "key_ball_drain"
                .Sound = "sfx_ball_drain"
            End With

            With .EventName("tilt_warning")
                .Key = "key_sfx_tilt_warning"
                .Sound = "sfx_tilt_warning"
            End With
            With .EventName("tilt")
                .Key = "key_sfx_tilt"
                .Sound = "sfx_tilt"
            End With

        End With



        With .LightPlayer()
            With .EventName("turn_on_starlight")
                With .Lights("LStars")
          .Color = "ffffff"
        End With
            End With
            With .EventName("turn_on_ship_lights")
        With .Lights("LShip")
          .Color = "ffffff"
        End With
      End With
        End With

        With .Timers("table_init")
            .TickInterval = 50
            .StartValue = 0
            .EndValue = 4
            With .ControlEvents()
                .EventName = "mode_basement_started"
                .Action = "start"
            End With
            With .ControlEvents()
                .EventName = GLF_BALL_STARTED
                .Action = "stop"
            End With
        End With

        With .VariablePlayer()
            With .EventName("reset_won_game")
                With .Variable("won_game")
                    .Action = "set_machine"
                    .Int = 0
                End With
            End With
            With .EventName("kill_flippers")
                With .Variable("flippers_are_dead")
                    .Action = "set"
                    .Int = 1
                End With
            End With

            ' ' moon lock switch tracking
            ' With .EventName("s_Lock1_active")
            '     With .Variable("s_Lock1_on")
            '         .Action = "set"
            '         .Int = 1
            '     End With
            ' End With
            ' With .EventName("s_Lock1_inactive")
            '     With .Variable("s_Lock1_on")
            '         .Action = "set"
            '         .Int = 0
            '     End With
            ' End With
            ' With .EventName("s_Lock2_active")
            '     With .Variable("s_Lock2_on")
            '         .Action = "set"
            '         .Int = 1
            '     End With
            ' End With
            ' With .EventName("s_Lock2_inactive")
            '     With .Variable("s_Lock2_on")
            '         .Action = "set"
            '         .Int = 0
            '     End With
            ' End With
            ' With .EventName("s_Lock3_active")
            '     With .Variable("s_Lock3_on")
            '         .Action = "set"
            '         .Int = 1
            '     End With
            ' End With
            ' With .EventName("s_Lock3_inactive")
            '     With .Variable("s_Lock3_on")
            '         .Action = "set"
            '         .Int = 0
            '     End With
            ' End With

        End With



        ' Backglass lights
        With .DOFPlayer()
            With .EventName("backglass_dark_on")
                .Action = "DOF_ON"
                .DOFEvent = 1
            End With
            With .EventName("backglass_dark_off")
                .Action = "DOF_OFF"
                .DOFEvent = 1
            End With

            With .EventName("backglass_chaos_on")
                .Action = "DOF_ON"
                .DOFEvent = 2
            End With
            With .EventName("backglass_chaos_off")
                .Action = "DOF_OFF"
                .DOFEvent = 2
            End With

            With .EventName("backglass_clusters_on")
                .Action = "DOF_ON"
                .DOFEvent = 3
            End With
            With .EventName("backglass_clusters_off")
                .Action = "DOF_OFF"
                .DOFEvent = 3
            End With

            With .EventName("backglass_shields_on")
                .Action = "DOF_ON"
                .DOFEvent = 4
            End With
            With .EventName("backglass_shields_off")
                .Action = "DOF_OFF"
                .DOFEvent = 4
            End With

            With .EventName("backglass_wave_on")
                .Action = "DOF_ON"
                .DOFEvent = 5
            End With
            With .EventName("backglass_wave_off")
                .Action = "DOF_OFF"
                .DOFEvent = 5
            End With

            With .EventName("backglass_ball_on")
                .Action = "DOF_ON"
                .DOFEvent = 6
            End With
            With .EventName("backglass_ball_off")
                .Action = "DOF_OFF"
                .DOFEvent = 6
            End With

            With .EventName("backglass_moon_on")
                .Action = "DOF_ON"
                .DOFEvent = 7
            End With
            With .EventName("backglass_moon_off")
                .Action = "DOF_OFF"
                .DOFEvent = 7
            End With

            ' With .EventName("backglass_lship_on")
            '     .Action = "DOF_ON"
            '     .DOFEvent = 8
            ' End With
            ' With .EventName("backglass_lship_off")
            '     .Action = "DOF_OFF"
            '     .DOFEvent = 8
            ' End With

            ' With .EventName("backglass_rship_on")
            '     .Action = "DOF_ON"
            '     .DOFEvent = 9
            ' End With
            ' With .EventName("backglass_rship_off")
            '     .Action = "DOF_OFF"
            '     .DOFEvent = 9
            ' End With

            ' With .EventName("backglass_main1_on")
            '     .Action = "DOF_ON"
            '     .DOFEvent = 10
            ' End With
            ' With .EventName("backglass_main1_off")
            '     .Action = "DOF_OFF"
            '     .DOFEvent = 10
            ' End With

            ' With .EventName("backglass_right1_on")
            '     .Action = "DOF_ON"
            '     .DOFEvent = 11
            ' End With
            ' With .EventName("backglass_right1_off")
            '     .Action = "DOF_OFF"
            '     .DOFEvent = 11
            ' End With

            ' With .EventName("backglass_right2_on")
            '     .Action = "DOF_ON"
            '     .DOFEvent = 12
            ' End With
            ' With .EventName("backglass_right2_off")
            '     .Action = "DOF_OFF"
            '     .DOFEvent = 12
            ' End With

            ' With .EventName("backglass_left_on")
            '     .Action = "DOF_ON"
            '     .DOFEvent = 13
            ' End With
            ' With .EventName("backglass_left_off")
            '     .Action = "DOF_OFF"
            '     .DOFEvent = 13
            ' End With

            ' With .EventName("backglass_cockpit1_on")
            '     .Action = "DOF_ON"
            '     .DOFEvent = 14
            ' End With
            ' With .EventName("backglass_cockpit1_off")
            '     .Action = "DOF_OFF"
            '     .DOFEvent = 14
            ' End With

            ' With .EventName("backglass_main2_on")
            '     .Action = "DOF_ON"
            '     .DOFEvent = 15
            ' End With
            ' With .EventName("backglass_main2_off")
            '     .Action = "DOF_OFF"
            '     .DOFEvent = 15
            ' End With

            ' With .EventName("backglass_cockpit2_on")
            '     .Action = "DOF_ON"
            '     .DOFEvent = 16
            ' End With
            ' With .EventName("backglass_cockpit2_off")
            '     .Action = "DOF_OFF"
            '     .DOFEvent = 16
            ' End With
        End With


        With .SegmentDisplayPlayer()
            With .EventName("tilt_warning")
                With .Display("player1")
                    .Text = """"""
                    .Expire = 4000
                    .Priority = 10000
                End With
                With .Display("player2")
                    .Text = """WARNING"""
                    .Expire = 4000
                    .Flashing = "all"
                    .Priority = 10000
                End With
                With .Display("player3")
                    .Text = """WARNING"""
                    .Expire = 4000
                    .Flashing = "all"
                    .Priority = 10000
                End With
                With .Display("player4")
                    .Text = """"""
                    .Expire = 4000
                    .Priority = 10000
                End With
            End With
            With .EventName("tilt")
                With .Display("player1")
                    .Text = """"""
                    .Expire = 4000
                    .Priority = 10000
                End With
                With .Display("player2")
                    .Text = """TILT"""
                    .Expire = 4000
                    .Priority = 10000
                End With
                With .Display("player3")
                    .Text = """TILT"""
                    .Expire = 4000
                    .Priority = 10000
                End With
                With .Display("player4")
                    .Text = """"""
                    .Expire = 4000
                    .Priority = 10000
                End With
            End With
        End With


        With .ShowPlayer()
            With .EventName("tilt")
                .Key = "key_tilted_gi"
                .Show = "flicker_color_off"
                .Speed = 3
                .Loops = 1
                .Priority = 10000
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", GIColor3000k
                End With
            End With
            With .EventName("tilt_warning")
                .Key = "key_tilt_warning_gi"
                .Show = "flash_color"
                .Speed = 9
                .Loops = 9
                .Priority = 10000
                With .Tokens()
                    .Add "lights", "tInlaneGI"
                    .Add "color", GIColor3000k
                End With
            End With
            With .EventName(GLF_BALL_STARTED)
                .Key = "key_tilted_gi"
                .Show = "flicker_color_off"
                .Speed = 3
                .Loops = 1
                .Priority = 10000
                .Action = "stop"
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", GIColor3000k
                End With
            End With

            With .EventName("s_Bumper1_active")
                .Key = "key_bumper_bg_show1"
                .Show = "bumper_bg_show1"
                .Speed = 1
                .Loops = 1
            End With
            With .EventName("s_Bumper3_active")
                .Key = "key_bumper_bg_show2"
                .Show = "bumper_bg_show2"
                .Speed = 1
                .Loops = 1
            End With
            With .EventName("s_TargetMystery5_active")
                .Key = "key_bumper_bg_show3"
                .Show = "bumper_bg_show3"
                .Speed = 1
                .Loops = 1
            End With


            ' Backglass light shows

            With .EventName("backglass_dark_on")
                .Key = "key_backglass_dark_on"
                .Show = "flicker_color_on"
                .Speed = 3
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LBG01"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With
            With .EventName("backglass_dark_off")
                .Key = "key_backglass_dark_off"
                .Show = "flicker_color_off"
                .Speed = 3
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LBG01"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With

            With .EventName("backglass_chaos_on")
                .Key = "key_backglass_chaos_on"
                .Show = "flicker_color_on"
                .Speed = 3
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LBG02"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With
            With .EventName("backglass_chaos_off")
                .Key = "key_backglass_chaos_off"
                .Show = "flicker_color_off"
                .Speed = 3
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LBG02"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With

            With .EventName("backglass_clusters_on")
                .Key = "key_backglass_clusters_on"
                .Show = "flicker_color_on"
                .Speed = 3
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LBG03"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With
            With .EventName("backglass_clusters_off")
                .Key = "key_backglass_clusters_off"
                .Show = "flicker_color_off"
                .Speed = 3
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LBG03"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With

            With .EventName("backglass_shields_on")
                .Key = "key_backglass_shields_on"
                .Show = "flicker_color_on"
                .Speed = 3
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LBG04"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With
            With .EventName("backglass_shields_off")
                .Key = "key_backglass_shields_off"
                .Show = "flicker_color_off"
                .Speed = 3
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LBG04"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With

            With .EventName("backglass_wave_on")
                .Key = "key_backglass_wave_on"
                .Show = "flicker_color_on"
                .Speed = 3
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LBG05"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With
            With .EventName("backglass_wave_off")
                .Key = "key_backglass_wave_off"
                .Show = "flicker_color_off"
                .Speed = 3
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LBG05"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With
            With .EventName("backglass_wave_flash")
                .Key = "key_backglass_wave_flash"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 10
                With .Tokens()
                    .Add "lights", "LBG05"
                    .Add "color", GIColor3000k
                End With
            End With

            With .EventName("backglass_ball_on")
                .Key = "key_backglass_ball_on"
                .Show = "flicker_color_on"
                .Speed = 3
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LBG06"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With
            With .EventName("backglass_ball_off")
                .Key = "key_backglass_ball_off"
                .Show = "flicker_color_off"
                .Speed = 3
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LBG06"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With

            With .EventName("backglass_moon_on")
                .Key = "key_backglass_moon_on"
                .Show = "flicker_color_on"
                .Speed = 3
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LBG07"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With
            With .EventName("backglass_moon_off")
                .Key = "key_backglass_moon_off"
                .Show = "flicker_color_off"
                .Speed = 3
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LBG07"
                    .Add "color", GIColor3000k
                    .Add "fade", 800
                End With
            End With


            'DEBUG
            ' With .EventName("test_show1")
            '     .Key = "key_test_show1"
            '     .Show = "ship_saver_acquired"
            '     .Speed = 1
            '     .Loops = 1
            '     .Priority = 20000
            ' End With
            ' With .EventName("test_show2")
            '     .Key = "key_test_show2"
            '     .Show = "shields_down"
            '     .Speed = 1
            '     .Loops = 1
            '     .Priority = 10000
            ' End With
            '  With .EventName("test_show1")
            '     .Key = "key_test_show1"
            '     .Show = "lsling_rotate4_ccw"
            '     .Speed = 1
            '     With .Tokens()
            '         .Add "intensity", 50
            '         .Add "color1", MoonColor
            '         .Add "color2", HealthColor1
            '         .Add "color3", ShieldsColor
            '         .Add "color4", HealthColor3
            '     End With
            ' End With
            ' With .EventName("test_show2")
            '     .Key = "key_test_show2"
            '     .Show = "rsling_rotate4_cw"
            '     .Speed = 1
            '     With .Tokens()
            '         .Add "intensity", 50
            '         .Add "color1", MoonColor
            '         .Add "color2", HealthColor1
            '         .Add "color3", ShieldsColor
            '         .Add "color4", HealthColor3
            '     End With
            ' End With
        End With



    End With

End Sub



' Bonus Mode.


Sub CreateBonusMode

    With CreateGlfMode("bonus", 150)
        .StartEvents = Array("ball_ending{game.tilted == False}")
        .StopEvents = Array("bonus_finished")
        .UseWaitQueue = True

        With .EventPlayer()
            'start bonus
            .Add "mode_bonus_started", Array("run_bonus_started")
            ' .Add "mode_bonus_started{current_player.wizard_final_hit_count > 0}", Array("run_bonus_started") 'normal startup. run bonus
            ' .Add "mode_bonus_started{current_player.wizard_final_hit_count == 0 && current_player.victory == 0}", Array("bonus_finished") 'final wizard just completed. dont run bonus
            ' .Add "mode_bonus_started{current_player.wizard_final_hit_count == 0 && current_player.victory == 1}", Array("run_bonus_started") 'victory mode done. run bonus
            .Add "run_bonus_started", Array("check_bonus_bomb1","check_bonus_missile1","check_bonus_proton1","check_bonus_waves")
            'calculate bomb bonus
            .Add "check_bonus_bomb1{current_player.shot_cluster_bomb1 == 1}", Array("add_bonus_bomb","check_bonus_bomb2","bonus_light_cr1")
            .Add "check_bonus_bomb2{current_player.shot_cluster_bomb2 == 1}", Array("add_bonus_bomb","bonus_light_cr2")
            'calculate missile bonus
            .Add "check_bonus_missile1{current_player.shot_moon_missile1 == 1}", Array("add_bonus_missile","check_bonus_missile2","bonus_light_mr1")
            .Add "check_bonus_missile2{current_player.shot_moon_missile2 == 1}", Array("add_bonus_missile","bonus_light_mr2")
            'calculate proton bonus
            .Add "check_bonus_proton1{current_player.shot_proton_round1 == 1}", Array("add_bonus_proton","check_bonus_proton2","bonus_light_pr1")
            .Add "check_bonus_proton2{current_player.shot_proton_round2 == 1}", Array("add_bonus_proton","check_bonus_proton3","bonus_light_pr2")
            .Add "check_bonus_proton3{current_player.shot_proton_round3 == 1}", Array("add_bonus_proton","check_bonus_proton4","bonus_light_pr3")
            .Add "check_bonus_proton4{current_player.shot_proton_round4 == 1}", Array("add_bonus_proton","check_bonus_proton5","bonus_light_pr4")
            .Add "check_bonus_proton5{current_player.shot_proton_round5 == 1}", Array("add_bonus_proton","check_bonus_proton6","bonus_light_pr5")
            .Add "check_bonus_proton6{current_player.shot_proton_round6 == 1}", Array("add_bonus_proton","bonus_light_pr6")
            'light wave lights
            .Add "check_bonus_waves{current_player.shot_meteor_wave1 == 2}", Array("bonus_light_w1")
            .Add "check_bonus_waves{current_player.shot_meteor_wave2 == 2}", Array("bonus_light_w2")
            .Add "check_bonus_waves{current_player.shot_meteor_wave3 == 2}", Array("bonus_light_w3")
            .Add "check_bonus_waves{current_player.shot_meteor_wave4 == 2}", Array("bonus_light_w4")
            .Add "check_bonus_waves{current_player.shot_meteor_wave5 == 2}", Array("bonus_light_w5")
            .Add "check_bonus_waves{current_player.shot_meteor_wave6 == 2}", Array("bonus_light_w6")
            .Add "check_bonus_waves{current_player.shot_meteor_wave7 == 2}", Array("bonus_light_w7")
            .Add "check_bonus_waves{current_player.shot_meteor_wave8 == 2}", Array("bonus_light_w8")
            .Add "check_bonus_waves{current_player.shot_meteor_wave9 == 2}", Array("bonus_light_w9")
            'add total bonus to player's score
            .Add "timer_bonus_tick{devices.timers.bonus.ticks == 17}", Array("calc_bonus_total")
            .Add "calc_bonus_total", Array("score_bonus_total")
            'handle bonus tally show
            .Add "timer_bonus_tick{devices.timers.bonus.ticks == 2 && current_player.bonus_multiplier == 2}", Array("bonus_2x")
            .Add "timer_bonus_tick{devices.timers.bonus.ticks == 3}", Array("bonus_tally1","restart_sfx_tally_alt")
            .Add "timer_bonus_tick{devices.timers.bonus.ticks == 6}", Array("bonus_tally2","restart_sfx_tally_alt")
            .Add "timer_bonus_tick{devices.timers.bonus.ticks == 9}", Array("bonus_tally3","restart_sfx_tally_alt")
            .Add "timer_bonus_tick{devices.timers.bonus.ticks == 12}", Array("bonus_tally4","restart_sfx_tally_alt")
            .Add "timer_bonus_tick{devices.timers.bonus.ticks == 15}", Array("bonus_tally5","restart_sfx_tally_alt")
            .Add "timer_bonus_tick{devices.timers.bonus.ticks == 18}", Array("bonus_tally6","restart_sfx_tally_alt")
            .Add "restart_sfx_tally_alt", Array("stop_sfx_tally_alt")
            .Add "stop_sfx_tally_alt", Array("play_sfx_tally_alt")
            'finish up bonus mode
            .Add "timer_bonus_complete", Array("bonus_finished")
            'block combo switch spamming
            .Add "skip_bonus_tally", Array("comboflip_hit")
        End With

        With .ComboSwitches("bonus_skip")
            '.Debug = True
            .Switch1 = "s_left_flipper"
            .Switch2 = "s_right_flipper"
            .EventsWhenBoth = Array("skip_bonus_tally")
            '.HoldTime = 200
        End With

        With .SoundPlayer()
             With .EventName("stop_sfx_tally_alt")
                .Key = "key_sfx_tally_alt"
                .Sound = "sfx_tally_alt"
                .Action = "stop"
            End With
            With .EventName("play_sfx_tally_alt")
                .Key = "key_sfx_tally_alt"
                .Sound = "sfx_tally_alt"
            End With
        End With

        With .ShowPlayer()
            With .EventName("run_bonus_started")
                .Key = "key_bonus_show"
                .Show = "gi_spin1_cw"
                .Speed = 1
                With .Tokens()
                    .Add "intensity", 100
                End With
            End With

            With .EventName("bonus_tally1")
                .Key = "key_tally1_show"
                .Show = "flash_color"
                .Speed = 13
                .Loops = 7
                With .Tokens()
                    .Add "lights", "tWaves"
                    .Add "color", MeteorWaveColor
                End With
            End With
            With .EventName("bonus_tally2")
                .Key = "key_tally2_show"
                .Show = "flash_color"
                .Speed = 13
                .Loops = 7
                With .Tokens()
                    .Add "lights", "LX"
                    .Add "color", TrainingColor
                End With
            End With
            With .EventName("bonus_tally3")
                .Key = "key_tally3_show"
                .Show = "flash_color"
                .Speed = 13
                .Loops = 7
                With .Tokens()
                    .Add "lights", "tClusterAll"
                    .Add "color", ClusterBombColor
                End With
            End With
            With .EventName("bonus_tally4")
                .Key = "key_tally4_show"
                .Show = "flash_color"
                .Speed = 13
                .Loops = 7
                With .Tokens()
                    .Add "lights", "tMoonAll"
                    .Add "color", MoonColor
                End With
            End With
            With .EventName("bonus_tally5")
                .Key = "key_tally5_show"
                .Show = "flash_color"
                .Speed = 13
                .Loops = 7
                With .Tokens()
                    .Add "lights", "tProtonAll"
                    .Add "color", ProtonColor
                End With
            End With

        End With


        With .LightPlayer()
            With .EventName("bonus_light_cr1")
                With .Lights("LCR1")
                    .Color = ClusterBombColor
                End With
            End With
            With .EventName("bonus_light_cr2")
                With .Lights("LCR2")
                    .Color = ClusterBombColor
                End With
            End With

            With .EventName("bonus_light_mr1")
                With .Lights("LMR1")
                    .Color = MoonColor
                End With
            End With
            With .EventName("bonus_light_mr2")
                With .Lights("LMR2")
                    .Color = MoonColor
                End With
            End With

            With .EventName("bonus_light_pr1")
                With .Lights("LPR1")
                    .Color = ProtonColor
                End With
            End With
            With .EventName("bonus_light_pr2")
                With .Lights("LPR2")
                    .Color = ProtonColor
                End With
            End With
            With .EventName("bonus_light_pr3")
                With .Lights("LPR3")
                    .Color = ProtonColor
                End With
            End With
            With .EventName("bonus_light_pr4")
                With .Lights("LPR4")
                    .Color = ProtonColor
                End With
            End With
            With .EventName("bonus_light_pr5")
                With .Lights("LPR5")
                    .Color = ProtonColor
                End With
            End With
            With .EventName("bonus_light_pr6")
                With .Lights("LPR6")
                    .Color = ProtonColor
                End With
            End With

            With .EventName("bonus_light_w1")
                With .Lights("LW1")
                    .Color = MeteorWaveColor
                End With
            End With
            With .EventName("bonus_light_w2")
                With .Lights("LW2")
                    .Color = MeteorWaveColor
                End With
            End With
            With .EventName("bonus_light_w3")
                With .Lights("LW3")
                    .Color = MeteorWaveColor
                End With
            End With
            With .EventName("bonus_light_w4")
                With .Lights("LW4")
                    .Color = MeteorWaveColor
                End With
            End With
            With .EventName("bonus_light_w5")
                With .Lights("LW5")
                    .Color = MeteorWaveColor
                End With
            End With
            With .EventName("bonus_light_w6")
                With .Lights("LW6")
                    .Color = MeteorWaveColor
                End With
            End With
            With .EventName("bonus_light_w7")
                With .Lights("LW7")
                    .Color = MeteorWaveColor
                End With
            End With
            With .EventName("bonus_light_w8")
                With .Lights("LW8")
                    .Color = MeteorWaveColor
                End With
            End With
            With .EventName("bonus_light_w9")
                With .Lights("LW9")
                    .Color = MeteorWaveColor
                End With
            End With
        End With



        With .Timers("bonus")
            .TickInterval = BonusTimerTickInterval
            .StartValue = 0
            .EndValue = 24
            With .ControlEvents()
                .EventName = "run_bonus_started"
                .Action = "restart"
            End With
            With .ControlEvents()
                .EventName = "skip_bonus_tally{current_player.bonus_comboflip_block==0 && devices.timers.bonus.ticks < 16}"
                .Action = "jump"
                .Value = 16  'bonus total
            End With
        End With

        With .SegmentDisplayPlayer()
            With .EventName("run_bonus_started")
                With .Display("player1")
                    .Text = """BONUS  """
                End With
                With .Display("player2")
                    .Text = """"""
                End With
                With .Display("player3")
                    .Text = """"""
                End With
                With .Display("player4")
                    .Text = """"""
                End With
            End With

            With .EventName("bonus_2x")
                With .Display("player4")
                    .Priority = 5005
                    .Text = """ X 2  """
                End With
            End With

            With .EventName("timer_bonus_tick{devices.timers.bonus.ticks == 3}")
                With .Display("player2")
                    .Priority = 5010
                    .Text = """WAVES"""
                    .Flashing = "all"
                    '.Expire = BonusTimerTickInterval
                End With
                With .Display("player3")
                    .Priority = 5010
                    .Text = "{current_player.bonus_waves:0>2}"
                    .Flashing = "all"
                    '.Expire = BonusTimerTickInterval
                End With
            End With

            With .EventName("timer_bonus_tick{devices.timers.bonus.ticks == 6}")
                With .Display("player2")
                    .Priority = 5020
                    .Text = """TRAINING"""
                    .Flashing = "all"
                    '.Expire = BonusTimerTickInterval
                End With
                With .Display("player3")
                    .Priority = 5020
                    .Text = "{current_player.bonus_training:0>2}"
                    .Flashing = "all"
                    '.Expire = BonusTimerTickInterval
                End With
            End With

            With .EventName("timer_bonus_tick{devices.timers.bonus.ticks == 9}")
                With .Display("player2")
                    .Priority = 5030
                    .Text = """BOMBS"""
                    .Flashing = "all"
                    '.Expire = BonusTimerTickInterval
                End With
                With .Display("player3")
                    .Priority = 5030
                    .Text = "{current_player.bonus_bombs:0>2}"
                    .Flashing = "all"
                    '.Expire = BonusTimerTickInterval
                End With
            End With

            With .EventName("timer_bonus_tick{devices.timers.bonus.ticks == 12}")
                With .Display("player2")
                    .Priority = 5040
                    .Text = """MISSILES"""
                    .Flashing = "all"
                    '.Expire = BonusTimerTickInterval
                End With
                With .Display("player3")
                    .Priority = 5040
                    .Text = "{current_player.bonus_missiles:0>2}"
                    .Flashing = "all"
                    '.Expire = BonusTimerTickInterval
                End With
            End With

            With .EventName("timer_bonus_tick{devices.timers.bonus.ticks == 15}")
                With .Display("player2")
                    .Priority = 5050
                    .Text = """PROTONS"""
                    .Flashing = "all"
                    '.Expire = BonusTimerTickInterval
                End With
                With .Display("player3")
                    .Priority = 5050
                    .Text = "{current_player.bonus_protons:0>2}"
                    .Flashing = "all"
                    '.Expire = BonusTimerTickInterval
                End With
            End With

            With .EventName("timer_bonus_tick{devices.timers.bonus.ticks == 18}")
                With .Display("player2")
                    .Priority = 5060
                    .Text = """TOTAL"""
                End With
                With .Display("player3")
                    .Priority = 5060
                    .Text = "{current_player.bonus_total:0>2}"
                    .Flashing = "all"
                End With
                With .Display("player4")
                    .Priority = 5060
                    .Text = """"""
                End With
            End With

        End With


        With .VariablePlayer()

            With .EventName("run_bonus_started")
                'initalize vars
        With .Variable("bonus_bombs")
                    .Action = "set"
          .Int = 0
        End With
                With .Variable("bonus_missiles")
                    .Action = "set"
          .Int = 0
        End With
                With .Variable("bonus_protons")
                    .Action = "set"
          .Int = 0
        End With
                With .Variable("bonus_total")
                    .Action = "set"
          .Int = 0
        End With
                'calc waves and training bonus
                With .Variable("bonus_waves")
                    .Action = "set"
          .Int = BonusrWaveMultiplier & " * current_player.num_waves_completed_this_ball * current_player.num_waves_completed"
        End With
                With .Variable("bonus_training")
                    .Action = "set"
          .Int = BonusPerTraining & " * current_player.training_total_achieved"
        End With
                'block double flipper
                With .Variable("bonus_comboflip_block")
                    .Action = "set"
          .Int = 0
        End With
      End With

            'sum up ammo for bonus points
        With .EventName("comboflip_hit")
        With .Variable("bonus_comboflip_block")
                    .Action = "set"
          .Int = 1
        End With
      End With

            'sum up ammo for bonus points
        With .EventName("add_bonus_bomb")
        With .Variable("bonus_bombs")
                    .Action = "add"
          .Int = BonusPerClusterBomb
        End With
      End With
            With .EventName("add_bonus_missile")
        With .Variable("bonus_missiles")
                    .Action = "add"
          .Int = BonusPerMoonMissile
        End With
      End With
            With .EventName("add_bonus_proton")
        With .Variable("bonus_protons")
                    .Action = "add"
          .Int = BonusPerProtonRound
        End With
      End With

            'calculate the total bonus
            With .EventName("calc_bonus_total")
                With .Variable("bonus_total")
                    .Action = "set"
                    .Int = "(current_player.bonus_waves + " & _
                           "current_player.bonus_training + " & _
                           "current_player.bonus_bombs + " & _
                           "current_player.bonus_missiles + " & _
                           "current_player.bonus_protons) * current_player.bonus_multiplier"
                End With
            End With

            'add the total bonus to player's score
            With .EventName("score_bonus_total")
        With .Variable("score")
                    .Action = "add"
          .Int = "current_player.bonus_total"
        End With
      End With
        End With

    End With

End Sub


'Cluster Bomb Mode.

's_LeftOrb2 must be hit right after s_LeftOrb1 (by hitting their swtiches).
'Once this occurs, a cluster bomb charge light is lit in order (1, 2, 3)
'Once the third charge light is lit, a new cluster bomb is lit in order (1, 2)
'If a cluster bomb is available, then when the left magna is pressed the bomb is detonated
'When a bomb is detonated it will destroy all meteors (drop targets) that are currently active on the table


Sub CreateClusterBombMode
    Dim x

    With CreateGlfMode("cluster_bombs", 1000)
        .StartEvents = Array("new_ball_started","stop_training","wizard_mode_ended")
        .StopEvents = Array("mode_base_stopping","start_training_select","wizard_mode_started")

        With .EventPlayer()
            'Reset cluster charge shots
            .Add "mode_cluster_bombs_started{current_player.shot_cluster_charge1==0}", Array("reset_cluster_charges")
            .Add "mode_cluster_bombs_started{current_player.training_cluster_bomb_achieved==1}", Array("reset_cluster_charges")
            .Add "reset_cluster_charges{current_player.training_cluster_bomb_achieved==0}", Array("ready_cluster_charge1") 'no training boost
            .Add "reset_cluster_charges{current_player.training_cluster_bomb_achieved==1}", Array("light_cluster_charge1","light_cluster_charge2","ready_cluster_charge3") 'with training boost
            .Add "mode_cluster_bombs_stopping", Array("backglass_clusters_off")
            .Add "mode_cluster_bombs_started{current_player.shot_cluster_bomb1 == 1}", Array("backglass_clusters_on")
            'Successful shot
            .Add "left_orbit_hit{current_player.shot_cluster_charge1 == 1}", Array("light_cluster_charge1","ready_cluster_charge2","play_sfx_LCC")
            .Add "left_orbit_hit{current_player.shot_cluster_charge1 == 2 && current_player.shot_cluster_charge2 == 1}", Array("light_cluster_charge2","ready_cluster_charge3","play_sfx_LCC")
            .Add "left_orbit_hit{current_player.shot_cluster_charge2 == 2 && current_player.shot_cluster_charge3 == 1}", Array("light_cluster_charge3","play_sfx_LCC")
            'Add bombs
            .Add "light_cluster_charge3{current_player.shot_cluster_bomb1 == 0}", Array("add_cluster_bomb1","reset_cluster_charges")
            .Add "light_cluster_charge3{current_player.shot_cluster_bomb1 == 1 && current_player.shot_cluster_bomb2 == 0}", Array("add_cluster_bomb2","check_fully_loaded") 'check for wizard mode qualification
            'Fire bomb
            .Add "s_left_magna_key_active{current_player.shot_cluster_bomb1 == 1 && current_player.shot_cluster_bomb2 == 0}", Array("fire_cluster_bomb1","cluster_bomb_fired","cluster_bomb_flash","backglass_clusters_off")
            .Add "s_left_magna_key_active{current_player.shot_cluster_bomb2 == 1}", Array("fire_cluster_bomb2","cluster_bomb_fired","cluster_bomb_flash","reset_cluster_charges")
            'Panic penalty
            .Add "s_left_magna_key_active{current_player.shot_cluster_bomb1 == 0}", Array("cluster_panic_penalty")
            .Add "cluster_panic_penalty", Array("score_m100000")
            'Handle mystery award
            .Add "mystery_added_cluster", Array("complete_cluster_charges","light_cluster_charge3","check_fully_loaded","slings_powerup_added","lsling_powerup_cb","rsling_powerup_cb")
            'Scoring
            .Add "left_orbit_hit", Array("score_2000")
            .Add "add_cluster_bomb1", Array("score_50000","slings_powerup_added","lsling_powerup_cb","rsling_powerup_cb","cb_acquired","backglass_clusters_on")
            .Add "add_cluster_bomb2", Array("score_100000","slings_powerup_added","lsling_powerup_cb","rsling_powerup_cb","cb_acquired","backglass_clusters_on")
            .Add "complete_cluster_charges", Array("score_50000","backglass_clusters_on")
            .Add "cluster_bomb_fired", Array("score_50000")
        End With

        With .RandomEventPlayer()
            With .EventName("play_sfx_LCC")
                .Add "play_sfx_LCC1", 1
                .Add "play_sfx_LCC2", 1
                .Add "play_sfx_LCC3", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
        End With

        With .DOFPlayer()
            With .EventName("cluster_bomb_fired")
                .Action = "DOF_PULSE"
                .DOFEvent = 136
            End With
            With .EventName("cb_acquired")
                .Action = "DOF_PULSE"
                .DOFEvent = 170
            End With
        End With

        With .SoundPlayer()
            With .EventName("cluster_bomb_fired")
                .Key = "key_sfx_cluster_fired"
                .Sound = "sfx_cluster_fired"
            End With

            With .EventName("play_sfx_LCC1")
                .Key = "key_sfx_LCC1"
                .Sound = "sfx_LCC1"
            End With
            With .EventName("play_sfx_LCC2")
                .Key = "key_sfx_LCC2"
                .Sound = "sfx_LCC2"
            End With
            With .EventName("play_sfx_LCC3")
                .Key = "key_sfx_LCC3"
                .Sound = "sfx_LCC3"
            End With

            With .EventName("add_cluster_bomb1")
                .Key = "key_voc_LCR1"
                .Sound = "voc_LCR1"
            End With
            With .EventName("add_cluster_bomb2")
                .Key = "key_voc_LCR2"
                .Sound = "voc_LCR2"
            End With

            With .EventName("cluster_panic_penalty")
                .Key = "key_sfx_error_buzz2"
                .Sound = "sfx_error_buzz"
            End With
        End With


        'Define our shots
        For x = 1 to 3
            With .Shots("cluster_charge"&x)
                .Profile = "powerups"
                With .Tokens()
                    .Add "lights", "LCC"&x
                    .Add "color", ClusterBombColor
                End With
                With .ControlEvents()
                    .Events = Array("ready_cluster_charge"&x)
                    .State = 1
                End With
                With .ControlEvents()
                    .Events = Array("light_cluster_charge"&x,"complete_cluster_charges")
                    .State = 2
                End With
                .RestartEvents = Array("reset_cluster_charges")
            End With
        Next

        For x = 1 to 2
            With .Shots("cluster_bomb"&x)
                .Profile = "flicker_on"
                With .Tokens()
                    .Add "lights", "LCR"&x
                    .Add "color", ClusterBombColor
                End With
                With .ControlEvents()
                    .Events = Array("add_cluster_bomb"&x,"complete_cluster_bombs")
                    .State = 1
                End With
                With .ControlEvents()
                    .Events = Array("fire_cluster_bomb"&x)
                    .State = 0
                End With
            End With
        Next


        With .ShowPlayer()
            With .EventName("cluster_panic_penalty")
                .Key = "key_cluster_panic_penalty"
                .Show = "flash_color"
                .Speed = 13
                .Loops = 7
                With .Tokens()
                    .Add "lights", "tClusterAll"
                    .Add "color", MeteorWaveColor
                End With
            End With

            With .EventName("light_cluster_charge3")
                .Key = "key_clusters_charged"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 5
                With .Tokens()
                    .Add "lights", "tCluster"
                    .Add "color", ClusterBombColor
                End With
            End With
            With .EventName("add_cluster_bomb1")
                .Key = "key_cluster1_charged"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 5
                With .Tokens()
                    .Add "lights", "LCR1"
                    .Add "color", ClusterBombColor
                End With
            End With
            With .EventName("add_cluster_bomb2")
                .Key = "key_cluster2_charged"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 5
                With .Tokens()
                    .Add "lights", "LCR2"
                    .Add "color", ClusterBombColor
                End With
            End With
            With .EventName("cluster_bomb_fired")
                .Key = "key_cluster_explodes"
                .Priority = 5
                .Show = "cluster_explodes"  'the cluster color is included in the show
                .Speed = 1
                .Loops = 1
            End With
            With .EventName("cluster_bomb_flash")
                .Key = "key_cluster_flash"
                .Show = "flash_color_with_fade"
                .Speed = 20
                .Loops = 5
                With .Tokens()
                    .Add "lights", "FL3"
                    .Add "color", ClusterBombColor
                    .Add "fade", 300
                End With
            End With

            'Added cluster bomb shows
            With .EventName("lsling_powerup_cb")
                .Key = "key_lsling_powerup_cb"
                .Show = "lsling_rotate2_cw"
                .Speed = 2
                .Loops = 3
                With .Tokens()
                    .Add "color1", ClusterBombColor
                    .Add "color2", ClusterBombColor
                    .Add "intensity", SlingDomePowerUpBrightness
                End With
            End With
            With .EventName("rsling_powerup_cb")
                .Key = "key_rsling_powerup_cb"
                .Show = "rsling_rotate2_ccw"
                .Speed = 2
                .Loops = 3
                With .Tokens()
                    .Add "color1", ClusterBombColor
                    .Add "color2", ClusterBombColor
                    .Add "intensity", SlingDomePowerUpBrightness
                End With
            End With
            With .EventName("cb_acquired")
                .Key = "key_cb_acquired"
                .Show = "cluster_bomb_acquired"
                .Speed = 4
                .Loops = 1
                .Priority = 1000
                With .Tokens()
                    .Add "color", ClusterBombColor
                    .Add "intensity", 100
                End With
            End With

        End With


        With .SegmentDisplayPlayer()
            With .EventName("light_cluster_charge3")
                With .Display("player3")
                    .Text = """CLUSTER"""
                    .Flashing = "all"
                    .Expire = 2000
                End With
            End With
        End With

    End With
End Sub


'Combo Command Wizard Mode.

'EB is added. All combo shot lights are lit flashing. Short ball saver is started (10 sec).
'5 ball multiball starts. Mode lasts as long as ball lasts, or until the super jacpot is achieved
'Each shot is like a jackpot. If all are completed, the scoop lights of for super jackpot.
'If Super JP is made, then phase 2 starts.
'One random shot is lit at a time (flashing). After it is hit, its says lit (solid).
'Once all shots are completed, then the Super Duper JP is lit at the scoop.
'If the Super Duper JP is hit, then flippers die to drain other balls. Mode ends in full success!



Sub CreateComboCommandWizardMode
    Dim x

    With CreateGlfMode("combo_command_wizard", 3000)
        .StartEvents = Array("run_combo_command_wizard")
        .StopEvents = Array("mode_base_stopping","completed_combo_command_wizard")

        With .EventPlayer()
            .Add "mode_combo_command_wizard_started", Array("meteor_wave_music_stop","ccwiz_music_start","ccwiz_sjp1_show2")
            .Add "mode_combo_command_wizard_stopping", Array("ccwiz_music_stop")
            'release the scoop ball to start the wizard mode
            .Add "timer_combo_command_message_complete", Array("release_scoop_hold","start_moon_multiball","delayed_release_moon_ball")
            .Add "release_scoop_hold", Array("disable_scoop_hold")
            'Phase 1 shots
            .Add MainShotNames(0)&"_hit{current_player.shot_combo_command1 == 1 && current_player.wizard_combo_command_phase == 1}", Array("play_sfx_jackpot","ccwiz_shot_phase1_show","ccwiz_flash_phase1_show","score_200000")
            .Add MainShotNames(1)&"_hit{current_player.shot_combo_command2 == 1 && current_player.wizard_combo_command_phase == 1}", Array("play_sfx_jackpot","ccwiz_shot_phase1_show","ccwiz_flash_phase1_show","score_200000")
            .Add MainShotNames(2)&"_hit{current_player.shot_combo_command3 == 1 && current_player.wizard_combo_command_phase == 1}", Array("play_sfx_jackpot","ccwiz_shot_phase1_show","ccwiz_flash_phase1_show","score_200000")
            .Add MainShotNames(3)&"_hit{current_player.shot_combo_command4 == 1 && current_player.wizard_combo_command_phase == 1}", Array("play_sfx_jackpot","ccwiz_shot_phase1_show","ccwiz_flash_phase1_show","score_200000")
            .Add MainShotNames(4)&"_hit{current_player.shot_combo_command5 == 1 && current_player.wizard_combo_command_phase == 1}", Array("play_sfx_jackpot","ccwiz_shot_phase1_show","ccwiz_flash_phase1_show","score_200000")
            .Add MainShotNames(5)&"_hit{current_player.shot_combo_command6 == 1 && current_player.wizard_combo_command_phase == 1}", Array("play_sfx_jackpot","ccwiz_shot_phase1_show","ccwiz_flash_phase1_show","score_200000")
            .Add MainShotNames(6)&"_hit{current_player.shot_combo_command7 == 1 && current_player.wizard_combo_command_phase == 1}", Array("play_sfx_jackpot","ccwiz_shot_phase1_show","ccwiz_flash_phase1_show","score_200000")
            .Add MainShotNames(7)&"_hit{current_player.shot_combo_command8 == 1 && current_player.wizard_combo_command_phase == 1}", Array("play_sfx_jackpot","ccwiz_shot_phase1_show","ccwiz_flash_phase1_show","score_200000")
            'Phase 1 shots completed, so activate the scoop for Super JPs
            .Add "ccwiz_shots_on_complete{current_player.wizard_combo_command_phase == 1}", Array("activate_ccwiz_sjp","run_ccwiz_scoop_show")
            'Phase 1 Super JP achieved
            .Add "balldevice_scoop_ball_entered{current_player.wizard_combo_command_phase == 1 && current_player.ccwiz_super_jp == 1}", Array("ccwiz_sjp_achieved","stop_ccwiz_scoop_show","restart_combos_command_shots")   'Start phase 2
            .Add "ccwiz_sjp_achieved", Array("add_ccwiz_phase2_shot","play_sfx_super_jackpot","ccwiz_sjp1_show1","ccwiz_sjp1_show2","score_1000000")
            'Phase 2 shots
            .Add MainShotNames(0)&"_hit{current_player.shot_combo_command1 == 1 && current_player.wizard_combo_command_phase == 2}", Array("add_ccwiz_phase2_shot","play_sfx_jackpot","ccwiz_shot_phase2_show1","ccwiz_flash_phase2_show1","score_300000")
            .Add MainShotNames(1)&"_hit{current_player.shot_combo_command2 == 1 && current_player.wizard_combo_command_phase == 2}", Array("add_ccwiz_phase2_shot","play_sfx_jackpot","ccwiz_shot_phase2_show8","ccwiz_flash_phase2_show8","score_300000")
            .Add MainShotNames(2)&"_hit{current_player.shot_combo_command3 == 1 && current_player.wizard_combo_command_phase == 2}", Array("add_ccwiz_phase2_shot","play_sfx_jackpot","ccwiz_shot_phase2_show2","ccwiz_flash_phase2_show2","score_300000")
            .Add MainShotNames(3)&"_hit{current_player.shot_combo_command4 == 1 && current_player.wizard_combo_command_phase == 2}", Array("add_ccwiz_phase2_shot","play_sfx_jackpot","ccwiz_shot_phase2_show5","ccwiz_flash_phase2_show5","score_300000")
            .Add MainShotNames(4)&"_hit{current_player.shot_combo_command5 == 1 && current_player.wizard_combo_command_phase == 2}", Array("add_ccwiz_phase2_shot","play_sfx_jackpot","ccwiz_shot_phase2_show4","ccwiz_flash_phase2_show4","score_300000")
            .Add MainShotNames(5)&"_hit{current_player.shot_combo_command6 == 1 && current_player.wizard_combo_command_phase == 2}", Array("add_ccwiz_phase2_shot","play_sfx_jackpot","ccwiz_shot_phase2_show6","ccwiz_flash_phase2_show6","score_300000")
            .Add MainShotNames(6)&"_hit{current_player.shot_combo_command7 == 1 && current_player.wizard_combo_command_phase == 2}", Array("add_ccwiz_phase2_shot","play_sfx_jackpot","ccwiz_shot_phase2_show3","ccwiz_flash_phase2_show3","score_300000")
            .Add MainShotNames(7)&"_hit{current_player.shot_combo_command8 == 1 && current_player.wizard_combo_command_phase == 2}", Array("add_ccwiz_phase2_shot","play_sfx_jackpot","ccwiz_shot_phase2_show7","ccwiz_flash_phase2_show7","score_300000")
            'Phase 2 shots completed, so activate the scoop for Super JPs
            .Add "ccwiz_shots_on_complete{current_player.wizard_combo_command_phase == 2}", Array("activate_ccwiz_sdjp","run_ccwiz_scoop_show","enable_scoop_hold")
            'Phase 2 Super Duper JP achieved
            .Add "balldevice_scoop_ball_entered{current_player.ccwiz_super_jp == 2}", Array("ccwiz_sdjp_achieved","stop_ccwiz_scoop_show")  'Combo Command wizard mode completed
            .Add "ccwiz_sdjp_achieved", Array("play_sfx_super_jackpot","ccwiz_sjp2_show1","ccwiz_sjp2_show2","ccwiz_music_stop","score_2000000")
            .Add "ccwiz_finalize", Array("release_scoop_hold","completed_combo_command_wizard")
            'Handle bumper lights
            .Add "timer_ccwiz_bumper_lights_tick{current_player.wizard_combo_command_phase == 1}", Array("ccwiz_bumpers_show1")
            .Add "timer_ccwiz_bumper_lights_tick{current_player.wizard_combo_command_phase == 2}", Array("ccwiz_bumpers_show2")
            'Handle moon ramp
            .Add "balldevice_moon_lock_ball_enter", Array("delayed_release_moon_ball")
            .Add "ball_search_started", Array("release_moon_ball")
        End With


        With .RandomEventPlayer()
            With .EventName("add_ccwiz_phase2_shot")
                .Add "combo_command1_ready{current_player.shot_combo_command1 == 0}", 1
                .Add "combo_command2_ready{current_player.shot_combo_command2 == 0}", 1
                .Add "combo_command3_ready{current_player.shot_combo_command3 == 0}", 1
                .Add "combo_command4_ready{current_player.shot_combo_command4 == 0}", 1
                .Add "combo_command5_ready{current_player.shot_combo_command5 == 0}", 1
                .Add "combo_command6_ready{current_player.shot_combo_command6 == 0}", 1
                .Add "combo_command7_ready{current_player.shot_combo_command7 == 0}", 1
                .Add "combo_command8_ready{current_player.shot_combo_command8 == 0}", 1
                .ForceAll = True
                .ForceDifferent = False
            End With
            With .EventName("ccwiz_bumpers_show2")
                .Add "ccwiz_bumper1_show2", 1
                .Add "ccwiz_bumper2_show2", 1
                .Add "ccwiz_bumper3_show2", 1
                ' .Add "ccwiz_bumper4_show2", 1
                .ForceAll = True
                .ForceDifferent = False
            End With
        End With


        With .ExtraBalls("ccwiz_eb")
            .AwardEvents = Array("mode_combo_command_wizard_started")
            .MaxPerGame = 3
        End With

        With .Shots("ccwiz_shoot_again")
            .Profile = "shoot_again"
            With .Tokens()
                .Add "color", ShipSaveColor
            End With
            With .ControlEvents()
                .Events = Array("mode_combo_command_wizard_started")
                .State = 1
            End With
            With .ControlEvents()
                .Events = Array("multiball_ccwiz_hurry_up")
                .State = 2
            End With
            .ResetEvents = Array("multiball_ccwiz_shoot_again_ended")
        End With



        With .Multiballs("ccwiz")
            .StartEvents = Array("timer_combo_command_message_complete")
            .BallCount = 5
            .BallCountType = "total"
            .ShootAgain = 20000
            .HurryUp = 3000
            .GracePeriod = 2000
        End With



        'Define combo command wizard shots

        For x = 1 to 8
            With .Shots("combo_command"&x)
                .Profile = "combo_command"
                With .Tokens()
                    .Add "lights", MainShotLightNames(x-1)
                    .Add "color", CombosColor
                End With
                With .ControlEvents()
                    .Events = Array("combo_command"&x&"_ready","mode_combo_command_wizard_started")
                    .State = 1
                End With
                With .ControlEvents()
                    .Events = Array(MainShotNames(x-1)&"_hit{current_player.shot_combo_command"&x&"==1}")
                    .State = 2
                End With
                '.RestartEvents = Array("restart_combos_command_shots")
            End With
        Next


        With .ShotProfiles("combo_command")
            With .States("unlit")
                .Show = "off"
                .Key = "key_ccwiz_off"
            End With
            With .States("ready")
                .Show = "flash_color"
                .Key = "key_ccwiz_ready"
                .Speed = 10
                With .Tokens()
                    .Add "color", CombosColor
                End With
            End With
            With .States("on")
                .Show = "led_color"
                .Key = "key_ccwiz_done"
                With .Tokens()
                    .Add "color", CombosColor
                End With
            End With
        End With

        With .ShotGroups("ccwiz_shots")
            .Shots = Array("combo_command1", "combo_command2", "combo_command3", "combo_command4", "combo_command5", "combo_command6", "combo_command7", "combo_command8")
            .RestartEvents = Array("restart_combos_command_shots")
        End With



        With .Timers("combo_command_message")
            .TickInterval = CCWizMessageInterval
            .StartValue = 0
            .EndValue = 3
            With .ControlEvents()
                .EventName = "mode_combo_command_wizard_started"
                .Action = "restart"
            End With
        End With

        With .Timers("ccwiz_bumper_lights")
            .TickInterval = 711  'one beat of the song
            .StartValue = 0
            .EndValue = 100000
            With .ControlEvents()
                .EventName = "mode_combo_command_wizard_started"
                .Action = "restart"
            End With
        End With


        With .VariablePlayer()
            With .EventName("mode_combo_command_wizard_started")
        With .Variable("wizard_combo_command_phase")
                    .Action = "set"
          .Int = 1
        End With
                With .Variable("wizard_mode_running")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName("mode_combo_command_wizard_stopping")
                With .Variable("wizard_mode_running")
                    .Action = "set"
          .Int = 0
        End With
      End With
            With .EventName("activate_ccwiz_sjp")
        With .Variable("ccwiz_super_jp")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName("ccwiz_sjp_achieved")
        With .Variable("wizard_combo_command_phase")
                    .Action = "set"
          .Int = 2
        End With
      End With
            With .EventName("activate_ccwiz_sdjp")
        With .Variable("ccwiz_super_jp")
                    .Action = "set"
          .Int = 2
        End With
      End With

    End With


        With .DOFPlayer()
            With .EventName("ccwiz_shot_phase1_show")
                .Action = "DOF_PULSE"
                .DOFEvent = 120
            End With
            With .EventName("ccwiz_shot_phase2_show1")
                .Action = "DOF_PULSE"
                .DOFEvent = 121
            End With
            With .EventName("ccwiz_shot_phase2_show2")
                .Action = "DOF_PULSE"
                .DOFEvent = 122
            End With
            With .EventName("ccwiz_shot_phase2_show3")
                .Action = "DOF_PULSE"
                .DOFEvent = 123
            End With
            With .EventName("ccwiz_shot_phase2_show4")
                .Action = "DOF_PULSE"
                .DOFEvent = 124
            End With
            With .EventName("ccwiz_shot_phase2_show5")
                .Action = "DOF_PULSE"
                .DOFEvent = 125
            End With
            With .EventName("ccwiz_shot_phase2_show6")
                .Action = "DOF_PULSE"
                .DOFEvent = 126
            End With
            With .EventName("ccwiz_shot_phase2_show7")
                .Action = "DOF_PULSE"
                .DOFEvent = 127
            End With
            With .EventName("ccwiz_shot_phase2_show8")
                .Action = "DOF_PULSE"
                .DOFEvent = 128
            End With

            With .EventName("ccwiz_sjp1_show1")
                .Action = "DOF_PULSE"
                .DOFEvent = 150
            End With
            With .EventName("ccwiz_sjp2_show1")
                .Action = "DOF_PULSE"
                .DOFEvent = 150
            End With
        End With


        With .ShowPlayer()
            'bumpers
            For x = 1 to 4
                With .EventName("s_Bumper"&x&"_active")
                    .Key = "key_bumper"&x&"_flash"
                    .Show = "flash_color_with_fade"
                    .Speed = 15
                    .Loops = 1
                    .Priority = 2000
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", "ffffff"
                        .Add "fade", 50
                    End With
                End With
            Next
            With .EventName("ccwiz_bumpers_show1")
                .Key = "key_bumpers_show1"
                .Show = "flash_color_fadeout"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "lights", "tBumper"
                    .Add "color", "555555"
                End With
            End With
            With .EventName("ccwiz_bumper1_show2")
                .Key = "key_bumper1_show2"
                .Show = "flash_color_fadeout"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LB1"
                    .Add "color", "555555"
                End With
            End With
            With .EventName("ccwiz_bumper2_show2")
                .Key = "key_bumper2_show2"
                .Show = "flash_color_fadeout"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LB2"
                    .Add "color", "555555"
                End With
            End With
            With .EventName("ccwiz_bumper3_show2")
                .Key = "key_bumper3_show2"
                .Show = "flash_color_fadeout"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LB3"
                    .Add "color", "555555"
                End With
            End With
            ' With .EventName("ccwiz_bumper4_show2")
            '     .Key = "key_bumper4_show2"
            '     .Show = "flash_color_fadeout"
            '     .Speed = 10
            '     .Loops = 1
            '     With .Tokens()
            '         .Add "lights", "LB4"
            '         .Add "color", "555555"
            '     End With
            ' End With


            'Phase 1 light shows
            With .EventName("ccwiz_shot_phase1_show")
                .Key = "key_ccwiz_shot_phase1_show"
                .Show = "insert_swap2"
                .Speed = 1.5
                .Loops = 3
                .Priority = 1000
                With .Tokens()
                    .Add "color1", "000000"
                    .Add "color2", CombosColor
                    .Add "intensity", 100
                End With
            End With
            With .EventName("ccwiz_flash_phase1_show")
                .Key = "key_ccwiz_flash_phase1_show"
                .Show = "flash_color_fadeout"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "lights", "tFlasher"
                    .Add "color", CombosColor
                End With
            End With


            'Phase 2 light shows
            With .EventName("ccwiz_shot_phase2_show1")
                .Key = "key_ccwiz_shot_phase2_show1"
                .Show = "insert_swap3"
                .Speed = 1.5
                .Loops = 3
                .Priority = 1000
                With .Tokens()
                    .Add "color1", "000000"
                    .Add "color2", CombosColor
                    .Add "color3", MeteorWaveColor
                    .Add "intensity", 100
                End With
            End With
            With .EventName("ccwiz_flash_phase2_show1")
                .Key = "key_ccwiz_flash_phase2_show1"
                .Show = "flash_color_fadeout"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "lights", "tFlasher"
                    .Add "color", MeteorWaveColor
                End With
            End With

            With .EventName("ccwiz_shot_phase2_show2")
                .Key = "key_ccwiz_shot_phase2_show2"
                .Show = "insert_swap3"
                .Speed = 1.5
                .Loops = 3
                .Priority = 1000
                With .Tokens()
                    .Add "color1", "000000"
                    .Add "color2", CombosColor
                    .Add "color3", TrainingColor
                    .Add "intensity", 100
                End With
            End With
            With .EventName("ccwiz_flash_phase2_show2")
                .Key = "key_ccwiz_flash_phase2_show2"
                .Show = "flash_color_fadeout"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "lights", "tFlasher"
                    .Add "color", TrainingColor
                End With
            End With

            With .EventName("ccwiz_shot_phase2_show3")
                .Key = "key_ccwiz_shot_phase2_show3"
                .Show = "insert_swap3"
                .Speed = 1.5
                .Loops = 3
                .Priority = 1000
                With .Tokens()
                    .Add "color1", "000000"
                    .Add "color2", CombosColor
                    .Add "color3", MoonColor
                    .Add "intensity", 100
                End With
            End With
            With .EventName("ccwiz_flash_phase2_show3")
                .Key = "key_ccwiz_flash_phase2_show3"
                .Show = "flash_color_fadeout"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "lights", "tFlasher"
                    .Add "color", MoonColor
                End With
            End With

            With .EventName("ccwiz_shot_phase2_show4")
                .Key = "key_ccwiz_shot_phase2_show4"
                .Show = "insert_swap3"
                .Speed = 1.5
                .Loops = 3
                .Priority = 1000
                With .Tokens()
                    .Add "color1", "000000"
                    .Add "color2", CombosColor
                    .Add "color3", HealthColor1
                    .Add "intensity", 100
                End With
            End With
            With .EventName("ccwiz_flash_phase2_show4")
                .Key = "key_ccwiz_flash_phase2_show4"
                .Show = "flash_color_fadeout"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "lights", "tFlasher"
                    .Add "color", HealthColor1
                End With
            End With

            With .EventName("ccwiz_shot_phase2_show5")
                .Key = "key_ccwiz_shot_phase2_show5"
                .Show = "insert_swap3"
                .Speed = 1.5
                .Loops = 3
                .Priority = 1000
                With .Tokens()
                    .Add "color1", "000000"
                    .Add "color2", CombosColor
                    .Add "color3", ProtonColor
                    .Add "intensity", 100
                End With
            End With
            With .EventName("ccwiz_flash_phase2_show5")
                .Key = "key_ccwiz_flash_phase2_show5"
                .Show = "flash_color_fadeout"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "lights", "tFlasher"
                    .Add "color", ProtonColor
                End With
            End With

            With .EventName("ccwiz_shot_phase2_show6")
                .Key = "key_ccwiz_shot_phase2_show6"
                .Show = "insert_swap3"
                .Speed = 1.5
                .Loops = 3
                .Priority = 1000
                With .Tokens()
                    .Add "color1", "000000"
                    .Add "color2", CombosColor
                    .Add "color3", ShieldsColor
                    .Add "intensity", 100
                End With
            End With
            With .EventName("ccwiz_flash_phase2_show6")
                .Key = "key_ccwiz_flash_phase2_show6"
                .Show = "flash_color_fadeout"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "lights", "tFlasher"
                    .Add "color", ShieldsColor
                End With
            End With

            With .EventName("ccwiz_shot_phase2_show7")
                .Key = "key_ccwiz_shot_phase2_show7"
                .Show = "insert_swap3"
                .Speed = 1.5
                .Loops = 3
                .Priority = 1000
                With .Tokens()
                    .Add "color1", "000000"
                    .Add "color2", CombosColor
                    .Add "color3", ShipSaveColor
                    .Add "intensity", 100
                End With
            End With
            With .EventName("ccwiz_flash_phase2_show7")
                .Key = "key_ccwiz_flash_phase2_show7"
                .Show = "flash_color_fadeout"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "lights", "tFlasher"
                    .Add "color", ShipSaveColor
                End With
            End With

            With .EventName("ccwiz_shot_phase2_show8")
                .Key = "key_ccwiz_shot_phase2_show8"
                .Show = "insert_swap3"
                .Speed = 1.5
                .Loops = 3
                .Priority = 1000
                With .Tokens()
                    .Add "color1", "000000"
                    .Add "color2", CombosColor
                    .Add "color3", ClusterBombColor
                    .Add "intensity", 100
                End With
            End With
            With .EventName("ccwiz_flash_phase2_show8")
                .Key = "key_ccwiz_flash_phase2_show8"
                .Show = "flash_color_fadeout"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "lights", "tFlasher"
                    .Add "color", ClusterBombColor
                End With
            End With

            'Super jackpot 1 shows
            With .EventName("ccwiz_sjp1_show1")
                .Key = "key_ccwiz_sjp1_show1"
                .Show = "insert_gi_spin_center"
                .Speed = 2
                .Loops = 4
                .Priority = 1000
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", CombosColor
                End With
            End With
            With .EventName("ccwiz_sjp1_show2")
                .Key = "key_ccwiz_sjp1_show2"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 5
                With .Tokens()
                    .Add "lights", "tFlasher"
                    .Add "color", CombosColor
                End With
            End With

            'Super jackpot 2 shows
            With .EventName("ccwiz_sjp2_show1")
                .Key = "key_ccwiz_sjp2_show1"
                .Show = "insert_gi_spin_center"
                .Speed = 2
                .Loops = 4
                .Priority = 1000
                .EventsWhenCompleted = Array("ccwiz_finalize")
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", MeteorHotColor
                End With
            End With
            With .EventName("ccwiz_sjp2_show2")
                .Key = "key_ccwiz_sjp2_show2"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 5
                With .Tokens()
                    .Add "lights", "tFlasher"
                    .Add "color", MeteorWaveColor
                End With
            End With


        End With


        With .SegmentDisplayPlayer()
            With .EventName("mode_combo_command_wizard_started")
                With .Display("player1")
                    .Text = """ COMBO """
                    .Expire = CCWizMessageInterval
                End With
                With .Display("player2")
                    .Text = """COMMAND"""
                    .Expire = CCWizMessageInterval
                End With
                With .Display("player3")
                    .Text = """ WIZARD """
                    .Expire = CCWizMessageInterval
                End With
                With .Display("player4")
                    .Text = """  MODE  """
                    .Expire = CCWizMessageInterval
                End With
            End With

            With .EventName("timer_combo_command_message_tick{devices.timers.combo_command_message.ticks == 1}")
                With .Display("player1")
                    .Text = """"""
                    .Expire = CCWizMessageInterval
                End With
                With .Display("player2")
                    .Text = """   EB   """
                    .Flashing = "all"
                    .Expire = CCWizMessageInterval
                End With
                With .Display("player3")
                    .Text = """  ADDED """
                    .Flashing = "all"
                    .Expire = CCWizMessageInterval
                End With
                With .Display("player4")
                    .Text = """"""
                    .Expire = CCWizMessageInterval
                End With
            End With

            With .EventName("timer_combo_command_message_tick{devices.timers.combo_command_message.ticks == 2}")
                With .Display("player1")
                    .Text = """"""
                    .Expire = CCWizMessageInterval
                End With
                With .Display("player2")
                    .Text = """HIT ALL"""
                    .Flashing = "all"
                    .Expire = CCWizMessageInterval
                End With
                With .Display("player3")
                    .Text = """  SHOTS """
                    .Flashing = "all"
                    .Expire = CCWizMessageInterval
                End With
                With .Display("player4")
                    .Text = """"""
                    .Expire = CCWizMessageInterval
                End With
            End With

        End With


    End With

End Sub


'Combos Mode.

'The combo meter is just above the health meter and contains 8 lights
'Every time one of the combo shots is hit, it adds to the combo meter
'If a combo shot is not hit within a certain time period, the combo meter goes backt zero
'If the combo meter gets fully lit (all 8 lights), then Combo Command mini wizard mode starts.


Sub CreateCombosMode
    Dim x

    With CreateGlfMode("combos", 530)
        .StartEvents = Array("new_ball_started","stop_meteor_wave","training_stopped","wizard_mode_ended")
        .StopEvents = Array("stop_combos","mode_base_stopping","init_training","wizard_mode_started")

        With .EventPlayer()
            'init and reset
            .Add "mode_combos_started", Array("reset_combos")
            .Add "mode_combos_started{current_player.ball_just_started==1}", Array("clear_relaxed_combos")
            .Add "timer_combos_complete", Array("restart_decay_timer","check_subtract_combos")
            .Add "timer_decay_combos_complete", Array("check_subtract_combos")
            'handle when valid shot is hit
            .Add MainShotNames(0)&"_hit", Array("restart_c_timer","check_add_combos")
            .Add MainShotNames(1)&"_hit", Array("restart_c_timer","check_add_combos")
            .Add MainShotNames(2)&"_hit", Array("restart_c_timer","check_add_combos")
            .Add MainShotNames(3)&"_hit", Array("restart_c_timer","check_add_combos")
            .Add MainShotNames(4)&"_hit", Array("restart_c_timer","check_add_combos")
            .Add MainShotNames(5)&"_hit", Array("restart_c_timer","check_add_combos")
            .Add MainShotNames(6)&"_hit", Array("restart_c_timer","check_add_combos")
            .Add MainShotNames(7)&"_hit", Array("restart_c_timer","check_add_combos")
            .Add "check_add_combos{current_player.combos_value==0}", Array("add_combos")
            .Add "check_add_combos{current_player.combos_value==1}", Array("combos1_lit","add_combos","replay_sfx_combo","flash_combos","score_2000")
            .Add "check_add_combos{current_player.combos_value==2}", Array("combos2_lit","add_combos","replay_sfx_combo","flash_combos","score_4000")
            .Add "check_add_combos{current_player.combos_value==3}", Array("combos3_lit","add_combos","replay_sfx_combo","flash_combos","score_10000")
            .Add "check_add_combos{current_player.combos_value==4}", Array("combos4_lit","add_combos","replay_sfx_combo","flash_combos","score_20000")
            .Add "check_add_combos{current_player.combos_value==5}", Array("combos5_lit","add_combos","replay_sfx_combo","flash_combos","score_50000")
            .Add "check_add_combos{current_player.combos_value==6}", Array("combos6_lit","add_combos","replay_sfx_combo","flash_combos","score_150000")
            .Add "check_add_combos{current_player.combos_value==7}", Array("combos7_lit","add_combos","replay_sfx_combo","flash_combos","score_500000")
            .Add "check_add_combos{current_player.combos_value==8}", Array("combos8_lit","check_combo_command_wizard","replay_sfx_combo","flash_combos","score_1000000")
            .Add "check_combo_command_wizard{current_player.shot_combo_command_wizard == 0}", Array("activate_combo_command_wizard")
            'handle combo decay
            .Add "check_subtract_combos{current_player.combos_value==8}", Array("combos8_unlit","subtract_combos","restart_decay_timer")
            .Add "check_subtract_combos{current_player.combos_value==7}", Array("combos7_unlit","subtract_combos","restart_decay_timer")
            .Add "check_subtract_combos{current_player.combos_value==6}", Array("combos6_unlit","subtract_combos","restart_decay_timer")
            .Add "check_subtract_combos{current_player.combos_value==5}", Array("combos5_unlit","subtract_combos","restart_decay_timer")
            .Add "check_subtract_combos{current_player.combos_value==4}", Array("combos4_unlit","subtract_combos","restart_decay_timer")
            .Add "check_subtract_combos{current_player.combos_value==3}", Array("combos3_unlit","subtract_combos","restart_decay_timer")
            .Add "check_subtract_combos{current_player.combos_value==2}", Array("combos2_unlit","subtract_combos","restart_decay_timer")
            .Add "check_subtract_combos{current_player.combos_value==1}", Array("combos1_unlit","reset_combos")
            'handle mystery award
            .Add "mystery_relaxed_combos", Array("flash_combos")
            'handle sound effect
            .Add "replay_sfx_combo", Array("stop_sfx_combo")
            .Add "stop_sfx_combo", Array("play_sfx_combo")
        End With

        With .SoundPlayer()
            With .EventName("play_sfx_combo")
                .Key = "key_sfx_combo"
                .Sound = "sfx_combo"
            End With
            With .EventName("stop_sfx_combo")
                .Key = "key_sfx_combo"
                .Sound = "sfx_combo"
                .Action = "stop"
            End With
        End With


        With .ShowPlayer()
            For x = 1 to 8
                With .EventName(MainShotNames(x-1)&"_hit{current_player.combos_value>0}")
                    .Key = "key_combo"&x
                    .Show = "flash_color"
                    .Speed = 15
                    .Loops = 5
                    With .Tokens()
                        .Add "lights", MainShotLightNames(x-1)
                        .Add "color", CombosColor
                    End With
                End With
            Next

            With .EventName("flash_combos")
                .Key = "key_combos_relaxed"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 7
                With .Tokens()
                    .Add "lights", "tCombos"
                    .Add "color", CombosColor
                End With
            End With
        End With


        'Define combo meter shots
        For x = 1 to 8
            With .Shots("combo"&x&"_meter_light")
                .Profile = "off_on_color"
                With .Tokens()
                    .Add "lights", "LC"&x
                    .Add "color", CombosColor
                End With
                With .ControlEvents()
                    .Events = Array("combos"&x&"_lit")
                    .State = 1
                End With
                .RestartEvents = Array("combos"&x&"_unlit","reset_combos")
            End With

            With .ShowPlayer()
                With .EventName("combos"&x&"_lit")
                    .Key = "key_combo"&x&"_charged"
                    .Show = "flash_color"
                    .Speed = 15
                    .Loops = 5
                    With .Tokens()
                        .Add "lights", "LC"&x
                        .Add "color", CombosColor
                    End With
                End With
            End With
        Next


        With .Timers("combos")
            .TickInterval = CombosTickInterval
            .StartValue = 0
            .EndValue = "current_player.combo_ticks"
            With .ControlEvents()
                .EventName = "restart_c_timer"
                .Action = "restart"
            End With
        End With

        With .Timers("decay_combos")
            .TickInterval = CombosDecayTickInterval
            .StartValue = 0
            .EndValue = "current_player.combo_decay_ticks"
            With .ControlEvents()
                .EventName = "restart_decay_timer"
                .Action = "restart"
            End With
            With .ControlEvents()
                .EventName = "restart_c_timer"
                .Action = "stop"
            End With
        End With


        With .VariablePlayer()
            'combos_value
        With .EventName("reset_combos")
        With .Variable("combos_value")
                    .Action = "set"
          .Int = 0
        End With
      End With
            With .EventName("add_combos")
        With .Variable("combos_value")
                    .Action = "add"
          .Int = 1
        End With
      End With
            With .EventName("subtract_combos")
        With .Variable("combos_value")
                    .Action = "add"
          .Int = -1
        End With
      End With
            With .EventName("mystery_relaxed_combos") 'mystery award (lasts the rest of the ball)
        With .Variable("combo_ticks")
                    .Action = "set"
          .Int = CombosTickLimitRelaxed
        End With
                With .Variable("combo_decay_ticks")
                    .Action = "set"
          .Int = CombosDecayTickLimitRelaxed
        End With
      End With
            With .EventName("clear_relaxed_combos") 'clear mystery award
        With .Variable("combo_ticks")
                    .Action = "set"
          .Int = CombosTickLimit
        End With
                With .Variable("combo_decay_ticks")
                    .Action = "set"
          .Int = CombosDecayTickLimit
        End With
      End With
        End With


    End With

End Sub


'Double Scoring Mode.


Sub CreateDoubleScoringMode

    With CreateGlfMode("double_scoring", 700)
        .StartEvents = Array("start_double_scoring","mystery_double_scoring")
        .StopEvents = Array("mode_base_stopping","stop_double_scoring","init_training")


        With .EventPlayer()
            'stop double scoring after some timer period
            .Add "timer_double_scoring_complete", Array("stop_double_scoring")
        End With

        With .SoundPlayer()
            With .EventName("mode_double_scoring_started")
                .Key = "key_sfx_LDS"
                .Sound = "sfx_LDS"
            End With
        End With

        With .Shots("double_scoring")
            .Profile = "double_scoring"
            With .ControlEvents()
                .Events = Array("mode_double_scoring_started")
                .State = 1
            End With
            With .ControlEvents()
                .Events = Array("timer_double_scoring_tick{devices.timers.double_scoring.ticks == "&(DoubleScoringMaxTicks-5)&"}")
                .State = 2
            End With
            .ResetEvents = Array("mode_double_scoring_stopping")
        End With

        With .ShotProfiles("double_scoring")
            With .States("unlit")
                .Show = "off"
                .Key = "key_off_ds"
                With .Tokens()
                    .Add "lights", "LDS"
                    .Add "color", DoubleScoringColor
                End With
            End With
            With .States("flashing")
                .Show = "flash_color_with_fade"
                .Key = "key_flashing_ds"
                .Speed = 2
                With .Tokens()
                    .Add "lights", "LDS"
                    .Add "fade", 500
                    .Add "color", DoubleScoringColor
                End With
            End With
            With .States("hurry")
                .Show = "flash_color"
                .Key = "key_hurry_ds"
                .Speed = 7
                With .Tokens()
                    .Add "lights", "LDS"
                    .Add "color", DoubleScoringColor
                End With
            End With
        End With

        With .Timers("double_scoring")
            .TickInterval = DoubleScoringTickInterval
            .StartValue = 0
            .EndValue = DoubleScoringMaxTicks
            With .ControlEvents()
                .EventName = "mode_double_scoring_started"
                .Action = "restart"
            End With
        End With


        With .VariablePlayer()
            With .EventName("mode_double_scoring_started")
                With .Variable("scoring_multiplier")
                    .Action = "set"
                    .Int = 2
                End With
            End With
            With .EventName("mode_double_scoring_stopping")
                With .Variable("scoring_multiplier")
                    .Action = "set"
                    .Int = 1
                End With
            End With
    End With


        With .SegmentDisplayPlayer()
            With .EventName("mode_double_scoring_started")
                With .Display("player1")
                    .Text = """"""
                    .Expire = DoubleScoringShowLength
                End With
                With .Display("player2")
                    .Text = """ DOUBLE """
                    .Flashing = "all"
                    .Expire = DoubleScoringShowLength
                End With
                With .Display("player3")
                    .Text = """SCORING"""
                    .Flashing = "all"
                    .Expire = DoubleScoringShowLength
                End With
                With .Display("player4")
                    .Text = """"""
                    .Expire = DoubleScoringShowLength
                End With
            End With
        End With


    End With

End Sub


'Extra Ball Mode.


Sub CreateExtraBallMode
    Dim x

    With CreateGlfMode("extra_ball", 560)
        .StartEvents = Array("new_ball_started","mode_meteor_wave_stopped","stop_training","wizard_mode_ended")
        .StopEvents = Array("stop_extra_ball","mode_base_stopping","start_training_select","wizard_mode_started") ',"start_meteor_wave"


        With .EventPlayer()
            'initialize the EB
            .Add "mode_extra_ball_started", Array("check_eb")
            .Add "check_eb{current_player.light_the_eb == 1 && current_player.flippers_are_dead==0}", Array("eb_now_lit","enable_scoop_hold")
            .Add "check_eb{current_player.extra_balls == 0}", Array("eb_reset")
            .Add "check_eb{current_player.extra_balls > 0}", Array("eb_lit")
            'handle successful scoop hit
            .Add "balldevice_scoop_ball_entered{current_player.shot_eb_ready == 0 && current_player.wizard_mode_is_ready==0}", Array("eb_complete") 'EB not available so move on
            .Add "balldevice_scoop_ball_entered{current_player.shot_eb_ready == 1 && current_player.wizard_mode_is_ready==0}", Array("play_eb_show","eb_achieved","score_200000") 'Collect the EB
            'only release the ball if mystery and training not also qualified (those use the scoop also)
            .Add "eb_complete{current_player.shot_mystery_ready==0 && current_player.shot_training_ready==0}", Array("release_scoop_hold")
            .Add "release_scoop_hold", Array("disable_scoop_hold","start_mwq_timer")
            .Add "eb_complete", Array("restart_eb","check_mystery") 'restart meteor wave countdown, move on to mystery mode
            'handle mystery award
            .Add "mystery_eb_is_lit", Array("eb_now_lit")
        End With

        With .SoundPlayer()
            With .EventName("eb_now_lit")
                .Key = "key_voc_extra_ball_ready"
                .Sound = "voc_extra_ball_ready"
            End With
        End With

        With .ExtraBalls("eb")
            .AwardEvents = Array("eb_achieved")
            .MaxPerGame = 3
        End With

        With .DOFPlayer()
            With .EventName("eb_achieved")
                .Action = "DOF_PULSE"
                .DOFEvent = 137
            End With
        End With


        With .ShowPlayer()
            With .EventName("play_eb_show")
                .Key = "key_eb_show"
                .Show = "eb_show"
                .Speed = 1
                .Loops = 1
                .Priority = 10000
                .EventsWhenCompleted = Array("eb_complete")
            End With
        End With

        'EB Ready
        With .Shots("eb_ready")
            .Profile = "qualified_shot"
            With .Tokens()
                .Add "lights", "LEBR"
                .Add "color", HealthColor1
            End With
            With .ControlEvents()
                .Events = Array("eb_now_lit")
                .State = 1
            End With
            .RestartEvents = Array("restart_eb")
        End With


        With .Shots("eb_shoot_again")
            .Profile = "extraball"
            With .ControlEvents()
                .Events = Array("eb_achieved","eb_lit")
                .State = 1
            End With
            .RestartEvents = Array("eb_reset")
        End With


        With .ShotProfiles("extraball")
            With .States("unlit")
                .Show = "off"
                .Key = "key_eb_unlit"
                With .Tokens()
                    .Add "lights", "LSA"
                End With
            End With
            With .States("lit")
                .Show = "led_color"
                .Key = "key_eb_lit"
                With .Tokens()
                    .Add "lights", "LSA"
                    .Add "color", ShipSaveColor
                End With
            End With
        End With


        With .VariablePlayer()
            With .EventName("eb_now_lit")
                With .Variable("light_the_eb")
                    .Action = "set"
                    .Int = 0
                End With
            End With
    End With


        With .SegmentDisplayPlayer()
            With .EventName("play_eb_show")
                With .Display("player1")
                    .Text = """"""
                    .Expire = EBShowLength
                End With
                With .Display("player2")
                    .Text = """ EXTRA """
                    .Flashing = "all"
                    .Expire = EBShowLength
                End With
                With .Display("player3")
                    .Text = """ BALL """
                    .Flashing = "all"
                    .Expire = EBShowLength
                End With
                With .Display("player4")
                    .Text = """"""
                    .Expire = EBShowLength
                End With
            End With
        End With


    End With

End Sub


'Final Wave Wizard Mode.

' Goal: hit asteroid 20 times (inner asteroid orbit and/or center standup target). Count displayed on playfield and backglass/apron.
' Wizard starts at scoop
' No time limit. EBs can be used. Starts with 5 ball MB. Add-a-ball at center orbit (upper flipper).
' 60 sec ball save to start
' Asteroid glow increases with each hit. All inserts start to glow red too.
' At about 30 sec the meteors start to pop up, only two up at a time max
' Once asteroid destroyed, flippers die. Huge light show and music. Then victory lap mode starts



Dim FWWizAsteroidColors
FWWizAsteroidColors = Array("0d0d0d","1a1a1a","272727","343434","414141","4e4e4e","5b5b5b","686868","757575","828282","8f8f8f","9c9c9c","a9a9a9","b6b6b6","c3c3c3","d0d0d0","dddddd","eaeaea","f7f7f7")


Sub CreateFinalWaveWizardMode
    Dim x

    With CreateGlfMode("final_wave_wizard", 4000)
        .StartEvents = Array("run_final_wave_wizard")
        .StopEvents = Array("ball_ending","stop_final_wave_wizard")

        With .EventPlayer()
            'start/restart wizard mode
            .Add "mode_final_wave_wizard_started{current_player.wizard_final_hit_count == "&FWWizMaxAsteroidHits&"}", Array("begin_fwwiz") 'start wizard mode
            .Add "mode_final_wave_wizard_started{current_player.wizard_final_hit_count < "&FWWizMaxAsteroidHits&"}", Array("continue_fwwiz","display_hit_count","update_asteroid_glow","fwwiz_music_start") 'continue wizard mode
            .Add "mode_final_wave_wizard_started", Array("meteor_wave_music_stop","turn_off_gi","final_flash1")
            .Add "mode_final_wave_wizard_stopping", Array("fwwiz_music_stop")
            'release the scoop ball to start the wizard mode
            .Add "timer_final_wave_message_complete", Array("fwwiz_music_start","release_scoop_hold","start_moon_multiball","delayed_release_moon_ball","display_hit_count")
            .Add "release_scoop_hold", Array("disable_scoop_hold")
            'add-a-ball
            .Add "left_ramp_hit{current_player.fwwiz_add_ball_ready == 1}", Array("fwwiz_add_ball")
            .Add "right_ramp_hit{current_player.fwwiz_add_ball_ready == 1}", Array("fwwiz_add_ball")
            .Add "left_ramp_hit{current_player.fwwiz_add_ball_ready == 2}", Array("fwwiz_add_ball_2")
            .Add "right_ramp_hit{current_player.fwwiz_add_ball_ready == 2}", Array("fwwiz_add_ball_2")
            'asteroid hits
            .Add "center_orbit_left_hit", Array("asteroid_hit")
            .Add "center_orbit_right_hit", Array("asteroid_hit")
            .Add "s_TargetMystery3_active", Array("asteroid_hit")
            .Add "asteroid_hit", Array("check_fwwiz_done","asteroid_flash3","asteroid_flicker1","play_asteroid_hit")
            .Add "asteroid_hit{current_player.wizard_final_hit_count > 0}", Array("update_hit_count")
            .Add "update_hit_count", Array("update_fwwiz_score")
            .Add "check_fwwiz_done{current_player.wizard_final_hit_count == 3}", Array("disable_fwwiz_mb","start_add_ball_fwwiz")
            .Add "check_fwwiz_done{current_player.wizard_final_hit_count <= 0}", Array("asteroid_destroyed","asteroid_off","fwwiz_music_stop")
            'nuke
            .Add "detonate_nuke.1", Array("update_hit_count","update_asteroid_glow","check_fwwiz_done")
            'asteroid glow
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 19}", Array("asteroid_temp1")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 18}", Array("asteroid_temp2")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 17}", Array("asteroid_temp3")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 16}", Array("asteroid_temp4")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 15}", Array("asteroid_temp5")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 14}", Array("asteroid_temp6")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 13}", Array("asteroid_temp7")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 12}", Array("asteroid_temp8")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 11}", Array("asteroid_temp9")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 10}", Array("asteroid_temp10")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 9}", Array("asteroid_temp11")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 8}", Array("asteroid_temp12")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 7}", Array("asteroid_temp13")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 6}", Array("asteroid_temp14")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 5}", Array("asteroid_temp15","start_asteroid_flicker")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 4}", Array("asteroid_temp16")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 3}", Array("asteroid_temp17")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 2}", Array("asteroid_temp18")
            .Add "update_asteroid_glow{current_player.wizard_final_hit_count == 1}", Array("asteroid_temp19")
            'update score
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 19}", Array("score_100000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 18}", Array("score_200000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 17}", Array("score_300000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 16}", Array("score_400000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 15}", Array("score_500000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 14}", Array("score_600000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 13}", Array("score_700000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 12}", Array("score_800000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 11}", Array("score_900000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 10}", Array("score_1000000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 9}", Array("score_1100000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 8}", Array("score_1200000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 7}", Array("score_1300000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 6}", Array("score_1400000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 5}", Array("score_1500000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 4}", Array("score_1600000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 3}", Array("score_1700000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 2}", Array("score_1800000")
            .Add "update_fwwiz_score{current_player.wizard_final_hit_count == 1}", Array("score_1900000")
            'add meteors. There should max of two meteors up at a time
            .Add "s_DTMeteor1_active{current_player.wizard_final_hit_count > 1}", Array("fwwiz_add_meteor","meteor1_explodes_show","meteor1_blink_show","score_100000") 'additional meteor
            .Add "s_DTMeteor2_active{current_player.wizard_final_hit_count > 1}", Array("fwwiz_add_meteor","meteor2_explodes_show","meteor2_blink_show","score_100000") 'additional meteor
            .Add "s_DTMeteor3_active{current_player.wizard_final_hit_count > 1}", Array("fwwiz_add_meteor","meteor3_explodes_show","meteor3_blink_show","score_100000") 'additional meteor
            .Add "s_DTMeteor4_active{current_player.wizard_final_hit_count > 1}", Array("fwwiz_add_meteor","meteor4_explodes_show","meteor4_blink_show","score_100000") 'additional meteor
            .Add "timer_fwwiz_add_meteor_complete{current_player.wizard_final_hit_count > 1}", Array("fwwiz_raise_meteor") 'additional meteor
            .Add "timer_fwwiz_start_meteors_complete", Array("fwwiz_raise_meteor") 'first meteor
            .Add "continue_fwwiz", Array("fwwiz_raise_meteor") 'first meteor
            'asteroid destroyed
            .Add "asteroid_destroyed", Array("knockdown_meteors","score_2000000","deactivate_nuke")
            '  explosion flippers
            .Add "timer_asteroid_explodes_tick{devices.timers.asteroid_explodes.ticks == 4}", Array("kill_flippers")
            .Add "timer_asteroid_explodes_complete", Array("enable_flippers","explosion_done")

            'handle GI light show
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 1}", Array("play_flash_gi09","play_flash_giapron")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 2}", Array("play_flash_gi06","play_flash_gi11","play_flash_gi21","play_flash_gi22","play_flash_gi12","play_flash_gi14")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 3}", Array("play_flash_gi03","play_flash_gi10","play_flash_gi18","play_flash_gi16")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 4}", Array("play_flash_gi08","play_flash_gi19","play_flash_gi20")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 5}", Array("play_flash_gi05","play_flash_gi09","play_flash_gi21","play_flash_gi13","play_flash_gi17")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 6}", Array("play_flash_gi02","play_flash_gi22","play_flash_gi16","play_flash_gi14")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 7}", Array("play_flash_gi07","play_flash_gi11","play_flash_gi15")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 8}", Array("play_flash_gi04","play_flash_gi10","play_flash_gi18","play_flash_gi17")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 9}", Array("play_flash_gi01","play_flash_gi19","play_flash_gi20","play_flash_giapron")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 10}", Array("play_flash_gi06","play_flash_gi21","play_flash_gi13","play_flash_gi12")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 11}", Array("play_flash_gi03","play_flash_gi09","play_flash_gi22","play_flash_gi16","play_flash_gi14")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 12}", Array("play_flash_gi08","play_flash_gi11","play_flash_gi17","play_flash_gi15")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 13}", Array("play_flash_gi05","play_flash_gi10","play_flash_gi18","play_flash_gi13")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 14}", Array("play_flash_gi02","play_flash_gi20","play_flash_gi22","play_flash_gi14")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 15}", Array("play_flash_gi07","play_flash_gi21","play_flash_gi15")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 16}", Array("play_flash_gi04","play_flash_gi09","play_flash_gi16")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 17}", Array("play_flash_gi01","play_flash_gi11","play_flash_giapron")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 18}", Array("play_flash_gi06","play_flash_gi19","play_flash_gi18","play_flash_gi17")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 19}", Array("play_flash_gi03","play_flash_gi20","play_flash_gi13")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 20}", Array("play_flash_gi09","play_flash_gi08","play_flash_gi21","play_flash_gi22","play_flash_gi12")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 21}", Array("play_flash_gi05","play_flash_gi11","play_flash_gi16","play_flash_gi14")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 22}", Array("play_flash_gi02","play_flash_gi10","play_flash_gi18","play_flash_gi15")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 23}", Array("play_flash_gi07","play_flash_gi19","play_flash_gi20","play_flash_gi17")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 24}", Array("play_flash_gi04","play_flash_gi09","play_flash_gi21","play_flash_gi13")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 25}", Array("play_flash_gi01","play_flash_gi11","play_flash_gi22","play_flash_gi16","play_flash_gi14","play_flash_giapron")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 26}", Array("play_flash_gi06","play_flash_gi10","play_flash_gi18","play_flash_gi15")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 27}", Array("play_flash_gi03","play_flash_gi19","play_flash_gi20","play_flash_gi17")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 28}", Array("play_flash_gi08","play_flash_gi13")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 29}", Array("play_flash_gi09","play_flash_gi05","play_flash_gi21","play_flash_gi22","play_flash_gi12")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 30}", Array("play_flash_gi02","play_flash_gi10","play_flash_gi11","play_flash_gi16","play_flash_gi14")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 31}", Array("play_flash_gi07","play_flash_gi18","play_flash_gi13")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 32}", Array("play_flash_gi04","play_flash_gi19","play_flash_gi20","play_flash_gi17")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 33}", Array("play_flash_gi01","play_flash_gi09","play_flash_gi21","play_flash_gi22","play_flash_giapron")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 34}", Array("play_flash_gi06","play_flash_gi10","play_flash_gi11","play_flash_gi16")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 35}", Array("play_flash_gi03","play_flash_gi19","play_flash_gi18","play_flash_gi15")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 36}", Array("play_flash_gi08","play_flash_gi20","play_flash_gi13","play_flash_gi17")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 37}", Array("play_flash_gi05","play_flash_gi21","play_flash_gi22","play_flash_gi14")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 38}", Array("play_flash_gi02","play_flash_gi10","play_flash_gi18","play_flash_gi16","play_flash_gi15")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 39}", Array("play_flash_gi07","play_flash_gi20","play_flash_gi17")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 40}", Array("play_flash_gi09","play_flash_gi19","play_flash_gi21","play_flash_gi12")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 41}", Array("play_flash_gi04","play_flash_gi11","play_flash_gi13","play_flash_gi22","play_flash_giapron")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 42}", Array("play_flash_gi01","play_flash_gi10","play_flash_gi18","play_flash_gi16","play_flash_gi14")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 43}", Array("play_flash_gi06","play_flash_gi20","play_flash_gi17","play_flash_gi15")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 44}", Array("play_flash_gi03","play_flash_gi09")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 45}", Array("play_flash_gi08","play_flash_gi11","play_flash_gi19","play_flash_gi21")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 46}", Array("play_flash_gi05","play_flash_gi10","play_flash_gi13","play_flash_gi16")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 47}", Array("play_flash_gi02","play_flash_gi18","play_flash_gi22","play_flash_gi14")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 48}", Array("play_flash_gi07","play_flash_gi20","play_flash_gi17")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 49}", Array("play_flash_gi09","play_flash_gi19","play_flash_gi21","play_flash_gi12")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 50}", Array("play_flash_gi04","play_flash_gi11","play_flash_gi13","play_flash_gi22","play_flash_giapron")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 51}", Array("play_flash_gi01","play_flash_gi10","play_flash_gi18","play_flash_gi16","play_flash_gi14")
            .Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 52}", Array("play_flash_gi06","play_flash_gi20","play_flash_gi17","play_flash_gi15")

            'handle asteroid flicker show
            .Add "timer_final_wave_flicker_tick{devices.timers.final_wave_flicker.ticks == 1}", Array("play_asteroid_flicker")
            .Add "timer_final_wave_flicker_tick{devices.timers.final_wave_flicker.ticks == 7}", Array("play_asteroid_flicker")
            .Add "timer_final_wave_flicker_tick{devices.timers.final_wave_flicker.ticks == 10}", Array("play_asteroid_flicker")
            .Add "timer_final_wave_flicker_tick{devices.timers.final_wave_flicker.ticks == 15}", Array("play_asteroid_flicker")
            .Add "timer_final_wave_flicker_tick{devices.timers.final_wave_flicker.ticks == 22}", Array("play_asteroid_flicker")
            .Add "timer_final_wave_flicker_tick{devices.timers.final_wave_flicker.ticks == 24}", Array("play_asteroid_flicker")
            .Add "timer_final_wave_flicker_tick{devices.timers.final_wave_flicker.ticks == 29}", Array("play_asteroid_flicker")

            'Handle moon ramp
            .Add "balldevice_moon_lock_ball_enter", Array("delayed_release_moon_ball")
            .Add "ball_search_started", Array("release_moon_ball")

        End With


        With .RandomEventPlayer()
            With .EventName("fwwiz_raise_meteor")
                .Add "meteor1_raise{current_player.shot_fwwiz_meteor1 == 0}", 1
                .Add "meteor2_raise{current_player.shot_fwwiz_meteor2 == 0}", 1
                .Add "meteor3_raise{current_player.shot_fwwiz_meteor3 == 0}", 1
                .Add "meteor4_raise{current_player.shot_fwwiz_meteor4 == 0}", 1
                .ForceAll = False
                .ForceDifferent = True
            End With
            With .EventName("play_asteroid_flicker")
                .Add "asteroid_flicker1", 1
                .Add "asteroid_flicker2", 1
                .Add "asteroid_flicker3", 1
                .Add "asteroid_flicker4", 1
                .ForceAll = False
                .ForceDifferent = False
            End With
            With .EventName("asteroid_hit")
                .Add "play_sfx_LMet1", 1
                .Add "play_sfx_LMet2", 1
                .Add "play_sfx_LMet3", 1
                .Add "play_sfx_LMet4", 1
                .Add "play_sfx_LMet5", 1
                .Add "play_sfx_LMet6", 1
                .Add "play_sfx_LMet7", 1
                '.Add "play_sfx_LMet8", 1
                .ForceAll = False
                .ForceDifferent = False
            End With
        End With

        With .QueueRelayPlayer()
            With .EventName("balldevice_trough_ball_eject_attempt{modes.final_wave_wizard.active && current_player.wizard_final_hit_count == 0}")
                .Post = "awaiting_wizard_show"
                .WaitFor = "explosion_done"
            End With
        End With


        With .Multiballs("fwwiz")
            .StartEvents = Array("timer_final_wave_message_complete")
            .DisableEvents = Array("asteroid_destroyed","disable_fwwiz_mb")
            .BallCount = 5
            .BallCountType = "total"
            .ShootAgain = FWWizBallSaveTime
            .HurryUp = 5000
            .GracePeriod = 500
        End With

        With .Multiballs("fwwiz_2")
            .StartEvents = Array("fwwiz_add_ball")
            .DisableEvents = Array("asteroid_destroyed")
            .AddABallEvents = Array("fwwiz_add_ball_2")
            .BallCount = 1
            .BallCountType = "add"
            .ShootAgain = 0
            .HurryUp = 0
            .GracePeriod = 0
        End With


        With .Shots("fwwiz_shoot_again")
            .Profile = "shoot_again"
            With .Tokens()
                .Add "color", HealthColor2
            End With
            With .ControlEvents()
                .Events = Array("begin_fwwiz")
                .State = 1
            End With
            With .ControlEvents()
                .Events = Array("multiball_fwwiz_hurry_up")
                .State = 2
            End With
            .ResetEvents = Array("multiball_fwwiz_shoot_again_ended")
        End With


        'Define final wave wizard shots
        With .Shots("asteroid")
            .Profile = "asteroid"
            With .ControlEvents()
                .Events = Array("timer_final_wave_message_tick{devices.timers.final_wave_message.ticks == 2}","continue_fwwiz")
                .State = 1
            End With
            .RestartEvents = Array("mode_final_wave_wizard_stopping")
        End With

        For x = 1 to 4
            With .Shots("fwwiz_meteor"&x)
                .Profile = "fwwiz_meteor"
                With .Tokens()
                    .Add "lights", "LMet"&x
                End With
                With .ControlEvents()
                    .Events = Array("meteor"&x&"_raise")
                    .State = 1
                End With
                .RestartEvents = Array("s_DTMeteor"&x&"_active")
            End With
        Next


        With .ShotProfiles("asteroid")
            With .States("unlit")
                .Show = "off"
                .Key = "key_fwwiz_off"
                With .Tokens()
                    .Add "lights", "tFire"
                End With
            End With
            With .States("ready")
                .Show = "flash_color"
                .Key = "key_fwwiz_ready"
                .Speed = 8
                With .Tokens()
                    .Add "lights", "tFire"
                    .Add "color", MeteorWaveColor
                End With
            End With
        End With

        With .ShotProfiles("fwwiz_meteor")
            With .States("unlit")
                .Show = "off"
                .Key = "key_fwwiz_off"
            End With
            With .States("ready")
                .Show = "flash_color"
                .Key = "key_fwwiz_ready"
                .Speed = 8
                With .Tokens()
                    .Add "color", MeteorHotColor
                End With
            End With
        End With


        With .DOFPlayer()
            With .EventName("play_asteroid_hit")
                .Action = "DOF_PULSE"
                .DOFEvent = 152
            End With
            With .EventName("asteroid_destroyed")
                .Action = "DOF_PULSE"
                .DOFEvent = 153
            End With
        End With


        With .ShowPlayer()

            'asteroid hit shows
            With .EventName("play_asteroid_hit")
                .Key = "key_asteroid_hit"
                .Show = "asteroid_hit"
                .Speed = 1
                .Loops = 1
            End With
            With .EventName("asteroid_flash3")
                .Key = "key_asteroid_flash3"
                .Show = "flash_color_fadeout"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "lights", "tFlasherU"
                    .Add "color", GIColor3000k
                End With
            End With
            With .EventName("asteroid_flicker1")
                .Key = "key_asteroid_flicker1"
                .Show = "flicker_color"
                .Speed = 5
                .Loops = 1
                .EventsWhenCompleted = Array("update_asteroid_glow")
                With .Tokens()
                    .Add "lights", "tAsteroid"
                    .Add "color", "ffffff"
                End With
            End With
            With .EventName("asteroid_flicker2")
                .Key = "key_asteroid_flicker2"
                .Show = "flicker_color"
                .Speed = 8
                .Loops = 2
                .EventsWhenCompleted = Array("update_asteroid_glow")
                With .Tokens()
                    .Add "lights", "tAsteroid"
                    .Add "color", "ffffff"
                End With
            End With
            With .EventName("asteroid_flicker3")
                .Key = "key_asteroid_flicker3"
                .Show = "flicker2_color"
                .Speed = 4
                .Loops = 1
                .EventsWhenCompleted = Array("update_asteroid_glow")
                With .Tokens()
                    .Add "lights", "tAsteroid"
                    .Add "color", "ffffff"
                End With
            End With
            With .EventName("asteroid_flicker4")
                .Key = "key_asteroid_flicker4"
                .Show = "flicker2_color"
                .Speed = 7
                .Loops = 2
                .EventsWhenCompleted = Array("update_asteroid_glow")
                With .Tokens()
                    .Add "lights", "tAsteroid"
                    .Add "color", "ffffff"
                End With
            End With


            With .EventName("asteroid_destroyed")
                .Key = "key_asteroid_explodes_show"
                .Show = "asteroid_explodes_show"
                .Loops = 1
            End With


            'GI flashes
            For x = 1 to 9
                With .EventName("play_flash_gi0"&x)
                    .Key = "key_flash_gi0"&x
                    .Show = "flash_color_fadeout"
                    .Speed = 3
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "gi0"&x
                        .Add "color", GIColor3000k
                    End With
                End With
            Next
            For x = 10 to 22
                With .EventName("play_flash_gi"&x)
                    .Key = "key_flash_gi"&x
                    .Show = "flash_color_fadeout"
                    .Speed = 3
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "gi"&x
                        .Add "color", GIColor3000k
                    End With
                End With
            Next
            With .EventName("play_flash_giapron")
                .Key = "key_flash_giapron"
                .Show = "flash_color_fadeout"
                .Speed = 3
                .Loops = 1
                With .Tokens()
                    .Add "lights", "giapron"
                    .Add "color", GIColor3000k
                End With
            End With

            'Meteor hits
            For x = 1 to 4
                With .EventName("meteor"&x&"_explodes_show")
                    .Key = "key_meteor"&x&"_explodes"
                    .Show = "meteor"&x&"_explodes"
                    .Speed = 1
            .Loops = 1
                    With .Tokens()
                        .Add "color", "ffffff"
                    End With
                End With
                With .EventName("meteor"&x&"_blink_show")
                    .Key = "key_meteor"&x&"_blink"
                    .Show = "flash_color"
                    .Speed = 22
                    .Loops = 4
                    With .Tokens()
                        .Add "lights", "LMet"&x
                        .Add "color", "ff1100"
                    End With
                End With
            Next

            With .EventName("final_flash1")
                .Key = "key_final_flash3"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 6
                With .Tokens()
                    .Add "lights", "tFlasher"
                    .Add "color", MeteorFlashColor
                End With
            End With

            'bumpers
            For x = 1 to 4
                With .EventName("s_Bumper"&x&"_active")
                    .Key = "key_bumper"&x&"_flash"
                    .Show = "flash_color_with_fade"
                    .Speed = 15
                    .Loops = 1
                    .Priority = 2000
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", MeteorHotColor
                        .Add "fade", 50
                    End With
                End With
            Next
        End With


        With .SoundPlayer()
            With .EventName("asteroid_destroyed")
                .Key = "key_sfx_final_explosion"
                .Sound = "sfx_final_explosion"
            End With
            With .EventName("begin_fwwiz")
                .Key = "key_sfx_final_wave_scoop"
                .Sound = "sfx_final_wave_scoop"
            End With
        End With


        With .VariablePlayer()
            With .EventName("mode_final_wave_wizard_started")
                With .Variable("wizard_mode_running")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName("mode_final_wave_wizard_stopping")
                With .Variable("wizard_mode_running")
                    .Action = "set"
          .Int = 0
        End With
      End With
            With .EventName("asteroid_hit{current_player.wizard_final_hit_count > 0}")
        With .Variable("wizard_final_hit_count")
                    .Action = "add"
          .Int = -1
        End With
      End With
            With .EventName("detonate_nuke.3")
        With .Variable("wizard_final_hit_count")
                    .Action = "add"
          .Int = -10
        End With
      End With
            With .EventName("detonate_nuke.2{current_player.wizard_final_hit_count < 0}")
        With .Variable("wizard_final_hit_count")
                    .Action = "set"
          .Int = 0
        End With
      End With
            With .EventName("multiball_fwwiz_shoot_again_ended")
        With .Variable("fwwiz_add_ball_ready")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName("continue_fwwiz")
        With .Variable("fwwiz_add_ball_ready")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName("start_add_ball_fwwiz")
        With .Variable("fwwiz_add_ball_ready")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName("fwwiz_add_ball")
        With .Variable("fwwiz_add_ball_ready")
                    .Action = "set"
          .Int = 2
        End With
      End With
            With .EventName("multiball_fwwiz_2_ended")
        With .Variable("fwwiz_add_ball_ready")
                    .Action = "set"
          .Int = 1
        End With
      End With
    End With


        With .Timers("final_wave_message")
            .TickInterval = CCWizMessageInterval
            .StartValue = 0
            .EndValue = 3
            With .ControlEvents()
                .EventName = "begin_fwwiz"
                .Action = "restart"
            End With
        End With
        With .Timers("fwwiz_start_meteors")
            .TickInterval = FWWizStartMeteorsInterval
            .StartValue = 0
            .EndValue = 1
            With .ControlEvents()
                .EventName = "timer_final_wave_message_complete"
                .Action = "restart"
            End With
        End With
        With .Timers("fwwiz_add_meteor")
            .TickInterval = 400
            .StartValue = 0
            .EndValue = 2
            With .ControlEvents()
                .EventName = "timer_fwwiz_start_meteors_complete"
                .Action = "restart"
            End With
            With .ControlEvents()
                .EventName = "continue_fwwiz"
                .Action = "restart"
            End With
            With .ControlEvents()
                .EventName = "fwwiz_add_meteor"
                .Action = "restart"
            End With
        End With
        With .Timers("asteroid_explodes")
            .TickInterval = 200
            .StartValue = 0
            .EndValue = 50
            With .ControlEvents()
                .EventName = "asteroid_destroyed"
                .Action = "start"
            End With
        End With
        With .Timers("final_wave_gi")
            .TickInterval = 500
            .StartValue = 0
            .EndValue = 53
            With .ControlEvents()
                .EventName = "mode_final_wave_wizard_started"
                .Action = "restart"
            End With
            With .ControlEvents()
                .EventName = "timer_final_wave_gi_complete"
                .Action = "restart"
            End With
            With .ControlEvents()
                .EventName = "asteroid_destroyed"
                .Action = "stop"
            End With
        End With
        With .Timers("final_wave_flicker")
            .TickInterval = 1000
            .StartValue = 0
            .EndValue = 30
            With .ControlEvents()
                .EventName = "start_asteroid_flicker"
                .Action = "restart"
            End With
            With .ControlEvents()
                .EventName = "timer_final_wave_flicker_complete"
                .Action = "restart"
            End With
            With .ControlEvents()
                .EventName = "asteroid_destroyed"
                .Action = "stop"
            End With
        End With




        With .SegmentDisplayPlayer()
            With .EventName("begin_fwwiz")
                With .Display("player1")
                    .Text = """  THE  """
                    .Expire = FWWizMessageInterval
                End With
                With .Display("player2")
                    .Text = """ FINAL """

                    .Expire = FWWizMessageInterval
                End With
                With .Display("player3")
                    .Text = """  WAVE  """
                    .Expire = FWWizMessageInterval
                End With
                With .Display("player4")
                    .Text = """IS HERE """
                    .Expire = FWWizMessageInterval
                End With
            End With

            With .EventName("timer_final_wave_message_tick{devices.timers.final_wave_message.ticks == 1}")
                With .Display("player1")
                    .Text = """ RAMPS """
                    .Flashing = "all"
                    .Expire = FWWizMessageInterval
                End With
                With .Display("player2")
                    .Text = """ ADD A  """
                    .Flashing = "all"
                    .Expire = FWWizMessageInterval
                End With
                With .Display("player3")
                    .Text = """  BALL  """
                    .Flashing = "all"
                    .Expire = FWWizMessageInterval
                End With
                With .Display("player4")
                    .Text = """"""
                    .Flashing = "all"
                    .Expire = FWWizMessageInterval
                End With
            End With

            With .EventName("timer_final_wave_message_tick{devices.timers.final_wave_message.ticks == 2}")
                With .Display("player1")
                    .Text = """--------"""
                    .Expire = FWWizMessageInterval
                End With
                With .Display("player2")
                    .Text = """DESTROY"""
                    .Flashing = "all"
                    .Expire = FWWizMessageInterval
                End With
                With .Display("player3")
                    .Text = """ASTEROID"""
                    .Flashing = "all"
                    .Expire = FWWizMessageInterval
                End With
                With .Display("player4")
                    .Text = """--------"""
                    .Expire = FWWizMessageInterval
                End With
            End With

            With .EventName("display_hit_count")
                With .Display("player1")
                    .Text = """--------"""
                End With
                With .Display("player2")
                    .Text = """HITSLEFT"""
                End With
                With .Display("player3")
                    .Text = "{current_player.wizard_final_hit_count:0>2}"
                    .Flashing = "all"
                End With
                With .Display("player4")
                    .Text = """--------"""
                End With
                With .Display("pf")
                    .Text = "{current_player.wizard_final_hit_count:0>2}"
                    .Flashing = "all"
                End With
            End With

            With .EventName("update_hit_count")
                With .Display("player3")
                    .Text = "{current_player.wizard_final_hit_count:0>2}"
                    .Flashing = "all"
                End With
                With .Display("pf")
                    .Text = "{current_player.wizard_final_hit_count:0>2}"
                    .Flashing = "all"
                End With
            End With

        End With


        With .LightPlayer()
            With .EventName("mode_final_wave_wizard_started")
        With .Lights("GI")
          .Color = "000000"
        End With
      End With
            ' With .EventName("mode_final_wave_wizard_stopping")
            '     With .Lights("GI")
            '         .Color = GIColor3000k
            '     End With
            ' End With

            With .EventName("asteroid_off")
                With .Lights("tAsteroid")
                    .Color = "000000"
                End With
            End With
            For x = 1 to 19
                With .EventName("asteroid_temp"&x)
                    With .Lights("tAsteroid")
                        .Color = FWWizAsteroidColors(x-1)
                    End With
                End With
            Next

        End With


    End With

End Sub


'Fully Loaded Wizard Mode.

'EB is added. All fully loaded shot lights are lit flashing. Short ball saver is started (10 sec).
'5 ball multiball starts. Mode lasts as long as ball lasts, or until the super jacpot is achieved
'Shots: standup targets are for proton roungs, left ramp is for cluster bombs, right ramp is for moon missiles.

'Goal of phase 1 is to use up all the rounds.
'Hitting standups will fire proton, hitting ramps will fire bombs or missiles.
'Each shot is like a jackpot. If all are completed, the scoop lights of for super jackpot.
'If Super JP is made, then phase 2 starts.

'Goal of phase 2 is to reload all the rounds.
'One random shot is lit at a time (flashing). After it is hit, its says lit (solid) and reloads respective round.
'Once all shots are completed, then the Super Duper JP is lit at the scoop.
'If the Super Duper JP is hit, then flippers die to drain other balls. Mode ends in full success!




Sub CreateFullyLoadedWizardMode
    Dim x

    With CreateGlfMode("fully_loaded_wizard", 2000)
        .StartEvents = Array("run_fully_loaded_wizard")
        .StopEvents = Array("mode_base_stopping","completed_fully_loaded_wizard")

        With .EventPlayer()
            .Add "mode_fully_loaded_wizard_started", Array("meteor_wave_music_stop","flwiz_music_start","flwiz_sjp1_show2")
            .Add "mode_fully_loaded_wizard_stopping", Array("flwiz_music_stop")
            'release the scoop ball to start the wizard mode
            .Add "timer_fully_loaded_message_complete", Array("release_scoop_hold","start_moon_multiball","delayed_release_moon_ball")
            .Add "release_scoop_hold", Array("disable_scoop_hold")
            'Phase 1 shots
            .Add "s_TargetMystery1_active{current_player.shot_flwiz_proton1==1}", Array("flwiz_proton1_hit","proton_fired","proton_fired_flash_show","play_sfx_jackpot","score_200000")
            .Add "s_TargetMystery2_active{current_player.shot_flwiz_proton2==1}", Array("flwiz_proton2_hit","proton_fired","proton_fired_flash_show","play_sfx_jackpot","score_200000")
            .Add "s_TargetMystery3_active{current_player.shot_flwiz_proton3==1}", Array("flwiz_proton3_hit","proton_fired","proton_fired_flash_show","play_sfx_jackpot","score_200000")
            .Add "s_TargetMystery4_active{current_player.shot_flwiz_proton4==1}", Array("flwiz_proton4_hit","proton_fired","proton_fired_flash_show","play_sfx_jackpot","score_200000")
            .Add "s_TargetMystery5_active{current_player.shot_flwiz_proton5==1}", Array("flwiz_proton5_hit","proton_fired","proton_fired_flash_show","play_sfx_jackpot","score_200000")
            .Add         "shield_bank_hit{current_player.shot_flwiz_proton6==1}", Array("flwiz_proton6_hit","proton_fired","proton_fired_flash_show","play_sfx_jackpot","score_200000")
            .Add "left_ramp_hit{current_player.shot_flwiz_cluster == 1 && current_player.wizard_fully_loaded_phase == 1}", Array("flwiz_phase1_cluster_hit","cluster_bomb_fired","cluster_bomb_flash","play_sfx_jackpot","play_sfx_cluster_fired","score_200000")
            .Add "right_ramp_hit{current_player.shot_flwiz_moon == 1 && current_player.wizard_fully_loaded_phase == 1}", Array("flwiz_phase1_moon_hit","moon_missile_fired","play_sfx_jackpot","score_200000")
            'Phase 1 shots completed, so activate the scoop for Super JPs
            .Add "flwiz_shots_on_complete{current_player.wizard_fully_loaded_phase == 1}", Array("activate_flwiz_sjp","run_flwiz_scoop_show")
            'Phase 1 Super JP achieved
            .Add "balldevice_scoop_ball_entered{current_player.wizard_fully_loaded_phase == 1 && current_player.flwiz_super_jp == 1}", Array("flwiz_sjp_achieved","stop_flwiz_scoop_show","restart_fully_loaded_shots")   'Start phase 2
            .Add "flwiz_sjp_achieved", Array("add_flwiz_phase2_shot","play_sfx_super_jackpot","flwiz_sjp1_show1","flwiz_sjp1_show2","score_1000000")
            'Phase 2 shots
            .Add "s_TargetMystery1_active{current_player.shot_flwiz_proton1 == 1 && current_player.wizard_fully_loaded_phase == 2}", Array("add_flwiz_phase2_shot","flwiz_phase2_proton1_hit","play_flwiz_proton_show","play_sfx_jackpot","score_300000")
            .Add "s_TargetMystery2_active{current_player.shot_flwiz_proton2 == 1 && current_player.wizard_fully_loaded_phase == 2}", Array("add_flwiz_phase2_shot","flwiz_phase2_proton2_hit","play_flwiz_proton_show","play_sfx_jackpot","score_300000")
            .Add "s_TargetMystery3_active{current_player.shot_flwiz_proton3 == 1 && current_player.wizard_fully_loaded_phase == 2}", Array("add_flwiz_phase2_shot","flwiz_phase2_proton3_hit","play_flwiz_proton_show","play_sfx_jackpot","score_300000")
            .Add "s_TargetMystery4_active{current_player.shot_flwiz_proton4 == 1 && current_player.wizard_fully_loaded_phase == 2}", Array("add_flwiz_phase2_shot","flwiz_phase2_proton4_hit","play_flwiz_proton_show","play_sfx_jackpot","score_300000")
            .Add "s_TargetMystery5_active{current_player.shot_flwiz_proton5 == 1 && current_player.wizard_fully_loaded_phase == 2}", Array("add_flwiz_phase2_shot","flwiz_phase2_proton5_hit","play_flwiz_proton_show","play_sfx_jackpot","score_300000")
            .Add         "shield_bank_hit{current_player.shot_flwiz_proton6 == 1 && current_player.wizard_fully_loaded_phase == 2}", Array("add_flwiz_phase2_shot","flwiz_phase2_proton6_hit","play_flwiz_proton_show","play_sfx_jackpot","score_300000")
            .Add "left_ramp_hit{current_player.shot_flwiz_cluster == 1 && current_player.wizard_fully_loaded_phase == 2}", Array("add_flwiz_phase2_shot","flwiz_phase2_cluster_hit","play_flwiz_cluster_show","play_sfx_jackpot","play_sfx_cluster_fired","score_300000")
            .Add "right_ramp_hit{current_player.shot_flwiz_moon == 1 && current_player.wizard_fully_loaded_phase == 2}", Array("add_flwiz_phase2_shot","flwiz_phase2_moon_hit","play_flwiz_moon_show","play_sfx_jackpot","play_sfx_launch","score_300000")
            'Phase 2 shots completed, so activate the scoop for Super JPs
            .Add "flwiz_shots_on_complete{current_player.wizard_fully_loaded_phase == 2}", Array("activate_flwiz_sdjp","run_flwiz_scoop_show","enable_scoop_hold")
            'Phase 2 Super Duper JP achieved
            .Add "balldevice_scoop_ball_entered{current_player.flwiz_super_jp == 2}", Array("flwiz_sdjp_achieved","stop_flwiz_scoop_show")  'Fully Loaded wizard mode completed
            .Add "flwiz_sdjp_achieved", Array("play_sfx_super_jackpot","flwiz_sjp2_show1","flwiz_sjp2_show2","flwiz_music_stop","score_2000000")
            .Add "flwiz_finalize", Array("release_scoop_hold","completed_fully_loaded_wizard")
            'Handle bumper lights
            .Add "timer_flwiz_bumper_lights_tick{current_player.wizard_fully_loaded_phase == 1}", Array("flwiz_bumpers_show1")
            .Add "timer_flwiz_bumper_lights_tick{current_player.wizard_fully_loaded_phase == 2}", Array("flwiz_bumpers_show2")
            'Handle moon ramp
            .Add "balldevice_moon_lock_ball_enter", Array("delayed_release_moon_ball")
            .Add "ball_search_started", Array("release_moon_ball")
            'Handle shield shot bank
            .Add "s_TargetShield1_active", Array("shield_bank_hit")
            .Add "s_TargetShield2_active", Array("shield_bank_hit")
            .Add "s_TargetShield3_active", Array("shield_bank_hit")
            '.Add "s_TargetShield4_active", Array("shield_bank_hit")
        End With


        With .RandomEventPlayer()
            With .EventName("add_flwiz_phase2_shot")
                .Add "flwiz_proton1_ready{current_player.shot_flwiz_proton1 == 0}", 1
                .Add "flwiz_proton2_ready{current_player.shot_flwiz_proton2 == 0}", 1
                .Add "flwiz_proton3_ready{current_player.shot_flwiz_proton3 == 0}", 1
                .Add "flwiz_proton4_ready{current_player.shot_flwiz_proton4 == 0}", 1
                .Add "flwiz_proton5_ready{current_player.shot_flwiz_proton5 == 0}", 1
                .Add "flwiz_proton6_ready{current_player.shot_flwiz_proton6 == 0}", 1
                .Add "flwiz_cluster_ready{current_player.shot_flwiz_cluster == 0}", 1
                .Add "flwiz_moon_ready{current_player.shot_flwiz_moon == 0}", 1
                .ForceAll = True
                .ForceDifferent = False
            End With
            With .EventName("proton_fired")
                .Add "play_sfx_LPF1", 1
                .Add "play_sfx_LPF2", 1
                .Add "play_sfx_LPF3", 1
                .Add "play_sfx_LPF4", 1
                .Add "play_sfx_LPF5", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
            With .EventName("flwiz_bumpers_show2")
                .Add "flwiz_bumper1_show2p", 1
                .Add "flwiz_bumper2_show2p", 1
                .Add "flwiz_bumper3_show2p", 1
                '.Add "flwiz_bumper4_show2p", 1
                .Add "flwiz_bumper1_show2c", 1
                .Add "flwiz_bumper2_show2c", 1
                .Add "flwiz_bumper3_show2c", 1
                '.Add "flwiz_bumper4_show2c", 1
                .Add "flwiz_bumper1_show2m", 1
                .Add "flwiz_bumper2_show2m", 1
                .Add "flwiz_bumper3_show2m", 1
                '.Add "flwiz_bumper4_show2m", 1
                .ForceAll = True
                .ForceDifferent = False
            End With
        End With


        With .ExtraBalls("flwiz_eb")
            .AwardEvents = Array("mode_fully_loaded_wizard_started")
            .MaxPerGame = 3
        End With


        With .Shots("flwiz_shoot_again")
            .Profile = "shoot_again"
            With .Tokens()
                .Add "color", ShipSaveColor
            End With
            With .ControlEvents()
                .Events = Array("mode_fully_loaded_wizard_started")
                .State = 1
            End With
            With .ControlEvents()
                .Events = Array("multiball_flwiz_hurry_up")
                .State = 2
            End With
            .ResetEvents = Array("multiball_flwiz_shoot_again_ended")
        End With


        With .Multiballs("flwiz")
            .StartEvents = Array("timer_fully_loaded_message_complete")
            .BallCount = 5
            .BallCountType = "total"
            .ShootAgain = 20000
            .HurryUp = 3000
            .GracePeriod = 2000
        End With


        'Define fully loaded wizard shots

        '   Proton shots
        For x = 1 to 5
            With .Shots("flwiz_proton"&x)
                .Profile = "fully_loaded_profile"
                With .Tokens()
                    .Add "lights", "LM"&x
                    .Add "color", ProtonColor
                End With
                With .ControlEvents()
                    .Events = Array("flwiz_proton"&x&"_ready","mode_fully_loaded_wizard_started")
                    .State = 1
                End With
                With .ControlEvents()
                    .Events = Array("flwiz_proton"&x&"_hit")
                    .State = 2
                End With
            End With
        Next
        With .Shots("flwiz_proton6")
            .Profile = "fully_loaded_profile"
            With .Tokens()
                .Add "lights", "tFLWp6"
                .Add "color", ProtonColor
            End With
            With .ControlEvents()
                .Events = Array("flwiz_proton6_ready","mode_fully_loaded_wizard_started")
                .State = 1
            End With
            With .ControlEvents()
                .Events = Array("flwiz_proton6_hit")
                .State = 2
            End With
        End With

        For x = 1 to 5
            With .Shots("flwiz_proton_round"&x)
                .Profile = "fully_loaded_profile"
                With .Tokens()
                    .Add "lights", "LPR"&x
                    .Add "color", ProtonColor
                End With
                With .ControlEvents()
                    .Events = Array("flwiz_proton"&x&"_hit")
                    .State = 0
                End With
                With .ControlEvents()
                    .Events = Array("mode_fully_loaded_wizard_started","flwiz_phase2_proton"&x&"_hit")
                    .State = 2
                End With
            End With
        Next
        With .Shots("flwiz_proton_round"&x)
            .Profile = "fully_loaded_profile"
            With .Tokens()
                .Add "lights", "LPR6"
                .Add "color", ProtonColor
            End With
            With .ControlEvents()
                .Events = Array("flwiz_proton6_hit")
                .State = 0
            End With
            With .ControlEvents()
                .Events = Array("mode_fully_loaded_wizard_started","flwiz_phase2_proton6_hit")
                .State = 2
            End With
        End With

        '   Moon shots
        With .Shots("flwiz_moon")
            .Profile = "fully_loaded_profile"
            With .Tokens()
                .Add "lights", "LS5"
                .Add "color", MoonColor
            End With
            With .ControlEvents()
                .Events = Array("flwiz_moon_ready","mode_fully_loaded_wizard_started")
                .State = 1
            End With
            With .ControlEvents()
                .Events = Array("flwiz_phase1_moon_hit","flwiz_phase2_moon_hit")
                .State = 2
            End With
        End With
        With .Shots("flwiz_moon_rounds")
            .Profile = "fully_loaded_profile"
            With .Tokens()
                .Add "lights", "tMoonR"
                .Add "color", MoonColor
            End With
            With .ControlEvents()
                .Events = Array("flwiz_phase1_moon_hit")
                .State = 0
            End With
            With .ControlEvents()
                .Events = Array("mode_fully_loaded_wizard_started","flwiz_phase2_moon_hit")
                .State = 2
            End With
        End With

        '   Cluster Bomb shots
        With .Shots("flwiz_cluster")
            .Profile = "fully_loaded_profile"
            With .Tokens()
                .Add "lights", "LS3"
                .Add "color", ClusterBombColor
            End With
            With .ControlEvents()
                .Events = Array("flwiz_cluster_ready","mode_fully_loaded_wizard_started")
                .State = 1
            End With
            With .ControlEvents()
                .Events = Array("flwiz_phase1_cluster_hit","flwiz_phase2_cluster_hit")
                .State = 2
            End With
        End With
        With .Shots("flwiz_cluster_rounds")
            .Profile = "fully_loaded_profile"
            With .Tokens()
                .Add "lights", "tClusterR"
                .Add "color", ClusterBombColor
            End With
            With .ControlEvents()
                .Events = Array("flwiz_phase1_cluster_hit")
                .State = 0
            End With
            With .ControlEvents()
                .Events = Array("mode_fully_loaded_wizard_started","flwiz_phase2_cluster_hit")
                .State = 2
            End With
        End With




        ' Shot profiles
        With .ShotProfiles("fully_loaded_profile")
            With .States("unlit")
                .Show = "off"
                .Key = "key_flwizp_off"
            End With
            With .States("ready")
                .Show = "flash_color"
                .Key = "key_flwizp_ready"
                .Speed = 10
            End With
            With .States("on")
                .Show = "led_color"
                .Key = "key_flwizp_done"
            End With
        End With




        ' Shot groups
        With .ShotGroups("flwiz_shots")
            .Shots = Array("flwiz_proton1", "flwiz_proton2", "flwiz_proton3", "flwiz_proton4", "flwiz_proton5", "flwiz_proton6","flwiz_cluster","flwiz_moon")
            .RestartEvents = Array("restart_fully_loaded_shots")
        End With



        With .Timers("fully_loaded_message")
            .TickInterval = flwizMessageInterval
            .StartValue = 0
            .EndValue = 3
            With .ControlEvents()
                .EventName = "mode_fully_loaded_wizard_started"
                .Action = "restart"
            End With
        End With

        With .Timers("flwiz_bumper_lights")
            .TickInterval = 711  'one beat of the song
            .StartValue = 0
            .EndValue = 100000
            With .ControlEvents()
                .EventName = "mode_fully_loaded_wizard_started"
                .Action = "restart"
            End With
        End With


        With .VariablePlayer()
            With .EventName("mode_fully_loaded_wizard_started")
        With .Variable("wizard_fully_loaded_phase")
                    .Action = "set"
          .Int = 1
        End With
                With .Variable("wizard_mode_running")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName("mode_fully_loaded_wizard_stopping")
                With .Variable("wizard_mode_running")
                    .Action = "set"
          .Int = 0
        End With
      End With
            With .EventName("activate_flwiz_sjp")
        With .Variable("flwiz_super_jp")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName("flwiz_sjp_achieved")
        With .Variable("wizard_fully_loaded_phase")
                    .Action = "set"
          .Int = 2
        End With
      End With
            With .EventName("activate_flwiz_sdjp")
        With .Variable("flwiz_super_jp")
                    .Action = "set"
          .Int = 2
        End With
      End With

    End With



        With .SegmentDisplayPlayer()
            With .EventName("mode_fully_loaded_wizard_started")
                With .Display("player1")
                    .Text = """ FULLY """
                    .Expire = flwizMessageInterval
                End With
                With .Display("player2")
                    .Text = """ LOADED """
                    .Expire = flwizMessageInterval
                End With
                With .Display("player3")
                    .Text = """ WIZARD """
                    .Expire = flwizMessageInterval
                End With
                With .Display("player4")
                    .Text = """  MODE  """
                    .Expire = flwizMessageInterval
                End With
            End With

            With .EventName("timer_fully_loaded_message_tick{devices.timers.fully_loaded_message.ticks == 1}")
                With .Display("player1")
                    .Text = """"""
                    .Expire = flwizMessageInterval
                End With
                With .Display("player2")
                    .Text = """   EB   """
                    .Flashing = "all"
                    .Expire = flwizMessageInterval
                End With
                With .Display("player3")
                    .Text = """  ADDED """
                    .Flashing = "all"
                    .Expire = flwizMessageInterval
                End With
                With .Display("player4")
                    .Text = """"""
                    .Expire = flwizMessageInterval
                End With
            End With

            With .EventName("timer_fully_loaded_message_tick{devices.timers.fully_loaded_message.ticks == 2}")
                With .Display("player1")
                    .Text = """"""
                    .Expire = flwizMessageInterval
                End With
                With .Display("player2")
                    .Text = """HIT ALL"""
                    .Flashing = "all"
                    .Expire = flwizMessageInterval
                End With
                With .Display("player3")
                    .Text = """  SHOTS """
                    .Flashing = "all"
                    .Expire = flwizMessageInterval
                End With
                With .Display("player4")
                    .Text = """"""
                    .Expire = flwizMessageInterval
                End With
            End With

        End With


        With .DOFPlayer()
            With .EventName("cluster_bomb_fired")
                .Action = "DOF_PULSE"
                .DOFEvent = 136
            End With
            With .EventName("proton_fired")
                .Action = "DOF_PULSE"
                .DOFEvent = 140
            End With
            With .EventName("moon_missile_fired")
                .Action = "DOF_PULSE"
                .DOFEvent = 143
            End With

            With .EventName("flwiz_sjp1_show1")
                .Action = "DOF_PULSE"
                .DOFEvent = 151
            End With
            With .EventName("flwiz_sjp2_show1")
                .Action = "DOF_PULSE"
                .DOFEvent = 151
            End With
        End With



        With .ShowPlayer()
            'bumpers
            For x = 1 to 4
                With .EventName("s_Bumper"&x&"_active")
                    .Key = "key_bumper"&x&"_flash"
                    .Show = "flash_color_with_fade"
                    .Speed = 15
                    .Loops = 1
                    .Priority = 2000
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", "ffffff"
                        .Add "fade", 50
                    End With
                End With
            Next
            With .EventName("flwiz_bumpers_show1")
                .Key = "key_bumpers_show1"
                .Show = "flash_color_fadeout"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "lights", "tBumper"
                    .Add "color", "555555"
                End With
            End With

            For x = 1 to 3
                With .EventName("flwiz_bumper"&x&"_show2p")
                    .Key = "key_bumper"&x&"_show2p"
                    .Show = "flash_color_fadeout"
                    .Speed = 10
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", ProtonColor
                    End With
                End With
            Next
            For x = 1 to 3
                With .EventName("flwiz_bumper"&x&"_show2c")
                    .Key = "key_bumper"&x&"_show2c"
                    .Show = "flash_color_fadeout"
                    .Speed = 10
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", ClusterBombColor
                    End With
                End With
            Next
            For x = 1 to 3
                With .EventName("flwiz_bumper"&x&"_show2m")
                    .Key = "key_bumper"&x&"_show2m"
                    .Show = "flash_color_fadeout"
                    .Speed = 10
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", MoonColor
                    End With
                End With
            Next



            'Super jackpot 1 shows
            With .EventName("flwiz_sjp1_show1")
                .Key = "key_flwiz_sjp1_show1"
                .Show = "insert_gi_spin_center"
                .Speed = 2
                .Loops = 4
                .Priority = 1000
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", "ffffff"
                End With
            End With
            With .EventName("flwiz_sjp1_show2")
                .Key = "key_flwiz_sjp1_show2"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 5
                With .Tokens()
                    .Add "lights", "tFlasher"
                    .Add "color", MoonColor
                End With
            End With

            'Super jackpot 2 shows
            With .EventName("flwiz_sjp2_show1")
                .Key = "key_flwiz_sjp2_show1"
                .Show = "insert_gi_spin_center"
                .Speed = 2
                .Loops = 4
                .Priority = 1000
                .EventsWhenCompleted = Array("flwiz_finalize")
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", MeteorHotColor
                End With
            End With
            With .EventName("flwiz_sjp2_show2")
                .Key = "key_flwiz_sjp2_show2"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 5
                With .Tokens()
                    .Add "lights", "tFlasher"
                    .Add "color", MeteorWaveColor
                End With
            End With

            'Protons fired
            With .EventName("proton_fired")
                .Key = "key_flwiz_proton_fired"
                .Priority = 10
                .Show = "flash_color"
                .Speed = 20
                .Loops = 5
                With .Tokens()
                    .Add "lights", "tBlast"
                    .Add "color", ProtonColor
                End With
            End With
            With .EventName("proton_fired_flash_show")
                .Key = "key_flwiz_proton_flash"
                .Show = "flash_color_with_fade"
                .Speed = 20
                .Loops = 3
                With .Tokens()
                    .Add "lights", "tFlasherU"
                    .Add "color", ProtonColor
                    .Add "fade", 300
                End With
            End With
            With .EventName("play_flwiz_proton_show")
                .Key = "key_flwiz_proton_show"
                .Show = "flwiz_proton_show"
                .Speed = 1
                .Loops = 1
                .Priority = 10000
            End With

            'Cluster bombs
            With .EventName("cluster_bomb_fired")
                .Key = "key_flwiz_cluster_explodes"
                .Priority = 5
                .Show = "cluster_explodes"  'the cluster color is included in the show
                .Speed = 1
                .Loops = 1
            End With
            With .EventName("cluster_bomb_flash")
                .Key = "key_flwiz_cluster_flash"
                .Show = "flash_color_with_fade"
                .Speed = 20
                .Loops = 4
                With .Tokens()
                    .Add "lights", "tFlasherU"
                    .Add "color", ClusterBombColor
                    .Add "fade", 300
                End With
            End With
            With .EventName("play_flwiz_cluster_show")
                .Key = "key_flwiz_cluster_show"
                .Show = "flwiz_cluster_show"
                .Speed = 1
                .Loops = 1
                .Priority = 10000
            End With

            'Moon
            With .EventName("moon_missile_fired")
                .Key = "key_flwiz_moon_launch"
                .Show = "moon_launch"
                .Priority = 50
                .Speed = 1
                .Loops = 1
            End With
            With .EventName("play_flwiz_moon_show")
                .Key = "key_flwiz_moon_show"
                .Show = "flwiz_moon_show"
                .Speed = 1
                .Loops = 1
                .Priority = 10000
            End With

        End With


        With .SoundPlayer()
            With .EventName("play_sfx_cluster_fired")
                .Key = "key_flwiz_sfx_cluster_fired"
                .Sound = "sfx_cluster_fired"
            End With
            With .EventName("play_sfx_launch")
                .Key = "key_flwiz_sfx_launch"
                .Sound = "sfx_launch"
            End With
        End With


    End With

End Sub


'Health Mode.

'The health bar has 9 lights. At full health when all are lit.
'Health starts at full at the beginning of a new ball.
'Health can decrease in a couple ways: 1) meteor wave earth hits, 2) UFO attacks
'Health can increase in a few ways: 1) bumper hits, 2) slingshot hits, 3) mystery awards
'When health goes to zero, the flippers die and you lose the ball.


Sub CreateHealthMode
    Dim x

    With CreateGlfMode("health", 800)
        .StartEvents = Array("new_ball_started","stop_training","wizard_mode_ended")
        .StopEvents = Array("mode_base_stopping","start_training_select","wizard_mode_started")

        With .EventPlayer()
            'restart the mode
            .Add "mode_health_started{current_player.ball_just_started==1}", Array("restart_health","reset_health_bump")
            .Add "mode_health_started{current_player.training_heal_achieved==1}", Array("raise_diverter") 'training boost
            'successful bumper hits
            .Add "s_Bumper1_active", Array("check_add_health_bump")
            .Add "s_Bumper2_active", Array("check_add_health_bump")
            .Add "s_Bumper3_active", Array("check_add_health_bump")
            .Add "s_TopSlingshot_active", Array("check_add_health_bump")
            'add or remove health lights as needed
            .Add "check_add_health_bump{current_player.health_bump_value<"&BumperHitsPerRepair&"}", Array("add_health_bump")
            .Add "check_add_health_bump{current_player.health_bump_value>="&BumperHitsPerRepair&"}", Array("check_add_health","reset_health_bump")
            .Add "check_add_health{current_player.health_value==8}", Array("health9_norm","add_health")
            .Add "check_add_health{current_player.health_value==7}", Array("health8_norm","add_health")
            .Add "check_add_health{current_player.health_value==6}", Array("health7_norm","health6_norm","health5_norm","health4_norm","health3_norm","health2_norm","health1_norm","add_health")
            .Add "check_add_health{current_player.health_value==5}", Array("health6_warm","add_health")
            .Add "check_add_health{current_player.health_value==4}", Array("health5_warm","add_health")
            .Add "check_add_health{current_player.health_value==3}", Array("health4_warm","health3_warm","health2_warm","health1_warm","add_health")
            .Add "check_add_health{current_player.health_value==2}", Array("health3_crit","add_health")
            .Add "check_add_health{current_player.health_value==1}", Array("health2_crit","add_health")
            .Add "check_remove_health{current_player.health_value==9}", Array("health9_off","remove_health")
            .Add "check_remove_health{current_player.health_value==8}", Array("health8_off","health9_off","remove_health")
            .Add "check_remove_health{current_player.health_value==7}", Array("health7_off","health8_off","health9_off","health6_warm","health5_warm","health4_warm","health3_warm","health2_warm","health1_warm","remove_health")
            .Add "check_remove_health{current_player.health_value==6}", Array("health6_off","health7_off","health8_off","health9_off","remove_health")
            .Add "check_remove_health{current_player.health_value==5}", Array("health5_off","health6_off","health7_off","health8_off","health9_off","remove_health")
            .Add "check_remove_health{current_player.health_value==4}", Array("health4_off","health5_off","health6_off","health7_off","health8_off","health9_off","health3_crit","health2_crit","health1_crit","remove_health","play_voc_critically_low_health")
            .Add "check_remove_health{current_player.health_value==3}", Array("health3_off","health4_off","health5_off","health6_off","health7_off","health8_off","health9_off","remove_health")
            .Add "check_remove_health{current_player.health_value==2}", Array("health2_off","health3_off","health4_off","health5_off","health6_off","health7_off","health8_off","health9_off","remove_health","play_voc_imminent_shutdown")
            .Add "check_remove_health{current_player.health_value==1}", Array("health1_off","health2_off","health3_off","health4_off","health5_off","health6_off","health7_off","health8_off","health9_off","remove_health","kill_flippers","turn_off_gi","meteor_wave_music_stop")
            .Add "add_health", Array("slings_powerup_added","lsling_powerup_h","rsling_powerup_h","health_charge1","health_charge2","score_50000")
            'handle earth hits
            .Add "earth_hit{current_player.health_value>0}", Array("check_remove_health")
            'Handle mystery award
            .Add "mystery_full_health", Array("complete_full_health","restart_health","reset_health_bump","slings_powerup_added","lsling_powerup_h","rsling_powerup_h","score_100000")
        End With


        With .SoundPlayer()
            With .EventName("add_health")
                .Key = "key_sfx_LH"
                .Sound = "sfx_LH"
            End With
        End With

        With .DOFPlayer()
            With .EventName("add_health")
                .Action = "DOF_PULSE"
                .DOFEvent = 138
            End With
        End With


        'Define a shot profile with four states, health meter leves
        With .ShotProfiles("health_meter")
            With .States("unlit")
                .Show = "off"
                .Key = "key_health_off"
                .Priority = 90
            End With
            With .States("normal")
                .Show = "led_color"
                .Key = "key_health_normal"
                .Priority = 80
                With .Tokens()
                    .Add "color", HealthColor1
                End With
            End With
            With .States("warning")
                .Show = "led_color"
                .Key = "key_health_warning"
                .Priority = 70
                With .Tokens()
                    .Add "color", HealthColor2
                End With
            End With
            With .States("critical")
                .Show = "flash_color"
                .Key = "key_health_critical"
                .Speed = 15
                .Priority = 60
                With .Tokens()
                    .Add "color", HealthColor3
                End With
            End With
        End With

        'Define health meter shots
        For x = 1 to 9
            With .Shots("health"&x&"_light")
                .Profile = "health_meter"
                With .Tokens()
                    .Add "lights", "LH"&x
                End With
                With .ControlEvents()
                    .Events = Array("health"&x&"_off")
                    .State = 0
                End With
                With .ControlEvents()
                    .Events = Array("restart_health","health"&x&"_norm")
                    .State = 1
                End With
                With .ControlEvents()
                    .Events = Array("health"&x&"_warm")
                    .State = 2
                End With
                With .ControlEvents()
                    .Events = Array("health"&x&"_crit")
                    .State = 3
                End With
            End With
        Next

        'Define health bumper diverter shot
        With .Shots("health_diverter")
            .Profile = "health_shot_ready"
            With .ControlEvents()
                .Events = Array("raise_diverter")
                .State = 1
            End With
            .RestartEvents = Array("drop_diverter","mode_health_stopping")
        End With


        With .ShowPlayer()
            With .EventName("health_charge1")
                .Key = "key_health_charge1"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 7
                With .Tokens()
                    .Add "lights", "tHealth"
                    .Add "color", HealthColor1
                End With
            End With
            With .EventName("health_charge2")
                .Key = "key_health_charge2"
                .Show = "insert_gi_spin_center"
                .Speed = 3
                .Loops = 1
                .Priority = 1000
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", HealthColor1
                End With
            End With
            With .EventName("complete_full_health")
                .Key = "key_health_full_charged"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 15
                With .Tokens()
                    .Add "lights", "tHealth"
                    .Add "color", HealthColor1
                End With
            End With
            With .EventName("mode_health_started")  'turn on bummper lights
                .Key = "key_bumpers_on"
                .Show = "flicker_color_on_intensity"
                .Speed = 10
                With .Tokens()
                    .Add "lights", "tBumper"
                    .Add "color", GIColor3000k '"ffffff"
                    .Add "intensity", 10
                End With
            End With
            'Added health shows
            With .EventName("lsling_powerup_h")
                .Key = "key_lsling_powerup_h"
                .Show = "lsling_rotate2_cw"
                .Speed = 2
                .Loops = 3
                With .Tokens()
                    .Add "color1", HealthColor1
                    .Add "color2", HealthColor1
                    .Add "intensity", SlingDomePowerUpBrightness
                End With
            End With
            With .EventName("rsling_powerup_h")
                .Key = "key_rsling_powerup_h"
                .Show = "rsling_rotate2_ccw"
                .Speed = 2
                .Loops = 3
                With .Tokens()
                    .Add "color1", HealthColor1
                    .Add "color2", HealthColor1
                    .Add "intensity", SlingDomePowerUpBrightness
                End With
            End With
            'Bumpers
            For x = 1 to 4
                With .EventName("s_Bumper"&x&"_active")
                    .Key = "key_bumper"&x&"_flash"
                    .Show = "flash_color_with_fade"
                    .Speed = 15
                    .Loops = 1
                    .Priority = 2000
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", "05cc05" '"ffffff"
                        .Add "fade", 50
                    End With
                End With
            Next
        End With

        With .VariablePlayer()
            'health_value
        With .EventName("restart_health")
        With .Variable("health_value")
                    .Action = "set"
          .Int = 9
        End With
      End With
            With .EventName("remove_health")
        With .Variable("health_value")
                    .Action = "add"
          .Int = -1
        End With
      End With
            With .EventName("add_health")
        With .Variable("health_value")
                    .Action = "add"
          .Int = 1
        End With
      End With
            'health_bump_value
            With .EventName("reset_health_bump")
        With .Variable("health_bump_value")
                    .Action = "set"
          .Int = 0
        End With
      End With
            With .EventName("add_health_bump")
        With .Variable("health_bump_value")
                    .Action = "add"
          .Int = 1
        End With
      End With
    End With

    End With

End Sub



' High Score Mode.


Sub CreateHighScoreMode

    Dim AZLookup : AZLookup = Array("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","0","1","2","3","4","5","6","7","8","9","_")

    With CreateGlfMode("high_score", 120)
        .StartEvents = Array("game_will_end")
        .StopEvents = Array("high_score_complete")

        Dim i

        With .EventPlayer()
            'inputs
            .Add "s_right_magna_key_active{current_player.hs_input_ready == 1}", Array("text_inputted")
            .Add "s_plunger_key_active{current_player.hs_input_ready == 1}", Array("text_inputted")
            .Add "s_lockbar_key_active{current_player.hs_input_ready == 1}", Array("text_inputted")
            .Add "s_start_active{current_player.hs_input_ready == 1}", Array("text_inputted")
            'final initial inputted
            .Add "text_inputted.1{machine.high_score_initials_chars == 3}", Array("text_input_high_score_complete:{text: machine.high_score_initials}")
            'timer ran out
            .Add "timer_high_score_timeout_complete", Array("text_input_high_score_complete:{text: machine.high_score_initials}")
        End With

        With .Timers("hs_cooldown")
            .TickInterval = 200
            .StartValue = 0
            .EndValue = 1
            With .ControlEvents()
                .EventName = "text_inputted{machine.high_score_initials_chars < 3}"
                .Action = "restart"
            End With
        End With

        With .SoundPlayer
            With .EventName("mode_high_score_started")
                .Key = "key_mus_highscore"
                .Sound = "mus_victory"
            End With
            With .EventName("text_inputted.4")
                .Key = "key_sfx_hs_initial"
                .Sound = "sfx_hs_initial"
            End With
        End With

        With .ShowPlayer()
            With .EventName("mode_high_score_started")
                .Key = "key_hs_show"
                .Show = "rainbow"
                .Speed = 1
                With .Tokens()
                    .Add "lights", "GI"
                End With
            End With
        End With

        With .VariablePlayer()

            With .EventName("s_left_flipper_active.2{current_player.hs_input_ready == 1}")
        With .Variable("high_score_initials_index")
                    .Action = "add_machine"
          .Int = -1
        End With
      End With
            With .EventName("s_right_flipper_active.2{current_player.hs_input_ready == 1}")
        With .Variable("high_score_initials_index")
                    .Action = "add_machine"
          .Int = 1
        End With
      End With

            For i=0 to 36
                With .EventName("text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == " & i & "}")
                    With .Variable("high_score_initials")
                        .Action = "set_machine"
                        .String = "machine.high_score_initials & """ & AZLookup(i) & """"
                    End With
                End With
            Next

            With .EventName("high_score_enter_initials") 'reset initials
                With .Variable("high_score_initials")
                    .Action = "set_machine"
                    .String = """"""
                End With
                With .Variable("high_score_initials_chars")
                    .Action = "set_machine"
                    .Int = 0
                End With
                With .Variable("high_score_initials_index")
                    .Action = "set_machine"
                    .Int = 0
                End With
                With .Variable("hs_input_ready")
                    .Action = "set"
          .Int = 1
        End With
            End With

            With .EventName("text_inputted.2")
                With .Variable("high_score_initials_chars")
                    .Action = "add_machine"
                    .Int = 1
                End With
                With .Variable("high_score_initials_index")
                    .Action = "set_machine"
                    .Int = 0
                End With
                With .Variable("hs_input_ready")
                    .Action = "set"
                    .Int = 0
                End With
            End With

            With .EventName("timer_hs_cooldown_complete")
        With .Variable("hs_input_ready")
                    .Action = "set"
          .Int = 1
        End With
      End With

        End With

        With .Timers("high_score_timeout")
            .TickInterval = 1000
            .StartValue = 60
            .EndValue = 0
            .Direction = "down"
            .StartRunning = False
            With .ControlEvents()
                .EventName = "high_score_enter_initials"
                .Action = "restart"
            End With
            With .ControlEvents()
                .EventName = "text_input_high_score_complete.1"
                .Action = "stop"
            End With
        End With

        With .SegmentDisplayPlayer()
            With .EventName("timer_high_score_timeout_tick")
                With .Display("player4")
                    .Text = "{devices.timers.high_score_timeout.ticks:0>2}"
                End With
            End With

            With .EventName("text_input_high_score_complete")
                With .Display("player1")
                    .Text = """"""
                End With
                With .Display("player2")
                    .Text = """"""
                End With
                With .Display("player3")
                    .Text = """"""
                End With
                With .Display("player4")
                    .Text = """"""
                End With
            End With

            With .EventName("high_score_enter_initials{kwargs.player_num==1}")
                With .Display("player1")
                    .Text = """P1 """
                    .Priority = 10000
                End With
            End With
            With .EventName("high_score_enter_initials{kwargs.player_num==2}")
                With .Display("player1")
                    .Text = """P2 """
                    .Priority = 10000
                End With
            End With
            With .EventName("high_score_enter_initials{kwargs.player_num==3}")
                With .Display("player1")
                    .Text = """P3 """
                    .Priority = 10000
                End With
            End With
            With .EventName("high_score_enter_initials{kwargs.player_num==4}")
                With .Display("player1")
                    .Text = """P4 """
                    .Priority = 10000
                End With
            End With

            With .EventName("high_score_enter_initials")
                With .Display("player2")
                    .Text = """INITIALS"""
                    .Priority = 10000
                End With
            End With

            With .EventName("high_score_enter_initials")
                With .Display("player3")
                    .Text = """A"""
                End With
            End With


            For i=0 to 36
                With .EventName("s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == " & i & " && current_player.hs_input_ready == 1}")
                    With .Display("player3")
                        .Text = "machine.high_score_initials & """ & AZLookup(i) & """"
                    End With
                End With
                With .EventName("s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == " & i & " && current_player.hs_input_ready == 1}")
                    With .Display("player3")
                        .Text = "machine.high_score_initials & """ & AZLookup(i) & """"
                    End With
                End With
            Next

            With .EventName("text_inputted.1{machine.high_score_initials_chars<3}")
                With .Display("player3")
                    .Text = "machine.high_score_initials & ""A"""
                End With
            End With



        End With



        With .Timers("high_score_award_timeout")
            .TickInterval = 1000
            .StartValue = 5
            .EndValue = 0
            .Direction = "down"
            .StartRunning = False
            With .ControlEvents()
                .EventName = "high_score_award_display.1"
                .Action = "restart"
            End With
        End With

        With .SegmentDisplayPlayer()

            ' With .EventName("timer_high_score_award_timeout_complete")
            '     With .Display("player1")
            '         .Text = """"""
            '     End With
            '     With .Display("player2")
            '         .Text = """"""
            '     End With
            '     With .Display("player3")
            '         .Text = """"""
            '     End With
            '     With .Display("player4")
            '         .Text = """"""
            '     End With
            ' End With

            With .EventName("high_score_award_display{kwargs.position == 1}")
                With .Display("player1")
                    .Text = """  GRAND """
                    .Flashing = "all"
                End With
                With .Display("player2")
                    .Text = """CHAMPION"""
                    .Flashing = "all"
                End With
                With .Display("player3")
                    .Text = """     "" & machine.high_score_initials"
                End With
            End With

            With .EventName("high_score_award_display{kwargs.position == 2}")
                With .Display("player1")
                    .Text = """   HIGH """
                    .Flashing = "all"
                End With
                With .Display("player2")
                    .Text = """SCORE 1 """
                    .Flashing = "all"
                End With
                With .Display("player3")
                    .Text = """     "" & machine.high_score_initials"
                End With
            End With

            With .EventName("high_score_award_display{kwargs.position == 3}")
                With .Display("player1")
                    .Text = """   HIGH """
                    .Flashing = "all"
                End With
                With .Display("player2")
                    .Text = """SCORE 2 """
                    .Flashing = "all"
                End With
                With .Display("player3")
                    .Text = """     "" & machine.high_score_initials"
                End With
            End With

            With .EventName("high_score_award_display{kwargs.position == 4}")
                With .Display("player1")
                    .Text = """   HIGH """
                    .Flashing = "all"
                End With
                With .Display("player2")
                    .Text = """SCORE 3 """
                    .Flashing = "all"
                End With
                With .Display("player3")
                    .Text = """     "" & machine.high_score_initials"
                End With
            End With
        End With


    End With

End Sub


'Instant Info Mode.


Sub CreateInstantInfoMode
    Dim x

    With CreateGlfMode("instant_info", 300)
        .StartEvents = Array("mode_meteor_wave_qualify_started")
        .StopEvents = Array("mode_meteor_wave_qualify_stopping")


        With .EventPlayer()
            'handle flipper cradle
            .Add "flipper_cradle{game.balls_in_play == 1 && current_player.ball_just_started == 0}", Array("info_restart","flipper_cradling")   'handle flipper cradle
            .Add "s_left_flipper_active{current_player.ball_cradled == 1}", Array("info_stop")
            .Add "s_right_flipper_active{current_player.ball_cradled == 1}", Array("info_stop")
            .Add "s_right_staged_flipper_key_active{current_player.ball_cradled == 1}", Array("info_stop")

            'show info
            .Add "timer_info_tick{devices.timers.info.ticks == 0}", Array("info_ball_num")
            .Add "timer_info_tick{devices.timers.info.ticks == 1}", Array("info_trained_num")
            .Add "timer_info_tick{devices.timers.info.ticks == 2}", Array("info_eb_num")
            .Add "timer_info_tick{devices.timers.info.ticks == 3}", Array("info_restart")
        End With



       With .Timers("info")
            .TickInterval = 800
            .StartValue = 0
            .EndValue = 10
            With .ControlEvents()
                .EventName = "info_restart"
                .Action = "restart"
            End With
            With .ControlEvents()
                .EventName = "flipper_release"
                .Action = "stop"
            End With
            With .ControlEvents()
                .EventName = "info_stop"
                .Action = "stop"
            End With
        End With


        With .VariablePlayer()
            With .EventName("mode_instant_info_started")
                With .Variable("ball_cradled")
                    .Action = "set"
                    .Int = 0
                End With
            End With

            With .EventName("flipper_cradling")
                With .Variable("ball_cradled")
                    .Action = "set"
                    .Int = 1
                End With
            End With
            With .EventName("flipper_release")
                With .Variable("ball_cradled")
                    .Action = "set"
                    .Int = 0
                End With
            End With
        End With


        With .SegmentDisplayPlayer()
            With .EventName("info_ball_num{current_player.number == 1 or current_player.number == 2}")
                With .Display("player3")
                    .key = "p3_ball_num"
                    .Text = """BALL"""
                    .Expire = 2000
                    .Priority = 20000
                End With
                With .Display("player4")
                    .key = "p4_ball_num"
                    .Text = "{current_player.ball:0>2}"
                    .Expire = 2000
                    .Priority = 20000
                End With
            End With

            With .EventName("info_ball_num{current_player.number == 3 or current_player.number == 4}")
                With .Display("player1")
                    .key = "p1_ball_num"
                    .Text = """BALL"""
                    .Expire = 2000
                    .Priority = 20000
                End With
                With .Display("player2")
                    .key = "p2_ball_num"
                    .Text = "{current_player.ball:0>2}"
                    .Expire = 2000
                    .Priority = 20000
                End With
            End With


            With .EventName("info_trained_num{current_player.number == 1 or current_player.number == 2}")
                With .Display("player3")
                    .key = "p3_ball_num"
                    .Text = """TRAINED"""
                    .Expire = 2000
                    .Priority = 20010
                End With
                With .Display("player4")
                    .key = "p4_ball_num"
                    .Text = "{current_player.training_total_achieved:0>2}"
                    .Expire = 2000
                    .Priority = 20010
                End With
            End With

            With .EventName("info_trained_num{current_player.number == 3 or current_player.number == 4}")
                With .Display("player1")
                    .key = "p1_ball_num"
                    .Text = """TRAINED"""
                    .Expire = 2000
                    .Priority = 20010
                End With
                With .Display("player2")
                    .key = "p2_ball_num"
                    .Text = "{current_player.training_total_achieved:0>2}"
                    .Expire = 2000
                    .Priority = 20010
                End With
            End With


            With .EventName("info_eb_num{current_player.number == 1 or current_player.number == 2}")
                With .Display("player3")
                    .key = "p3_ball_num"
                    .Text = """EB NUM"""
                    .Expire = 2000
                    .Priority = 20020
                End With
                With .Display("player4")
                    .key = "p4_ball_num"
                    .Text = "{current_player.extra_balls:0>2}"
                    .Expire = 2000
                    .Priority = 20020
                End With
            End With

            With .EventName("info_eb_num{current_player.number == 3 or current_player.number == 4}")
                With .Display("player1")
                    .key = "p1_ball_num"
                    .Text = """EB NUM"""
                    .Expire = 2000
                    .Priority = 20020
                End With
                With .Display("player2")
                    .key = "p2_ball_num"
                    .Text = "{current_player.extra_balls:0>2}"
                    .Expire = 2000
                    .Priority = 20020
                End With
            End With


        End With




    End With

End Sub


'Meteor Multiball Mode.

'Meteor multiball occurs at regular intervals. Once it starts, the meteor targets begin to pop up.


Sub CreateMeteorMultiballMode
    Dim x

    With CreateGlfMode("meteor_multiball", 1000)
        .StartEvents = Array("start_meteor_multiball")
        .StopEvents = Array("mode_base_stopping","kill_flippers","stop_meteor_wave")

        With .EventPlayer()
            .Add "multiball_meteor_shoot_again_ended", Array("clear_ship_save")
        End With

        With .Shots("meteor_mb_shoot_again")
            .Profile = "shoot_again"
            With .Tokens()
                .Add "color", ShipSaveColor
            End With
            With .ControlEvents()
                .Events = Array("mode_meteor_multiball_started")
                .State = 1
            End With
            With .ControlEvents()
                .Events = Array("multiball_meteor_hurry_up")
                .State = 2
            End With
            .ResetEvents = Array("multiball_meteor_shoot_again_ended")
        End With


        With .Multiballs("meteor")
            .StartEvents = Array("mode_meteor_multiball_started")
            .BallCount = 3
            .BallCountType = "total"
            .ShootAgain = "current_player.meteor_mb_shootagain_time"
            .HurryUp = 3000
            .GracePeriod = 2000
        End With

        With .VariablePlayer()
            With .EventName("clear_ship_save")
        With .Variable("meteor_mb_shootagain_time")
                    .Action = "set"
          .Int = MeteorMBShootAgainTime
        End With
      End With
    End With

    End With
End Sub


'Meteor Wave Qualify Mode.


Sub CreateMeteorWaveQualifyMode

    With CreateGlfMode("meteor_wave_qualify", 1100)
        .StartEvents = Array("new_ball_started","stop_meteor_wave","stop_training","wizard_mode_ended")
        .StopEvents = Array("mode_base_stopping","mode_bonus_started","start_meteor_wave","start_training_select","wizard_mode_started")

        With .EventPlayer()
            .Add "mode_meteor_wave_qualify_started{current_player.meteor_countdown_value == 0}", Array("reset_countdown_value")
            .Add "mode_meteor_wave_qualify_started{current_player.meteor_countdown_value > 0}", Array("init_mwq_timer")
            .Add "reset_countdown_value", Array("init_mwq_timer")
            .Add "init_mwq_timer", Array("init_pf_display")
            .Add "init_mwq_timer{current_player.ball_just_started == 0}", Array("start_mwq_timer")
            .Add "s_Plunger1_inactive{current_player.ball_just_started == 1}", Array("start_mwq_timer")

            .Add "restart_tw_timer", Array("stop_mwq_timer")    'Timewarp started, so halt the countdown
            .Add "play_mystery_show", Array("stop_mwq_timer")   'Mystery show started, so halt the countdown
            .Add "play_eb_show", Array("stop_mwq_timer")        'EB show started, so halt the countdown

            .Add "stop_mwq_timer", Array("flash_mwq_display")
            .Add "start_mwq_timer", Array("remove_flash_mwq_display")

            .Add "timer_meteor_countdown_tick{devices.timers.meteor_countdown.ticks == 4}", Array("meteor_wave_alert_show","backglass_wave_flash")
            .Add "timer_meteor_countdown_tick{devices.timers.meteor_countdown.ticks == 2}", Array("meteor_wave_alert_show","backglass_wave_flash")
            .Add "timer_meteor_countdown_tick{devices.timers.meteor_countdown.ticks == 1}", Array("stop_extra_ball","stop_mystery","stop_training_qualify","disable_scoop_hold","start_mwq_timer") 'stop these early to prevent scoop issues
            .Add "timer_meteor_countdown_complete", Array("start_meteor_wave")

            .Add "meteor_wave_alert_show", Array("meteor_wave_alert_show1","meteor_wave_alert_show2","meteor_wave_alert_show3","meteor_wave_alert_show4")
        End With

        With .SegmentDisplayPlayer()
            With .EventName("init_pf_display")
                With .Display("pf")
                    .Text = "{devices.timers.meteor_countdown.ticks:0>2}"
                End With
            End With
            With .EventName("flash_mwq_display")
                With .Display("pf")
                    .Key = "key_flash_mwq_display"
                    .Text = "{devices.timers.meteor_countdown.ticks:0>2}"
                    .Flashing = "all"
                    .Priority = 100
                End With
            End With
            With .EventName("remove_flash_mwq_display")
                With .Display("pf")
                    .Key = "key_flash_mwq_display"
                    .Action = "remove"
                End With
            End With
        End With

        With .SoundPlayer()
            With .EventName("timer_meteor_countdown_tick{devices.timers.meteor_countdown.ticks == 4}")
                .Key = "key_voc_wave_incoming"
                .Sound = "voc_wave_incoming"
            End With
        End With

        With .DOFPlayer()
            With .EventName("timer_meteor_countdown_tick{devices.timers.meteor_countdown.ticks == 4}")
                .Action = "DOF_PULSE"
                .DOFEvent = 139
            End With
            With .EventName("timer_meteor_countdown_tick{devices.timers.meteor_countdown.ticks == 2}")
                .Action = "DOF_PULSE"
                .DOFEvent = 139
            End With
        End With

        With .Timers("meteor_countdown")
            .TickInterval = 1000
            .StartValue = "current_player.meteor_countdown_value"
            .Direction = "down"
            .EndValue = 0
            With .ControlEvents()
                .EventName = "init_mwq_timer"
                .Action = "jump"
                .Value = "current_player.meteor_countdown_value"
            End With
            With .ControlEvents()
                .EventName = "start_mwq_timer"
                .Action = "start"
            End With
            With .ControlEvents()
                .EventName = "stop_mwq_timer"
                .Action = "stop"
            End With
        End With

        With .VariablePlayer()
            With .EventName("reset_countdown_value")
                With .Variable("meteor_countdown_value")
                    .Action = "set"
          .Int = MeteorWaveDelayTicks
        End With
      End With
            With .EventName("timer_meteor_countdown_tick")
                With .Variable("meteor_countdown_value")
                    .Action = "set"
          .Int = "devices.timers.meteor_countdown.ticks"
        End With
      End With
            With .EventName("timer_meteor_countdown_complete")
                With .Variable("meteor_countdown_value")
                    .Action = "set"
          .Int = 0
        End With
      End With
    End With

        With .ShowPlayer()
            With .EventName("meteor_wave_alert_show1")
                .Key = "key_meteor_wave_alert_show1"
                .Show = "lsling_swap_2_2_b"
                .Speed = 1
                .Loops = 5
                With .Tokens()
                    .Add "color1", "ff0000"
                    .Add "color2", "ff9900"
                    .Add "intensity", 30
                End With
            End With
            With .EventName("meteor_wave_alert_show2")
                .Key = "key_meteor_wave_alert_show2"
                .Show = "rsling_swap_2_2_a"
                .Speed = 1
                .Loops = 5
                With .Tokens()
                    .Add "color1", "ff0000"
                    .Add "color2", "ff9900"
                    .Add "intensity", 30
                End With
            End With
            With .EventName("meteor_wave_alert_show3")
                .Key = "key_meteor_wave_alert_show3"
                .Show = "lsling_swap_2_2_a"
                .Speed = 1
                .Loops = 5
                With .Tokens()
                    .Add "color1", "ff0000"
                    .Add "color2", "ff9900"
                    .Add "intensity", 30
                End With
            End With
            With .EventName("meteor_wave_alert_show4")
                .Key = "key_meteor_wave_alert_show4"
                .Show = "rsling_swap_2_2_b"
                .Speed = 1
                .Loops = 5
                With .Tokens()
                    .Add "color1", "ff0000"
                    .Add "color2", "ff9900"
                    .Add "intensity", 30
                End With
            End With
            With .EventName("magnet_activated_gi")
                .Key = "key_ts_mag_gi"
                .Show = "flash_color_fadeout"
                .Speed = 4.6
                .Loops = 3
                .Priority = 100
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", GIColor3000k
                End With
            End With

            With .EventName("flipper_cradling")
                .Key = "key_flipper_cradling"
                .Show = "flash_color"
                .Speed = 15
                .Priority = 5000
                With .Tokens()
                    .Add "lights", "tInlaneGI"
                    .Add "color", GIColor3000k
                End With
            End With
            With .EventName("flipper_release")
                .Key = "key_flipper_cradling"
                .Show = "flash_color"
                .Speed = 15
                .Priority = 5000
                .Action = "stop"
                With .Tokens()
                    .Add "lights", "tInlaneGI"
                    .Add "color", GIColor3000k
                End With
            End With

            ' With .EventName("timer_meteor_countdown_tick{devices.timers.meteor_countdown.ticks == 3}")
            '     .Key = "key_gi_cracked"
            '     .Show = "gi_cracked"
            '     .Priority = 10
            '     .Speed = 1.3
            '     .Loops = 1
            ' End With
        End With

    End With

End Sub


'Meteor Wave Mode.

'Meteor waves occur at regular intervals. Once it starts, the meteor targets begin to pop up and meteor MB starts.
'Meteor targets can be dropped five different ways:
'  1) with a normal ball hit, 2) with a proton cannon, 3) with a cluster bomb, 4) with a nuke, 5) when time runs out and it hits earth
'If a meteor hits Earth, one tick is removed from the Healt bar. When Health bar is depleted, then the flippers die (ball ends)
'Each wave gets successively harder, where more meteors need to be destroyed to end the wave.
'Number of meteors per wave, starting from first wave and going to last wave: 6,9,12,15,18,21,24,27,30



Sub CreateMeteorWaveMode
    Dim x

    With CreateGlfMode("meteor_wave", 1000)
        '.Debug = True
        .StartEvents = Array("start_meteor_wave")
        .StopEvents = Array("stop_meteor_wave","mode_base_stopping","kill_flippers")


        With .EventPlayer()
            '.Debug = True
            'Initializations
            .Add "mode_meteor_wave_started", Array("start_meteor_multiball","init_meteor1","init_meteor2","init_meteor3","init_meteor4","raise_diverter","stop_some_modes_for_mw","backglass_dark_off","backglass_chaos_off","backglass_wave_on","backglass_ball_off")
            .Add "stop_some_modes_for_mw", Array("stop_skillshots","stop_combos","stop_ship_save","stop_timewarp","stop_shields") '"stop_extra_ball","stop_mystery","stop_training_qualify"
            '.Add "mode_meteor_wave_stopping", Array("backglass_dark_on","backglass_chaos_on")
            'Start up in correct wave
            .Add "mode_meteor_wave_started{current_player.shot_meteor_wave1 == 0}", Array("meteor_wave1_running","meteor_wave0_music_stop")
            .Add "mode_meteor_wave_started{current_player.shot_meteor_wave1 == 2 && current_player.shot_meteor_wave2 == 0}", Array("meteor_wave2_running","meteor_wave1_music_stop")
            .Add "mode_meteor_wave_started{current_player.shot_meteor_wave2 == 2 && current_player.shot_meteor_wave3 == 0}", Array("meteor_wave3_running","meteor_wave2_music_stop")
            .Add "mode_meteor_wave_started{current_player.shot_meteor_wave3 == 2 && current_player.shot_meteor_wave4 == 0}", Array("meteor_wave4_running","meteor_wave3_music_stop")
            .Add "mode_meteor_wave_started{current_player.shot_meteor_wave4 == 2 && current_player.shot_meteor_wave5 == 0}", Array("meteor_wave5_running","meteor_wave4_music_stop")
            .Add "mode_meteor_wave_started{current_player.shot_meteor_wave5 == 2 && current_player.shot_meteor_wave6 == 0}", Array("meteor_wave6_running","meteor_wave5_music_stop")
            .Add "mode_meteor_wave_started{current_player.shot_meteor_wave6 == 2 && current_player.shot_meteor_wave7 == 0}", Array("meteor_wave7_running","meteor_wave6_music_stop")
            .Add "mode_meteor_wave_started{current_player.shot_meteor_wave7 == 2 && current_player.shot_meteor_wave8 == 0}", Array("meteor_wave8_running","meteor_wave7_music_stop")
            .Add "mode_meteor_wave_started{current_player.shot_meteor_wave8 == 2 && current_player.shot_meteor_wave9 == 0}", Array("meteor_wave9_running","meteor_wave8_music_stop")
            'Successful center target hit, fire proton round if available
            .Add "s_TargetMystery3_active{current_player.shot_proton_round1 == 1 && current_player.shot_proton_round2 == 0}", Array("fire_proton_round1","proton_fired")
            .Add "s_TargetMystery3_active{current_player.shot_proton_round2 == 1 && current_player.shot_proton_round3 == 0}", Array("fire_proton_round2","proton_fired")
            .Add "s_TargetMystery3_active{current_player.shot_proton_round3 == 1 && current_player.shot_proton_round4 == 0}", Array("fire_proton_round3","proton_fired")
            .Add "s_TargetMystery3_active{current_player.shot_proton_round4 == 1 && current_player.shot_proton_round5 == 0}", Array("fire_proton_round4","proton_fired")
            .Add "s_TargetMystery3_active{current_player.shot_proton_round5 == 1 && current_player.shot_proton_round6 == 0}", Array("fire_proton_round5","proton_fired")
            .Add "s_TargetMystery3_active{current_player.shot_proton_round6 == 1}", Array("fire_proton_round6","proton_fired","reset_proton_charges")
            'Successful center orbit left, fire proton round if available
            .Add "center_orbit_left_hit{current_player.shot_proton_round1 == 1 && current_player.shot_proton_round2 == 0}", Array("fire_proton_round1","proton_fired")
            .Add "center_orbit_left_hit{current_player.shot_proton_round2 == 1 && current_player.shot_proton_round3 == 0}", Array("fire_proton_round2","proton_fired")
            .Add "center_orbit_left_hit{current_player.shot_proton_round3 == 1 && current_player.shot_proton_round4 == 0}", Array("fire_proton_round3","proton_fired")
            .Add "center_orbit_left_hit{current_player.shot_proton_round4 == 1 && current_player.shot_proton_round5 == 0}", Array("fire_proton_round4","proton_fired")
            .Add "center_orbit_left_hit{current_player.shot_proton_round5 == 1 && current_player.shot_proton_round6 == 0}", Array("fire_proton_round5","proton_fired")
            .Add "center_orbit_left_hit{current_player.shot_proton_round6 == 1}", Array("fire_proton_round6","proton_fired","reset_proton_charges")
            'Successful center orbit right, fire proton round if available
            .Add "center_orbit_right_hit{current_player.shot_proton_round1 == 1 && current_player.shot_proton_round2 == 0}", Array("fire_proton_round1","proton_fired")
            .Add "center_orbit_right_hit{current_player.shot_proton_round2 == 1 && current_player.shot_proton_round3 == 0}", Array("fire_proton_round2","proton_fired")
            .Add "center_orbit_right_hit{current_player.shot_proton_round3 == 1 && current_player.shot_proton_round4 == 0}", Array("fire_proton_round3","proton_fired")
            .Add "center_orbit_right_hit{current_player.shot_proton_round4 == 1 && current_player.shot_proton_round5 == 0}", Array("fire_proton_round4","proton_fired")
            .Add "center_orbit_right_hit{current_player.shot_proton_round5 == 1 && current_player.shot_proton_round6 == 0}", Array("fire_proton_round5","proton_fired")
            .Add "center_orbit_right_hit{current_player.shot_proton_round6 == 1}", Array("fire_proton_round6","proton_fired","reset_proton_charges")
            'Handle fired proton
            .Add "proton_fired", Array("check_protons","proton_fired_flash_show","score_10000")
            'Handle events after meteor is downed
            .Add "meteor1_down", Array("check_meteor_wave")
            .Add "meteor2_down", Array("check_meteor_wave")
            .Add "meteor3_down", Array("check_meteor_wave")
            .Add "meteor4_down", Array("check_meteor_wave")
            'Stop the current successful wave
            .Add "check_meteor_wave.4{current_player.num_meteors_to_drop < 0}", Array("zero_num_meteors_to_drop")
            .Add "check_meteor_wave.1{current_player.num_meteors_to_drop <= 0 && current_player.nuke_just_used == 0}", Array("meteor_wave_done")
            .Add "meteor_wave_done{current_player.meteor_wave_running == 1}", Array("finish_meteor_wave","score_wave_count")
            .Add "detonate_nuke{current_player.meteor_wave_running == 1}", Array("finish_meteor_wave","score_wave_count")
            .Add "meteor_wave_done_done.2{current_player.shot_meteor_wave1 == 1}", Array("meteor_wave1_done","play_voc_wave_completed")
            .Add "meteor_wave_done_done.2{current_player.shot_meteor_wave2 == 1}", Array("meteor_wave2_done","play_voc_wave_completed")
            .Add "meteor_wave_done_done.2{current_player.shot_meteor_wave3 == 1}", Array("meteor_wave3_done","play_voc_wave_completed")
            .Add "meteor_wave_done_done.2{current_player.shot_meteor_wave4 == 1}", Array("meteor_wave4_done","play_voc_wave_completed")
            .Add "meteor_wave_done_done.2{current_player.shot_meteor_wave5 == 1}", Array("meteor_wave5_done","play_voc_wave_completed","light_eb")
            .Add "meteor_wave_done_done.2{current_player.shot_meteor_wave6 == 1}", Array("meteor_wave6_done","play_voc_wave_completed")
            .Add "meteor_wave_done_done.2{current_player.shot_meteor_wave7 == 1}", Array("meteor_wave7_done","play_voc_wave_completed")
            .Add "meteor_wave_done_done.2{current_player.shot_meteor_wave8 == 1}", Array("meteor_wave8_done","play_voc_wave_completed")
            .Add "meteor_wave_done_done.2{current_player.shot_meteor_wave9 == 1}", Array("meteor_wave9_done","activate_final_wave_wizard")
            .Add "meteor_wave_done_done.2{current_player.training_heal_achieved==0}", Array("drop_diverter")
            .Add "meteor_wave_done_done.1", Array("stop_meteor_wave")
            'restart fire protons
            .Add "check_protons{current_player.shot_proton_round1==0}", Array("restart_fire_protons")
            'earth hit show
            .Add "earth_hit", Array("mw_lsing_earth_hit","mw_rsling_earth_hit")
            'stop wave
            .Add "timer_meteor_wave_finish_complete", Array("meteor_wave_done_done")
            .Add "timer_meteor_wave_nuked_complete", Array("meteor_wave_done_done")
        End With

        'Randomize which meteor gets hit by proton cannon
        With .RandomEventPlayer()
            '.Debug = True
            With .EventName("check_protons")
                .Add "meteor1_proton_hit{current_player.shot_meteor1_light > 0}", 1
                .Add "meteor2_proton_hit{current_player.shot_meteor2_light > 0}", 1
                .Add "meteor3_proton_hit{current_player.shot_meteor3_light > 0}", 1
                .Add "meteor4_proton_hit{current_player.shot_meteor4_light > 0}", 1
                .ForceAll = False
                .ForceDifferent = False
            End With
            With .EventName("play_sfx_LMet")
                .Add "play_sfx_LMet1", 1
                .Add "play_sfx_LMet2", 1
                .Add "play_sfx_LMet3", 1
                .Add "play_sfx_LMet4", 1
                .Add "play_sfx_LMet5", 1
                .Add "play_sfx_LMet6", 1
                .Add "play_sfx_LMet7", 1
                .Add "play_sfx_LMet8", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
            With .EventName("earth_hit")
                .Add "play_sfx_EarthHit1", 1
                .Add "play_sfx_EarthHit2", 1
                .Add "play_sfx_EarthHit3", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
            With .EventName("proton_fired")
                .Add "play_sfx_LPF1", 1
                .Add "play_sfx_LPF2", 1
                .Add "play_sfx_LPF3", 1
                .Add "play_sfx_LPF4", 1
                .Add "play_sfx_LPF5", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
        End With


        With .DOFPlayer()
            With .EventName("proton_fired")
                .Action = "DOF_PULSE"
                .DOFEvent = 140
            End With
            With .EventName("play_sfx_LMet")
                .Action = "DOF_PULSE"
                .DOFEvent = 141
            End With
            With .EventName("earth_hit")
                .Action = "DOF_PULSE"
                .DOFEvent = 142
            End With
            With .EventName("meteor1_raise")
                .Action = "DOF_PULSE"
                .DOFEvent = 114
            End With
            With .EventName("meteor2_raise")
                .Action = "DOF_PULSE"
                .DOFEvent = 114
            End With
            With .EventName("meteor3_raise")
                .Action = "DOF_PULSE"
                .DOFEvent = 115
            End With
            With .EventName("meteor4_raise")
                .Action = "DOF_PULSE"
                .DOFEvent = 115
            End With
        End With


        'Define a shot profile with four states
        With .ShotProfiles("meteor_temp")
            With .States("unlit")
                .Key = "key_meteor_off"
                .Show = "off"
            End With
            With .States("cool")
                .Key = "key_meteor_cool"
                .Show = "flash_color_with_fade"
                .Speed = 2
                With .Tokens()
                    .Add "color", MeteorCoolColor
                    .Add "fade", 1000
                End With
            End With
            With .States("warm")
                .Key = "key_meteor_warm"
                .Show = "flash_color_with_fade"
                .Speed = 5
                With .Tokens()
                    .Add "color", MeteorWarmColor
                    .Add "fade", 1000
                End With
            End With
            With .States("hot")
                .Key = "key_meteor_hot"
                .Show = "flash_color"
                .Speed = 12
                With .Tokens()
                    .Add "color", MeteorHotColor
                End With
            End With
        End With

        'Proton shot is ready, two states
        With .ShotProfiles("proton_shot_ready")
            With .States("unlit")
                .Key = "p_shot_not_ready"
                .Show = "off"
                With .Tokens()
                    .Add "lights", "tFire"
                End With
            End With
            With .States("ready")
                .Key = "p_shot_is_ready"
                .Show = "flash_color_with_fade"
                .Speed = 2
                With .Tokens()
                    .Add "fade", 400
                    .Add "color", ProtonColor
                    .Add "lights", "tFire"
                End With
            End With
        End With

        'Define fire proton shots
        With .Shots("fire_protons")
            .Profile = "proton_shot_ready"
            With .ControlEvents()
                .Events = Array("mode_meteor_wave_started{current_player.shot_proton_round1==1}","light_proton_charge3")
                .State = 1
            End With
            .RestartEvents = Array("restart_fire_protons")
        End With

        'Define health shots
        With .Shots("mw_health")
            .Profile = "health_shot_ready"
            With .ControlEvents()
                .Events = Array("mode_meteor_wave_started")
                .State = 1
            End With
            .RestartEvents = Array("finish_meteor_wave")
        End With

        'Define meteor shots
        For x = 1 to 4
            With .Shots("meteor"&x&"_light")
                .Profile = "meteor_temp"
                With .Tokens()
                    .Add "lights", "LMet"&x
                End With
                With .ControlEvents()
                    .Events = Array("meteor"&x&"_cool")
                    .State = 1
                End With
                With .ControlEvents()
                    .Events = Array("meteor"&x&"_warm")
                    .State = 2
                End With
                With .ControlEvents()
                    .Events = Array("meteor"&x&"_hot")
                    .State = 3
                End With
                .ResetEvents = Array("meteor"&x&"_down")
            End With
        Next


        'Meteor state machines
        For x = 1 to 4   'for each meteor

            With .StateMachines("meteor"&x)
                '.Debug = True
                .PersistState = False
                .StartingState = "init"

                'States
                With .States("init")
                    .Label = "Init State"
                End With
                With .States("down")
                    .Label = "Down State"
                    .EventsWhenStarted = Array("meteor"&x&"_down","restart_meteor"&x&"_timer")
                End With
                With .States("up_cool")
                    .Label = "Up Cool"
                    .EventsWhenStarted = Array("meteor"&x&"_cool","meteor"&x&"_raise")
                End With
                With .States("up_warm")
                    .Label = "Up Warm"
                    .EventsWhenStarted = Array("meteor"&x&"_warm")
                End With
                With .States("up_hot")
                    .Label = "Up Hot"
                    .EventsWhenStarted = Array("meteor"&x&"_hot")
                End With

                'Transitions
                With .Transitions()
                    .Source = Array("init")
                    .Target = "up_cool"
                    .Events = Array("timer_meteor"&x&"_init_complete")
                    .EventsWhenTransitioning = Array("restart_meteor"&x&"_timer")
                End With
                With .Transitions()
                    .Source = Array("down")
                    .Target = "up_cool"
                    .Events = Array("timer_meteor"&x&"_tick{current_player.num_meteors_to_raise>0 && devices.timers.meteor"&x&".ticks=="&MeteorDropTicks&"}")
                End With
                With .Transitions()
                    .Source = Array("up_cool")
                    .Target = "up_warm"
                    .Events = Array("timer_meteor"&x&"_tick{devices.timers.meteor"&x&".ticks=="&MeteorDropTicks+MeteorCoolTicks&"}")
                End With
                With .Transitions()
                    .Source = Array("up_warm")
                    .Target = "up_hot"
                    .Events = Array("timer_meteor"&x&"_tick{devices.timers.meteor"&x&".ticks=="&MeteorDropTicks+MeteorCoolTicks+MeteorWarmTicks&"}")
                End With
                With .Transitions()  'earth hit
                    .Source = Array("up_hot")
                    .Target = "down"
                    .Events = Array("timer_meteor"&x&"_complete")
                    .EventsWhenTransitioning = Array("meteor"&x&"_knockdown","earth_hit","earth_flash","earth_bg")
                End With
                With .Transitions()  'normal hit
                    .Source = Array("up_cool")
                    .Target = "down"
                    .Events = Array("s_DTMeteor"&x&"_active")
                    .EventsWhenTransitioning = Array("meteor"&x&"_hit","meteor"&x&"_explodes_show","meteor"&x&"_flash_show","meteor"&x&"_blink_show","play_sfx_LMet","score_80000")
                End With
                With .Transitions()  'normal hit
                    .Source = Array("up_warm")
                    .Target = "down"
                    .Events = Array("s_DTMeteor"&x&"_active")
                    .EventsWhenTransitioning = Array("meteor"&x&"_hit","meteor"&x&"_explodes_show","meteor"&x&"_flash_show","meteor"&x&"_blink_show","play_sfx_LMet","score_90000")
                End With
                With .Transitions()  'normal hit
                    .Source = Array("up_hot")
                    .Target = "down"
                    .Events = Array("s_DTMeteor"&x&"_active")
                    .EventsWhenTransitioning = Array("meteor"&x&"_hit","meteor"&x&"_explodes_show","meteor"&x&"_flash_show","meteor"&x&"_blink_show","play_sfx_LMet","score_100000")
                End With
                With .Transitions()  'knockdowns
                    .Source = Array("up_cool","up_warm","up_hot")
                    .Target = "down"
                    .Events = Array("meteor"&x&"_proton_hit","finish_meteor_wave","cluster_bomb_fired","detonate_nuke.2","mode_meteor_wave_stopping")
                    .EventsWhenTransitioning = Array("meteor"&x&"_knockdown")
                End With
            End With

            With .Timers("meteor"&x)
                '.Debug = True
                .TickInterval = MeteorTimerTickInterval
                .StartValue = 0
                .EndValue = MeteorTotalTicks
                With .ControlEvents()
                    .EventName = "restart_meteor"&x&"_timer"
                    .Action = "restart"
                End With
                With .ControlEvents()
                    .EventName = "stop_meteor"&x&"_timer"
                    .Action = "stop"
                End With
            End With

            'Randomize the initialization time for each meteor
            With .Timers("meteor"&x&"_init")
                '.Debug = True
                .TickInterval = MeteorTimerInitTickInterval
                .StartValue = 0
                .EndValue = 5
                .StartRunning = True
                With .ControlEvents()
                    .EventName = "meteor"&x&"_init_tick1"
                    .Action = "jump"
                    .Value = 1
                End With
                With .ControlEvents()
                    .EventName = "meteor"&x&"_init_tick2"
                    .Action = "jump"
                    .Value = 2
                End With
                With .ControlEvents()
                    .EventName = "meteor"&x&"_init_tick3"
                    .Action = "jump"
                    .Value = 3
                End With
                With .ControlEvents()
                    .EventName = "meteor"&x&"_init_tick4"
                    .Action = "jump"
                    .Value = 4
                End With
            End With

            With .RandomEventPlayer()
                '.Debug = True
                With .EventName("init_meteor"&x)
                    .Add "meteor"&x&"_init_tick1", 1
                    .Add "meteor"&x&"_init_tick2", 1
                    .Add "meteor"&x&"_init_tick3", 1
                    .Add "meteor"&x&"_init_tick4", 1
                    .ForceAll = False
                    .ForceDifferent = False
                End With
             End With

            'Light shows
            With .ShowPlayer()
                With .EventName("meteor"&x&"_explodes_show")
                    .Key = "key_meteor"&x&"_explodes"
                    .Show = "meteor"&x&"_explodes"
                    .Speed = 1
            .Loops = 1
                    With .Tokens()
                        .Add "color", "ffffff"
                    End With
                End With
                With .EventName("meteor"&x&"_blink_show")
                    .Key = "key_meteor"&x&"_blink"
                    .Show = "flash_color"
                    .Speed = 22
                    .Loops = 4
                    With .Tokens()
                        .Add "lights", "LMet"&x
                        .Add "color", ProtonColor
                    End With
                End With
                With .EventName("meteor"&x&"_proton_hit")
                    .Key = "key_meteor"&x&"_proton_hit"
                    .Show = "meteor"&x&"_explodes"
                    .Speed = 1
            .Loops = 1
                    With .Tokens()
                        .Add "color", ProtonColor
                    End With
                End With
            End With

            With .VariablePlayer()
                With .EventName("meteor"&x&"_raise")
                    With .Variable("num_meteors_to_raise")
                        .Action = "add"
                        .Int = -1
                    End With
                End With
                With .EventName("meteor"&x&"_down")  'gets called after a knockdown too
                    With .Variable("num_meteors_to_drop")
                        .Action = "add"
                        .Int = -1
                    End With
                End With
            End With
        Next

        'Stage the wave finish
        With .Timers("meteor_wave_finish")
            '.Debug = True
            .TickInterval = 500
            .StartValue = 0
            .EndValue = 1
            With .ControlEvents()
                .EventName = "finish_meteor_wave{current_player.nuke_just_used == 0}"
                .Action = "restart"
            End With
        End With
        With .Timers("meteor_wave_nuked")
            '.Debug = True
            .TickInterval = 1000
            .StartValue = 0
            .EndValue = 9
            With .ControlEvents()
                .EventName = "finish_meteor_wave{current_player.nuke_just_used == 1}"
                .Action = "restart"
            End With
        End With

        'Light shows
        With .ShowPlayer()
            With .EventName("mode_meteor_wave_started")
                .Key = "key_bumpers_off"
                .Show = "off"
                With .Tokens()
                    .Add "lights", "tBumper"
                End With
            End With
            With .EventName("proton_fired")
                .Key = "key_proton_fired"
                .Priority = 10
                .Show = "flash_color"
                .Speed = 20
                .Loops = 5
                With .Tokens()
                    .Add "lights", "tBlast"
                    .Add "color", ProtonColor
                End With
            End With
            With .EventName("meteor1_flash_show")
                .Key = "key_meteor1_flash"
                .Show = "flash_color_with_fade"
                .Speed = 20
                .Loops = 3
                With .Tokens()
                    .Add "lights", "FL2"
                    .Add "color", MeteorFlashColor
                    .Add "fade", 300
                End With
            End With
            With .EventName("meteor2_flash_show")
                .Key = "key_meteor2_flash"
                .Show = "flash_color_with_fade"
                .Speed = 20
                .Loops = 3
                With .Tokens()
                    .Add "lights", "FL2"
                    .Add "color", MeteorFlashColor
                    .Add "fade", 300
                End With
            End With
            With .EventName("meteor3_flash_show")
                .Key = "key_meteor3_flash"
                .Show = "flash_color_with_fade"
                .Speed = 20
                .Loops = 3
                With .Tokens()
                    .Add "lights", "FL1"
                    .Add "color", MeteorFlashColor
                    .Add "fade", 300
                End With
            End With
            With .EventName("meteor4_flash_show")
                .Key = "key_meteor4_flash"
                .Show = "flash_color_with_fade"
                .Speed = 20
                .Loops = 3
                With .Tokens()
                    .Add "lights", "FL1"
                    .Add "color", MeteorFlashColor
                    .Add "fade", 300
                End With
            End With
            With .EventName("proton_fired_flash_show")
                .Key = "key_proton_flash"
                .Show = "flash_color_with_fade"
                .Speed = 20
                .Loops = 3
                With .Tokens()
                    .Add "lights", "FL3"
                    .Add "color", ProtonColor
                    .Add "fade", 300
                End With
            End With
            'Earth hit
            With .EventName("earth_hit")
                .Key = "key_earth_hit"
                .Priority = 15
                .Show = "earth_hit"
                .Speed = 1
                .Loops = 1
            End With
            With .EventName("earth_bg")
                .Key = "key_earth_bg"
                .Priority = 15
                .Show = "earth_hit_bg"
                .Speed = 1
                .Loops = 1
            End With
            With .EventName("earth_flash")
                .Key = "key_earth_flash"
                .Priority = 15
                .Show = "flash_color"
                .Speed = 15
                .Loops = 3
                With .Tokens()
                    .Add "lights", "tFlasherU"
                    .Add "color", EarthHitColor
                End With
            End With
            With .EventName("mw_lsing_earth_hit")
                .Key = "key_mw_lsing_earth_hit"
                .Show = "flash_color"
                .Speed = 13
                .Loops = 6
                With .Tokens()
                    .Add "lights", "tFL5"
                    .Add "color", EarthHitColor
                End With
            End With
            With .EventName("mw_rsling_earth_hit")
                .Key = "key_mw_rsling_earth_hit"
                .Show = "flash_color"
                .Speed = 13
                .Loops = 6
                With .Tokens()
                    .Add "lights", "tFL6"
                    .Add "color", EarthHitColor
                End With
            End With
            ' With .EventName("mw_lsing_earth_hit")
            '     .Key = "key_mw_lsing_earth_hit"
            '     .Show = "lsling_swap_2_2_b"
            '     .Speed = 2
            '     .Loops = 7
            '     With .Tokens()
            '         .Add "color1", "ff1100"
            '         .Add "color2", "001122"
            '         .Add "intensity", 100
            '     End With
            ' End With
            ' With .EventName("mw_rsling_earth_hit")
            '     .Key = "key_mw_rsling_earth_hit"
            '     .Show = "rsling_swap_2_2_b"
            '     .Speed = 2
            '     .Loops = 7
            '     With .Tokens()
            '         .Add "color1", "ff1100"
            '         .Add "color2", "001122"
            '         .Add "intensity", 100
            '     End With
            ' End With
        End With

        With .VariablePlayer()
            '.Debug = True
        With .EventName("mode_meteor_wave_started")
                With .Variable("meteor_wave_running")
                    .Action = "set"
                    .Int = 1
                End With
        With .Variable("num_meteors_to_raise")
                    .Action = "set"
          .Int = "current_player.meteors_per_wave"
        End With
                With .Variable("num_meteors_to_drop")
                    .Action = "set"
          .Int = "current_player.meteors_per_wave"
        End With
                With .Variable("nuke_just_used")
                    .Action = "set"
                    .Int = 0
                End With
      End With
            With .EventName("finish_meteor_wave")
                With .Variable("meteors_per_wave")
                    .Action = "add"
                    .Int = 3
                End With
            End With
            With .EventName("meteor_wave_done")
                With .Variable("meteor_wave_running")
                    .Action = "set"
                    .Int = 0
                End With
            End With
            With .EventName("score_wave_count")
                With .Variable("num_waves_completed_this_ball")
                    .Action = "add"
                    .Int = 1
                End With
                With .Variable("num_waves_completed")
                    .Action = "add"
                    .Int = 1
                End With
            End With
            With .EventName("mode_meteor_wave_stopping")
                With .Variable("meteor_wave_running")
                    .Action = "set"
                    .Int = 0
                End With
            End With
            With .EventName("light_eb")
                With .Variable("light_the_eb")
                    .Action = "set"
                    .Int = 1
                End With
            End With
            'nuke event
            With .EventName("detonate_nuke.1")
                With .Variable("num_meteors_to_raise")
                    .Action = "set"
                    .Int = 0
                End With
                With .Variable("num_meteors_to_drop")
                    .Action = "set"
                    .Int = 0
                End With
                With .Variable("nuke_just_used")
                    .Action = "set"
                    .Int = 1
                End With
            End With
            With .EventName("zero_num_meteors_to_drop")
                With .Variable("num_meteors_to_drop")
                    .Action = "set"
                    .Int = 0
                End With
            End With
    End With

        With .LightPlayer()
            With .EventName("mode_meteor_wave_started")
        With .Lights("GI")
          .Color = "000000"
        End With
      End With
            With .EventName("stop_meteor_wave")
                With .Lights("GI")
                    .Color = GIColor3000k
                End With
            End With
        End With


        With .SegmentDisplayPlayer()

            With .EventName("mode_meteor_wave_started")
                With .Display("pf")
                    .Key = "key_mw_pf1"
                    .Text = "{current_player.num_meteors_to_drop:0>2}"
                End With
            End With
            With .EventName("check_meteor_wave.2")
                With .Display("pf")
                    .Key = "key_mw_pf2"
                    .Text = "{current_player.num_meteors_to_drop:0>2}"
                End With
            End With
            With .EventName("detonate_nuke")
                With .Display("pf")
                    .Key = "key_mw_pf3"
                    .Text = """00"""
                    .Expire = 11000
                    .Priority = 11000
                End With
                With .Display("player1")
                    .Key = "key_mw_nuke1"
                    .Text = """"""
                    .Expire = 11000
                    .Priority = 11000
                End With
                With .Display("player2")
                    .Key = "key_mw_nuke2"
                    .Text = """  NUKED """
                    .Flashing = "all"
                    .Expire = 11000
                    .Priority = 11000
                End With
                With .Display("player3")
                    .Key = "key_mw_nuke3"
                    .Text = """ NUKED  """
                    .Flashing = "all"
                    .Expire = 11000
                    .Priority = 11000
                End With
                With .Display("player4")
                    .Key = "key_mw_nuke4"
                    .Text = """"""
                    .Expire = 11000
                    .Priority = 11000
                End With
            End With


            With .EventName("mode_meteor_wave_started{current_player.number == 1 or current_player.number == 2}")
                With .Display("player1")
                    .Text = """METEOR """
                    .Flashing = "all"
                    .Expire = 4000
                    .Priority = 1000
                End With
                With .Display("player2")
                    .Text = """WAVE  """
                    .Flashing = "all"
                    .Expire = 4000
                    .Priority = 1000
                End With
                With .Display("player3")
                    .Text = """METEORS"""
                    .Priority = 10000
                End With
                With .Display("player4")
                    .Text = "{current_player.num_meteors_to_drop:0>2}"
                End With
            End With

            With .EventName("mode_meteor_wave_started{current_player.number == 3 or current_player.number == 4}")
                With .Display("player1")
                    .Text = """METEORS"""
                    .Priority = 10000
                End With
                With .Display("player2")
                    .Text = "{current_player.num_meteors_to_drop:0>2}"
                End With
                With .Display("player3")
                    .Text = """METEOR """
                    .Flashing = "all"
                    .Expire = 4000
                    .Priority = 1000
                End With
                With .Display("player4")
                    .Text = """WAVE  """
                    .Flashing = "all"
                    .Expire = 4000
                    .Priority = 1000
                End With
            End With

            With .EventName("check_meteor_wave.2{current_player.number == 1 or current_player.number == 2}")
                With .Display("player3")
                    .Text = """METEORS"""
                    .Priority = 10000
                End With
                With .Display("player4")
                    .Text = "{current_player.num_meteors_to_drop:0>2}"
                    .Priority = 10000
                End With
            End With
            With .EventName("check_meteor_wave.2{current_player.number == 3 or current_player.number == 4}")
                With .Display("player1")
                    .Text = """METEORS"""
                    .Priority = 10000
                End With
                With .Display("player2")
                    .Text = "{current_player.num_meteors_to_drop:0>2}"
                    .Priority = 10000
                End With
            End With
        End With

    End With

End Sub


'Moon Multiball Qualify Mode.

'All of the in/outlane lights need to be lit (by hitting their swtiches). The lights can be rotated by the flippers.
'Once they are all lit, the "Moon Lauch" insert flashes indicating a ball can be locked on the moon ramp
'Once a ball is successfully launched on the ramp it remains locked there.
'A total of 2 balls can be locked. If any more balls go up there, then one will be released to keep the total at 2 max. Also, if a ball goes up there before the "Moon Launch" is lit, then a ball will be released
'All locked balls can be released by pressing the right magna.
'The right magna is disabled when an outlane switch is hit



Sub CreateMoonMultiballQualifyMode
    Dim x

    With CreateGlfMode("moon_multiball_qualify", 590)
        .StartEvents = Array("new_ball_started","stop_training","wizard_mode_ended")
        .StopEvents = Array("mode_base_stopping","start_training_select","wizard_mode_started")
        '.Debug=True

        With .EventPlayer()
            '.Debug=True
            'Reset
            .Add "mode_moon_multiball_qualify_started{current_player.shot_moon_missile2 == 1}", Array("disable_moon_qualify_shots")
            .Add "mode_moon_multiball_qualify_started{current_player.training_moon_missile_used==1}", Array("restart_moon_missiles","restart_moon_qualify_shots") 'moon missile used during training
            .Add "mode_moon_multiball_qualify_started{current_player.training_moon_missile_achieved==1 && devices.state_machines.moon_mb.state!=""locking"" && current_player.shot_moon_missile2 == 0}", Array("restart_moon_qualify_shots") 'with training boost
            .Add "restart_moon_qualify_shots{current_player.training_moon_missile_achieved==1}", Array("boost_qualify_shots") 'with training boost
            .Add "mode_moon_multiball_qualify_started{current_player.shot_moon_missile1 == 1}", Array("backglass_moon_on")
            .Add "mode_moon_multiball_qualify_stopping", Array("backglass_moon_off")
            'Release a ball (Lower the diverter pin) if we are not
            .Add "s_MoonRamp_active{devices.state_machines.moon_mb.state!=""locking"" && devices.ball_devices.moon_lock.balls==0}", Array("release_moon_ball")
            .Add "balldevice_moon_lock_ball_entered{devices.state_machines.moon_mb.state!=""locking"" && devices.ball_devices.moon_lock.balls > current_player.multiball_lock_moon_launch_balls_locked && devices.ball_devices.moon_lock.balls > current_player.leftover_balls_in_lock}", Array("release_moon_ball")
            .Add "balldevice_moon_lock_ball_entered{devices.state_machines.moon_mb.state==""in_progress""}", Array("release_moon_ball")
            'After a ball has been locked, if the number of balls in the lock is greater than the current players locked balls, release one
            .Add "multiball_lock_moon_launch_locked_ball{devices.ball_devices.moon_lock.balls > current_player.multiball_lock_moon_launch_balls_locked}", Array("release_moon_ball")
            'Light missiles
            .Add "multiball_lock_moon_launch_locked_ball{current_player.multiball_lock_moon_launch_balls_locked==1}", Array("light_missile1")
            .Add "multiball_lock_moon_launch_locked_ball{current_player.multiball_lock_moon_launch_balls_locked==2}", Array("light_missile2","check_fully_loaded") 'check for wizard mode qualification
            'Disable qualify shots during a wave
            .Add "start_meteor_wave", Array("disable_moon_qualify_shots")
            .Add "stop_meteor_wave{current_player.shot_moon_missile2 == 0}", Array("enable_moon_qualify_shots")
            'Handle mystery award
            .Add "mystery_moon_ready", Array("complete_moon_qualify_shots")
            'Scoring
            .Add "right_ramp_hit", Array("score_2000")
            .Add "light_missile1", Array("score_50000","slings_powerup_added","lsling_powerup_mm","rsling_powerup_mm","mm_acquired","backglass_moon_on")
            .Add "light_missile2", Array("score_100000","slings_powerup_added","lsling_powerup_mm","rsling_powerup_mm","mm_acquired","backglass_moon_on")
            .Add "qualify_lock_hit", Array("score_2000")
            .Add "qualify_lock_on_complete", Array("score_50000")
        End With


        'Lock the balls
        With .MultiballLocks("moon_launch")
            '.Debug=True
            .EnableEvents = Array("enable_moon_mb_locking", "mode_moon_multiball_qualify_started{devices.state_machines.moon_mb.state==""locking""}")
            .DisableEvents = Array("restart_moon_qualify_shots")
            .ResetEvents = Array("start_moon_multiball.2","restart_moon_missiles")
            .BallsToLock = 2
            .LockDevices = Array("moon_lock")
        End With


        With .DOFPlayer()
            With .EventName("mm_acquired")
                .Action = "DOF_PULSE"
                .DOFEvent = 171
            End With
        End With


        With .SoundPlayer()
            With .EventName("qualify_lock_on_complete")
                .Key = "key_voc_LMLR"
                .Sound = "voc_LMLR"
            End With
            With .EventName("light_missile1")
                .Key = "key_voc_LMR1"
                .Sound = "voc_LMR1"
            End With
            With .EventName("light_missile2")
                .Key = "key_voc_LMR2"
                .Sound = "voc_LMR2"
            End With
            With .EventName("s_GateR_active")
                .Key = "key_sfx_right_ramp_moon_launch"
                .Sound = "sfx_right_ramp_moon_launch"
            End With
            ' With .EventName("")
            '     .Sound = "voc_ball_locked"
            ' End With
        End With


        'Lane qualification shots
        For x = 1 to 3
            With .Shots("moon_lane"&x)
                .Switch = MoonQualifySwitches(x-1)
                .Profile = "flicker_on"
                With .Tokens()
                    .Add "lights", MoonQualifyLightNames(x-1)
                    .Add "color", MoonColor
                End With
                With .ControlEvents()
                    .Events = Array("boost_qualify_shots","complete_moon_qualify_shots")
                    .State = 1
                End With
            End With
        Next
        With .Shots("moon_lane4")
            .Switch = MoonQualifySwitches(3)
            .Profile = "flicker_on"
            With .Tokens()
                .Add "lights", MoonQualifyLightNames(3)
                .Add "color", MoonColor
            End With
            With .ControlEvents()
                .Events = Array("complete_moon_qualify_shots")
                .State = 1
            End With
        End With

        'Missile lights
        For x = 1 to 2
            With .Shots("moon_missile"&x)
                .Profile = "flicker_on"
                With .Tokens()
                    .Add "lights", "LMR"&x
                    .Add "color", MoonColor
                End With
                With .ControlEvents()
                    .Events = Array("light_missile"&x,"complete_moon_missiles")
                    .State = 1
                End With
                .RestartEvents = Array("multiball_moon_started","restart_moon_missiles")
            End With
        Next

        'Moon Lock Ready
        With .Shots("moon_lock_ready")
            .Profile = "qualified_shot"
            With .Tokens()
                .Add "lights", "LMLR"
                .Add "color", MoonColor
            End With
            With .ControlEvents()
                .Events = Array("qualify_lock_on_complete")
                .State = 1
            End With
            .RestartEvents = Array("restart_moon_qualify_shots")
        End With

        With .ShotGroups("qualify_lock")
            .Shots = Array("moon_lane1", "moon_lane2", "moon_lane3", "moon_lane4")
            .RotateLeftEvents = Array("s_left_flipper_active")
            .RotateRightEvents = Array("s_right_flipper_active")
            .RestartEvents = Array("restart_moon_qualify_shots")
            .DisableEvents = Array("disable_moon_qualify_shots")
            .EnableEvents = Array("enable_moon_qualify_shots")
        End With


        With .StateMachines("moon_mb")
            '.Debug=True
            .PersistState = True
            .StartingState = "qualify"

            'States
            With .States("qualify")
                .Label = "Qualify State"
                '.EventsWhenStarted = Array("restart_moon_qualify_shots")
                .EventsWhenStarted = Array("restart_moon_qualify_shots{current_player.ball_just_started == 0}")
            End With
            With .States("locking")
                .Label = "Locking State"
                .EventsWhenStarted = Array("enable_moon_mb_locking")
            End With
            With .States("in_progress")
                .Label = "Multiball In Progress"
                .EventsWhenStarted = Array("disable_moon_qualify_shots")
            End With
            With .States("locks_full")
                .Label = "Multiball Lock Full"
                .EventsWhenStarted = Array("disable_moon_qualify_shots")
            End With

            'Transitions
            With .Transitions()
                .Source = Array("qualify")
                .Target = "locking"
                .Events = Array("qualify_lock_on_complete")
            End With
            With .Transitions()
                .Source = Array("locking", "qualify", "locks_full")
                .Target = "in_progress"
                .Events = Array("start_moon_multiball")
            End With
            With .Transitions()
                .Source = Array("locking")
                .Target = "qualify"
                .Events = Array("multiball_lock_moon_launch_locked_ball")
            End With
            With .Transitions()
                .Source = Array("qualify")
                .Target = "locks_full"
                .Events = Array("multiball_lock_moon_launch_full", "mode_moon_multiball_qualify_started{current_player.shot_moon_missile2 == 1}")
            End With
            With .Transitions()
                .Source = Array("in_progress")
                .Target = "qualify"
                .Events = Array("multiball_moon_ended")
            End With
            With .Transitions()
                .Source = Array("locking","in_progress","locks_full")
                .Target = "qualify"
                .Events = Array("restart_moon_missiles")
            End With
        End With


        With .ShowPlayer()
            With .EventName("start_moon_multiball")
                .Key = "key_moon_launch"
                .Show = "moon_launch"
                .Priority = 50
                .Speed = 1
                .Loops = 1
            End With
            With .EventName("qualify_lock_on_complete")
                .Key = "key_moon_qualified"
                .Show = "flash_color"
                .Speed = 13
                .Loops = 7
                With .Tokens()
                    .Add "lights", "tMoon"
                    .Add "color", MoonColor
                End With
            End With
            'Added moon missile shows
            With .EventName("lsling_powerup_mm")
                .Key = "key_lsling_powerup_mm"
                .Show = "lsling_rotate2_cw"
                .Speed = 2
                .Loops = 3
                With .Tokens()
                    .Add "color1", MoonColor
                    .Add "color2", MoonColor
                    .Add "intensity", SlingDomePowerUpBrightness
                End With
            End With
            With .EventName("rsling_powerup_mm")
                .Key = "key_rsling_powerup_mm"
                .Show = "rsling_rotate2_ccw"
                .Speed = 2
                .Loops = 3
                With .Tokens()
                    .Add "color1", MoonColor
                    .Add "color2", MoonColor
                    .Add "intensity", SlingDomePowerUpBrightness
                End With
            End With
            With .EventName("mm_acquired")
                .Key = "key_mm_acquired"
                .Show = "moon_missile_acquired"
                .Speed = 4
                .Loops = 1
                .Priority = 1000
                With .Tokens()
                    .Add "color", MoonColor
                    .Add "intensity", 100
                End With
            End With
            With .EventName("s_GateR_active")
                .Key = "key_moon_launch_gate"
                .Show = "flash_color"
                .Speed = 13
                .Loops = 9
                With .Tokens()
                    .Add "lights", "LL"
                    .Add "color", MeteorWaveColor
                End With
            End With

        End With

        With .VariablePlayer()
            .Debug=True
            With .EventName("mode_moon_multiball_qualify_started")
        With .Variable("leftover_balls_in_lock")
                    .Action = "set"
          .Int = "devices.ball_devices.moon_lock.balls"
        End With
      End With
            With .EventName("restart_moon_missiles")
                With .Variable("multiball_lock_moon_launch_balls_locked")
                    .Action = "set"
          .Int = 0
        End With
                With .Variable("training_moon_missile_used")
                    .Action = "set"
          .Int = 0
        End With
      End With
    End With

        With .SegmentDisplayPlayer()
            With .EventName("start_moon_multiball")
                With .Display("player2")
                    .Text = """MOON"""
                    .Flashing = "all"
                    .Expire = 2000
                End With
                With .Display("player3")
                    .Text = """LAUNCH"""
                    .Flashing = "all"
                    .Expire = 2000
                End With
            End With
            With .EventName("enable_moon_mb_locking")
                With .Display("player2")
                    .Text = """LOCK"""
                    .Flashing = "all"
                    .Expire = 2000
                End With
                With .Display("player3")
                    .Text = """BALL"""
                    .Flashing = "all"
                    .Expire = 2000
                End With
            End With
        End With


    End With
End Sub


'Moon Multiball Mode.

'All of the in/outlane lights need to be lit (by hitting their swtiches). The lights can be rotated by the flippers.
'Once they are all lit, the "Moon Lauch" insert flashes indicating a ball can be locked on the moon ramp
'Once a ball is successfully launched on the ramp it remains locked there.
'A total of 2 balls can be locked. If any more balls go up there, then one will be released to keep the total at 2 max. Also, if a ball goes up there before the "Moon Launch" is lit, then a ball will be released
'All locked balls can be released by pressing the right magna. Launching balls restarts the lock qualification process.
'The right magna is disabled when an outlane switch is hit


Sub CreateMoonMultiballMode
    Dim x

    With CreateGlfMode("moon_multiball", 600)
        .StartEvents = Array("new_ball_started","mode_moon_multiball_qualify_started") '"stop_training",
        .StopEvents = Array("mode_base_stopping","wizard_mode_ended")  '"start_training_select",
        '.Debug=True

        With .EventPlayer()
            '.Debug=True
            'Launch
            .Add "s_right_magna_key_active{current_player.multiball_lock_moon_launch_balls_locked>0 && current_player.disable_moon_launch==0 && current_player.wizard_mode_running==0}", Array("launch_moon_missiles","restart_moon_qualify_shots","backglass_moon_off")
            .Add "launch_moon_missiles", Array("start_moon_multiball","delayed_release_moon_ball","play_sfx_launch","score_50000")
            'Panic penalty
            .Add "s_right_magna_key_active{current_player.multiball_lock_moon_launch_balls_locked==0 && current_player.disable_moon_launch==0}", Array("launch_panic_penalty")
            .Add "launch_panic_penalty", Array("score_m100000")
        End With


        With .Multiballs("moon")
            '.Debug=True
            .StartEvents = Array("start_moon_multiball.3")
            .BallCount = "current_player.multiball_lock_moon_launch_balls_locked"
            .BallCountType = "add"
            .ShootAgain = 0
            .BallLocks = Array("moon_lock")
        End With

        With .Timers("pause_moon_launch")
            .TickInterval = 100
            .StartValue = 0
            .EndValue = 3
            With .ControlEvents()
                .EventName = GLF_BALL_DRAIN
                .Action = "restart"
            End With
            With .ControlEvents()
                .EventName = "mode_training_select_stopping"
                .Action = "restart"
            End With
        End With

        With .Timers("moon_launch_cooldown")
            .TickInterval = 5000
            .StartValue = 0
            .EndValue = 2
            With .ControlEvents()
                .EventName = "start_moon_multiball"
                .Action = "restart"
            End With
        End With

        ' With .Timers("moon_debug")
        '     .TickInterval = 250
        '     .StartValue = 0
        '     .EndValue = 100000
        '     With .ControlEvents()
        '         .EventName = "mode_moon_multiball_started"
        '         .Action = "restart"
        '     End With
        ' End With


        With .DOFPlayer()
            With .EventName("play_sfx_launch")
                .Action = "DOF_PULSE"
                .DOFEvent = 143
            End With
        End With


        With .SoundPlayer()
            With .EventName("play_sfx_launch")
                .Key = "key_sfx_launch"
                .Sound = "sfx_launch"
            End With
            With .EventName("launch_panic_penalty")
                .Key = "key_sfx_error_buzz"
                .Sound = "sfx_error_buzz"
            End With
        End With

        With .ShowPlayer()
            With .EventName("launch_panic_penalty")
                .Key = "key_launch_panic_penalty"
                .Show = "flash_color"
                .Speed = 13
                .Loops = 7
                With .Tokens()
                    .Add "lights", "tMoonAll"
                    .Add "color", MeteorWaveColor
                End With
            End With
        End With

        With .VariablePlayer()
            '.Debug=True
            With .EventName("start_moon_multiball.1{current_player.wizard_mode_running == 0}")
                With .Variable("multiball_lock_moon_launch_balls_locked")
                    .Action = "set"
          .Int = 0
        End With
            End With
            With .EventName("start_moon_multiball.1")
        With .Variable("leftover_balls_in_lock")
                    .Action = "set"
          .Int = 0
        End With
                With .Variable("disable_moon_launch")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName(GLF_BALL_DRAIN)
        With .Variable("disable_moon_launch")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName("mode_training_select_started")
        With .Variable("disable_moon_launch")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName("mode_moon_multiball_started")
        With .Variable("disable_moon_launch")
                    .Action = "set"
          .Int = 0
        End With
      End With
            With .EventName("timer_pause_moon_launch_complete")
        With .Variable("disable_moon_launch")
                    .Action = "set"
          .Int = 0
        End With
      End With
            With .EventName("timer_moon_launch_cooldown_complete")
        With .Variable("disable_moon_launch")
                    .Action = "set"
          .Int = 0
        End With
      End With

            ' With .EventName("timer_moon_debug_tick")
            '     With .Variable("debug_ball_devices_moon_lock_balls")
            '         .Action = "set"
      '     .Int = "devices.ball_devices.moon_lock.balls"
      '   End With
            '     With .Variable("debug_multiball_lock_moon_launch_balls_locked")
            '         .Action = "set"
      '     .Int = "current_player.multiball_lock_moon_launch_balls_locked"
      '   End With
            '     With .Variable("debug_leftover_balls_in_lock")
            '         .Action = "set"
      '     .Int = "current_player.leftover_balls_in_lock"
      '   End With
            ' End With
    End With

    End With
End Sub


'Mystery Mode.

'All of the mystery shot lights need to be lit (by hitting their swtiches).
'Once they are all lit, the "Mystery Ready" inserts flashes
'The mystery shots will stay lit until the mystery is collected
'When a ball goes into the scoop then
'  1) the meteor wave count down is paused
'  2) a random mystery award is achieved based one what is available (with light show)
'  3) all the mystery lights will be reset to off, meteor wave countdown continued



Sub CreateMysteryMode
    Dim x

    With CreateGlfMode("mystery", 580)
        .StartEvents = Array("new_ball_started","stop_meteor_wave","stop_training","wizard_mode_ended")
        .StopEvents = Array("stop_mystery","mode_base_stopping","start_training_select","wizard_mode_started") ',"start_meteor_wave"

        With .EventPlayer()
            'enable the ball hold if needed
            .Add "mode_mystery_started{current_player.shot_mystery_ready==1 && current_player.flippers_are_dead==0}", Array("enable_scoop_hold")
            '.Add "balldevice_scoop_ball_entered{current_player.shot_mystery_ready==1 && current_player.wizard_mode_is_ready==0}", Array("enable_scoop_hold")
            'run the mystery selection if ready, otherwise move along to training
            .Add "check_mystery{current_player.shot_mystery_ready==0 && current_player.flippers_are_dead==0}", Array("check_training")
            .Add "check_mystery{current_player.shot_mystery_ready==1 && current_player.flippers_are_dead==0}", Array("select_random_mystery")
            'select random mystery and run show
            .Add "select_random_mystery", Array("play_mystery_show")
            'release ball hold if training is not ready
            .Add "restart_qualify_mystery{current_player.shot_training_ready==0}", Array("release_scoop_hold")
            .Add "release_scoop_hold", Array("disable_scoop_hold","start_mwq_timer")
            'reset stuff and continue
            .Add "restart_qualify_mystery", Array("mystery_select_done","check_training")   'Mystery done, so continue the meteor wave qualify countdown
            'handle sss award
            .Add "sss_mystery_ready", Array("complete_mystery_shots","set_sss_mystery_flag")
            'handle callout
            .Add "qualify_mystery_on_complete{current_player.flag_sss_mystery == 0}", Array("play_voc_LMR","enable_scoop_hold","mystery_flash","score_30000")
            .Add "qualify_mystery_hit", Array("score_1000")
        End With

        ' Randomize mystery selection
        With .RandomEventPlayer()
            '.Debug = True
            With .EventName("select_random_mystery")
                .Add "mystery_full_health{current_player.shot_health9_light == 0}", 1
                .Add "mystery_full_protons{current_player.shot_proton_round6 == 0}", 0.7
                .Add "mystery_added_cluster{current_player.shot_cluster_bomb2 == 0}", 0.8
                .Add "mystery_added_saver{current_player.shot_ship_charge3 != 2}", 1
                .Add "mystery_added_shields{current_player.shot_shield_left == 0}", 1
                .Add "mystery_moon_ready{current_player.shot_moon_missile2 == 0 && devices.state_machines.moon_mb.state!=""locking""}", 1
                '.Add "mystery_trainer_ready{current_player.shot_training_ready == 0 && current_player.training_total_achieved < 6}", 1
                .Add "mystery_double_scoring{current_player.scoring_multiplier == 1}", 0.5
                .Add "mystery_super_spinner{current_player.spin_multiplier == 1}", 0.5
                .Add "mystery_super_pops{current_player.pop_multiplier == 1}", 0.5
                .Add "mystery_double_bonus{current_player.bonus_multiplier == 1}", 0.5
                .Add "mystery_relaxed_combos{current_player.combos_relaxed == 0}", 0.5
                .Add "activate_nuke{current_player.nuke_acquired == 0}", 0.5
                '.Add "mystery_eb_is_lit{current_player.eb_ready == 0}", 0.1
                .ForceAll = False
                .ForceDifferent = False
            End With

            With .EventName("qualify_mystery_hit")
                .Add "play_sfx_LM1", 1
                .Add "play_sfx_LM2", 1
                .Add "play_sfx_LM3", 1
                .Add "play_sfx_LM4", 1
                .Add "play_sfx_LM5", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
        End With

        With .DOFPlayer()
            With .EventName("mystery_flash")
                .Action = "DOF_PULSE"
                .DOFEvent = 129
            End With
        End With

        With .SoundPlayer()
            With .EventName("play_voc_LMR")
                .Key = "key_voc_LMR"
                .Sound = "voc_LMR"
            End With

            With .EventName("play_sfx_LM1")
                .Key = "key_sfx_LM1"
                .Sound = "sfx_LM1"
            End With
            With .EventName("play_sfx_LM2")
                .Key = "key_sfx_LM2"
                .Sound = "sfx_LM2"
            End With
            With .EventName("play_sfx_LM3")
                .Key = "key_sfx_LM3"
                .Sound = "sfx_LM3"
            End With
            With .EventName("play_sfx_LM4")
                .Key = "key_sfx_LM4"
                .Sound = "sfx_LM4"
            End With
            With .EventName("play_sfx_LM5")
                .Key = "key_sfx_LM5"
                .Sound = "sfx_LM5"
            End With

            ' mystery award callouts

            With .EventName("mystery_relaxed_combos")
                .Key = "key_voc_relaxed_combos"
                .Sound = "voc_relaxed_combos"
            End With
            With .EventName("mystery_super_spinner")
                .Key = "key_voc_super_spinner"
                .Sound = "voc_super_spinner"
            End With
            With .EventName("mystery_super_pops")
                .Key = "key_voc_super_pop_bumpers"
                .Sound = "voc_super_pop_bumpers"
            End With
            With .EventName("mystery_full_protons")
                .Key = "key_voc_full_protons"
                .Sound = "voc_full_protons"
            End With
            With .EventName("mystery_full_health")
                .Key = "key_voc_full_health"
                .Sound = "voc_full_health"
            End With
            With .EventName("mystery_double_scoring")
                .Key = "key_voc_double_scoring"
                .Sound = "voc_double_scoring"
            End With
            With .EventName("mystery_double_bonus")
                .Key = "key_voc_double_bonus"
                .Sound = "voc_double_bonus"
            End With



        End With


        With .VariablePlayer()
        With .EventName("set_sss_mystery_flag")
        With .Variable("flag_sss_mystery")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName("play_voc_LMR")
        With .Variable("flag_sss_mystery")
                    .Action = "set"
          .Int = 0
        End With
      End With
        End With


        'Define our shots
        For x = 1 to 5
            With .Shots("mystery_shot"&x)
                .Switch = "s_TargetMystery"&x
                .Profile = "flicker_on"
                With .Tokens()
                    .Add "lights", "LM"&x
                    .Add "color", MysteryColor
                End With
                With .ControlEvents()
                    .Events = Array("complete_mystery_shots")
                    .State = 1
                End With
            End With
        Next

        'Mystery Ready
        With .Shots("mystery_ready")
            .Profile = "qualified_shot"
            With .Tokens()
                .Add "lights", "LMR"
                .Add "color", MysteryColor
            End With
            With .ControlEvents()
                .Events = Array("qualify_mystery_on_complete")
                .State = 1
            End With
            .RestartEvents = Array("restart_qualify_mystery")
        End With


        ' Mystery qualifying shot group
        With .ShotGroups("qualify_mystery")
            .Shots = Array("mystery_shot1", "mystery_shot2", "mystery_shot3", "mystery_shot4","mystery_shot5")
            .RestartEvents = Array("restart_qualify_mystery")
            .DisableEvents = Array("select_random_mystery","start_meteor_wave")
            .EnableEvents = Array("stop_meteor_wave")
        End With


        With .ShowPlayer()
            With .EventName("qualify_mystery_on_complete")
                .Key = "key_mystery_qualified"
                .Show = "flash_color"
                .Speed = 13
                .Loops = 7
                With .Tokens()
                    .Add "lights", "tMystery"
                    .Add "color", MysteryColor
                End With
            End With

            With .EventName("mystery_flash")
                .Key = "key_loaded_wiz_ready"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 4
                With .Tokens()
                    .Add "lights", "tFlasherU"
                    .Add "color", MysteryColor
                End With
            End With

            With .EventName("play_mystery_show")
                .Key = "key_mystery_show"
                .Show = "gi_spin1_cw"
                .Speed = 1
                .Loops = 2
                .EventsWhenCompleted = Array("restart_qualify_mystery")
                With .Tokens()
                    .Add "intensity", 100
                End With
            End With
        End With


        With .SegmentDisplayPlayer()
            'Mystery is ready to be claimed
            With .EventName("qualify_mystery_on_complete")
                With .Display("player2")
                    .Priority = 1000
                    .Text = """CLAIM"""
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
                With .Display("player3")
                    .Priority = 1000
                    .Text = """MYSTERY"""
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
            End With
            'Clear p1 and p4
            With .EventName("select_random_mystery")
                With .Display("player1")
                    .Priority = 1000
                    .Text = """MYSTERY"""
                    .Expire = MysteryShowLength
                End With
                With .Display("player4")
                    .Priority = 1000
                    .Text = """"""
                    .Expire = MysteryShowLength
                End With
            End With

            'Mystery Award Text

            'FULL HEALTH
            With .EventName("mystery_full_health")
                With .Display("player2")
                    .Priority = 1000
                    .Text = """ FULL """
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
                With .Display("player3")
                    .Priority = 1000
                    .Text = """HEALTH"""
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
            End With

            'FULL PROTONS
            With .EventName("mystery_full_protons")
                With .Display("player2")
                    .Priority = 1000
                    .Text = """ FULL """
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
                With .Display("player3")
                    .Priority = 1000
                    .Text = """PROTONS"""
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
            End With

            'ADDED CLUSTER
            With .EventName("mystery_added_cluster")
                With .Display("player2")
                    .Priority = 1000
                    .Text = """ ADDED """
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
                With .Display("player3")
                    .Priority = 1000
                    .Text = """CLUSTER"""
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
            End With

            'ADDED SAVER
            With .EventName("mystery_added_saver")
                With .Display("player2")
                    .Priority = 1000
                    .Text = """ ADDED """
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
                With .Display("player3")
                    .Priority = 1000
                    .Text = """ SAVER """
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
            End With

            'ADDED SHIELDS
            With .EventName("mystery_added_shields")
                With .Display("player2")
                    .Priority = 1000
                    .Text = """ ADDED """
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
                With .Display("player3")
                    .Priority = 1000
                    .Text = """SHIELDS"""
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
            End With

            'MOON READY
            With .EventName("mystery_moon_ready")
                With .Display("player2")
                    .Priority = 1000
                    .Text = """ MOON """
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
                With .Display("player3")
                    .Priority = 1000
                    .Text = """ READY """
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
            End With

            'TRAINER READY
            With .EventName("mystery_trainer_ready")
                With .Display("player2")
                    .Priority = 1000
                    .Text = """TRAINER"""
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
                With .Display("player3")
                    .Priority = 1000
                    .Text = """ READY """
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
            End With

            'DOUBLE SCORING
            With .EventName("mystery_double_scoring")
                With .Display("player2")
                    .Priority = 1000
                    .Text = """DOUBLE"""
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
                With .Display("player3")
                    .Priority = 1000
                    .Text = """SCORING"""
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
            End With

            'SUPER SPINNER
            With .EventName("mystery_super_spinner")
                With .Display("player2")
                    .Priority = 1000
                    .Text = """ SUPER """
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
                With .Display("player3")
                    .Priority = 1000
                    .Text = """SPINNER"""
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
            End With

            'SUPER POPS
            With .EventName("mystery_super_pops")
                With .Display("player2")
                    .Priority = 1000
                    .Text = """ SUPER """
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
                With .Display("player3")
                    .Priority = 1000
                    .Text = """  POPS  """
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
            End With

            'DOUBLE BONUS
            With .EventName("mystery_double_bonus")
                With .Display("player2")
                    .Priority = 1000
                    .Text = """DOUBLE"""
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
                With .Display("player3")
                    .Priority = 1000
                    .Text = """ BONUS """
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
            End With

            'RELAXED COMBOS
            With .EventName("mystery_relaxed_combos")
                With .Display("player2")
                    .Priority = 1000
                    .Text = """RELAXED"""
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
                With .Display("player3")
                    .Priority = 1000
                    .Text = """COMBOS"""
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
            End With

            'EB IS LIT
            With .EventName("mystery_eb_is_lit")
                With .Display("player2")
                    .Priority = 1000
                    .Text = """ EB IS """
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
                With .Display("player3")
                    .Priority = 1000
                    .Text = """ LIT """
                    .Flashing = "all"
                    .Expire = MysteryShowLength
                End With
            End With

        End With


    End With

End Sub


'Nuke Mode.

'Activate nuclear bomb by either completing all trainings, or by hitting skill shot three times, or from mystery award
'Once active, the bomb can be detonated at any time by pressing the start button
'Bomb cannot be used during mini wizard modes
'When bomb is detonated between waves, nothing happens (except alien gets destroyed if its out there)
'When bomb is detonated during a normal wave, the entire wave is cleared.
'When bomb is detontated duing the final wave, 10 hits on the asteroid are made


Sub CreateNukeMode
    Dim x

    With CreateGlfMode("nuke", 400)
        .StartEvents = Array("activate_nuke")
        .StopEvents = Array("deactivate_nuke","mode_base_stopping","start_training_select","mode_combo_command_wizard_started","mode_fully_loaded_wizard_started","mode_victory_lap_started")

        With .EventPlayer()
            'Activate nuke
            .Add "mode_nuke_started{current_player.nuke_acquired == 0}", Array("acquire_nuke","score_1000000","acquire_nuke_show1","play_voc_nuke","nuke_lsling_on","nuke_rsling_on")
            .Add "mode_nuke_started{current_player.nuke_acquired == 1 && current_player.nuke_used == 0}", Array("nuke_lsling_on","nuke_rsling_on")
            'Detonate nuke
            .Add "s_start_active", Array("check_detonate_nuke")
            .Add "s_lockbar_key_active", Array("check_detonate_nuke")
            .Add "check_detonate_nuke{current_player.nuke_acquired == 1 && current_player.nuke_used == 0}", Array("detonate_nuke","score_2000000","nuke_lsling_off","nuke_rsling_off")
        End With

        With .DOFPlayer()
            With .EventName("detonate_nuke")
                .Action = "DOF_PULSE"
                .DOFEvent = 200
            End With
        End With


        With .VariablePlayer()
        With .EventName("acquire_nuke")
        With .Variable("nuke_acquired")
                    .Action = "set"
          .Int = 1
        End With
            End With
            With .EventName("detonate_nuke")
        With .Variable("nuke_used")
                    .Action = "set"
          .Int = 1
        End With
            End With
        End With


        With .ShowPlayer()

            'Added cluster bomb shows
            With .EventName("nuke_lsling_on")
                .Key = "key_nuke_lsling_on"
                .Show = "flash_color_with_fade"
                .Speed = 1
                With .Tokens()
                    .Add "lights", "tFL5"
                    .Add "color", MeteorHotColor
                    .Add "fade", 900
                End With
            End With
            With .EventName("nuke_rsling_on")
                .Key = "key_nuke_rsling_on"
                .Show = "flash_color_with_fade"
                .Speed = 1
                With .Tokens()
                    .Add "lights", "tFL6"
                    .Add "color", MeteorHotColor
                    .Add "fade", 900
                End With
            End With

            With .EventName("nuke_lsling_off")
                .Key = "key_nuke_lsling_on"
                .Show = "flash_color_with_fade"
                .Speed = 1
                .Action = "stop"
                With .Tokens()
                    .Add "lights", "tFL5"
                    .Add "color", MeteorHotColor
                    .Add "fade", 900
                End With
            End With
            With .EventName("nuke_rsling_off")
                .Key = "key_nuke_rsling_on"
                .Show = "flash_color_with_fade"
                .Speed = 1
                .Action = "stop"
                With .Tokens()
                    .Add "lights", "tFL6"
                    .Add "color", MeteorHotColor
                    .Add "fade", 900
                End With
            End With

            With .EventName("acquire_nuke_show1")
                .Key = "key_acquire_nuke_show1"
                .Show = "cluster_bomb_acquired"
                .Speed = 3
                .Loops = 1
                .Priority = 4000
                With .Tokens()
                    .Add "color", MeteorHotColor
                    .Add "intensity", 100
                End With
                .EventsWhenCompleted = Array("acquire_nuke_show2")
            End With
            With .EventName("acquire_nuke_show2")
                .Key = "key_acquire_nuke_show2"
                .Show = "moon_missile_acquired"
                .Speed = 3
                .Loops = 1
                .Priority = 4000
                With .Tokens()
                    .Add "color", MeteorHotColor
                    .Add "intensity", 100
                End With
            End With

            ' Nuke show
            With .EventName("detonate_nuke")
                .Key = "key_nuke_explodes"
                .Show = "nuke_explodes"
                .Speed = 1
                .Loops = 1
                .EventsWhenCompleted = Array("deactivate_nuke")
            End With

        End With

    End With
End Sub



' Post Game Mode.

Const NumLoserMessages = 20
Dim LoserMessage1,LoserMessage2,LoserMessage3,LoserMessage4,LoserMessage5,LoserMessage6,LoserMessage7,LoserMessage8,LoserMessage9,LoserMessage10
Dim LoserMessage11,LoserMessage12,LoserMessage13,LoserMessage14,LoserMessage15,LoserMessage16,LoserMessage17,LoserMessage18,LoserMessage19,LoserMessage20
LoserMessage1 = Array("""YOU""","""FAILED""","""WE ALL""","""DIED""")
LoserMessage2 = Array("""PLAY""","""BETTER""","""NEXT""","""TIME""")
LoserMessage3 = Array("""EARTH""","""DIED""","""THANKS""","""TO YOU""")
LoserMessage4 = Array("""COME ON ""","""HOW HARD""","""IS IT""","""REALLY""")
LoserMessage5 = Array("""HIT THE""","""METEORS""","""NEXTTIME""","""PLEASE""")
LoserMessage6 = Array("""OH WOW ""","""YOU LOST""","""AGAIN ""","""SURPRISE""")
LoserMessage7 = Array("""ITS EASY""","""YOU JUST""","""NEED TO ""","""NOT SUCK""")
LoserMessage8 = Array("""PRACTICE""","""PRACTICE""","""PRACTICE""","""PRACTICE""")
LoserMessage9 = Array("""DAMN""","""LUCKILY""","""THIS IS ""","""NOT REAL""")
LoserMessage10 = Array("""GAMEOVER""","""MAN""","""WE ALL ""","""DEAD NOW""")
LoserMessage11 = Array("""MORE""","""BEER""","""MIGHT""","""HELP""")
LoserMessage12 = Array("""UNLUCKY""","""SHOT""","""EARTH-""","""LING""")
LoserMessage13 = Array("""THE""","""DINOS""","""LASTED""","""LONGER""")
LoserMessage14 = Array("""ASTEROID""","""+ ONE""","""HUMANS""","""ZERO""")
LoserMessage15 = Array("""THE ODDS""","""WERE""","""3720""","""TO ONE""")
LoserMessage16 = Array("""ONE""","""GIANT""","""WEEP FOR""","""MANKIND""")
LoserMessage17 = Array("""THE DARK""","""CHAOS""","""GOD IS""","""HAPPY""")
LoserMessage18 = Array("""TRY JUST""","""ONE""","""MORE""","""TIME""")
LoserMessage19 = Array("""YOU ARE""","""LUCKY""","""ITS ON ""","""FREEPLAY""")
LoserMessage20 = Array("""KEEP""","""CALM""","""PLAY""","""PINBALL""")

Dim LoserMessages
LoserMessages = Array(LoserMessage1,LoserMessage2,LoserMessage3,LoserMessage4,LoserMessage5,LoserMessage6,LoserMessage7,LoserMessage8,LoserMessage9,LoserMessage10, _
                      LoserMessage11,LoserMessage12,LoserMessage13,LoserMessage14,LoserMessage15,LoserMessage16,LoserMessage17,LoserMessage18,LoserMessage19,LoserMessage20)

Dim WinnerMessage1,WinnerMessage2,WinnerMessage3,WinnerMessage4,WinnerMessage5,WinnerMessage6
WinnerMessage1 = Array("""A VILE""","""DARK""","""CHAOS""","""LOOMED""")
WinnerMessage2 = Array("""COSMIC""","""IMPACTS""","""TORE AND""","""BOOMED""")
WinnerMessage3 = Array("""TURMOIL ""","""AND FEAR""","""HUMANITY""","""DOOMED""")
WinnerMessage4 = Array("""A HERO ""","""ASCENDED""","""INTO THE""","""NIGHT""")
WinnerMessage5 = Array("""A FIERY""","""BATTLE""","""WON THE""","""FIGHT""")
WinnerMessage6 = Array("""SPARKS""","""OF HOPE""","""FLICKER ""","""OF LIGHT""")
Dim WinnerMessages
WinnerMessages = Array(WinnerMessage1,WinnerMessage2,WinnerMessage3,WinnerMessage4,WinnerMessage5,WinnerMessage6)


Sub CreatePostGameMode()
    Dim x

    With CreateGlfMode("post_game", 180)
        .StartEvents = Array("game_ended","test_post_game")
        .StopEvents = Array("stop_post_game_mode",GLF_BALL_STARTED)

        With .EventPlayer()
            .Add "mode_post_game_started", Array("select_message_num","meteor1_raise","meteor2_raise","meteor3_raise","meteor4_raise","backglass_dark_on","backglass_chaos_on")
            .Add "mode_post_game_started{machine.won_game == 0}", Array("play_mus_post_game")
            .Add "mode_post_game_started{machine.won_game == 1}", Array("play_mus_post_game_heavier")

            'play the show
            .Add "timer_post_game_show_started", Array("play_flasher1_flash_3000k","play_flasher2_flash_3000k","play_flasher3_flash_3000k","play_asteroid_hit")
            .Add "timer_post_game_show_tick", Array("play_flasher4_flash_hot")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 1}", Array("display_last_scores")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 2}", Array("play_spotlight_on")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 4}", Array("play_flasher1_flash_3000k","play_flasher2_flash_3000k","play_flasher3_flash_3000k","play_asteroid_hit")
            ' .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 5}", Array("")
            ' .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 6}", Array("")
            ' .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 7}", Array("")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 8}", Array("check_loser_message","check_winner_message1","play_flasher1_flash_3000k","play_flasher2_flash_3000k","play_flasher3_flash_3000k","play_asteroid_hit")
            ' .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 9}", Array("")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 10}", Array("play_spotlight_off")
            ' .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 11}", Array("")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 12}", Array("play_earth_hit_center2")
            ' .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 13}", Array("")
            ' .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 14}", Array("")
            ' .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 15}", Array("")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 16}", Array("display_last_scores","play_flasher1_flash_3000k","play_flasher2_flash_3000k","play_flasher3_flash_3000k","play_asteroid_hit")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 17}", Array("play_slide_left")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 18}", Array("play_slide_up","play_spotlight_on")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 19}", Array("play_slide_right")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 20}", Array("play_slide_down6")
            ' .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 21}", Array("")
            ' .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 22}", Array("")
            ' .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 23}", Array("")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 24}", Array("powerup_training","check_loser_message","check_winner_message2","play_meteor_wave_fall","play_flash_gi01","play_flash_gi09","play_flash_giapron","play_meteors_sweep")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 25}", Array("powerup_cluster","play_flash_gi06","play_flash_gi11","play_flash_gi21","play_flash_gi22","play_flash_gi12","play_flash_gi14")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 26}", Array("powerup_moon","play_flash_gi03","play_flash_gi10","play_flash_gi18","play_flash_gi16")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 27}", Array("powerup_proton","play_flash_gi08","play_flash_gi19","play_flash_gi20","play_spotlight_off")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 28}", Array("powerup_shields","play_flash_gi05","play_flash_gi09","play_flash_gi21","play_flash_gi13","play_flash_gi17")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 29}", Array("powerup_timewarp","play_flash_gi02","play_flash_gi22","play_flash_gi16","play_flash_gi14","play_spotlight_on")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 30}", Array("powerup_saver","play_flash_gi07","play_flash_gi11","play_flash_gi15")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 31}", Array("powerup_health","play_flash_gi04","play_flash_gi10","play_flash_gi18","play_flash_gi17")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 32}", Array("powerup_combos","display_last_scores","play_flash_gi01","play_flash_gi19","play_flash_gi20","play_flash_giapron")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 33}", Array("powerup_training","play_flash_gi06","play_flash_gi21","play_flash_gi13","play_flash_gi12")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 34}", Array("powerup_cluster","play_flash_gi03","play_flash_gi09","play_flash_gi22","play_flash_gi16","play_flash_gi14")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 35}", Array("powerup_moon","play_flash_gi08","play_flash_gi11","play_flash_gi17","play_flash_gi15")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 36}", Array("powerup_proton","play_flash_gi05","play_flash_gi10","play_flash_gi18","play_flash_gi13")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 37}", Array("powerup_shields","play_flash_gi02","play_flash_gi20","play_flash_gi22","play_flash_gi14","play_spotlight_off")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 38}", Array("powerup_timewarp","play_flash_gi07","play_flash_gi21","play_flash_gi15")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 39}", Array("powerup_saver","play_flash_gi04","play_flash_gi09","play_flash_gi16","play_spotlight_on")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 40}", Array("powerup_health","check_loser_message","check_winner_message3","play_flash_gi01","play_flash_gi11","play_flash_giapron")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 41}", Array("powerup_combos","play_flash_gi06","play_flash_gi19","play_flash_gi18","play_flash_gi17")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 42}", Array("powerup_training","play_flash_gi03","play_flash_gi20","play_flash_gi13")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 43}", Array("powerup_cluster","play_flash_gi09","play_flash_gi08","play_flash_gi21","play_flash_gi22","play_flash_gi12")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 44}", Array("powerup_moon","play_earth_hit_center","play_flash_gi05","play_flash_gi11","play_flash_gi16","play_flash_gi14")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 45}", Array("powerup_proton","play_flash_gi02","play_flash_gi10","play_flash_gi18","play_flash_gi15")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 46}", Array("powerup_shields","play_flash_gi07","play_flash_gi19","play_flash_gi20","play_flash_gi17")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 47}", Array("powerup_timewarp","play_flash_gi04""play_flash_gi09","play_flash_gi21","play_flash_gi13","play_spotlight_off")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 48}", Array("powerup_saver","display_last_scores","play_flash_gi01","play_flash_gi11","play_flash_gi22","play_flash_gi16","play_flash_gi14","play_flash_giapron")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 49}", Array("powerup_health","play_flash_gi06","play_flash_gi10","play_flash_gi18","play_flash_gi15","play_spotlight_on")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 50}", Array("powerup_combos","play_flash_gi03","play_flash_gi19","play_flash_gi20","play_flash_gi17")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 51}", Array("powerup_training","play_flash_gi08","play_flash_gi13","play_flasher3_flash_hot")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 52}", Array("powerup_cluster","play_slide_down6","play_flash_gi09","play_flash_gi05","play_flash_gi21","play_flash_gi22","play_flash_gi12","play_flasher1_flash_magenta")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 53}", Array("powerup_moon","play_flash_gi02","play_flash_gi10","play_flash_gi11","play_flash_gi16","play_flash_gi14","play_flasher2_flash_yellow")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 54}", Array("powerup_proton","play_flash_gi07","play_flash_gi18","play_flash_gi13","play_flasher3_flash_cyan")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 55}", Array("powerup_shields","play_flash_gi04","play_flash_gi19","play_flash_gi20","play_flash_gi17","play_flasher2_flash_blue")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 56}", Array("powerup_timewarp","check_loser_message","check_winner_message4","play_flash_gi01","play_flash_gi09","play_flash_gi21","play_flash_gi22","play_flash_giapron","play_flasher1_flash_white")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 57}", Array("powerup_saver","play_flash_gi06","play_flash_gi10","play_flash_gi11","play_flash_gi16","play_flasher2_flash_purple","play_spotlight_off")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 58}", Array("powerup_health","play_flash_gi03","play_flash_gi19","play_flash_gi18","play_flash_gi15","play_flasher3_flash_green","play_spotlight_on")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 59}", Array("powerup_combos","play_flash_gi08","play_flash_gi20","play_flash_gi13","play_flash_gi17","play_flasher2_flash_white")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 60}", Array("powerup_training","play_flash_gi05","play_flash_gi21","play_flash_gi22","play_flash_gi14","play_flasher3_flash_hot")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 61}", Array("powerup_cluster","play_flash_gi02","play_flash_gi10","play_flash_gi18","play_flash_gi16","play_flash_gi15","play_flasher1_flash_magenta","play_lsling_magenta")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 62}", Array("powerup_moon","play_flash_gi07","play_flash_gi20","play_flash_gi17","play_flasher2_flash_yellow","play_rsling_yellow")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 63}", Array("powerup_proton","play_flash_gi09","play_flash_gi19","play_flash_gi21","play_flash_gi12","play_flasher3_flash_cyan","play_lsling_cyan")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 64}", Array("powerup_shields","display_last_scores","play_flash_gi04","play_flash_gi11","play_flash_gi13","play_flash_gi22","play_flash_giapron","play_flasher2_flash_blue","play_rsling_blue")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 65}", Array("powerup_timewarp","play_flash_gi01","play_flash_gi10","play_flash_gi18","play_flash_gi16","play_flash_gi14","play_flasher1_flash_white","play_lsling_white")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 66}", Array("powerup_saver","play_flash_gi06","play_flash_gi20","play_flash_gi17","play_flash_gi15","play_flasher2_flash_purple","play_rsling_purple","play_spotlight_off")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 67}", Array("powerup_health","play_flash_gi03","play_flash_gi09","play_flasher3_flash_green","play_lsling_green")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 68}", Array("powerup_combos","play_flash_gi08","play_flash_gi11","play_flash_gi19","play_flash_gi21","play_flasher2_flash_white","play_rsling_white","play_spotlight_on")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 69}", Array("powerup_training","play_flash_gi05","play_flash_gi10","play_flash_gi13","play_flash_gi16","play_flasher3_flash_hot","play_lsling_hot")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 70}", Array("powerup_cluster","play_flash_gi02","play_flash_gi18","play_flash_gi22","play_flash_gi14","play_flasher1_flash_magenta","play_rsling_magenta")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 71}", Array("powerup_moon","play_flash_gi07","play_flash_gi20","play_flash_gi17","play_flasher2_flash_yellow","play_lsling_yellow")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 72}", Array("powerup_proton","check_loser_message","check_winner_message5","play_flash_gi09","play_flash_gi19","play_flash_gi21","play_flash_gi12","play_flasher3_flash_cyan","play_rsling_cyan")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 73}", Array("powerup_shields","play_flash_gi04","play_flash_gi11","play_flash_gi13","play_flash_gi22","play_flash_giapron","play_flasher2_flash_blue","play_lsling_blue")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 74}", Array("powerup_timewarp","play_flash_gi01","play_flash_gi10","play_flash_gi18","play_flash_gi16","play_flash_gi14","play_flasher1_flash_white","play_rsling_white")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 75}", Array("powerup_saver","play_flash_gi06","play_flash_gi20","play_flash_gi17","play_flash_gi15","play_flasher2_flash_purple","play_lsling_purple")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 76}", Array("play_earth_hit_center","play_spotlight_off")
            '.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 77}", Array("meteor1_knockdown","meteor1_flash_show","meteor1_blink_show","meteor1_explodes_white")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 78}", Array("meteor3_knockdown","meteor3_flash_show","meteor3_blink_show","meteor3_explodes_hot")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 79}", Array("meteor2_knockdown","meteor2_flash_show","meteor2_blink_show","meteor2_explodes_red")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 80}", Array("meteor4_knockdown","meteor4_flash_show","meteor4_blink_show","meteor4_explodes_white","meteor3_raise","display_last_scores")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 81}", Array("meteor1_knockdown","meteor1_flash_show","meteor1_blink_show","meteor1_explodes_hot","meteor2_raise")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 82}", Array("meteor3_knockdown","meteor3_flash_show","meteor3_blink_show","meteor3_explodes_red","meteor4_raise")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 83}", Array("meteor2_knockdown","meteor2_flash_show","meteor2_blink_show","meteor2_explodes_white","meteor1_raise")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 84}", Array("meteor4_knockdown","meteor4_flash_show","meteor4_blink_show","meteor4_explodes_hot","meteor3_raise")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 85}", Array("meteor1_knockdown","meteor1_flash_show","meteor1_blink_show","meteor1_explodes_red","meteor2_raise")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 86}", Array("meteor4_raise")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 87}", Array("play_proton_big_charge_fire","meteor1_raise")
            .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 88}", Array("check_loser_message","check_winner_message6","meteor3_raise")
            ' .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 89}", Array("")
            ' .Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 90}", Array("")
            '.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 91}", Array("")
            '.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 92}", Array("")
            .Add "timer_post_game_show_complete", Array("final_flash1","final_flash2","final_flash3","final_flash4","final_flash5")


            'handle post game messages
            For x = 1 to NumLoserMessages
                .Add "check_loser_message{machine.message_num == "&x&" && machine.won_game == 0}", Array("display_loser_message"&x)
            Next
            .Add "check_winner_message1{machine.won_game == 1}", Array("display_winner_message1","play_voc_winners_poem1")
            .Add "check_winner_message2{machine.won_game == 1}", Array("display_winner_message2","play_voc_winners_poem2")
            .Add "check_winner_message3{machine.won_game == 1}", Array("display_winner_message3","play_voc_winners_poem3")
            .Add "check_winner_message4{machine.won_game == 1}", Array("display_winner_message4","play_voc_winners_poem4")
            .Add "check_winner_message5{machine.won_game == 1}", Array("display_winner_message5","play_voc_winners_poem5")
            .Add "check_winner_message6{machine.won_game == 1}", Array("display_winner_message6","play_voc_winners_poem6")
            'stop post game
            .Add "mus_post_game_stopped", Array("start_attract_mode")
            .Add "mus_post_game_heavier_stopped", Array("start_attract_mode")
            .Add "start_attract_mode", Array("stop_post_game_mode")

        End With


        With .RandomEventPlayer()
            With .EventName("select_message_num")
                For x = 1 to NumLoserMessages
                    .Add "select_message_"&x, 1
                Next
            End With
        End With


        With .DOFPlayer()
            With .EventName("play_flasher1_flash_3000k")
                .Action = "DOF_PULSE"
                .DOFEvent = 160
            End With
            With .EventName("play_flasher1_flash_white")
                .Action = "DOF_PULSE"
                .DOFEvent = 160
            End With
            With .EventName("play_flasher2_flash_3000k")
                .Action = "DOF_PULSE"
                .DOFEvent = 160
            End With
            With .EventName("play_flasher2_flash_white")
                .Action = "DOF_PULSE"
                .DOFEvent = 160
            End With
            With .EventName("play_flasher3_flash_3000k")
                .Action = "DOF_PULSE"
                .DOFEvent = 160
            End With
            With .EventName("play_flasher3_flash_hot")
                .Action = "DOF_PULSE"
                .DOFEvent = 161
            End With
            With .EventName("play_flasher2_flash_yellow")
                .Action = "DOF_PULSE"
                .DOFEvent = 163
            End With
            With .EventName("play_flasher3_flash_green")
                .Action = "DOF_PULSE"
                .DOFEvent = 164
            End With
            With .EventName("play_flasher3_flash_cyan")
                .Action = "DOF_PULSE"
                .DOFEvent = 165
            End With
            With .EventName("play_flasher2_flash_blue")
                .Action = "DOF_PULSE"
                .DOFEvent = 166
            End With
            With .EventName("play_flasher2_flash_purple")
                .Action = "DOF_PULSE"
                .DOFEvent = 167
            End With
            With .EventName("play_flasher1_flash_magenta")
                .Action = "DOF_PULSE"
                .DOFEvent = 168
            End With

            With .EventName("meteor1_flash_show")
                .Action = "DOF_PULSE"
                .DOFEvent = 141
            End With
            With .EventName("meteor2_flash_show")
                .Action = "DOF_PULSE"
                .DOFEvent = 141
            End With
            With .EventName("meteor3_flash_show")
                .Action = "DOF_PULSE"
                .DOFEvent = 141
            End With
            With .EventName("meteor4_flash_show")
                .Action = "DOF_PULSE"
                .DOFEvent = 141
            End With
        End With


        With .Timers("post_game_show")
            .TickInterval = 541  'one beat of the song
            .StartValue = 0
            .EndValue = 93
            With .ControlEvents()
                .EventName = "mode_post_game_started"
                .Action = "restart"
            End With
        End With


        With .SoundPlayer()
            With .EventName("play_mus_post_game")
                .Key = "key_mus_post_game"
                .Sound = "mus_post_game"
            End With
            With .EventName("play_mus_post_game_heavier")
                .Key = "key_mus_post_game_heavier"
                .Sound = "mus_post_game_heavier"
            End With

            With .EventName("play_voc_winners_poem1")
                .Key = "key_voc_winners_poem1"
                .Sound = "voc_winners_poem1"
            End With
            With .EventName("play_voc_winners_poem2")
                .Key = "key_voc_winners_poem2"
                .Sound = "voc_winners_poem2"
            End With
            With .EventName("play_voc_winners_poem3")
                .Key = "key_voc_winners_poem3"
                .Sound = "voc_winners_poem3"
            End With
            With .EventName("play_voc_winners_poem4")
                .Key = "key_voc_winners_poem4"
                .Sound = "voc_winners_poem4"
            End With
            With .EventName("play_voc_winners_poem5")
                .Key = "key_voc_winners_poem5"
                .Sound = "voc_winners_poem5"
            End With
            With .EventName("play_voc_winners_poem6")
                .Key = "key_voc_winners_poem6"
                .Sound = "voc_winners_poem6"
            End With
        End With

        With .SegmentDisplayPlayer()
            For x = 1 to NumLoserMessages
                With .EventName("display_loser_message"&x)
                    With .Display("player1")
                        .Text = LoserMessages(x-1)(0)
                    End With
                    With .Display("player2")
                        .Text = LoserMessages(x-1)(1)
                    End With
                    With .Display("player3")
                        .Text = LoserMessages(x-1)(2)
                    End With
                    With .Display("player4")
                        .Text = LoserMessages(x-1)(3)
                    End With
                End With
            Next
            For x = 1 to 6
                With .EventName("display_winner_message"&x)
                    With .Display("player1")
                        .Text = WinnerMessages(x-1)(0)
                    End With
                    With .Display("player2")
                        .Text = WinnerMessages(x-1)(1)
                    End With
                    With .Display("player3")
                        .Text = WinnerMessages(x-1)(2)
                    End With
                    With .Display("player4")
                        .Text = WinnerMessages(x-1)(3)
                    End With
                End With
            Next
            With .EventName("display_last_scores")
                With .Display("player1")
                    .Text = "machine.player1_score"
                End With
                With .Display("player2")
                    .Text = "machine.player2_score"
                End With
                With .Display("player3")
                    .Text = "machine.player3_score"
                End With
                With .Display("player4")
                    .Text = "machine.player4_score"
                End With
            End With
        End With


        With .VariablePlayer()
            For x = 1 to NumLoserMessages
                With .EventName("select_message_"&x)
                    With .Variable("message_num")
                        .Action = "set_machine"
                        .Int = x
                    End With
                End With
            Next
        End With






        ' ------------- SHOWS -----------------

        With .ShowPlayer()

            With .EventName("play_proton_big_charge_fire")
                .Key = "key_proton_big_charge_fire"
                .Show = "proton_big_charge_fire"
                .Speed = 1
                .Loops = 1
            End With

            With .EventName("play_earth_hit_center")
                .Key = "key_earth_hit_center"
                .Show = "earth_hit_center"
                .Loops = 1
                .Speed = 1
            End With
            With .EventName("play_earth_hit_center2")
                .Key = "key_earth_hit_center2"
                .Show = "earth_hit_center2"
                .Loops = 1
                .Speed = 1
            End With

            With .EventName("play_asteroid_hit")
                .Key = "key_asteroid_hit"
                .Show = "asteroid_hit"
                .Speed = 1
                .Loops = 1
            End With

            With .EventName("play_meteor_wave_fall")
                .Key = "key_meteor_wave_fall"
                .Show = "meteor_wave_fall"
                .Speed = 2
                .Loops = 20
            End With

            With .EventName("play_meteors_sweep")
                .Key = "key_meteors_sweep"
                .Show = "meteors_sweep"
                .Speed = 1
                .Loops = 20
            End With


            With .EventName("powerup_training")
                .Key = "key_powerup_training"
                .Show = "flash_color_fadeout"
                .Speed = 6
                .Loops = 1
                .Priority = 10
                With .Tokens()
                    .Add "lights", "tTrain"
                    .Add "color", TrainingColor
                End With
            End With
            With .EventName("powerup_cluster")
                .Key = "key_powerup_cluster"
                .Show = "flash_color_fadeout"
                .Speed = 6
                .Loops = 1
                .Priority = 10
                With .Tokens()
                    .Add "lights", "tClusterAll"
                    .Add "color", ClusterBombColor
                End With
            End With
           With .EventName("powerup_moon")
                .Key = "key_powerup_moon"
                .Show = "flash_color_fadeout"
                .Speed = 6
                .Loops = 1
                .Priority = 10
                With .Tokens()
                    .Add "lights", "tMoonAll"
                    .Add "color", MoonColor
                End With
            End With
            With .EventName("powerup_proton")
                .Key = "key_powerup_proton"
                .Show = "flash_color_fadeout"
                .Speed = 6
                .Loops = 1
                .Priority = 10
                With .Tokens()
                    .Add "lights", "tProtonAll"
                    .Add "color", ProtonColor
                End With
            End With
            With .EventName("powerup_shields")
                .Key = "key_powerup_shields"
                .Show = "flash_color_fadeout"
                .Speed = 6
                .Loops = 1
                .Priority = 10
                With .Tokens()
                    .Add "lights", "tShields"
                    .Add "color", ShieldsColor
                End With
            End With
            With .EventName("powerup_saver")
                .Key = "key_powerup_saver"
                .Show = "flash_color_fadeout"
                .Speed = 6
                .Loops = 1
                .Priority = 10
                With .Tokens()
                    .Add "lights", "tSaver"
                    .Add "color", ShieldsColor
                End With
            End With
            With .EventName("powerup_timewarp")
                .Key = "key_powerup_timewarp"
                .Show = "flash_color_fadeout"
                .Speed = 6
                .Loops = 1
                .Priority = 10
                With .Tokens()
                    .Add "lights", "tTimewarp"
                    .Add "color", TimewarpColor
                End With
            End With
            With .EventName("powerup_health")
                .Key = "key_powerup_health"
                .Show = "flash_color_fadeout"
                .Speed = 6
                .Loops = 1
                .Priority = 10
                With .Tokens()
                    .Add "lights", "tHealth"
                    .Add "color", HealthColor1
                End With
            End With
            With .EventName("powerup_combos")
                .Key = "key_powerup_health"
                .Show = "flash_color_fadeout"
                .Speed = 6
                .Loops = 1
                .Priority = 10
                With .Tokens()
                    .Add "lights", "tCombos"
                    .Add "color", CombosColor
                End With
            End With



            With .EventName("play_slide_left")
                .Key = "key_insert_gi_slide_left"
                .Show = "insert_gi_slide_left"
                .Speed = 1
                .Loops = 1
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "intensity", 100
                End With
            End With
            With .EventName("play_slide_up")
                .Key = "key_insert_gi_slide_up"
                .Show = "insert_gi_slide_up"
                .Speed = 1
                .Loops = 1
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "intensity", 100
                End With
            End With
            With .EventName("play_slide_right")
                .Key = "key_insert_gi_slide_right"
                .Show = "insert_gi_slide_right"
                .Speed = 1
                .Loops = 1
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "intensity", 100
                End With
            End With
            ' With .EventName("play_slide_down")
            '     .Key = "key_insert_gi_slide_down"
            '     .Show = "insert_gi_slide_down"
            '     .Speed = 1
            '     .Loops = 1
            '     With .Tokens()
            '         .Add "color", "ffffff"
            '         .Add "intensity", 100
            '     End With
            ' End With
            With .EventName("play_slide_down6")
                .Key = "key_slide_down6"
                .Show = "slide_down6"
                .Loops = 1
                .Speed = 1
            End With


            With .EventName("final_flash1")
                .Key = "key_final_flash1"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 9
                With .Tokens()
                    .Add "lights", "FL1"
                    .Add "color", MeteorFlashColor
                End With
            End With
            With .EventName("final_flash2")
                .Key = "key_final_flash2"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 9
                With .Tokens()
                    .Add "lights", "FL2"
                    .Add "color", MeteorFlashColor
                End With
            End With
            With .EventName("final_flash3")
                .Key = "key_final_flash3"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 9
                With .Tokens()
                    .Add "lights", "FL3"
                    .Add "color", MeteorFlashColor
                End With
            End With
            With .EventName("final_flash4")
                .Key = "key_final_flash4"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 9
                With .Tokens()
                    .Add "lights", "tFL5"
                    .Add "color", MeteorFlashColor
                End With
            End With
            With .EventName("final_flash5")
                .Key = "key_final_flash5"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 9
                With .Tokens()
                    .Add "lights", "tFL6"
                    .Add "color", MeteorFlashColor
                End With
            End With



            'Flasher 1 (right side)
            With .EventName("play_flasher1_flash_magenta")
                .Key = "key_flasher1_flash_magenta"
                .Show = "flash_color_fadeout"
                .Speed = 8
                .Loops = 1
                With .Tokens()
                    .Add "lights", "FL1"
                    .Add "color", ClusterBombColor
                End With
            End With
            With .EventName("play_flasher1_flash_3000k")
                .Key = "key_flasher1_flash_3000k"
                .Show = "flash_color_fadeout"
                .Speed = 4
                .Loops = 1
                With .Tokens()
                    .Add "lights", "FL1"
                    .Add "color", GIColor3000k
                End With
            End With
            With .EventName("play_flasher1_flash_white")
                .Key = "key_flasher1_flash_white"
                .Show = "flash_color_fadeout"
                .Speed = 8
                .Loops = 1
                With .Tokens()
                    .Add "lights", "FL1"
                    .Add "color", TimewarpColor
                End With
            End With


            'Flasher 2 (left side)
            With .EventName("play_flasher2_flash_3000k")
                .Key = "key_flasher2_flash_3000k"
                .Show = "flash_color_fadeout"
                .Speed = 4
                .Loops = 1
                With .Tokens()
                    .Add "lights", "FL2"
                    .Add "color", GIColor3000k
                End With
            End With
            With .EventName("play_flasher2_flash_white")
                .Key = "key_flasher2_flash_white"
                .Show = "flash_color_fadeout"
                .Speed = 8
                .Loops = 1
                With .Tokens()
                    .Add "lights", "FL2"
                    .Add "color", TimewarpColor
                End With
            End With
            With .EventName("play_flasher2_flash_yellow")
                .Key = "key_flasher2_flash_yellow"
                .Show = "flash_color_fadeout"
                .Speed = 8
                .Loops = 1
                With .Tokens()
                    .Add "lights", "FL2"
                    .Add "color", MoonColor
                End With
            End With
            With .EventName("play_flasher2_flash_blue")
                .Key = "key_flasher2_flash_blue"
                .Show = "flash_color_fadeout"
                .Speed = 8
                .Loops = 1
                With .Tokens()
                    .Add "lights", "FL2"
                    .Add "color", ShieldsColor
                End With
            End With
            With .EventName("play_flasher2_flash_purple")
                .Key = "key_flasher2_flash_purple"
                .Show = "flash_color_fadeout"
                .Speed = 8
                .Loops = 1
                With .Tokens()
                    .Add "lights", "FL2"
                    .Add "color", ShipSaveColor
                End With
            End With


            'Flasher 3 (center back)
            With .EventName("play_flasher3_flash_hot")
                .Key = "key_flasher3_flash_hot"
                .Show = "flash_color_fadeout"
                .Speed = 8
                .Loops = 1
                With .Tokens()
                    .Add "lights", "FL3"
                    .Add "color", MeteorHotColor
                End With
            End With
            With .EventName("play_flasher3_flash_3000k")
                .Key = "key_flasher3_flash_3000k"
                .Show = "flash_color_fadeout"
                .Speed = 4
                .Loops = 1
                With .Tokens()
                    .Add "lights", "FL3"
                    .Add "color", GIColor3000k
                End With
            End With
            With .EventName("play_flasher3_flash_green")
                .Key = "key_flasher3_flash_green"
                .Show = "flash_color_fadeout"
                .Speed = 8
                .Loops = 1
                With .Tokens()
                    .Add "lights", "FL3"
                    .Add "color", "05ff05"
                End With
            End With
            With .EventName("play_flasher3_flash_cyan")
                .Key = "key_flasher3_flash_cyan"
                .Show = "flash_color_fadeout"
                .Speed = 8
                .Loops = 1
                With .Tokens()
                    .Add "lights", "FL3"
                    .Add "color", ProtonColor
                End With
            End With



            'Flasher 4 (center pf)
            With .EventName("play_flasher4_flash_hot")
                .Key = "key_flasher4_flash_hot"
                .Show = "flash_color_fadeout"
                .Speed = 13
                .Loops = 1
                With .Tokens()
                    .Add "lights", "FL4"
                    .Add "color", MeteorHotColor
                End With
            End With



            'GI flashes
            For x = 1 to 9
                With .EventName("play_flash_gi0"&x)
                    .Key = "key_flash_gi0"&x
                    .Show = "flash_color_fadeout"
                    .Speed = 3
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "gi0"&x
                        .Add "color", GIColor3000k
                    End With
                End With
            Next
            For x = 10 to 22
                With .EventName("play_flash_gi"&x)
                    .Key = "key_flash_gi"&x
                    .Show = "flash_color_fadeout"
                    .Speed = 3
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "gi"&x
                        .Add "color", GIColor3000k
                    End With
                End With
            Next
            With .EventName("play_flash_giapron")
                .Key = "key_flash_giapron"
                .Show = "flash_color_fadeout"
                .Speed = 3
                .Loops = 1
                With .Tokens()
                    .Add "lights", "giapron"
                    .Add "color", GIColor3000k
                End With
            End With


            'Meteors
            'Array("meteor1_knockdown","meteor1_flash_show","meteor1_blink_show","meteor1_explodes_white")
            'Array("meteor1_knockdown","meteor1_flash_show","meteor1_blink_show","meteor1_explodes_hot")
            'Array("meteor1_knockdown","meteor1_flash_show","meteor1_blink_show","meteor1_explodes_red")

            With .EventName("meteor1_flash_show")
                .Key = "key_meteor1_flash"
                .Show = "flash_color_with_fade"
                .Speed = 20
                .Loops = 3
                With .Tokens()
                    .Add "lights", "FL2"
                    .Add "color", MeteorFlashColor
                    .Add "fade", 300
                End With
            End With
            With .EventName("meteor2_flash_show")
                .Key = "key_meteor2_flash"
                .Show = "flash_color_with_fade"
                .Speed = 20
                .Loops = 3
                With .Tokens()
                    .Add "lights", "FL2"
                    .Add "color", MeteorFlashColor
                    .Add "fade", 300
                End With
            End With
            With .EventName("meteor3_flash_show")
                .Key = "key_meteor3_flash"
                .Show = "flash_color_with_fade"
                .Speed = 20
                .Loops = 3
                With .Tokens()
                    .Add "lights", "FL1"
                    .Add "color", MeteorFlashColor
                    .Add "fade", 300
                End With
            End With
            With .EventName("meteor4_flash_show")
                .Key = "key_meteor4_flash"
                .Show = "flash_color_with_fade"
                .Speed = 20
                .Loops = 3
                With .Tokens()
                    .Add "lights", "FL1"
                    .Add "color", MeteorFlashColor
                    .Add "fade", 300
                End With
            End With

            For x = 1 to 4
                With .EventName("meteor"&x&"_blink_show")
                    .Key = "key_meteor"&x&"_blink"
                    .Show = "flash_color"
                    .Speed = 22
                    .Loops = 4
                    With .Tokens()
                        .Add "lights", "LMet"&x
                        .Add "color", "ffffff"
                    End With
                End With

                With .EventName("meteor"&x&"_explodes_white")
                    .Key = "key_meteor"&x&"_explodes"
                    .Show = "meteor"&x&"_explodes"
                    .Speed = 1
            .Loops = 1
                    With .Tokens()
                        .Add "color", "ffffff"
                    End With
                End With
                With .EventName("meteor"&x&"_explodes_red")
                    .Key = "key_meteor"&x&"_explodes_red"
                    .Show = "meteor"&x&"_explodes"
                    .Speed = 1
            .Loops = 1
                    With .Tokens()
                        .Add "color", "ff0000"
                    End With
                End With
                With .EventName("meteor"&x&"_explodes_hot")
                    .Key = "key_meteor"&x&"_explodes_hot"
                    .Show = "meteor"&x&"_explodes"
                    .Speed = 1
            .Loops = 1
                    With .Tokens()
                        .Add "color", MeteorHotColor
                    End With
                End With
            Next



            'Sling shows
            With .EventName("play_lsling_magenta")
                .Key = "key_lsling_magenta"
                .Show = "lsling_rotate1_cw"
                .Speed = 2
                .Loops = 2
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", ClusterBombColor
                End With
            End With
            With .EventName("play_rsling_yellow")
                .Key = "key_rsling_yellow"
                .Show = "rsling_rotate1_ccw"
                .Speed = 2
                .Loops = 2
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", MoonColor
                End With
            End With
            With .EventName("play_lsling_cyan")
                .Key = "key_lsling_cyan"
                .Show = "lsling_rotate1_cw"
                .Speed = 2
                .Loops = 2
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", ProtonColor
                End With
            End With
            With .EventName("play_rsling_blue")
                .Key = "key_rsling_blue"
                .Show = "rsling_rotate1_ccw"
                .Speed = 2
                .Loops = 2
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", ShieldsColor
                End With
            End With
            With .EventName("play_lsling_white")
                .Key = "key_lsling_white"
                .Show = "lsling_rotate1_cw"
                .Speed = 2
                .Loops = 2
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", TimewarpColor
                End With
            End With
            With .EventName("play_rsling_purple")
                .Key = "key_rsling_purple"
                .Show = "rsling_rotate1_ccw"
                .Speed = 2
                .Loops = 2
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", ShipSaveColor
                End With
            End With
            With .EventName("play_lsling_green")
                .Key = "key_lsling_green"
                .Show = "lsling_rotate1_cw"
                .Speed = 2
                .Loops = 2
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", HealthColor1
                End With
            End With
            With .EventName("play_rsling_white")
                .Key = "key_rsling_white"
                .Show = "rsling_rotate1_ccw"
                .Speed = 2
                .Loops = 2
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", TimewarpColor
                End With
            End With
            With .EventName("play_lsling_hot")
                .Key = "key_lsling_hot"
                .Show = "lsling_rotate1_cw"
                .Speed = 2
                .Loops = 2
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", TrainingColor
                End With
            End With
            With .EventName("play_rsling_magenta")
                .Key = "key_rsling_magenta"
                .Show = "rsling_rotate1_ccw"
                .Speed = 2
                .Loops = 2
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", ClusterBombColor
                End With
            End With
            With .EventName("play_lsling_yellow")
                .Key = "key_lsling_yellow"
                .Show = "lsling_rotate1_cw"
                .Speed = 2
                .Loops = 2
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", MoonColor
                End With
            End With
            With .EventName("play_rsling_cyan")
                .Key = "key_rsling_cyan"
                .Show = "rsling_rotate1_ccw"
                .Speed = 2
                .Loops = 2
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", ProtonColor
                End With
            End With
            With .EventName("play_lsling_blue")
                .Key = "key_lsling_blue"
                .Show = "lsling_rotate1_cw"
                .Speed = 2
                .Loops = 2
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", ShieldsColor
                End With
            End With
            With .EventName("play_lsling_purple")
                .Key = "key_lsling_purple"
                .Show = "lsling_rotate1_cw"
                .Speed = 2
                .Loops = 2
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", ShipSaveColor
                End With
            End With

            'Spotlight
            With .EventName("play_spotlight_on")
                .Key = "key_spotlight_on"
                .Show = "flicker_color_on"
                .Speed = 5
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LSpot1"
                    .Add "color", "ffffff"
                End With
            End With
            With .EventName("play_spotlight_off")
                .Key = "key_spotlight_off"
                .Show = "flicker_color_off"
                .Speed = 5
                .Loops = 1
                With .Tokens()
                    .Add "lights", "LSpot1"
                    .Add "color", "ffffff"
                End With
            End With



        End With

    End With

End Sub


'Proton Cannon Mode.

's_InnerOrb2 must be hit right after s_InnerOrb1 (by hitting their swtiches).
'Once this occurs, a proton charge light is lit in order (1, 2, 3)
'Once the third charge light is lit, a new proton round is lit in order (1 - 6)
'If a proton is available, then the proton cannon can be fired during a meteor wave
'The proton cannon can be fired by hitting s_TargetMystery3 or the center orbit during a metero wave
'When the proton cannon is fired it will destroy one random meteor (drop targets) that are currently active on the table



Sub CreateProtonCannonMode
    Dim x

    With CreateGlfMode("proton_cannon", 900)
        .StartEvents = Array("new_ball_started","stop_training","wizard_mode_ended")
        .StopEvents = Array("mode_base_stopping","start_training_select","wizard_mode_started")

        With .EventPlayer()
            'Reset proton charge shots
            .Add "mode_proton_cannon_started{current_player.shot_proton_charge1==0}", Array("reset_proton_charges")
            .Add "mode_proton_cannon_started{current_player.training_proton_cannon_achieved==1}", Array("reset_proton_charges")
            .Add "reset_proton_charges{current_player.training_proton_cannon_achieved==0}", Array("ready_proton_charge1") 'no training boost
            .Add "reset_proton_charges{current_player.training_proton_cannon_achieved==1}", Array("light_proton_charge1","light_proton_charge2","ready_proton_charge3") 'with training boost
            'Successful shot
            .Add "inner_orbit_hit{current_player.shot_proton_charge1 == 1}", Array("play_sfx_LPC","light_proton_charge1","ready_proton_charge2")
            .Add "inner_orbit_hit{current_player.shot_proton_charge1 == 2 && current_player.shot_proton_charge2 == 1}", Array("play_sfx_LPC","light_proton_charge2","ready_proton_charge3")
            .Add "inner_orbit_hit{current_player.shot_proton_charge2 == 2 && current_player.shot_proton_charge3 == 1}", Array("play_sfx_LPC","light_proton_charge3")
            'Add protons
            .Add "light_proton_charge3{current_player.shot_proton_round1 == 0}", Array("added_proton","add_proton_round1","reset_proton_charges")
            .Add "light_proton_charge3{current_player.shot_proton_round1 == 1 && current_player.shot_proton_round2 == 0}", Array("added_proton","add_proton_round2","reset_proton_charges")
            .Add "light_proton_charge3{current_player.shot_proton_round2 == 1 && current_player.shot_proton_round3 == 0}", Array("added_proton","add_proton_round3","reset_proton_charges")
            .Add "light_proton_charge3{current_player.shot_proton_round3 == 1 && current_player.shot_proton_round4 == 0}", Array("added_proton","add_proton_round4","reset_proton_charges")
            .Add "light_proton_charge3{current_player.shot_proton_round4 == 1 && current_player.shot_proton_round5 == 0}", Array("added_proton","add_proton_round5","reset_proton_charges")
            .Add "light_proton_charge3{current_player.shot_proton_round5 == 1 && current_player.shot_proton_round6 == 0}", Array("added_proton","add_proton_round6","check_fully_loaded") 'check for wizard mode qualification
            .Add "added_proton", Array("slings_powerup_added","lsling_powerup_pc","rsling_powerup_pc","proton_added_show")
            '.Add "check_protons", Array("check_protons_done")
            'Handle mystery award
            .Add "mystery_full_protons", Array("complete_full_protons","slings_powerup_added","lsling_powerup_pc","rsling_powerup_pc")
            .Add "complete_full_protons", Array("proton_added_show","check_fully_loaded","score_50000") 'check for wizard mode qualification
            'Scoring
            .Add "inner_orbit_hit", Array("score_2000")
            .Add "light_proton_charge3", Array("score_5000")
        End With


        With .RandomEventPlayer()
            With .EventName("play_sfx_LPC")
                .Add "play_sfx_LPC1", 1
                .Add "play_sfx_LPC2", 1
                .Add "play_sfx_LPC3", 1
                .Add "play_sfx_LPC4", 1
                .Add "play_sfx_LPC5", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
        End With


        With .DOFPlayer()
            With .EventName("s_spinner_active")
                .Action = "DOF_PULSE"
                .DOFEvent = 135
            End With
            With .EventName("added_proton")
                .Action = "DOF_PULSE"
                .DOFEvent = 172
            End With
        End With

        With .SoundPlayer()
            With .EventName("play_sfx_LPC1")
                .Key = "key_sfx_LPC1"
                .Sound = "sfx_LPC1"
            End With
            With .EventName("play_sfx_LPC2")
                .Key = "key_sfx_LPC2"
                .Sound = "sfx_LPC2"
            End With
            With .EventName("play_sfx_LPC3")
                .Key = "key_sfx_LPC3"
                .Sound = "sfx_LPC3"
            End With
            With .EventName("play_sfx_LPC4")
                .Key = "key_sfx_LPC4"
                .Sound = "sfx_LPC4"
            End With
            With .EventName("play_sfx_LPC5")
                .Key = "key_sfx_LPC5"
                .Sound = "sfx_LPC5"
            End With

            With .EventName("added_proton")
                .Key = "key_voc_LPR1"
                .Sound = "voc_LPR1"
            End With

        End With


        'Define our shots
        For x = 1 to 3
            With .Shots("proton_charge"&x)
                .Profile = "powerups"
                With .Tokens()
                    .Add "lights", "LPC"&x
                    .Add "color", ProtonColor
                End With
                With .ControlEvents()
                    .Events = Array("ready_proton_charge"&x)
                    .State = 1
                End With
                With .ControlEvents()
                    .Events = Array("light_proton_charge"&x,"complete_full_protons")
                    .State = 2
                End With
                .RestartEvents = Array("reset_proton_charges")
            End With
        Next

        For x = 1 to 6
            With .Shots("proton_round"&x)
                .Profile = "off_on_color"
                With .Tokens()
                    .Add "lights", "LPR"&x
                    .Add "color", ProtonColor
                End With
                With .ControlEvents()
                    .Events = Array("add_proton_round"&x,"complete_full_protons")
                    .State = 1
                End With
                .RestartEvents = Array("fire_proton_round"&x)
            End With

            With .ShowPlayer()
                With .EventName("add_proton_round"&x)
                    .Key = "key_proton"&x&"_charged"
                    .Show = "flash_color"
                    .Speed = 15
                    .Loops = 5
                    With .Tokens()
                        .Add "lights", "LPR"&x
                        .Add "color", ProtonColor
                    End With
                End With
            End With
        Next


        With .ShowPlayer()
            With .EventName("light_proton_charge3")
                .Key = "key_proton_charged"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 7
                With .Tokens()
                    .Add "lights", "tProton"
                    .Add "color", ProtonColor
                End With
            End With
            With .EventName("complete_full_protons")
                .Key = "key_all_proton_charged"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 15
                .Priority = 2000
                With .Tokens()
                    .Add "lights", "tProtonAll"
                    .Add "color", ProtonColor
                End With
            End With
            With .EventName("proton_added_show")
                .Key = "key_all_proton_charged"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 13
                .Priority = 100
                With .Tokens()
                    .Add "lights", "tInlaneGI"
                    .Add "color", ProtonColor
                End With
            End With
            With .EventName("s_spinner_active")
                .Key = "key_spinner_flash"
                .Show = "flash_color_with_fade"
                .Speed = 15
                .Loops = 1
                With .Tokens()
                    .Add "lights", "FL4"
                    .Add "color", ProtonColor
                    .Add "fade", 300
                End With
            End With

            'Added proton shows
            With .EventName("lsling_powerup_pc")
                .Key = "key_lsling_powerup_pc"
                .Show = "lsling_rotate2_cw"
                .Speed = 2
                .Loops = 3
                With .Tokens()
                    .Add "color1", ProtonColor
                    .Add "color2", ProtonColor
                    .Add "intensity", SlingDomePowerUpBrightness
                End With
            End With
            With .EventName("rsling_powerup_pc")
                .Key = "key_rsling_powerup_pc"
                .Show = "rsling_rotate2_ccw"
                .Speed = 2
                .Loops = 3
                With .Tokens()
                    .Add "color1", ProtonColor
                    .Add "color2", ProtonColor
                    .Add "intensity", SlingDomePowerUpBrightness
                End With
            End With

        End With

        With .SegmentDisplayPlayer()
            With .EventName("light_proton_charge3")
                With .Display("player4")
                    .Text = """PROTON"""
                    .Flashing = "all"
                    .Expire = 2000
                End With
            End With
        End With


    End With
End Sub


'Score Mode.

Const MinimumScore = -1000000

Sub CreateScoreMode

    With CreateGlfMode("score", 2000)
        .StartEvents = Array(GLF_GAME_START)
        .StopEvents = Array("game_ended")


        With .EventPlayer
            .Add "score_m100000{current_player.score > "&MinimumScore&"}", Array("apply_score_m100000")  'limit the negative score
            .Add "apply_score_m100000.1{current_player.score < "&MinimumScore&"}", Array("set_minimum_score")  'limit the negative score
        End With


        With .VariablePlayer()

            With .EventName("score_wave_count")
                With .Variable("score")
                    .Action = "add"
                    .Int = 1
                End With
            End With
            With .EventName("set_minimum_score")
                With .Variable("score")
                    .Action = "set"
                    .Int = MinimumScore
                End With
            End With
            With .EventName("score_930")  'reserved for spinner
                With .Variable("score")
                    .Action = "add"
                    .Int = "930 * current_player.scoring_multiplier * current_player.spin_multiplier"
                End With
            End With
            With .EventName("score_1000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "1000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_1300")  'reserved for pop bumpers
                With .Variable("score")
                    .Action = "add"
                    .Int = "1000 * current_player.scoring_multiplier * current_player.pop_multiplier"
                End With
            End With
            With .EventName("score_2000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "2000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_3000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "3000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_4000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "4000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_5000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "5000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_8000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "8000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_9000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "9000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_10000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "10000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_15000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "15000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_20000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "20000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_25000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "25000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_30000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "30000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_40000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "40000 * current_player.scoring_multiplier"
                End With
            End With
            ' With .EventName("apply_score_m50000.2")  'negative score
            '     With .Variable("score")
            '         .Action = "add"
            '         .Int = "-50000 * current_player.scoring_multiplier"
            '     End With
            ' End With
            With .EventName("score_50000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "50000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_60000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "60000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_70000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "70000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_80000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "80000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_90000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "90000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_100000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "100000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("apply_score_m100000.2")  'negative score
                With .Variable("score")
                    .Action = "add"
                    .Int = "-100000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_150000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "150000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_200000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "200000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_250000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "250000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_300000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "300000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_400000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "400000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_500000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "500000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_600000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "600000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_700000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "700000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_750000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "750000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_800000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "800000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_900000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "900000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_1000000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "1000000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_1100000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "1100000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_1200000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "1200000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_1300000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "1300000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_1400000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "1400000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_1500000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "1500000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_1600000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "1600000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_1700000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "1700000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_1800000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "1800000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_1900000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "1900000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_2000000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "2000000 * current_player.scoring_multiplier"
                End With
            End With
            With .EventName("score_3000000")
                With .Variable("score")
                    .Action = "add"
                    .Int = "3000000 * current_player.scoring_multiplier"
                End With
            End With

            'manage bonus multiplier
            With .EventName(GLF_BALL_STARTED)
                With .Variable("bonus_multiplier")
                    .Action = "set"
                    .Int = 1
                End With
            End With
            With .EventName("mystery_double_bonus")
                With .Variable("bonus_multiplier")
                    .Action = "set"
                    .Int = 2
                End With
            End With

    End With


    End With

End Sub


'Shields Mode.

'All of the shield shot lights need to be lit (by hitting their swtiches). The lights can be rotated by the flippers.
'Once they are all lit, the "Shields" inserts turn on indicating that a ball will be saved if it goes down an outlane
'The shield shot and outlane inserts will stay lit until the shields are used
'When a ball goes down the outlane and hits the swtich then
'  a new ball will be put into the plunger lane and
'  all the shield lights will be reset to off



Sub CreateShieldsMode
    Dim x

    With CreateGlfMode("shields", 510)
        .StartEvents = Array("new_ball_started","stop_meteor_wave","stop_training","wizard_mode_ended")
        .StopEvents = Array("stop_shields","mode_base_stopping","start_training_select","wizard_mode_started") ',"start_meteor_wave"

        With .EventPlayer()
            'reset shields qualification
            .Add "mode_shields_started{current_player.training_shields_achieved==1}", Array("restart_qualify_shields") 'with training boost
            .Add "restart_qualify_shields{current_player.training_shields_achieved==1}", Array("boost_qualify_shields") 'with training boost
            'backglass
            .Add "mode_shields_started{current_player.shot_shield_left==1}", Array("backglass_shields_on")
            .Add "mode_shields_stopping", Array("backglass_shields_off")
            'use shields
            .Add "s_LeftOutlane_active{current_player.shot_shield_left==1}", Array("shields_used","restart_qualify_shields","play_shields_down","backglass_shields_off")
            .Add "s_RightOutlane_active{current_player.shot_shield_right==1}", Array("shields_used","restart_qualify_shields","play_shields_down","backglass_shields_off")
            'Handle mystery award
            .Add "mystery_added_shields", Array("complete_qualify_shields")
            'show
            .Add "qualify_shields_on_complete", Array("slings_powerup_added","lsling_powerup_sh","rsling_powerup_sh","play_shields_up","play_voc_shields_acquired","score_50000","backglass_shields_on")
            .Add "qualify_shields_hit", Array("score_1000")
        End With

        With .RandomEventPlayer()
            With .EventName("qualify_shields_hit")
                .Add "play_sfx_LSC1", 1
                .Add "play_sfx_LSC2", 1
                .Add "play_sfx_LSC3", 1
                .Add "play_sfx_LSC4", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
            With .EventName("shields_used")
                .Add "play_sfx_LSL", 1
                .Add "play_sfx_LSR", 1
            End With
        End With


        With .DOFPlayer()
            With .EventName("play_shields_up")
                .Action = "DOF_PULSE"
                .DOFEvent = 144
            End With
            With .EventName("play_shields_down")
                .Action = "DOF_PULSE"
                .DOFEvent = 145
            End With
        End With


        With .SoundPlayer()

            With .EventName("play_voc_shields_acquired")
                .Key = "key_voc_shields_acquired"
                .Sound = "voc_shields_acquired"
            End With

            With .EventName("play_sfx_LSC1")
                .Key = "key_sfx_LSC1"
                .Sound = "sfx_LSC1"
            End With
            With .EventName("play_sfx_LSC2")
                .Key = "key_sfx_LSC2"
                .Sound = "sfx_LSC2"
            End With
            With .EventName("play_sfx_LSC3")
                .Key = "key_sfx_LSC3"
                .Sound = "sfx_LSC3"
            End With
            With .EventName("play_sfx_LSC4")
                .Key = "key_sfx_LSC4"
                .Sound = "sfx_LSC4"
            End With
            With .EventName("play_sfx_LSL")
                .Key = "key_sfx_LSL"
                .Sound = "sfx_LSL"
            End With
            With .EventName("play_sfx_LSR")
                .Key = "key_sfx_LSR"
                .Sound = "sfx_LSR"
            End With
            With .EventName("qualify_shields_on_complete")
                .Key = "key_sfx_LSUp"
                .Sound = "sfx_LSUp"
            End With
        End With


        'Define a shot profile with two states (off/on)
        With .ShotProfiles("qualify_shields")
            With .States("unlit")
                .Show = "off"
            End With
            With .States("on")
                .Show = "flicker_color_on"
                .Speed = 4
                With .Tokens()
                    .Add "color", ShieldsColor
                End With
            End With
        End With

        'Define a shot profile with two states (off/on)
        With .ShotProfiles("shields_ready")
            With .States("unlit")
                .Show = "off"
            End With
            With .States("on")
                .Show = "led_color"
                With .Tokens()
                    .Add "color", ShieldsColor
                End With
            End With
        End With

        'Define our shots
        For x = 1 to 2
            With .Shots("shield_charge"&x)
                .Switch = "s_TargetShield"&x
                .Profile = "qualify_shields"
                With .Tokens()
                    .Add "lights", "LSC"&x
                End With
                With .ControlEvents()
                    .Events = Array("boost_qualify_shields","complete_qualify_shields")
                    .State = 1
                End With
            End With
        Next
        With .Shots("shield_charge3")
            .Switch = "s_TargetShield3"
            .Profile = "qualify_shields"
            With .Tokens()
                .Add "lights", "LSC3"
            End With
            With .ControlEvents()
                .Events = Array("complete_qualify_shields")
                .State = 1
            End With
        End With

        'Shields Ready
        With .Shots("shield_left")
            .Profile = "shields_ready"
            With .Tokens()
                .Add "lights", "LSL"
            End With
            With .ControlEvents()
                .Events = Array("qualify_shields_on_complete")
                .State = 1
            End With
            .RestartEvents = Array("restart_qualify_shields")
        End With

        With .Shots("shield_right")
            .Profile = "shields_ready"
            With .Tokens()
                .Add "lights", "LSR"
            End With
            With .ControlEvents()
                .Events = Array("qualify_shields_on_complete")
                .State = 1
            End With
            .RestartEvents = Array("restart_qualify_shields")
        End With

        ' Shield qualifying shot group
        With .ShotGroups("qualify_shields")
            .Shots = Array("shield_charge1", "shield_charge2", "shield_charge3")
            .RotateLeftEvents = Array("s_left_flipper_active")
            .RotateRightEvents = Array("s_right_flipper_active")
            .RestartEvents = Array("restart_qualify_shields")
            '.DisableEvents = Array("disable_qualify_shields")
            '.EnableEvents = Array("enable_qualify_shields")
        End With

        ' Ball Save
        With .BallSaves("shield")
            .ActiveTime = 5000
            .EnableEvents = Array("shields_used")
            .AutoLaunch = True
        End With


        With .ShowPlayer()
            With .EventName("qualify_shields_on_complete")
                .Key = "key_shields_qualified"
                .Show = "flash_color"
                .Speed = 13
                .Loops = 7
                With .Tokens()
                    .Add "lights", "tShields"
                    .Add "color", ShieldsColor
                End With
            End With
            'Added shields shows
            With .EventName("lsling_powerup_sh")
                .Key = "key_lsling_powerup_sh"
                .Show = "lsling_rotate2_cw"
                .Speed = 2
                .Loops = 3
                With .Tokens()
                    .Add "color1", ShieldsColor
                    .Add "color2", ShieldsColor
                    .Add "intensity", SlingDomePowerUpBrightness
                End With
            End With
            With .EventName("rsling_powerup_sh")
                .Key = "key_rsling_powerup_sh"
                .Show = "rsling_rotate2_ccw"
                .Speed = 2
                .Loops = 3
                With .Tokens()
                    .Add "color1", ShieldsColor
                    .Add "color2", ShieldsColor
                    .Add "intensity", SlingDomePowerUpBrightness
                End With
            End With

            With .EventName("play_shields_up")
                .Key = "key_shields_up"
                .Show = "shields_up"
                .Speed = 1
                .Loops = 1
                .Priority = 1000
            End With
            With .EventName("play_shields_down")
                .Key = "key_shields_down"
                .Show = "shields_down"
                .Speed = 1
                .Loops = 1
                .Priority = 1000
            End With

        End With


        With .SegmentDisplayPlayer()
            With .EventName("qualify_shields_on_complete")
                With .Display("player3")
                    .Text = """SHIELDS"""
                    .Flashing = "all"
                    .Expire = 2000
                End With
            End With
        End With

    End With

End Sub


'Ship Save Mode.

's_RightOrb2 must be hit right after s_RightOrb1 (by hitting their swtiches).
'Once this occurs, a ship save light is lit in order (1, 2, 3)
'Once the third charge light is lit, a the ship save (ball save) will be extended at ths start of next meteor wave.


Sub CreateShipSaveMode
    Dim x

    With CreateGlfMode("ship_save", 520)
        .StartEvents = Array("new_ball_started","stop_meteor_wave","stop_training","wizard_mode_ended")
        .StopEvents = Array("stop_ship_save","mode_base_stopping","start_training_select","wizard_mode_started") ',"start_meteor_wave"

        With .EventPlayer()
            'Reset ship charge shots
            .Add "mode_ship_save_started{current_player.shot_ship_charge1==0}", Array("restart_ship_save")
            .Add "mode_ship_save_started{current_player.training_ship_save_achieved==1 && current_player.shot_ship_charge3!=2}", Array("restart_ship_save")
            .Add "mode_ship_save_started{current_player.shot_ship_charge3==2 && current_player.meteor_mb_shootagain_time =="&MeteorMBShootAgainTime&"}", Array("restart_ship_save")
            .Add "restart_ship_save{current_player.training_ship_save_achieved==0}", Array("ready_ship_charge1","clear_ship_save") 'no training boost
            .Add "restart_ship_save{current_player.training_ship_save_achieved==1}", Array("light_ship_charge1","light_ship_charge2","ready_ship_charge3","clear_ship_save") 'with training boost
            .Add "mode_ship_save_started{current_player.shot_ship_charge3 == 2}", Array("backglass_ball_on")
            .Add "mode_ship_save_stopping", Array("backglass_ball_off")
            'Successful shot
            .Add "right_orbit_hit{current_player.shot_ship_charge1 == 1}", Array("light_ship_charge1","ready_ship_charge2","play_sfx_LF")
            .Add "right_orbit_hit{current_player.shot_ship_charge1 == 2 && current_player.shot_ship_charge2 == 1}", Array("light_ship_charge2","ready_ship_charge3","play_sfx_LF")
            .Add "right_orbit_hit{current_player.shot_ship_charge2 == 2 && current_player.shot_ship_charge3 == 1}", Array("light_ship_charge3","play_sfx_LF")
            .Add "light_ship_charge3", Array("slings_powerup_added","lsling_powerup_sa","rsling_powerup_sa","saver_acquired","backglass_ball_on")
            'Handle mystery award
            .Add "mystery_added_saver", Array("complete_ship_save","light_ship_charge3")
            'Scoring
            .Add "right_orbit_hit", Array("score_2000")
            .Add "saver_acquired", Array("score_50000")
        End With

        With .RandomEventPlayer()
            '.Debug = True
            With .EventName("play_sfx_LF")
                .Add "play_sfx_LF1", 1
                .Add "play_sfx_LF2", 1
                .Add "play_sfx_LF3", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
        End With

        With .DOFPlayer()
            With .EventName("saver_acquired")
                .Action = "DOF_PULSE"
                .DOFEvent = 173
            End With
        End With

        With .SoundPlayer()
            With .EventName("play_sfx_LF1")
                .Key = "key_sfx_LF1"
                .Sound = "sfx_LF1"
            End With
            With .EventName("play_sfx_LF2")
                .Key = "key_sfx_LF2"
                .Sound = "sfx_LF2"
            End With
            With .EventName("play_sfx_LF3")
                .Key = "key_sfx_LF3"
                .Sound = "sfx_LF3"
            End With
            With .EventName("light_ship_charge3")
                .Key = "key_voc_ShipSaver"
                .Sound = "voc_ShipSaver"
            End With
        End With


        'Define our shots
        For x = 1 to 3
            With .Shots("ship_charge"&x)
                .Profile = "powerups"
                With .Tokens()
                    .Add "lights", "LF"&x
                    .Add "color", ShipSaveColor
                End With
                With .ControlEvents()
                    .Events = Array("ready_ship_charge"&x)
                    .State = 1
                End With
                With .ControlEvents()
                    .Events = Array("light_ship_charge"&x,"complete_ship_save")
                    .State = 2
                End With
                .RestartEvents = Array("restart_ship_save")
            End With
        Next

        With .ShowPlayer()
            With .EventName("light_ship_charge3")
                .Key = "key_ship_saves_charged"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 5
                With .Tokens()
                    .Add "lights", "tSaver"
                    .Add "color", ShipSaveColor
                End With
            End With
            'Added ship saver shows
            With .EventName("lsling_powerup_sa")
                .Key = "key_lsling_powerup_sa"
                .Show = "lsling_rotate2_cw"
                .Speed = 2
                .Loops = 3
                With .Tokens()
                    .Add "color1", ShipSaveColor
                    .Add "color2", ShipSaveColor
                    .Add "intensity", SlingDomePowerUpBrightness
                End With
            End With
            With .EventName("rsling_powerup_sa")
                .Key = "key_rsling_powerup_sa"
                .Show = "rsling_rotate2_ccw"
                .Speed = 2
                .Loops = 3
                With .Tokens()
                    .Add "color1", ShipSaveColor
                    .Add "color2", ShipSaveColor
                    .Add "intensity", SlingDomePowerUpBrightness
                End With
            End With
            With .EventName("saver_acquired")
                .Key = "key_saver_acquired"
                .Show = "ship_saver_acquired"
                .Speed = 1
                .Loops = 1
                .Priority = 1000
            End With
        End With

        With .VariablePlayer()
            With .EventName("clear_ship_save")
        With .Variable("meteor_mb_shootagain_time")
                    .Action = "set"
          .Int = MeteorMBShootAgainTime
        End With
      End With
            With .EventName("light_ship_charge3")
        With .Variable("meteor_mb_shootagain_time")
                    .Action = "set"
          .Int = ShipSaveShootAgainTime
        End With
      End With
    End With

        With .SegmentDisplayPlayer()
            With .EventName("light_ship_charge3")
                With .Display("player2")
                    .Text = """ SHIP """
                    .Flashing = "all"
                    .Expire = 2000
                End With
                With .Display("player3")
                    .Text = """ SAVER """
                    .Flashing = "all"
                    .Expire = 2000
                End With
            End With
        End With

    End With
End Sub


'Skillshots Mode.


Sub CreateSkillshotsMode
    Dim x

    With CreateGlfMode("skillshots", 500)
        .StartEvents = Array("new_ball_started","stop_training","wizard_mode_ended")
        .StopEvents = Array("mode_base_stopping","stop_skillshots","start_training_select","wizard_mode_started")


        With .EventPlayer()
            'Only start skillshots if starting a new ball
            .Add "mode_skillshots_started{current_player.ball_just_started==1 && current_player.shot_meteor_wave9 < 2}", Array("init_ss")
            'Handle successful skillshots
            .Add "s_TargetMystery2_active{current_player.shot_ss==1}", Array("ss_achieved")
            .Add "left_side_hit{current_player.shot_ss==1}", Array("sss_achieved")
            .Add "right_ramp_hit{current_player.shot_ss==1 && current_player.flag_ss == 1}", Array("ssss_achieved")
            .Add "left_ramp_hit{current_player.shot_ss==1 && current_player.flag_ss == 2}", Array("sdsss_achieved")
            .Add "ss_achieved", Array("ss_trainer_ready","score_500000")
            .Add "sss_achieved", Array("ss_trainer_ready","sss_mystery_ready","score_1000000")
            .Add "sss_achieved.1{current_player.num_skillshots==3}", Array("activate_nuke")
            .Add "ssss_achieved", Array("score_2000000")
            .Add "sdsss_achieved", Array("score_3000000")
            .Add "voc_ss_stopped{current_player.num_skillshots==3}", Array("activate_nuke")
            .Add "voc_sss_stopped{current_player.num_skillshots==3}", Array("activate_nuke")
            'Stop skillshots
            .Add "timer_skillshots_complete", Array("stop_skillshots")
            .Add "s_InnerOrb1_active", Array("stop_skillshots")
        End With

        With .SoundPlayer()
            With .EventName("ss_achieved.1")
                .Key = "key_voc_ss"
                .Sound = "voc_ss"
            End With
            With .EventName("sss_achieved.1")
                .Key = "key_voc_sss"
                .Sound = "voc_sss"
            End With
            With .EventName("ssss_achieved")
                .Key = "key_voc_ssss"
                .Sound = "voc_ssss"
            End With
            With .EventName("sdsss_achieved")
                .Key = "key_voc_sdsss"
                .Sound = "voc_sdsss"
            End With
        End With


        'skill shot is ready, two states
        With .ShotProfiles("ss_ready")
            With .States("unlit")
                .Key = "key_ss_shot_not_ready"
                .Show = "off"
                With .Tokens()
                    .Add "lights", "LM2"
                End With
            End With
            With .States("ready")
                .Key = "key_ss_shot_is_ready"
                .Show = "flash_color_with_fade"
                .Priority = 500
                .Speed = 3
                With .Tokens()
                    .Add "fade", 200
                    .Add "color", SkillshotColor
                    .Add "lights", "LM2"
                End With
            End With
        End With

        'Define health shots
        With .Shots("ss")
            .Profile = "ss_ready"
            With .ControlEvents()
                .Events = Array("init_ss")
                .State = 1
            End With
            .ResetEvents = Array("stop_skillshots","ss_achieved")
        End With


        With .VariablePlayer
            With .EventName("init_ss")
                'initalize vars
        With .Variable("flag_ss")
                    .Action = "set"
          .Int = 0
        End With
            End With
            With .EventName("ss_achieved.2")
                'initalize vars
                With .Variable("num_skillshots")
                    .Action = "add"
          .Int = 1
        End With
            End With
            With .EventName("sss_achieved.2")
                'initalize vars
        With .Variable("flag_ss")
                    .Action = "set"
          .Int = 1
        End With
                With .Variable("num_skillshots")
                    .Action = "add"
          .Int = 1
        End With
            End With
            With .EventName("ssss_achieved")
                'initalize vars
        With .Variable("flag_ss")
                    .Action = "set"
          .Int = 2
        End With
            End With
            With .EventName("sdsss_achieved")
                'initalize vars
        With .Variable("flag_ss")
                    .Action = "set"
          .Int = 0
        End With
            End With
        End With


        With .Timers("skillshots")
            .TickInterval = SkillshotsTickInterval
            .StartValue = 0
            .EndValue = SkillshotsTickLimit
            With .ControlEvents()
                .EventName = "new_ball_active"
                .Action = "restart"
            End With
            With .ControlEvents()
                .EventName = "sss_achieved"
                .Action = "restart"
            End With
            With .ControlEvents()
                .EventName = "ssss_achieved"
                .Action = "restart"
            End With
        End With

        With .ShowPlayer()
            With .EventName("ss_achieved")
                .Key = "key_ss_achieved"
                .Show = "insert_swap2"
                .Speed = 1.5
                .Loops = 2
                .Priority = 3000
                With .Tokens()
                    .Add "color1", "000000"
                    .Add "color2", SkillshotColor
                    .Add "intensity", 100
                End With
            End With
            With .EventName("sss_achieved")
                .Key = "key_sss_achieved"
                .Show = "insert_swap3"
                .Speed = 1.5
                .Loops = 2
                .Priority = 3000
                With .Tokens()
                    .Add "color1", "000000"
                    .Add "color2", SkillshotColor
                    .Add "color3", TrainingColor
                    .Add "intensity", 100
                End With
            End With
            With .EventName("ssss_achieved")
                .Key = "key_ssss_achieved"
                .Show = "insert_swap3"
                .Speed = 1.5
                .Loops = 3
                .Priority = 3000
                With .Tokens()
                    .Add "color1", ProtonColor
                    .Add "color2", SkillshotColor
                    .Add "color3", MoonColor
                    .Add "intensity", 100
                End With
            End With
            With .EventName("sdsss_achieved")
                .Key = "key_sdsss_achieved"
                .Show = "insert_swap3"
                .Speed = 1.5
                .Loops = 4
                .Priority = 3000
                With .Tokens()
                    .Add "color1", MeteorHotColor
                    .Add "color2", SkillshotColor
                    .Add "color3", ShieldsColor
                    .Add "intensity", 100
                End With
            End With
        End With

    End With

End Sub


'Super Pops Mode.


Sub CreateSuperPopsMode

    With CreateGlfMode("super_pops", 700)
        .StartEvents = Array("start_super_pops","mystery_super_pops")
        .StopEvents = Array("mode_base_stopping","stop_super_pops","init_training")


        With .EventPlayer()
            'stop after some timer period
            .Add "timer_super_pops_complete", Array("stop_super_pops")
        End With

        With .SoundPlayer()
            With .EventName("mode_super_pops_started")
                .Key = "key_voc_super_pops"
                .Sound = "voc_super_pop_bumpers"
            End With
        End With

        With .Shots("super_pops")
            .Profile = "super_pops"
            With .ControlEvents()
                .Events = Array("mode_super_pops_started")
                .State = 1
            End With
            With .ControlEvents()
                .Events = Array("timer_super_pops_tick{devices.timers.super_pops.ticks == "&(SuperPopsMaxTicks-5)&"}")
                .State = 2
            End With
            .ResetEvents = Array("mode_super_pops_stopping")
        End With

        With .ShotProfiles("super_pops")
            With .States("unlit")
                .Show = "off"
                .Key = "key_off_suppop"
                .Priority = 500
                With .Tokens()
                    .Add "lights", "tBumper"
                    .Add "color", "555555"
                End With
            End With
            With .States("flashing")
                .Show = "flash_color_with_fade"
                .Key = "key_flashing_suppop"
                .Speed = 2
                .Priority = 500
                With .Tokens()
                    .Add "lights", "tBumper"
                    .Add "fade", 500
                    .Add "color", "555555"
                End With
            End With
            With .States("hurry")
                .Show = "flash_color"
                .Key = "key_hurry_suppop"
                .Speed = 7
                .Priority = 500
                With .Tokens()
                    .Add "lights", "tBumper"
                    .Add "color", "555555"
                End With
            End With
        End With

        With .Timers("super_pops")
            .TickInterval = SuperPopsTickInterval
            .StartValue = 0
            .EndValue = SuperPopsMaxTicks
            With .ControlEvents()
                .EventName = "mode_super_pops_started"
                .Action = "restart"
            End With
        End With


        With .VariablePlayer()
            With .EventName("mode_super_pops_started")
                With .Variable("pop_multiplier")
                    .Action = "set"
                    .Int = SuperPopsMultiplier
                End With
            End With
            With .EventName("mode_super_pops_stopping")
                With .Variable("pop_multiplier")
                    .Action = "set"
                    .Int = 1
                End With
            End With
    End With


        With .SegmentDisplayPlayer()
            With .EventName("mode_super_pops_started")
                With .Display("player1")
                    .Text = """"""
                    .Expire = SuperPopsShowLength
                End With
                With .Display("player2")
                    .Text = """ SUPER """
                    .Flashing = "all"
                    .Expire = SuperPopsShowLength
                End With
                With .Display("player3")
                    .Text = """  POPS  """
                    .Flashing = "all"
                    .Expire = SuperPopsShowLength
                End With
                With .Display("player4")
                    .Text = """"""
                    .Expire = SuperPopsShowLength
                End With
            End With
        End With


    End With

End Sub


'Super Spinner Mode.


Sub CreateSuperSpinnerMode

    With CreateGlfMode("super_spinner", 700)
        .StartEvents = Array("start_super_spinner","mystery_super_spinner")
        .StopEvents = Array("mode_base_stopping","stop_super_spinner","init_training")


        With .EventPlayer()
            'stop after some timer period
            .Add "timer_super_spinner_complete", Array("stop_super_spinner")
        End With

        With .SoundPlayer()
            With .EventName("mode_super_spinner_started")
                .Key = "key_voc_super_spinner"
                .Sound = "voc_super_spinner"
            End With
        End With

        With .Shots("super_spinner")
            .Profile = "super_spinner"
            With .ControlEvents()
                .Events = Array("mode_super_spinner_started")
                .State = 1
            End With
            With .ControlEvents()
                .Events = Array("timer_super_spinner_tick{devices.timers.super_spinner.ticks == "&(SuperSpinnerMaxTicks-5)&"}")
                .State = 2
            End With
            .ResetEvents = Array("mode_super_spinner_stopping")
        End With

        With .ShotProfiles("super_spinner")
            With .States("unlit")
                .Show = "off"
                .Key = "key_off_supspin"
                .Priority = 500
                With .Tokens()
                    .Add "lights", "gi21"
                    .Add "color", ProtonColor
                End With
            End With
            With .States("flashing")
                .Show = "flash_color_with_fade"
                .Key = "key_flashing_supspin"
                .Speed = 5
                .Priority = 500
                With .Tokens()
                    .Add "lights", "gi21"
                    .Add "fade", 500
                    .Add "color", ProtonColor
                End With
            End With
            With .States("hurry")
                .Show = "flash_color"
                .Key = "key_hurry_supspin"
                .Speed = 10
                .Priority = 500
                With .Tokens()
                    .Add "lights", "gi21"
                    .Add "color", ProtonColor
                End With
            End With
        End With

        With .Timers("super_spinner")
            .TickInterval = SuperSpinnerTickInterval
            .StartValue = 0
            .EndValue = SuperSpinnerMaxTicks
            With .ControlEvents()
                .EventName = "mode_super_spinner_started"
                .Action = "restart"
            End With
        End With


        With .VariablePlayer()
            With .EventName("mode_super_spinner_started")
                With .Variable("spin_multiplier")
                    .Action = "set"
                    .Int = SuperSpinnerMultiplier
                End With
            End With
            With .EventName("mode_super_spinner_stopping")
                With .Variable("spin_multiplier")
                    .Action = "set"
                    .Int = 1
                End With
            End With
    End With


        With .SegmentDisplayPlayer()
            With .EventName("mode_super_spinner_started")
                With .Display("player1")
                    .Text = """"""
                    .Expire = SuperSpinnerShowLength
                End With
                With .Display("player2")
                    .Text = """ SUPER """
                    .Flashing = "all"
                    .Expire = SuperSpinnerShowLength
                End With
                With .Display("player3")
                    .Text = """SPINNER"""
                    .Flashing = "all"
                    .Expire = SuperSpinnerShowLength
                End With
                With .Display("player4")
                    .Text = """"""
                    .Expire = SuperSpinnerShowLength
                End With
            End With
        End With


    End With

End Sub



' Tilt Mode.


Sub CreateTiltMode()

    With CreateGlfMode("tilt", 10000)
        .StartEvents = Array(GLF_BALL_STARTED)
        .StopEvents = Array("ball_will_end")


        With .Tilt()
            .MultipleHitWindow = 3000
            .SettleTime = 5000
            .WarningsToTilt = 3
            .ResetWarningEvents = Array("mode_tilt_started")
        End With

    End With

End Sub


'Time Warp Mode.

'When a ball is successfully makes the timewarp ramp:
'  - The meteor wave countdown timer pauses for 10 seconds
'  - The next available timewarp inserts lights (blinking slowly at first, then speeding up at the end of 10 sec)
'Timewarp is only available if there is at least one unlit timewarp insert.
'If a timewarp is started while timewarp is already in process, the pause timer resets to 10 seconds
'Timewarp inserts are reset to unlit at end of a meteor wave.


Sub CreateTimewarpMode
    Dim x

    With CreateGlfMode("timewarp", 550)
        .StartEvents = Array("new_ball_started","stop_meteor_wave","stop_training","wizard_mode_ended")
        .StopEvents = Array("stop_timewarp","mode_base_stopping","start_training_select","wizard_mode_started") ',"start_meteor_wave"

        With .EventPlayer()
            .Add "mode_timewarp_started{current_player.shot_timewarp1==0}", Array("reset_timewarp")
            .Add "mode_timewarp_started{current_player.ball_just_started==0}", Array("reset_timewarp")
            .Add "reset_timewarp", Array("ready_timewarp1")
            .Add "left_ramp_hit", Array("score_2000")
            .Add "s_TimewarpRamp_active{current_player.warping==0 && current_player.shot_timewarp1==1}", Array("light_timewarp1","ready_timewarp2","restart_tw_timer","score_10000")
            .Add "s_TimewarpRamp_active{current_player.warping==0 && current_player.shot_timewarp1==2 && current_player.shot_timewarp2==1}", Array("light_timewarp2","restart_tw_timer","score_20000")
            .Add "timer_timewarp_complete", Array("start_mwq_timer")  'Timewarp done, so continue the meteor wave qualify countdown
        End With


        With .DOFPlayer()
            With .EventName("restart_tw_timer")
                .Action = "DOF_PULSE"
                .DOFEvent = 146
            End With
        End With



        'Define our shots
        For x = 1 to 2
            With .Shots("timewarp"&x)
                .Profile = "powerups"
                With .Tokens()
                    .Add "lights", "LTW"&x
                    .Add "color", TimewarpColor
                End With
                With .ControlEvents()
                    .Events = Array("ready_timewarp"&x)
                    .State = 1
                End With
                With .ControlEvents()
                    .Events = Array("light_timewarp"&x)
                    .State = 2
                End With
                .RestartEvents = Array("reset_timewarp")
            End With
        Next



        With .ShowPlayer()
            With .EventName("light_timewarp2")
                .Key = "key_timewarp_charged"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 5
                With .Tokens()
                    .Add "lights", "tTimewarp"
                    .Add "color", TimewarpColor
                End With
            End With
            With .EventName("restart_tw_timer")
                .Key = "key_timewarp_show"
                .Priority = 10
                .Show = "timewarp"
                .Speed = 1
                .Loops = 1
            End With
        End With

        With .Timers("timewarp")
            .TickInterval = TimeWarpTickInterval
            .StartValue = 0
            .EndValue = TimeWarpPauseTicks
            With .ControlEvents()
                .EventName = "restart_tw_timer"
                .Action = "restart"
            End With
            With .ControlEvents()
                .EventName = "reset_timewarp"
                .Action = "reset"
            End With
        End With


        With .VariablePlayer()
            ' warping
            With .EventName("restart_tw_timer")
        With .Variable("warping")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName("timer_timewarp_complete")
        With .Variable("warping")
                    .Action = "set"
          .Int = 0
        End With
      End With
            With .EventName("mode_timewarp_started")
        With .Variable("warping")
                    .Action = "set"
          .Int = 0
        End With
      End With
    End With


        With .SegmentDisplayPlayer()
            With .EventName("restart_tw_timer")
                With .Display("pf")
                    .Text = "{devices.timers.meteor_countdown.ticks:0>2}"
                    .Expire = TimeWarpPauseTicks*TimeWarpTickInterval
                End With
                With .Display("player4")
                    .Text = """WARPING"""
                    .Flashing = "all"
                    .Expire = 2000
                End With
            End With
        End With


        With .SoundPlayer()
            With .EventName("s_GateL_active")
                .Key = "key_sfx_left_ramp_time_warp"
                .Sound = "sfx_left_ramp_time_warp"
            End With
            With .EventName("restart_tw_timer")
                .Key = "key_sfx_LTW"
                .Sound = "sfx_LTW"
            End With
        End With

    End With
End Sub


'Training Cluster Bomb Mode.

'Once training mission starts, the associated shots will slow flash until you hit them to make them lit solid.
'Any shots that have been completed in previous training will be lit solid.
'Once all are lit solid, the training objective achieved and award collected.
'Award: only one hit required to collect associated power-up
'There is a time limit during training missions (60 seconds). If objective is not achieved in time, then award not given. But progress is saved for next training round.



Sub CreateTrainingClusterBombMode
    Dim x

    With CreateGlfMode("training_cluster_bomb",700)
        .StartEvents = Array("start_training_cluster_bomb")
        .StopEvents = Array("mode_base_stopping","stop_training")
        '.Debug = True


        With .EventPlayer()
            '.Debug = True
            .Add "mode_training_cluster_bomb_started", Array("init_training","play_lsling_training","play_rsling_training")
            'successfull shot
            .Add "left_orbit_hit{current_player.shot_training_cluster_charge1 == 0}", Array("light_cluster_charge1","flash_gi","play_sfx_LS","score_200000")
            .Add "left_orbit_hit{current_player.shot_training_cluster_charge1 == 1 && current_player.shot_training_cluster_charge2 == 0}", Array("light_cluster_charge2","flash_gi","play_sfx_LS","score_300000")
            .Add "left_orbit_hit{current_player.shot_training_cluster_charge2 == 1 && current_player.shot_training_cluster_charge3 == 0}", Array("light_cluster_charge3","play_sfx_LS","score_500000") ',"flash_gi")
            .Add "light_cluster_charge3", Array("training_achieved","play_sfx_super_jackpot")
            'Stop the training
            .Add "training_achieved", Array("stop_training","training_stopped")
            .Add "timer_training_cluster_bomb_complete", Array("stop_training","training_stopped","play_voc_training_incomplete")
            'handle gi flicker shows
            .Add "timer_training_cluster_bomb_tick", Array("flicker_gi")
            'Handle moon ramp
            .Add "balldevice_moon_lock_ball_enter{devices.ball_devices.moon_lock.balls > current_player.multiball_lock_moon_launch_balls_locked}", Array("delayed_release_moon_ball")
        End With

        With .RandomEventPlayer()
            With .EventName("play_sfx_LS")
                .Add "play_sfx_LS1", 1
                .Add "play_sfx_LS2", 1
                .Add "play_sfx_LS3", 1
                .Add "play_sfx_LS4", 1
                .Add "play_sfx_LS5", 1
                .Add "play_sfx_LS6", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
            With .EventName("flicker_gi")
                .Add "play_flicker_gi01", 1
                .Add "play_flicker_gi02", 1
                .Add "play_flicker_gi03", 1
                .Add "play_flicker_gi04", 1
                .Add "play_flicker_gi05", 1
                .Add "play_flicker_gi06", 1
                .Add "play_flicker_gi07", 1
                .Add "play_flicker_gi08", 1
                .Add "play_flicker_gi09", 1
                .Add "play_flicker_gi10", 1
                .Add "play_flicker_gi11", 1
                .Add "play_flicker_gi12", 1
                .Add "play_flicker_gi13", 1
                .Add "play_flicker_gi14", 1
                .Add "play_flicker_gi15", 1
                .Add "play_flicker_gi16", 1
                .Add "play_flicker_gi17", 1
                .Add "play_flicker_gi18", 1
                .Add "play_flicker_gi19", 1
                .Add "play_flicker_gi20", 1
                .Add "play_flicker_gi21", 1
                .Add "play_flicker_gi22", 1
                .ForceAll = False
                .ForceDifferent = False
            End With
        End With

        With .DOFPlayer()
            With .EventName("play_sfx_LS")
                .Action = "DOF_PULSE"
                .DOFEvent = 128
            End With
        End With

        With .ComboSwitches("cancel_training_cb")
            .Switch1 = "s_left_flipper"
            .Switch2 = "s_right_flipper"
            .HoldTime = TrainingCancelTime
            .EventsWhenBoth = Array("stop_training","play_voc_training_canceled","training_stopped")
        End With

        With .ComboSwitches("cancel_training_warning_cb")
            .Switch1 = "s_left_flipper"
            .Switch2 = "s_right_flipper"
            .HoldTime = TrainingCancelWarningTime
            .EventsWhenBoth = Array("training_cancel_warning")
            .EventsWhenInactive = Array("training_cancel_warning_stop")
        End With


        'Define our shots
        For x = 1 to 3
            With .Shots("training_cluster_charge"&x)
                .Profile = "training_powerups"
                With .Tokens()
                    .Add "lights", "LCC"&x
                    .Add "color", ClusterBombColor
                End With
                With .ControlEvents()
                    .Events = Array("light_cluster_charge"&x)
                    .State = 1
                End With
                '.RestartEvents = Array("init_training")
            End With
        Next


        With .VariablePlayer()
            With .EventName("light_cluster_charge1")
        With .Variable("shot_training_select_cluster_charge1")
                    .Action = "set"
          .Int = 3
        End With
            End With
            With .EventName("light_cluster_charge2")
        With .Variable("shot_training_select_cluster_charge2")
                    .Action = "set"
          .Int = 3
        End With
            End With
            With .EventName("light_cluster_charge3")
        With .Variable("shot_training_select_cluster_charge3")
                    .Action = "set"
          .Int = 3
        End With
            End With
            With .EventName("training_achieved")
        With .Variable("training_cluster_bomb_achieved")
                    .Action = "set"
          .Int = 1
        End With
                With .Variable("training_total_achieved")
                    .Action = "add"
          .Int = 1
        End With
                With .Variable("training_just_finished")
                    .Action = "set"
          .Int = 1
        End With
            End With
            With .EventName("start_moon_multiball")
                With .Variable("training_moon_missile_used")
                    .Action = "set"
          .Int = 1
        End With
            End With
        End With


        With .ShowPlayer()
            With .EventName("init_training")
                .Key = "key_training_gi"
                .Show = "flicker_color_on_intensity"
                .Speed = 5
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", ClusterBombColor
                    .Add "intensity", 10
                End With
            End With
            With .EventName("flash_gi")
                .Key = "key_training_gi"
                .Show = "flicker_color_on_intensity"
                .Speed = 5
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", ClusterBombColor
                    .Add "intensity", 10
                End With
            End With
            With .EventName("mode_training_cluster_bomb_stopping")
                .Key = "key_training_stopping"
                .BlockQueue = True
                .Show = "flicker_color"
                .Speed = 5
                .Loops = 1
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", ClusterBombColor
                    .Add "intensity", 10
                End With
            End With

            With .EventName("training_achieved")
                .Key = "key_training_flash"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 4
                With .Tokens()
                    .Add "lights", "tFlasherU"
                    .Add "color", ClusterBombColor
                End With
            End With

            'GI flicker
            For x = 1 to 9
                With .EventName("play_flicker_gi0"&x)
                    .Key = "key_flicker_gi0"&x
                    .Show = "flicker2_color_on_intensity"
                    .Speed = 2
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "gi0"&x
                        .Add "color", ClusterBombColor
                        .Add "intensity", 10
                    End With
                End With
            Next
            For x = 10 to 22
                With .EventName("play_flicker_gi"&x)
                    .Key = "key_flicker_gi"&x
                    .Show = "flicker2_color_on_intensity"
                    .Speed = 2
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "gi"&x
                        .Add "color", ClusterBombColor
                        .Add "intensity", 10
                    End With
                End With
            Next

            'sling domes
            With .EventName("play_lsling_training")
                .Key = "key_lsling_training"
                .Show = "lsling_rotate1_cw"
                .Speed = 0.3
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "intensity", 50
                End With
            End With
            With .EventName("play_rsling_training")
                .Key = "key_rsling_training"
                .Show = "rsling_rotate1_ccw"
                .Speed = 0.3
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "intensity", 50
                End With
            End With

            'bumpers
            For x = 1 to 4
                With .EventName("s_Bumper"&x&"_active")
                    .Key = "key_bumper"&x&"_flash"
                    .Show = "flash_color_with_fade"
                    .Speed = 15
                    .Loops = 1
                    .Priority = 2000
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", "ffffff"
                        .Add "fade", 50
                    End With
                End With
            Next

            'cancel warning
            With .EventName("training_cancel_warning")
                .Key = "key_training_cancel_cb_warning"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 15
                .Priority = 100
                With .Tokens()
                    .Add "lights", "tInlaneGI"
                    .Add "color", TrainingColor
                End With
            End With
            With .EventName("training_cancel_warning_stop")
                .Key = "key_training_cancel_cb_warning"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 15
                .Priority = 100
                .Action = "stop"
                With .Tokens()
                    .Add "lights", "tInlaneGI"
                    .Add "color", TrainingColor
                End With
            End With

        End With

        'Selection timer
        With .Timers("training_cluster_bomb")
            '.Debug = True
            .Direction = "down"
            .TickInterval = 1000
            .StartValue = TrainingTicks
            .EndValue = 0
            With .ControlEvents()
                .EventName = "init_training"
                .Action = "restart"
            End With
        End With


        'Display
        With .SegmentDisplayPlayer()
            With .EventName("init_training")
                With .Display("player1")
                    .Text = """"""
                    .Expire = 5000
                End With
                With .Display("player2")
                    .Text = """TRAIN """
                    .Expire = 5000
                End With
                With .Display("player3")
                    .Text = """CLUSTER"""
                    .Expire = 5000
                End With
                With .Display("player4")
                    .Text = """"""
                    .Expire = 5000
                End With
                With .Display("pf")
                    .Text = "{devices.timers.training_cluster_bomb.ticks:0>2}"
                End With
            End With
        End With


    End With

End Sub


'Training Heal Mode.

'Once training mission starts, the associated shots will slow flash until you hit them to make them lit solid.
'Any shots that have been completed in previous training will be lit solid.
'Once all are lit solid, the training objective achieved and award collected.
'Award: divert pin remains up the rest of the game
'There is a time limit during training missions (60 seconds). If objective is not achieved in time, then award not given. But progress is saved for next training round.



Sub CreateTrainingHealMode
    Dim x

    With CreateGlfMode("training_heal",1300)
        .StartEvents = Array("start_training_heal")
        .StopEvents = Array("mode_base_stopping","stop_training")
        '.Debug = True


        With .EventPlayer()
            '.Debug = True
            .Add "mode_training_heal_started", Array("init_training","raise_diverter","play_lsling_training","play_rsling_training")
            'successfull shot
            .Add "s_Bumper1_active", Array("check_add_training_health_bump")
            .Add "s_Bumper2_active", Array("check_add_training_health_bump")
            .Add "s_Bumper3_active", Array("check_add_training_health_bump")
            .Add "s_TopSlingshot_active", Array("check_add_training_health_bump")
            'add health lights as needed
            .Add "check_add_training_health_bump{current_player.training_health_bump_value<"&BumperHitsPerRepairTrain&"}", Array("add_training_health_bump")
            .Add "check_add_training_health_bump{current_player.training_health_bump_value>="&BumperHitsPerRepairTrain&"}", Array("check_add_training_health","reset_training_health_bump")
            .Add "check_add_training_health{current_player.shot_training_health1 == 0}", Array("light_health1","flash_gi","play_sfx_LS","score_90000")
            .Add "check_add_training_health{current_player.shot_training_health1 == 1 && current_player.shot_training_health2 == 0}", Array("light_health2","flash_gi","play_sfx_LS","score_90000")
            .Add "check_add_training_health{current_player.shot_training_health2 == 1 && current_player.shot_training_health3 == 0}", Array("light_health3","flash_gi","play_sfx_LS","score_90000")
            .Add "check_add_training_health{current_player.shot_training_health3 == 1 && current_player.shot_training_health4 == 0}", Array("light_health4","flash_gi","play_sfx_LS","score_90000")
            .Add "check_add_training_health{current_player.shot_training_health4 == 1 && current_player.shot_training_health5 == 0}", Array("light_health5","flash_gi","play_sfx_LS","score_90000")
            .Add "check_add_training_health{current_player.shot_training_health5 == 1 && current_player.shot_training_health6 == 0}", Array("light_health6","flash_gi","play_sfx_LS","score_90000")
            .Add "check_add_training_health{current_player.shot_training_health6 == 1 && current_player.shot_training_health7 == 0}", Array("light_health7","flash_gi","play_sfx_LS","score_90000")
            .Add "check_add_training_health{current_player.shot_training_health7 == 1 && current_player.shot_training_health8 == 0}", Array("light_health8","flash_gi","play_sfx_LS","score_90000")
            .Add "check_add_training_health{current_player.shot_training_health8 == 1 && current_player.shot_training_health9 == 0}", Array("light_health9","training_achieved","play_sfx_LS","score_90000")
            'Stop the training
            .Add "training_achieved", Array("stop_training","play_sfx_super_jackpot","training_stopped")
            .Add "timer_training_heal_complete", Array("stop_training","training_stopped","play_voc_training_incomplete")
            .Add "mode_training_heal_stopping{current_player.training_heal_achieved==0}", Array("drop_diverter")
            'handle gi flicker shows
            .Add "timer_training_heal_tick", Array("flicker_gi")
            'Handle moon ramp
            .Add "balldevice_moon_lock_ball_enter{devices.ball_devices.moon_lock.balls > current_player.multiball_lock_moon_launch_balls_locked}", Array("delayed_release_moon_ball")
        End With

        With .RandomEventPlayer()
            With .EventName("play_sfx_LS")
                .Add "play_sfx_LS1", 1
                .Add "play_sfx_LS2", 1
                .Add "play_sfx_LS3", 1
                .Add "play_sfx_LS4", 1
                .Add "play_sfx_LS5", 1
                .Add "play_sfx_LS6", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
            With .EventName("flicker_gi")
                .Add "play_flicker_gi01", 1
                .Add "play_flicker_gi02", 1
                .Add "play_flicker_gi03", 1
                .Add "play_flicker_gi04", 1
                .Add "play_flicker_gi05", 1
                .Add "play_flicker_gi06", 1
                .Add "play_flicker_gi07", 1
                .Add "play_flicker_gi08", 1
                .Add "play_flicker_gi09", 1
                .Add "play_flicker_gi10", 1
                .Add "play_flicker_gi11", 1
                .Add "play_flicker_gi12", 1
                .Add "play_flicker_gi13", 1
                .Add "play_flicker_gi14", 1
                .Add "play_flicker_gi15", 1
                .Add "play_flicker_gi16", 1
                .Add "play_flicker_gi17", 1
                .Add "play_flicker_gi18", 1
                .Add "play_flicker_gi19", 1
                .Add "play_flicker_gi20", 1
                .Add "play_flicker_gi21", 1
                .Add "play_flicker_gi22", 1
                .ForceAll = False
                .ForceDifferent = False
            End With
        End With

        With .DOFPlayer()
            With .EventName("play_sfx_LS")
                .Action = "DOF_PULSE"
                .DOFEvent = 124
            End With
        End With

        With .ComboSwitches("cancel_training_h")
            .Switch1 = "s_left_flipper"
            .Switch2 = "s_right_flipper"
            .HoldTime = TrainingCancelTime
            .EventsWhenBoth = Array("stop_training","play_voc_training_canceled","training_stopped")
        End With

        With .ComboSwitches("cancel_training_warning_h")
            .Switch1 = "s_left_flipper"
            .Switch2 = "s_right_flipper"
            .HoldTime = TrainingCancelWarningTime
            .EventsWhenBoth = Array("training_cancel_warning")
            .EventsWhenInactive = Array("training_cancel_warning_stop")
        End With


        'Define our shots
        For x = 1 to 9
            With .Shots("training_health"&x)
                .Profile = "training_powerups"
                With .Tokens()
                    .Add "lights", "LH"&x
                    .Add "color", HealthColor1
                End With
                With .ControlEvents()
                    .Events = Array("light_health"&x)
                    .State = 1
                End With
                '.RestartEvents = Array("init_training")
            End With
        Next

        With .VariablePlayer()
            For x = 1 to 9
                With .EventName("light_health"&x)
                    With .Variable("shot_training_select_health"&x)
                        .Action = "set"
                        .Int = 3
                    End With
                End With
            Next
            'training health bump value
            With .EventName("reset_training_health_bump")
        With .Variable("training_health_bump_value")
                    .Action = "set"
          .Int = 0
        End With
      End With
            With .EventName("add_training_health_bump")
        With .Variable("training_health_bump_value")
                    .Action = "add"
          .Int = 1
        End With
      End With
            'training achieved
            With .EventName("training_achieved")
        With .Variable("training_heal_achieved")
                    .Action = "set"
          .Int = 1
        End With
                With .Variable("training_total_achieved")
                    .Action = "add"
          .Int = 1
        End With
                With .Variable("training_just_finished")
                    .Action = "set"
          .Int = 1
        End With
            End With
            'training_moon_missile_used
            With .EventName("start_moon_multiball")
                With .Variable("training_moon_missile_used")
                    .Action = "set"
          .Int = 1
        End With
            End With
        End With


        With .ShowPlayer()
            With .EventName("mode_training_heal_started")
                .Key = "key_training_bumpers"
                .Show = "flicker_color_on_intensity"
                .Speed = 5
                .Priority = 1000
                With .Tokens()
                    .Add "lights", "tBumper"
                    .Add "color", HealthColor1
                    .Add "intensity", 20
                End With
            End With
            With .EventName("init_training")
                .Key = "key_training_gi"
                .Show = "flicker_color_on_intensity"
                .Speed = 5
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", HealthColor1
                    .Add "intensity", 10
                End With
            End With
            With .EventName("flash_gi")
                .Key = "key_training_gi"
                .Show = "flicker_color_on_intensity"
                .Speed = 5
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", HealthColor1
                    .Add "intensity", 10
                End With
            End With
            With .EventName("mode_training_heal_stopping")
                .Key = "key_training_stopping"
                .BlockQueue = True
                .Show = "flicker_color"
                .Speed = 5
                .Loops = 1
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", HealthColor1
                    .Add "intensity", 10
                End With
            End With

            With .EventName("training_achieved")
                .Key = "key_training_flash"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 4
                With .Tokens()
                    .Add "lights", "tFlasherU"
                    .Add "color", HealthColor1
                End With
            End With

            'GI flicker
            For x = 1 to 9
                With .EventName("play_flicker_gi0"&x)
                    .Key = "key_flicker_gi0"&x
                    .Show = "flicker2_color_on_intensity"
                    .Speed = 2
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "gi0"&x
                        .Add "color", HealthColor1
                        .Add "intensity", 10
                    End With
                End With
            Next
            For x = 10 to 22
                With .EventName("play_flicker_gi"&x)
                    .Key = "key_flicker_gi"&x
                    .Show = "flicker2_color_on_intensity"
                    .Speed = 2
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "gi"&x
                        .Add "color", HealthColor1
                        .Add "intensity", 10
                    End With
                End With
            Next

            'sling domes
            With .EventName("play_lsling_training")
                .Key = "key_lsling_training"
                .Show = "lsling_rotate1_cw"
                .Speed = 0.3
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "intensity", 50
                End With
            End With
            With .EventName("play_rsling_training")
                .Key = "key_rsling_training"
                .Show = "rsling_rotate1_ccw"
                .Speed = 0.3
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "intensity", 50
                End With
            End With

            'bumpers
            For x = 1 to 4
                With .EventName("s_Bumper"&x&"_active")
                    .Key = "key_bumper"&x&"_flash"
                    .Show = "flash_color_with_fade"
                    .Speed = 15
                    .Loops = 1
                    .Priority = 2000
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", HealthColor1
                        .Add "fade", 50
                    End With
                End With
            Next

            'cancel warning
            With .EventName("training_cancel_warning")
                .Key = "key_training_cancel_h_warning"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 15
                .Priority = 100
                With .Tokens()
                    .Add "lights", "tInlaneGI"
                    .Add "color", TrainingColor
                End With
            End With
            With .EventName("training_cancel_warning_stop")
                .Key = "key_training_cancel_h_warning"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 15
                .Priority = 100
                .Action = "stop"
                With .Tokens()
                    .Add "lights", "tInlaneGI"
                    .Add "color", TrainingColor
                End With
            End With

        End With

        'Selection timer
        With .Timers("training_heal")
            '.Debug = True
            .Direction = "down"
            .TickInterval = 1000
            .StartValue = TrainingTicks
            .EndValue = 0
            With .ControlEvents()
                .EventName = "init_training"
                .Action = "restart"
            End With
        End With


        'Display
        With .SegmentDisplayPlayer()
            With .EventName("init_training")
                With .Display("player1")
                    .Text = """"""
                    .Expire = 5000
                End With
                With .Display("player2")
                    .Text = """TRAIN """
                    .Expire = 5000
                End With
                With .Display("player3")
                    .Text = """HEALTH"""
                    .Expire = 5000
                End With
                With .Display("player4")
                    .Text = """"""
                    .Expire = 5000
                End With
                With .Display("pf")
                    .Text = "{devices.timers.training_heal.ticks:0>2}"
                End With
            End With
        End With


    End With

End Sub


'Training Moon Missile Mode.

'Once training mission starts, the associated shots will slow flash until you hit them to make them lit solid.
'Any shots that have been completed in previous training will be lit solid.
'Once all are lit solid, the training objective achieved and award collected.
'Award: only one hit required to collect associated power-up
'There is a time limit during training missions (60 seconds). If objective is not achieved in time, then award not given. But progress is saved for next training round.



Sub CreateTrainingMoonMissileMode
    Dim x

    With CreateGlfMode("training_moon_missile",700)
        .StartEvents = Array("start_training_moon_missile")
        .StopEvents = Array("mode_base_stopping","stop_training")
        '.Debug = True

        With .EventPlayer()
            '.Debug = True
            .Add "mode_training_moon_missile_started", Array("init_training","play_lsling_training","play_rsling_training")
            'Stop the training
            .Add "training_moon_lane_group_collected_complete", Array("training_moon_missile_completed","play_sfx_super_jackpot")
            .Add "timer_training_moon_missile_complete", Array("stop_training","training_stopped","play_voc_training_incomplete")
            .Add "training_moon_missile_completed", Array("stop_training","training_stopped")
            'Update the training select shots
            .Add "training_moon_lane_group_hit", Array("update_training_select_moon_lane","flash_gi","play_sfx_LS","score_200000")
            .Add "update_training_select_moon_lane{current_player.shot_training_moon_lane1==0}", Array("update_training_select_moon_lane1a")
            .Add "update_training_select_moon_lane{current_player.shot_training_moon_lane1==1}", Array("update_training_select_moon_lane1b")
            .Add "update_training_select_moon_lane{current_player.shot_training_moon_lane2==0}", Array("update_training_select_moon_lane2a")
            .Add "update_training_select_moon_lane{current_player.shot_training_moon_lane2==1}", Array("update_training_select_moon_lane2b")
            .Add "update_training_select_moon_lane{current_player.shot_training_moon_lane3==0}", Array("update_training_select_moon_lane3a")
            .Add "update_training_select_moon_lane{current_player.shot_training_moon_lane3==1}", Array("update_training_select_moon_lane3b")
            .Add "update_training_select_moon_lane{current_player.shot_training_moon_lane4==0}", Array("update_training_select_moon_lane4a")
            .Add "update_training_select_moon_lane{current_player.shot_training_moon_lane4==1}", Array("update_training_select_moon_lane4b")
            'handle gi flicker shows
            .Add "timer_training_moon_missile_tick", Array("flicker_gi")
            'Handle moon ramp
            .Add "balldevice_moon_lock_ball_enter{devices.ball_devices.moon_lock.balls > current_player.multiball_lock_moon_launch_balls_locked}", Array("delayed_release_moon_ball")
        End With

        With .RandomEventPlayer()
            With .EventName("play_sfx_LS")
                .Add "play_sfx_LS1", 1
                .Add "play_sfx_LS2", 1
                .Add "play_sfx_LS3", 1
                .Add "play_sfx_LS4", 1
                .Add "play_sfx_LS5", 1
                .Add "play_sfx_LS6", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
            With .EventName("flicker_gi")
                .Add "play_flicker_gi01", 1
                .Add "play_flicker_gi02", 1
                .Add "play_flicker_gi03", 1
                .Add "play_flicker_gi04", 1
                .Add "play_flicker_gi05", 1
                .Add "play_flicker_gi06", 1
                .Add "play_flicker_gi07", 1
                .Add "play_flicker_gi08", 1
                .Add "play_flicker_gi09", 1
                .Add "play_flicker_gi10", 1
                .Add "play_flicker_gi11", 1
                .Add "play_flicker_gi12", 1
                .Add "play_flicker_gi13", 1
                .Add "play_flicker_gi14", 1
                .Add "play_flicker_gi15", 1
                .Add "play_flicker_gi16", 1
                .Add "play_flicker_gi17", 1
                .Add "play_flicker_gi18", 1
                .Add "play_flicker_gi19", 1
                .Add "play_flicker_gi20", 1
                .Add "play_flicker_gi21", 1
                .Add "play_flicker_gi22", 1
                .ForceAll = False
                .ForceDifferent = False
            End With
        End With

        With .DOFPlayer()
            With .EventName("play_sfx_LS")
                .Action = "DOF_PULSE"
                .DOFEvent = 123
            End With
        End With

        With .ComboSwitches("cancel_training_mm")
            .Switch1 = "s_left_flipper"
            .Switch2 = "s_right_flipper"
            .HoldTime = TrainingCancelTime
            .EventsWhenBoth = Array("stop_training","play_voc_training_canceled","training_stopped")
        End With

        With .ComboSwitches("cancel_training_warning_mm")
            .Switch1 = "s_left_flipper"
            .Switch2 = "s_right_flipper"
            .HoldTime = TrainingCancelWarningTime
            .EventsWhenBoth = Array("training_cancel_warning")
            .EventsWhenInactive = Array("training_cancel_warning_stop")
        End With


        'Define our shots
        For x = 1 to 4
            With .Shots("training_moon_lane"&x)
                .Switch = MoonQualifySwitches(x-1)
                .Profile = "train_moon_missile"
                '.Debug = True
                With .Tokens()
                    .Add "lights", MoonQualifyLightNames(x-1)
                    .Add "color", MoonColor
                End With
            End With
        Next

        'Define a shot profile with two states (off/on)
        With .ShotProfiles("train_moon_missile")
            With .States("ready")
                .Show = "flash_color_with_fade"
                .Key = "key_train_s1"
                .Speed = 8
                With .Tokens()
                    .Add "color", MoonColor
                    .Add "fade", 400
                End With
            End With
            With .States("collected")
                .Show = "led_color"
                .Key = "key_train_s2"
                With .Tokens()
                    .Add "color", MoonColor
                End With
            End With
        End With

        ' Moon lane qualifying shot group
        With .ShotGroups("training_moon_lane_group")
            '.Debug = True
            .Shots = Array("training_moon_lane1", "training_moon_lane2", "training_moon_lane3", "training_moon_lane4")
            .RotateLeftEvents = Array("s_left_flipper_active")
            .RotateRightEvents = Array("s_right_flipper_active")
        End With



        With .VariablePlayer()
            '.Debug = True
            'update the training select shots 1
            With .EventName("update_training_select_moon_lane1a")
        With .Variable("shot_training_select_moon_lane1")
                    .Action = "set"
          .Int = 0
        End With
            End With
            With .EventName("update_training_select_moon_lane1b")
        With .Variable("shot_training_select_moon_lane1")
                    .Action = "set"
          .Int = 3
        End With
            End With
            'update the training select shots 2
            With .EventName("update_training_select_moon_lane2a")
        With .Variable("shot_training_select_moon_lane2")
                    .Action = "set"
          .Int = 0
        End With
            End With
            With .EventName("update_training_select_moon_lane2b")
        With .Variable("shot_training_select_moon_lane2")
                    .Action = "set"
          .Int = 3
        End With
            End With
            'update the training select shots 3
            With .EventName("update_training_select_moon_lane3a")
        With .Variable("shot_training_select_moon_lane3")
                    .Action = "set"
          .Int = 0
        End With
            End With
            With .EventName("update_training_select_moon_lane3b")
        With .Variable("shot_training_select_moon_lane3")
                    .Action = "set"
          .Int = 3
        End With
            End With
            'update the training select shots 4
            With .EventName("update_training_select_moon_lane4a")
        With .Variable("shot_training_select_moon_lane4")
                    .Action = "set"
          .Int = 0
        End With
            End With
            With .EventName("update_training_select_moon_lane4b")
        With .Variable("shot_training_select_moon_lane4")
                    .Action = "set"
          .Int = 3
        End With
            End With
            'completed
            With .EventName("training_moon_missile_completed")
        With .Variable("training_moon_missile_achieved")
                    .Action = "set"
          .Int = 1
        End With
                With .Variable("training_total_achieved")
                    .Action = "add"
          .Int = 1
        End With
                With .Variable("training_just_finished")
                    .Action = "set"
          .Int = 1
        End With
            End With
            'training_moon_missile_used
            With .EventName("start_moon_multiball")
                With .Variable("training_moon_missile_used")
                    .Action = "set"
          .Int = 1
        End With
            End With
        End With


        With .ShowPlayer()
            With .EventName("init_training")
                .Key = "key_training_gi"
                .Show = "flicker_color_on_intensity"
                .Speed = 5
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", MoonColor
                    .Add "intensity", 10
                End With
            End With
            With .EventName("flash_gi")
                .Key = "key_training_gi"
                .Show = "flicker_color_on_intensity"
                .Speed = 5
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", MoonColor
                    .Add "intensity", 10
                End With
            End With
            With .EventName("mode_training_moon_missile_stopping")
                .Key = "key_training_stopping"
                .BlockQueue = True
                .Show = "flicker_color"
                .Speed = 5
                .Loops = 1
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", MoonColor
                    .Add "intensity", 10
                End With
            End With

            With .EventName("training_achieved")
                .Key = "key_training_flash"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 4
                With .Tokens()
                    .Add "lights", "tFlasherU"
                    .Add "color", MoonColor
                End With
            End With

            'GI flicker
            For x = 1 to 9
                With .EventName("play_flicker_gi0"&x)
                    .Key = "key_flicker_gi0"&x
                    .Show = "flicker2_color_on_intensity"
                    .Speed = 2
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "gi0"&x
                        .Add "color", MoonColor
                        .Add "intensity", 10
                    End With
                End With
            Next
            For x = 10 to 22
                With .EventName("play_flicker_gi"&x)
                    .Key = "key_flicker_gi"&x
                    .Show = "flicker2_color_on_intensity"
                    .Speed = 2
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "gi"&x
                        .Add "color", MoonColor
                        .Add "intensity", 10
                    End With
                End With
            Next

            'sling domes
            With .EventName("play_lsling_training")
                .Key = "key_lsling_training"
                .Show = "lsling_rotate1_cw"
                .Speed = 0.3
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "intensity", 50
                End With
            End With
            With .EventName("play_rsling_training")
                .Key = "key_rsling_training"
                .Show = "rsling_rotate1_ccw"
                .Speed = 0.3
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "intensity", 50
                End With
            End With

            'bumpers
            For x = 1 to 4
                With .EventName("s_Bumper"&x&"_active")
                    .Key = "key_bumper"&x&"_flash"
                    .Show = "flash_color_with_fade"
                    .Speed = 15
                    .Loops = 1
                    .Priority = 2000
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", "ffffff"
                        .Add "fade", 50
                    End With
                End With
            Next

            'cancel warning
            With .EventName("training_cancel_warning")
                .Key = "key_training_cancel_mm_warning"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 15
                .Priority = 100
                With .Tokens()
                    .Add "lights", "tInlaneGI"
                    .Add "color", TrainingColor
                End With
            End With
            With .EventName("training_cancel_warning_stop")
                .Key = "key_training_cancel_mm_warning"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 15
                .Priority = 100
                .Action = "stop"
                With .Tokens()
                    .Add "lights", "tInlaneGI"
                    .Add "color", TrainingColor
                End With
            End With

        End With

        'Selection timer
        With .Timers("training_moon_missile")
            .Direction = "down"
            .TickInterval = 1000
            .StartValue = TrainingTicks
            .EndValue = 0
            With .ControlEvents()
                .EventName = "init_training"
                .Action = "restart"
            End With
        End With


        'Display
        With .SegmentDisplayPlayer()
            With .EventName("init_training")
                With .Display("player1")
                    .Text = """"""
                    .Expire = 5000
                End With
                With .Display("player2")
                    .Text = """TRAIN """
                    .Expire = 5000
                End With
                With .Display("player3")
                    .Text = """MOON """
                    .Expire = 5000
                End With
                With .Display("player4")
                    .Text = """"""
                    .Expire = 5000
                End With
                With .Display("pf")
                    .Text = "{devices.timers.training_moon_missile.ticks:0>2}"
                End With
            End With
        End With


    End With

End Sub


'Training Proton Cannon Mode.

'Once training mission starts, the associated shots will slow flash until you hit them to make them lit solid.
'Any shots that have been completed in previous training will be lit solid.
'Once all are lit solid, the training objective achieved and award collected.
'Award: only one hit required to collect associated power-up
'There is a time limit during training missions (60 seconds). If objective is not achieved in time, then award not given. But progress is saved for next training round.



Sub CreateTrainingProtonCannonMode
    Dim x

    With CreateGlfMode("training_proton_cannon",700)
        .StartEvents = Array("start_training_proton_cannon")
        .StopEvents = Array("mode_base_stopping","stop_training")
        '.Debug = True


        With .EventPlayer()
            '.Debug = True
            .Add "mode_training_proton_cannon_started", Array("init_training","play_lsling_training","play_rsling_training")
            'successfull shot
            .Add "inner_orbit_hit{current_player.shot_training_proton_charge1 == 0}", Array("light_proton_charge1","flash_gi","play_sfx_LS","score_200000")
            .Add "inner_orbit_hit{current_player.shot_training_proton_charge1 == 1 && current_player.shot_training_proton_charge2 == 0}", Array("light_proton_charge2","flash_gi","play_sfx_LS","score_300000")
            .Add "inner_orbit_hit{current_player.shot_training_proton_charge2 == 1 && current_player.shot_training_proton_charge3 == 0}", Array("light_proton_charge3","play_sfx_LS","score_500000") ',"flash_gi")
            .Add "light_proton_charge3", Array("training_achieved")
            'Stop the training
            .Add "training_achieved", Array("stop_training","play_sfx_super_jackpot","training_stopped")
            .Add "timer_training_proton_cannon_complete", Array("stop_training","training_stopped","play_voc_training_incomplete")
            'handle gi flicker shows
            .Add "timer_training_proton_cannon_tick", Array("flicker_gi")
            'Handle moon ramp
            .Add "balldevice_moon_lock_ball_enter{devices.ball_devices.moon_lock.balls > current_player.multiball_lock_moon_launch_balls_locked}", Array("delayed_release_moon_ball")
        End With

        With .RandomEventPlayer()
            With .EventName("play_sfx_LS")
                .Add "play_sfx_LS1", 1
                .Add "play_sfx_LS2", 1
                .Add "play_sfx_LS3", 1
                .Add "play_sfx_LS4", 1
                .Add "play_sfx_LS5", 1
                .Add "play_sfx_LS6", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
            With .EventName("flicker_gi")
                .Add "play_flicker_gi01", 1
                .Add "play_flicker_gi02", 1
                .Add "play_flicker_gi03", 1
                .Add "play_flicker_gi04", 1
                .Add "play_flicker_gi05", 1
                .Add "play_flicker_gi06", 1
                .Add "play_flicker_gi07", 1
                .Add "play_flicker_gi08", 1
                .Add "play_flicker_gi09", 1
                .Add "play_flicker_gi10", 1
                .Add "play_flicker_gi11", 1
                .Add "play_flicker_gi12", 1
                .Add "play_flicker_gi13", 1
                .Add "play_flicker_gi14", 1
                .Add "play_flicker_gi15", 1
                .Add "play_flicker_gi16", 1
                .Add "play_flicker_gi17", 1
                .Add "play_flicker_gi18", 1
                .Add "play_flicker_gi19", 1
                .Add "play_flicker_gi20", 1
                .Add "play_flicker_gi21", 1
                .Add "play_flicker_gi22", 1
                .ForceAll = False
                .ForceDifferent = False
            End With
        End With

        With .DOFPlayer()
            With .EventName("play_sfx_LS")
                .Action = "DOF_PULSE"
                .DOFEvent = 125
            End With
        End With

        With .ComboSwitches("cancel_training_pc")
            .Switch1 = "s_left_flipper"
            .Switch2 = "s_right_flipper"
            .HoldTime = TrainingCancelTime
            .EventsWhenBoth = Array("stop_training","play_voc_training_canceled","training_stopped")
        End With

        With .ComboSwitches("cancel_training_warning_pc")
            .Switch1 = "s_left_flipper"
            .Switch2 = "s_right_flipper"
            .HoldTime = TrainingCancelWarningTime
            .EventsWhenBoth = Array("training_cancel_warning")
            .EventsWhenInactive = Array("training_cancel_warning_stop")
        End With


        'Define our shots
        For x = 1 to 3
            With .Shots("training_proton_charge"&x)
                .Profile = "training_powerups"
                With .Tokens()
                    .Add "lights", "LPC"&x
                    .Add "color", ProtonColor
                End With
                With .ControlEvents()
                    .Events = Array("light_proton_charge"&x)
                    .State = 1
                End With
                '.RestartEvents = Array("init_training")
            End With
        Next


        With .VariablePlayer()
            With .EventName("light_proton_charge1")
        With .Variable("shot_training_select_proton_charge1")
                    .Action = "set"
          .Int = 3
        End With
            End With
            With .EventName("light_proton_charge2")
        With .Variable("shot_training_select_proton_charge2")
                    .Action = "set"
          .Int = 3
        End With
            End With
            With .EventName("light_proton_charge3")
        With .Variable("shot_training_select_proton_charge3")
                    .Action = "set"
          .Int = 3
        End With
            End With
            With .EventName("training_achieved")
        With .Variable("training_proton_cannon_achieved")
                    .Action = "set"
          .Int = 1
        End With
                With .Variable("training_total_achieved")
                    .Action = "add"
          .Int = 1
        End With
                With .Variable("training_just_finished")
                    .Action = "set"
          .Int = 1
        End With
            End With
            'training_moon_missile_used
            With .EventName("start_moon_multiball")
                With .Variable("training_moon_missile_used")
                    .Action = "set"
          .Int = 1
        End With
            End With
        End With


        With .ShowPlayer()
            With .EventName("init_training")
                .Key = "key_training_gi"
                .Show = "flicker_color_on_intensity"
                .Speed = 5
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", ProtonColor
                    .Add "intensity", 10
                End With
            End With
            With .EventName("flash_gi")
                .Key = "key_training_gi"
                .Show = "flicker_color_on_intensity"
                .Speed = 5
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", ProtonColor
                    .Add "intensity", 10
                End With
            End With
            With .EventName("mode_training_proton_cannon_stopping")
                .Key = "key_training_stopping"
                .BlockQueue = True
                .Show = "flicker_color"
                .Speed = 5
                .Loops = 1
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", ProtonColor
                    .Add "intensity", 10
                End With
            End With

            With .EventName("training_achieved")
                .Key = "key_training_flash"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 4
                With .Tokens()
                    .Add "lights", "tFlasherU"
                    .Add "color", ProtonColor
                End With
            End With

            'GI flicker
            For x = 1 to 9
                With .EventName("play_flicker_gi0"&x)
                    .Key = "key_flicker_gi0"&x
                    .Show = "flicker2_color_on_intensity"
                    .Speed = 2
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "gi0"&x
                        .Add "color", ProtonColor
                        .Add "intensity", 10
                    End With
                End With
            Next
            For x = 10 to 22
                With .EventName("play_flicker_gi"&x)
                    .Key = "key_flicker_gi"&x
                    .Show = "flicker2_color_on_intensity"
                    .Speed = 2
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "gi"&x
                        .Add "color", ProtonColor
                        .Add "intensity", 10
                    End With
                End With
            Next

            'sling domes
            With .EventName("play_lsling_training")
                .Key = "key_lsling_training"
                .Show = "lsling_rotate1_cw"
                .Speed = 0.3
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "intensity", 50
                End With
            End With
            With .EventName("play_rsling_training")
                .Key = "key_rsling_training"
                .Show = "rsling_rotate1_ccw"
                .Speed = 0.3
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "intensity", 50
                End With
            End With

            'bumpers
            For x = 1 to 4
                With .EventName("s_Bumper"&x&"_active")
                    .Key = "key_bumper"&x&"_flash"
                    .Show = "flash_color_with_fade"
                    .Speed = 15
                    .Loops = 1
                    .Priority = 2000
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", "ffffff"
                        .Add "fade", 50
                    End With
                End With
            Next

            'cancel warning
            With .EventName("training_cancel_warning")
                .Key = "key_training_cancel_pc_warning"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 15
                .Priority = 100
                With .Tokens()
                    .Add "lights", "tInlaneGI"
                    .Add "color", TrainingColor
                End With
            End With
            With .EventName("training_cancel_warning_stop")
                .Key = "key_training_cancel_pc_warning"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 15
                .Priority = 100
                .Action = "stop"
                With .Tokens()
                    .Add "lights", "tInlaneGI"
                    .Add "color", TrainingColor
                End With
            End With

        End With

        'Selection timer
        With .Timers("training_proton_cannon")
            '.Debug = True
            .Direction = "down"
            .TickInterval = 1000
            .StartValue = TrainingTicks
            .EndValue = 0
            With .ControlEvents()
                .EventName = "init_training"
                .Action = "restart"
            End With
        End With


        'Display
        With .SegmentDisplayPlayer()
            With .EventName("init_training")
                With .Display("player1")
                    .Text = """"""
                    .Expire = 5000
                End With
                With .Display("player2")
                    .Text = """TRAIN """
                    .Expire = 5000
                End With
                With .Display("player3")
                    .Text = """PROTON"""
                    .Expire = 5000
                End With
                With .Display("player4")
                    .Text = """"""
                    .Expire = 5000
                End With
                With .Display("pf")
                    .Text = "{devices.timers.training_proton_cannon.ticks:0>2}"
                End With
            End With
        End With


    End With

End Sub


'Training Qualify Mode.

'All of the training shots are initially lit. Hit the shots to make them dark.
'Hit all the shots to qualify training mode in the scoop.
'Starts with three shots to qualify training.. these are randomly chosen.
'An additional shot is added to qualify for each successive training round.
'Once qualified, the scoop is lit to start training.



Sub CreateTrainingQualifyMode
    Dim x

    With CreateGlfMode("training_qualify", 513)
        .StartEvents = Array("new_ball_started","stop_meteor_wave","stop_training","wizard_mode_ended")
        .StopEvents = Array("stop_training_qualify","mode_base_stopping","start_training","wizard_mode_started") ',"start_meteor_wave"


        With .EventPlayer()
            'Restart qualification round
            .Add "mode_training_qualify_started{current_player.num_training_shots_hit == current_player.num_training_shots}", Array("restart_qualify_training")
            .Add "mode_training_qualify_started{current_player.training_just_finished == 1}", Array("restart_qualify_training")
            .Add "restart_qualify_training{current_player.training_total_achieved < 6}", Array("create_training_shots")
            .Add "restart_qualify_training{current_player.training_total_achieved == 3}", Array("activate_nuke")
            .Add "timer_training_shot_add_tick", Array("add_training_shot")
            'Successful qualification hits
            .Add MainShotNames(0)&"_hit{current_player.shot_training_shot1 == 1}", Array(MainShotNames(0)&"_training_off","training_shot_hit")
            .Add MainShotNames(1)&"_hit{current_player.shot_training_shot2 == 1}", Array(MainShotNames(1)&"_training_off","training_shot_hit")
            .Add MainShotNames(2)&"_hit{current_player.shot_training_shot3 == 1}", Array(MainShotNames(2)&"_training_off","training_shot_hit")
            .Add MainShotNames(3)&"_hit{current_player.shot_training_shot4 == 1}", Array(MainShotNames(3)&"_training_off","training_shot_hit")
            .Add MainShotNames(4)&"_hit{current_player.shot_training_shot5 == 1}", Array(MainShotNames(4)&"_training_off","training_shot_hit")
            .Add MainShotNames(5)&"_hit{current_player.shot_training_shot6 == 1}", Array(MainShotNames(5)&"_training_off","training_shot_hit")
            .Add MainShotNames(6)&"_hit{current_player.shot_training_shot7 == 1}", Array(MainShotNames(6)&"_training_off","training_shot_hit")
            .Add MainShotNames(7)&"_hit{current_player.shot_training_shot8 == 1}", Array(MainShotNames(7)&"_training_off","training_shot_hit")
            'Handle a successful hit
            .Add "training_shot_hit", Array("check_training_qualify","score_70000")
            .Add "check_training_qualify{current_player.num_training_shots_hit == current_player.num_training_shots}", Array("training_shots_completed","play_voc_Training","training_flash")
            'Start the training selection
            .Add "s_Scoop_active{current_player.shot_training_ready == 1 && current_player.wizard_mode_is_ready==0 && current_player.flippers_are_dead==0}", Array("enable_scoop_hold")
            .Add "check_training{current_player.shot_training_ready==1 && current_player.flippers_are_dead==0}", Array("start_training_select")
            'Handle mystery and skillshot awards
            .Add "mystery_trainer_ready", Array("clear_training_shots","training_shots_completed")
            .Add "ss_trainer_ready{current_player.shot_training_ready == 0}", Array("clear_training_shots","training_shots_completed")
            .Add "training_shots_completed", Array("score_200000")
        End With

        With .RandomEventPlayer()
            With .EventName("add_training_shot")
                .Add MainShotNames(0)&"_training_on{current_player.shot_training_shot1 == 0}", 1
                .Add MainShotNames(1)&"_training_on{current_player.shot_training_shot2 == 0}", 1
                .Add MainShotNames(2)&"_training_on{current_player.shot_training_shot3 == 0}", 1
                .Add MainShotNames(3)&"_training_on{current_player.shot_training_shot4 == 0}", 1
                .Add MainShotNames(4)&"_training_on{current_player.shot_training_shot5 == 0}", 1
                .Add MainShotNames(5)&"_training_on{current_player.shot_training_shot6 == 0}", 1
                .Add MainShotNames(6)&"_training_on{current_player.shot_training_shot7 == 0}", 1
                .Add MainShotNames(7)&"_training_on{current_player.shot_training_shot8 == 0}", 1
                .ForceAll = False
                .ForceDifferent = False
            End With
            With .EventName("training_shot_hit")
                .Add "play_sfx_LS1", 1
                .Add "play_sfx_LS2", 1
                .Add "play_sfx_LS3", 1
                .Add "play_sfx_LS4", 1
                .Add "play_sfx_LS5", 1
                .Add "play_sfx_LS6", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
        End With

        With .SoundPlayer()
            With .EventName("play_voc_Training")
                .Key = "key_voc_Training"
                .Sound = "voc_Training"
            End With
        End With


        'Define our shots
        For x = 1 to 8
            With .Shots("training_shot"&x)
                .Profile = "training_profile"
                With .Tokens()
                    .Add "lights", MainShotLightNames(x-1)
                    .Add "color", TrainingColor
                End With
                With .ControlEvents()
                    .Events = Array(MainShotNames(x-1)&"_training_on")
                    .State = 1
                End With
                .RestartEvents = Array(MainShotNames(x-1)&"_training_off","clear_training_shots")
            End With
        Next

        'Training Ready
        With .Shots("training_ready")
            .Profile = "qualified_shot"
            With .Tokens()
                .Add "lights", "LX"
                .Add "color", TrainingColor
            End With
            With .ControlEvents()
                .Events = Array("training_shots_completed")
                .State = 1
            End With
            .RestartEvents = Array("restart_qualify_training")
            .DisableEvents = Array("start_training_select")
            .EnableEvents = Array("mode_training_qualify_started")
        End With


        With .ShotProfiles("training_profile")
            With .States("unlit")
                .Show = "off"
                .Key = "key_training_off"
            End With
            With .States("on")
                .Show = "led_color"
                .Key = "key_training_on"
            End With
        End With


        With .Timers("training_shot_add")
            .TickInterval = 60
            .StartValue = "current_player.num_training_shots"
            .Direction = "down"
            .EndValue = 0
            With .ControlEvents()
                .EventName = "restart_qualify_training"
                .Action = "jump"
                .Value = "current_player.num_training_shots"
            End With
            With .ControlEvents()
                .EventName = "create_training_shots"
                .Action = "restart"
            End With
        End With

        With .VariablePlayer()
        With .EventName("training_shots_completed{current_player.num_training_shots < 8}")
        With .Variable("num_training_shots")
                    .Action = "add"
          .Int = 1
        End With
      End With
            With .EventName("training_shot_hit")
        With .Variable("num_training_shots_hit")
                    .Action = "add"
          .Int = 1
        End With
      End With
            With .EventName("restart_qualify_training")
        With .Variable("num_training_shots_hit")
                    .Action = "set"
          .Int = 0
        End With
                With .Variable("training_just_finished")
                    .Action = "set"
          .Int = 0
        End With
      End With
    End With

        With .ShowPlayer()
            With .EventName("training_flash")
                .Key = "key_loaded_wiz_ready"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 4
                With .Tokens()
                    .Add "lights", "tFlasherU"
                    .Add "color", TrainingColor
                End With
            End With
        End With

        With .DOFPlayer()
            With .EventName("training_flash")
                .Action = "DOF_PULSE"
                .DOFEvent = 122
            End With
        End With

        With .SegmentDisplayPlayer()
            With .EventName("training_shots_completed")
                With .Display("player2")
                    .Text = """START"""
                    .Flashing = "all"
                    .Expire = 2000
                End With
                With .Display("player3")
                    .Text = """TRAINER"""
                    .Flashing = "all"
                    .Expire = 2000
                End With
            End With
        End With


    End With

End Sub


'Training Select Mode.

'First, select a training using flipper buttons. Start training with either magna, or it will autoselect after 10 seconds (hurry up flashing for last 3 sec)
'The following training missions are available: heal, cluster bomb, proton cannon, moon missile qualify, ship save, shields
'Once training mission starts, the associated shots will slow flash until you hit them to make them lit solid.
'Any shots that have been completed in previous training will be lit solid.
'Once all are lit solid, the training objective achieved and award collected.
'Award (except for heal training): only one hit required to collect associated power-up
'Heal award: the bumper diverter will remain up the rest of the game
'There is a time limit during training missions (45 seconds). If objective is not achieved in time, then award not given. But progress is saved for next training round.



Sub CreateTrainingSelectMode
    Dim x

    With CreateGlfMode("training_select",600)
        .StartEvents = Array("start_training_select")
        .StopEvents = Array("mode_base_stopping","stop_training_select")
        '.Debug = True


        With .EventPlayer()
            '.Debug = True
            .Add "mode_training_select_started", Array("enable_scoop_hold")
            'navigate selections
            .Add "s_left_flipper_active", Array("training_select_left")
            .Add "s_right_flipper_active", Array("training_select_right")
            'make selection
            .Add "s_left_magna_key_active", Array("make_selection")
            .Add "s_right_magna_key_active", Array("make_selection")
            .Add "s_lockbar_key_active", Array("make_selection")
            .Add "timer_training_select_complete", Array("make_selection")
            .Add "make_selection", Array("release_scoop_hold","start_training")  ',"enable_flippers"
            .Add "release_scoop_hold", Array("disable_scoop_hold")
            'hurry-up
            .Add "timer_training_select_tick{devices.timers.training_select.ticks == 7}", Array("selection_hurry_up")
            '.Add "timer_training_select_tick{devices.timers.training_select.ticks == 13}", Array("flash_ts_scoop_gi")
            'start requested training
            .Add "make_selection{devices.state_machines.training_select.state==""heal""}", Array("start_training_heal","stopping_training_select")
            .Add "make_selection{devices.state_machines.training_select.state==""cluster_bomb""}", Array("start_training_cluster_bomb","stopping_training_select")
            .Add "make_selection{devices.state_machines.training_select.state==""proton_cannon""}", Array("start_training_proton_cannon","stopping_training_select")
            .Add "make_selection{devices.state_machines.training_select.state==""moon_missile""}", Array("start_training_moon_missile","stopping_training_select")
            .Add "make_selection{devices.state_machines.training_select.state==""ship_save""}", Array("start_training_ship_save","stopping_training_select")
            .Add "make_selection{devices.state_machines.training_select.state==""shields""}", Array("start_training_shields","stopping_training_select")
            .Add "make_selection{devices.state_machines.training_select.state==""skip""}", Array("stop_training_select","stop_training")
            .Add "stopping_training_select", Array("training_music_start","meteor_wave_music_stop","stop_training_select")
            'Handle moon ramp
            .Add "balldevice_moon_lock_ball_enter{devices.ball_devices.moon_lock.balls > current_player.multiball_lock_moon_launch_balls_locked}", Array("delayed_release_moon_ball")
        End With

        With .RandomEventPlayer()
            With .EventName("training_music_start")
                .Add "training_music_1_start", 1
                .Add "training_music_2_start", 1
                .Add "training_music_3_start", 1
                .Add "training_music_4_start", 1
                .Add "training_music_5_start", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
        End With

        With .SoundPlayer()
            With .EventName("mode_training_select_started")
                .Key = "key_voc_select_option"
                .Sound = "voc_select_option"
            End With
        End With


        With .VariablePlayer()
            With .EventName("mode_training_select_started")
        With .Variable("ts_hurry_up")
                    .Action = "set"
          .Int = 0
        End With
                With .Variable("ts_last_move")
                    .Action = "set"
          .String = """right"""
        End With
      End With
        With .EventName("selection_hurry_up")
        With .Variable("ts_hurry_up")
                    .Action = "set"
          .Int = 1
        End With
      End With
            With .EventName("training_select_left")
        With .Variable("ts_last_move")
                    .Action = "set"
          .String = """left"""
        End With
      End With
            With .EventName("training_select_right")
        With .Variable("ts_last_move")
                    .Action = "set"
          .String = """right"""
        End With
      End With
        End With

        'GI fade show
        With .ShowPlayer()
            With .EventName("mode_training_select_started")
                .Key = "key_ts_gi"
                .Show = "flash_color_with_fade"
                .Speed = 2
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "fade", 900
                    .Add "color", GIColor3000k
                End With
            End With
            With .EventName("skip_selected")
                .Key = "key_skip_gi"
                .Show = "flash_color"
                .Speed = 11
                .Priority = 100
                With .Tokens()
                    .Add "lights", "gi22"
                    .Add "color", GIColorWhite
                End With
            End With
            With .EventName("skip_unselected")
                .Key = "key_skip_gi"
                .Show = "flash_color"
                .Speed = 13
                .Action = "stop"
                With .Tokens()
                    .Add "lights", "gi22"
                    .Add "color", GIColorWhite
                End With
            End With
        End With


        'Show the shots that have been already completed
        For x = 1 to 9
            With .Shots("training_select_health"&x)
                '.Debug = True
                .Profile = "training_select"
                With .Tokens()
                    .Add "lights", "LH"&x
                    .Add "color", HealthColor1
                End With
            End With
        Next
        For x = 1 to 3
            With .Shots("training_select_cluster_charge"&x)
                '.Debug = True
                .Profile = "training_select"
                With .Tokens()
                    .Add "lights", "LCC"&x
                    .Add "color", ClusterBombColor
                End With
            End With
        Next
        For x = 1 to 3
            With .Shots("training_select_proton_charge"&x)
                '.Debug = True
                .Profile = "training_select"
                With .Tokens()
                    .Add "lights", "LPC"&x
                    .Add "color", ProtonColor
                End With
            End With
        Next
        For x = 1 to 4
            With .Shots("training_select_moon_lane"&x)
                '.Debug = True
                .Profile = "training_select"
                With .Tokens()
                    .Add "lights", MoonQualifyLightNames(x-1)
                    .Add "color", MoonColor
                End With
            End With
        Next
        For x = 1 to 3
            With .Shots("training_select_ship_charge"&x)
                '.Debug = True
                .Profile = "training_select"
                With .Tokens()
                    .Add "lights", "LF"&x
                    .Add "color", ShipSaveColor
                End With
            End With
        Next
        For x = 1 to 3
            With .Shots("training_select_shield_charge"&x)
                '.Debug = True
                .Profile = "training_select"
                With .Tokens()
                    .Add "lights", "LSC"&x
                    .Add "color", ShieldsColor
                End With
            End With
        Next


        'Selection shots
        For x = 0 to 5
            With .Shots("select_"&TrainingSelectionNames(x))
                '.Debug = True
                .Profile = "training_select"
                With .Tokens()
                    .Add "lights", TrainingSelectionLightNames(x)
                    .Add "color", TrainingColors(x)
                End With
                With .ControlEvents()
                    .Events = Array(TrainingSelectionNames(x)&"_selected{current_player.ts_hurry_up==0}")
                    .State = 1
                End With
                With .ControlEvents()
                    .Events = Array(TrainingSelectionNames(x)&"_selected{current_player.ts_hurry_up==1}", _
                                    "selection_hurry_up{devices.state_machines.training_select.state=="""&TrainingSelectionNames(x)&"""}")
                    .State = 2
                End With
                .RestartEvents = Array(TrainingSelectionNames(x)&"_unselected","make_selection")
            End With
        Next


        With .ShotProfiles("training_select")
            With .States("unlit")
                .Show = "off"
                .Key = "key_ts_unlit"
            End With
            With .States("ready1")
                .Show = "flash_color_with_fade"
                .Speed = 3
                .Priority = 10
                .Key = "key_ts_ready1"
                With .Tokens()
                    .Add "fade", 200
                End With
            End With
            With .States("ready2")
                .Show = "flash_color_with_fade"
                .Speed = 8
                .Priority = 20
                .Key = "key_ts_ready2"
                With .Tokens()
                    .Add "fade", 200
                End With
            End With
            With .States("on")
                .Show = "led_color"
                .Priority = 30
                .Key = "key_ts_on"
            End With
        End With

        'Selection timer
        With .Timers("training_select")
            '.Debug = True
            .TickInterval = 1000
            .StartValue = 0
            .EndValue = 10
            With .ControlEvents()
                .EventName = "mode_training_select_started"
                .Action = "restart"
            End With
        End With

        'Selection state machines
        With .StateMachines("training_select")
            '.Debug = True
            .PersistState = False
            .StartingState = "heal"

            'States
            With .States("heal")
                .Label = "Select Heal State"
                .EventsWhenStarted = Array("heal_selected", _
                                           "training_select_left{current_player.ts_last_move==""left"" && current_player.training_heal_achieved==1}", _
                                           "training_select_right{current_player.ts_last_move==""right"" && current_player.training_heal_achieved==1}")
            End With
            With .States("cluster_bomb")
                .Label = "Select Cluster Bomb State"
                .EventsWhenStarted = Array("cluster_bomb_selected", _
                                           "training_select_left{current_player.ts_last_move==""left"" && current_player.training_cluster_bomb_achieved==1}", _
                                           "training_select_right{current_player.ts_last_move==""right"" && current_player.training_cluster_bomb_achieved==1}")
            End With
            With .States("proton_cannon")
                .Label = "Select Proton Cannon State"
                .EventsWhenStarted = Array("proton_cannon_selected", _
                                           "training_select_left{current_player.ts_last_move==""left"" && current_player.training_proton_cannon_achieved==1}", _
                                           "training_select_right{current_player.ts_last_move==""right"" && current_player.training_proton_cannon_achieved==1}")
            End With
            With .States("moon_missile")
                .Label = "Select Moon Missile State"
                .EventsWhenStarted = Array("moon_missile_selected", _
                                           "training_select_left{current_player.ts_last_move==""left"" && current_player.training_moon_missile_achieved==1}", _
                                           "training_select_right{current_player.ts_last_move==""right"" && current_player.training_moon_missile_achieved==1}")
            End With
            With .States("ship_save")
                .Label = "Select Ship Save State"
                .EventsWhenStarted = Array("ship_save_selected", _
                                           "training_select_left{current_player.ts_last_move==""left"" && current_player.training_ship_save_achieved==1}", _
                                           "training_select_right{current_player.ts_last_move==""right"" && current_player.training_ship_save_achieved==1}")
            End With
            With .States("shields")
                .Label = "Select Shields State"
                .EventsWhenStarted = Array("shields_selected", _
                                           "training_select_left{current_player.ts_last_move==""left"" && current_player.training_shields_achieved==1}", _
                                           "training_select_right{current_player.ts_last_move==""right"" && current_player.training_shields_achieved==1}")
            End With
            With .States("skip")
                .Label = "Skip State"
                .EventsWhenStarted = Array("skip_selected")
            End With

            'Transitions, move selection right
            With .Transitions()
                .Source = Array("heal")
                .Target = "cluster_bomb"
                .Events = Array("training_select_right")
                .EventsWhenTransitioning = Array("heal_unselected")
            End With
            With .Transitions()
                .Source = Array("cluster_bomb")
                .Target = "proton_cannon"
                .Events = Array("training_select_right")
                .EventsWhenTransitioning = Array("cluster_bomb_unselected")
            End With
            With .Transitions()
                .Source = Array("proton_cannon")
                .Target = "ship_save"
                .Events = Array("training_select_right")
                .EventsWhenTransitioning = Array("proton_cannon_unselected")
            End With
            With .Transitions()
                .Source = Array("ship_save")
                .Target = "shields"
                .Events = Array("training_select_right")
                .EventsWhenTransitioning = Array("ship_save_unselected")
            End With
            With .Transitions()
                .Source = Array("shields")
                .Target = "moon_missile"
                .Events = Array("training_select_right")
                .EventsWhenTransitioning = Array("shields_unselected")
            End With
            With .Transitions()
                .Source = Array("moon_missile")
                .Target = "skip"
                .Events = Array("training_select_right")
                .EventsWhenTransitioning = Array("moon_missile_unselected")
            End With
            With .Transitions()
                .Source = Array("skip")
                .Target = "heal"
                .Events = Array("training_select_right")
                .EventsWhenTransitioning = Array("skip_unselected")
            End With

            'Transitions, move selection left
            With .Transitions()
                .Source = Array("heal")
                .Target = "skip"
                .Events = Array("training_select_left")
                .EventsWhenTransitioning = Array("heal_unselected")
            End With
            With .Transitions()
                .Source = Array("cluster_bomb")
                .Target = "heal"
                .Events = Array("training_select_left")
                .EventsWhenTransitioning = Array("cluster_bomb_unselected")
            End With
            With .Transitions()
                .Source = Array("proton_cannon")
                .Target = "cluster_bomb"
                .Events = Array("training_select_left")
                .EventsWhenTransitioning = Array("proton_cannon_unselected")
            End With
            With .Transitions()
                .Source = Array("ship_save")
                .Target = "proton_cannon"
                .Events = Array("training_select_left")
                .EventsWhenTransitioning = Array("ship_save_unselected")
            End With
            With .Transitions()
                .Source = Array("shields")
                .Target = "ship_save"
                .Events = Array("training_select_left")
                .EventsWhenTransitioning = Array("shields_unselected")
            End With
            With .Transitions()
                .Source = Array("moon_missile")
                .Target = "shields"
                .Events = Array("training_select_left")
                .EventsWhenTransitioning = Array("moon_missile_unselected")
            End With
            With .Transitions()
                .Source = Array("skip")
                .Target = "moon_missile"
                .Events = Array("training_select_left")
                .EventsWhenTransitioning = Array("skip_unselected")
            End With
        End With

        With .SegmentDisplayPlayer()
            With .EventName("mode_training_select_started")
                With .Display("player1")
                    .Text = """"""
                End With
                With .Display("player2")
                    .Text = """SELECT"""
                End With
                With .Display("player4")
                    .Text = """"""
                End With
            End With
            With .EventName("heal_selected{current_player.training_heal_achieved==0}")
                With .Display("player3")
                    .Text = """HEAL """
                End With
            End With
            With .EventName("cluster_bomb_selected{current_player.training_cluster_bomb_achieved==0}")
                With .Display("player3")
                    .Text = """CLUSTER"""
                End With
            End With
            With .EventName("proton_cannon_selected{current_player.training_proton_cannon_achieved==0}")
                With .Display("player3")
                    .Text = """PROTON"""
                End With
            End With
            With .EventName("moon_missile_selected{current_player.training_moon_missile_achieved==0}")
                With .Display("player3")
                    .Text = """MOON """
                End With
            End With
            With .EventName("ship_save_selected{current_player.training_ship_save_achieved==0}")
                With .Display("player3")
                    .Text = """SAVER """
                End With
            End With
            With .EventName("shields_selected{current_player.training_shields_achieved==0}")
                With .Display("player3")
                    .Text = """SHIELDS"""
                End With
            End With
            With .EventName("skip_selected")
                With .Display("player3")
                    .Text = """SKIP """
                End With
            End With
        End With


    End With

End Sub


'Training Shields Mode.

'Once training mission starts, the associated shots will slow flash until you hit them to make them lit solid.
'Any shots that have been completed in previous training will be lit solid.
'Once all are lit solid, the training objective achieved and award collected.
'Award: only one hit required to collect associated power-up
'There is a time limit during training missions (60 seconds). If objective is not achieved in time, then award not given. But progress is saved for next training round.



Sub CreateTrainingShieldsMode
    Dim x

    With CreateGlfMode("training_shields",700)
        .StartEvents = Array("start_training_shields")
        .StopEvents = Array("mode_base_stopping","stop_training")
        '.Debug = True

        With .EventPlayer()
            '.Debug = True
            .Add "mode_training_shields_started", Array("init_training","play_lsling_training","play_rsling_training")
            'Stop the training
            .Add "training_shield_group_collected_complete", Array("training_shields_completed","play_sfx_super_jackpot")
            .Add "timer_training_shields_complete", Array("stop_training","training_stopped","play_voc_training_incomplete")
            .Add "training_shields_completed", Array("stop_training","training_stopped")
            'Update the training select shots
            .Add "training_shield_group_hit", Array("update_training_select_shields","flash_gi","play_sfx_LS","score_200000")
            .Add "update_training_select_shields{current_player.shot_training_shield_charge1==0}", Array("update_training_select_shield1a")
            .Add "update_training_select_shields{current_player.shot_training_shield_charge1==1}", Array("update_training_select_shield1b")
            .Add "update_training_select_shields{current_player.shot_training_shield_charge2==0}", Array("update_training_select_shield2a")
            .Add "update_training_select_shields{current_player.shot_training_shield_charge2==1}", Array("update_training_select_shield2b")
            .Add "update_training_select_shields{current_player.shot_training_shield_charge3==0}", Array("update_training_select_shield3a")
            .Add "update_training_select_shields{current_player.shot_training_shield_charge3==1}", Array("update_training_select_shield3b")
            'handle gi flicker shows
            .Add "timer_training_shields_tick", Array("flicker_gi")
            'Handle moon ramp
            .Add "balldevice_moon_lock_ball_enter{devices.ball_devices.moon_lock.balls > current_player.multiball_lock_moon_launch_balls_locked}", Array("delayed_release_moon_ball")
        End With

        With .RandomEventPlayer()
            With .EventName("play_sfx_LS")
                .Add "play_sfx_LS1", 1
                .Add "play_sfx_LS2", 1
                .Add "play_sfx_LS3", 1
                .Add "play_sfx_LS4", 1
                .Add "play_sfx_LS5", 1
                .Add "play_sfx_LS6", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
            With .EventName("flicker_gi")
                .Add "play_flicker_gi01", 1
                .Add "play_flicker_gi02", 1
                .Add "play_flicker_gi03", 1
                .Add "play_flicker_gi04", 1
                .Add "play_flicker_gi05", 1
                .Add "play_flicker_gi06", 1
                .Add "play_flicker_gi07", 1
                .Add "play_flicker_gi08", 1
                .Add "play_flicker_gi09", 1
                .Add "play_flicker_gi10", 1
                .Add "play_flicker_gi11", 1
                .Add "play_flicker_gi12", 1
                .Add "play_flicker_gi13", 1
                .Add "play_flicker_gi14", 1
                .Add "play_flicker_gi15", 1
                .Add "play_flicker_gi16", 1
                .Add "play_flicker_gi17", 1
                .Add "play_flicker_gi18", 1
                .Add "play_flicker_gi19", 1
                .Add "play_flicker_gi20", 1
                .Add "play_flicker_gi21", 1
                .Add "play_flicker_gi22", 1
                .ForceAll = False
                .ForceDifferent = False
            End With
        End With

        With .DOFPlayer()
            With .EventName("play_sfx_LS")
                .Action = "DOF_PULSE"
                .DOFEvent = 126
            End With
        End With

        With .ComboSwitches("cancel_training_sh")
            .Switch1 = "s_left_flipper"
            .Switch2 = "s_right_flipper"
            .HoldTime = TrainingCancelTime
            .EventsWhenBoth = Array("stop_training","play_voc_training_canceled","training_stopped")
        End With

        With .ComboSwitches("cancel_training_warning_sh")
            .Switch1 = "s_left_flipper"
            .Switch2 = "s_right_flipper"
            .HoldTime = TrainingCancelWarningTime
            .EventsWhenBoth = Array("training_cancel_warning")
            .EventsWhenInactive = Array("training_cancel_warning_stop")
        End With


        'Define our shots
        For x = 1 to 3
            With .Shots("training_shield_charge"&x)
                .Switch = "s_TargetShield"&x
                .Profile = "train_shields"
                '.Debug = True
                With .Tokens()
                    .Add "lights", "LSC"&x
                    .Add "color", ShieldsColor
                End With
            End With
        Next

        'Define a shot profile with two states (off/on)
        With .ShotProfiles("train_shields")
            With .States("ready")
                .Show = "flash_color_with_fade"
                .Key = "key_train_s1"
                .Speed = 8
                With .Tokens()
                    .Add "color", ShieldsColor
                    .Add "fade", 400
                End With
            End With
            With .States("collected")
                .Show = "led_color"
                .Key = "key_train_s2"
                With .Tokens()
                    .Add "color", ShieldsColor
                End With
            End With
        End With

        ' Shield qualifying shot group
        With .ShotGroups("training_shield_group")
            '.Debug = True
            .Shots = Array("training_shield_charge1", "training_shield_charge2", "training_shield_charge3")
            .RotateLeftEvents = Array("s_left_flipper_active")
            .RotateRightEvents = Array("s_right_flipper_active")
        End With



        With .VariablePlayer()
            '.Debug = True
            'update the training select shots 1
            With .EventName("update_training_select_shield1a")
        With .Variable("shot_training_select_shield_charge1")
                    .Action = "set"
          .Int = 0
        End With
            End With
            With .EventName("update_training_select_shield1b")
        With .Variable("shot_training_select_shield_charge1")
                    .Action = "set"
          .Int = 3
        End With
            End With
            'update the training select shots 2
            With .EventName("update_training_select_shield2a")
        With .Variable("shot_training_select_shield_charge2")
                    .Action = "set"
          .Int = 0
        End With
            End With
            With .EventName("update_training_select_shield2b")
        With .Variable("shot_training_select_shield_charge2")
                    .Action = "set"
          .Int = 3
        End With
            End With
            'update the training select shots 3
            With .EventName("update_training_select_shield3a")
        With .Variable("shot_training_select_shield_charge3")
                    .Action = "set"
          .Int = 0
        End With
            End With
            With .EventName("update_training_select_shield3b")
        With .Variable("shot_training_select_shield_charge3")
                    .Action = "set"
          .Int = 3
        End With
            End With
            'completed
            With .EventName("training_shields_completed")
        With .Variable("training_shields_achieved")
                    .Action = "set"
          .Int = 1
        End With
                With .Variable("training_total_achieved")
                    .Action = "add"
          .Int = 1
        End With
                With .Variable("training_just_finished")
                    .Action = "set"
          .Int = 1
        End With
            End With
            'training_moon_missile_used
            With .EventName("start_moon_multiball")
                With .Variable("training_moon_missile_used")
                    .Action = "set"
          .Int = 1
        End With
            End With
        End With


        With .ShowPlayer()
            With .EventName("init_training")
                .Key = "key_training_gi"
                .Show = "flicker_color_on_intensity"
                .Speed = 5
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", ShieldsColor
                    .Add "intensity", 10
                End With
            End With
            With .EventName("flash_gi")
                .Key = "key_training_gi"
                .Show = "flicker_color_on_intensity"
                .Speed = 5
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", ShieldsColor
                    .Add "intensity", 10
                End With
            End With
            With .EventName("mode_training_shields_stopping")
                .Key = "key_training_stopping"
                .BlockQueue = True
                .Show = "flicker_color"
                .Speed = 5
                .Loops = 1
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", ShieldsColor
                    .Add "intensity", 10
                End With
            End With

            With .EventName("training_achieved")
                .Key = "key_training_flash"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 4
                With .Tokens()
                    .Add "lights", "tFlasherU"
                    .Add "color", ShieldsColor
                End With
            End With

            'GI flicker
            For x = 1 to 9
                With .EventName("play_flicker_gi0"&x)
                    .Key = "key_flicker_gi0"&x
                    .Show = "flicker2_color_on_intensity"
                    .Speed = 2
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "gi0"&x
                        .Add "color", ShieldsColor
                        .Add "intensity", 10
                    End With
                End With
            Next
            For x = 10 to 22
                With .EventName("play_flicker_gi"&x)
                    .Key = "key_flicker_gi"&x
                    .Show = "flicker2_color_on_intensity"
                    .Speed = 2
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "gi"&x
                        .Add "color", ShieldsColor
                        .Add "intensity", 10
                    End With
                End With
            Next

            'sling domes
            With .EventName("play_lsling_training")
                .Key = "key_lsling_training"
                .Show = "lsling_rotate1_cw"
                .Speed = 0.3
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "intensity", 50
                End With
            End With
            With .EventName("play_rsling_training")
                .Key = "key_rsling_training"
                .Show = "rsling_rotate1_ccw"
                .Speed = 0.3
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "intensity", 50
                End With
            End With

            'bumpers
            For x = 1 to 4
                With .EventName("s_Bumper"&x&"_active")
                    .Key = "key_bumper"&x&"_flash"
                    .Show = "flash_color_with_fade"
                    .Speed = 15
                    .Loops = 1
                    .Priority = 2000
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", "ffffff"
                        .Add "fade", 50
                    End With
                End With
            Next

            'cancel warning
            With .EventName("training_cancel_warning")
                .Key = "key_training_cancel_sh_warning"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 15
                .Priority = 100
                With .Tokens()
                    .Add "lights", "tInlaneGI"
                    .Add "color", TrainingColor
                End With
            End With
            With .EventName("training_cancel_warning_stop")
                .Key = "key_training_cancel_sh_warning"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 15
                .Priority = 100
                .Action = "stop"
                With .Tokens()
                    .Add "lights", "tInlaneGI"
                    .Add "color", TrainingColor
                End With
            End With

        End With

        'Selection timer
        With .Timers("training_shields")
            .Direction = "down"
            .TickInterval = 1000
            .StartValue = TrainingTicks
            .EndValue = 0
            With .ControlEvents()
                .EventName = "init_training"
                .Action = "restart"
            End With
        End With


        'Display
        With .SegmentDisplayPlayer()
            With .EventName("init_training")
                With .Display("player1")
                    .Text = """"""
                    .Expire = 5000
                End With
                With .Display("player2")
                    .Text = """TRAIN """
                    .Expire = 5000
                End With
                With .Display("player3")
                    .Text = """SHIELDS"""
                    .Expire = 5000
                End With
                With .Display("player4")
                    .Text = """"""
                    .Expire = 5000
                End With
                With .Display("pf")
                    .Text = "{devices.timers.training_shields.ticks:0>2}"
                End With
            End With
        End With


    End With

End Sub


'Training Ship Save Mode.

'Once training mission starts, the associated shots will slow flash until you hit them to make them lit solid.
'Any shots that have been completed in previous training will be lit solid.
'Once all are lit solid, the training objective achieved and award collected.
'Award: only one hit required to collect associated power-up
'There is a time limit during training missions (60 seconds). If objective is not achieved in time, then award not given. But progress is saved for next training round.



Sub CreateTrainingShipSaveMode
    Dim x

    With CreateGlfMode("training_ship_save",700)
        .StartEvents = Array("start_training_ship_save")
        .StopEvents = Array("mode_base_stopping","stop_training")
        '.Debug = True


        With .EventPlayer()
            '.Debug = True
            .Add "mode_training_ship_save_started", Array("init_training","play_lsling_training","play_rsling_training")
            'successfull shot
            .Add "right_orbit_hit{current_player.shot_training_ship_charge1 == 0}", Array("light_ship_charge1","flash_gi","play_sfx_LS","score_200000")
            .Add "right_orbit_hit{current_player.shot_training_ship_charge1 == 1 && current_player.shot_training_ship_charge2 == 0}", Array("light_ship_charge2","flash_gi","play_sfx_LS","score_300000")
            .Add "right_orbit_hit{current_player.shot_training_ship_charge2 == 1 && current_player.shot_training_ship_charge3 == 0}", Array("light_ship_charge3","play_sfx_LS","score_500000")
            .Add "light_ship_charge3", Array("training_achieved","play_sfx_super_jackpot")
            'Stop the training
            .Add "training_achieved", Array("stop_training","training_stopped")
            .Add "timer_training_ship_save_complete", Array("stop_training","training_stopped","play_voc_training_incomplete")
            'handle gi flicker shows
            .Add "timer_training_ship_save_tick", Array("flicker_gi")
            'Handle moon ramp
            .Add "balldevice_moon_lock_ball_enter{devices.ball_devices.moon_lock.balls > current_player.multiball_lock_moon_launch_balls_locked}", Array("delayed_release_moon_ball")
        End With

        With .RandomEventPlayer()
            With .EventName("play_sfx_LS")
                .Add "play_sfx_LS1", 1
                .Add "play_sfx_LS2", 1
                .Add "play_sfx_LS3", 1
                .Add "play_sfx_LS4", 1
                .Add "play_sfx_LS5", 1
                .Add "play_sfx_LS6", 1
                .ForceAll = True
                .ForceDifferent = True
            End With
            With .EventName("flicker_gi")
                .Add "play_flicker_gi01", 1
                .Add "play_flicker_gi02", 1
                .Add "play_flicker_gi03", 1
                .Add "play_flicker_gi04", 1
                .Add "play_flicker_gi05", 1
                .Add "play_flicker_gi06", 1
                .Add "play_flicker_gi07", 1
                .Add "play_flicker_gi08", 1
                .Add "play_flicker_gi09", 1
                .Add "play_flicker_gi10", 1
                .Add "play_flicker_gi11", 1
                .Add "play_flicker_gi12", 1
                .Add "play_flicker_gi13", 1
                .Add "play_flicker_gi14", 1
                .Add "play_flicker_gi15", 1
                .Add "play_flicker_gi16", 1
                .Add "play_flicker_gi17", 1
                .Add "play_flicker_gi18", 1
                .Add "play_flicker_gi19", 1
                .Add "play_flicker_gi20", 1
                .Add "play_flicker_gi21", 1
                .Add "play_flicker_gi22", 1
                .ForceAll = False
                .ForceDifferent = False
            End With
        End With

        With .DOFPlayer()
            With .EventName("play_sfx_LS")
                .Action = "DOF_PULSE"
                .DOFEvent = 127
            End With
        End With

        With .ComboSwitches("cancel_training_ss")
            .Switch1 = "s_left_flipper"
            .Switch2 = "s_right_flipper"
            .HoldTime = TrainingCancelTime
            .EventsWhenBoth = Array("stop_training","play_voc_training_canceled","training_stopped")
        End With

        With .ComboSwitches("cancel_training_warning_ss")
            .Switch1 = "s_left_flipper"
            .Switch2 = "s_right_flipper"
            .HoldTime = TrainingCancelWarningTime
            .EventsWhenBoth = Array("training_cancel_warning")
            .EventsWhenInactive = Array("training_cancel_warning_stop")
        End With

        'Define our shots
        For x = 1 to 3
            With .Shots("training_ship_charge"&x)
                '.Debug = True
                .Profile = "training_powerups"
                With .Tokens()
                    .Add "lights", "LF"&x
                    .Add "color", ShipSaveColor
                End With
                With .ControlEvents()
                    .Events = Array("light_ship_charge"&x)
                    .State = 1
                End With
                '.RestartEvents = Array("init_training")
            End With
        Next


        With .VariablePlayer()
            '.Debug = True
            With .EventName("light_ship_charge1")
        With .Variable("shot_training_select_ship_charge1")
                    .Action = "set"
          .Int = 3
        End With
            End With
            With .EventName("light_ship_charge2")
        With .Variable("shot_training_select_ship_charge2")
                    .Action = "set"
          .Int = 3
        End With
            End With
            With .EventName("light_ship_charge3")
        With .Variable("shot_training_select_ship_charge3")
                    .Action = "set"
          .Int = 3
        End With
            End With
            With .EventName("training_achieved")
        With .Variable("training_ship_save_achieved")
                    .Action = "set"
          .Int = 1
        End With
                With .Variable("training_total_achieved")
                    .Action = "add"
          .Int = 1
        End With
                With .Variable("training_just_finished")
                    .Action = "set"
          .Int = 1
        End With
            End With
            'training_moon_missile_used
            With .EventName("start_moon_multiball")
                With .Variable("training_moon_missile_used")
                    .Action = "set"
          .Int = 1
        End With
            End With
        End With


        With .ShowPlayer()
            With .EventName("init_training")
                .Key = "key_training_gi"
                .Show = "flicker_color_on_intensity"
                .Speed = 5
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", ShipSaveColor
                    .Add "intensity", 10
                End With
            End With
            With .EventName("flash_gi")
                .Key = "key_training_gi"
                .Show = "flicker_color_on_intensity"
                .Speed = 5
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", ShipSaveColor
                    .Add "intensity", 10
                End With
            End With
            With .EventName("mode_training_ship_save_stopping")
                .Key = "key_training_stopping"
                .BlockQueue = True
                .Show = "flicker_color"
                .Speed = 5
                .Loops = 1
                With .Tokens()
                    .Add "lights", "GI"
                    .Add "color", ShipSaveColor
                    .Add "intensity", 10
                End With
            End With

            With .EventName("training_achieved")
                .Key = "key_training_flash"
                .Show = "flash_color"
                .Speed = 20
                .Loops = 4
                With .Tokens()
                    .Add "lights", "tFlasherU"
                    .Add "color", ShipSaveColor
                End With
            End With

            'GI flicker
            For x = 1 to 9
                With .EventName("play_flicker_gi0"&x)
                    .Key = "key_flicker_gi0"&x
                    .Show = "flicker2_color_on_intensity"
                    .Speed = 2
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "gi0"&x
                        .Add "color", ShipSaveColor
                        .Add "intensity", 10
                    End With
                End With
            Next
            For x = 10 to 22
                With .EventName("play_flicker_gi"&x)
                    .Key = "key_flicker_gi"&x
                    .Show = "flicker2_color_on_intensity"
                    .Speed = 2
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "gi"&x
                        .Add "color", ShipSaveColor
                        .Add "intensity", 10
                    End With
                End With
            Next

            'sling domes
            With .EventName("play_lsling_training")
                .Key = "key_lsling_training"
                .Show = "lsling_rotate1_cw"
                .Speed = 0.3
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "intensity", 50
                End With
            End With
            With .EventName("play_rsling_training")
                .Key = "key_rsling_training"
                .Show = "rsling_rotate1_ccw"
                .Speed = 0.3
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "intensity", 50
                End With
            End With

            'bumpers
            For x = 1 to 4
                With .EventName("s_Bumper"&x&"_active")
                    .Key = "key_bumper"&x&"_flash"
                    .Show = "flash_color_with_fade"
                    .Speed = 15
                    .Loops = 1
                    .Priority = 2000
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", "ffffff"
                        .Add "fade", 50
                    End With
                End With
            Next

            'cancel warning
            With .EventName("training_cancel_warning")
                .Key = "key_training_cancel_ss_warning"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 15
                .Priority = 100
                With .Tokens()
                    .Add "lights", "tInlaneGI"
                    .Add "color", TrainingColor
                End With
            End With
            With .EventName("training_cancel_warning_stop")
                .Key = "key_training_cancel_ss_warning"
                .Show = "flash_color"
                .Speed = 15
                .Loops = 15
                .Priority = 100
                .Action = "stop"
                With .Tokens()
                    .Add "lights", "tInlaneGI"
                    .Add "color", TrainingColor
                End With
            End With

        End With

        'Selection timer
        With .Timers("training_ship_save")
            '.Debug = True
            .Direction = "down"
            .TickInterval = 1000
            .StartValue = TrainingTicks
            .EndValue = 0
            With .ControlEvents()
                .EventName = "init_training"
                .Action = "restart"
            End With
        End With


        'Display
        With .SegmentDisplayPlayer()
            With .EventName("init_training")
                With .Display("player1")
                    .Text = """"""
                    .Expire = 5000
                End With
                With .Display("player2")
                    .Text = """TRAIN """
                    .Expire = 5000
                End With
                With .Display("player3")
                    .Text = """SAVER"""
                    .Expire = 5000
                End With
                With .Display("player4")
                    .Text = """"""
                    .Expire = 5000
                End With
                With .Display("pf")
                    .Text = "{devices.timers.training_ship_save.ticks:0>2}"
                End With
            End With
        End With


    End With

End Sub


'Victory Lap Mode !!!!
' All shots are lit, double scoring, 45 sec ball save, 5 ball mb
' Flippers die after 45 sec. Ball over.
' The mode will restart on next ball (if any are left).



Sub CreateVictoryLapMode
    Dim x,r

    With CreateGlfMode("victory_lap", 9999)
        .StartEvents = Array("asteroid_destroyed","restart_victory")
        .StopEvents = Array("mode_base_stopping")

        With .EventPlayer()
            'victory lap starts before final wve ends... so wait till the final wave is done
            .Add "mode_victory_lap_started", Array("stop_asteroid_motor","set_won_game","meteor_wave_music_stop","turn_off_gi")
            .Add "mode_victory_lap_started{modes.final_wave_wizard.active}", Array("victory_startup_ballsave")
            'starting, restarting, and stopping the victor lap itself
            .Add "ball_launch_hit{current_player.victory_lap_running == 0}", Array("run_victory_lap","enable_flippers")
            .Add "s_Plunger1_active{current_player.victory_lap_running == 0}", Array("init_victory_lap","stop_final_wave_wizard","enable_flippers","deactivate_nuke")
            .Add "multiball_victory_shoot_again_ended", Array("kill_flippers")
            'run stuff during the victory lap
            .Add "run_victory_lap", Array("victory_bumpers_show","play_mus_victory","run_victory_lap_show","play_vic_lsling_show","play_vic_rsling_show")
            'Handle bumper and gi lights
            .Add "timer_victory_bumper_lights_tick", Array("victory_bumpers_show","victory_gi_show1","victory_gi_show2","victory_gi_show3")
            'Handle shots
            .Add "s_TargetMystery1_active", Array("victory_fireworks_show","victory_flashers_show","score_200000")
            .Add "s_TargetMystery2_active", Array("victory_fireworks_show","victory_flashers_show","score_200000")
            .Add "s_TargetMystery3_active", Array("victory_fireworks_show","victory_flashers_show","score_200000")
            .Add "s_TargetMystery4_active", Array("victory_fireworks_show","victory_flashers_show","score_200000")
            .Add "s_TargetMystery5_active", Array("victory_fireworks_show","victory_flashers_show","score_200000")
            .Add MainShotNames(0)&"_hit", Array("victory_fireworks_show","victory_flashers_show","score_200000")
            .Add MainShotNames(1)&"_hit", Array("victory_fireworks_show","victory_flashers_show","score_200000")
            .Add MainShotNames(2)&"_hit", Array("victory_fireworks_show","victory_flashers_show","score_200000")
            .Add MainShotNames(3)&"_hit", Array("victory_fireworks_show","victory_flashers_show","score_200000")
            .Add MainShotNames(4)&"_hit", Array("victory_fireworks_show","victory_flashers_show","score_200000")
            .Add MainShotNames(5)&"_hit", Array("victory_fireworks_show","victory_flashers_show","score_200000")
            .Add MainShotNames(6)&"_hit", Array("victory_fireworks_show","victory_flashers_show","score_200000")
            .Add MainShotNames(7)&"_hit", Array("victory_fireworks_show","victory_flashers_show","score_200000")
            'Handle moon ramp
            .Add "balldevice_moon_lock_ball_enter", Array("delayed_release_moon_ball")
            .Add "ball_search_started", Array("release_moon_ball")
            'Handled mode ending
            .Add "mus_victory_stopped", Array("end_victory_lap")
        End With

        With .QueueRelayPlayer()
            With .EventName(GLF_BALL_ENDING)
                .Post = "awaiting_victory_music_end"
                .WaitFor = "end_victory_lap"
            End With
        End With


        With .RandomEventPlayer()
            With .EventName("victory_bumpers_show")
                .Add "victory_bumper1_show_red", 1
                .Add "victory_bumper2_show_red", 1
                .Add "victory_bumper3_show_red", 1
                '.Add "victory_bumper4_show_red", 1

                .Add "victory_bumper1_show_orange", 1
                .Add "victory_bumper2_show_orange", 1
                .Add "victory_bumper3_show_orange", 1
                '.Add "victory_bumper4_show_orange", 1

                .Add "victory_bumper1_show_yellow", 1
                .Add "victory_bumper2_show_yellow", 1
                .Add "victory_bumper3_show_yellow", 1
                '.Add "victory_bumper4_show_yellow", 1

                .Add "victory_bumper1_show_green", 1
                .Add "victory_bumper2_show_green", 1
                .Add "victory_bumper3_show_green", 1
                '.Add "victory_bumper4_show_green", 1

                .Add "victory_bumper1_show_cyan", 1
                .Add "victory_bumper2_show_cyan", 1
                .Add "victory_bumper3_show_cyan", 1
                '.Add "victory_bumper4_show_cyan", 1

                .Add "victory_bumper1_show_blue", 1
                .Add "victory_bumper2_show_blue", 1
                .Add "victory_bumper3_show_blue", 1
                '.Add "victory_bumper4_show_blue", 1

                .Add "victory_bumper1_show_magenta", 1
                .Add "victory_bumper2_show_magenta", 1
                .Add "victory_bumper3_show_magenta", 1
                '.Add "victory_bumper4_show_magenta", 1

                .Add "victory_bumper1_show_white", 1
                .Add "victory_bumper2_show_white", 1
                .Add "victory_bumper3_show_white", 1
                '.Add "victory_bumper4_show_white", 1

                .ForceAll = False
                .ForceDifferent = False
            End With

            With .EventName("victory_fireworks_show")
                .Add "victory_firework1_show_red", 1
                .Add "victory_firework2_show_red", 1
                .Add "victory_firework3_show_red", 1
                .Add "victory_firework4_show_red", 1

                .Add "victory_firework1_show_orange", 1
                .Add "victory_firework2_show_orange", 1
                .Add "victory_firework3_show_orange", 1
                .Add "victory_firework4_show_orange", 1

                .Add "victory_firework1_show_yellow", 1
                .Add "victory_firework2_show_yellow", 1
                .Add "victory_firework3_show_yellow", 1
                .Add "victory_firework4_show_yellow", 1

                .Add "victory_firework1_show_green", 1
                .Add "victory_firework2_show_green", 1
                .Add "victory_firework3_show_green", 1
                .Add "victory_firework4_show_green", 1

                .Add "victory_firework1_show_cyan", 1
                .Add "victory_firework2_show_cyan", 1
                .Add "victory_firework3_show_cyan", 1
                .Add "victory_firework4_show_cyan", 1

                .Add "victory_firework1_show_blue", 1
                .Add "victory_firework2_show_blue", 1
                .Add "victory_firework3_show_blue", 1
                .Add "victory_firework4_show_blue", 1

                .Add "victory_firework1_show_magenta", 1
                .Add "victory_firework2_show_magenta", 1
                .Add "victory_firework3_show_magenta", 1
                .Add "victory_firework4_show_magenta", 1

                .Add "victory_firework1_show_white", 1
                .Add "victory_firework2_show_white", 1
                .Add "victory_firework3_show_white", 1
                .Add "victory_firework4_show_white", 1

                .ForceAll = False
                .ForceDifferent = False
            End With

            With .EventName("victory_flashers_show")
                .Add "victory_flasher_show_1", 1
                .Add "victory_flasher_show_2", 1
                .Add "victory_flasher_show_3", 1
                .Add "victory_flasher_show_4", 1
                .Add "victory_flasher_show_5", 1
                .Add "victory_flasher_show_6", 1
                .Add "victory_flasher_show_7", 1
                .Add "victory_flasher_show_8", 1
                .ForceAll = False
                .ForceDifferent = False
            End With

            With .EventName("victory_gi_show1")
                .Add "victory_gi01_show1", 1
                .Add "victory_gi02_show1", 1
                .Add "victory_gi03_show1", 1
                .Add "victory_gi04_show1", 1
                .Add "victory_gi05_show1", 1
                .Add "victory_gi06_show1", 1
                .Add "victory_gi07_show1", 1
                .Add "victory_gi08_show1", 1
                .Add "victory_gi09_show1", 1
                .Add "victory_gi10_show1", 1
                .Add "victory_gi11_show1", 1
                .Add "victory_gi12_show1", 1
                .Add "victory_gi13_show1", 1
                .Add "victory_gi14_show1", 1
                .Add "victory_gi15_show1", 1
                .Add "victory_gi16_show1", 1
                .Add "victory_gi17_show1", 1
                .Add "victory_gi18_show1", 1
                .Add "victory_gi19_show1", 1
                .Add "victory_gi20_show1", 1
                .Add "victory_gi21_show1", 1
                .Add "victory_gi22_show1", 1

                .ForceDifferent = False
            End With

            With .EventName("victory_gi_show2")
                .Add "victory_gi01_show2", 1
                .Add "victory_gi02_show2", 1
                .Add "victory_gi03_show2", 1
                .Add "victory_gi04_show2", 1
                .Add "victory_gi05_show2", 1
                .Add "victory_gi06_show2", 1
                .Add "victory_gi07_show2", 1
                .Add "victory_gi08_show2", 1
                .Add "victory_gi09_show2", 1
                .Add "victory_gi10_show2", 1
                .Add "victory_gi11_show2", 1
                .Add "victory_gi12_show2", 1
                .Add "victory_gi13_show2", 1
                .Add "victory_gi14_show2", 1
                .Add "victory_gi15_show2", 1
                .Add "victory_gi16_show2", 1
                .Add "victory_gi17_show2", 1
                .Add "victory_gi18_show2", 1
                .Add "victory_gi19_show2", 1
                .Add "victory_gi20_show2", 1
                .Add "victory_gi21_show2", 1
                .Add "victory_gi22_show2", 1
                .ForceAll = False

                .ForceDifferent = False
            End With

            With .EventName("victory_gi_show3")
                .Add "victory_gi01_show3", 1
                .Add "victory_gi02_show3", 1
                .Add "victory_gi03_show3", 1
                .Add "victory_gi04_show3", 1
                .Add "victory_gi05_show3", 1
                .Add "victory_gi06_show3", 1
                .Add "victory_gi07_show3", 1
                .Add "victory_gi08_show3", 1
                .Add "victory_gi09_show3", 1
                .Add "victory_gi10_show3", 1
                .Add "victory_gi11_show3", 1
                .Add "victory_gi12_show3", 1
                .Add "victory_gi13_show3", 1
                .Add "victory_gi14_show3", 1
                .Add "victory_gi15_show3", 1
                .Add "victory_gi16_show3", 1
                .Add "victory_gi17_show3", 1
                .Add "victory_gi18_show3", 1
                .Add "victory_gi19_show3", 1
                .Add "victory_gi20_show3", 1
                .Add "victory_gi21_show3", 1
                .Add "victory_gi22_show3", 1
                .ForceAll = False
                .ForceDifferent = False
            End With

        End With


        With .DOFPlayer()
            With .EventName("victory_firework1_show_white")
                .Action = "DOF_PULSE"
                .DOFEvent = 160
            End With
            With .EventName("victory_firework1_show_red")
                .Action = "DOF_PULSE"
                .DOFEvent = 161
            End With
            With .EventName("victory_firework1_show_orange")
                .Action = "DOF_PULSE"
                .DOFEvent = 162
            End With
            With .EventName("victory_firework1_show_yellow")
                .Action = "DOF_PULSE"
                .DOFEvent = 163
            End With
            With .EventName("victory_firework1_show_green")
                .Action = "DOF_PULSE"
                .DOFEvent = 164
            End With
            With .EventName("victory_firework1_show_cyan")
                .Action = "DOF_PULSE"
                .DOFEvent = 165
            End With
            With .EventName("victory_firework1_show_blue")
                .Action = "DOF_PULSE"
                .DOFEvent = 166
            End With
            With .EventName("victory_firework1_show_purple")
                .Action = "DOF_PULSE"
                .DOFEvent = 167
            End With
            With .EventName("victory_firework1_show_magenta")
                .Action = "DOF_PULSE"
                .DOFEvent = 168
            End With
        End With


        With .BallSaves("victory_startup")
            .ActiveTime = 13000
            .EnableEvents = Array("victory_startup_ballsave")
            .BallsToSave = 1
            .AutoLaunch = False
        End With


        With .Multiballs("victory")
            .StartEvents = Array("run_victory_lap")
            .DisableEvents = Array("multiball_victory_shoot_again_ended")
            .BallCount = 5
            .BallCountType = "total"
            .ShootAgain = VictoryLapTime*1000
            .HurryUp = 3000
            .GracePeriod = 0
        End With


        With .Shots("victory_shoot_again")
            .Profile = "shoot_again"
            With .Tokens()
                .Add "color", "ffffff"
            End With
            With .ControlEvents()
                .Events = Array("run_victory_lap")
                .State = 1
            End With
            With .ControlEvents()
                .Events = Array("multiball_victory_hurry_up")
                .State = 2
            End With
            .ResetEvents = Array("multiball_victory_shoot_again_ended")
        End With


        ' shots
        For x = 1 to 8
            With .Shots("victory_shot"&x)
                .Profile = "victory_shots"
                With .Tokens()
                    .Add "lights", MainShotLightNames(x-1)
                    .Add "color", "ffffff"
                End With
                With .ControlEvents()
                    .Events = Array("init_victory_lap")
                    .State = 1
                End With
                .RestartEvents = Array("timer_victory_countdown_complete")
            End With
        Next
        For x = 1 to 5
            With .Shots("victory_shot"&x+8)
                .Profile = "victory_shots"
                With .Tokens()
                    .Add "lights", "LM"&x
                    .Add "color", "ffffff"
                End With
                With .ControlEvents()
                    .Events = Array("init_victory_lap")
                    .State = 1
                End With
                .RestartEvents = Array("timer_victory_countdown_complete")
            End With
        Next


        With .ShotProfiles("victory_shots")
            With .States("unlit")
                .Show = "off"
                .Key = "key_vic_off"
            End With
            With .States("ready")
                .Show = "flash_color"
                .Key = "key_vic_on"
                .Speed = 7
                With .Tokens()
                    .Add "color", "ffffff"
                End With
            End With
        End With


        With .VariablePlayer()
        With .EventName("mode_victory_lap_started")
        With .Variable("victory")
                    .Action = "set"
          .Int = 1
        End With
                With .Variable("victory_lap_running")
                    .Action = "set"
          .Int = 0
        End With
            End With
            With .EventName("run_victory_lap")
                With .Variable("victory_lap_running")
                    .Action = "set"
          .Int = 1
        End With
            End With
            With .EventName("set_won_game")
                With .Variable("won_game")
                    .Action = "set_machine"
                    .Int = 1
                End With
            End With
        End With



        With .Timers("victory_countdown")
            .TickInterval = 1000
            .StartValue = VictoryLapTime
            .EndValue = 0
            .Direction = "down"
            With .ControlEvents()
                .EventName = "run_victory_lap"
                .Action = "restart"
            End With
        End With

        With .Timers("victory_bumper_lights")
            .TickInterval = 250
            .StartValue = 0
            .EndValue = 500
            With .ControlEvents()
                .EventName = "run_victory_lap"
                .Action = "restart"
            End With
        End With



        With .SegmentDisplayPlayer()
            With .EventName("init_victory_lap")
                With .Display("player1")
                    .Text = """ YOU """
                    .Flashing = "all"
                End With
                With .Display("player2")
                    .Text = """ SAVED """
                    .Flashing = "all"
                End With
                With .Display("player3")
                    .Text = """US  """
                    .Flashing = "all"
                End With
                With .Display("player4")
                    .Text = """ALL """
                    .Flashing = "all"
                End With
            End With
            With .EventName("run_victory_lap")
                With .Display("player1")
                    .Action = "remove"
                End With
                With .Display("player2")
                    .Action = "remove"
                End With
                With .Display("player3")
                    .Action = "remove"
                End With
                With .Display("player4")
                    .Action = "remove"
                End With

                With .Display("pf")
                    .Text = "{devices.timers.victory_countdown.ticks:0>2}"
                End With
            End With

            With .EventName("timer_victory_countdown_complete")
                With .Display("pf")
                    .Text = """00"""
                    .Priority = 100
                End With
            End With
        End With


        With .SoundPlayer()
            With .EventName("play_mus_victory")
                .Key = "key_mus_victory"
                .Sound = "mus_victory"
            End With
        End With


        With .ShowPlayer()

            ' ' Ball drain blocking show. Should last about 15 to 20 seconds. When this show stops, the game ends the ball.
            ' With .EventName("mode_victory_lap_stopping")
            '     .Key = "key_v_lap_stopping_show"
            '     .BlockQueue = True
            '     .Show = "flash_color"
            '     .Speed = 1
            '     .Loops = 7
            '     With .Tokens()
            '         .Add "lights", "tShip"
            '         .Add "color", "ffffff"
            '     End With
            ' End With

            'Slings
            With .EventName("play_vic_lsling_show")
                .Key = "key_v_lsling_show8"
                .Show = "lsling_rotate4_ccw"
                .Speed = 1
                With .Tokens()
                    .Add "intensity", 50
                    .Add "color1", MoonColor
                    .Add "color2", HealthColor1
                    .Add "color3", ShieldsColor
                    .Add "color4", HealthColor3
                End With
            End With
            With .EventName("play_vic_rsling_show")
                .Key = "key_v_rsling_show8"
                .Show = "rsling_rotate4_cw"
                .Speed = 1
                With .Tokens()
                    .Add "intensity", 50
                    .Add "color1", MoonColor
                    .Add "color2", HealthColor1
                    .Add "color3", ShieldsColor
                    .Add "color4", HealthColor3
                End With
            End With

            'Bumpers
            For x = 1 to 3
                With .EventName("victory_bumper"&x&"_show_red")
                    .Key = "key_v_bumper"&x&"_show_red"
                    .Show = "flash_color_fadeout"
                    .Speed = 10
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", MeteorWaveColor   'red
                    End With
                End With
            Next
            For x = 1 to 3
                With .EventName("victory_bumper"&x&"_show_orange")
                    .Key = "key_v_bumper"&x&"_show_orange"
                    .Show = "flash_color_fadeout"
                    .Speed = 10
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", TrainingColor     'orange
                    End With
                End With
            Next
            For x = 1 to 3
                With .EventName("victory_bumper"&x&"_show_yellow")
                    .Key = "key_v_bumper"&x&"_show_yellow"
                    .Show = "flash_color_fadeout"
                    .Speed = 10
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", MoonColor         'yellow
                    End With
                End With
            Next
            For x = 1 to 3
                With .EventName("victory_bumper"&x&"_show_green")
                    .Key = "key_v_bumper"&x&"_show_green"
                    .Show = "flash_color_fadeout"
                    .Speed = 10
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", HealthColor1      'green
                    End With
                End With
            Next
            For x = 1 to 3
                With .EventName("victory_bumper"&x&"_show_cyan")
                    .Key = "key_v_bumper"&x&"_show_cyan"
                    .Show = "flash_color_fadeout"
                    .Speed = 10
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", ProtonColor       'cyan
                    End With
                End With
            Next
            For x = 1 to 3
                With .EventName("victory_bumper"&x&"_show_blue")
                    .Key = "key_v_bumper"&x&"_show_blue"
                    .Show = "flash_color_fadeout"
                    .Speed = 10
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", ShieldsColor      'blue
                    End With
                End With
            Next
            For x = 1 to 3
                With .EventName("victory_bumper"&x&"_show_magenta")
                    .Key = "key_v_bumper"&x&"_show_magenta"
                    .Show = "flash_color_fadeout"
                    .Speed = 10
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", ClusterBombColor  'magenta
                    End With
                End With
            Next
            For x = 1 to 3
                With .EventName("victory_bumper"&x&"_show_white")
                    .Key = "key_v_bumper"&x&"_show_white"
                    .Show = "flash_color_fadeout"
                    .Speed = 10
                    .Loops = 1
                    With .Tokens()
                        .Add "lights", "LB"&x
                        .Add "color", TimewarpColor 'white
                    End With
                End With
            Next

            'Fireworks
            For x = 1 to 4
                With .EventName("victory_firework"&x&"_show_red")
                    .Key = "key_v_firework"&x&"_show_red"
                    .Show = "meteor"&x&"_explodes"
                    .Speed = 1
            .Loops = 1
                    With .Tokens()
                        .Add "color", MeteorWaveColor
                    End With
                End With
            Next
            For x = 1 to 4
                With .EventName("victory_firework"&x&"_show_orange")
                    .Key = "key_v_firework"&x&"_show_orange"
                    .Show = "meteor"&x&"_explodes"
                    .Speed = 1
            .Loops = 1
                    With .Tokens()
                        .Add "color", TrainingColor
                    End With
                End With
            Next
            For x = 1 to 4
                With .EventName("victory_firework"&x&"_show_yellow")
                    .Key = "key_v_firework"&x&"_show_yellow"
                    .Show = "meteor"&x&"_explodes"
                    .Speed = 1
            .Loops = 1
                    With .Tokens()
                        .Add "color", MoonColor
                    End With
                End With
            Next
            For x = 1 to 4
                With .EventName("victory_firework"&x&"_show_green")
                    .Key = "key_v_firework"&x&"_show_green"
                    .Show = "meteor"&x&"_explodes"
                    .Speed = 1
            .Loops = 1
                    With .Tokens()
                        .Add "color", HealthColor1
                    End With
                End With
            Next
            For x = 1 to 4
                With .EventName("victory_firework"&x&"_show_cyan")
                    .Key = "key_v_firework"&x&"_show_cyan"
                    .Show = "meteor"&x&"_explodes"
                    .Speed = 1
            .Loops = 1
                    With .Tokens()
                        .Add "color", ProtonColor
                    End With
                End With
            Next
            For x = 1 to 4
                With .EventName("victory_firework"&x&"_show_blue")
                    .Key = "key_v_firework"&x&"_show_blue"
                    .Show = "meteor"&x&"_explodes"
                    .Speed = 1
            .Loops = 1
                    With .Tokens()
                        .Add "color", ShieldsColor
                    End With
                End With
            Next
            For x = 1 to 4
                With .EventName("victory_firework"&x&"_show_magenta")
                    .Key = "key_v_firework"&x&"_show_magenta"
                    .Show = "meteor"&x&"_explodes"
                    .Speed = 1
            .Loops = 1
                    With .Tokens()
                        .Add "color", ClusterBombColor
                    End With
                End With
            Next
            For x = 1 to 4
                With .EventName("victory_firework"&x&"_show_white")
                    .Key = "key_v_firework"&x&"_show_white"
                    .Show = "meteor"&x&"_explodes"
                    .Speed = 1
            .Loops = 1
                    With .Tokens()
                        .Add "color", TimewarpColor
                    End With
                End With
            Next

            'Flashers
            For x = 1 to 8
                With .EventName("victory_flasher_show_"&x)
                    .Key = "key_v_flasher_show_"&x
                    .Show = "flash_color"
                    .Speed = 20
                    .Loops = 3
                    With .Tokens()
                        .Add "lights", "tFlasherU"
                        .Add "color", RainbowColors(x-1)
                    End With
                End With
            Next

            'Flashers
            r = 0
            For x = 1 to 9
                With .EventName("victory_gi0"&x&"_show1")
                    .Key = "key_v_gi0"&x&"_show1"
                    .Show = "flash_color_fadeout"
                    .Speed = 5
                    .Loops = 1
                    .Priority = 1000
                    With .Tokens()
                        .Add "lights", "gi0"&x
                        .Add "color", RainbowColors(r)
                    End With
                End With
                r = r + 1
                if r > 7 then r = 0
            Next
            For x = 10 to 22
                With .EventName("victory_gi"&x&"_show1")
                    .Key = "key_v_gi"&x&"_show1"
                    .Show = "flash_color_fadeout"
                    .Speed = 5
                    .Loops = 1
                    .Priority = 1000
                    With .Tokens()
                        .Add "lights", "gi"&x
                        .Add "color", RainbowColors(r)
                    End With
                End With
                r = r + 1
                if r > 7 then r = 0
            Next

            r = 3
            For x = 1 to 9
                With .EventName("victory_gi0"&x&"_show2")
                    .Key = "key_v_gi0"&x&"_show2"
                    .Show = "flash_color_fadeout"
                    .Speed = 5
                    .Loops = 1
                    .Priority = 1000
                    With .Tokens()
                        .Add "lights", "gi0"&x
                        .Add "color", RainbowColors(r)
                    End With
                End With
                r = r + 1
                if r > 7 then r = 0
            Next
            For x = 10 to 22
                With .EventName("victory_gi"&x&"_show2")
                    .Key = "key_v_gi"&x&"_show2"
                    .Show = "flash_color_fadeout"
                    .Speed = 5
                    .Loops = 1
                    .Priority = 1000
                    With .Tokens()
                        .Add "lights", "gi"&x
                        .Add "color", RainbowColors(r)
                    End With
                End With
                r = r + 1
                if r > 7 then r = 0
            Next

            r = 5
            For x = 1 to 9
                With .EventName("victory_gi0"&x&"_show3")
                    .Key = "key_v_gi0"&x&"_show3"
                    .Show = "flash_color_fadeout"
                    .Speed = 5
                    .Loops = 1
                    .Priority = 1000
                    With .Tokens()
                        .Add "lights", "gi0"&x
                        .Add "color", RainbowColors(r)
                    End With
                End With
                r = r + 1
                if r > 7 then r = 0
            Next
            For x = 10 to 22
                With .EventName("victory_gi"&x&"_show3")
                    .Key = "key_v_gi"&x&"_show3"
                    .Show = "flash_color_fadeout"
                    .Speed = 5
                    .Loops = 1
                    .Priority = 1000
                    With .Tokens()
                        .Add "lights", "gi"&x
                        .Add "color", RainbowColors(r)
                    End With
                End With
                r = r + 1
                if r > 7 then r = 0
            Next


        End With

    End With
End Sub


'Attract Shows

Sub CreateAttractShows()

With CreateGlfShow("insert_sparkles")
  With .AddStep(0.00000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|50a2e6", _
      "LX|(intensity)|020406", _
      "LS5|(intensity)|080f16", _
      "LS1|(intensity)|346b98", _
      "LS2|(intensity)|070e14", _
      "LS3|(intensity)|4894d2", _
      "LS4|(intensity)|000101", _
      "LS6|(intensity)|264e6e", _
      "LSwC3|(intensity)|50a3e7", _
      "LSwC2|(intensity)|4c9bdc", _
      "LSwC1|(intensity)|000000", _
      "LCWiz|(intensity)|264e6f", _
      "LLWiz|(intensity)|000101", _
      "LC1|(intensity)|030609", _
      "LC2|(intensity)|183045", _
      "LC3|(intensity)|4082b8", _
      "LC4|(intensity)|010203", _
      "LC5|(intensity)|50a3e8", _
      "LC6|(intensity)|000000", _
      "LC7|(intensity)|50a3e8", _
      "LC8|(intensity)|000000", _
      "LWiz|(intensity)|4c9bdc", _
      "LW9|(intensity)|4185bd", _
      "LW8|(intensity)|4186be", _
      "LW7|(intensity)|4185bd", _
      "LW6|(intensity)|4286be", _
      "LW5|(intensity)|4185bd", _
      "LW4|(intensity)|4185bd", _
      "LW3|(intensity)|224664", _
      "LW2|(intensity)|04090d", _
      "LW1|(intensity)|4185bd", _
      "LMLR|(intensity)|4fa1e4", _
      "LEBR|(intensity)|295477", _
      "LMR|(intensity)|4389c2", _
      "LPC5|(intensity)|000102", _
      "LPC4|(intensity)|4fa1e5", _
      "LSC3|(intensity)|091219", _
      "LSC2|(intensity)|081118", _
      "LSC1|(intensity)|448bc5", _
      "LF3|(intensity)|4fa2e5", _
      "LF2|(intensity)|060c10", _
      "LF1|(intensity)|020405", _
      "LPC3|(intensity)|000000", _
      "LPC2|(intensity)|020405", _
      "LPC1|(intensity)|0b1721", _
      "LTW2|(intensity)|4ea0e2", _
      "LTW1|(intensity)|448ac4", _
      "LCC3|(intensity)|50a3e8", _
      "LCC2|(intensity)|3c7aad", _
      "LCC1|(intensity)|50a3e7", _
      "LMet4|(intensity)|2c597f", _
      "LMet3|(intensity)|000000", _
      "LMet2|(intensity)|3f81b7", _
      "LMet1|(intensity)|50a3e8", _
      "LM5|(intensity)|1d3b54", _
      "LM4|(intensity)|285274", _
      "LM3|(intensity)|3872a2", _
      "LM2|(intensity)|000101", _
      "LM1|(intensity)|010203", _
      "LSA|(intensity)|2d5c83", _
      "LH9|(intensity)|50a3e8", _
      "LH8|(intensity)|14293a", _
      "LH7|(intensity)|1f3f59", _
      "LH6|(intensity)|50a3e8", _
      "LH5|(intensity)|000000", _
      "LH4|(intensity)|50a3e8", _
      "LH3|(intensity)|000000", _
      "LH2|(intensity)|50a3e8", _
      "LH1|(intensity)|000000", _
      "LPR1|(intensity)|50a2e6", _
      "LPR3|(intensity)|3a76a8", _
      "LPR2|(intensity)|2b577b", _
      "LPR6|(intensity)|50a3e8", _
      "LPR5|(intensity)|000102", _
      "LPR4|(intensity)|000000", _
      "LMR2|(intensity)|000101", _
      "LMR1|(intensity)|244a69", _
      "LCR2|(intensity)|50a3e8", _
      "LCR1|(intensity)|2c597e", _
      "LRI|(intensity)|081017", _
      "LRO|(intensity)|244a69", _
      "LLI|(intensity)|000000", _
      "LLO|(intensity)|112331", _
      "LSR|(intensity)|4894d1", _
      "LSL|(intensity)|50a3e8" _
      )
  End With
  With .AddStep(0.03333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|50a3e7", _
      "LX|(intensity)|010203", _
      "LS5|(intensity)|0b161f", _
      "LS1|(intensity)|2e5d85", _
      "LS2|(intensity)|04090c", _
      "LS3|(intensity)|4b99d9", _
      "LS4|(intensity)|000001", _
      "LS6|(intensity)|2c5a80", _
      "LSwC2|(intensity)|4d9ee0", _
      "LCWiz|(intensity)|1f3f5a", _
      "LLWiz|(intensity)|000000", _
      "LC1|(intensity)|020305", _
      "LC2|(intensity)|1e3d57", _
      "LC3|(intensity)|3a77a9", _
      "LC4|(intensity)|010304", _
      "LWiz|(intensity)|4e9ee1", _
      "LW9|(intensity)|468fcb", _
      "LW8|(intensity)|468fcb", _
      "LW7|(intensity)|468fcb", _
      "LW6|(intensity)|468fcb", _
      "LW5|(intensity)|468fcb", _
      "LW4|(intensity)|468eca", _
      "LW3|(intensity)|1d3b54", _
      "LW2|(intensity)|030508", _
      "LW1|(intensity)|468fcb", _
      "LMLR|(intensity)|4ea0e3", _
      "LEBR|(intensity)|30628b", _
      "LMR|(intensity)|3e7fb5", _
      "LPC5|(intensity)|000101", _
      "LPC4|(intensity)|4ea0e2", _
      "LSC3|(intensity)|060d12", _
      "LSC2|(intensity)|050b10", _
      "LSC1|(intensity)|4792cf", _
      "LF3|(intensity)|4fa1e5", _
      "LF2|(intensity)|091219", _
      "LF1|(intensity)|010102", _
      "LPC2|(intensity)|010203", _
      "LPC1|(intensity)|081118", _
      "LTW2|(intensity)|4d9ddf", _
      "LTW1|(intensity)|4892d0", _
      "LCC2|(intensity)|37709f", _
      "LMet4|(intensity)|336792", _
      "LMet2|(intensity)|448bc5", _
      "LM5|(intensity)|172f42", _
      "LM4|(intensity)|214360", _
      "LM3|(intensity)|37709f", _
      "LM2|(intensity)|010102", _
      "LM1|(intensity)|000102", _
      "LSA|(intensity)|274f70", _
      "LH9|(intensity)|4fa1e5", _
      "LH8|(intensity)|1a354b", _
      "LH7|(intensity)|183246", _
      "LPR1|(intensity)|50a3e7", _
      "LPR3|(intensity)|366e9c", _
      "LPR2|(intensity)|244967", _
      "LPR5|(intensity)|000101", _
      "LMR2|(intensity)|010202", _
      "LMR1|(intensity)|2b577c", _
      "LCR1|(intensity)|254b6b", _
      "LRI|(intensity)|050b10", _
      "LRO|(intensity)|2b587d", _
      "LLO|(intensity)|162d40", _
      "LSR|(intensity)|4b9ada" _
      )
  End With
  With .AddStep(0.06667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|50a3e8", _
      "LX|(intensity)|010202", _
      "LS5|(intensity)|0f1e2a", _
      "LS1|(intensity)|274f70", _
      "LS2|(intensity)|020406", _
      "LS3|(intensity)|4d9dde", _
      "LS4|(intensity)|000000", _
      "LS6|(intensity)|336893", _
      "LSwC2|(intensity)|4fa1e5", _
      "LCWiz|(intensity)|183146", _
      "LC1|(intensity)|010203", _
      "LC2|(intensity)|254c6b", _
      "LC3|(intensity)|346996", _
      "LWiz|(intensity)|4fa1e5", _
      "LW9|(intensity)|4a97d6", _
      "LW8|(intensity)|4a96d5", _
      "LW7|(intensity)|4a97d6", _
      "LW6|(intensity)|4a97d6", _
      "LW5|(intensity)|4a97d6", _
      "LW4|(intensity)|4996d4", _
      "LW3|(intensity)|172f42", _
      "LW2|(intensity)|010203", _
      "LW1|(intensity)|4a97d6", _
      "LMLR|(intensity)|4d9ee0", _
      "LEBR|(intensity)|37709e", _
      "LMR|(intensity)|3872a2", _
      "LPC4|(intensity)|4d9ee0", _
      "LSC3|(intensity)|04080c", _
      "LSC2|(intensity)|03070a", _
      "LSC1|(intensity)|4b99d9", _
      "LF3|(intensity)|4ea0e3", _
      "LF2|(intensity)|0d1a25", _
      "LF1|(intensity)|000101", _
      "LPC2|(intensity)|000101", _
      "LPC1|(intensity)|060c11", _
      "LTW2|(intensity)|4b9ada", _
      "LTW1|(intensity)|4a98d8", _
      "LCC2|(intensity)|326691", _
      "LCC1|(intensity)|50a2e6", _
      "LMet4|(intensity)|3974a5", _
      "LMet2|(intensity)|4893d1", _
      "LM5|(intensity)|112433", _
      "LM4|(intensity)|1a354b", _
      "LM3|(intensity)|346b98", _
      "LM2|(intensity)|010203", _
      "LM1|(intensity)|000000", _
      "LSA|(intensity)|21435f", _
      "LH9|(intensity)|4e9fe1", _
      "LH8|(intensity)|21435f", _
      "LH7|(intensity)|122534", _
      "LPR1|(intensity)|50a3e8", _
      "LPR3|(intensity)|30638c", _
      "LPR2|(intensity)|1d3c55", _
      "LPR5|(intensity)|000000", _
      "LMR2|(intensity)|010203", _
      "LMR1|(intensity)|31648d", _
      "LCR1|(intensity)|1e3d56", _
      "LRI|(intensity)|03070a", _
      "LRO|(intensity)|326792", _
      "LLO|(intensity)|1d3a53", _
      "LSR|(intensity)|4d9ee0" _
      )
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "LX|(intensity)|000102", _
      "LS5|(intensity)|14293b", _
      "LS1|(intensity)|20415c", _
      "LS2|(intensity)|010203", _
      "LS3|(intensity)|4d9ee0", _
      "LS6|(intensity)|3974a5", _
      "LSwC2|(intensity)|50a2e6", _
      "LCWiz|(intensity)|122535", _
      "LC1|(intensity)|010102", _
      "LC2|(intensity)|2c5a7f", _
      "LC3|(intensity)|2d5b82", _
      "LC4|(intensity)|020406", _
      "LWiz|(intensity)|50a2e6", _
      "LW9|(intensity)|4c9bdc", _
      "LW8|(intensity)|4c9adb", _
      "LW7|(intensity)|4c9bdc", _
      "LW6|(intensity)|4c9bdc", _
      "LW5|(intensity)|4c9bdc", _
      "LW4|(intensity)|4b99da", _
      "LW3|(intensity)|122433", _
      "LW2|(intensity)|010102", _
      "LW1|(intensity)|4c9bdc", _
      "LMLR|(intensity)|4b9ada", _
      "LEBR|(intensity)|3c7aad", _
      "LMR|(intensity)|31648e", _
      "LPC5|(intensity)|010203", _
      "LPC4|(intensity)|4c9bdc", _
      "LSC3|(intensity)|020406", _
      "LSC2|(intensity)|020405", _
      "LSC1|(intensity)|4e9fe1", _
      "LF3|(intensity)|4d9dde", _
      "LF2|(intensity)|112433", _
      "LPC1|(intensity)|03070a", _
      "LTW2|(intensity)|4994d2", _
      "LTW1|(intensity)|4c9cdd", _
      "LCC2|(intensity)|2c597e", _
      "LCC1|(intensity)|4fa2e6", _
      "LMet4|(intensity)|3e7fb5", _
      "LMet3|(intensity)|010102", _
      "LMet2|(intensity)|4c9adb", _
      "LM5|(intensity)|0d1a25", _
      "LM4|(intensity)|152a3c", _
      "LM3|(intensity)|2f6089", _
      "LM2|(intensity)|020405", _
      "LSA|(intensity)|1a364c", _
      "LH9|(intensity)|4d9cde", _
      "LH8|(intensity)|285173", _
      "LH7|(intensity)|0d1a25", _
      "LH5|(intensity)|000101", _
      "LPR3|(intensity)|2b577b", _
      "LPR2|(intensity)|183044", _
      "LPR6|(intensity)|50a3e7", _
      "LMR2|(intensity)|020305", _
      "LMR1|(intensity)|356d9b", _
      "LCR1|(intensity)|183145", _
      "LRI|(intensity)|020405", _
      "LRO|(intensity)|3873a3", _
      "LLO|(intensity)|234866", _
      "LSR|(intensity)|4e9fe2" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "LX|(intensity)|000101", _
      "LS5|(intensity)|1a354b", _
      "LS1|(intensity)|193348", _
      "LS2|(intensity)|010102", _
      "LS3|(intensity)|4d9dde", _
      "LS6|(intensity)|3f80b5", _
      "LSwC2|(intensity)|50a3e7", _
      "LSwC1|(intensity)|010202", _
      "LCWiz|(intensity)|0d1b26", _
      "LLWiz|(intensity)|000001", _
      "LC1|(intensity)|000101", _
      "LC2|(intensity)|336894", _
      "LC3|(intensity)|264d6d", _
      "LC4|(intensity)|04090c", _
      "LWiz|(intensity)|50a3e7", _
      "LW9|(intensity)|4e9ee1", _
      "LW8|(intensity)|4d9ee0", _
      "LW7|(intensity)|4e9ee1", _
      "LW6|(intensity)|4e9ee1", _
      "LW5|(intensity)|4e9ee1", _
      "LW4|(intensity)|4c9cde", _
      "LW3|(intensity)|0d1a25", _
      "LW1|(intensity)|4e9ee1", _
      "LMLR|(intensity)|4994d3", _
      "LEBR|(intensity)|4184bb", _
      "LMR|(intensity)|2a5679", _
      "LPC5|(intensity)|030508", _
      "LPC4|(intensity)|4995d3", _
      "LSC3|(intensity)|010304", _
      "LSC2|(intensity)|010203", _
      "LSC1|(intensity)|4fa1e4", _
      "LF3|(intensity)|4b98d8", _
      "LF2|(intensity)|183044", _
      "LPC1|(intensity)|020406", _
      "LTW2|(intensity)|458ec9", _
      "LTW1|(intensity)|4e9fe2", _
      "LCC2|(intensity)|254c6b", _
      "LMet4|(intensity)|4389c3", _
      "LMet3|(intensity)|010203", _
      "LMet2|(intensity)|4d9ddf", _
      "LM5|(intensity)|09131a", _
      "LM4|(intensity)|0f1f2d", _
      "LM3|(intensity)|295478", _
      "LM2|(intensity)|030709", _
      "LSA|(intensity)|142a3b", _
      "LH9|(intensity)|4a98d7", _
      "LH8|(intensity)|2f5f87", _
      "LH7|(intensity)|09131b", _
      "LH5|(intensity)|000000", _
      "LPR3|(intensity)|244968", _
      "LPR2|(intensity)|112332", _
      "LPR6|(intensity)|50a2e6", _
      "LMR2|(intensity)|030609", _
      "LMR1|(intensity)|3873a3", _
      "LCR1|(intensity)|122535", _
      "LRI|(intensity)|010203", _
      "LRO|(intensity)|3d7db2", _
      "LLO|(intensity)|2a567a", _
      "LSR|(intensity)|4fa1e5" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|50a3e7", _
      "LX|(intensity)|000000", _
      "LS5|(intensity)|20415d", _
      "LS1|(intensity)|132636", _
      "LS2|(intensity)|000101", _
      "LS3|(intensity)|4c9bdc", _
      "LS6|(intensity)|4389c3", _
      "LSwC3|(intensity)|50a3e8", _
      "LSwC2|(intensity)|50a3e8", _
      "LSwC1|(intensity)|010304", _
      "LCWiz|(intensity)|09131b", _
      "LLWiz|(intensity)|000000", _
      "LC1|(intensity)|000000", _
      "LC2|(intensity)|3a76a8", _
      "LC3|(intensity)|1f3f5a", _
      "LC4|(intensity)|070e14", _
      "LWiz|(intensity)|50a3e8", _
      "LW9|(intensity)|4fa1e5", _
      "LW8|(intensity)|4fa1e4", _
      "LW7|(intensity)|4fa1e5", _
      "LW6|(intensity)|4fa1e5", _
      "LW5|(intensity)|4fa1e5", _
      "LW4|(intensity)|4d9ddf", _
      "LW3|(intensity)|081118", _
      "LW2|(intensity)|010202", _
      "LW1|(intensity)|4fa1e5", _
      "LMLR|(intensity)|468eca", _
      "LEBR|(intensity)|458dc8", _
      "LMR|(intensity)|224664", _
      "LPC5|(intensity)|04080c", _
      "LPC4|(intensity)|468fcb", _
      "LSC3|(intensity)|010203", _
      "LSC1|(intensity)|4fa1e5", _
      "LF3|(intensity)|4894d1", _
      "LF2|(intensity)|1f3f59", _
      "LPC1|(intensity)|010304", _
      "LTW2|(intensity)|4287bf", _
      "LTW1|(intensity)|4fa1e5", _
      "LCC2|(intensity)|1e3d57", _
      "LMet4|(intensity)|4892cf", _
      "LMet3|(intensity)|010304", _
      "LMet2|(intensity)|4e9fe2", _
      "LM5|(intensity)|060d13", _
      "LM4|(intensity)|0b161f", _
      "LM3|(intensity)|234867", _
      "LM2|(intensity)|060c11", _
      "LSA|(intensity)|0f1f2c", _
      "LH9|(intensity)|4791ce", _
      "LH8|(intensity)|366e9c", _
      "LH7|(intensity)|060d12", _
      "LPR3|(intensity)|1d3c55", _
      "LPR2|(intensity)|0d1a24", _
      "LPR6|(intensity)|4ea0e3", _
      "LPR4|(intensity)|000101", _
      "LMR2|(intensity)|050b0f", _
      "LMR1|(intensity)|3872a2", _
      "LCR1|(intensity)|0e1c27", _
      "LRI|(intensity)|000101", _
      "LRO|(intensity)|4288c0", _
      "LLO|(intensity)|31648d", _
      "LSR|(intensity)|50a3e8" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "LS5|(intensity)|274f70", _
      "LS1|(intensity)|0e1d29", _
      "LS2|(intensity)|000000", _
      "LS3|(intensity)|4b99d9", _
      "LS6|(intensity)|4791cd", _
      "LSwC1|(intensity)|020406", _
      "LCWiz|(intensity)|060c11", _
      "LC1|(intensity)|000001", _
      "LC2|(intensity)|3f80b6", _
      "LC3|(intensity)|183146", _
      "LC4|(intensity)|0a141d", _
      "LC5|(intensity)|50a3e7", _
      "LC6|(intensity)|000101", _
      "LC7|(intensity)|50a3e7", _
      "LW9|(intensity)|50a2e6", _
      "LW8|(intensity)|4fa2e5", _
      "LW7|(intensity)|50a2e6", _
      "LW6|(intensity)|50a2e6", _
      "LW5|(intensity)|50a3e7", _
      "LW4|(intensity)|4d9cde", _
      "LW3|(intensity)|050b10", _
      "LW2|(intensity)|010102", _
      "LW1|(intensity)|50a2e6", _
      "LMLR|(intensity)|4186be", _
      "LEBR|(intensity)|4894d2", _
      "LMR|(intensity)|1d3b53", _
      "LPC5|(intensity)|060d12", _
      "LPC4|(intensity)|4388c2", _
      "LSC3|(intensity)|000101", _
      "LSC2|(intensity)|010102", _
      "LSC1|(intensity)|4fa2e6", _
      "LF3|(intensity)|458cc7", _
      "LF2|(intensity)|264d6d", _
      "LF1|(intensity)|000001", _
      "LPC2|(intensity)|000001", _
      "LPC1|(intensity)|010202", _
      "LTW2|(intensity)|3d7cb0", _
      "LTW1|(intensity)|50a2e6", _
      "LCC2|(intensity)|183247", _
      "LMet4|(intensity)|4a97d6", _
      "LMet3|(intensity)|020507", _
      "LMet2|(intensity)|4fa1e5", _
      "LM5|(intensity)|04090c", _
      "LM4|(intensity)|070e14", _
      "LM3|(intensity)|1d3b54", _
      "LM2|(intensity)|091219", _
      "LSA|(intensity)|0b1721", _
      "LH9|(intensity)|4389c3", _
      "LH8|(intensity)|3b79ab", _
      "LH7|(intensity)|04070b", _
      "LPR1|(intensity)|50a3e7", _
      "LPR3|(intensity)|172f43", _
      "LPR2|(intensity)|09121a", _
      "LPR6|(intensity)|4d9ee0", _
      "LPR5|(intensity)|000101", _
      "LMR2|(intensity)|080f16", _
      "LMR1|(intensity)|37709f", _
      "LCR1|(intensity)|09131b", _
      "LRO|(intensity)|4790cd", _
      "LLO|(intensity)|37709f" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "LS5|(intensity)|2d5c83", _
      "LS1|(intensity)|0a151e", _
      "LS3|(intensity)|4995d4", _
      "LS6|(intensity)|4a97d7", _
      "LSwC1|(intensity)|03070a", _
      "LCWiz|(intensity)|030709", _
      "LC1|(intensity)|000101", _
      "LC2|(intensity)|448ac4", _
      "LC3|(intensity)|122535", _
      "LC4|(intensity)|0f1e2a", _
      "LC5|(intensity)|4fa2e6", _
      "LC6|(intensity)|010304", _
      "LC7|(intensity)|50a3e8", _
      "LC8|(intensity)|000001", _
      "LW9|(intensity)|50a3e7", _
      "LW8|(intensity)|4fa2e6", _
      "LW7|(intensity)|50a3e7", _
      "LW6|(intensity)|4fa2e6", _
      "LW5|(intensity)|50a2e6", _
      "LW4|(intensity)|4b9ada", _
      "LW3|(intensity)|04070b", _
      "LW2|(intensity)|010304", _
      "LW1|(intensity)|50a3e7", _
      "LMLR|(intensity)|3c7aad", _
      "LEBR|(intensity)|4b98d8", _
      "LMR|(intensity)|183145", _
      "LPC5|(intensity)|0a151e", _
      "LPC4|(intensity)|3e7eb3", _
      "LSC2|(intensity)|000101", _
      "LSC1|(intensity)|50a3e7", _
      "LF3|(intensity)|4083ba", _
      "LF2|(intensity)|2c5b81", _
      "LF1|(intensity)|000000", _
      "LPC2|(intensity)|000000", _
      "LPC1|(intensity)|000000", _
      "LTW2|(intensity)|37709f", _
      "LTW1|(intensity)|50a3e7", _
      "LCC2|(intensity)|132737", _
      "LCC1|(intensity)|4fa1e4", _
      "LMet4|(intensity)|4c9bdc", _
      "LMet3|(intensity)|050a0e", _
      "LMet2|(intensity)|50a3e7", _
      "LM5|(intensity)|030608", _
      "LM4|(intensity)|050a0e", _
      "LM3|(intensity)|162d40", _
      "LM2|(intensity)|0c1923", _
      "LSA|(intensity)|081017", _
      "LH9|(intensity)|3e7fb5", _
      "LH8|(intensity)|4083ba", _
      "LH7|(intensity)|020406", _
      "LPR3|(intensity)|112231", _
      "LPR2|(intensity)|060c11", _
      "LPR6|(intensity)|4b9ada", _
      "LPR5|(intensity)|000000", _
      "LMR2|(intensity)|0a151e", _
      "LMR1|(intensity)|346a96", _
      "LCR1|(intensity)|060c11", _
      "LRO|(intensity)|4a97d6", _
      "LLO|(intensity)|3d7caf", _
      "LSR|(intensity)|50a3e7" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|50a3e8", _
      "LS5|(intensity)|346995", _
      "LS1|(intensity)|070e14", _
      "LS3|(intensity)|468eca", _
      "LS6|(intensity)|4c9cdd", _
      "LSwC2|(intensity)|50a3e7", _
      "LSwC1|(intensity)|060c11", _
      "LCWiz|(intensity)|020405", _
      "LC1|(intensity)|010102", _
      "LC2|(intensity)|4893d1", _
      "LC3|(intensity)|0d1b27", _
      "LC4|(intensity)|142839", _
      "LC5|(intensity)|4ea0e3", _
      "LC6|(intensity)|030507", _
      "LC8|(intensity)|010102", _
      "LWiz|(intensity)|50a3e7", _
      "LW9|(intensity)|50a3e8", _
      "LW5|(intensity)|4fa2e5", _
      "LW4|(intensity)|4995d4", _
      "LW3|(intensity)|030507", _
      "LW2|(intensity)|030609", _
      "LW1|(intensity)|50a3e8", _
      "LMLR|(intensity)|356d9b", _
      "LEBR|(intensity)|4c9cdd", _
      "LMR|(intensity)|142a3b", _
      "LPC5|(intensity)|0f1f2c", _
      "LPC4|(intensity)|3873a3", _
      "LSC3|(intensity)|000000", _
      "LSC2|(intensity)|010203", _
      "LF3|(intensity)|3b78aa", _
      "LF2|(intensity)|346995", _
      "LTW2|(intensity)|31648e", _
      "LCC2|(intensity)|0e1c28", _
      "LCC1|(intensity)|4e9fe2", _
      "LMet4|(intensity)|4e9fe2", _
      "LMet3|(intensity)|081117", _
      "LMet2|(intensity)|50a3e8", _
      "LM5|(intensity)|04070b", _
      "LM4|(intensity)|030709", _
      "LM3|(intensity)|112332", _
      "LM2|(intensity)|122433", _
      "LSA|(intensity)|050a0f", _
      "LH9|(intensity)|3872a2", _
      "LH8|(intensity)|458dc9", _
      "LH7|(intensity)|010304", _
      "LPR3|(intensity)|0d1a25", _
      "LPR2|(intensity)|04070a", _
      "LPR6|(intensity)|4894d2", _
      "LMR2|(intensity)|0f1e2b", _
      "LMR1|(intensity)|2f5f87", _
      "LCR1|(intensity)|04080b", _
      "LRI|(intensity)|000000", _
      "LRO|(intensity)|4c9bdc", _
      "LLO|(intensity)|4286be", _
      "LSR|(intensity)|4fa2e6" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "LS5|(intensity)|3a76a8", _
      "LS1|(intensity)|04090c", _
      "LS3|(intensity)|4083ba", _
      "LS6|(intensity)|4e9fe1", _
      "LSwC1|(intensity)|09131a", _
      "LCWiz|(intensity)|010102", _
      "LC1|(intensity)|010202", _
      "LC2|(intensity)|4b99da", _
      "LC3|(intensity)|0a131c", _
      "LC4|(intensity)|1a344a", _
      "LC5|(intensity)|4e9fe1", _
      "LC6|(intensity)|04070a", _
      "LC7|(intensity)|50a3e7", _
      "LC8|(intensity)|010202", _
      "LW8|(intensity)|50a3e8", _
      "LW7|(intensity)|50a3e8", _
      "LW6|(intensity)|50a3e7", _
      "LW5|(intensity)|50a2e7", _
      "LW4|(intensity)|468eca", _
      "LW3|(intensity)|010304", _
      "LW2|(intensity)|050b0f", _
      "LMLR|(intensity)|2f5f87", _
      "LEBR|(intensity)|4ea0e2", _
      "LMR|(intensity)|132737", _
      "LPC5|(intensity)|152a3c", _
      "LPC4|(intensity)|326691", _
      "LSC2|(intensity)|020507", _
      "LF3|(intensity)|356c99", _
      "LF2|(intensity)|3a77a9", _
      "LTW2|(intensity)|2a567a", _
      "LTW1|(intensity)|50a3e8", _
      "LCC2|(intensity)|0a141c", _
      "LCC1|(intensity)|4d9ddf", _
      "LMet4|(intensity)|4fa1e4", _
      "LMet3|(intensity)|0c1822", _
      "LM5|(intensity)|050b10", _
      "LM4|(intensity)|020406", _
      "LM3|(intensity)|0d1a26", _
      "LM2|(intensity)|183045", _
      "LSA|(intensity)|030608", _
      "LH9|(intensity)|31648e", _
      "LH8|(intensity)|4995d4", _
      "LH7|(intensity)|010203", _
      "LH1|(intensity)|010102", _
      "LPR3|(intensity)|09121a", _
      "LPR2|(intensity)|020406", _
      "LPR6|(intensity)|448cc6", _
      "LMR2|(intensity)|14293a", _
      "LMR1|(intensity)|285275", _
      "LCR1|(intensity)|020507", _
      "LRO|(intensity)|4d9ee0", _
      "LLO|(intensity)|468fcb", _
      "LSR|(intensity)|50a3e8", _
      "LSL|(intensity)|50a3e7" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "LS5|(intensity)|3f81b7", _
      "LS1|(intensity)|030508", _
      "LS2|(intensity)|000101", _
      "LS3|(intensity)|3b79ac", _
      "LS6|(intensity)|4fa1e4", _
      "LSwC1|(intensity)|0d1a25", _
      "LCWiz|(intensity)|000000", _
      "LC1|(intensity)|010304", _
      "LC2|(intensity)|4c9cdd", _
      "LC3|(intensity)|070d13", _
      "LC4|(intensity)|20425e", _
      "LC5|(intensity)|4c9cdd", _
      "LC6|(intensity)|060b10", _
      "LC7|(intensity)|50a2e7", _
      "LC8|(intensity)|010304", _
      "LW5|(intensity)|4fa2e6", _
      "LW4|(intensity)|4286be", _
      "LW3|(intensity)|000101", _
      "LW2|(intensity)|070f15", _
      "LMLR|(intensity)|275071", _
      "LEBR|(intensity)|4fa1e4", _
      "LMR|(intensity)|14293a", _
      "LPC5|(intensity)|1a364d", _
      "LPC4|(intensity)|2c597e", _
      "LSC2|(intensity)|04080b", _
      "LSC1|(intensity)|50a3e8", _
      "LF3|(intensity)|2e5e86", _
      "LF2|(intensity)|4083bb", _
      "LTW2|(intensity)|244968", _
      "LCC2|(intensity)|060d13", _
      "LCC1|(intensity)|4b99d9", _
      "LMet4|(intensity)|4fa2e6", _
      "LMet3|(intensity)|10212f", _
      "LMet2|(intensity)|50a3e7", _
      "LM5|(intensity)|081017", _
      "LM4|(intensity)|010203", _
      "LM3|(intensity)|09131b", _
      "LM2|(intensity)|1e3d57", _
      "LSA|(intensity)|020405", _
      "LH9|(intensity)|2a567a", _
      "LH8|(intensity)|4b9ada", _
      "LH7|(intensity)|000101", _
      "LH1|(intensity)|020305", _
      "LPR1|(intensity)|50a3e8", _
      "LPR3|(intensity)|060c11", _
      "LPR2|(intensity)|010304", _
      "LPR6|(intensity)|4083b9", _
      "LPR4|(intensity)|000000", _
      "LMR2|(intensity)|1a354b", _
      "LMR1|(intensity)|214461", _
      "LCR1|(intensity)|010203", _
      "LRO|(intensity)|4fa0e4", _
      "LLO|(intensity)|4a96d5", _
      "LSR|(intensity)|4fa1e5", _
      "LSL|(intensity)|50a2e7" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "LS5|(intensity)|438ac3", _
      "LS1|(intensity)|010304", _
      "LS2|(intensity)|000000", _
      "LS3|(intensity)|366f9d", _
      "LS6|(intensity)|50a2e7", _
      "LSwC3|(intensity)|50a3e7", _
      "LSwC2|(intensity)|50a3e8", _
      "LSwC1|(intensity)|122534", _
      "LC1|(intensity)|020406", _
      "LC2|(intensity)|4d9ddf", _
      "LC3|(intensity)|04090c", _
      "LC4|(intensity)|285274", _
      "LC5|(intensity)|4a97d6", _
      "LC6|(intensity)|09121a", _
      "LC7|(intensity)|4fa2e6", _
      "LC8|(intensity)|020406", _
      "LWiz|(intensity)|4fa2e6", _
      "LW9|(intensity)|50a3e7", _
      "LW8|(intensity)|50a3e7", _
      "LW5|(intensity)|4fa0e3", _
      "LW4|(intensity)|3d7caf", _
      "LW3|(intensity)|000000", _
      "LW2|(intensity)|0a151e", _
      "LW1|(intensity)|50a3e7", _
      "LMLR|(intensity)|20415d", _
      "LEBR|(intensity)|4fa2e6", _
      "LMR|(intensity)|172e42", _
      "LPC5|(intensity)|20415c", _
      "LPC4|(intensity)|254c6c", _
      "LSC2|(intensity)|060c11", _
      "LF3|(intensity)|275071", _
      "LF2|(intensity)|458cc7", _
      "LPC3|(intensity)|000101", _
      "LTW2|(intensity)|1d3c55", _
      "LTW1|(intensity)|50a3e7", _
      "LCC3|(intensity)|50a3e7", _
      "LCC2|(intensity)|04090c", _
      "LCC1|(intensity)|4892cf", _
      "LMet4|(intensity)|50a3e7", _
      "LMet3|(intensity)|172e41", _
      "LM5|(intensity)|0c1822", _
      "LM4|(intensity)|010202", _
      "LM3|(intensity)|070d13", _
      "LM2|(intensity)|254c6b", _
      "LSA|(intensity)|010203", _
      "LH9|(intensity)|234866", _
      "LH8|(intensity)|4d9ddf", _
      "LH7|(intensity)|000000", _
      "LH3|(intensity)|000101", _
      "LH1|(intensity)|030507", _
      "LPR1|(intensity)|50a3e7", _
      "LPR3|(intensity)|04080c", _
      "LPR2|(intensity)|010102", _
      "LPR6|(intensity)|3b78ab", _
      "LMR2|(intensity)|21435f", _
      "LMR1|(intensity)|1a364c", _
      "LCR1|(intensity)|000000", _
      "LRO|(intensity)|50a3e7", _
      "LLO|(intensity)|4c9bdb", _
      "LSR|(intensity)|4ea0e2", _
      "LSL|(intensity)|4fa2e6" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "LS5|(intensity)|4792cf", _
      "LS1|(intensity)|000101", _
      "LS3|(intensity)|2f6189", _
      "LS6|(intensity)|50a3e8", _
      "LSwC1|(intensity)|183045", _
      "LCWiz|(intensity)|000001", _
      "LLWiz|(intensity)|000001", _
      "LC1|(intensity)|04080c", _
      "LC2|(intensity)|4e9fe1", _
      "LC3|(intensity)|030508", _
      "LC4|(intensity)|2f6089", _
      "LC5|(intensity)|468eca", _
      "LC6|(intensity)|0e1e2a", _
      "LC8|(intensity)|04090c", _
      "LWiz|(intensity)|50a3e7", _
      "LW5|(intensity)|4d9ddf", _
      "LW4|(intensity)|3771a0", _
      "LW3|(intensity)|000101", _
      "LW2|(intensity)|0f1e2a", _
      "LMLR|(intensity)|19344a", _
      "LMR|(intensity)|1b374e", _
      "LPC5|(intensity)|254b6b", _
      "LPC4|(intensity)|1f3f59", _
      "LSC2|(intensity)|091219", _
      "LF3|(intensity)|21435f", _
      "LF2|(intensity)|4894d1", _
      "LPC3|(intensity)|000000", _
      "LTW2|(intensity)|172f43", _
      "LCC2|(intensity)|030608", _
      "LCC1|(intensity)|448bc6", _
      "LMet4|(intensity)|50a3e8", _
      "LMet3|(intensity)|1d3a53", _
      "LMet2|(intensity)|50a3e8", _
      "LM5|(intensity)|10212f", _
      "LM3|(intensity)|04090d", _
      "LM2|(intensity)|2c5a80", _
      "LSA|(intensity)|000101", _
      "LH9|(intensity)|1c3a52", _
      "LH8|(intensity)|4ea0e3", _
      "LH1|(intensity)|04090d", _
      "LPR1|(intensity)|4fa2e6", _
      "LPR3|(intensity)|020406", _
      "LPR2|(intensity)|000101", _
      "LPR6|(intensity)|346a96", _
      "LPR5|(intensity)|000101", _
      "LPR4|(intensity)|000102", _
      "LMR2|(intensity)|285173", _
      "LMR1|(intensity)|152b3d", _
      "LLO|(intensity)|4d9ee0", _
      "LSR|(intensity)|4c9bdc" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "LS5|(intensity)|4a98d8", _
      "LS1|(intensity)|000000", _
      "LS3|(intensity)|285274", _
      "LSwC3|(intensity)|4fa2e6", _
      "LSwC1|(intensity)|1e3d57", _
      "LCWiz|(intensity)|000000", _
      "LLWiz|(intensity)|000000", _
      "LC1|(intensity)|060c11", _
      "LC2|(intensity)|4e9fe2", _
      "LC3|(intensity)|020406", _
      "LC4|(intensity)|366d9b", _
      "LC5|(intensity)|4185bd", _
      "LC6|(intensity)|14293a", _
      "LC7|(intensity)|4fa1e5", _
      "LC8|(intensity)|060d12", _
      "LW8|(intensity)|50a3e8", _
      "LW7|(intensity)|50a3e7", _
      "LW5|(intensity)|4b9ada", _
      "LW4|(intensity)|31658f", _
      "LW3|(intensity)|010102", _
      "LW2|(intensity)|14293a", _
      "LMLR|(intensity)|132737", _
      "LEBR|(intensity)|4ea0e3", _
      "LMR|(intensity)|214460", _
      "LPC5|(intensity)|285173", _
      "LPC4|(intensity)|183247", _
      "LSC2|(intensity)|0d1a24", _
      "LF3|(intensity)|1a364d", _
      "LF2|(intensity)|4b9ada", _
      "LTW2|(intensity)|112433", _
      "LTW1|(intensity)|50a3e8", _
      "LCC3|(intensity)|4fa2e6", _
      "LCC2|(intensity)|020405", _
      "LCC1|(intensity)|4083ba", _
      "LMet3|(intensity)|214461", _
      "LM5|(intensity)|162d3f", _
      "LM4|(intensity)|000101", _
      "LM3|(intensity)|020507", _
      "LM2|(intensity)|336995", _
      "LSA|(intensity)|000000", _
      "LH9|(intensity)|162c3e", _
      "LH8|(intensity)|4fa1e5", _
      "LH1|(intensity)|070e14", _
      "LPR1|(intensity)|4fa1e5", _
      "LPR3|(intensity)|010202", _
      "LPR2|(intensity)|000000", _
      "LPR6|(intensity)|2d5b81", _
      "LPR5|(intensity)|010102", _
      "LPR4|(intensity)|000101", _
      "LMR2|(intensity)|2f5f87", _
      "LMR1|(intensity)|10202d", _
      "LLO|(intensity)|4ea0e3", _
      "LSR|(intensity)|4a97d6", _
      "LSL|(intensity)|4fa1e5" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
    .Lights = Array( _
      "LS5|(intensity)|4d9dde", _
      "LS3|(intensity)|214460", _
      "LS6|(intensity)|50a2e6", _
      "LSwC3|(intensity)|4fa2e5", _
      "LSwC1|(intensity)|254c6b", _
      "LC1|(intensity)|081119", _
      "LC2|(intensity)|4e9ee1", _
      "LC3|(intensity)|020507", _
      "LC4|(intensity)|3b79ac", _
      "LC5|(intensity)|3d7cb0", _
      "LC6|(intensity)|193449", _
      "LC7|(intensity)|4ea0e3", _
      "LC8|(intensity)|091219", _
      "LW9|(intensity)|50a3e8", _
      "LW7|(intensity)|50a2e7", _
      "LW6|(intensity)|50a2e6", _
      "LW5|(intensity)|4995d4", _
      "LW4|(intensity)|2a577b", _
      "LW2|(intensity)|1a344a", _
      "LW1|(intensity)|50a3e8", _
      "LMLR|(intensity)|0e1c28", _
      "LEBR|(intensity)|4d9ee0", _
      "LMR|(intensity)|285173", _
      "LPC5|(intensity)|285274", _
      "LPC4|(intensity)|132737", _
      "LSC2|(intensity)|112332", _
      "LF3|(intensity)|152a3c", _
      "LF2|(intensity)|4d9ee0", _
      "LTW2|(intensity)|0d1b26", _
      "LCC2|(intensity)|010203", _
      "LCC1|(intensity)|3b78aa", _
      "LMet4|(intensity)|50a3e7", _
      "LMet3|(intensity)|254b6b", _
      "LM5|(intensity)|1c3a52", _
      "LM4|(intensity)|000000", _
      "LM3|(intensity)|020305", _
      "LM2|(intensity)|3a76a8", _
      "LH9|(intensity)|10202e", _
      "LH8|(intensity)|4fa2e6", _
      "LH1|(intensity)|0b161f", _
      "LPR1|(intensity)|4ea0e3", _
      "LPR3|(intensity)|000101", _
      "LPR6|(intensity)|264d6d", _
      "LPR4|(intensity)|010202", _
      "LMR2|(intensity)|366e9c", _
      "LMR1|(intensity)|0b161f", _
      "LCR1|(intensity)|000101", _
      "LRI|(intensity)|000101", _
      "LLO|(intensity)|4fa2e6", _
      "LSR|(intensity)|4792cf", _
      "LSL|(intensity)|4ea0e3" _
      )
  End With
  With .AddStep(0.50000, Null, Null)
    .Lights = Array( _
      "LS5|(intensity)|4e9ee1", _
      "LS3|(intensity)|1b374e", _
      "LS6|(intensity)|50a3e7", _
      "LSwC3|(intensity)|4fa0e4", _
      "LSwC1|(intensity)|2c5a7f", _
      "LCWiz|(intensity)|000001", _
      "LC1|(intensity)|0d1a24", _
      "LC2|(intensity)|4c9adb", _
      "LC3|(intensity)|04070b", _
      "LC4|(intensity)|3f81b7", _
      "LC5|(intensity)|376f9e", _
      "LC6|(intensity)|20415d", _
      "LC7|(intensity)|4c9cdd", _
      "LC8|(intensity)|0c1924", _
      "LWiz|(intensity)|4fa1e5", _
      "LW7|(intensity)|4fa2e5", _
      "LW6|(intensity)|4fa2e6", _
      "LW5|(intensity)|468fcb", _
      "LW4|(intensity)|244968", _
      "LW3|(intensity)|000101", _
      "LW2|(intensity)|20415c", _
      "LMLR|(intensity)|0a131c", _
      "LEBR|(intensity)|4c9bdd", _
      "LMR|(intensity)|2e5e86", _
      "LPC5|(intensity)|274f70", _
      "LPC4|(intensity)|0e1c28", _
      "LSC2|(intensity)|162e41", _
      "LF3|(intensity)|10202d", _
      "LF2|(intensity)|4e9fe2", _
      "LPC3|(intensity)|010203", _
      "LPC2|(intensity)|000102", _
      "LTW2|(intensity)|09131b", _
      "LCC2|(intensity)|010102", _
      "LCC1|(intensity)|346b98", _
      "LMet3|(intensity)|275072", _
      "LM5|(intensity)|234866", _
      "LM3|(intensity)|010203", _
      "LM2|(intensity)|3f80b6", _
      "LH9|(intensity)|0c1822", _
      "LH1|(intensity)|0f202d", _
      "LPR1|(intensity)|4e9fe1", _
      "LPR6|(intensity)|1f3f5a", _
      "LPR5|(intensity)|020305", _
      "LPR4|(intensity)|020305", _
      "LMR2|(intensity)|3b79ab", _
      "LMR1|(intensity)|070f15", _
      "LCR1|(intensity)|000000", _
      "LRI|(intensity)|000000", _
      "LLI|(intensity)|000101", _
      "LLO|(intensity)|50a3e7", _
      "LSR|(intensity)|438ac3", _
      "LSL|(intensity)|4c9cdd" _
      )
  End With
  With .AddStep(0.53333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|50a3e7", _
      "LS5|(intensity)|4ea0e3", _
      "LS3|(intensity)|152b3d", _
      "LSwC3|(intensity)|4d9ee0", _
      "LSwC1|(intensity)|336894", _
      "LCWiz|(intensity)|000000", _
      "LLWiz|(intensity)|000101", _
      "LC1|(intensity)|112332", _
      "LC2|(intensity)|4a96d5", _
      "LC3|(intensity)|050b10", _
      "LC4|(intensity)|4286bf", _
      "LC5|(intensity)|30638c", _
      "LC6|(intensity)|254c6c", _
      "LC7|(intensity)|4a98d7", _
      "LC8|(intensity)|112231", _
      "LWiz|(intensity)|4e9fe2", _
      "LW7|(intensity)|4fa1e4", _
      "LW6|(intensity)|4fa1e4", _
      "LW5|(intensity)|4287c0", _
      "LW4|(intensity)|1d3c55", _
      "LW3|(intensity)|000001", _
      "LW2|(intensity)|274f70", _
      "LMLR|(intensity)|060c10", _
      "LEBR|(intensity)|4a97d6", _
      "LMR|(intensity)|356c99", _
      "LPC5|(intensity)|224664", _
      "LPC4|(intensity)|0a151d", _
      "LSC2|(intensity)|1d3b54", _
      "LF3|(intensity)|0b1720", _
      "LF2|(intensity)|4fa1e5", _
      "LPC3|(intensity)|010304", _
      "LPC2|(intensity)|000101", _
      "LTW2|(intensity)|060c12", _
      "LCC3|(intensity)|50a2e6", _
      "LCC2|(intensity)|000101", _
      "LCC1|(intensity)|2e5d85", _
      "LM5|(intensity)|2a577b", _
      "LM4|(intensity)|000001", _
      "LM3|(intensity)|010102", _
      "LM2|(intensity)|448ac4", _
      "LH9|(intensity)|081118", _
      "LH8|(intensity)|50a3e7", _
      "LH7|(intensity)|000001", _
      "LH3|(intensity)|000001", _
      "LH1|(intensity)|14293b", _
      "LPR1|(intensity)|4d9ddf", _
      "LPR3|(intensity)|000001", _
      "LPR6|(intensity)|193449", _
      "LPR5|(intensity)|030608", _
      "LPR4|(intensity)|030608", _
      "LMR2|(intensity)|4083ba", _
      "LMR1|(intensity)|050a0e", _
      "LRO|(intensity)|50a3e8", _
      "LSR|(intensity)|3f80b6", _
      "LSL|(intensity)|4a98d7" _
      )
  End With
  With .AddStep(0.56667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|4fa2e6", _
      "LS5|(intensity)|4fa1e5", _
      "LS3|(intensity)|0f202d", _
      "LSwC3|(intensity)|4b99d9", _
      "LSwC1|(intensity)|3a76a8", _
      "LC1|(intensity)|162e41", _
      "LC2|(intensity)|4792cf", _
      "LC3|(intensity)|081016", _
      "LC4|(intensity)|4288c1", _
      "LC5|(intensity)|2c597f", _
      "LC6|(intensity)|295477", _
      "LC7|(intensity)|4894d1", _
      "LC8|(intensity)|162d40", _
      "LWiz|(intensity)|4e9ee0", _
      "LW8|(intensity)|50a3e7", _
      "LW7|(intensity)|4e9fe2", _
      "LW6|(intensity)|4fa0e4", _
      "LW5|(intensity)|3e7eb3", _
      "LW4|(intensity)|173044", _
      "LW3|(intensity)|000000", _
      "LW2|(intensity)|2e5d84", _
      "LMLR|(intensity)|04080c", _
      "LEBR|(intensity)|4791cd", _
      "LMR|(intensity)|3a77a9", _
      "LPC5|(intensity)|1d3a53", _
      "LPC4|(intensity)|070e14", _
      "LSC2|(intensity)|234867", _
      "LF3|(intensity)|070f15", _
      "LF2|(intensity)|50a3e8", _
      "LTW2|(intensity)|03070a", _
      "LCC3|(intensity)|4fa2e5", _
      "LCC1|(intensity)|274f70", _
      "LMet4|(intensity)|50a3e8", _
      "LMet3|(intensity)|254b6a", _
      "LM5|(intensity)|326690", _
      "LM4|(intensity)|000101", _
      "LM3|(intensity)|000101", _
      "LM2|(intensity)|4893d0", _
      "LH9|(intensity)|050a0f", _
      "LH7|(intensity)|000101", _
      "LH3|(intensity)|000101", _
      "LH1|(intensity)|1a344a", _
      "LPR1|(intensity)|4b99d9", _
      "LPR3|(intensity)|000000", _
      "LPR6|(intensity)|142a3b", _
      "LPR5|(intensity)|04090d", _
      "LPR4|(intensity)|04080c", _
      "LMR2|(intensity)|458dc8", _
      "LMR1|(intensity)|030609", _
      "LSR|(intensity)|3a76a7", _
      "LSL|(intensity)|4893d1" _
      )
  End With
  With .AddStep(0.60000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|4fa1e5", _
      "LS5|(intensity)|50a3e7", _
      "LS3|(intensity)|0b161f", _
      "LS6|(intensity)|50a3e8", _
      "LSwC3|(intensity)|4894d2", _
      "LSwC1|(intensity)|3f81b7", _
      "LC1|(intensity)|1c3a52", _
      "LC2|(intensity)|448ac4", _
      "LC3|(intensity)|0c1923", _
      "LC4|(intensity)|4185bc", _
      "LC5|(intensity)|285375", _
      "LC6|(intensity)|2b577b", _
      "LC7|(intensity)|458dc7", _
      "LC8|(intensity)|1c3951", _
      "LWiz|(intensity)|4c9adb", _
      "LW8|(intensity)|4fa2e6", _
      "LW7|(intensity)|4c9cdd", _
      "LW6|(intensity)|4e9fe2", _
      "LW5|(intensity)|3872a2", _
      "LW4|(intensity)|122534", _
      "LW2|(intensity)|356b98", _
      "LMLR|(intensity)|020507", _
      "LEBR|(intensity)|4389c2", _
      "LMR|(intensity)|4082b8", _
      "LPC5|(intensity)|162c3f", _
      "LPC4|(intensity)|04080c", _
      "LSC2|(intensity)|2b577b", _
      "LF3|(intensity)|050b0f", _
      "LPC3|(intensity)|030508", _
      "LPC2|(intensity)|010102", _
      "LTW2|(intensity)|030508", _
      "LCC3|(intensity)|4e9fe2", _
      "LCC2|(intensity)|000000", _
      "LCC1|(intensity)|20415c", _
      "LMet3|(intensity)|21425e", _
      "LM5|(intensity)|3872a2", _
      "LM4|(intensity)|010203", _
      "LM2|(intensity)|4b99d9", _
      "LH9|(intensity)|020507", _
      "LH8|(intensity)|50a3e8", _
      "LH3|(intensity)|010203", _
      "LH2|(intensity)|50a3e7", _
      "LH1|(intensity)|20425e", _
      "LPR1|(intensity)|4893d1", _
      "LPR6|(intensity)|112230", _
      "LPR5|(intensity)|060c12", _
      "LPR4|(intensity)|060c11", _
      "LMR2|(intensity)|4995d4", _
      "LMR1|(intensity)|020305", _
      "LSR|(intensity)|346995", _
      "LSL|(intensity)|448ac4" _
      )
  End With
  With .AddStep(0.63333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|4fa0e4", _
      "LS5|(intensity)|50a3e8", _
      "LS3|(intensity)|081017", _
      "LSwC3|(intensity)|468eca", _
      "LSwC1|(intensity)|448bc5", _
      "LCWiz|(intensity)|000001", _
      "LLWiz|(intensity)|010102", _
      "LC1|(intensity)|234765", _
      "LC2|(intensity)|3f81b8", _
      "LC3|(intensity)|112231", _
      "LC4|(intensity)|3e7fb4", _
      "LC5|(intensity)|275071", _
      "LC6|(intensity)|2a567a", _
      "LC7|(intensity)|4084bb", _
      "LC8|(intensity)|224664", _
      "LWiz|(intensity)|4996d4", _
      "LW8|(intensity)|4fa1e5", _
      "LW7|(intensity)|4a96d5", _
      "LW6|(intensity)|4c9cdd", _
      "LW5|(intensity)|326691", _
      "LW4|(intensity)|0d1b26", _
      "LW2|(intensity)|3a76a8", _
      "LMLR|(intensity)|010202", _
      "LEBR|(intensity)|3e7eb3", _
      "LMR|(intensity)|448bc6", _
      "LPC5|(intensity)|112231", _
      "LPC4|(intensity)|020507", _
      "LSC2|(intensity)|31648e", _
      "LF3|(intensity)|04070a", _
      "LF2|(intensity)|50a3e7", _
      "LPC3|(intensity)|04090d", _
      "LPC2|(intensity)|020406", _
      "LTW2|(intensity)|020405", _
      "LCC3|(intensity)|4e9ee1", _
      "LCC1|(intensity)|193348", _
      "LMet3|(intensity)|1b374e", _
      "LM5|(intensity)|3e7eb3", _
      "LM4|(intensity)|010304", _
      "LM2|(intensity)|4c9cdd", _
      "LH9|(intensity)|020406", _
      "LH8|(intensity)|50a3e7", _
      "LH7|(intensity)|000000", _
      "LH6|(intensity)|50a3e7", _
      "LH5|(intensity)|000001", _
      "LH3|(intensity)|010202", _
      "LH2|(intensity)|4fa2e5", _
      "LH1|(intensity)|275071", _
      "LPR1|(intensity)|458cc7", _
      "LPR6|(intensity)|10212f", _
      "LPR5|(intensity)|09131a", _
      "LPR4|(intensity)|0a131c", _
      "LMR2|(intensity)|4b9ada", _
      "LMR1|(intensity)|010203", _
      "LLO|(intensity)|50a3e8", _
      "LSR|(intensity)|2d5c83", _
      "LSL|(intensity)|3f81b7" _
      )
  End With
  With .AddStep(0.66667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|4e9ee1", _
      "LS3|(intensity)|050b0f", _
      "LSwC3|(intensity)|4184bc", _
      "LSwC1|(intensity)|4893d1", _
      "LCWiz|(intensity)|000101", _
      "LLWiz|(intensity)|020305", _
      "LC1|(intensity)|2a5579", _
      "LC2|(intensity)|3b78aa", _
      "LC3|(intensity)|162c3f", _
      "LC4|(intensity)|3a77a9", _
      "LC5|(intensity)|285275", _
      "LC6|(intensity)|275072", _
      "LC7|(intensity)|3b78ab", _
      "LC8|(intensity)|295376", _
      "LWiz|(intensity)|4790cc", _
      "LW8|(intensity)|4e9ee1", _
      "LW7|(intensity)|4790cd", _
      "LW6|(intensity)|4a97d6", _
      "LW5|(intensity)|2c597e", _
      "LW4|(intensity)|09121a", _
      "LW2|(intensity)|3f81b7", _
      "LMLR|(intensity)|000000", _
      "LEBR|(intensity)|3771a1", _
      "LMR|(intensity)|4792cf", _
      "LPC5|(intensity)|0c1924", _
      "LPC4|(intensity)|020405", _
      "LSC2|(intensity)|3771a0", _
      "LF3|(intensity)|020507", _
      "LF2|(intensity)|50a2e6", _
      "LPC3|(intensity)|070e14", _
      "LPC2|(intensity)|03070a", _
      "LTW2|(intensity)|010204", _
      "LCC3|(intensity)|4d9ddf", _
      "LCC1|(intensity)|132636", _
      "LMet3|(intensity)|152a3c", _
      "LM5|(intensity)|4389c3", _
      "LM4|(intensity)|030608", _
      "LM2|(intensity)|4d9ddf", _
      "LH8|(intensity)|4fa1e5", _
      "LH6|(intensity)|4fa1e5", _
      "LH5|(intensity)|010102", _
      "LH3|(intensity)|010102", _
      "LH2|(intensity)|4fa1e4", _
      "LH1|(intensity)|2e5e85", _
      "LPR1|(intensity)|4184bc", _
      "LPR6|(intensity)|112331", _
      "LPR5|(intensity)|0d1b26", _
      "LPR4|(intensity)|0e1d29", _
      "LMR2|(intensity)|4d9ddf", _
      "LMR1|(intensity)|010202", _
      "LSR|(intensity)|274f70", _
      "LSL|(intensity)|3b78aa" _
      )
  End With
  With .AddStep(0.70000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|4c9bdc", _
      "LS3|(intensity)|030609", _
      "LSwC3|(intensity)|3b79ac", _
      "LSwC1|(intensity)|4b9ada", _
      "LLWiz|(intensity)|030609", _
      "LC1|(intensity)|31638d", _
      "LC2|(intensity)|356c99", _
      "LC3|(intensity)|1b384f", _
      "LC4|(intensity)|356c99", _
      "LC5|(intensity)|2c597e", _
      "LC6|(intensity)|224562", _
      "LC7|(intensity)|346b98", _
      "LC8|(intensity)|30628b", _
      "LWiz|(intensity)|4388c1", _
      "LW8|(intensity)|4c9bdc", _
      "LW7|(intensity)|4389c3", _
      "LW6|(intensity)|4791cd", _
      "LW5|(intensity)|254b6a", _
      "LW4|(intensity)|060d13", _
      "LW2|(intensity)|448bc5", _
      "LEBR|(intensity)|31648d", _
      "LMR|(intensity)|4a98d7", _
      "LPC5|(intensity)|081118", _
      "LPC4|(intensity)|010304", _
      "LSC2|(intensity)|3d7db2", _
      "LF3|(intensity)|020506", _
      "LF2|(intensity)|50a3e8", _
      "LPC3|(intensity)|0a141d", _
      "LPC2|(intensity)|050a0f", _
      "LPC1|(intensity)|000101", _
      "LTW2|(intensity)|010102", _
      "LCC3|(intensity)|4b9adb", _
      "LCC1|(intensity)|0e1d29", _
      "LMet3|(intensity)|0f202d", _
      "LM5|(intensity)|4792cf", _
      "LM4|(intensity)|04090c", _
      "LM3|(intensity)|000000", _
      "LM2|(intensity)|4d9ee0", _
      "LH8|(intensity)|4ea0e3", _
      "LH6|(intensity)|4ea0e3", _
      "LH5|(intensity)|010304", _
      "LH4|(intensity)|50a3e7", _
      "LH2|(intensity)|4ea0e2", _
      "LH1|(intensity)|346b98", _
      "LPR1|(intensity)|3c7aad", _
      "LPR6|(intensity)|132838", _
      "LPR5|(intensity)|122534", _
      "LPR4|(intensity)|132838", _
      "LMR2|(intensity)|4ea0e2", _
      "LMR1|(intensity)|000102", _
      "LCR1|(intensity)|000101", _
      "LLI|(intensity)|010202", _
      "LLO|(intensity)|50a3e7", _
      "LSR|(intensity)|20415c", _
      "LSL|(intensity)|346b98" _
      )
  End With
  With .AddStep(0.73333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|4995d4", _
      "LS3|(intensity)|020305", _
      "LSwC3|(intensity)|356d9b", _
      "LSwC1|(intensity)|4d9ddf", _
      "LCWiz|(intensity)|010102", _
      "LLWiz|(intensity)|05090d", _
      "LC1|(intensity)|37709e", _
      "LC2|(intensity)|2f5f87", _
      "LC3|(intensity)|224562", _
      "LC4|(intensity)|2f5f87", _
      "LC5|(intensity)|30638c", _
      "LC6|(intensity)|1c3a52", _
      "LC7|(intensity)|2e5e85", _
      "LC8|(intensity)|366f9d", _
      "LWiz|(intensity)|3e7fb4", _
      "LW8|(intensity)|4a98d7", _
      "LW7|(intensity)|3e7fb4", _
      "LW6|(intensity)|438ac3", _
      "LW5|(intensity)|1e3e58", _
      "LW4|(intensity)|04090d", _
      "LW2|(intensity)|4892cf", _
      "LEBR|(intensity)|2a5579", _
      "LMR|(intensity)|4d9ddf", _
      "LPC5|(intensity)|04090c", _
      "LPC4|(intensity)|010102", _
      "LSC2|(intensity)|4287bf", _
      "LF3|(intensity)|030508", _
      "LPC3|(intensity)|0e1d2a", _
      "LPC2|(intensity)|081017", _
      "LPC1|(intensity)|010102", _
      "LTW2|(intensity)|000101", _
      "LCC3|(intensity)|4893d1", _
      "LCC1|(intensity)|0a151e", _
      "LMet3|(intensity)|0b1720", _
      "LM5|(intensity)|4a97d7", _
      "LM4|(intensity)|070f15", _
      "LH9|(intensity)|020507", _
      "LH8|(intensity)|4e9ee1", _
      "LH7|(intensity)|000101", _
      "LH6|(intensity)|4e9fe2", _
      "LH5|(intensity)|020406", _
      "LH4|(intensity)|50a2e6", _
      "LH3|(intensity)|020507", _
      "LH2|(intensity)|4d9cde", _
      "LH1|(intensity)|3a76a8", _
      "LPR1|(intensity)|366e9c", _
      "LPR2|(intensity)|000001", _
      "LPR6|(intensity)|183045", _
      "LPR5|(intensity)|173044", _
      "LPR4|(intensity)|193449", _
      "LMR2|(intensity)|4fa1e4", _
      "LMR1|(intensity)|000101", _
      "LCR2|(intensity)|50a3e7", _
      "LCR1|(intensity)|010202", _
      "LLI|(intensity)|010304", _
      "LSR|(intensity)|1a354b", _
      "LSL|(intensity)|2e5e86" _
      )
  End With
  With .AddStep(0.76667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|468fca", _
      "LS3|(intensity)|010304", _
      "LSwC3|(intensity)|2f6088", _
      "LSwC1|(intensity)|4ea0e2", _
      "LCWiz|(intensity)|010304", _
      "LLWiz|(intensity)|070f15", _
      "LC1|(intensity)|3c7bae", _
      "LC2|(intensity)|285274", _
      "LC3|(intensity)|285375", _
      "LC4|(intensity)|285173", _
      "LC5|(intensity)|356d9b", _
      "LC6|(intensity)|172e42", _
      "LC7|(intensity)|285173", _
      "LC8|(intensity)|3c79ac", _
      "LWiz|(intensity)|3873a3", _
      "LW8|(intensity)|4791cd", _
      "LW7|(intensity)|3974a4", _
      "LW6|(intensity)|3f80b6", _
      "LW5|(intensity)|183146", _
      "LW4|(intensity)|020507", _
      "LW2|(intensity)|4a97d6", _
      "LEBR|(intensity)|234765", _
      "LMR|(intensity)|4e9fe2", _
      "LPC5|(intensity)|030608", _
      "LPC4|(intensity)|000101", _
      "LSC2|(intensity)|468fca", _
      "LF3|(intensity)|04070a", _
      "LF2|(intensity)|50a3e7", _
      "LPC3|(intensity)|142839", _
      "LPC2|(intensity)|0c1822", _
      "LPC1|(intensity)|010202", _
      "LCC3|(intensity)|448bc5", _
      "LCC1|(intensity)|070e14", _
      "LMet3|(intensity)|080f16", _
      "LMet2|(intensity)|50a3e7", _
      "LM5|(intensity)|4c9cdd", _
      "LM4|(intensity)|0a151e", _
      "LM2|(intensity)|4c9cdd", _
      "LH9|(intensity)|04070b", _
      "LH8|(intensity)|4c9cdd", _
      "LH7|(intensity)|010203", _
      "LH6|(intensity)|4c9cdd", _
      "LH5|(intensity)|03070a", _
      "LH4|(intensity)|4fa2e6", _
      "LH3|(intensity)|04080b", _
      "LH2|(intensity)|4a97d6", _
      "LH1|(intensity)|3e7fb4", _
      "LPR1|(intensity)|2f6089", _
      "LPR2|(intensity)|000000", _
      "LPR6|(intensity)|1d3c55", _
      "LPR5|(intensity)|1d3c55", _
      "LPR4|(intensity)|20415c", _
      "LMR2|(intensity)|4fa2e6", _
      "LMR1|(intensity)|000000", _
      "LCR2|(intensity)|4fa1e5", _
      "LCR1|(intensity)|010203", _
      "LLI|(intensity)|020406", _
      "LLO|(intensity)|50a3e8", _
      "LSR|(intensity)|142a3b", _
      "LSL|(intensity)|285173" _
      )
  End With
  With .AddStep(0.80000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|4287bf", _
      "LS3|(intensity)|010203", _
      "LSwC3|(intensity)|285274", _
      "LSwC1|(intensity)|4fa2e5", _
      "LCWiz|(intensity)|030608", _
      "LLWiz|(intensity)|0b161f", _
      "LC1|(intensity)|4185bd", _
      "LC2|(intensity)|21435f", _
      "LC3|(intensity)|30618a", _
      "LC4|(intensity)|21435f", _
      "LC5|(intensity)|3b79ab", _
      "LC6|(intensity)|122433", _
      "LC7|(intensity)|224562", _
      "LC8|(intensity)|4083ba", _
      "LWiz|(intensity)|326691", _
      "LW8|(intensity)|4389c2", _
      "LW7|(intensity)|336994", _
      "LW6|(intensity)|3a76a7", _
      "LW5|(intensity)|122535", _
      "LW4|(intensity)|010203", _
      "LW2|(intensity)|4c9bdc", _
      "LEBR|(intensity)|1c3951", _
      "LMR|(intensity)|4fa1e4", _
      "LPC5|(intensity)|020406", _
      "LSC2|(intensity)|4995d4", _
      "LF3|(intensity)|050b10", _
      "LF2|(intensity)|4fa1e5", _
      "LPC3|(intensity)|1a344a", _
      "LPC2|(intensity)|102130", _
      "LPC1|(intensity)|020304", _
      "LTW2|(intensity)|010202", _
      "LCC3|(intensity)|3f81b7", _
      "LCC1|(intensity)|04090c", _
      "LMet3|(intensity)|050a0e", _
      "LMet2|(intensity)|4fa2e6", _
      "LM5|(intensity)|4e9fe1", _
      "LM4|(intensity)|0e1d29", _
      "LM2|(intensity)|4b99d9", _
      "LH9|(intensity)|060b10", _
      "LH8|(intensity)|4a97d7", _
      "LH7|(intensity)|020305", _
      "LH6|(intensity)|4a97d7", _
      "LH5|(intensity)|060b10", _
      "LH4|(intensity)|4fa1e4", _
      "LH3|(intensity)|060d12", _
      "LH2|(intensity)|4791cd", _
      "LH1|(intensity)|4185bd", _
      "LPR1|(intensity)|295376", _
      "LPR6|(intensity)|244967", _
      "LPR5|(intensity)|244967", _
      "LPR4|(intensity)|254c6c", _
      "LCR2|(intensity)|4ea0e2", _
      "LCR1|(intensity)|020405", _
      "LLI|(intensity)|03070a", _
      "LLO|(intensity)|50a2e7", _
      "LSR|(intensity)|10202d", _
      "LSL|(intensity)|214360" _
      )
  End With
  With .AddStep(0.83333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|3d7db1", _
      "LS3|(intensity)|000102", _
      "LSwC3|(intensity)|214360", _
      "LSwC1|(intensity)|50a2e7", _
      "LCWiz|(intensity)|04090d", _
      "LLWiz|(intensity)|0f1e2a", _
      "LC1|(intensity)|458dc9", _
      "LC2|(intensity)|1b374e", _
      "LC3|(intensity)|366e9c", _
      "LC4|(intensity)|1b364d", _
      "LC5|(intensity)|4185bd", _
      "LC6|(intensity)|0d1a25", _
      "LC7|(intensity)|1e3d56", _
      "LC8|(intensity)|448bc5", _
      "LWiz|(intensity)|2c597f", _
      "LW8|(intensity)|3e7fb5", _
      "LW7|(intensity)|2d5c82", _
      "LW6|(intensity)|346996", _
      "LW5|(intensity)|0e1c28", _
      "LW4|(intensity)|000101", _
      "LW2|(intensity)|4e9fe2", _
      "LMLR|(intensity)|000101", _
      "LEBR|(intensity)|152c3e", _
      "LMR|(intensity)|4fa2e5", _
      "LPC5|(intensity)|010203", _
      "LPC4|(intensity)|000000", _
      "LSC2|(intensity)|4c9adb", _
      "LF3|(intensity)|09121a", _
      "LF2|(intensity)|4ea0e3", _
      "LF1|(intensity)|000101", _
      "LPC3|(intensity)|20425d", _
      "LPC2|(intensity)|162c3f", _
      "LPC1|(intensity)|030609", _
      "LTW2|(intensity)|020305", _
      "LCC3|(intensity)|3975a6", _
      "LCC1|(intensity)|030508", _
      "LMet3|(intensity)|030508", _
      "LMet2|(intensity)|50a3e7", _
      "LM5|(intensity)|4fa1e4", _
      "LM4|(intensity)|132737", _
      "LM2|(intensity)|4995d3", _
      "LH9|(intensity)|091119", _
      "LH8|(intensity)|4791ce", _
      "LH7|(intensity)|020506", _
      "LH6|(intensity)|4791ce", _
      "LH5|(intensity)|091119", _
      "LH4|(intensity)|4e9fe2", _
      "LH3|(intensity)|0a141c", _
      "LH2|(intensity)|4389c3", _
      "LH1|(intensity)|4286be", _
      "LPR1|(intensity)|234764", _
      "LPR6|(intensity)|2a577b", _
      "LPR5|(intensity)|2b577b", _
      "LPR4|(intensity)|295376", _
      "LMR2|(intensity)|50a3e7", _
      "LCR2|(intensity)|4d9ddf", _
      "LCR1|(intensity)|03070a", _
      "LRI|(intensity)|000001", _
      "LLI|(intensity)|060b10", _
      "LLO|(intensity)|4fa1e5", _
      "LSR|(intensity)|0b1720", _
      "LSL|(intensity)|1c3951" _
      )
  End With
  With .AddStep(0.86667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|3771a1", _
      "LX|(intensity)|010102", _
      "LS3|(intensity)|000000", _
      "LSwC3|(intensity)|1a354b", _
      "LSwC1|(intensity)|50a3e7", _
      "LCWiz|(intensity)|070e14", _
      "LLWiz|(intensity)|142839", _
      "LC1|(intensity)|4994d3", _
      "LC2|(intensity)|152b3d", _
      "LC3|(intensity)|3b79ac", _
      "LC4|(intensity)|152b3d", _
      "LC5|(intensity)|468eca", _
      "LC6|(intensity)|081118", _
      "LC7|(intensity)|1c3a52", _
      "LC8|(intensity)|4790cd", _
      "LWiz|(intensity)|254d6d", _
      "LW8|(intensity)|3974a4", _
      "LW7|(intensity)|264e6f", _
      "LW6|(intensity)|2d5c83", _
      "LW5|(intensity)|0a151d", _
      "LW2|(intensity)|4fa1e5", _
      "LMLR|(intensity)|000000", _
      "LEBR|(intensity)|10202d", _
      "LMR|(intensity)|50a3e7", _
      "LPC5|(intensity)|000101", _
      "LSC2|(intensity)|4d9ee0", _
      "LF3|(intensity)|0d1a25", _
      "LF2|(intensity)|4d9ee0", _
      "LF1|(intensity)|010102", _
      "LPC3|(intensity)|285173", _
      "LPC2|(intensity)|1c3a52", _
      "LPC1|(intensity)|060c11", _
      "LTW2|(intensity)|030508", _
      "LCC3|(intensity)|336995", _
      "LCC1|(intensity)|010304", _
      "LMet3|(intensity)|010304", _
      "LMet2|(intensity)|4fa2e6", _
      "LMet1|(intensity)|50a2e6", _
      "LM5|(intensity)|4fa2e5", _
      "LM4|(intensity)|193348", _
      "LM2|(intensity)|468fcb", _
      "LSA|(intensity)|000001", _
      "LH9|(intensity)|0c1924", _
      "LH8|(intensity)|438ac3", _
      "LH7|(intensity)|03070a", _
      "LH6|(intensity)|438ac3", _
      "LH5|(intensity)|0d1a24", _
      "LH4|(intensity)|4c9cdd", _
      "LH3|(intensity)|0e1d29", _
      "LH2|(intensity)|3d7cb0", _
      "LH1|(intensity)|4184bb", _
      "LPR1|(intensity)|1c3951", _
      "LPR6|(intensity)|31648e", _
      "LPR5|(intensity)|31658f", _
      "LPR4|(intensity)|2a577b", _
      "LCR2|(intensity)|4a98d7", _
      "LCR1|(intensity)|060d12", _
      "LLI|(intensity)|09131a", _
      "LLO|(intensity)|4ea0e3", _
      "LSR|(intensity)|080f16", _
      "LSL|(intensity)|183146" _
      )
  End With
  With .AddStep(0.90000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|31658f", _
      "LX|(intensity)|000001", _
      "LS4|(intensity)|000001", _
      "LSwC3|(intensity)|152b3d", _
      "LSwC1|(intensity)|50a2e7", _
      "LCWiz|(intensity)|0a141d", _
      "LLWiz|(intensity)|193449", _
      "LC1|(intensity)|4b99d9", _
      "LC2|(intensity)|10212f", _
      "LC3|(intensity)|4083ba", _
      "LC4|(intensity)|10212f", _
      "LC5|(intensity)|4996d4", _
      "LC6|(intensity)|050a0e", _
      "LC7|(intensity)|1d3a53", _
      "LC8|(intensity)|4893d0", _
      "LWiz|(intensity)|1f3f59", _
      "LW8|(intensity)|336793", _
      "LW7|(intensity)|20415c", _
      "LW6|(intensity)|274f70", _
      "LW5|(intensity)|070f15", _
      "LW4|(intensity)|000000", _
      "LW2|(intensity)|4fa2e6", _
      "LW1|(intensity)|4fa2e6", _
      "LEBR|(intensity)|0b1721", _
      "LMR|(intensity)|50a3e8", _
      "LPC4|(intensity)|010102", _
      "LSC2|(intensity)|4ea0e3", _
      "LF3|(intensity)|112433", _
      "LF2|(intensity)|4c9cde", _
      "LPC3|(intensity)|2f6088", _
      "LPC2|(intensity)|234866", _
      "LPC1|(intensity)|091219", _
      "LTW2|(intensity)|050a0e", _
      "LCC3|(intensity)|2e5e85", _
      "LCC1|(intensity)|010102", _
      "LMet3|(intensity)|010203", _
      "LMet2|(intensity)|4ea0e3", _
      "LMet1|(intensity)|4fa1e5", _
      "LM5|(intensity)|4fa2e6", _
      "LM4|(intensity)|1f405a", _
      "LM2|(intensity)|4287c0", _
      "LH9|(intensity)|112331", _
      "LH8|(intensity)|3f81b7", _
      "LH7|(intensity)|050b10", _
      "LH6|(intensity)|3f81b7", _
      "LH5|(intensity)|112331", _
      "LH4|(intensity)|4b99d9", _
      "LH3|(intensity)|132738", _
      "LH2|(intensity)|37709f", _
      "LH1|(intensity)|3e7eb3", _
      "LPR1|(intensity)|162d40", _
      "LPR2|(intensity)|010203", _
      "LPR6|(intensity)|3771a0", _
      "LPR5|(intensity)|3872a1", _
      "LPR4|(intensity)|2a567a", _
      "LCR2|(intensity)|4892cf", _
      "LCR1|(intensity)|09131a", _
      "LRI|(intensity)|000000", _
      "LLI|(intensity)|0d1b27", _
      "LLO|(intensity)|4e9fe1", _
      "LSR|(intensity)|050b0f", _
      "LSL|(intensity)|162c3f" _
      )
  End With
  With .AddStep(0.93333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|2b587c", _
      "LX|(intensity)|000000", _
      "LS1|(intensity)|010102", _
      "LS4|(intensity)|010102", _
      "LSwC3|(intensity)|112433", _
      "LSwC1|(intensity)|4fa2e6", _
      "LCWiz|(intensity)|0e1d29", _
      "LLWiz|(intensity)|1f405b", _
      "LC1|(intensity)|4d9cde", _
      "LC2|(intensity)|0c1822", _
      "LC3|(intensity)|458cc7", _
      "LC4|(intensity)|0c1822", _
      "LC5|(intensity)|4c9bdc", _
      "LC6|(intensity)|03070a", _
      "LC7|(intensity)|1e3d57", _
      "LC8|(intensity)|4792cf", _
      "LWiz|(intensity)|183247", _
      "LW8|(intensity)|2c5b80", _
      "LW7|(intensity)|193349", _
      "LW6|(intensity)|20415c", _
      "LW5|(intensity)|05090d", _
      "LW2|(intensity)|50a3e7", _
      "LW1|(intensity)|4fa0e3", _
      "LEBR|(intensity)|080f16", _
      "LPC4|(intensity)|000101", _
      "LSC2|(intensity)|4fa1e5", _
      "LF3|(intensity)|173044", _
      "LF2|(intensity)|4a97d6", _
      "LF1|(intensity)|010203", _
      "LPC3|(intensity)|366e9c", _
      "LPC2|(intensity)|2a567a", _
      "LPC1|(intensity)|0c1924", _
      "LTW2|(intensity)|080f16", _
      "LCC3|(intensity)|2a5579", _
      "LCC1|(intensity)|000101", _
      "LMet2|(intensity)|4d9ddf", _
      "LMet1|(intensity)|4ea0e3", _
      "LM4|(intensity)|254c6c", _
      "LM2|(intensity)|3e7eb3", _
      "LSA|(intensity)|000000", _
      "LH9|(intensity)|162d40", _
      "LH8|(intensity)|3a76a7", _
      "LH7|(intensity)|081118", _
      "LH6|(intensity)|3a76a7", _
      "LH5|(intensity)|162d40", _
      "LH4|(intensity)|4792cf", _
      "LH3|(intensity)|1a344a", _
      "LH2|(intensity)|30638c", _
      "LH1|(intensity)|3975a6", _
      "LPR1|(intensity)|102230", _
      "LPR2|(intensity)|010304", _
      "LPR6|(intensity)|3d7db1", _
      "LPR5|(intensity)|3d7db2", _
      "LPR4|(intensity)|275071", _
      "LMR2|(intensity)|50a3e8", _
      "LCR2|(intensity)|448bc6", _
      "LCR1|(intensity)|0d1a25", _
      "LRI|(intensity)|000001", _
      "LLI|(intensity)|122535", _
      "LLO|(intensity)|4c9bdc", _
      "LSR|(intensity)|04070b", _
      "LSL|(intensity)|162d40" _
      )
  End With
  With .AddStep(0.96667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|244a69", _
      "LS1|(intensity)|010304", _
      "LS4|(intensity)|020405", _
      "LSwC3|(intensity)|0f1f2c", _
      "LCWiz|(intensity)|132737", _
      "LLWiz|(intensity)|264e6f", _
      "LC1|(intensity)|4e9fe2", _
      "LC2|(intensity)|081017", _
      "LC3|(intensity)|4894d1", _
      "LC4|(intensity)|081017", _
      "LC5|(intensity)|4d9ee0", _
      "LC6|(intensity)|020406", _
      "LC7|(intensity)|224561", _
      "LC8|(intensity)|468eca", _
      "LWiz|(intensity)|132636", _
      "LW8|(intensity)|264d6d", _
      "LW7|(intensity)|132838", _
      "LW6|(intensity)|1a354b", _
      "LW5|(intensity)|030608", _
      "LW1|(intensity)|4e9fe1", _
      "LEBR|(intensity)|04090d", _
      "LSC2|(intensity)|4fa2e6", _
      "LF3|(intensity)|1f3e59", _
      "LF2|(intensity)|4790cd", _
      "LF1|(intensity)|020405", _
      "LPC3|(intensity)|3c7baf", _
      "LPC2|(intensity)|31648d", _
      "LPC1|(intensity)|122433", _
      "LTW2|(intensity)|0a151e", _
      "LTW1|(intensity)|50a3e7", _
      "LCC3|(intensity)|275172", _
      "LMet4|(intensity)|50a3e7", _
      "LMet3|(intensity)|000101", _
      "LMet2|(intensity)|4b99d9", _
      "LMet1|(intensity)|4e9fe1", _
      "LM5|(intensity)|50a2e6", _
      "LM4|(intensity)|2c5a7f", _
      "LM2|(intensity)|3872a2", _
      "LH9|(intensity)|1d3a53", _
      "LH8|(intensity)|336995", _
      "LH7|(intensity)|0c1822", _
      "LH6|(intensity)|336995", _
      "LH5|(intensity)|1d3a53", _
      "LH4|(intensity)|4389c2", _
      "LH3|(intensity)|20405b", _
      "LH2|(intensity)|2a5579", _
      "LH1|(intensity)|336995", _
      "LPR1|(intensity)|0c1822", _
      "LPR6|(intensity)|4287c0", _
      "LPR5|(intensity)|4287c0", _
      "LPR4|(intensity)|224562", _
      "LCR2|(intensity)|3f80b5", _
      "LCR1|(intensity)|122434", _
      "LRI|(intensity)|000101", _
      "LRO|(intensity)|50a3e7", _
      "LLI|(intensity)|183146", _
      "LLO|(intensity)|4995d4", _
      "LSR|(intensity)|020406", _
      "LSL|(intensity)|183146" _
      )
  End With
  With .AddStep(1.00000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|1e3c56", _
      "LX|(intensity)|000001", _
      "LS1|(intensity)|030608", _
      "LS4|(intensity)|030609", _
      "LSwC3|(intensity)|0f1e2a", _
      "LCWiz|(intensity)|183246", _
      "LLWiz|(intensity)|2d5c83", _
      "LC1|(intensity)|4fa2e6", _
      "LC2|(intensity)|060b10", _
      "LC3|(intensity)|4b98d8", _
      "LC4|(intensity)|060b10", _
      "LC5|(intensity)|4ea0e3", _
      "LC6|(intensity)|010102", _
      "LC7|(intensity)|275071", _
      "LC8|(intensity)|4388c1", _
      "LWiz|(intensity)|0e1c28", _
      "LW9|(intensity)|4fa2e6", _
      "LW8|(intensity)|1f405a", _
      "LW7|(intensity)|0f1e2b", _
      "LW6|(intensity)|14293b", _
      "LW5|(intensity)|020405", _
      "LW2|(intensity)|50a3e8", _
      "LW1|(intensity)|4c9bdc", _
      "LEBR|(intensity)|030608", _
      "LPC5|(intensity)|000001", _
      "LSC2|(intensity)|50a3e7", _
      "LF3|(intensity)|264d6e", _
      "LF2|(intensity)|4389c2", _
      "LF1|(intensity)|04080b", _
      "LPC3|(intensity)|4286be", _
      "LPC2|(intensity)|3771a0", _
      "LPC1|(intensity)|173044", _
      "LTW2|(intensity)|0f1e2b", _
      "LTW1|(intensity)|4fa2e6", _
      "LCC3|(intensity)|285173", _
      "LCC1|(intensity)|010203", _
      "LMet3|(intensity)|000000", _
      "LMet2|(intensity)|4994d2", _
      "LMet1|(intensity)|4c9bdd", _
      "LM5|(intensity)|50a3e7", _
      "LM4|(intensity)|336793", _
      "LM2|(intensity)|326690", _
      "LH9|(intensity)|234866", _
      "LH8|(intensity)|2d5c82", _
      "LH7|(intensity)|10212e", _
      "LH6|(intensity)|2d5c82", _
      "LH5|(intensity)|234866", _
      "LH4|(intensity)|3e7fb4", _
      "LH3|(intensity)|254b6b", _
      "LH2|(intensity)|264d6e", _
      "LH1|(intensity)|2d5c82", _
      "LPR1|(intensity)|091219", _
      "LPR2|(intensity)|020406", _
      "LPR6|(intensity)|468fcc", _
      "LPR5|(intensity)|468fcc", _
      "LPR4|(intensity)|1c3a52", _
      "LMR2|(intensity)|50a3e7", _
      "LCR2|(intensity)|3973a4", _
      "LCR1|(intensity)|183045", _
      "LRI|(intensity)|010102", _
      "LLI|(intensity)|1f3f59", _
      "LLO|(intensity)|468fca", _
      "LSR|(intensity)|010102", _
      "LSL|(intensity)|1b3850" _
      )
  End With
  With .AddStep(1.03333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|173044", _
      "LX|(intensity)|000101", _
      "LS1|(intensity)|04090d", _
      "LS4|(intensity)|050a0e", _
      "LSwC3|(intensity)|10202e", _
      "LSwC2|(intensity)|50a3e7", _
      "LCWiz|(intensity)|1e3e58", _
      "LLWiz|(intensity)|346995", _
      "LC1|(intensity)|50a2e6", _
      "LC2|(intensity)|04080b", _
      "LC3|(intensity)|4c9cdd", _
      "LC4|(intensity)|04080b", _
      "LC5|(intensity)|4fa1e4", _
      "LC6|(intensity)|000101", _
      "LC7|(intensity)|2e5d85", _
      "LC8|(intensity)|3e7eb3", _
      "LWiz|(intensity)|0a141d", _
      "LW9|(intensity)|4fa0e4", _
      "LW8|(intensity)|193349", _
      "LW7|(intensity)|0b161f", _
      "LW6|(intensity)|0f1e2b", _
      "LW5|(intensity)|010203", _
      "LW1|(intensity)|4a97d6", _
      "LEBR|(intensity)|020406", _
      "LPC5|(intensity)|000000", _
      "LPC4|(intensity)|020406", _
      "LSC2|(intensity)|50a3e8", _
      "LF3|(intensity)|2d5b82", _
      "LF2|(intensity)|3e7fb5", _
      "LF1|(intensity)|060c11", _
      "LPC3|(intensity)|468fcb", _
      "LPC2|(intensity)|3d7db1", _
      "LPC1|(intensity)|1e3d57", _
      "LTW2|(intensity)|14293a", _
      "LCC3|(intensity)|2a577b", _
      "LCC1|(intensity)|020305", _
      "LMet2|(intensity)|468eca", _
      "LMet1|(intensity)|4996d5", _
      "LM5|(intensity)|50a3e8", _
      "LM4|(intensity)|3974a5", _
      "LM2|(intensity)|2b587d", _
      "LSA|(intensity)|000101", _
      "LH9|(intensity)|295578", _
      "LH8|(intensity)|264f6f", _
      "LH7|(intensity)|152c3e", _
      "LH6|(intensity)|264f6f", _
      "LH5|(intensity)|295578", _
      "LH4|(intensity)|3873a4", _
      "LH3|(intensity)|295377", _
      "LH2|(intensity)|234866", _
      "LH1|(intensity)|275071", _
      "LPR1|(intensity)|060d12", _
      "LPR2|(intensity)|04090c", _
      "LPR6|(intensity)|4995d4", _
      "LPR5|(intensity)|4995d4", _
      "LPR4|(intensity)|172e42", _
      "LCR2|(intensity)|326691", _
      "LCR1|(intensity)|1e3d57", _
      "LRO|(intensity)|50a3e8", _
      "LLI|(intensity)|244a69", _
      "LLO|(intensity)|4286bf", _
      "LSR|(intensity)|000101", _
      "LSL|(intensity)|214460" _
      )
  End With
  With .AddStep(1.06667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|122534", _
      "LS1|(intensity)|070e15", _
      "LS4|(intensity)|081017", _
      "LSwC3|(intensity)|122535", _
      "LSwC2|(intensity)|50a2e6", _
      "LSwC1|(intensity)|4ea0e3", _
      "LCWiz|(intensity)|254c6c", _
      "LLWiz|(intensity)|3975a6", _
      "LC1|(intensity)|50a3e7", _
      "LC2|(intensity)|020507", _
      "LC3|(intensity)|4e9fe1", _
      "LC4|(intensity)|020507", _
      "LC5|(intensity)|4fa2e6", _
      "LC7|(intensity)|356b98", _
      "LC8|(intensity)|3872a2", _
      "LWiz|(intensity)|070e13", _
      "LW9|(intensity)|4e9fe2", _
      "LW8|(intensity)|132738", _
      "LW7|(intensity)|070f15", _
      "LW6|(intensity)|0b1620", _
      "LW5|(intensity)|010102", _
      "LW1|(intensity)|4791cd", _
      "LMLR|(intensity)|000001", _
      "LEBR|(intensity)|010304", _
      "LPC4|(intensity)|03070a", _
      "LSC3|(intensity)|000001", _
      "LSC2|(intensity)|50a3e7", _
      "LF3|(intensity)|346a96", _
      "LF2|(intensity)|3974a5", _
      "LF1|(intensity)|091119", _
      "LPC3|(intensity)|4a97d7", _
      "LPC2|(intensity)|4287c0", _
      "LPC1|(intensity)|254c6c", _
      "LTW2|(intensity)|1a354b", _
      "LTW1|(intensity)|4fa0e4", _
      "LCC3|(intensity)|2f5f87", _
      "LCC1|(intensity)|020506", _
      "LMet4|(intensity)|50a2e6", _
      "LMet2|(intensity)|4186be", _
      "LMet1|(intensity)|468fcb", _
      "LM4|(intensity)|3e7fb4", _
      "LM2|(intensity)|254c6b", _
      "LM1|(intensity)|000101", _
      "LSA|(intensity)|010203", _
      "LH9|(intensity)|30628c", _
      "LH8|(intensity)|20415c", _
      "LH7|(intensity)|1c3850", _
      "LH6|(intensity)|20415c", _
      "LH5|(intensity)|30638c", _
      "LH4|(intensity)|326792", _
      "LH3|(intensity)|2b577c", _
      "LH2|(intensity)|234765", _
      "LH1|(intensity)|20415c", _
      "LPR1|(intensity)|04080c", _
      "LPR2|(intensity)|070e14", _
      "LPR6|(intensity)|4c9adb", _
      "LPR5|(intensity)|4c9bdc", _
      "LPR4|(intensity)|112331", _
      "LCR2|(intensity)|2b587d", _
      "LCR1|(intensity)|254c6b", _
      "LRI|(intensity)|010203", _
      "LLI|(intensity)|295376", _
      "LLO|(intensity)|3d7cb0", _
      "LSL|(intensity)|275072" _
      )
  End With
  With .AddStep(1.10000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|0d1b27", _
      "LS1|(intensity)|0b161f", _
      "LS2|(intensity)|000101", _
      "LS4|(intensity)|0c1822", _
      "LS6|(intensity)|50a3e7", _
      "LSwC3|(intensity)|162e41", _
      "LSwC2|(intensity)|4fa2e5", _
      "LSwC1|(intensity)|4e9ee1", _
      "LCWiz|(intensity)|2c5a7f", _
      "LLWiz|(intensity)|3f80b5", _
      "LC2|(intensity)|010203", _
      "LC3|(intensity)|4fa1e5", _
      "LC4|(intensity)|010203", _
      "LC5|(intensity)|50a2e7", _
      "LC7|(intensity)|3a77a9", _
      "LC8|(intensity)|31648e", _
      "LWiz|(intensity)|04080b", _
      "LW9|(intensity)|4d9edf", _
      "LW8|(intensity)|0e1d29", _
      "LW7|(intensity)|050a0e", _
      "LW6|(intensity)|081016", _
      "LW5|(intensity)|000101", _
      "LW1|(intensity)|438ac4", _
      "LMLR|(intensity)|000101", _
      "LEBR|(intensity)|010102", _
      "LPC4|(intensity)|050a0f", _
      "LSC1|(intensity)|50a3e7", _
      "LF3|(intensity)|3a77a9", _
      "LF2|(intensity)|336893", _
      "LF1|(intensity)|0c1923", _
      "LPC3|(intensity)|4c9bdc", _
      "LPC2|(intensity)|468fcb", _
      "LPC1|(intensity)|2c5a80", _
      "LTW2|(intensity)|20415c", _
      "LTW1|(intensity)|4d9ee0", _
      "LCC3|(intensity)|346b98", _
      "LCC1|(intensity)|04070b", _
      "LMet4|(intensity)|4fa1e4", _
      "LMet3|(intensity)|000101", _
      "LMet2|(intensity)|3d7caf", _
      "LMet1|(intensity)|4287bf", _
      "LM4|(intensity)|4389c2", _
      "LM2|(intensity)|1f3f59", _
      "LM1|(intensity)|010102", _
      "LSA|(intensity)|010304", _
      "LH9|(intensity)|37709f", _
      "LH8|(intensity)|193349", _
      "LH7|(intensity)|224663", _
      "LH6|(intensity)|193449", _
      "LH5|(intensity)|37709f", _
      "LH4|(intensity)|2d5b81", _
      "LH3|(intensity)|2a567a", _
      "LH2|(intensity)|244a69", _
      "LH1|(intensity)|193349", _
      "LPR1|(intensity)|030609", _
      "LPR2|(intensity)|0a141d", _
      "LPR6|(intensity)|4e9fe1", _
      "LPR5|(intensity)|4e9fe2", _
      "LPR4|(intensity)|0c1822", _
      "LCR2|(intensity)|244a69", _
      "LCR1|(intensity)|2c5a7f", _
      "LRI|(intensity)|020305", _
      "LLI|(intensity)|2b577c", _
      "LLO|(intensity)|37709f", _
      "LSL|(intensity)|2e5d84" _
      )
  End With
  With .AddStep(1.13333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|0a141c", _
      "LX|(intensity)|010203", _
      "LS5|(intensity)|50a3e7", _
      "LS1|(intensity)|0e1e2a", _
      "LS2|(intensity)|010202", _
      "LS4|(intensity)|10212f", _
      "LSwC3|(intensity)|1b384f", _
      "LSwC2|(intensity)|4fa1e5", _
      "LSwC1|(intensity)|4c9cdd", _
      "LCWiz|(intensity)|336793", _
      "LLWiz|(intensity)|4389c2", _
      "LC2|(intensity)|000101", _
      "LC3|(intensity)|50a2e6", _
      "LC4|(intensity)|000101", _
      "LC5|(intensity)|50a3e7", _
      "LC6|(intensity)|000000", _
      "LC7|(intensity)|4082b9", _
      "LC8|(intensity)|2a567a", _
      "LWiz|(intensity)|030508", _
      "LW9|(intensity)|4c9bdc", _
      "LW8|(intensity)|0a141d", _
      "LW7|(intensity)|03070a", _
      "LW6|(intensity)|050a0e", _
      "LW5|(intensity)|000000", _
      "LW1|(intensity)|3f81b7", _
      "LEBR|(intensity)|000001", _
      "LPC4|(intensity)|081017", _
      "LSC3|(intensity)|000101", _
      "LF3|(intensity)|4083ba", _
      "LF2|(intensity)|2c5a80", _
      "LF1|(intensity)|112332", _
      "LPC3|(intensity)|4d9ee0", _
      "LPC2|(intensity)|4996d4", _
      "LPC1|(intensity)|336994", _
      "LTW2|(intensity)|275071", _
      "LTW1|(intensity)|4b9adb", _
      "LCC3|(intensity)|3b78ab", _
      "LCC1|(intensity)|060c11", _
      "LMet4|(intensity)|4d9ee0", _
      "LMet3|(intensity)|000000", _
      "LMet2|(intensity)|37709f", _
      "LMet1|(intensity)|3d7db1", _
      "LM4|(intensity)|4790cd", _
      "LM2|(intensity)|183247", _
      "LSA|(intensity)|020507", _
      "LH9|(intensity)|3d7cb1", _
      "LH8|(intensity)|132737", _
      "LH7|(intensity)|285375", _
      "LH6|(intensity)|14293a", _
      "LH5|(intensity)|3d7cb0", _
      "LH4|(intensity)|275172", _
      "LH3|(intensity)|275072", _
      "LH2|(intensity)|285375", _
      "LH1|(intensity)|132737", _
      "LPR1|(intensity)|020305", _
      "LPR2|(intensity)|0e1d2a", _
      "LPR6|(intensity)|4fa0e4", _
      "LPR5|(intensity)|4fa1e4", _
      "LPR4|(intensity)|091119", _
      "LCR2|(intensity)|1d3c55", _
      "LCR1|(intensity)|336894", _
      "LRI|(intensity)|04080b", _
      "LLI|(intensity)|2b587d", _
      "LLO|(intensity)|30628c", _
      "LSR|(intensity)|000000", _
      "LSL|(intensity)|356b98" _
      )
  End With
  With .AddStep(1.16667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|060d13", _
      "LX|(intensity)|020406", _
      "LS5|(intensity)|4fa2e6", _
      "LS1|(intensity)|122636", _
      "LS2|(intensity)|010304", _
      "LS3|(intensity)|000001", _
      "LS4|(intensity)|152c3e", _
      "LSwC3|(intensity)|224663", _
      "LSwC1|(intensity)|4b99d9", _
      "LCWiz|(intensity)|3974a4", _
      "LLWiz|(intensity)|4790cd", _
      "LC1|(intensity)|50a3e8", _
      "LC3|(intensity)|50a3e7", _
      "LC5|(intensity)|50a3e8", _
      "LC7|(intensity)|458dc8", _
      "LC8|(intensity)|234866", _
      "LWiz|(intensity)|020406", _
      "LW9|(intensity)|4996d4", _
      "LW8|(intensity)|070e14", _
      "LW7|(intensity)|020406", _
      "LW6|(intensity)|03070a", _
      "LW2|(intensity)|50a3e7", _
      "LW1|(intensity)|3a75a7", _
      "LMLR|(intensity)|000102", _
      "LEBR|(intensity)|000000", _
      "LPC4|(intensity)|0c1822", _
      "LSC3|(intensity)|000000", _
      "LSC2|(intensity)|50a2e6", _
      "LF3|(intensity)|458cc7", _
      "LF2|(intensity)|264e6e", _
      "LF1|(intensity)|172f42", _
      "LPC3|(intensity)|4ea0e3", _
      "LPC2|(intensity)|4c9bdc", _
      "LPC1|(intensity)|3a76a8", _
      "LTW2|(intensity)|2e5f87", _
      "LTW1|(intensity)|4996d5", _
      "LCC3|(intensity)|4083ba", _
      "LCC1|(intensity)|09131b", _
      "LMet4|(intensity)|4c9cdd", _
      "LMet2|(intensity)|31638d", _
      "LMet1|(intensity)|37709e", _
      "LM4|(intensity)|4a96d5", _
      "LM2|(intensity)|132636", _
      "LM1|(intensity)|000101", _
      "LSA|(intensity)|04070b", _
      "LH9|(intensity)|4286be", _
      "LH8|(intensity)|0e1d29", _
      "LH7|(intensity)|2f6089", _
      "LH6|(intensity)|0f1f2c", _
      "LH5|(intensity)|4184bb", _
      "LH4|(intensity)|244a69", _
      "LH3|(intensity)|224663", _
      "LH2|(intensity)|2e5e86", _
      "LH1|(intensity)|0e1e2a", _
      "LPR1|(intensity)|000000", _
      "LPR2|(intensity)|142839", _
      "LPR6|(intensity)|4fa2e6", _
      "LPR5|(intensity)|4fa2e5", _
      "LPR4|(intensity)|060c11", _
      "LMR2|(intensity)|4fa2e5", _
      "LCR2|(intensity)|162d40", _
      "LCR1|(intensity)|3a76a8", _
      "LRI|(intensity)|060c12", _
      "LRO|(intensity)|50a3e7", _
      "LLI|(intensity)|295376", _
      "LLO|(intensity)|295478", _
      "LSL|(intensity)|3b78ab" _
      )
  End With
  With .AddStep(1.20000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|04080c", _
      "LX|(intensity)|030609", _
      "LS5|(intensity)|4fa2e5", _
      "LS1|(intensity)|193348", _
      "LS2|(intensity)|020406", _
      "LS3|(intensity)|000000", _
      "LS4|(intensity)|1c3a52", _
      "LSwC3|(intensity)|295376", _
      "LSwC2|(intensity)|4ea0e3", _
      "LSwC1|(intensity)|4893d1", _
      "LCWiz|(intensity)|3e7fb4", _
      "LLWiz|(intensity)|4995d4", _
      "LC7|(intensity)|4995d3", _
      "LC8|(intensity)|1c3a52", _
      "LWiz|(intensity)|010203", _
      "LW9|(intensity)|468fca", _
      "LW8|(intensity)|050a0e", _
      "LW7|(intensity)|010203", _
      "LW6|(intensity)|020406", _
      "LW1|(intensity)|336995", _
      "LMLR|(intensity)|010203", _
      "LPC4|(intensity)|102130", _
      "LSC2|(intensity)|50a3e7", _
      "LF3|(intensity)|4894d1", _
      "LF2|(intensity)|20415c", _
      "LF1|(intensity)|1d3c54", _
      "LPC3|(intensity)|4fa1e4", _
      "LPC2|(intensity)|4e9fe2", _
      "LPC1|(intensity)|3f81b6", _
      "LTW2|(intensity)|356d9a", _
      "LTW1|(intensity)|4790cd", _
      "LCC3|(intensity)|458dc8", _
      "LCC1|(intensity)|0d1a24", _
      "LMet4|(intensity)|4b9ada", _
      "LMet2|(intensity)|2a567a", _
      "LMet1|(intensity)|31648e", _
      "LM4|(intensity)|4c9bdc", _
      "LM2|(intensity)|0e1c28", _
      "LM1|(intensity)|010202", _
      "LSA|(intensity)|060c12", _
      "LH9|(intensity)|468eca", _
      "LH8|(intensity)|0a151e", _
      "LH7|(intensity)|366e9c", _
      "LH6|(intensity)|0d1a24", _
      "LH5|(intensity)|448bc5", _
      "LH4|(intensity)|234866", _
      "LH3|(intensity)|1c3a52", _
      "LH2|(intensity)|356b98", _
      "LH1|(intensity)|0a151e", _
      "LPR2|(intensity)|1a344a", _
      "LPR6|(intensity)|50a3e7", _
      "LPR4|(intensity)|030709", _
      "LMR2|(intensity)|4e9fe2", _
      "LCR2|(intensity)|112433", _
      "LCR1|(intensity)|3f81b7", _
      "LRI|(intensity)|091219", _
      "LRO|(intensity)|50a2e6", _
      "LLI|(intensity)|244a69", _
      "LLO|(intensity)|234765", _
      "LSL|(intensity)|4083ba" _
      )
  End With
  With .AddStep(1.23333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|030609", _
      "LX|(intensity)|04090d", _
      "LS5|(intensity)|4fa0e4", _
      "LS1|(intensity)|1f405b", _
      "LS2|(intensity)|04080b", _
      "LS4|(intensity)|234866", _
      "LSwC3|(intensity)|2f6088", _
      "LSwC2|(intensity)|4d9ee0", _
      "LSwC1|(intensity)|458cc7", _
      "LCWiz|(intensity)|4389c2", _
      "LLWiz|(intensity)|4b9ada", _
      "LC2|(intensity)|000000", _
      "LC4|(intensity)|000000", _
      "LC7|(intensity)|4b99d9", _
      "LC8|(intensity)|152c3e", _
      "LWiz|(intensity)|000101", _
      "LW9|(intensity)|4286bf", _
      "LW8|(intensity)|03070a", _
      "LW7|(intensity)|010102", _
      "LW6|(intensity)|010203", _
      "LW1|(intensity)|2d5c82", _
      "LMLR|(intensity)|020406", _
      "LEBR|(intensity)|000001", _
      "LPC4|(intensity)|162c3f", _
      "LF3|(intensity)|4b9ada", _
      "LF2|(intensity)|193449", _
      "LF1|(intensity)|244a69", _
      "LPC3|(intensity)|4fa0e4", _
      "LPC2|(intensity)|4fa1e4", _
      "LPC1|(intensity)|448bc5", _
      "LTW2|(intensity)|3b78ab", _
      "LTW1|(intensity)|4287c0", _
      "LCC3|(intensity)|4a96d5", _
      "LCC1|(intensity)|10212f", _
      "LMet4|(intensity)|4894d2", _
      "LMet2|(intensity)|234866", _
      "LMet1|(intensity)|2d5b82", _
      "LM4|(intensity)|4d9ee0", _
      "LM2|(intensity)|0a141c", _
      "LM1|(intensity)|020507", _
      "LSA|(intensity)|09131b", _
      "LH9|(intensity)|4996d4", _
      "LH8|(intensity)|070e14", _
      "LH7|(intensity)|3c7aae", _
      "LH6|(intensity)|0c1822", _
      "LH5|(intensity)|4791cd", _
      "LH4|(intensity)|254b6a", _
      "LH3|(intensity)|173043", _
      "LH2|(intensity)|3a76a8", _
      "LH1|(intensity)|070e14", _
      "LPR1|(intensity)|000101", _
      "LPR2|(intensity)|20425e", _
      "LPR5|(intensity)|4fa2e6", _
      "LPR4|(intensity)|020305", _
      "LMR2|(intensity)|4d9cde", _
      "LCR2|(intensity)|0e1d2a", _
      "LCR1|(intensity)|448bc5", _
      "LRI|(intensity)|0d1a25", _
      "LRO|(intensity)|4fa2e5", _
      "LLI|(intensity)|1f405a", _
      "LLO|(intensity)|1c3951", _
      "LSL|(intensity)|458dc7" _
      )
  End With
  With .AddStep(1.26667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|020507", _
      "LX|(intensity)|070e15", _
      "LS5|(intensity)|4d9ee0", _
      "LS1|(intensity)|264d6d", _
      "LS2|(intensity)|070e13", _
      "LS4|(intensity)|2a567a", _
      "LS6|(intensity)|50a3e8", _
      "LSwC3|(intensity)|356d9b", _
      "LSwC2|(intensity)|4b9adb", _
      "LSwC1|(intensity)|4083ba", _
      "LCWiz|(intensity)|4790cd", _
      "LLWiz|(intensity)|4d9ddf", _
      "LC3|(intensity)|50a3e8", _
      "LC7|(intensity)|4c9cdd", _
      "LC8|(intensity)|10202d", _
      "LWiz|(intensity)|000000", _
      "LW9|(intensity)|3d7db2", _
      "LW8|(intensity)|020405", _
      "LW7|(intensity)|000101", _
      "LW6|(intensity)|010102", _
      "LW4|(intensity)|000001", _
      "LW3|(intensity)|000001", _
      "LW2|(intensity)|50a3e8", _
      "LW1|(intensity)|264d6e", _
      "LMLR|(intensity)|04080c", _
      "LEBR|(intensity)|000101", _
      "LPC4|(intensity)|1c3a52", _
      "LSC3|(intensity)|000001", _
      "LSC2|(intensity)|50a3e8", _
      "LSC1|(intensity)|50a3e8", _
      "LF3|(intensity)|4d9ee0", _
      "LF2|(intensity)|142839", _
      "LF1|(intensity)|2b587d", _
      "LPC3|(intensity)|4e9fe2", _
      "LPC1|(intensity)|4893d1", _
      "LTW2|(intensity)|4084bb", _
      "LTW1|(intensity)|3d7db1", _
      "LCC3|(intensity)|4c9cdd", _
      "LCC1|(intensity)|162d3f", _
      "LMet4|(intensity)|458cc7", _
      "LMet2|(intensity)|1d3b54", _
      "LMet1|(intensity)|295477", _
      "LM4|(intensity)|4fa0e3", _
      "LM3|(intensity)|000001", _
      "LM2|(intensity)|070e13", _
      "LM1|(intensity)|04090d", _
      "LSA|(intensity)|0d1b26", _
      "LH9|(intensity)|4c9bdc", _
      "LH8|(intensity)|04090d", _
      "LH7|(intensity)|4184bb", _
      "LH5|(intensity)|4894d2", _
      "LH4|(intensity)|285274", _
      "LH3|(intensity)|112433", _
      "LH2|(intensity)|4082b8", _
      "LH1|(intensity)|04090d", _
      "LPR1|(intensity)|010203", _
      "LPR3|(intensity)|000101", _
      "LPR2|(intensity)|285274", _
      "LPR6|(intensity)|50a3e8", _
      "LPR5|(intensity)|4fa1e5", _
      "LPR4|(intensity)|010202", _
      "LMR2|(intensity)|4b98d8", _
      "LCR2|(intensity)|0d1a25", _
      "LCR1|(intensity)|4894d2", _
      "LRI|(intensity)|122433", _
      "LRO|(intensity)|4ea0e3", _
      "LLI|(intensity)|19344a", _
      "LLO|(intensity)|162c3e", _
      "LSL|(intensity)|4894d2" _
      )
  End With
  With .AddStep(1.30000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|020405", _
      "LX|(intensity)|0b1721", _
      "LS5|(intensity)|4b9ada", _
      "LS1|(intensity)|2d5b81", _
      "LS2|(intensity)|0a151d", _
      "LS4|(intensity)|326590", _
      "LS6|(intensity)|50a2e6", _
      "LSwC3|(intensity)|3b78ab", _
      "LSwC2|(intensity)|4995d4", _
      "LSwC1|(intensity)|3c7aad", _
      "LCWiz|(intensity)|4a97d6", _
      "LLWiz|(intensity)|4d9cde", _
      "LC1|(intensity)|50a3e7", _
      "LC7|(intensity)|4e9fe2", _
      "LC8|(intensity)|0b1721", _
      "LW9|(intensity)|3872a1", _
      "LW8|(intensity)|010203", _
      "LW6|(intensity)|010202", _
      "LW2|(intensity)|50a3e7", _
      "LW1|(intensity)|20415c", _
      "LMLR|(intensity)|060d12", _
      "LEBR|(intensity)|000001", _
      "LPC4|(intensity)|234866", _
      "LSC3|(intensity)|010203", _
      "LSC2|(intensity)|50a2e6", _
      "LSC1|(intensity)|50a2e6", _
      "LF3|(intensity)|4e9fe2", _
      "LF2|(intensity)|0e1d2a", _
      "LF1|(intensity)|326690", _
      "LPC3|(intensity)|4d9ddf", _
      "LPC2|(intensity)|50a3e7", _
      "LPC1|(intensity)|4b9ada", _
      "LTW2|(intensity)|458dc9", _
      "LTW1|(intensity)|3872a2", _
      "LCC3|(intensity)|4e9fe2", _
      "LCC2|(intensity)|010102", _
      "LCC1|(intensity)|1c3951", _
      "LMet4|(intensity)|4083ba", _
      "LMet2|(intensity)|172f42", _
      "LMet1|(intensity)|275071", _
      "LM4|(intensity)|4fa2e6", _
      "LM2|(intensity)|04090c", _
      "LM1|(intensity)|070e13", _
      "LSA|(intensity)|122534", _
      "LH9|(intensity)|4d9ee0", _
      "LH8|(intensity)|030608", _
      "LH7|(intensity)|458cc7", _
      "LH6|(intensity)|0e1c28", _
      "LH5|(intensity)|4792cf", _
      "LH4|(intensity)|2d5d83", _
      "LH3|(intensity)|0d1a25", _
      "LH2|(intensity)|458cc7", _
      "LH1|(intensity)|030608", _
      "LPR2|(intensity)|2f6189", _
      "LPR5|(intensity)|4fa0e4", _
      "LPR4|(intensity)|000101", _
      "LMR2|(intensity)|4792cf", _
      "LCR1|(intensity)|4c9adb", _
      "LRI|(intensity)|172f42", _
      "LRO|(intensity)|4d9cde", _
      "LLI|(intensity)|132838", _
      "LLO|(intensity)|10212e", _
      "LSL|(intensity)|4b99d9" _
      )
  End With
  With .AddStep(1.33333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|020507", _
      "LX|(intensity)|10202e", _
      "LS5|(intensity)|4994d3", _
      "LS1|(intensity)|336894", _
      "LS2|(intensity)|0e1c28", _
      "LS4|(intensity)|3771a0", _
      "LSwC3|(intensity)|4083ba", _
      "LSwC2|(intensity)|468eca", _
      "LSwC1|(intensity)|376f9e", _
      "LCWiz|(intensity)|4c9bdc", _
      "LLWiz|(intensity)|4c9adb", _
      "LC1|(intensity)|4fa2e6", _
      "LC7|(intensity)|4fa2e5", _
      "LC8|(intensity)|080f16", _
      "LWiz|(intensity)|000101", _
      "LW9|(intensity)|31658f", _
      "LW8|(intensity)|010202", _
      "LW7|(intensity)|000000", _
      "LW4|(intensity)|000000", _
      "LW3|(intensity)|000000", _
      "LW2|(intensity)|50a2e6", _
      "LW1|(intensity)|19344a", _
      "LMLR|(intensity)|091119", _
      "LEBR|(intensity)|000000", _
      "LPC4|(intensity)|2a567a", _
      "LF3|(intensity)|4fa1e5", _
      "LF2|(intensity)|0a151e", _
      "LF1|(intensity)|3872a2", _
      "LPC3|(intensity)|4b9adb", _
      "LPC2|(intensity)|50a3e8", _
      "LPC1|(intensity)|4d9ddf", _
      "LTW2|(intensity)|4893d1", _
      "LTW1|(intensity)|326590", _
      "LCC3|(intensity)|4fa2e5", _
      "LCC2|(intensity)|000101", _
      "LCC1|(intensity)|224663", _
      "LMet4|(intensity)|3b78aa", _
      "LMet2|(intensity)|112433", _
      "LMet1|(intensity)|285173", _
      "LM4|(intensity)|50a3e7", _
      "LM3|(intensity)|000000", _
      "LM2|(intensity)|020507", _
      "LM1|(intensity)|0a141d", _
      "LSA|(intensity)|183145", _
      "LH9|(intensity)|4ea0e2", _
      "LH8|(intensity)|020405", _
      "LH7|(intensity)|4894d1", _
      "LH6|(intensity)|112433", _
      "LH5|(intensity)|458ec9", _
      "LH4|(intensity)|336995", _
      "LH3|(intensity)|091119", _
      "LH2|(intensity)|4893d1", _
      "LH1|(intensity)|020405", _
      "LPR1|(intensity)|020406", _
      "LPR2|(intensity)|366f9d", _
      "LPR5|(intensity)|4e9ee1", _
      "LMR2|(intensity)|438ac3", _
      "LCR2|(intensity)|0f1e2b", _
      "LCR1|(intensity)|4d9ddf", _
      "LRI|(intensity)|1d3b54", _
      "LRO|(intensity)|4a98d7", _
      "LLI|(intensity)|0e1c28", _
      "LLO|(intensity)|0b1720", _
      "LSR|(intensity)|000101", _
      "LSL|(intensity)|4d9dde" _
      )
  End With
  With .AddStep(1.36667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|04070a", _
      "LX|(intensity)|152a3c", _
      "LS5|(intensity)|468eca", _
      "LS1|(intensity)|3975a6", _
      "LS2|(intensity)|132838", _
      "LS4|(intensity)|3d7cb0", _
      "LS6|(intensity)|50a3e7", _
      "LSwC3|(intensity)|458cc7", _
      "LSwC2|(intensity)|4186be", _
      "LSwC1|(intensity)|30628b", _
      "LCWiz|(intensity)|4e9fe1", _
      "LLWiz|(intensity)|4a96d6", _
      "LC1|(intensity)|4fa2e5", _
      "LC2|(intensity)|000101", _
      "LC7|(intensity)|4fa2e6", _
      "LC8|(intensity)|04090d", _
      "LWiz|(intensity)|010203", _
      "LW9|(intensity)|2b587d", _
      "LW8|(intensity)|010102", _
      "LW6|(intensity)|000000", _
      "LW2|(intensity)|4fa1e5", _
      "LW1|(intensity)|132738", _
      "LMLR|(intensity)|0c1923", _
      "LPC4|(intensity)|31648d", _
      "LSC3|(intensity)|020406", _
      "LSC2|(intensity)|50a2e7", _
      "LF3|(intensity)|50a3e8", _
      "LF2|(intensity)|070f15", _
      "LF1|(intensity)|3d7eb2", _
      "LPC3|(intensity)|4994d2", _
      "LPC1|(intensity)|4e9fe2", _
      "LTW2|(intensity)|4b99d9", _
      "LTW1|(intensity)|2b587d", _
      "LCC3|(intensity)|50a2e7", _
      "LCC1|(intensity)|295376", _
      "LMet4|(intensity)|356b98", _
      "LMet2|(intensity)|0d1b26", _
      "LMet1|(intensity)|2b587c", _
      "LM4|(intensity)|4fa2e6", _
      "LM2|(intensity)|020405", _
      "LM1|(intensity)|0e1d29", _
      "LSA|(intensity)|1e3e58", _
      "LH9|(intensity)|4fa2e6", _
      "LH8|(intensity)|010203", _
      "LH7|(intensity)|4b99d9", _
      "LH6|(intensity)|162d40", _
      "LH5|(intensity)|4287bf", _
      "LH4|(intensity)|3a76a8", _
      "LH3|(intensity)|060b10", _
      "LH2|(intensity)|4b99d9", _
      "LH1|(intensity)|010102", _
      "LPR1|(intensity)|04070b", _
      "LPR2|(intensity)|3c7bae", _
      "LPR6|(intensity)|50a3e7", _
      "LPR5|(intensity)|4c9cdd", _
      "LPR4|(intensity)|000001", _
      "LMR2|(intensity)|3f80b6", _
      "LCR2|(intensity)|122636", _
      "LCR1|(intensity)|4e9fe2", _
      "LRI|(intensity)|244968", _
      "LRO|(intensity)|4892d0", _
      "LLI|(intensity)|0a141c", _
      "LLO|(intensity)|081017", _
      "LSR|(intensity)|010102", _
      "LSL|(intensity)|4e9fe1" _
      )
  End With
  With .AddStep(1.40000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|060d13", _
      "LX|(intensity)|1b364d", _
      "LS5|(intensity)|4186be", _
      "LS1|(intensity)|3f80b6", _
      "LS2|(intensity)|193349", _
      "LS3|(intensity)|000101", _
      "LS4|(intensity)|4185bd", _
      "LSwC3|(intensity)|4892d0", _
      "LSwC2|(intensity)|3d7cb0", _
      "LSwC1|(intensity)|295477", _
      "LCWiz|(intensity)|4fa1e5", _
      "LLWiz|(intensity)|4892d0", _
      "LC1|(intensity)|4fa0e3", _
      "LC8|(intensity)|030508", _
      "LWiz|(intensity)|010304", _
      "LW9|(intensity)|244a69", _
      "LW8|(intensity)|000101", _
      "LW3|(intensity)|000101", _
      "LW2|(intensity)|4fa1e4", _
      "LW1|(intensity)|0f1f2c", _
      "LMLR|(intensity)|112331", _
      "LPC4|(intensity)|3771a0", _
      "LSC3|(intensity)|04090d", _
      "LSC2|(intensity)|4fa2e6", _
      "LSC1|(intensity)|4fa1e5", _
      "LF2|(intensity)|04090d", _
      "LF1|(intensity)|4288c1", _
      "LPC3|(intensity)|458ec9", _
      "LPC2|(intensity)|4fa2e5", _
      "LPC1|(intensity)|4fa1e4", _
      "LTW2|(intensity)|4d9ddf", _
      "LTW1|(intensity)|244b6a", _
      "LCC3|(intensity)|50a3e7", _
      "LCC2|(intensity)|010202", _
      "LCC1|(intensity)|2f6089", _
      "LMet4|(intensity)|2e5f86", _
      "LMet2|(intensity)|0a131c", _
      "LMet1|(intensity)|30618a", _
      "LM4|(intensity)|50a2e6", _
      "LM2|(intensity)|010203", _
      "LM1|(intensity)|14293a", _
      "LSA|(intensity)|254b6b", _
      "LH9|(intensity)|50a3e7", _
      "LH8|(intensity)|000101", _
      "LH7|(intensity)|4d9ddf", _
      "LH6|(intensity)|1c3a52", _
      "LH5|(intensity)|3e7eb3", _
      "LH4|(intensity)|4082b9", _
      "LH3|(intensity)|03070a", _
      "LH2|(intensity)|4d9cde", _
      "LH1|(intensity)|000101", _
      "LPR1|(intensity)|060d12", _
      "LPR2|(intensity)|4185bd", _
      "LPR5|(intensity)|4a96d5", _
      "LPR4|(intensity)|000000", _
      "LMR2|(intensity)|3975a7", _
      "LCR2|(intensity)|173043", _
      "LCR1|(intensity)|4fa1e5", _
      "LRI|(intensity)|2b577c", _
      "LRO|(intensity)|448bc5", _
      "LLI|(intensity)|060d13", _
      "LLO|(intensity)|050a0f", _
      "LSL|(intensity)|4fa1e5" _
      )
  End With
  With .AddStep(1.43333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|0a151d", _
      "LX|(intensity)|214360", _
      "LS5|(intensity)|3c7aad", _
      "LS1|(intensity)|4389c3", _
      "LS2|(intensity)|1f3f59", _
      "LS4|(intensity)|4389c3", _
      "LS6|(intensity)|4fa1e4", _
      "LSwC3|(intensity)|4a98d8", _
      "LSwC2|(intensity)|3770a0", _
      "LSwC1|(intensity)|224664", _
      "LCWiz|(intensity)|4fa2e6", _
      "LLWiz|(intensity)|448bc5", _
      "LC1|(intensity)|4d9edf", _
      "LC7|(intensity)|50a3e7", _
      "LC8|(intensity)|020405", _
      "LWiz|(intensity)|020406", _
      "LW9|(intensity)|1e3d56", _
      "LW6|(intensity)|000101", _
      "LW5|(intensity)|000101", _
      "LW4|(intensity)|000101", _
      "LW2|(intensity)|4e9fe2", _
      "LW1|(intensity)|0b1721", _
      "LMLR|(intensity)|172e41", _
      "LPC4|(intensity)|3d7db1", _
      "LSC3|(intensity)|070e14", _
      "LSC2|(intensity)|4fa0e4", _
      "LSC1|(intensity)|4ea0e3", _
      "LF3|(intensity)|50a3e7", _
      "LF2|(intensity)|030608", _
      "LF1|(intensity)|4790cc", _
      "LPC3|(intensity)|4185bd", _
      "LPC2|(intensity)|4ea0e2", _
      "LPC1|(intensity)|4fa2e6", _
      "LTW2|(intensity)|4ea0e3", _
      "LTW1|(intensity)|1e3c56", _
      "LCC3|(intensity)|4fa2e6", _
      "LCC2|(intensity)|020507", _
      "LCC1|(intensity)|356d9b", _
      "LMet4|(intensity)|275072", _
      "LMet2|(intensity)|070e14", _
      "LMet1|(intensity)|356b98", _
      "LM4|(intensity)|50a3e8", _
      "LM3|(intensity)|000101", _
      "LM2|(intensity)|000000", _
      "LM1|(intensity)|1a364d", _
      "LSA|(intensity)|2c5a80", _
      "LH7|(intensity)|4e9fe2", _
      "LH6|(intensity)|234765", _
      "LH5|(intensity)|3872a2", _
      "LH4|(intensity)|458cc7", _
      "LH3|(intensity)|020406", _
      "LH2|(intensity)|4e9fe1", _
      "LPR1|(intensity)|09131b", _
      "LPR2|(intensity)|468fcb", _
      "LPR5|(intensity)|4690cc", _
      "LMR2|(intensity)|336995", _
      "LCR2|(intensity)|1d3b53", _
      "LCR1|(intensity)|50a2e7", _
      "LRI|(intensity)|326590", _
      "LRO|(intensity)|3f81b8", _
      "LLI|(intensity)|04080c", _
      "LLO|(intensity)|030609", _
      "LSR|(intensity)|010203", _
      "LSL|(intensity)|50a3e7" _
      )
  End With
  With .AddStep(1.46667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|0e1c27", _
      "LX|(intensity)|274f70", _
      "LS5|(intensity)|356d9b", _
      "LS1|(intensity)|4790cd", _
      "LS2|(intensity)|264e6e", _
      "LS4|(intensity)|448bc5", _
      "LS6|(intensity)|4e9fe2", _
      "LSwC3|(intensity)|4d9ddf", _
      "LSwC2|(intensity)|30638c", _
      "LSwC1|(intensity)|1c3951", _
      "LCWiz|(intensity)|4fa2e5", _
      "LLWiz|(intensity)|3f81b7", _
      "LC1|(intensity)|4a98d8", _
      "LC8|(intensity)|010304", _
      "LWiz|(intensity)|030709", _
      "LW9|(intensity)|183045", _
      "LW8|(intensity)|010203", _
      "LW7|(intensity)|010202", _
      "LW6|(intensity)|010203", _
      "LW5|(intensity)|010203", _
      "LW4|(intensity)|010203", _
      "LW3|(intensity)|010202", _
      "LW2|(intensity)|4d9cde", _
      "LW1|(intensity)|081016", _
      "LMLR|(intensity)|1d3b53", _
      "LPC4|(intensity)|4287c0", _
      "LSC3|(intensity)|0a151e", _
      "LSC2|(intensity)|4e9fe1", _
      "LSC1|(intensity)|4d9ee0", _
      "LF2|(intensity)|020405", _
      "LF1|(intensity)|4893d1", _
      "LPC3|(intensity)|3d7cb0", _
      "LPC2|(intensity)|4e9ee1", _
      "LPC1|(intensity)|50a3e7", _
      "LTW2|(intensity)|4fa1e4", _
      "LTW1|(intensity)|183145", _
      "LCC3|(intensity)|50a3e7", _
      "LCC2|(intensity)|04080c", _
      "LCC1|(intensity)|3c7aad", _
      "LMet4|(intensity)|21435f", _
      "LMet2|(intensity)|050a0e", _
      "LMet1|(intensity)|3b78ab", _
      "LM3|(intensity)|010203", _
      "LM1|(intensity)|21435f", _
      "LSA|(intensity)|336894", _
      "LH9|(intensity)|50a2e6", _
      "LH8|(intensity)|000102", _
      "LH7|(intensity)|4fa1e4", _
      "LH6|(intensity)|2a567a", _
      "LH5|(intensity)|31648e", _
      "LH4|(intensity)|4995d3", _
      "LH3|(intensity)|010203", _
      "LH2|(intensity)|4fa0e4", _
      "LH1|(intensity)|000000", _
      "LPR1|(intensity)|0d1b26", _
      "LPR3|(intensity)|010202", _
      "LPR2|(intensity)|4996d5", _
      "LPR5|(intensity)|4288c0", _
      "LMR2|(intensity)|2c5a80", _
      "LCR2|(intensity)|244967", _
      "LCR1|(intensity)|50a3e7", _
      "LRI|(intensity)|3771a0", _
      "LRO|(intensity)|3975a6", _
      "LLI|(intensity)|030508", _
      "LLO|(intensity)|020406", _
      "LSR|(intensity)|020405", _
      "LSL|(intensity)|50a3e8" _
      )
  End With
  With .AddStep(1.50000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|122534", _
      "LX|(intensity)|2b587d", _
      "LS5|(intensity)|2f5f87", _
      "LS1|(intensity)|4a97d6", _
      "LS2|(intensity)|2d5b81", _
      "LS3|(intensity)|010102", _
      "LS4|(intensity)|4389c2", _
      "LS6|(intensity)|4d9ee0", _
      "LSwC3|(intensity)|4ea0e3", _
      "LSwC2|(intensity)|2b577c", _
      "LSwC1|(intensity)|162e41", _
      "LLWiz|(intensity)|3a76a7", _
      "LC1|(intensity)|4792cf", _
      "LC8|(intensity)|010102", _
      "LWiz|(intensity)|060d12", _
      "LW9|(intensity)|132636", _
      "LW8|(intensity)|010304", _
      "LW7|(intensity)|010304", _
      "LW6|(intensity)|010304", _
      "LW5|(intensity)|010304", _
      "LW4|(intensity)|010304", _
      "LW3|(intensity)|010304", _
      "LW2|(intensity)|4a97d6", _
      "LW1|(intensity)|060b10", _
      "LMLR|(intensity)|244967", _
      "LMR|(intensity)|50a3e7", _
      "LPC4|(intensity)|468fcb", _
      "LSC3|(intensity)|0f1e2b", _
      "LSC2|(intensity)|4d9ddf", _
      "LSC1|(intensity)|4c9bdc", _
      "LF3|(intensity)|50a3e8", _
      "LF2|(intensity)|010202", _
      "LF1|(intensity)|4893d0", _
      "LPC3|(intensity)|37709f", _
      "LPC2|(intensity)|4c9bdb", _
      "LPC1|(intensity)|4fa2e6", _
      "LTW2|(intensity)|4fa2e5", _
      "LTW1|(intensity)|132637", _
      "LCC3|(intensity)|50a3e8", _
      "LCC2|(intensity)|060d12", _
      "LCC1|(intensity)|4083ba", _
      "LMet4|(intensity)|1b364d", _
      "LMet2|(intensity)|04070a", _
      "LMet1|(intensity)|4184bb", _
      "LM4|(intensity)|50a3e7", _
      "LM3|(intensity)|010304", _
      "LM1|(intensity)|275072", _
      "LSA|(intensity)|3975a6", _
      "LH9|(intensity)|50a3e7", _
      "LH8|(intensity)|000101", _
      "LH6|(intensity)|31658f", _
      "LH5|(intensity)|2b577b", _
      "LH4|(intensity)|4b9ada", _
      "LH3|(intensity)|010102", _
      "LH2|(intensity)|4fa2e6", _
      "LPR1|(intensity)|122534", _
      "LPR3|(intensity)|010204", _
      "LPR2|(intensity)|4c9adb", _
      "LPR6|(intensity)|50a3e8", _
      "LPR5|(intensity)|3e7eb3", _
      "LPR4|(intensity)|000101", _
      "LMR2|(intensity)|264d6e", _
      "LCR2|(intensity)|2a567b", _
      "LRI|(intensity)|3c7bae", _
      "LRO|(intensity)|336894", _
      "LLI|(intensity)|010304", _
      "LLO|(intensity)|010203", _
      "LSR|(intensity)|04080b", _
      "LSL|(intensity)|50a2e6" _
      )
  End With
  With .AddStep(1.53333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|183145", _
      "LX|(intensity)|2e5e85", _
      "LS5|(intensity)|275071", _
      "LS1|(intensity)|4c9bdc", _
      "LS2|(intensity)|326590", _
      "LS3|(intensity)|020405", _
      "LS4|(intensity)|4083ba", _
      "LS6|(intensity)|4b9ada", _
      "LSwC3|(intensity)|4fa1e5", _
      "LSwC2|(intensity)|254c6c", _
      "LSwC1|(intensity)|112331", _
      "LCWiz|(intensity)|4fa2e6", _
      "LLWiz|(intensity)|346995", _
      "LC1|(intensity)|448bc5", _
      "LC2|(intensity)|000000", _
      "LC7|(intensity)|50a3e8", _
      "LC8|(intensity)|000101", _
      "LWiz|(intensity)|09131b", _
      "LW9|(intensity)|0f1e2a", _
      "LW8|(intensity)|020507", _
      "LW7|(intensity)|020406", _
      "LW6|(intensity)|020406", _
      "LW5|(intensity)|020507", _
      "LW4|(intensity)|020507", _
      "LW3|(intensity)|030507", _
      "LW2|(intensity)|4790cd", _
      "LW1|(intensity)|050a0e", _
      "LMLR|(intensity)|2a567b", _
      "LMR|(intensity)|4fa2e6", _
      "LPC4|(intensity)|4996d4", _
      "LSC3|(intensity)|152b3c", _
      "LSC2|(intensity)|4b9ada", _
      "LSC1|(intensity)|4893d1", _
      "LF2|(intensity)|010102", _
      "LF1|(intensity)|4791ce", _
      "LPC3|(intensity)|30638c", _
      "LPC2|(intensity)|4a96d5", _
      "LPC1|(intensity)|4fa1e5", _
      "LTW2|(intensity)|4fa2e6", _
      "LTW1|(intensity)|0f1e2b", _
      "LCC2|(intensity)|0a141c", _
      "LCC1|(intensity)|448cc6", _
      "LMet4|(intensity)|142a3b", _
      "LMet2|(intensity)|030709", _
      "LMet1|(intensity)|458dc8", _
      "LM3|(intensity)|020507", _
      "LM2|(intensity)|000101", _
      "LM1|(intensity)|2d5b82", _
      "LSA|(intensity)|3f81b7", _
      "LH9|(intensity)|50a3e8", _
      "LH8|(intensity)|000000", _
      "LH6|(intensity)|3872a1", _
      "LH5|(intensity)|244967", _
      "LH4|(intensity)|4d9ddf", _
      "LH3|(intensity)|010203", _
      "LPR1|(intensity)|183145", _
      "LPR3|(intensity)|010304", _
      "LPR2|(intensity)|4d9ee0", _
      "LPR5|(intensity)|3872a2", _
      "LPR4|(intensity)|000000", _
      "LMR2|(intensity)|1f3f5a", _
      "LCR2|(intensity)|31648e", _
      "LRI|(intensity)|3f80b6", _
      "LRO|(intensity)|2c5a7f", _
      "LLI|(intensity)|000102", _
      "LLO|(intensity)|000101", _
      "LSR|(intensity)|060c11", _
      "LSL|(intensity)|50a3e7" _
      )
  End With
  With .AddStep(1.56667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|1e3e58", _
      "LX|(intensity)|2f6088", _
      "LS5|(intensity)|20415d", _
      "LS1|(intensity)|4d9ee0", _
      "LS2|(intensity)|366d9b", _
      "LS3|(intensity)|030609", _
      "LS4|(intensity)|3b79ac", _
      "LS6|(intensity)|4994d2", _
      "LSwC3|(intensity)|4fa2e6", _
      "LSwC2|(intensity)|214461", _
      "LSwC1|(intensity)|0c1923", _
      "LCWiz|(intensity)|50a2e6", _
      "LLWiz|(intensity)|2d5b82", _
      "LC1|(intensity)|3f80b6", _
      "LWiz|(intensity)|0d1b26", _
      "LW9|(intensity)|0c1924", _
      "LW8|(intensity)|04070b", _
      "LW7|(intensity)|04070b", _
      "LW6|(intensity)|04070b", _
      "LW5|(intensity)|04070b", _
      "LW4|(intensity)|04070b", _
      "LW3|(intensity)|04080b", _
      "LW2|(intensity)|4388c1", _
      "LMLR|(intensity)|31648d", _
      "LMR|(intensity)|50a2e7", _
      "LPC4|(intensity)|4c9bdc", _
      "LSC3|(intensity)|1b374e", _
      "LSC2|(intensity)|4994d2", _
      "LSC1|(intensity)|448bc5", _
      "LF2|(intensity)|000001", _
      "LF1|(intensity)|468eca", _
      "LPC3|(intensity)|2a5579", _
      "LPC2|(intensity)|4790cc", _
      "LPC1|(intensity)|4fa1e4", _
      "LTW2|(intensity)|50a3e7", _
      "LTW1|(intensity)|0d1a25", _
      "LCC2|(intensity)|0e1c28", _
      "LCC1|(intensity)|4893d1", _
      "LMet4|(intensity)|0f202d", _
      "LMet2|(intensity)|04090c", _
      "LMet1|(intensity)|4893d1", _
      "LM4|(intensity)|50a3e8", _
      "LM3|(intensity)|04070b", _
      "LM2|(intensity)|000000", _
      "LM1|(intensity)|30628b", _
      "LSA|(intensity)|448ac4", _
      "LH6|(intensity)|3e7eb3", _
      "LH5|(intensity)|1d3b54", _
      "LH4|(intensity)|4fa0e4", _
      "LH3|(intensity)|010202", _
      "LPR1|(intensity)|1e3e58", _
      "LPR3|(intensity)|020507", _
      "LPR2|(intensity)|4fa1e4", _
      "LPR5|(intensity)|31658f", _
      "LMR2|(intensity)|183246", _
      "LCR2|(intensity)|3872a1", _
      "LRI|(intensity)|4084bb", _
      "LRO|(intensity)|254c6b", _
      "LLI|(intensity)|000101", _
      "LLO|(intensity)|000000", _
      "LSR|(intensity)|081118", _
      "LSL|(intensity)|50a3e8" _
      )
  End With
  With .AddStep(1.60000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|254b6b", _
      "LX|(intensity)|2d5d83", _
      "LS5|(intensity)|19344a", _
      "LS1|(intensity)|4e9ee1", _
      "LS2|(intensity)|3872a1", _
      "LS3|(intensity)|04090d", _
      "LS4|(intensity)|366f9d", _
      "LS6|(intensity)|458dc8", _
      "LSwC3|(intensity)|50a3e7", _
      "LSwC2|(intensity)|1f405a", _
      "LSwC1|(intensity)|09121a", _
      "LCWiz|(intensity)|4fa1e5", _
      "LLWiz|(intensity)|264d6d", _
      "LC1|(intensity)|3974a5", _
      "LC2|(intensity)|000102", _
      "LWiz|(intensity)|122534", _
      "LW9|(intensity)|0c1923", _
      "LW8|(intensity)|060d12", _
      "LW7|(intensity)|060d12", _
      "LW6|(intensity)|060d12", _
      "LW5|(intensity)|060d12", _
      "LW4|(intensity)|060d12", _
      "LW3|(intensity)|060d13", _
      "LW2|(intensity)|3e7fb4", _
      "LW1|(intensity)|070f15", _
      "LMLR|(intensity)|3771a0", _
      "LEBR|(intensity)|000001", _
      "LMR|(intensity)|50a3e7", _
      "LPC4|(intensity)|4e9fe2", _
      "LSC3|(intensity)|20425e", _
      "LSC2|(intensity)|458dc8", _
      "LSC1|(intensity)|3f81b7", _
      "LF2|(intensity)|000000", _
      "LF1|(intensity)|4286bf", _
      "LPC3|(intensity)|244968", _
      "LPC2|(intensity)|4287c0", _
      "LPC1|(intensity)|4d9ee0", _
      "LTW2|(intensity)|50a3e8", _
      "LTW1|(intensity)|0c1923", _
      "LCC2|(intensity)|132637", _
      "LCC1|(intensity)|4b99d9", _
      "LMet4|(intensity)|0b1721", _
      "LMet2|(intensity)|050b10", _
      "LMet1|(intensity)|4b9ada", _
      "LM5|(intensity)|50a3e7", _
      "LM3|(intensity)|060d12", _
      "LM1|(intensity)|30628c", _
      "LSA|(intensity)|4792cf", _
      "LH8|(intensity)|000101", _
      "LH7|(intensity)|4ea0e3", _
      "LH6|(intensity)|438ac3", _
      "LH5|(intensity)|162e41", _
      "LH4|(intensity)|4fa2e5", _
      "LH3|(intensity)|000102", _
      "LH2|(intensity)|50a2e6", _
      "LPR1|(intensity)|254b6b", _
      "LPR3|(intensity)|04080c", _
      "LPR2|(intensity)|4fa1e5", _
      "LPR6|(intensity)|50a3e7", _
      "LPR5|(intensity)|2b577c", _
      "LMR2|(intensity)|132737", _
      "LCR2|(intensity)|3d7cb1", _
      "LRO|(intensity)|1f3e58", _
      "LSR|(intensity)|0c1923" _
      )
  End With
  With .AddStep(1.63333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|2c5a80", _
      "LX|(intensity)|295477", _
      "LS5|(intensity)|132737", _
      "LS1|(intensity)|4fa0e3", _
      "LS2|(intensity)|3771a0", _
      "LS3|(intensity)|060d13", _
      "LS4|(intensity)|326590", _
      "LS6|(intensity)|4185bd", _
      "LSwC3|(intensity)|50a3e8", _
      "LSwC1|(intensity)|060d13", _
      "LCWiz|(intensity)|4fa0e3", _
      "LLWiz|(intensity)|1f3f59", _
      "LC1|(intensity)|326792", _
      "LC2|(intensity)|000101", _
      "LC3|(intensity)|50a3e7", _
      "LWiz|(intensity)|183145", _
      "LW9|(intensity)|0d1a25", _
      "LW8|(intensity)|09131b", _
      "LW7|(intensity)|09131b", _
      "LW6|(intensity)|09131b", _
      "LW5|(intensity)|09131b", _
      "LW4|(intensity)|09131b", _
      "LW3|(intensity)|0a141d", _
      "LW2|(intensity)|3872a2", _
      "LW1|(intensity)|0a141d", _
      "LMLR|(intensity)|3d7cb1", _
      "LEBR|(intensity)|000000", _
      "LMR|(intensity)|50a2e7", _
      "LPC4|(intensity)|4fa1e4", _
      "LSC3|(intensity)|264e6e", _
      "LSC2|(intensity)|4185bd", _
      "LSC1|(intensity)|3a76a7", _
      "LF1|(intensity)|3d7cb0", _
      "LPC3|(intensity)|1d3c55", _
      "LPC2|(intensity)|3d7cb0", _
      "LPC1|(intensity)|4b9ada", _
      "LTW1|(intensity)|0e1c28", _
      "LCC2|(intensity)|1a344a", _
      "LCC1|(intensity)|4d9ddf", _
      "LMet4|(intensity)|081118", _
      "LMet2|(intensity)|081017", _
      "LMet1|(intensity)|4e9fe1", _
      "LM5|(intensity)|4fa2e5", _
      "LM4|(intensity)|4fa1e4", _
      "LM3|(intensity)|09131c", _
      "LM1|(intensity)|2f5f87", _
      "LSA|(intensity)|4a97d7", _
      "LH8|(intensity)|000001", _
      "LH7|(intensity)|4d9ddf", _
      "LH6|(intensity)|4791cd", _
      "LH5|(intensity)|112230", _
      "LH4|(intensity)|50a3e8", _
      "LH3|(intensity)|000000", _
      "LH2|(intensity)|50a3e8", _
      "LPR1|(intensity)|2c5a80", _
      "LPR3|(intensity)|070e13", _
      "LPR2|(intensity)|4fa2e5", _
      "LPR5|(intensity)|244967", _
      "LMR2|(intensity)|0e1d29", _
      "LCR2|(intensity)|4287bf", _
      "LRI|(intensity)|3f80b5", _
      "LRO|(intensity)|183045", _
      "LLI|(intensity)|000001", _
      "LSR|(intensity)|112332" _
      )
  End With
  With .AddStep(1.66667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|336893", _
      "LX|(intensity)|244968", _
      "LS5|(intensity)|0e1c28", _
      "LS1|(intensity)|4fa1e5", _
      "LS2|(intensity)|356b98", _
      "LS3|(intensity)|0a141c", _
      "LS4|(intensity)|2a567a", _
      "LS6|(intensity)|3b79ac", _
      "LSwC2|(intensity)|214460", _
      "LSwC1|(intensity)|04080c", _
      "LCWiz|(intensity)|4d9ddf", _
      "LLWiz|(intensity)|183246", _
      "LC1|(intensity)|2b597e", _
      "LC8|(intensity)|000000", _
      "LWiz|(intensity)|1e3e58", _
      "LW9|(intensity)|0e1d2a", _
      "LW8|(intensity)|0d1b26", _
      "LW7|(intensity)|0d1b26", _
      "LW6|(intensity)|0d1b26", _
      "LW5|(intensity)|0d1b26", _
      "LW4|(intensity)|0d1b26", _
      "LW3|(intensity)|0e1d29", _
      "LW2|(intensity)|31658f", _
      "LW1|(intensity)|0d1b26", _
      "LMLR|(intensity)|4287bf", _
      "LMR|(intensity)|4fa2e6", _
      "LPC4|(intensity)|4fa2e6", _
      "LSC3|(intensity)|2a567b", _
      "LSC2|(intensity)|3b79ac", _
      "LSC1|(intensity)|346b97", _
      "LF1|(intensity)|366f9d", _
      "LPC3|(intensity)|172f43", _
      "LPC2|(intensity)|37709f", _
      "LPC1|(intensity)|4995d4", _
      "LTW1|(intensity)|112332", _
      "LCC2|(intensity)|20415c", _
      "LCC1|(intensity)|4e9fe1", _
      "LMet4|(intensity)|080f16", _
      "LMet2|(intensity)|0c1822", _
      "LMet1|(intensity)|4fa1e4", _
      "LM5|(intensity)|4ea0e3", _
      "LM4|(intensity)|4d9ee0", _
      "LM3|(intensity)|0d1b27", _
      "LM2|(intensity)|000101", _
      "LM1|(intensity)|2b587d", _
      "LSA|(intensity)|4c9bdc", _
      "LH8|(intensity)|000000", _
      "LH7|(intensity)|4b99d9", _
      "LH6|(intensity)|4a97d6", _
      "LH5|(intensity)|0c1822", _
      "LPR1|(intensity)|336893", _
      "LPR3|(intensity)|09131b", _
      "LPR2|(intensity)|4fa2e6", _
      "LPR5|(intensity)|1d3b54", _
      "LMR2|(intensity)|09131c", _
      "LMR1|(intensity)|000101", _
      "LCR2|(intensity)|4690cc", _
      "LRI|(intensity)|3a77a9", _
      "LRO|(intensity)|122534", _
      "LLI|(intensity)|000000", _
      "LSR|(intensity)|172f42" _
      )
  End With
  With .AddStep(1.70000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|3974a5", _
      "LX|(intensity)|1e3d57", _
      "LS5|(intensity)|09131b", _
      "LS1|(intensity)|4fa1e4", _
      "LS2|(intensity)|31638d", _
      "LS3|(intensity)|0e1c28", _
      "LS4|(intensity)|244968", _
      "LS6|(intensity)|356c99", _
      "LSwC2|(intensity)|264d6d", _
      "LSwC1|(intensity)|020507", _
      "LCWiz|(intensity)|4b99da", _
      "LLWiz|(intensity)|132636", _
      "LC1|(intensity)|244a69", _
      "LC2|(intensity)|010102", _
      "LWiz|(intensity)|254b6b", _
      "LW9|(intensity)|122635", _
      "LW8|(intensity)|122534", _
      "LW7|(intensity)|122534", _
      "LW6|(intensity)|122534", _
      "LW5|(intensity)|122534", _
      "LW4|(intensity)|122534", _
      "LW3|(intensity)|132737", _
      "LW2|(intensity)|2b577c", _
      "LW1|(intensity)|122534", _
      "LMLR|(intensity)|468fcc", _
      "LEBR|(intensity)|000101", _
      "LMR|(intensity)|50a2e7", _
      "LPC4|(intensity)|50a3e7", _
      "LSC3|(intensity)|2c5a80", _
      "LSC2|(intensity)|356c99", _
      "LSC1|(intensity)|2f5f87", _
      "LF1|(intensity)|30618a", _
      "LPC3|(intensity)|122433", _
      "LPC2|(intensity)|30628b", _
      "LPC1|(intensity)|4690cc", _
      "LTW1|(intensity)|162c3f", _
      "LCC2|(intensity)|274f70", _
      "LCC1|(intensity)|4fa1e4", _
      "LMet4|(intensity)|070f16", _
      "LMet2|(intensity)|10212f", _
      "LMet1|(intensity)|4fa2e5", _
      "LM5|(intensity)|4e9fe1", _
      "LM4|(intensity)|4c9cdd", _
      "LM3|(intensity)|122535", _
      "LM1|(intensity)|274f70", _
      "LSA|(intensity)|4d9ee0", _
      "LH8|(intensity)|000101", _
      "LH7|(intensity)|4994d3", _
      "LH6|(intensity)|4c9cdd", _
      "LH5|(intensity)|081017", _
      "LPR1|(intensity)|3975a6", _
      "LPR3|(intensity)|0d1a25", _
      "LPR2|(intensity)|4fa2e5", _
      "LPR5|(intensity)|162e41", _
      "LMR2|(intensity)|070e14", _
      "LMR1|(intensity)|010202", _
      "LCR2|(intensity)|4995d3", _
      "LCR1|(intensity)|4fa2e5", _
      "LRI|(intensity)|356d9b", _
      "LRO|(intensity)|0d1b27", _
      "LSR|(intensity)|1d3b54" _
      )
  End With
  With .AddStep(1.73333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|3f80b5", _
      "LX|(intensity)|173043", _
      "LS5|(intensity)|060c10", _
      "LS1|(intensity)|4d9ee0", _
      "LS2|(intensity)|2b597e", _
      "LS3|(intensity)|132737", _
      "LS4|(intensity)|1d3c55", _
      "LS6|(intensity)|2e5f86", _
      "LSwC2|(intensity)|2b597e", _
      "LSwC1|(intensity)|010304", _
      "LCWiz|(intensity)|4994d2", _
      "LLWiz|(intensity)|0e1c28", _
      "LC1|(intensity)|1d3b53", _
      "LC2|(intensity)|020406", _
      "LC3|(intensity)|50a2e6", _
      "LC6|(intensity)|000101", _
      "LWiz|(intensity)|2c5a80", _
      "LW9|(intensity)|183146", _
      "LW8|(intensity)|183145", _
      "LW7|(intensity)|183145", _
      "LW6|(intensity)|183145", _
      "LW5|(intensity)|183145", _
      "LW4|(intensity)|183145", _
      "LW3|(intensity)|193247", _
      "LW2|(intensity)|244967", _
      "LW1|(intensity)|183145", _
      "LMLR|(intensity)|4996d4", _
      "LEBR|(intensity)|010203", _
      "LMR|(intensity)|50a2e6", _
      "LSC3|(intensity)|2b597e", _
      "LSC2|(intensity)|2e5f86", _
      "LSC1|(intensity)|2b577b", _
      "LF2|(intensity)|000101", _
      "LF1|(intensity)|295477", _
      "LPC3|(intensity)|0d1a25", _
      "LPC2|(intensity)|295477", _
      "LPC1|(intensity)|4388c1", _
      "LTW1|(intensity)|1c3850", _
      "LCC2|(intensity)|2e5e86", _
      "LCC1|(intensity)|4fa2e6", _
      "LMet4|(intensity)|081119", _
      "LMet2|(intensity)|162c3f", _
      "LMet1|(intensity)|4fa2e6", _
      "LM5|(intensity)|4c9cdd", _
      "LM4|(intensity)|4a97d6", _
      "LM3|(intensity)|183146", _
      "LM1|(intensity)|21435f", _
      "LSA|(intensity)|4ea0e3", _
      "LH8|(intensity)|010304", _
      "LH7|(intensity)|468fcb", _
      "LH6|(intensity)|4e9fe2", _
      "LH5|(intensity)|050a0e", _
      "LPR1|(intensity)|3f80b6", _
      "LPR3|(intensity)|122433", _
      "LPR2|(intensity)|4fa1e5", _
      "LPR5|(intensity)|112230", _
      "LMR2|(intensity)|050a0e", _
      "LMR1|(intensity)|020305", _
      "LCR2|(intensity)|4b99d9", _
      "LCR1|(intensity)|4fa0e4", _
      "LRI|(intensity)|2f6089", _
      "LRO|(intensity)|0a141c", _
      "LSR|(intensity)|244a69" _
      )
  End With
  With .AddStep(1.76667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|438ac4", _
      "LX|(intensity)|112230", _
      "LS5|(intensity)|04080b", _
      "LS1|(intensity)|4c9adb", _
      "LS2|(intensity)|244a69", _
      "LS3|(intensity)|183247", _
      "LS4|(intensity)|173044", _
      "LS6|(intensity)|275072", _
      "LSwC2|(intensity)|326691", _
      "LCWiz|(intensity)|458dc8", _
      "LLWiz|(intensity)|09131b", _
      "LC1|(intensity)|162d3f", _
      "LC2|(intensity)|03070a", _
      "LC3|(intensity)|4fa1e5", _
      "LC4|(intensity)|000001", _
      "LWiz|(intensity)|336893", _
      "LW9|(intensity)|1f3e59", _
      "LW8|(intensity)|1e3e58", _
      "LW7|(intensity)|1e3e58", _
      "LW6|(intensity)|1e3e58", _
      "LW5|(intensity)|1f3f59", _
      "LW4|(intensity)|1e3e58", _
      "LW3|(intensity)|1f405a", _
      "LW2|(intensity)|1d3b54", _
      "LW1|(intensity)|1e3e58", _
      "LMLR|(intensity)|4b99da", _
      "LEBR|(intensity)|020405", _
      "LMR|(intensity)|4fa1e5", _
      "LPC4|(intensity)|50a3e8", _
      "LSC3|(intensity)|285274", _
      "LSC2|(intensity)|285274", _
      "LSC1|(intensity)|285275", _
      "LF2|(intensity)|010102", _
      "LF1|(intensity)|224664", _
      "LPC3|(intensity)|09121a", _
      "LPC2|(intensity)|224664", _
      "LPC1|(intensity)|3e7fb4", _
      "LTW1|(intensity)|224664", _
      "LCC2|(intensity)|356d9a", _
      "LMet4|(intensity)|0b1620", _
      "LMet2|(intensity)|1c3951", _
      "LMet1|(intensity)|50a3e7", _
      "LM5|(intensity)|4a97d7", _
      "LM4|(intensity)|4791cd", _
      "LM3|(intensity)|1f3f59", _
      "LM1|(intensity)|1b374d", _
      "LSA|(intensity)|4e9fe2", _
      "LH8|(intensity)|020507", _
      "LH7|(intensity)|4185bc", _
      "LH6|(intensity)|4fa0e3", _
      "LH5|(intensity)|04070a", _
      "LH4|(intensity)|50a3e7", _
      "LPR1|(intensity)|448ac4", _
      "LPR3|(intensity)|183146", _
      "LPR2|(intensity)|4ea0e3", _
      "LPR6|(intensity)|50a3e8", _
      "LPR5|(intensity)|0c1822", _
      "LMR2|(intensity)|030508", _
      "LMR1|(intensity)|020507", _
      "LCR2|(intensity)|4d9ddf", _
      "LCR1|(intensity)|4e9fe2", _
      "LRI|(intensity)|285275", _
      "LRO|(intensity)|081017", _
      "LLO|(intensity)|000001", _
      "LSR|(intensity)|2b587d" _
      )
  End With
  With .AddStep(1.80000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|4792cf", _
      "LX|(intensity)|0c1822", _
      "LS5|(intensity)|020507", _
      "LS1|(intensity)|4996d4", _
      "LS2|(intensity)|1e3d56", _
      "LS3|(intensity)|1e3e57", _
      "LS4|(intensity)|122534", _
      "LS6|(intensity)|214461", _
      "LSwC2|(intensity)|3872a2", _
      "LSwC1|(intensity)|010202", _
      "LCWiz|(intensity)|4184bb", _
      "LLWiz|(intensity)|070d13", _
      "LC1|(intensity)|112230", _
      "LC2|(intensity)|050a0f", _
      "LC3|(intensity)|4e9fe1", _
      "LWiz|(intensity)|3974a5", _
      "LW9|(intensity)|254b6b", _
      "LW8|(intensity)|254b6b", _
      "LW7|(intensity)|254b6b", _
      "LW6|(intensity)|254b6b", _
      "LW5|(intensity)|254c6c", _
      "LW4|(intensity)|254b6b", _
      "LW3|(intensity)|254d6d", _
      "LW2|(intensity)|162e41", _
      "LW1|(intensity)|254b6b", _
      "LMLR|(intensity)|4d9ddf", _
      "LEBR|(intensity)|030609", _
      "LMR|(intensity)|4e9fe1", _
      "LPC4|(intensity)|50a3e7", _
      "LSC3|(intensity)|234866", _
      "LSC2|(intensity)|214460", _
      "LSC1|(intensity)|295376", _
      "LF1|(intensity)|1b384f", _
      "LPC3|(intensity)|060c11", _
      "LPC2|(intensity)|1b384f", _
      "LPC1|(intensity)|3974a4", _
      "LTW1|(intensity)|295477", _
      "LCC2|(intensity)|3c7aad", _
      "LCC1|(intensity)|50a2e6", _
      "LMet4|(intensity)|0f1e2b", _
      "LMet2|(intensity)|234866", _
      "LM5|(intensity)|4791ce", _
      "LM4|(intensity)|4389c2", _
      "LM3|(intensity)|254b6b", _
      "LM1|(intensity)|152a3c", _
      "LSA|(intensity)|4d9cde", _
      "LH8|(intensity)|04080b", _
      "LH7|(intensity)|3c7aad", _
      "LH6|(intensity)|4fa1e5", _
      "LH5|(intensity)|020507", _
      "LPR1|(intensity)|4892d0", _
      "LPR3|(intensity)|1e3e58", _
      "LPR2|(intensity)|4d9dde", _
      "LPR5|(intensity)|081017", _
      "LMR2|(intensity)|010304", _
      "LMR1|(intensity)|04070a", _
      "LCR2|(intensity)|4fa0e3", _
      "LCR1|(intensity)|4d9ddf", _
      "LRI|(intensity)|21435f", _
      "LRO|(intensity)|070e14", _
      "LLO|(intensity)|010102", _
      "LSR|(intensity)|31658f" _
      )
  End With
  With .AddStep(1.83333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|4a98d8", _
      "LX|(intensity)|081118", _
      "LS5|(intensity)|020305", _
      "LS1|(intensity)|468fcb", _
      "LS2|(intensity)|183045", _
      "LS3|(intensity)|254c6c", _
      "LS4|(intensity)|0e1c28", _
      "LS6|(intensity)|1d3a53", _
      "LSwC2|(intensity)|3e7fb5", _
      "LSwC1|(intensity)|000101", _
      "LCWiz|(intensity)|3c7aad", _
      "LLWiz|(intensity)|04090c", _
      "LC1|(intensity)|0c1822", _
      "LC2|(intensity)|081017", _
      "LC3|(intensity)|4c9bdd", _
      "LC4|(intensity)|000000", _
      "LWiz|(intensity)|3f80b5", _
      "LW9|(intensity)|2c5a80", _
      "LW8|(intensity)|2c5a80", _
      "LW7|(intensity)|2c5a80", _
      "LW6|(intensity)|2c5a80", _
      "LW5|(intensity)|2c5b81", _
      "LW4|(intensity)|2c5a80", _
      "LW3|(intensity)|2b597e", _
      "LW2|(intensity)|112230", _
      "LW1|(intensity)|2c5a80", _
      "LMLR|(intensity)|4ea0e3", _
      "LEBR|(intensity)|050a0f", _
      "LMR|(intensity)|4c9cdd", _
      "LPC4|(intensity)|50a2e7", _
      "LSC3|(intensity)|1d3b54", _
      "LSC2|(intensity)|1a364c", _
      "LSC1|(intensity)|2a567a", _
      "LF2|(intensity)|010203", _
      "LF1|(intensity)|152b3d", _
      "LPC3|(intensity)|04080b", _
      "LPC2|(intensity)|152b3d", _
      "LPC1|(intensity)|336793", _
      "LTW1|(intensity)|30638c", _
      "LCC2|(intensity)|4083ba", _
      "LCC1|(intensity)|50a3e7", _
      "LMet4|(intensity)|14293a", _
      "LMet2|(intensity)|2a567a", _
      "LMet1|(intensity)|50a3e8", _
      "LM5|(intensity)|448ac4", _
      "LM4|(intensity)|3e7fb4", _
      "LM3|(intensity)|2c5a7f", _
      "LM2|(intensity)|000000", _
      "LM1|(intensity)|10202d", _
      "LSA|(intensity)|4c9adb", _
      "LH9|(intensity)|50a3e7", _
      "LH8|(intensity)|060c11", _
      "LH7|(intensity)|366e9b", _
      "LH6|(intensity)|50a3e7", _
      "LH5|(intensity)|010203", _
      "LPR1|(intensity)|4b99d9", _
      "LPR3|(intensity)|244a69", _
      "LPR2|(intensity)|4a98d7", _
      "LPR5|(intensity)|050a0e", _
      "LMR2|(intensity)|010203", _
      "LMR1|(intensity)|060c10", _
      "LCR2|(intensity)|4fa2e5", _
      "LCR1|(intensity)|4b99d9", _
      "LRI|(intensity)|1a344b", _
      "LRO|(intensity)|070f15", _
      "LLO|(intensity)|010304", _
      "LSR|(intensity)|3873a3" _
      )
  End With
  With .AddStep(1.86667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|4c9bdc", _
      "LX|(intensity)|050b0f", _
      "LS5|(intensity)|010304", _
      "LS1|(intensity)|4286bf", _
      "LS2|(intensity)|122434", _
      "LS3|(intensity)|2c5a7f", _
      "LS4|(intensity)|0a141c", _
      "LS6|(intensity)|193348", _
      "LSwC2|(intensity)|4389c3", _
      "LSwC1|(intensity)|000000", _
      "LCWiz|(intensity)|366f9d", _
      "LLWiz|(intensity)|020406", _
      "LC1|(intensity)|081017", _
      "LC2|(intensity)|0c1822", _
      "LC3|(intensity)|4a97d6", _
      "LWiz|(intensity)|438ac4", _
      "LW9|(intensity)|336893", _
      "LW8|(intensity)|336893", _
      "LW7|(intensity)|336893", _
      "LW6|(intensity)|336893", _
      "LW5|(intensity)|336894", _
      "LW4|(intensity)|336893", _
      "LW3|(intensity)|2f6089", _
      "LW2|(intensity)|0c1822", _
      "LW1|(intensity)|336793", _
      "LMLR|(intensity)|4fa2e6", _
      "LEBR|(intensity)|081017", _
      "LMR|(intensity)|4a98d7", _
      "LPC4|(intensity)|50a3e8", _
      "LSC3|(intensity)|162e41", _
      "LSC2|(intensity)|14293b", _
      "LSC1|(intensity)|2e5e85", _
      "LF2|(intensity)|020405", _
      "LF1|(intensity)|10202d", _
      "LPC3|(intensity)|020507", _
      "LPC2|(intensity)|10202d", _
      "LPC1|(intensity)|2c5a80", _
      "LTW1|(intensity)|3770a0", _
      "LCC2|(intensity)|448ac4", _
      "LCC1|(intensity)|50a3e8", _
      "LMet4|(intensity)|1a364c", _
      "LMet2|(intensity)|31648d", _
      "LM5|(intensity)|4082b8", _
      "LM4|(intensity)|3872a2", _
      "LM3|(intensity)|326691", _
      "LM1|(intensity)|0b1720", _
      "LSA|(intensity)|4996d5", _
      "LH9|(intensity)|4fa2e6", _
      "LH8|(intensity)|09131a", _
      "LH7|(intensity)|2f6088", _
      "LH6|(intensity)|50a3e8", _
      "LH5|(intensity)|000000", _
      "LH4|(intensity)|50a3e8", _
      "LPR1|(intensity)|4c9bdc", _
      "LPR3|(intensity)|2a567b", _
      "LPR2|(intensity)|4792cf", _
      "LPR5|(intensity)|04070a", _
      "LMR2|(intensity)|000102", _
      "LMR1|(intensity)|091219", _
      "LCR2|(intensity)|4fa2e6", _
      "LCR1|(intensity)|4893d0", _
      "LRI|(intensity)|14293a", _
      "LRO|(intensity)|09121a", _
      "LLO|(intensity)|020406", _
      "LSR|(intensity)|3e7fb4" _
      )
  End With
  With .AddStep(1.90000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|4e9ee1", _
      "LX|(intensity)|030608", _
      "LS5|(intensity)|020305", _
      "LS1|(intensity)|3d7cb0", _
      "LS2|(intensity)|0d1a25", _
      "LS3|(intensity)|326792", _
      "LS4|(intensity)|060d12", _
      "LS6|(intensity)|172f42", _
      "LSwC2|(intensity)|4791cd", _
      "LCWiz|(intensity)|2f6189", _
      "LLWiz|(intensity)|010203", _
      "LC1|(intensity)|050a0e", _
      "LC2|(intensity)|102130", _
      "LC3|(intensity)|4690cc", _
      "LC6|(intensity)|000000", _
      "LWiz|(intensity)|4792cf", _
      "LW9|(intensity)|3974a5", _
      "LW8|(intensity)|3975a6", _
      "LW7|(intensity)|3975a6", _
      "LW6|(intensity)|3974a5", _
      "LW5|(intensity)|3975a6", _
      "LW4|(intensity)|3974a5", _
      "LW3|(intensity)|31648e", _
      "LW2|(intensity)|081017", _
      "LW1|(intensity)|3974a5", _
      "LEBR|(intensity)|0c1822", _
      "LMR|(intensity)|4892cf", _
      "LSC3|(intensity)|112331", _
      "LSC2|(intensity)|0f1f2b", _
      "LSC1|(intensity)|346b97", _
      "LF2|(intensity)|04080b", _
      "LF1|(intensity)|0b1720", _
      "LPC3|(intensity)|020405", _
      "LPC2|(intensity)|0b1720", _
      "LPC1|(intensity)|264d6d", _
      "LTW2|(intensity)|50a3e7", _
      "LTW1|(intensity)|3d7db1", _
      "LCC2|(intensity)|468fca", _
      "LMet4|(intensity)|21435f", _
      "LMet2|(intensity)|3771a0", _
      "LM5|(intensity)|3a76a8", _
      "LM4|(intensity)|31658f", _
      "LM3|(intensity)|3872a1", _
      "LM2|(intensity)|000102", _
      "LM1|(intensity)|070f16", _
      "LSA|(intensity)|468fcb", _
      "LH8|(intensity)|0d1a26", _
      "LH7|(intensity)|285274", _
      "LH5|(intensity)|000001", _
      "LPR1|(intensity)|4e9ee1", _
      "LPR3|(intensity)|2e5f86", _
      "LPR2|(intensity)|448bc6", _
      "LPR5|(intensity)|020507", _
      "LMR2|(intensity)|000000", _
      "LMR1|(intensity)|0c1923", _
      "LCR2|(intensity)|50a2e7", _
      "LCR1|(intensity)|448cc6", _
      "LRI|(intensity)|0f1f2c", _
      "LRO|(intensity)|0c1823", _
      "LLO|(intensity)|030608", _
      "LSR|(intensity)|4389c3" _
      )
  End With
  With .AddStep(1.93333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|4fa1e5", _
      "LX|(intensity)|020406", _
      "LS5|(intensity)|020406", _
      "LS1|(intensity)|366f9e", _
      "LS2|(intensity)|091219", _
      "LS3|(intensity)|3873a3", _
      "LS4|(intensity)|04080b", _
      "LS6|(intensity)|172f43", _
      "LSwC2|(intensity)|4a97d6", _
      "LCWiz|(intensity)|285274", _
      "LLWiz|(intensity)|000101", _
      "LC1|(intensity)|030609", _
      "LC2|(intensity)|162c3f", _
      "LC3|(intensity)|4286bf", _
      "LC4|(intensity)|000101", _
      "LWiz|(intensity)|4a98d8", _
      "LW9|(intensity)|3f80b5", _
      "LW8|(intensity)|3f80b6", _
      "LW7|(intensity)|3f80b6", _
      "LW6|(intensity)|3f80b5", _
      "LW5|(intensity)|3f80b6", _
      "LW4|(intensity)|3f80b5", _
      "LW3|(intensity)|31638d", _
      "LW2|(intensity)|050a0e", _
      "LW1|(intensity)|3f80b6", _
      "LMLR|(intensity)|4fa1e5", _
      "LEBR|(intensity)|10212f", _
      "LMR|(intensity)|438ac3", _
      "LPC5|(intensity)|000001", _
      "LPC4|(intensity)|50a3e7", _
      "LSC3|(intensity)|0c1923", _
      "LSC2|(intensity)|0b161f", _
      "LSC1|(intensity)|3a77a8", _
      "LF2|(intensity)|060c11", _
      "LF1|(intensity)|080f16", _
      "LPC3|(intensity)|010202", _
      "LPC2|(intensity)|080f16", _
      "LPC1|(intensity)|1f3f5a", _
      "LTW2|(intensity)|4fa2e6", _
      "LTW1|(intensity)|4388c2", _
      "LCC2|(intensity)|4790cc", _
      "LMet4|(intensity)|285375", _
      "LMet2|(intensity)|3d7db1", _
      "LM5|(intensity)|346995", _
      "LM4|(intensity)|2a567a", _
      "LM3|(intensity)|3b79ac", _
      "LM2|(intensity)|000101", _
      "LM1|(intensity)|050a0e", _
      "LSA|(intensity)|4286bf", _
      "LH8|(intensity)|122434", _
      "LH7|(intensity)|214360", _
      "LPR1|(intensity)|4fa1e5", _
      "LPR3|(intensity)|31648e", _
      "LPR2|(intensity)|4082b8", _
      "LPR5|(intensity)|010203", _
      "LMR2|(intensity)|000101", _
      "LMR1|(intensity)|10212f", _
      "LCR2|(intensity)|50a3e7", _
      "LCR1|(intensity)|4083ba", _
      "LRI|(intensity)|0b1620", _
      "LRO|(intensity)|10212e", _
      "LLO|(intensity)|050a0e", _
      "LSR|(intensity)|4892d0" _
      )
  End With
  With .AddStep(1.96667, Null, 0.03333)
    .Lights = Array( _
      "LPF|(intensity)|50a3e7", _
      "LX|(intensity)|010304", _
      "LS5|(intensity)|03070a", _
      "LS1|(intensity)|30628b", _
      "LS2|(intensity)|050b10", _
      "LS3|(intensity)|3e7eb3", _
      "LS4|(intensity)|030608", _
      "LS6|(intensity)|193449", _
      "LSwC2|(intensity)|4c9bdb", _
      "LCWiz|(intensity)|214460", _
      "LLWiz|(intensity)|000001", _
      "LC1|(intensity)|020405", _
      "LC2|(intensity)|1c3a52", _
      "LC3|(intensity)|3d7cb0", _
      "LC4|(intensity)|010203", _
      "LWiz|(intensity)|4c9bdc", _
      "LW9|(intensity)|438ac4", _
      "LW8|(intensity)|438ac4", _
      "LW7|(intensity)|448ac4", _
      "LW6|(intensity)|438ac4", _
      "LW5|(intensity)|448ac4", _
      "LW4|(intensity)|438ac4", _
      "LW3|(intensity)|2e5d84", _
      "LW2|(intensity)|04070a", _
      "LW1|(intensity)|438ac3", _
      "LMLR|(intensity)|4e9ee1", _
      "LEBR|(intensity)|162d40", _
      "LMR|(intensity)|3f80b6", _
      "LPC5|(intensity)|000000", _
      "LPC4|(intensity)|4fa2e6", _
      "LSC3|(intensity)|081016", _
      "LSC2|(intensity)|070e14", _
      "LSC1|(intensity)|3f81b8", _
      "LF2|(intensity)|081119", _
      "LF1|(intensity)|05090d", _
      "LPC3|(intensity)|000000", _
      "LPC2|(intensity)|05090d", _
      "LPC1|(intensity)|183247", _
      "LTW1|(intensity)|4790cd", _
      "LCC2|(intensity)|4690cc", _
      "LMet4|(intensity)|30618a", _
      "LMet2|(intensity)|4287c0", _
      "LM5|(intensity)|2d5c83", _
      "LM4|(intensity)|234866", _
      "LM3|(intensity)|3e7eb3", _
      "LM1|(intensity)|03070a", _
      "LSA|(intensity)|3d7cb0", _
      "LH9|(intensity)|4fa1e5", _
      "LH8|(intensity)|183145", _
      "LH7|(intensity)|1a354b", _
      "LH5|(intensity)|000000", _
      "LPR1|(intensity)|50a3e7", _
      "LPR3|(intensity)|31658f", _
      "LPR2|(intensity)|3a77a9", _
      "LPR6|(intensity)|50a3e7", _
      "LPR5|(intensity)|000000", _
      "LMR2|(intensity)|000000", _
      "LMR1|(intensity)|162c3f", _
      "LCR2|(intensity)|50a3e8", _
      "LCR1|(intensity)|3b78ab", _
      "LRI|(intensity)|070e14", _
      "LRO|(intensity)|152c3e", _
      "LLO|(intensity)|081016", _
      "LSR|(intensity)|4a97d7" _
      )
  End With
End With






With CreateGlfShow("meteor_fall_center")
  With .AddStep(0.03333, Null, Null)
    .Lights = Array( _
      "FL3|(intensity)|83231c" _
      )
  End With
  With .AddStep(0.06667, Null, Null)
    .Lights = Array( _
      "FL3|(intensity)|fe270d" _
      )
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "LSwC3|(intensity)|4a1614", _
      "LSwC2|(intensity)|fe2e17", _
      "LSwC1|(intensity)|290c0a", _
      "FL2|(intensity)|0c0404", _
      "FL3|(intensity)|ff3d2b" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|c12f23", _
      "LSwC3|(intensity)|fd3522", _
      "LSwC2|(intensity)|ff3927", _
      "LSwC1|(intensity)|fb3826", _
      "LPC5|(intensity)|e03527", _
      "LPC4|(intensity)|c43024", _
      "LM3|(intensity)|ec3728", _
      "FL2|(intensity)|000000", _
      "FL3|(intensity)|fe3b1d" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|000000", _
      "LPF|(intensity)|fe2b13", _
      "LSwC3|(intensity)|581612", _
      "LSwC2|(intensity)|fc3d27", _
      "LSwC1|(intensity)|3c110f", _
      "LMR|(intensity)|5f1b16", _
      "LPC5|(intensity)|fe321d", _
      "LPC4|(intensity)|fc3623", _
      "LPC2|(intensity)|521714", _
      "LPC1|(intensity)|8a241d", _
      "LM4|(intensity)|f53726", _
      "LM3|(intensity)|fe2b13", _
      "FL3|(intensity)|f0381a" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|ff3b2a", _
      "LX|(intensity)|e03526", _
      "LS4|(intensity)|88241d", _
      "LSwC3|(intensity)|000000", _
      "LSwC2|(intensity)|f93e2d", _
      "LSwC1|(intensity)|000000", _
      "LW1|(intensity)|7b201a", _
      "LEBR|(intensity)|da3426", _
      "LMR|(intensity)|97261e", _
      "LPC5|(intensity)|4d130d", _
      "LPC4|(intensity)|3b100c", _
      "LPC3|(intensity)|fe311c", _
      "LPC2|(intensity)|fe331e", _
      "LPC1|(intensity)|e03526", _
      "LM4|(intensity)|88231c", _
      "LM3|(intensity)|fc3d2a", _
      "LM2|(intensity)|ec3728", _
      "FL3|(intensity)|c92c23" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|fe3d27", _
      "LX|(intensity)|ab2a20", _
      "LS4|(intensity)|fe2b12", _
      "LSwC2|(intensity)|fe3d29", _
      "LW3|(intensity)|d83426", _
      "LW2|(intensity)|fe321d", _
      "LW1|(intensity)|fe280d", _
      "LEBR|(intensity)|240c0b", _
      "LMR|(intensity)|000000", _
      "LPC5|(intensity)|3f0c09", _
      "LPC4|(intensity)|330c08", _
      "LPC3|(intensity)|fe3827", _
      "LPC2|(intensity)|7b1e17", _
      "LPC1|(intensity)|000000", _
      "LTW2|(intensity)|8c251d", _
      "LM4|(intensity)|000000", _
      "LM3|(intensity)|fe3d2d", _
      "LM2|(intensity)|c32f23", _
      "FL3|(intensity)|2c0906" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|fb3d2d", _
      "LX|(intensity)|000000", _
      "LS3|(intensity)|b72e23", _
      "LS4|(intensity)|9f2418", _
      "LSwC2|(intensity)|fd3d17", _
      "LW5|(intensity)|a82a21", _
      "LW4|(intensity)|fe2f19", _
      "LW3|(intensity)|fe2a11", _
      "LW2|(intensity)|fe3623", _
      "LW1|(intensity)|fe3d2c", _
      "LEBR|(intensity)|000000", _
      "LPC5|(intensity)|320b06", _
      "LPC4|(intensity)|000000", _
      "LPC3|(intensity)|991b10", _
      "LPC2|(intensity)|310b07", _
      "LTW2|(intensity)|260c0c", _
      "LMet2|(intensity)|7e211b", _
      "LM3|(intensity)|f53e2c", _
      "LM2|(intensity)|000000", _
      "FL3|(intensity)|000000" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|fe3d2c", _
      "LS3|(intensity)|2e0f0e", _
      "LS4|(intensity)|531009", _
      "LSwC2|(intensity)|fe3b09", _
      "LW7|(intensity)|531714", _
      "LW6|(intensity)|fe3521", _
      "LW5|(intensity)|fe280e", _
      "LW4|(intensity)|ff3827", _
      "LW3|(intensity)|fd3d2a", _
      "LW2|(intensity)|fe3d28", _
      "LW1|(intensity)|fd3d29", _
      "LPC5|(intensity)|000000", _
      "LPC3|(intensity)|f32f21", _
      "LPC2|(intensity)|450b07", _
      "LTW2|(intensity)|000000", _
      "LMet3|(intensity)|fc3725", _
      "LMet2|(intensity)|fc3724", _
      "LM3|(intensity)|fb3d1e" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|fe3c17", _
      "LS3|(intensity)|000000", _
      "LS4|(intensity)|63110b", _
      "LSwC2|(intensity)|f92b0d", _
      "LW8|(intensity)|f33828", _
      "LW7|(intensity)|fe290f", _
      "LW6|(intensity)|fe3420", _
      "LW5|(intensity)|fd3d2b", _
      "LW4|(intensity)|fe3c23", _
      "LW3|(intensity)|fb3e2b", _
      "LW2|(intensity)|f73e2e", _
      "LW1|(intensity)|f53e2d", _
      "LPC3|(intensity)|8d160c", _
      "LPC2|(intensity)|000000", _
      "LMet3|(intensity)|a72a1f", _
      "LMet2|(intensity)|3e110d", _
      "LMet1|(intensity)|7d211b", _
      "LM3|(intensity)|fe3c1a", _
      "FL3|(intensity)|2b0905" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|f8390c", _
      "LS4|(intensity)|000000", _
      "LSwC2|(intensity)|000000", _
      "LWiz|(intensity)|9f2820", _
      "LW9|(intensity)|fe2c14", _
      "LW8|(intensity)|fe2d15", _
      "LW7|(intensity)|fe3c2b", _
      "LW6|(intensity)|fd3c2a", _
      "LW5|(intensity)|f53e2b", _
      "LW4|(intensity)|fa3e2d", _
      "LW3|(intensity)|f83e2d", _
      "LW2|(intensity)|fe3d2a", _
      "LW1|(intensity)|fe3c2d", _
      "LPC3|(intensity)|500c06", _
      "LMet3|(intensity)|000000", _
      "LMet2|(intensity)|1d0605", _
      "LMet1|(intensity)|000000", _
      "LM3|(intensity)|99190c", _
      "FL3|(intensity)|000000" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|d9280f", _
      "LSwC2|(intensity)|6a1a0e", _
      "LCWiz|(intensity)|531815", _
      "LLWiz|(intensity)|98261e", _
      "LWiz|(intensity)|fe280e", _
      "LW9|(intensity)|ff3a29", _
      "LW8|(intensity)|fe3d28", _
      "LW7|(intensity)|fd3c28", _
      "LW6|(intensity)|ff3d2e", _
      "LW5|(intensity)|f83e2d", _
      "LW4|(intensity)|ff3e27", _
      "LW3|(intensity)|fe3b29", _
      "LW2|(intensity)|ff3d1b", _
      "LW1|(intensity)|fd3714", _
      "LPC3|(intensity)|3d0804", _
      "LMet2|(intensity)|230606", _
      "LM3|(intensity)|480d0a" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|430c0c", _
      "LSwC2|(intensity)|000000", _
      "LCWiz|(intensity)|000000", _
      "LLWiz|(intensity)|3b1210", _
      "LWiz|(intensity)|fd3d2b", _
      "LW9|(intensity)|fe3c26", _
      "LW8|(intensity)|ff3d2c", _
      "LW7|(intensity)|fd3e2e", _
      "LW6|(intensity)|ff3e29", _
      "LW5|(intensity)|fd3d2d", _
      "LW4|(intensity)|fe3d18", _
      "LW3|(intensity)|fc3911", _
      "LW2|(intensity)|ff3b12", _
      "LW1|(intensity)|fe320b", _
      "LPC3|(intensity)|000000", _
      "LMet2|(intensity)|000000", _
      "LM3|(intensity)|000000", _
      "LPR1|(intensity)|e53627", _
      "LMR2|(intensity)|481613", _
      "LMR1|(intensity)|d23225", _
      "LCR2|(intensity)|371110", _
      "LCR1|(intensity)|a62a21" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|360a06", _
      "LLWiz|(intensity)|000000", _
      "LC3|(intensity)|6e1d18", _
      "LC4|(intensity)|83221b", _
      "LC5|(intensity)|81221b", _
      "LC6|(intensity)|671d18", _
      "LC7|(intensity)|511815", _
      "LC8|(intensity)|040101", _
      "LWiz|(intensity)|f73e2b", _
      "LW9|(intensity)|fb3e2d", _
      "LW8|(intensity)|fe3e2b", _
      "LW7|(intensity)|fe3d27", _
      "LW6|(intensity)|fe3c20", _
      "LW5|(intensity)|fd3b1b", _
      "LW4|(intensity)|fd390c", _
      "LW3|(intensity)|e62c11", _
      "LW2|(intensity)|e82a14", _
      "LW1|(intensity)|7a1608", _
      "LPR1|(intensity)|fe2b12", _
      "LPR3|(intensity)|fe2b13", _
      "LPR2|(intensity)|fe2f18", _
      "LPR6|(intensity)|eb3627", _
      "LPR5|(intensity)|f73827", _
      "LPR4|(intensity)|dc3427", _
      "LMR2|(intensity)|fd3623", _
      "LMR1|(intensity)|f33727", _
      "LCR2|(intensity)|eb3627", _
      "LCR1|(intensity)|c12f23" _
      )
  End With
  With .AddStep(0.50000, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|320c09", _
      "LS4|(intensity)|050101", _
      "LC1|(intensity)|d33326", _
      "LC2|(intensity)|fc3725", _
      "LC3|(intensity)|fe301a", _
      "LC4|(intensity)|fe2910", _
      "LC5|(intensity)|fe270d", _
      "LC6|(intensity)|fe2d15", _
      "LC7|(intensity)|fe331f", _
      "LC8|(intensity)|f03726", _
      "LWiz|(intensity)|f73e2d", _
      "LW9|(intensity)|fb3e24", _
      "LW8|(intensity)|fb3b1c", _
      "LW7|(intensity)|fa3b0d", _
      "LW6|(intensity)|ff3c12", _
      "LW5|(intensity)|e2290b", _
      "LW4|(intensity)|f82c11", _
      "LW3|(intensity)|440b08", _
      "LW2|(intensity)|000000", _
      "LW1|(intensity)|901a0c", _
      "LPC3|(intensity)|3c100b", _
      "LH9|(intensity)|c22f23", _
      "LH8|(intensity)|f93726", _
      "LH7|(intensity)|fe321d", _
      "LH6|(intensity)|fe2e16", _
      "LH5|(intensity)|fe2c14", _
      "LH4|(intensity)|fe301a", _
      "LH3|(intensity)|fd3623", _
      "LH2|(intensity)|e73628", _
      "LH1|(intensity)|94261e", _
      "LPR1|(intensity)|fc3d2a", _
      "LPR3|(intensity)|ff3a2a", _
      "LPR2|(intensity)|df3324", _
      "LPR6|(intensity)|fe311c", _
      "LPR5|(intensity)|fe2e16", _
      "LPR4|(intensity)|fd3624", _
      "LMR2|(intensity)|521512", _
      "LMR1|(intensity)|000000", _
      "LCR2|(intensity)|320e0d", _
      "LCR1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.53333, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|1c0705", _
      "LS4|(intensity)|000000", _
      "LC1|(intensity)|0e0404", _
      "LC2|(intensity)|451411", _
      "LC3|(intensity)|8a2017", _
      "LC4|(intensity)|fa3925", _
      "LC5|(intensity)|fe3d2c", _
      "LC6|(intensity)|9a2419", _
      "LC7|(intensity)|691a15", _
      "LC8|(intensity)|38110f", _
      "LWiz|(intensity)|fd3d2d", _
      "LW9|(intensity)|fc3a17", _
      "LW8|(intensity)|ff3b19", _
      "LW7|(intensity)|fa340a", _
      "LW6|(intensity)|b61d0c", _
      "LW5|(intensity)|85180b", _
      "LW4|(intensity)|000000", _
      "LW3|(intensity)|000000", _
      "LW2|(intensity)|cb2f23", _
      "LW1|(intensity)|000000", _
      "LPC3|(intensity)|000000", _
      "LSA|(intensity)|fe2e17", _
      "LH9|(intensity)|591915", _
      "LH8|(intensity)|9f281e", _
      "LH7|(intensity)|d63325", _
      "LH6|(intensity)|f63828", _
      "LH5|(intensity)|ff3a29", _
      "LH4|(intensity)|e93525", _
      "LH3|(intensity)|b12b20", _
      "LH2|(intensity)|621b16", _
      "LH1|(intensity)|34100f", _
      "LPR1|(intensity)|fe3e2c", _
      "LPR3|(intensity)|ce2e16", _
      "LPR2|(intensity)|62120a", _
      "LPR6|(intensity)|53130d", _
      "LPR5|(intensity)|fd3d28", _
      "LPR4|(intensity)|3d100b", _
      "LMR2|(intensity)|000000", _
      "LCR2|(intensity)|000000" _
      )
  End With
  With .AddStep(0.56667, Null, Null)
    .Lights = Array( _
      "LPF|(intensity)|000000", _
      "LC1|(intensity)|000000", _
      "LC2|(intensity)|000000", _
      "LC3|(intensity)|400e08", _
      "LC4|(intensity)|f32f17", _
      "LC5|(intensity)|fd3d1f", _
      "LC6|(intensity)|3c0c09", _
      "LC7|(intensity)|090201", _
      "LC8|(intensity)|000000", _
      "LWiz|(intensity)|fc3818", _
      "LW9|(intensity)|f63609", _
      "LW8|(intensity)|770f06", _
      "LW7|(intensity)|931a11", _
      "LW6|(intensity)|000000", _
      "LW5|(intensity)|84190f", _
      "LW4|(intensity)|c6301f", _
      "LW2|(intensity)|000000", _
      "LSA|(intensity)|ff3927", _
      "LH9|(intensity)|000000", _
      "LH8|(intensity)|000000", _
      "LH7|(intensity)|330b09", _
      "LH6|(intensity)|64130a", _
      "LH5|(intensity)|fd3d27", _
      "LH4|(intensity)|63110a", _
      "LH3|(intensity)|000000", _
      "LH2|(intensity)|000000", _
      "LH1|(intensity)|000000", _
      "LPR1|(intensity)|f53e2d", _
      "LPR3|(intensity)|fe3e2c", _
      "LPR2|(intensity)|af1d0e", _
      "LPR6|(intensity)|3f0e07", _
      "LPR5|(intensity)|ff3d2d", _
      "LPR4|(intensity)|430a09" _
      )
  End With
  With .AddStep(0.60000, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|fe2c15", _
      "LC3|(intensity)|5e0f09", _
      "LC4|(intensity)|fe3823", _
      "LC5|(intensity)|ed351b", _
      "LC6|(intensity)|4e0e0b", _
      "LC7|(intensity)|000000", _
      "LWiz|(intensity)|e92c0d", _
      "LW9|(intensity)|d1240c", _
      "LW8|(intensity)|360a08", _
      "LW7|(intensity)|470907", _
      "LW6|(intensity)|691110", _
      "LW5|(intensity)|000000", _
      "LW4|(intensity)|000000", _
      "LSA|(intensity)|fd3d27", _
      "LH7|(intensity)|3a0d0a", _
      "LH6|(intensity)|bc3024", _
      "LH5|(intensity)|fa3e2d", _
      "LH4|(intensity)|ae1c0e", _
      "LH3|(intensity)|390c08", _
      "LPR1|(intensity)|fe3c23", _
      "LPR3|(intensity)|a51a08", _
      "LPR2|(intensity)|3a0a06", _
      "LPR6|(intensity)|330c07", _
      "LPR5|(intensity)|fe3e2c", _
      "LPR4|(intensity)|020000" _
      )
  End With
  With .AddStep(0.63333, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|ff3a29", _
      "LC3|(intensity)|000000", _
      "LC4|(intensity)|d3281f", _
      "LC5|(intensity)|f53626", _
      "LC6|(intensity)|000000", _
      "LWiz|(intensity)|8c190b", _
      "LW9|(intensity)|060101", _
      "LW8|(intensity)|000000", _
      "LW7|(intensity)|000000", _
      "LW6|(intensity)|000000", _
      "LSA|(intensity)|f93e2d", _
      "LH7|(intensity)|000000", _
      "LH6|(intensity)|410a07", _
      "LH5|(intensity)|fd3e29", _
      "LH4|(intensity)|2d0906", _
      "LH3|(intensity)|000000", _
      "LPR1|(intensity)|ff3c16", _
      "LPR3|(intensity)|260a03", _
      "LPR2|(intensity)|270903", _
      "LPR6|(intensity)|000000", _
      "LPR5|(intensity)|fb3d23", _
      "LPR4|(intensity)|000000" _
      )
  End With
  With .AddStep(0.66667, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|f83d27", _
      "LC4|(intensity)|971c16", _
      "LC5|(intensity)|340903", _
      "LWiz|(intensity)|9e1d11", _
      "LW9|(intensity)|711810", _
      "LW6|(intensity)|1a0505", _
      "LSA|(intensity)|fe3d29", _
      "LH6|(intensity)|000000", _
      "LH5|(intensity)|fe3c17", _
      "LH4|(intensity)|1d0504", _
      "LPR1|(intensity)|c12211", _
      "LPR3|(intensity)|000000", _
      "LPR2|(intensity)|000000", _
      "LPR5|(intensity)|fe3d1c" _
      )
  End With
  With .AddStep(0.70000, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|fb3e2d", _
      "LC4|(intensity)|3c0703", _
      "LC5|(intensity)|000000", _
      "LWiz|(intensity)|000000", _
      "LW9|(intensity)|080202", _
      "LW6|(intensity)|000000", _
      "LSA|(intensity)|ff3e17", _
      "LH5|(intensity)|ff3b0a", _
      "LH4|(intensity)|000000", _
      "LPR1|(intensity)|4c0d0a", _
      "LPR2|(intensity)|1e080e", _
      "LPR5|(intensity)|6c0e06" _
      )
  End With
  With .AddStep(0.73333, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|fe3d2a", _
      "LC4|(intensity)|8f2115", _
      "LW9|(intensity)|260908", _
      "LSA|(intensity)|ff3b09", _
      "LH5|(intensity)|fc2d11", _
      "LH4|(intensity)|160408", _
      "LPR1|(intensity)|000000", _
      "LPR2|(intensity)|000000", _
      "LPR5|(intensity)|3a0c09" _
      )
  End With
  With .AddStep(0.76667, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|fd3c18", _
      "LC4|(intensity)|280604", _
      "LC5|(intensity)|330b06", _
      "LW9|(intensity)|000000", _
      "LSA|(intensity)|fb2b0d", _
      "LH5|(intensity)|250707", _
      "LH4|(intensity)|000000", _
      "LPR5|(intensity)|000000" _
      )
  End With
  With .AddStep(0.80000, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|f53a0b", _
      "LC4|(intensity)|000000", _
      "LC5|(intensity)|000000", _
      "LSA|(intensity)|000000", _
      "LH5|(intensity)|63150d" _
      )
  End With
  With .AddStep(0.83333, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|ee2e14", _
      "LSA|(intensity)|781d10", _
      "LH5|(intensity)|000000" _
      )
  End With
  With .AddStep(0.86667, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|350b0b", _
      "LSA|(intensity)|000000", _
      "LH5|(intensity)|0c0303" _
      )
  End With
  With .AddStep(0.90000, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|3a0d06", _
      "LH5|(intensity)|000000" _
      )
  End With
  With .AddStep(0.93333, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|000000" _
      )
  End With
  With .AddStep(0.96667, Null, Null)
  End With
End With





With CreateGlfShow("meteor_fall_left")
  With .AddStep(0.06667, Null, Null)
    .Lights = Array( _
      "gi16|(intensity)|fe2d15" _
      )
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "gi21|(intensity)|3d120f", _
      "gi16|(intensity)|fb3928", _
      "FL2|(intensity)|9a271f" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "gi21|(intensity)|fe2f19", _
      "gi16|(intensity)|aa1f12", _
      "FL2|(intensity)|000000" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|f43727", _
      "gi21|(intensity)|c32f22", _
      "gi18|(intensity)|f33828", _
      "gi16|(intensity)|fb3528" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|e43527", _
      "gi21|(intensity)|340b09", _
      "gi18|(intensity)|fe311b", _
      "gi16|(intensity)|ba2114" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|000000", _
      "gi21|(intensity)|3c0e0c", _
      "gi18|(intensity)|821b11", _
      "gi16|(intensity)|85170b", _
      "gi12|(intensity)|fe2d16", _
      "LTW1|(intensity)|5e1b16", _
      "LCC2|(intensity)|b62d22", _
      "LCC1|(intensity)|fe311c" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "gi21|(intensity)|000000", _
      "gi18|(intensity)|7f140a", _
      "gi16|(intensity)|a01d0f", _
      "gi12|(intensity)|f43727", _
      "gi11|(intensity)|fd3522", _
      "LS2|(intensity)|5a1916", _
      "LTW1|(intensity)|9e281f", _
      "LCC3|(intensity)|fd3724", _
      "LCC2|(intensity)|fe311b", _
      "LCC1|(intensity)|f93827" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "gi18|(intensity)|91180b", _
      "gi16|(intensity)|010000", _
      "gi12|(intensity)|7f170e", _
      "gi11|(intensity)|fe311c", _
      "LS2|(intensity)|fa3725", _
      "LTW1|(intensity)|000000", _
      "LCC3|(intensity)|ec3627", _
      "LCC2|(intensity)|671a13", _
      "LCC1|(intensity)|3d100b" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "gi18|(intensity)|3b0b09", _
      "gi16|(intensity)|070201", _
      "gi12|(intensity)|de2a1d", _
      "gi11|(intensity)|ee3623", _
      "LS2|(intensity)|4b1512", _
      "LCC3|(intensity)|000000", _
      "LCC2|(intensity)|0c0302", _
      "LCC1|(intensity)|4c1310" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "gi18|(intensity)|000000", _
      "gi16|(intensity)|000000", _
      "gi12|(intensity)|7b140b", _
      "gi11|(intensity)|ff3d27", _
      "gi09|(intensity)|c83125", _
      "LS1|(intensity)|a02920", _
      "LS2|(intensity)|000000", _
      "LCC3|(intensity)|1b0605", _
      "LCC2|(intensity)|330b08", _
      "LCC1|(intensity)|2e0b0b", _
      "LMet1|(intensity)|1e0a0a", _
      "LM1|(intensity)|fe331e" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "gi12|(intensity)|4b0b05", _
      "gi11|(intensity)|ff3b27", _
      "gi09|(intensity)|fe2d16", _
      "LS1|(intensity)|fe2f18", _
      "LCC3|(intensity)|000000", _
      "LCC2|(intensity)|000000", _
      "LCC1|(intensity)|000000", _
      "LMet1|(intensity)|000000", _
      "LM1|(intensity)|d03225" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "gi18|(intensity)|23070e", _
      "gi12|(intensity)|470b05", _
      "gi11|(intensity)|f63624", _
      "gi09|(intensity)|b82618", _
      "LS1|(intensity)|842017", _
      "LCWiz|(intensity)|4f1713", _
      "LM1|(intensity)|000000", _
      "LLI|(intensity)|3f1311" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
    .Lights = Array( _
      "gi18|(intensity)|000000", _
      "gi12|(intensity)|000000", _
      "gi11|(intensity)|ec3623", _
      "gi09|(intensity)|76140b", _
      "gi04|(intensity)|cf3125", _
      "LS1|(intensity)|000000", _
      "LCWiz|(intensity)|000000", _
      "LM1|(intensity)|300b0a", _
      "LLI|(intensity)|fe2e16", _
      "LLO|(intensity)|fe331f" _
      )
  End With
  With .AddStep(0.50000, Null, Null)
    .Lights = Array( _
      "gi11|(intensity)|a41c04", _
      "gi09|(intensity)|be1e0d", _
      "gi04|(intensity)|f53726", _
      "gi03|(intensity)|d53225", _
      "gi02|(intensity)|9b281f", _
      "LS1|(intensity)|3d0c08", _
      "LM1|(intensity)|000000", _
      "LLI|(intensity)|f43828", _
      "LLO|(intensity)|fe3725", _
      "LSL|(intensity)|b32d22" _
      )
  End With
  With .AddStep(0.53333, Null, Null)
    .Lights = Array( _
      "gi11|(intensity)|aa231c", _
      "gi09|(intensity)|470c07", _
      "gi04|(intensity)|000000", _
      "gi03|(intensity)|7b211a", _
      "gi02|(intensity)|fe2a12", _
      "gi01|(intensity)|e63627", _
      "LS1|(intensity)|000000", _
      "LLI|(intensity)|500f0b", _
      "LLO|(intensity)|6f1711", _
      "LSL|(intensity)|fe2c14" _
      )
  End With
  With .AddStep(0.56667, Null, Null)
    .Lights = Array( _
      "gi11|(intensity)|290606", _
      "gi09|(intensity)|310806", _
      "gi03|(intensity)|000000", _
      "gi02|(intensity)|bf2b1f", _
      "gi01|(intensity)|c02f23", _
      "LLI|(intensity)|862322", _
      "LLO|(intensity)|b91e14", _
      "LSL|(intensity)|d02c1c" _
      )
  End With
  With .AddStep(0.60000, Null, Null)
    .Lights = Array( _
      "gi11|(intensity)|5d120d", _
      "gi09|(intensity)|000000", _
      "gi02|(intensity)|520f09", _
      "gi01|(intensity)|000000", _
      "LLI|(intensity)|2d0b06", _
      "LLO|(intensity)|71140a", _
      "LSL|(intensity)|821609" _
      )
  End With
  With .AddStep(0.63333, Null, Null)
    .Lights = Array( _
      "gi11|(intensity)|000000", _
      "gi09|(intensity)|210705", _
      "gi02|(intensity)|661611", _
      "LLI|(intensity)|210705", _
      "LLO|(intensity)|3d0b08", _
      "LSL|(intensity)|d62510" _
      )
  End With
  With .AddStep(0.66667, Null, Null)
    .Lights = Array( _
      "gi09|(intensity)|000000", _
      "gi02|(intensity)|2d0907", _
      "LLI|(intensity)|000000", _
      "LLO|(intensity)|1e0605", _
      "LSL|(intensity)|5d0f08" _
      )
  End With
  With .AddStep(0.70000, Null, Null)
    .Lights = Array( _
      "gi09|(intensity)|020101", _
      "gi02|(intensity)|000000", _
      "LLO|(intensity)|000000", _
      "LSL|(intensity)|3b0807" _
      )
  End With
  With .AddStep(0.73333, Null, Null)
    .Lights = Array( _
      "gi09|(intensity)|000000", _
      "LLO|(intensity)|410c07", _
      "LSL|(intensity)|300705" _
      )
  End With
  With .AddStep(0.76667, Null, Null)
    .Lights = Array( _
      "LLO|(intensity)|000000", _
      "LSL|(intensity)|b32a20" _
      )
  End With
  With .AddStep(0.80000, Null, Null)
    .Lights = Array( _
      "LSL|(intensity)|000000" _
      )
  End With
  With .AddStep(0.83333, Null, Null)
  End With
  With .AddStep(0.86667, Null, Null)
  End With
  With .AddStep(0.90000, Null, Null)
  End With
  With .AddStep(0.93333, Null, Null)
  End With
  With .AddStep(0.96667, Null, Null)
  End With
End With






With CreateGlfShow("meteor_fall_right")
  With .AddStep(0.06667, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|f73726" _
      )
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|98271e" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|000000" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "gi13|(intensity)|631b17", _
      "LF1|(intensity)|2c0d0d", _
      "FL1|(intensity)|fe331e" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "gi15|(intensity)|d03225", _
      "gi13|(intensity)|fe2b13", _
      "LMLR|(intensity)|421312", _
      "LF3|(intensity)|83221c", _
      "LF2|(intensity)|fd3725", _
      "LF1|(intensity)|fe2e16", _
      "FL1|(intensity)|fe3420" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|7e211b", _
      "gi15|(intensity)|9e281f", _
      "gi13|(intensity)|ed3523", _
      "LS5|(intensity)|6e1e19", _
      "LMLR|(intensity)|c53024", _
      "LF3|(intensity)|fe270d", _
      "LF2|(intensity)|fe301b", _
      "LF1|(intensity)|e23526", _
      "LM5|(intensity)|fe301a", _
      "FL1|(intensity)|fc3c2a" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|fb3725", _
      "gi15|(intensity)|000000", _
      "gi13|(intensity)|b8220f", _
      "LS5|(intensity)|3c1210", _
      "LS6|(intensity)|fe321d", _
      "LMLR|(intensity)|000000", _
      "LF3|(intensity)|ff3c2c", _
      "LF2|(intensity)|871c0f", _
      "LF1|(intensity)|410e09", _
      "LM5|(intensity)|b72a1e", _
      "FL1|(intensity)|fd3e2c" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|210908", _
      "gi14|(intensity)|fc3725", _
      "gi13|(intensity)|fd3420", _
      "LS5|(intensity)|000000", _
      "LS6|(intensity)|f93827", _
      "LF3|(intensity)|fc3c1e", _
      "LF2|(intensity)|82180e", _
      "LF1|(intensity)|55130e", _
      "LM5|(intensity)|4c0f08", _
      "FL1|(intensity)|fa3e2b" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|000000", _
      "gi14|(intensity)|a62a1f", _
      "gi13|(intensity)|bd210f", _
      "gi10|(intensity)|421412", _
      "LS6|(intensity)|6d130a", _
      "LSC2|(intensity)|e63628", _
      "LSC1|(intensity)|fe2f19", _
      "LF3|(intensity)|fb3d24", _
      "LF2|(intensity)|74190d", _
      "LF1|(intensity)|000000", _
      "LMet4|(intensity)|3e1412", _
      "LM5|(intensity)|761409", _
      "FL1|(intensity)|f2371d" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "gi14|(intensity)|000000", _
      "gi13|(intensity)|7f170d", _
      "gi10|(intensity)|fe2e17", _
      "LS6|(intensity)|bf2419", _
      "LSC3|(intensity)|fe2f18", _
      "LSC2|(intensity)|fe2f18", _
      "LSC1|(intensity)|f33727", _
      "LF3|(intensity)|b11b08", _
      "LF2|(intensity)|0d0202", _
      "LMet4|(intensity)|571915", _
      "LM5|(intensity)|030100", _
      "FL1|(intensity)|92200c" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "gi13|(intensity)|610f02", _
      "gi10|(intensity)|cb3023", _
      "LS6|(intensity)|660f09", _
      "LSC3|(intensity)|f03626", _
      "LSC2|(intensity)|a82112", _
      "LSC1|(intensity)|73140c", _
      "LF3|(intensity)|090201", _
      "LF2|(intensity)|000000", _
      "LMet4|(intensity)|000000", _
      "LM5|(intensity)|000000", _
      "FL1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "gi13|(intensity)|440a05", _
      "gi10|(intensity)|3a0c08", _
      "LS6|(intensity)|3d0c06", _
      "LSC3|(intensity)|70140c", _
      "LSC2|(intensity)|be200f", _
      "LSC1|(intensity)|db2618", _
      "LF3|(intensity)|000000", _
      "LRI|(intensity)|e43627", _
      "LRO|(intensity)|87231d" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
    .Lights = Array( _
      "gi13|(intensity)|000000", _
      "gi10|(intensity)|480f0a", _
      "gi08|(intensity)|fe3725", _
      "gi07|(intensity)|521715", _
      "LS6|(intensity)|2e0a06", _
      "LSC3|(intensity)|e22819", _
      "LSC2|(intensity)|d22413", _
      "LSC1|(intensity)|6c110b", _
      "LRI|(intensity)|fe2e17", _
      "LRO|(intensity)|fe2c14" _
      )
  End With
  With .AddStep(0.50000, Null, Null)
    .Lights = Array( _
      "gi13|(intensity)|a92a1a", _
      "gi10|(intensity)|000000", _
      "gi08|(intensity)|8e241b", _
      "gi07|(intensity)|e13526", _
      "gi06|(intensity)|fe3725", _
      "gi05|(intensity)|481513", _
      "LS6|(intensity)|000000", _
      "LSC3|(intensity)|7d120b", _
      "LSC2|(intensity)|69130b", _
      "LSC1|(intensity)|1e0503", _
      "LRI|(intensity)|bc2614", _
      "LRO|(intensity)|9c251a", _
      "LSR|(intensity)|fe3420" _
      )
  End With
  With .AddStep(0.53333, Null, Null)
    .Lights = Array( _
      "gi13|(intensity)|000000", _
      "gi08|(intensity)|000000", _
      "gi07|(intensity)|260c0b", _
      "gi06|(intensity)|fe3522", _
      "gi05|(intensity)|ee3727", _
      "LSC3|(intensity)|4a0b06", _
      "LSC2|(intensity)|c62f27", _
      "LSC1|(intensity)|70130a", _
      "LRI|(intensity)|d32612", _
      "LRO|(intensity)|3e0d0a", _
      "LSR|(intensity)|fe3624" _
      )
  End With
  With .AddStep(0.56667, Null, Null)
    .Lights = Array( _
      "gi08|(intensity)|310b08", _
      "gi07|(intensity)|000000", _
      "gi06|(intensity)|6b1711", _
      "gi05|(intensity)|320e0e", _
      "LSC3|(intensity)|6f120a", _
      "LSC2|(intensity)|010000", _
      "LSC1|(intensity)|811d14", _
      "LRI|(intensity)|ea2a16", _
      "LRO|(intensity)|4a0d0a", _
      "LSR|(intensity)|47120a" _
      )
  End With
  With .AddStep(0.60000, Null, Null)
    .Lights = Array( _
      "gi08|(intensity)|000000", _
      "gi06|(intensity)|b11d13", _
      "gi05|(intensity)|000000", _
      "LSC3|(intensity)|320b07", _
      "LSC2|(intensity)|8a2012", _
      "LSC1|(intensity)|000000", _
      "LRI|(intensity)|891a11", _
      "LRO|(intensity)|000000", _
      "LSR|(intensity)|541514" _
      )
  End With
  With .AddStep(0.63333, Null, Null)
    .Lights = Array( _
      "gi06|(intensity)|731309", _
      "LSC3|(intensity)|000000", _
      "LSC2|(intensity)|200503", _
      "LSC1|(intensity)|100305", _
      "LRI|(intensity)|ec392c", _
      "LSR|(intensity)|060101" _
      )
  End With
  With .AddStep(0.66667, Null, Null)
    .Lights = Array( _
      "gi06|(intensity)|420a08", _
      "LSC3|(intensity)|340b0e", _
      "LSC2|(intensity)|000000", _
      "LSC1|(intensity)|000000", _
      "LRI|(intensity)|270503", _
      "LSR|(intensity)|000000" _
      )
  End With
  With .AddStep(0.70000, Null, Null)
    .Lights = Array( _
      "gi06|(intensity)|3a0805", _
      "LSC3|(intensity)|000000", _
      "LSC1|(intensity)|0e0303", _
      "LRI|(intensity)|8f2014" _
      )
  End With
  With .AddStep(0.73333, Null, Null)
    .Lights = Array( _
      "gi06|(intensity)|000000", _
      "LSC1|(intensity)|000000", _
      "LRI|(intensity)|2e0704" _
      )
  End With
  With .AddStep(0.76667, Null, Null)
    .Lights = Array( _
      "LRI|(intensity)|000000" _
      )
  End With
  With .AddStep(0.80000, Null, Null)
  End With
  With .AddStep(0.83333, Null, Null)
  End With
  With .AddStep(0.86667, Null, Null)
  End With
  With .AddStep(0.90000, Null, Null)
  End With
  With .AddStep(0.93333, Null, Null)
  End With
  With .AddStep(0.96667, Null, Null)
  End With
End With




End Sub





Sub CreateClusterBombShows()

With CreateGlfShow("cluster_explodes")

  With .AddStep(0.1, Null, Null)
    With .Shows("insert_swap2")
      .Key = "key_cb_xpl_inserts"
      .Speed = 1.5
      .Loops = 4
      .Priority = 10000
      With .Tokens()
          .Add "color1", "ffffff"
          .Add "color2", ClusterBombColor
          .Add "intensity", 100
      End With
    End With
  End With

  With .AddStep(0.10, Null, Null)
    With .Shows("flash_color")
      .Key = "key_cb_xpl_gi1a"
      .Speed = 15
      .Loops = 3
      .Priority = 10010
      With .Tokens()
          .Add "lights", "gi04"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(0.11, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_cb_xpl_gi1"
      .Speed = 4
      .Loops = 1
      .Priority = 10000
      With .Tokens()
          .Add "lights", "gi04"
          .Add "color", ClusterBombColor
      End With
    End With
  End With

  With .AddStep(0.14, Null, Null)
    With .Shows("flash_color")
      .Key = "key_cb_xpl_gi2a"
      .Speed = 15
      .Loops = 3
      .Priority = 10010
      With .Tokens()
          .Add "lights", "gi07"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(0.15, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_cb_xpl_gi2"
      .Speed = 4
      .Loops = 1
      .Priority = 10000
      With .Tokens()
          .Add "lights", "gi07"
          .Add "color", ClusterBombColor
      End With
    End With
  End With

  With .AddStep(0.19, Null, Null)
    With .Shows("flash_color")
      .Key = "key_cb_xpl_gi3a"
      .Speed = 15
      .Loops = 3
      .Priority = 10010
      With .Tokens()
          .Add "lights", "gi10"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(0.2, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_cb_xpl_gi3"
      .Speed = 4
      .Loops = 1
      .Priority = 10000
      With .Tokens()
          .Add "lights", "gi10"
          .Add "color", ClusterBombColor
      End With
    End With
  End With

  With .AddStep(0.21, Null, Null)
    With .Shows("flash_color")
      .Key = "key_cb_xpl_gi4a"
      .Speed = 15
      .Loops = 3
      .Priority = 10010
      With .Tokens()
          .Add "lights", "gi09"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(0.22, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_cb_xpl_gi4"
      .Speed = 4
      .Loops = 1
      .Priority = 10000
      With .Tokens()
          .Add "lights", "gi09"
          .Add "color", ClusterBombColor
      End With
    End With
  End With

  With .AddStep(0.24, Null, Null)
    With .Shows("flash_color")
      .Key = "key_cb_xpl_gi5a"
      .Speed = 15
      .Loops = 3
      .Priority = 10010
      With .Tokens()
          .Add "lights", "gi11"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(0.25, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_cb_xpl_gi5"
      .Speed = 4
      .Loops = 1
      .Priority = 10000
      With .Tokens()
          .Add "lights", "gi11"
          .Add "color", ClusterBombColor
      End With
    End With
  End With

  With .AddStep(0.52, Null, Null)
    With .Shows("flash_color")
      .Key = "key_cb_xpl_gi6a"
      .Speed = 15
      .Loops = 3
      .Priority = 10010
      With .Tokens()
          .Add "lights", "gi20"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(0.53, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_cb_xpl_gi6"
      .Speed = 4
      .Loops = 1
      .Priority = 10000
      With .Tokens()
          .Add "lights", "gi20"
          .Add "color", ClusterBombColor
      End With
    End With
  End With

  With .AddStep(0.54, Null, Null)
    With .Shows("flash_color")
      .Key = "key_cb_xpl_gi7a"
      .Speed = 15
      .Loops = 3
      .Priority = 10010
      With .Tokens()
          .Add "lights", "gi13"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(0.55, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_cb_xpl_gi7"
      .Speed = 4
      .Loops = 1
      .Priority = 10000
      With .Tokens()
          .Add "lights", "gi13"
          .Add "color", ClusterBombColor
      End With
    End With
  End With

  With .AddStep(0.92, Null, Null)
    With .Shows("flash_color")
      .Key = "key_cb_xpl_gi8a"
      .Speed = 15
      .Loops = 3
      .Priority = 10010
      With .Tokens()
          .Add "lights", "gi03"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(0.93, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_cb_xpl_gi8"
      .Speed = 4
      .Loops = 1
      .Priority = 10000
      With .Tokens()
          .Add "lights", "gi03"
          .Add "color", ClusterBombColor
      End With
    End With
  End With

  With .AddStep(0.95, Null, Null)
    With .Shows("flash_color")
      .Key = "key_cb_xpl_gi9a"
      .Speed = 15
      .Loops = 3
      .Priority = 10010
      With .Tokens()
          .Add "lights", "gi08"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(0.96, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_cb_xpl_gi9"
      .Speed = 4
      .Loops = 1
      .Priority = 10000
      With .Tokens()
          .Add "lights", "gi08"
          .Add "color", ClusterBombColor
      End With
    End With
  End With

  With .AddStep(1.38, Null, Null)
    With .Shows("flash_color")
      .Key = "key_cb_xpl_gi10a"
      .Speed = 15
      .Loops = 3
      .Priority = 10010
      With .Tokens()
          .Add "lights", "gi19"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(1.39, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_cb_xpl_gi10"
      .Speed = 4
      .Loops = 1
      .Priority = 10000
      With .Tokens()
          .Add "lights", "gi19"
          .Add "color", ClusterBombColor
      End With
    End With
  End With

  With .AddStep(1.40, Null, Null)
    With .Shows("flash_color")
      .Key = "key_cb_xpl_gi11a"
      .Speed = 15
      .Loops = 3
      .Priority = 10010
      With .Tokens()
          .Add "lights", "gi02"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(1.41, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_cb_xpl_gi11"
      .Speed = 4
      .Loops = 1
      .Priority = 10000
      With .Tokens()
          .Add "lights", "gi02"
          .Add "color", ClusterBombColor
      End With
    End With
  End With

  With .AddStep(2.49, Null, Null)
    With .Shows("flash_color")
      .Key = "key_cb_xpl_gi12a"
      .Speed = 15
      .Loops = 3
      .Priority = 10010
      With .Tokens()
          .Add "lights", "gi12"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(2.5, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_cb_xpl_gi12"
      .Speed = 4
      .Loops = 1
      .Priority = 10000
      With .Tokens()
          .Add "lights", "gi12"
          .Add "color", ClusterBombColor
      End With
    End With
  End With

  With .AddStep(2.54, Null, Null)
    With .Shows("flash_color")
      .Key = "key_cb_xpl_gi13a"
      .Speed = 15
      .Loops = 3
      .Priority = 10010
      With .Tokens()
          .Add "lights", "gi05"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(2.55, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_cb_xpl_gi13"
      .Speed = 4
      .Loops = 1
      .Priority = 10000
      With .Tokens()
          .Add "lights", "gi05"
          .Add "color", ClusterBombColor
      End With
    End With
  End With

  With .AddStep(3.49, Null, Null)
    With .Shows("flash_color")
      .Key = "key_cb_xpl_gi14a"
      .Speed = 15
      .Loops = 3
      .Priority = 10010
      With .Tokens()
          .Add "lights", "gi22"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(3.5, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_cb_xpl_gi14"
      .Speed = 4
      .Loops = 1
      .Priority = 10000
      With .Tokens()
          .Add "lights", "gi22"
          .Add "color", ClusterBombColor
      End With
    End With
  End With

  With .AddStep(3.54, Null, Null)
    With .Shows("flash_color")
      .Key = "key_cb_xpl_gi15a"
      .Speed = 15
      .Loops = 3
      .Priority = 10010
      With .Tokens()
          .Add "lights", "gi20"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(3.55, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_cb_xpl_gi15"
      .Speed = 4
      .Loops = 1
      .Priority = 10000
      With .Tokens()
          .Add "lights", "gi20"
          .Add "color", ClusterBombColor
      End With
    End With
  End With

End With


With CreateGlfShow("cluster_bomb_acquired")
  With .AddStep(0.00000, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.03333, Null, Null)
  End With
  With .AddStep(0.06667, Null, Null)
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "gi16|(intensity)|dadada" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "gi16|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
  End With
  With .AddStep(0.20000, Null, Null)
  End With
  With .AddStep(0.23333, Null, Null)
  End With
  With .AddStep(0.26667, Null, Null)
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|000000", _
      "LSwC2|(intensity)|060606" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "LSwC2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "gi16|(intensity)|000000", _
      "LSwC3|(intensity)|6b6b6b" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|(color)", _
      "gi21|(intensity)|(color)", _
      "LSwC3|(intensity)|(color)", _
      "LSwC1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
  End With
  With .AddStep(0.50000, Null, Null)
  End With
  With .AddStep(0.53333, Null, Null)
    .Lights = Array( _
      "LPC5|(intensity)|fefefe" _
      )
  End With
  With .AddStep(0.56667, Null, Null)
    .Lights = Array( _
      "LSwC2|(intensity)|aeaeae", _
      "LPC5|(intensity)|(color)", _
      "LPC4|(intensity)|(color)", _
      "LM3|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.60000, Null, Null)
    .Lights = Array( _
      "gi15|(intensity)|(color)", _
      "LSwC2|(intensity)|000000" _
      )
  End With
  With .AddStep(0.63333, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|(color)", _
      "gi18|(intensity)|(color)", _
      "LPF|(intensity)|fcfcfc", _
      "LF1|(intensity)|(color)", _
      "LM4|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.66667, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|000000", _
      "gi21|(intensity)|000000", _
      "gi13|(intensity)|(color)", _
      "LPF|(intensity)|(color)", _
      "LSwC3|(intensity)|000000", _
      "LSwC1|(intensity)|000000", _
      "LMR|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.70000, Null, Null)
    .Lights = Array( _
      "LF2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.73333, Null, Null)
    .Lights = Array( _
      "LEBR|(intensity)|(color)", _
      "LPC1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.76667, Null, Null)
    .Lights = Array( _
      "LPC5|(intensity)|000000", _
      "LF3|(intensity)|(color)", _
      "LPC2|(intensity)|2f2f2f" _
      )
  End With
  With .AddStep(0.80000, Null, Null)
    .Lights = Array( _
      "LX|(intensity)|fefefe", _
      "LPC4|(intensity)|000000", _
      "LPC2|(intensity)|(color)", _
      "LM3|(intensity)|000000" _
      )
  End With
  With .AddStep(0.83333, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|fefefe", _
      "gi19|(intensity)|(color)", _
      "gi15|(intensity)|000000", _
      "LX|(intensity)|(color)", _
      "LMLR|(intensity)|(color)", _
      "LF1|(intensity)|010101", _
      "LPC3|(intensity)|(color)", _
      "LM5|(intensity)|(color)", _
      "LM4|(intensity)|000000" _
      )
  End With
  With .AddStep(0.86667, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|000000", _
      "gi18|(intensity)|000000", _
      "gi13|(intensity)|000000", _
      "gi12|(intensity)|(color)", _
      "LPF|(intensity)|000000", _
      "LMR|(intensity)|fbfbfb", _
      "LF1|(intensity)|000000", _
      "LM2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.90000, Null, Null)
    .Lights = Array( _
      "LS5|(intensity)|fefefe", _
      "LMR|(intensity)|000000", _
      "LF2|(intensity)|000000" _
      )
  End With
  With .AddStep(0.93333, Null, Null)
    .Lights = Array( _
      "LS5|(intensity)|(color)", _
      "LS4|(intensity)|(color)", _
      "LW1|(intensity)|(color)", _
      "LEBR|(intensity)|000000", _
      "LPC1|(intensity)|000000", _
      "LCC1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.96667, Null, Null)
    .Lights = Array( _
      "LF3|(intensity)|000000", _
      "LPC2|(intensity)|000000", _
      "LTW2|(intensity)|(color)" _
      )
  End With
  With .AddStep(1.00000, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|000000", _
      "gi14|(intensity)|fcfcfc", _
      "LX|(intensity)|000000", _
      "LS6|(intensity)|(color)", _
      "LW2|(intensity)|c7c7c7", _
      "LMLR|(intensity)|000000", _
      "LTW1|(intensity)|(color)", _
      "LCC2|(intensity)|(color)", _
      "LM5|(intensity)|000000" _
      )
  End With
  With .AddStep(1.03333, Null, Null)
    .Lights = Array( _
      "gi14|(intensity)|(color)", _
      "LW2|(intensity)|(color)", _
      "LPC3|(intensity)|000000", _
      "LM2|(intensity)|000000" _
      )
  End With
  With .AddStep(1.06667, Null, Null)
    .Lights = Array( _
      "gi12|(intensity)|000000", _
      "LW3|(intensity)|f2f2f2" _
      )
  End With
  With .AddStep(1.10000, Null, Null)
    .Lights = Array( _
      "gi11|(intensity)|(color)", _
      "LS5|(intensity)|000000", _
      "LS4|(intensity)|000000", _
      "LW3|(intensity)|(color)", _
      "LW1|(intensity)|c8c8c8", _
      "LCC3|(intensity)|(color)", _
      "LCC1|(intensity)|000000" _
      )
  End With
  With .AddStep(1.13333, Null, Null)
    .Lights = Array( _
      "LS3|(intensity)|(color)", _
      "LW1|(intensity)|000000", _
      "LTW2|(intensity)|000000" _
      )
  End With
  With .AddStep(1.16667, Null, Null)
    .Lights = Array( _
      "gi14|(intensity)|000000", _
      "LS6|(intensity)|000000", _
      "LW4|(intensity)|(color)", _
      "LW2|(intensity)|000000", _
      "LTW1|(intensity)|000000", _
      "LCC2|(intensity)|000000" _
      )
  End With
  With .AddStep(1.20000, Null, Null)
    .Lights = Array( _
      "LS2|(intensity)|(color)" _
      )
  End With
  With .AddStep(1.23333, Null, Null)
    .Lights = Array( _
      "gi11|(intensity)|000000", _
      "LW3|(intensity)|000000", _
      "LCC3|(intensity)|000000" _
      )
  End With
  With .AddStep(1.26667, Null, Null)
    .Lights = Array( _
      "gi10|(intensity)|(color)", _
      "LW5|(intensity)|(color)", _
      "LSC1|(intensity)|(color)", _
      "LMet2|(intensity)|(color)" _
      )
  End With
  With .AddStep(1.30000, Null, Null)
    .Lights = Array( _
      "LS3|(intensity)|000000", _
      "LW4|(intensity)|000000", _
      "LSC2|(intensity)|3b3b3b", _
      "LMet3|(intensity)|(color)" _
      )
  End With
  With .AddStep(1.33333, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|(color)", _
      "LS2|(intensity)|000000", _
      "LSC2|(intensity)|(color)" _
      )
  End With
  With .AddStep(1.36667, Null, Null)
    .Lights = Array( _
      "LW6|(intensity)|(color)", _
      "LSC3|(intensity)|(color)", _
      "LSC1|(intensity)|0d0d0d" _
      )
  End With
  With .AddStep(1.40000, Null, Null)
    .Lights = Array( _
      "gi10|(intensity)|000000", _
      "LW5|(intensity)|000000", _
      "LSC1|(intensity)|000000", _
      "LMet4|(intensity)|(color)", _
      "LMet3|(intensity)|000000", _
      "LMet2|(intensity)|000000" _
      )
  End With
  With .AddStep(1.43333, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|000000", _
      "LSC2|(intensity)|000000", _
      "LRO|(intensity)|fefefe", _
      "LSR|(intensity)|(color)" _
      )
  End With
  With .AddStep(1.46667, Null, Null)
    .Lights = Array( _
      "LW7|(intensity)|(color)", _
      "LW6|(intensity)|000000", _
      "LSC3|(intensity)|000000", _
      "LMet1|(intensity)|(color)", _
      "LRO|(intensity)|(color)" _
      )
  End With
  With .AddStep(1.50000, Null, Null)
    .Lights = Array( _
      "LMet4|(intensity)|000000" _
      )
  End With
  With .AddStep(1.53333, Null, Null)
    .Lights = Array( _
      "gi09|(intensity)|(color)", _
      "gi06|(intensity)|(color)", _
      "LM1|(intensity)|(color)", _
      "LRO|(intensity)|000000", _
      "LSR|(intensity)|000000" _
      )
  End With
  With .AddStep(1.56667, Null, Null)
    .Lights = Array( _
      "gi05|(intensity)|(color)", _
      "LW8|(intensity)|(color)", _
      "LW7|(intensity)|000000", _
      "LMet1|(intensity)|000000", _
      "LRI|(intensity)|(color)" _
      )
  End With
  With .AddStep(1.60000, Null, Null)
    .Lights = Array( _
      "gi06|(intensity)|000000", _
      "LM1|(intensity)|000000" _
      )
  End With
  With .AddStep(1.63333, Null, Null)
    .Lights = Array( _
      "gi09|(intensity)|000000", _
      "gi08|(intensity)|(color)", _
      "LS1|(intensity)|(color)", _
      "LW8|(intensity)|000000", _
      "LSA|(intensity)|313131", _
      "LRI|(intensity)|000000" _
      )
  End With
  With .AddStep(1.66667, Null, Null)
    .Lights = Array( _
      "gi07|(intensity)|(color)", _
      "gi05|(intensity)|000000", _
      "LLWiz|(intensity)|(color)", _
      "LW9|(intensity)|(color)", _
      "LSA|(intensity)|(color)" _
      )
  End With
  With .AddStep(1.70000, Null, Null)
    .Lights = Array( _
      "gi08|(intensity)|000000", _
      "LS1|(intensity)|000000", _
      "LSA|(intensity)|fefefe", _
      "LH9|(intensity)|(color)", _
      "LSL|(intensity)|(color)" _
      )
  End With
  With .AddStep(1.73333, Null, Null)
    .Lights = Array( _
      "gi07|(intensity)|000000", _
      "LLWiz|(intensity)|000000", _
      "LC8|(intensity)|(color)", _
      "LW9|(intensity)|000000", _
      "LSA|(intensity)|000000", _
      "LH8|(intensity)|(color)", _
      "LLO|(intensity)|(color)", _
      "LSL|(intensity)|f1f1f1" _
      )
  End With
  With .AddStep(1.76667, Null, Null)
    .Lights = Array( _
      "gi02|(intensity)|(color)", _
      "gi01|(intensity)|fefefe", _
      "LC7|(intensity)|(color)", _
      "LWiz|(intensity)|(color)", _
      "LH9|(intensity)|000000", _
      "LH8|(intensity)|ececec", _
      "LH7|(intensity)|(color)", _
      "LSL|(intensity)|000000" _
      )
  End With
  With .AddStep(1.80000, Null, Null)
    .Lights = Array( _
      "gi01|(intensity)|(color)", _
      "LC6|(intensity)|(color)", _
      "LC8|(intensity)|000000", _
      "LWiz|(intensity)|121212", _
      "LH8|(intensity)|000000", _
      "LH7|(intensity)|000000", _
      "LH6|(intensity)|(color)", _
      "LLO|(intensity)|000000" _
      )
  End With
  With .AddStep(1.83333, Null, Null)
    .Lights = Array( _
      "gi04|(intensity)|(color)", _
      "gi03|(intensity)|(color)", _
      "gi02|(intensity)|000000", _
      "gi01|(intensity)|000000", _
      "LCWiz|(intensity)|(color)", _
      "LC1|(intensity)|(color)", _
      "LC2|(intensity)|(color)", _
      "LC3|(intensity)|(color)", _
      "LC4|(intensity)|(color)", _
      "LC5|(intensity)|(color)", _
      "LC6|(intensity)|000000", _
      "LC7|(intensity)|000000", _
      "LWiz|(intensity)|000000", _
      "LH6|(intensity)|000000", _
      "LH5|(intensity)|(color)", _
      "LH4|(intensity)|(color)", _
      "LH3|(intensity)|(color)", _
      "LH2|(intensity)|(color)", _
      "LH1|(intensity)|(color)", _
      "LPR1|(intensity)|(color)", _
      "LPR3|(intensity)|(color)", _
      "LPR2|(intensity)|(color)", _
      "LPR6|(intensity)|(color)", _
      "LPR5|(intensity)|(color)", _
      "LPR4|(intensity)|(color)", _
      "LMR2|(intensity)|(color)", _
      "LMR1|(intensity)|(color)", _
      "LCR2|(intensity)|(color)", _
      "LCR1|(intensity)|(color)", _
      "LLI|(intensity)|(color)" _
      )
  End With
  With .AddStep(1.86667, Null, Null)
    .Lights = Array( _
      "LCWiz|(intensity)|000000", _
      "LC5|(intensity)|000000", _
      "LH5|(intensity)|000000", _
      "LH4|(intensity)|000000", _
      "LPR6|(intensity)|000000", _
      "LMR2|(intensity)|000000", _
      "LMR1|(intensity)|000000", _
      "LLI|(intensity)|000000" _
      )
  End With
  With .AddStep(1.90000, Null, Null)
    .Lights = Array( _
      "LC4|(intensity)|000000", _
      "LH3|(intensity)|000000", _
      "LH2|(intensity)|000000", _
      "LH1|(intensity)|000000" _
      )
  End With
  With .AddStep(1.93333, Null, Null)
    .Lights = Array( _
      "LC1|(intensity)|000000", _
      "LC2|(intensity)|000000", _
      "LC3|(intensity)|000000", _
      "LPR3|(intensity)|000000", _
      "LPR5|(intensity)|000000" _
      )
  End With
  With .AddStep(1.96667, Null, Null)
    .Lights = Array( _
      "gi04|(intensity)|000000", _
      "gi03|(intensity)|000000", _
      "LPR4|(intensity)|000000" _
      )
  End With
End With



End Sub


Sub CreateComboCommandShows()


    With CreateGlfShow("combo_command_scoop")

        With .AddStep(Null, Null, .1)
            .Lights = Array( _
                "LEBR|0|(color)", _
                "LMR|(intensity2)|(color)", _
                "LX|(intensity1)|(color)")
        End With
        With .AddStep(Null, Null, .1)
            .Lights = Array( _
                "LEBR|(intensity1)|(color)", _
                "LMR|0|(color)", _
                "LX|(intensity2)|(color)")
        End With
        With .AddStep(Null, Null, .1)
            .Lights = Array( _
                "LEBR|(intensity2)|(color)", _
                "LMR|(intensity1)|(color)", _
                "LX|0|(color)")
        End With

    End With



End Sub


Sub CreateEarthHitShows()


With CreateGlfShow("earth_hit_bg")
  With .AddStep(0.01, Null, Null)
      With .DOFEvent("2")
          .Action = "DOF_ON"
      End With
  End With
  With .AddStep(0.02, Null, Null)
      With .Shows("flash_color_fadeout")
          .Key = "key_DOF2"
          .Speed = 10
          .Loops = 1
          With .Tokens()
              .Add "color", GIColor3000k
              .Add "lights", "LBG02"
          End With
      End With
  End With
  With .AddStep(0.1, Null, Null)
      With .DOFEvent("1")
          .Action = "DOF_ON"
      End With
  End With
  With .AddStep(0.12, Null, Null)
      With .Shows("flash_color_fadeout")
          .Key = "key_DOF1"
          .Speed = 10
          .Loops = 1
          With .Tokens()
              .Add "color", GIColor3000k
              .Add "lights", "LBG01"
          End With
      End With
  End With
  With .AddStep(0.3, Null, Null)
      With .DOFEvent("2")
          .Action = "DOF_OFF"
      End With
  End With
  With .AddStep(0.4, Null, Null)
      With .DOFEvent("1")
          .Action = "DOF_OFF"
      End With
  End With
  With .AddStep(0.41, Null, Null)
  End With
End WIth


With CreateGlfShow("earth_hit")
    With .AddStep(Null, Null, 0.1)
        With .Shows("insert_gi_slide_up")
            .Key = "insert_earth_hit_A"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorHotColor
                .Add "intensity", 100
            End With
        End With
    End With
    ' With .AddStep(Null, Null, 0.1)
    '     With .Shows("insert_gi_slide_up")
    '         .Key = "insert_earth_hit_B"
    '         .Speed = 1
    '         .Loops = 1
    '         With .Tokens()
    '             .Add "color", MeteorHotColor
    '             .Add "intensity", 10
    '         End With
    '     End With
    ' End With
End With


With CreateGlfShow("earth_hit_center")
  With .AddStep(0.03333, Null, Null)
    .Lights = Array( _
      "giapron|100|411804" _
      )
  End With
  With .AddStep(0.06667, Null, Null)
    .Lights = Array( _
      "giapron|100|a14c03", _
      "FL3|100|260804" _
      )
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "giapron|100|e06a0b", _
      "gi06|100|010101", _
      "gi05|100|010101", _
      "LSA|100|35130c", _
      "LSR|100|010101", _
      "FL3|100|371508" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "giapron|100|ed8e0e", _
      "gi07|100|010101", _
      "gi05|100|040102", _
      "LC3|100|010101", _
      "LC4|100|010101", _
      "LC5|100|010101", _
      "LC6|100|010101", _
      "LC7|100|010101", _
      "LSA|100|9a3c04", _
      "LH9|100|010101", _
      "LH8|100|060101", _
      "LH7|100|0f0300", _
      "LH6|100|210803", _
      "LH5|100|060400", _
      "LH4|100|1c0a02", _
      "LH3|100|060101", _
      "LH2|100|060303", _
      "LH1|100|090001", _
      "FL3|100|ed7b14" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "giapron|100|fce335", _
      "gi08|100|010101", _
      "gi07|100|000201", _
      "gi06|100|2c0500", _
      "gi05|100|52220d", _
      "gi02|100|0e0905", _
      "gi01|100|0c0200", _
      "LC1|100|3a0f02", _
      "LC2|100|571e03", _
      "LC3|100|5c1a00", _
      "LC4|100|612608", _
      "LC5|100|6f2801", _
      "LC6|100|622301", _
      "LC7|100|5a2102", _
      "LC8|100|572709", _
      "LSA|100|af4502", _
      "LH9|100|5a280c", _
      "LH8|100|672e02", _
      "LH7|100|783003", _
      "LH6|100|b15c18", _
      "LH5|100|8e3c02", _
      "LH4|100|82380d", _
      "LH3|100|732705", _
      "LH2|100|5a2109", _
      "LH1|100|471202", _
      "LPR3|100|060002", _
      "LPR2|100|010101", _
      "LPR6|100|391605", _
      "LPR5|100|431605", _
      "LPR4|100|451404", _
      "LMR2|100|010101", _
      "LRI|100|010101", _
      "LRO|100|010101", _
      "LSR|100|0e0202", _
      "LSL|100|020202", _
      "FL2|100|080300", _
      "FL3|100|faf1f7" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "giapron|100|fff878", _
      "gi08|100|090000", _
      "gi07|100|4c180c", _
      "gi06|100|541400", _
      "gi05|100|6e1f00", _
      "gi04|100|100b06", _
      "gi03|100|060904", _
      "gi02|100|8d360b", _
      "gi01|100|c94e03", _
      "LC1|100|92350d", _
      "LC2|100|b14617", _
      "LC3|100|a23900", _
      "LC4|100|b74c06", _
      "LC5|100|af4d06", _
      "LC6|100|b8590f", _
      "LC7|100|882d03", _
      "LC8|100|853206", _
      "LSA|100|dc6209", _
      "LH9|100|8c3c0d", _
      "LH8|100|ac4f29", _
      "LH7|100|f38f1b", _
      "LH6|100|cb4a03", _
      "LH5|100|bc4c0f", _
      "LH4|100|a84c17", _
      "LH3|100|b34411", _
      "LH2|100|bd4703", _
      "LH1|100|831c00", _
      "LPR1|100|481a09", _
      "LPR3|100|863905", _
      "LPR2|100|732c08", _
      "LPR6|100|b65c0e", _
      "LPR5|100|9b3b04", _
      "LPR4|100|90370b", _
      "LMR2|100|4d1b02", _
      "LMR1|100|200902", _
      "LCR2|100|401402", _
      "LCR1|100|130100", _
      "LRO|100|010000", _
      "LSR|100|1c0501", _
      "LSL|100|1b0807", _
      "FL2|100|100503", _
      "FL3|100|f8c43b" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "giapron|100|f9e44a", _
      "gi08|100|5a1f01", _
      "gi07|100|982e05", _
      "gi06|100|ba450a", _
      "gi05|100|a13d0a", _
      "gi04|100|0a0501", _
      "gi03|100|992e03", _
      "gi02|100|965020", _
      "gi01|100|b54105", _
      "LSwC2|100|050401", _
      "LLWiz|100|010101", _
      "LC1|100|cc410a", _
      "LC2|100|b63804", _
      "LC3|100|ca480b", _
      "LC4|100|c65008", _
      "LC5|100|c44b0c", _
      "LC6|100|e67e12", _
      "LC7|100|db7324", _
      "LC8|100|d55e07", _
      "LSA|100|dd7e1a", _
      "LH9|100|dc731f", _
      "LH8|100|ba4f19", _
      "LH7|100|bf4c10", _
      "LH6|100|f19010", _
      "LH5|100|d96609", _
      "LH4|100|c86107", _
      "LH3|100|d85600", _
      "LH2|100|ba3304", _
      "LH1|100|ba3d08", _
      "LPR1|100|9b3b01", _
      "LPR3|100|b24103", _
      "LPR2|100|9c3903", _
      "LPR6|100|ee7c10", _
      "LPR5|100|e27015", _
      "LPR4|100|af3d0b", _
      "LMR2|100|8a360c", _
      "LMR1|100|712901", _
      "LCR2|100|a8320d", _
      "LCR1|100|833805", _
      "LRI|100|1f0200", _
      "LRO|100|160201", _
      "LLI|100|020102", _
      "LLO|100|0d0202", _
      "LSR|100|6e2907", _
      "LSL|100|481907", _
      "FL2|100|0f0400", _
      "FL3|100|fcf18d" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "giapron|100|fed534", _
      "gi10|100|010101", _
      "gi08|100|94360d", _
      "gi07|100|9c4810", _
      "gi06|100|ffeb50", _
      "gi05|100|fcd546", _
      "gi04|100|cb510e", _
      "gi03|100|9d3e0a", _
      "gi02|100|be5112", _
      "gi01|100|fbea54", _
      "LCWiz|100|1f0601", _
      "LLWiz|100|300d04", _
      "LC1|100|dc5b05", _
      "LC2|100|d55703", _
      "LC3|100|e26e03", _
      "LC4|100|c34e0b", _
      "LC5|100|c24e13", _
      "LC6|100|eda121", _
      "LC7|100|f3ba2b", _
      "LC8|100|f4c038", _
      "LWiz|100|491b08", _
      "LSC3|100|010101", _
      "LSC2|100|010101", _
      "LSA|100|fee671", _
      "LH9|100|fdde40", _
      "LH8|100|fee84b", _
      "LH7|100|fad04c", _
      "LH6|100|fcbb28", _
      "LH5|100|c04602", _
      "LH4|100|cc5d1a", _
      "LH3|100|e5a91f", _
      "LH2|100|f1d12c", _
      "LH1|100|e8bf0b", _
      "LPR1|100|e4721a", _
      "LPR3|100|e16f04", _
      "LPR2|100|c25003", _
      "LPR6|100|f69b1b", _
      "LPR5|100|e58c06", _
      "LPR4|100|e35d02", _
      "LMR2|100|bc3d02", _
      "LMR1|100|ac4507", _
      "LCR2|100|af3101", _
      "LCR1|100|8d2900", _
      "LRI|100|5e1d04", _
      "LRO|100|4d1401", _
      "LLI|100|aa4203", _
      "LLO|100|340b04", _
      "LSR|100|f58d14", _
      "LSL|100|6d361d" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "giapron|100|f18a1f", _
      "gi09|100|010000", _
      "gi08|100|d25b1b", _
      "gi07|100|f9a516", _
      "gi06|100|ff9411", _
      "gi05|100|fbb01b", _
      "gi04|100|c9640f", _
      "gi03|100|efd630", _
      "gi02|100|fdd633", _
      "gi01|100|fdb018", _
      "LS1|100|1d1109", _
      "LCWiz|100|521302", _
      "LLWiz|100|68230e", _
      "LC1|100|edc948", _
      "LC2|100|fde34a", _
      "LC3|100|fae85c", _
      "LC4|100|fdcd3a", _
      "LC5|100|fdf66c", _
      "LC6|100|fcd829", _
      "LC7|100|fde550", _
      "LC8|100|fdd847", _
      "LWiz|100|983a02", _
      "LW9|100|602707", _
      "LW8|100|070500", _
      "LSC3|100|020001", _
      "LSC1|100|010101", _
      "LMet4|100|010101", _
      "LSA|100|fadf4e", _
      "LH9|100|fbf076", _
      "LH8|100|fffc96", _
      "LH7|100|fdea47", _
      "LH6|100|faee82", _
      "LH5|100|f9f18c", _
      "LH4|100|ffcd2f", _
      "LH3|100|fef47f", _
      "LH2|100|fcd536", _
      "LH1|100|fcf3c7", _
      "LPR1|100|e89107", _
      "LPR3|100|e38029", _
      "LPR2|100|cd540c", _
      "LPR6|100|fce74f", _
      "LPR5|100|fbdf3a", _
      "LPR4|100|f6b812", _
      "LMR2|100|ebbc0c", _
      "LMR1|100|b1430b", _
      "LCR2|100|f9a103", _
      "LCR1|100|d14d07", _
      "LRI|100|a24408", _
      "LRO|100|7b3302", _
      "LLI|100|d16601", _
      "LLO|100|622103", _
      "LSR|100|e6a711", _
      "LSL|100|ea991d" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "giapron|100|591603", _
      "gi14|100|010101", _
      "gi10|100|120300", _
      "gi09|100|1c0a05", _
      "gi08|100|f7c529", _
      "gi07|100|ffbf26", _
      "gi06|100|fccf2f", _
      "gi05|100|fcd436", _
      "gi04|100|fbcc29", _
      "gi03|100|fdcc38", _
      "gi02|100|da6806", _
      "gi01|100|fbc432", _
      "LS1|100|40150a", _
      "LCWiz|100|9d2703", _
      "LLWiz|100|c15a02", _
      "LC1|100|fcd635", _
      "LC2|100|fcec57", _
      "LC3|100|fcea5a", _
      "LC4|100|fdf288", _
      "LC5|100|fdee83", _
      "LC6|100|fdf0ac", _
      "LC7|100|fde660", _
      "LC8|100|fecd2c", _
      "LWiz|100|e06f14", _
      "LW9|100|af4d03", _
      "LW8|100|8e3b02", _
      "LW7|100|491c08", _
      "LSC3|100|330e01", _
      "LSC2|100|130100", _
      "LSC1|100|020001", _
      "LMet4|100|140201", _
      "LMet3|100|010101", _
      "LMet1|100|070000", _
      "LM1|100|020202", _
      "LSA|100|fcce2d", _
      "LH9|100|f6a517", _
      "LH8|100|fad12c", _
      "LH7|100|fef27a", _
      "LH6|100|efe455", _
      "LH5|100|fcf796", _
      "LH4|100|fef99f", _
      "LH3|100|fef38d", _
      "LH2|100|f6db55", _
      "LH1|100|fceb78", _
      "LPR1|100|fbe042", _
      "LPR3|100|fcf17d", _
      "LPR2|100|fad645", _
      "LPR6|100|f9fefa", _
      "LPR5|100|fdee5e", _
      "LPR4|100|fed333", _
      "LMR2|100|fedc3b", _
      "LMR1|100|f8d433", _
      "LCR2|100|fabd2f", _
      "LCR1|100|f4d735", _
      "LRI|100|fad639", _
      "LRO|100|eb7a14", _
      "LLI|100|d7841b", _
      "LLO|100|d78523", _
      "LSR|100|febb1a", _
      "LSL|100|eb8d12" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "giapron|100|1e0605", _
      "gi19|100|010101", _
      "gi10|100|481b07", _
      "gi09|100|451102", _
      "gi08|100|feb219", _
      "gi07|100|fde65f", _
      "gi06|100|fdea7e", _
      "gi05|100|fab018", _
      "gi04|100|faea67", _
      "gi03|100|faf5c9", _
      "gi02|100|fdc423", _
      "gi01|100|fbe23d", _
      "LS1|100|f1970d", _
      "LS6|100|010101", _
      "LSwC2|100|000000", _
      "LCWiz|100|d87501", _
      "LLWiz|100|f9ee7d", _
      "LC1|100|fef17e", _
      "LC2|100|fbdb43", _
      "LC3|100|fcf37d", _
      "LC4|100|fdea70", _
      "LC5|100|fdb91d", _
      "LC6|100|fdec8f", _
      "LC7|100|fcda48", _
      "LC8|100|f7e157", _
      "LWiz|100|e99207", _
      "LW9|100|be4706", _
      "LW8|100|be4e0f", _
      "LW7|100|983e02", _
      "LW6|100|883e00", _
      "LW5|100|1a0d07", _
      "LSC3|100|712504", _
      "LSC2|100|5f2207", _
      "LSC1|100|260a03", _
      "LMet4|100|842a04", _
      "LMet3|100|391806", _
      "LMet2|100|010102", _
      "LMet1|100|742402", _
      "LM1|100|833005", _
      "LSA|100|ed8a0b", _
      "LH9|100|fddc36", _
      "LH8|100|fef156", _
      "LH7|100|faaa1f", _
      "LH6|100|fcce35", _
      "LH5|100|fcd139", _
      "LH4|100|fdea7e", _
      "LH3|100|fefdff", _
      "LH2|100|fff39e", _
      "LH1|100|fdf14c", _
      "LPR1|100|fcef5e", _
      "LPR3|100|fdfdee", _
      "LPR2|100|ffe982", _
      "LPR6|100|fde45a", _
      "LPR5|100|f1e75e", _
      "LPR4|100|fdf390", _
      "LMR2|100|fed028", _
      "LMR1|100|fced61", _
      "LCR2|100|f2981c", _
      "LCR1|100|fed840", _
      "LRI|100|fba60d", _
      "LRO|100|ffc11e", _
      "LLI|100|feea76", _
      "LLO|100|d0610c", _
      "LSR|100|feef65", _
      "LSL|100|feda2f", _
      "FL2|100|130804", _
      "FL3|100|fde754" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "giapron|100|000000", _
      "gi14|100|060000", _
      "gi10|100|914b18", _
      "gi09|100|451800", _
      "gi08|100|fbb92e", _
      "gi07|100|fbf694", _
      "gi06|100|fcaf18", _
      "gi05|100|f48809", _
      "gi04|100|ffcb37", _
      "gi03|100|feee5d", _
      "gi02|100|d98040", _
      "gi01|100|ae4f05", _
      "LS5|100|010101", _
      "LS1|100|a74819", _
      "LS2|100|030001", _
      "LS3|100|0b0100", _
      "LS6|100|010000", _
      "LCWiz|100|fedb46", _
      "LLWiz|100|ffe54d", _
      "LC1|100|d96305", _
      "LC2|100|feda30", _
      "LC3|100|f8c523", _
      "LC4|100|fadb3a", _
      "LC5|100|fccf37", _
      "LC6|100|fdde45", _
      "LC7|100|f9e040", _
      "LC8|100|f9c525", _
      "LWiz|100|fadf43", _
      "LW9|100|bb5908", _
      "LW8|100|da6709", _
      "LW7|100|df6d11", _
      "LW6|100|b75108", _
      "LW5|100|8e3e03", _
      "LW4|100|471908", _
      "LSC3|100|d86624", _
      "LSC2|100|86330b", _
      "LSC1|100|6b2a07", _
      "LF3|100|010101", _
      "LMet4|100|b15418", _
      "LMet3|100|8a3c17", _
      "LMet2|100|7b3209", _
      "LMet1|100|6a1904", _
      "LM5|100|010101", _
      "LM1|100|f39d08", _
      "LSA|100|88380f", _
      "LH9|100|fec838", _
      "LH8|100|f4986b", _
      "LH7|100|feeff4", _
      "LH6|100|f9b52c", _
      "LH5|100|ffac1f", _
      "LH4|100|ffcf30", _
      "LH3|100|fed740", _
      "LH2|100|d9670b", _
      "LH1|100|f6911a", _
      "LPR1|100|f6e95d", _
      "LPR3|100|fedf46", _
      "LPR2|100|feed78", _
      "LPR6|100|fbd65b", _
      "LPR5|100|f8cd2a", _
      "LPR4|100|fae641", _
      "LMR2|100|fdc81c", _
      "LMR1|100|f5d324", _
      "LCR2|100|fede41", _
      "LCR1|100|fae857", _
      "LRI|100|fad02c", _
      "LRO|100|fee452", _
      "LLI|100|f0ad29", _
      "LLO|100|fdf894", _
      "LSR|100|bb4c09", _
      "LSL|100|b34507", _
      "FL2|100|010101", _
      "FL3|100|ad2d00" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "gi15|100|010101", _
      "gi14|100|341908", _
      "gi13|100|010101", _
      "gi11|100|060100", _
      "gi10|100|f7930f", _
      "gi09|100|9c4705", _
      "gi08|100|fdfbb1", _
      "gi07|100|f6af1c", _
      "gi06|100|561d0d", _
      "gi05|100|531905", _
      "gi04|100|ffe63c", _
      "gi03|100|a34604", _
      "gi02|100|a24504", _
      "gi01|100|ae5539", _
      "LX|100|010101", _
      "LS1|100|e5a40a", _
      "LS2|100|c86a0d", _
      "LS3|100|501801", _
      "LS4|100|0d0300", _
      "LS6|100|230703", _
      "LCWiz|100|fcaa1c", _
      "LLWiz|100|fee039", _
      "LC1|100|742706", _
      "LC2|100|b24f13", _
      "LC3|100|9b380f", _
      "LC4|100|a74410", _
      "LC5|100|bc4611", _
      "LC6|100|d74e04", _
      "LC7|100|e07402", _
      "LC8|100|ef8301", _
      "LWiz|100|fcef5e", _
      "LW9|100|f9f8bd", _
      "LW8|100|be4301", _
      "LW7|100|e89006", _
      "LW6|100|ce4e0b", _
      "LW5|100|b04101", _
      "LW4|100|a84501", _
      "LW3|100|762c00", _
      "LW2|100|4d1a05", _
      "LW1|100|050001", _
      "LMLR|100|010101", _
      "LSC3|100|f5aa1f", _
      "LSC2|100|f7e649", _
      "LSC1|100|c04c09", _
      "LF2|100|010101", _
      "LF1|100|010101", _
      "LTW2|100|090001", _
      "LTW1|100|010001", _
      "LCC3|100|150e08", _
      "LCC2|100|010102", _
      "LMet4|100|faed71", _
      "LMet3|100|b33b08", _
      "LMet2|100|d6641c", _
      "LMet1|100|dd5109", _
      "LM1|100|bf520c", _
      "LSA|100|3a0f09", _
      "LH9|100|6b2802", _
      "LH8|100|c05512", _
      "LH7|100|ea7d15", _
      "LH6|100|c06f47", _
      "LH5|100|893414", _
      "LH4|100|943717", _
      "LH3|100|832002", _
      "LH2|100|732106", _
      "LH1|100|822a03", _
      "LPR1|100|f8ce2a", _
      "LPR3|100|eb8f14", _
      "LPR2|100|fcc72a", _
      "LPR6|100|ee7118", _
      "LPR5|100|ef861a", _
      "LPR4|100|c05300", _
      "LMR2|100|fdce34", _
      "LMR1|100|fedd3a", _
      "LCR2|100|f2b823", _
      "LCR1|100|f7de44", _
      "LRI|100|fbe43d", _
      "LRO|100|f8f177", _
      "LLI|100|ffd531", _
      "LLO|100|833a0c", _
      "LSR|100|6e2e20", _
      "LSL|100|cc590a", _
      "FL2|100|000000", _
      "FL3|100|b2400e" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
    .Lights = Array( _
      "gi19|100|0a0301", _
      "gi14|100|7f3d0a", _
      "gi12|100|030200", _
      "gi11|100|9d4c21", _
      "gi10|100|f9d230", _
      "gi09|100|f39d12", _
      "gi08|100|f8c722", _
      "gi07|100|641906", _
      "gi06|100|160201", _
      "gi05|100|240905", _
      "gi04|100|b25c0f", _
      "gi03|100|6f2b06", _
      "gi02|100|2a0a00", _
      "gi01|100|290d02", _
      "LX|100|1a0b02", _
      "LS5|100|381009", _
      "LS1|100|e8610f", _
      "LS2|100|973414", _
      "LS3|100|872408", _
      "LS4|100|7b3e0a", _
      "LS6|100|5b1d03", _
      "LCWiz|100|fdee6d", _
      "LLWiz|100|fdf77b", _
      "LC1|100|551502", _
      "LC2|100|61210d", _
      "LC3|100|5d1603", _
      "LC4|100|6a1e05", _
      "LC5|100|350b08", _
      "LC6|100|441509", _
      "LC7|100|330900", _
      "LC8|100|2c0a02", _
      "LWiz|100|f5e64f", _
      "LW9|100|fefbc6", _
      "LW8|100|faef84", _
      "LW7|100|f9dd41", _
      "LW6|100|da6c16", _
      "LW5|100|d66004", _
      "LW4|100|da6117", _
      "LW3|100|ae4402", _
      "LW2|100|a14206", _
      "LW1|100|833302", _
      "LMLR|100|120705", _
      "LEBR|100|010101", _
      "LMR|100|010101", _
      "LSC3|100|fccb2c", _
      "LSC2|100|f4a518", _
      "LSC1|100|faa728", _
      "LF3|100|120403", _
      "LF2|100|030102", _
      "LPC3|100|4b2109", _
      "LPC2|100|010101", _
      "LTW2|100|451501", _
      "LTW1|100|3a1303", _
      "LCC3|100|bf4507", _
      "LCC2|100|170c08", _
      "LCC1|100|0a0100", _
      "LMet4|100|fee268", _
      "LMet3|100|d87539", _
      "LMet2|100|e87400", _
      "LMet1|100|f1dd4b", _
      "LM5|100|512008", _
      "LM2|100|3d1303", _
      "LM1|100|feb512", _
      "LSA|100|000000", _
      "LH9|100|291412", _
      "LH8|100|150e07", _
      "LH7|100|471b04", _
      "LH6|100|3d1305", _
      "LH5|100|380500", _
      "LH4|100|682508", _
      "LH3|100|461408", _
      "LH2|100|682912", _
      "LH1|100|602511", _
      "LPR1|100|e97e14", _
      "LPR3|100|b24c19", _
      "LPR2|100|832802", _
      "LPR6|100|4c1d08", _
      "LPR5|100|601e0b", _
      "LPR4|100|7e2c0c", _
      "LMR2|100|ea9f14", _
      "LMR1|100|efa31e", _
      "LCR2|100|6f1602", _
      "LCR1|100|d76703", _
      "LRI|100|ea8709", _
      "LRO|100|b24408", _
      "LLI|100|b05203", _
      "LLO|100|ad4700", _
      "LSR|100|150100", _
      "LSL|100|100000", _
      "FL1|100|010101", _
      "FL3|100|140100" _
      )
  End With
  With .AddStep(0.50000, Null, Null)
    .Lights = Array( _
      "gi19|100|532102", _
      "gi15|100|020202", _
      "gi14|100|fb9711", _
      "gi13|100|270805", _
      "gi12|100|330f07", _
      "gi11|100|89431a", _
      "gi10|100|fece2a", _
      "gi09|100|fdc61f", _
      "gi08|100|511804", _
      "gi07|100|250600", _
      "gi06|100|000000", _
      "gi05|100|000000", _
      "gi04|100|e0916f", _
      "gi03|100|371509", _
      "gi02|100|2d1207", _
      "gi01|100|1c0902", _
      "LPF|100|050201", _
      "LX|100|652400", _
      "LS5|100|842c04", _
      "LS1|100|f9bf27", _
      "LS2|100|e57c25", _
      "LS3|100|f98506", _
      "LS4|100|d16700", _
      "LS6|100|eb7431", _
      "LCWiz|100|fac42a", _
      "LLWiz|100|fcef42", _
      "LC1|100|290c05", _
      "LC2|100|2f0f06", _
      "LC3|100|230801", _
      "LC4|100|1e0302", _
      "LC5|100|180602", _
      "LC6|100|0c0708", _
      "LC7|100|020001", _
      "LC8|100|010101", _
      "LWiz|100|f8cd29", _
      "LW9|100|feef76", _
      "LW8|100|faf592", _
      "LW7|100|fdef61", _
      "LW6|100|ffe879", _
      "LW5|100|c84b07", _
      "LW4|100|ea9019", _
      "LW3|100|e58013", _
      "LW2|100|de6717", _
      "LW1|100|b24606", _
      "LMLR|100|692505", _
      "LEBR|100|4b1c04", _
      "LMR|100|0a0504", _
      "LPC5|100|010101", _
      "LSC3|100|ffa714", _
      "LSC2|100|ffe94c", _
      "LSC1|100|fec025", _
      "LF3|100|270703", _
      "LF2|100|1e0000", _
      "LF1|100|100001", _
      "LPC3|100|9f4c0f", _
      "LPC2|100|662506", _
      "LPC1|100|491704", _
      "LTW2|100|b44207", _
      "LTW1|100|942a0c", _
      "LCC3|100|a83d07", _
      "LCC2|100|f3910b", _
      "LCC1|100|9e480f", _
      "LMet4|100|fcc217", _
      "LMet3|100|fec72a", _
      "LMet2|100|d9b304", _
      "LMet1|100|f8f099", _
      "LM5|100|511702", _
      "LM2|100|8c380a", _
      "LM1|100|f8a610", _
      "LH9|100|000000", _
      "LH8|100|000000", _
      "LH7|100|000000", _
      "LH6|100|070401", _
      "LH5|100|170501", _
      "LH4|100|180502", _
      "LH3|100|1a0600", _
      "LH2|100|200c05", _
      "LH1|100|1f0601", _
      "LPR1|100|571505", _
      "LPR3|100|562313", _
      "LPR2|100|651e08", _
      "LPR6|100|130502", _
      "LPR5|100|230101", _
      "LPR4|100|431309", _
      "LMR2|100|2e0301", _
      "LMR1|100|9e3a03", _
      "LCR2|100|772008", _
      "LCR1|100|78270b", _
      "LRI|100|5a1b07", _
      "LRO|100|270606", _
      "LLI|100|7f3204", _
      "LLO|100|8e2f05", _
      "LSR|100|000000", _
      "LSL|100|200a00", _
      "FL1|100|020001", _
      "FL3|100|000000" _
      )
  End With
  With .AddStep(0.53333, Null, Null)
    .Lights = Array( _
      "gi22|100|010101", _
      "gi20|100|030103", _
      "gi19|100|944407", _
      "gi18|100|0d0704", _
      "gi15|100|0d0000", _
      "gi14|100|f8bb23", _
      "gi13|100|451208", _
      "gi12|100|6b2802", _
      "gi11|100|d15704", _
      "gi10|100|fef478", _
      "gi09|100|a1400b", _
      "gi08|100|120404", _
      "gi07|100|000000", _
      "gi04|100|3b190c", _
      "gi03|100|220a00", _
      "gi02|100|0d0302", _
      "gi01|100|000000", _
      "LPF|100|853002", _
      "LX|100|bc530d", _
      "LS5|100|903407", _
      "LS1|100|ebbf42", _
      "LS2|100|f4d12f", _
      "LS3|100|f8c025", _
      "LS4|100|cf5c14", _
      "LS6|100|f0b616", _
      "LSwC3|100|010101", _
      "LCWiz|100|873607", _
      "LLWiz|100|c2500e", _
      "LC1|100|000000", _
      "LC2|100|000000", _
      "LC3|100|000000", _
      "LC4|100|000000", _
      "LC5|100|000000", _
      "LC6|100|000000", _
      "LC7|100|000000", _
      "LC8|100|000000", _
      "LWiz|100|eb8218", _
      "LW9|100|fbeb5b", _
      "LW8|100|fad33e", _
      "LW7|100|f6e347", _
      "LW6|100|fae74f", _
      "LW5|100|f6ee68", _
      "LW4|100|ffdb3f", _
      "LW3|100|da662f", _
      "LW2|100|dd8207", _
      "LW1|100|c74d03", _
      "LMLR|100|b14e1b", _
      "LEBR|100|a55112", _
      "LMR|100|551301", _
      "LPC5|100|3f1708", _
      "LPC4|100|4c1d09", _
      "LSC3|100|fefaaa", _
      "LSC2|100|fdda39", _
      "LSC1|100|fda01a", _
      "LF3|100|712e09", _
      "LF2|100|5c2206", _
      "LF1|100|3c1103", _
      "LPC3|100|e6761b", _
      "LPC2|100|9f3e09", _
      "LPC1|100|e76515", _
      "LTW2|100|e36408", _
      "LTW1|100|cb4d0b", _
      "LCC3|100|f6c40c", _
      "LCC2|100|b14b13", _
      "LCC1|100|d26d0e", _
      "LMet4|100|fcc72d", _
      "LMet3|100|ffe456", _
      "LMet2|100|fde447", _
      "LMet1|100|fbe85a", _
      "LM5|100|b74d0f", _
      "LM4|100|692b06", _
      "LM3|100|481b03", _
      "LM2|100|bd490c", _
      "LM1|100|fad922", _
      "LH6|100|000000", _
      "LH5|100|000000", _
      "LH4|100|000000", _
      "LH3|100|000000", _
      "LH2|100|000000", _
      "LH1|100|000000", _
      "LPR1|100|250403", _
      "LPR3|100|0e0101", _
      "LPR2|100|1a0703", _
      "LPR6|100|000000", _
      "LPR5|100|000000", _
      "LPR4|100|000000", _
      "LMR2|100|020101", _
      "LMR1|100|100100", _
      "LCR2|100|461d0a", _
      "LCR1|100|591b0a", _
      "LRI|100|240b02", _
      "LRO|100|000000", _
      "LLI|100|240c01", _
      "LLO|100|190600", _
      "LSL|100|0c0402", _
      "FL1|100|230802" _
      )
  End With
  With .AddStep(0.56667, Null, Null)
    .Lights = Array( _
      "gi17|100|010101", _
      "gi22|100|2a1207", _
      "gi20|100|ef9207", _
      "gi21|100|020004", _
      "gi19|100|f6860d", _
      "gi18|100|49210c", _
      "gi15|100|753913", _
      "gi14|100|fde148", _
      "gi13|100|98400c", _
      "gi12|100|82380c", _
      "gi11|100|e1a606", _
      "gi10|100|ae4207", _
      "gi09|100|cb500a", _
      "gi08|100|000000", _
      "gi04|100|160700", _
      "gi03|100|000000", _
      "gi02|100|000000", _
      "LPF|100|cc6025", _
      "LX|100|b84911", _
      "LS5|100|f9ae14", _
      "LS1|100|994508", _
      "LS2|100|ffef70", _
      "LS3|100|fec724", _
      "LS4|100|f3ae1b", _
      "LS6|100|fead15", _
      "LSwC3|100|4b1a02", _
      "LSwC2|100|010101", _
      "LSwC1|100|57210a", _
      "LCWiz|100|752f0a", _
      "LLWiz|100|3d0301", _
      "LWiz|100|531204", _
      "LW9|100|ac4008", _
      "LW8|100|ffac1f", _
      "LW7|100|f8ce2a", _
      "LW6|100|ffe24b", _
      "LW5|100|fff9b9", _
      "LW4|100|fbed54", _
      "LW3|100|fff078", _
      "LW2|100|fde33c", _
      "LW1|100|db6616", _
      "LMLR|100|fde564", _
      "LEBR|100|d66324", _
      "LMR|100|82340b", _
      "LPC5|100|a74706", _
      "LPC4|100|983102", _
      "LSC3|100|f18911", _
      "LSC2|100|f4b71c", _
      "LSC1|100|fdf9b8", _
      "LF3|100|d05a0c", _
      "LF2|100|d9711f", _
      "LF1|100|6f3106", _
      "LPC3|100|c45608", _
      "LPC2|100|ba3a02", _
      "LPC1|100|972705", _
      "LTW2|100|e1a908", _
      "LTW1|100|fcef86", _
      "LCC3|100|f49604", _
      "LCC2|100|f9ca35", _
      "LCC1|100|cb6b22", _
      "LMet4|100|fcf4a3", _
      "LMet3|100|f3be12", _
      "LMet2|100|ffee58", _
      "LMet1|100|f7ebb0", _
      "LM5|100|fcd232", _
      "LM4|100|732009", _
      "LM3|100|b75106", _
      "LM2|100|f48409", _
      "LM1|100|95430b", _
      "LPR1|100|000000", _
      "LPR3|100|000000", _
      "LPR2|100|000000", _
      "LMR2|100|000000", _
      "LMR1|100|000000", _
      "LCR2|100|000000", _
      "LCR1|100|1b0701", _
      "LRI|100|000000", _
      "LLI|100|1f0b02", _
      "LLO|100|0c0200", _
      "LSL|100|000000", _
      "FL1|100|501305" _
      )
  End With
  With .AddStep(0.60000, Null, Null)
    .Lights = Array( _
      "gi22|100|984816", _
      "gi20|100|a03c0f", _
      "gi21|100|3f1c06", _
      "gi19|100|f9df32", _
      "gi18|100|4d1e08", _
      "gi15|100|ca5f13", _
      "gi14|100|da5d12", _
      "gi13|100|ea9210", _
      "gi12|100|cf6424", _
      "gi11|100|eec740", _
      "gi10|100|150100", _
      "gi09|100|270f05", _
      "gi04|100|000000", _
      "LPF|100|ca4e05", _
      "LX|100|fcda3e", _
      "LS5|100|f2bc18", _
      "LS1|100|855c43", _
      "LS2|100|fee454", _
      "LS3|100|fdf686", _
      "LS4|100|fdf36b", _
      "LS6|100|faac14", _
      "LSwC3|100|843001", _
      "LSwC2|100|9e4c0b", _
      "LSwC1|100|b53e02", _
      "LCWiz|100|310c01", _
      "LLWiz|100|020100", _
      "LWiz|100|230102", _
      "LW9|100|571c04", _
      "LW8|100|802c0b", _
      "LW7|100|e88018", _
      "LW6|100|fbac0d", _
      "LW5|100|fecc23", _
      "LW4|100|fcee7c", _
      "LW3|100|fee467", _
      "LW2|100|f8ef4c", _
      "LW1|100|feef6b", _
      "LMLR|100|fbae1b", _
      "LEBR|100|fde257", _
      "LMR|100|e57316", _
      "LPC5|100|c34c16", _
      "LPC4|100|a03502", _
      "LSC3|100|290702", _
      "LSC2|100|632720", _
      "LSC1|100|f18d0f", _
      "LF3|100|ffb81c", _
      "LF2|100|fdcd33", _
      "LF1|100|ec790b", _
      "LPC3|100|df9c0e", _
      "LPC2|100|d3641a", _
      "LPC1|100|ed8e0c", _
      "LTW2|100|fef0c9", _
      "LTW1|100|f6ea65", _
      "LCC3|100|fda31d", _
      "LCC2|100|fdde48", _
      "LCC1|100|f2d328", _
      "LMet4|100|dc771f", _
      "LMet3|100|feef6f", _
      "LMet2|100|fcf372", _
      "LMet1|100|942506", _
      "LM5|100|fd9e08", _
      "LM4|100|af4513", _
      "LM3|100|db5b17", _
      "LM2|100|dfc109", _
      "LM1|100|a74e12", _
      "LCR1|100|000000", _
      "LLI|100|000000", _
      "LLO|100|000000", _
      "FL1|100|993106", _
      "FL2|100|080202" _
      )
  End With
  With .AddStep(0.63333, Null, Null)
    .Lights = Array( _
      "gi22|100|f1931a", _
      "gi20|100|f3d42b", _
      "gi21|100|d25f14", _
      "gi19|100|f6a70e", _
      "gi18|100|eea820", _
      "gi16|100|020200", _
      "gi15|100|f8cc22", _
      "gi14|100|ab4200", _
      "gi13|100|ffd837", _
      "gi12|100|ffed76", _
      "gi11|100|f7a202", _
      "gi10|100|000000", _
      "gi09|100|180902", _
      "LPF|100|e47212", _
      "LX|100|fcdf3c", _
      "LS5|100|ffc025", _
      "LS1|100|2f0e06", _
      "LS2|100|fae764", _
      "LS3|100|f9e348", _
      "LS4|100|fbfeea", _
      "LS6|100|fdf278", _
      "LSwC3|100|b83d01", _
      "LSwC2|100|d36b18", _
      "LSwC1|100|a02f01", _
      "LCWiz|100|000000", _
      "LLWiz|100|000000", _
      "LWiz|100|000000", _
      "LW9|100|190300", _
      "LW8|100|380600", _
      "LW7|100|511104", _
      "LW6|100|b44e1a", _
      "LW5|100|fca215", _
      "LW4|100|fdd32f", _
      "LW3|100|f9e161", _
      "LW2|100|fdee8b", _
      "LW1|100|ffef99", _
      "LMLR|100|fab51f", _
      "LEBR|100|feef72", _
      "LMR|100|fcd94a", _
      "LPC5|100|d35c0e", _
      "LPC4|100|e67405", _
      "LSC3|100|170302", _
      "LSC2|100|1c0503", _
      "LSC1|100|1b0403", _
      "LF3|100|fdba16", _
      "LF2|100|fac417", _
      "LF1|100|f3af1a", _
      "LPC3|100|fae34f", _
      "LPC2|100|fde450", _
      "LPC1|100|f4a909", _
      "LTW2|100|fdf59e", _
      "LTW1|100|f1cd26", _
      "LCC3|100|ffe83c", _
      "LCC2|100|fabe27", _
      "LCC1|100|e7a51b", _
      "LMet4|100|380e01", _
      "LMet3|100|b94a06", _
      "LMet2|100|fcd43b", _
      "LMet1|100|8d3608", _
      "LM5|100|f4cc2e", _
      "LM4|100|fae847", _
      "LM3|100|eb9606", _
      "LM2|100|fcd235", _
      "LM1|100|280701", _
      "FL1|100|f3e45e", _
      "FL2|100|852800", _
      "FL3|100|4a1a03" _
      )
  End With
  With .AddStep(0.66667, Null, Null)
    .Lights = Array( _
      "gi17|100|000001", _
      "gi22|100|fff381", _
      "gi20|100|f3b31d", _
      "gi21|100|b55608", _
      "gi19|100|c84a0e", _
      "gi18|100|e28626", _
      "gi16|100|3c0e01", _
      "gi15|100|ffe346", _
      "gi14|100|0d0100", _
      "gi13|100|fee953", _
      "gi12|100|fff493", _
      "gi11|100|d06211", _
      "gi09|100|0d0401", _
      "LPF|100|f9e866", _
      "LX|100|ffc92e", _
      "LS5|100|fde549", _
      "LS1|100|130401", _
      "LS2|100|8d3e04", _
      "LS3|100|a73b06", _
      "LS4|100|fac71c", _
      "LS6|100|d86905", _
      "LSwC3|100|fbb622", _
      "LSwC2|100|d55c16", _
      "LSwC1|100|de5a0d", _
      "LW9|100|000000", _
      "LW8|100|170500", _
      "LW7|100|230102", _
      "LW6|100|591805", _
      "LW5|100|8d3915", _
      "LW4|100|ea7508", _
      "LW3|100|fdbf2b", _
      "LW2|100|fdd031", _
      "LW1|100|fff17f", _
      "LMLR|100|fcc03a", _
      "LEBR|100|fbe44a", _
      "LMR|100|fede3c", _
      "LPC5|100|feeb57", _
      "LPC4|100|e99e15", _
      "LSC3|100|000000", _
      "LSC2|100|000000", _
      "LSC1|100|170302", _
      "LF3|100|f8e763", _
      "LF2|100|feef75", _
      "LF1|100|ffbb12", _
      "LPC3|100|fee960", _
      "LPC2|100|fff18b", _
      "LPC1|100|ed9725", _
      "LTW2|100|fbf268", _
      "LTW1|100|faed67", _
      "LCC3|100|ac561b", _
      "LCC2|100|feed67", _
      "LCC1|100|f5ad0c", _
      "LMet4|100|0b0504", _
      "LMet3|100|481203", _
      "LMet2|100|7f2c0d", _
      "LMet1|100|421300", _
      "LM5|100|f8d827", _
      "LM4|100|fefac0", _
      "LM3|100|fce33b", _
      "LM2|100|fdf3a4", _
      "LM1|100|240c00", _
      "FL1|100|ffc115", _
      "FL2|100|6d1400", _
      "FL3|100|a94802" _
      )
  End With
  With .AddStep(0.70000, Null, Null)
    .Lights = Array( _
      "gi17|100|592504", _
      "gi22|100|ffe857", _
      "gi20|100|f9c6b2", _
      "gi21|100|fec82b", _
      "gi19|100|270d01", _
      "gi18|100|f7e061", _
      "gi16|100|732505", _
      "gi15|100|c25416", _
      "gi14|100|000000", _
      "gi13|100|fee635", _
      "gi12|100|bf4d09", _
      "gi11|100|863106", _
      "gi09|100|000000", _
      "LPF|100|fded8d", _
      "LX|100|fce736", _
      "LS5|100|fdcc37", _
      "LS1|100|000000", _
      "LS2|100|916d61", _
      "LS3|100|843009", _
      "LS4|100|fcd942", _
      "LS6|100|280707", _
      "LSwC3|100|fee240", _
      "LSwC2|100|de711e", _
      "LSwC1|100|efd929", _
      "LW8|100|000000", _
      "LW7|100|000000", _
      "LW6|100|2d1611", _
      "LW5|100|49190c", _
      "LW4|100|591605", _
      "LW3|100|b85e2c", _
      "LW2|100|e35f0b", _
      "LW1|100|fdc03e", _
      "LMLR|100|fff898", _
      "LEBR|100|fce346", _
      "LMR|100|f39f12", _
      "LPC5|100|f5d03e", _
      "LPC4|100|ffc224", _
      "LSC1|100|000000", _
      "LF3|100|ca5806", _
      "LF2|100|f2d537", _
      "LF1|100|feeb8d", _
      "LPC3|100|f4dd40", _
      "LPC2|100|fbf6c8", _
      "LPC1|100|ffee4b", _
      "LTW2|100|7d2803", _
      "LTW1|100|c7640b", _
      "LCC3|100|8d3d0d", _
      "LCC2|100|af5813", _
      "LCC1|100|9d4508", _
      "LMet4|100|000000", _
      "LMet3|100|010000", _
      "LMet2|100|561101", _
      "LMet1|100|1d0a02", _
      "LM5|100|fdba1d", _
      "LM4|100|fdc930", _
      "LM3|100|ffeb5f", _
      "LM2|100|fae040", _
      "LM1|100|000000", _
      "FL1|100|f8c11f", _
      "FL2|100|ed7514", _
      "FL3|100|ca4b01" _
      )
  End With
  With .AddStep(0.73333, Null, Null)
    .Lights = Array( _
      "gi17|100|9d4708", _
      "gi22|100|fdd32f", _
      "gi20|100|fee94e", _
      "gi21|100|d05a08", _
      "gi19|100|080202", _
      "gi18|100|90320c", _
      "gi16|100|915010", _
      "gi15|100|b0380c", _
      "gi13|100|efa202", _
      "gi12|100|c34c0a", _
      "gi11|100|220a01", _
      "LPF|100|f6ce23", _
      "LX|100|bc5902", _
      "LS5|100|763313", _
      "LS2|100|290800", _
      "LS3|100|541607", _
      "LS4|100|d97001", _
      "LS6|100|190602", _
      "LSwC3|100|fcce35", _
      "LSwC2|100|fae44b", _
      "LSwC1|100|efa32d", _
      "LW6|100|000000", _
      "LW5|100|180701", _
      "LW4|100|341712", _
      "LW3|100|5c220b", _
      "LW2|100|551408", _
      "LW1|100|7e2b0a", _
      "LMLR|100|dd8702", _
      "LEBR|100|fbe244", _
      "LMR|100|fefa8d", _
      "LPC5|100|f5dc48", _
      "LPC4|100|faf8a4", _
      "LF3|100|330902", _
      "LF2|100|4f0e07", _
      "LF1|100|a62e06", _
      "LPC3|100|f3981f", _
      "LPC2|100|fddd3d", _
      "LPC1|100|f7b01c", _
      "LTW2|100|842f02", _
      "LTW1|100|6d2c13", _
      "LCC3|100|280c01", _
      "LCC2|100|5c2510", _
      "LCC1|100|ab3d07", _
      "LMet3|100|000000", _
      "LMet2|100|1c0903", _
      "LMet1|100|000000", _
      "LM5|100|601600", _
      "LM4|100|fbd82e", _
      "LM3|100|fce73a", _
      "LM2|100|932e0b", _
      "FL1|100|fcdf4e", _
      "FL2|100|f3d731", _
      "FL3|100|d45804" _
      )
  End With
  With .AddStep(0.76667, Null, Null)
    .Lights = Array( _
      "gi17|100|f08014", _
      "gi22|100|fdf081", _
      "gi20|100|b5570d", _
      "gi21|100|ffc536", _
      "gi19|100|000000", _
      "gi18|100|b34102", _
      "gi16|100|d46302", _
      "gi15|100|050503", _
      "gi13|100|501b0e", _
      "gi12|100|321907", _
      "gi11|100|130400", _
      "LPF|100|fdbd38", _
      "LX|100|210203", _
      "LS5|100|37120a", _
      "LS2|100|130400", _
      "LS3|100|1e0a01", _
      "LS4|100|3b1205", _
      "LS6|100|000000", _
      "LSwC3|100|f5cb2a", _
      "LSwC2|100|f9ea62", _
      "LSwC1|100|faf87e", _
      "LW5|100|000000", _
      "LW4|100|000000", _
      "LW3|100|160602", _
      "LW2|100|1c0402", _
      "LW1|100|440c11", _
      "LMLR|100|4d1103", _
      "LEBR|100|691802", _
      "LMR|100|e8761b", _
      "LPC5|100|f6d746", _
      "LPC4|100|fbec56", _
      "LF3|100|150100", _
      "LF2|100|430b0a", _
      "LF1|100|2d140e", _
      "LPC3|100|8f310d", _
      "LPC2|100|9a3714", _
      "LPC1|100|832b03", _
      "LTW2|100|673018", _
      "LTW1|100|340e00", _
      "LCC3|100|240d05", _
      "LCC2|100|38180a", _
      "LCC1|100|210801", _
      "LMet2|100|000000", _
      "LM5|100|401d10", _
      "LM4|100|fdc429", _
      "LM3|100|fdd739", _
      "LM2|100|77300d", _
      "FL1|100|861d00", _
      "FL2|100|f7a826", _
      "FL3|100|ffe944" _
      )
  End With
  With .AddStep(0.80000, Null, Null)
    .Lights = Array( _
      "gi17|100|f4ba1a", _
      "gi22|100|ffdb53", _
      "gi20|100|823815", _
      "gi21|100|dfae26", _
      "gi18|100|6c2706", _
      "gi16|100|e98101", _
      "gi15|100|000000", _
      "gi13|100|170201", _
      "gi12|100|1a0700", _
      "gi11|100|000000", _
      "LPF|100|802503", _
      "LX|100|090000", _
      "LS5|100|000000", _
      "LS2|100|000000", _
      "LS3|100|000000", _
      "LS4|100|080001", _
      "LSwC3|100|fedd42", _
      "LSwC2|100|f6e98d", _
      "LSwC1|100|fcd035", _
      "LW3|100|000000", _
      "LW2|100|000000", _
      "LW1|100|150603", _
      "LMLR|100|000000", _
      "LEBR|100|180200", _
      "LMR|100|380c04", _
      "LPC5|100|e18a2f", _
      "LPC4|100|c75c13", _
      "LF3|100|000000", _
      "LF2|100|000000", _
      "LF1|100|100102", _
      "LPC3|100|260902", _
      "LPC2|100|5e1806", _
      "LPC1|100|5d1a06", _
      "LTW2|100|200601", _
      "LTW1|100|210a04", _
      "LCC3|100|000000", _
      "LCC2|100|180600", _
      "LCC1|100|290c03", _
      "LM5|100|000000", _
      "LM4|100|903c0a", _
      "LM3|100|f38b1f", _
      "LM2|100|431407", _
      "FL1|100|4d2518", _
      "FL2|100|f3ea7c", _
      "FL3|100|fdf298" _
      )
  End With
  With .AddStep(0.83333, Null, Null)
    .Lights = Array( _
      "gi17|100|ffba36", _
      "gi22|100|b43504", _
      "gi20|100|411f15", _
      "gi21|100|bb6a22", _
      "gi18|100|190601", _
      "gi16|100|fdf990", _
      "gi13|100|000000", _
      "gi12|100|0c0402", _
      "LPF|100|3e0c01", _
      "LX|100|000000", _
      "LS4|100|000000", _
      "LSwC3|100|cd7613", _
      "LSwC2|100|fbd147", _
      "LSwC1|100|b9410f", _
      "LW1|100|000000", _
      "LEBR|100|000000", _
      "LMR|100|110b07", _
      "LPC5|100|823c12", _
      "LPC4|100|6e1f06", _
      "LF1|100|000000", _
      "LPC3|100|000000", _
      "LPC2|100|1c0702", _
      "LPC1|100|451508", _
      "LTW2|100|000000", _
      "LTW1|100|000000", _
      "LCC2|100|000000", _
      "LCC1|100|000000", _
      "LM4|100|72371a", _
      "LM3|100|6d2a10", _
      "LM2|100|190600", _
      "FL1|100|150201", _
      "FL2|100|ffffd3", _
      "FL3|100|ffef61" _
      )
  End With
  With .AddStep(0.86667, Null, Null)
    .Lights = Array( _
      "gi17|100|b93b0e", _
      "gi22|100|582b20", _
      "gi20|100|1e0b04", _
      "gi21|100|561f0c", _
      "gi18|100|110601", _
      "gi16|100|b54d08", _
      "gi12|100|000000", _
      "LPF|100|150603", _
      "LSwC3|100|371107", _
      "LSwC2|100|7d2304", _
      "LSwC1|100|823110", _
      "LMR|100|000000", _
      "LPC5|100|0e0805", _
      "LPC4|100|350a01", _
      "LPC2|100|000000", _
      "LPC1|100|000000", _
      "LM4|100|000000", _
      "LM3|100|1e0403", _
      "LM2|100|000000", _
      "FL1|100|000000", _
      "FL2|100|c95513", _
      "FL3|100|fccb2d" _
      )
  End With
  With .AddStep(0.90000, Null, Null)
    .Lights = Array( _
      "gi17|100|210503", _
      "gi22|100|000000", _
      "gi20|100|000000", _
      "gi21|100|250802", _
      "gi18|100|000000", _
      "gi16|100|b94c06", _
      "LPF|100|000000", _
      "LSwC3|100|010101", _
      "LSwC2|100|3f120f", _
      "LSwC1|100|230600", _
      "LPC5|100|000000", _
      "LPC4|100|000000", _
      "LM3|100|000000", _
      "FL2|100|692713", _
      "FL3|100|f89617" _
      )
  End With
  With .AddStep(0.93333, Null, Null)
    .Lights = Array( _
      "gi17|100|000001", _
      "gi21|100|190801", _
      "gi16|100|220e05", _
      "LSwC3|100|000000", _
      "LSwC2|100|120300", _
      "LSwC1|100|000000", _
      "FL2|100|280702", _
      "FL3|100|5b1f0e" _
      )
  End With
  With .AddStep(0.96667, Null, Null)
    .Lights = Array( _
      "gi17|100|000000", _
      "gi21|100|000000", _
      "gi16|100|210c01", _
      "LSwC2|100|000000", _
      "FL2|100|1d0a03", _
      "FL3|100|381f13" _
      )
  End With
End With


With CreateGlfShow("earth_hit_left")
  With .AddStep(0.06667, Null, Null)
    .Lights = Array( _
      "giapron|100|010101", _
      "FL3|100|260804" _
      )
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "gi02|100|010101", _
      "gi01|100|010101", _
      "FL3|100|371508" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "gi03|100|010101", _
      "gi02|100|301003", _
      "gi01|100|000000", _
      "LC1|100|010101", _
      "LC2|100|010101", _
      "LSA|100|010101", _
      "LH5|100|010101", _
      "LH4|100|010101", _
      "LH3|100|010101", _
      "LH2|100|010101", _
      "LH1|100|010101", _
      "LLO|100|010101", _
      "LSL|100|6d2f00", _
      "FL3|100|ed7b14" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "gi05|100|010101", _
      "gi04|100|311206", _
      "gi03|100|301101", _
      "gi02|100|67200b", _
      "gi01|100|5f1e06", _
      "LC1|100|090101", _
      "LC3|100|010101", _
      "LC4|100|010101", _
      "LC5|100|010101", _
      "LC6|100|010101", _
      "LC7|100|010101", _
      "LC8|100|010101", _
      "LH9|100|010101", _
      "LH8|100|010101", _
      "LH7|100|010101", _
      "LH6|100|010101", _
      "LH3|100|000100", _
      "LH2|100|0d0201", _
      "LH1|100|170102", _
      "LPR2|100|010101", _
      "LPR6|100|010101", _
      "LPR5|100|010101", _
      "LPR4|100|010101", _
      "LCR2|100|010101", _
      "LLI|100|361301", _
      "LLO|100|894219", _
      "LSL|100|c85f04", _
      "FL2|100|080300", _
      "FL3|100|faf1f7" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "gi07|100|010101", _
      "gi06|100|010101", _
      "gi04|100|8f3a01", _
      "gi03|100|6f2b0e", _
      "gi02|100|8a2505", _
      "gi01|100|a8440f", _
      "LC1|100|6a2c07", _
      "LC2|100|360f03", _
      "LC3|100|1c0805", _
      "LC4|100|1c0103", _
      "LC5|100|110100", _
      "LC6|100|030102", _
      "LH6|100|0b0301", _
      "LH5|100|100304", _
      "LH4|100|1b0605", _
      "LH3|100|320906", _
      "LH2|100|421304", _
      "LH1|100|521400", _
      "LPR1|100|010101", _
      "LPR3|100|010101", _
      "LPR2|100|050101", _
      "LPR6|100|020001", _
      "LPR5|100|0d0100", _
      "LPR4|100|160203", _
      "LMR2|100|010101", _
      "LMR1|100|010101", _
      "LCR2|100|110102", _
      "LCR1|100|210206", _
      "LLI|100|a84708", _
      "LLO|100|a74508", _
      "LSR|100|010101", _
      "LSL|100|ad3d05", _
      "FL2|100|100503", _
      "FL3|100|f8c43b" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "gi09|100|130505", _
      "gi08|100|010101", _
      "gi04|100|da6222", _
      "gi03|100|fd9c19", _
      "gi02|100|e2ed76", _
      "gi01|100|fae674", _
      "LS1|100|0c0201", _
      "LSwC2|100|050401", _
      "LCWiz|100|7f3208", _
      "LC1|100|983901", _
      "LC2|100|8f380b", _
      "LC3|100|541501", _
      "LC4|100|501603", _
      "LC5|100|220600", _
      "LC6|100|170200", _
      "LC7|100|0e0000", _
      "LC8|100|0b0000", _
      "LWiz|100|010101", _
      "LSA|100|4a1f08", _
      "LH9|100|020202", _
      "LH8|100|050100", _
      "LH7|100|0c0000", _
      "LH6|100|210603", _
      "LH5|100|692d10", _
      "LH4|100|581703", _
      "LH3|100|551c02", _
      "LH2|100|983e07", _
      "LH1|100|c96521", _
      "LPR1|100|1f0502", _
      "LPR3|100|220500", _
      "LPR2|100|612002", _
      "LPR6|100|170202", _
      "LPR5|100|360a02", _
      "LPR4|100|682205", _
      "LMR2|100|080000", _
      "LCR2|100|621600", _
      "LCR1|100|62240b", _
      "LRI|100|010101", _
      "LLI|100|da5a16", _
      "LLO|100|b33c0f", _
      "LSL|100|ffdf46", _
      "FL2|100|0f0400", _
      "FL3|100|fcf18d" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "giapron|100|250801", _
      "gi09|100|c3490f", _
      "gi04|100|df860b", _
      "gi03|100|fef7a3", _
      "gi02|100|fcc433", _
      "gi01|100|fcd238", _
      "LS1|100|590b06", _
      "LCWiz|100|cb5f19", _
      "LLWiz|100|010101", _
      "LC1|100|dca94d", _
      "LC2|100|b84f14", _
      "LC3|100|c15210", _
      "LC4|100|a9562a", _
      "LC5|100|783505", _
      "LC6|100|4a2001", _
      "LC7|100|491d0e", _
      "LC8|100|2c1407", _
      "LWiz|100|481a03", _
      "LW9|100|210e04", _
      "LW8|100|010101", _
      "LMet1|100|030200", _
      "LM1|100|040300", _
      "LSA|100|893b07", _
      "LH9|100|0c0a06", _
      "LH8|100|4f200b", _
      "LH7|100|592604", _
      "LH6|100|6b2d04", _
      "LH5|100|682e04", _
      "LH4|100|be4312", _
      "LH3|100|de5d08", _
      "LH2|100|c64d09", _
      "LH1|100|fcd635", _
      "LPR1|100|661b00", _
      "LPR3|100|5a1905", _
      "LPR2|100|973b08", _
      "LPR6|100|5b210b", _
      "LPR5|100|99481a", _
      "LPR4|100|bd5512", _
      "LMR2|100|330701", _
      "LMR1|100|32150a", _
      "LCR2|100|a94716", _
      "LCR1|100|be6122", _
      "LRO|100|010101", _
      "LLI|100|d0510d", _
      "LLO|100|ce5900", _
      "LSL|100|ffe238" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "gi11|100|010101", _
      "gi09|100|cd591e", _
      "gi08|100|120505", _
      "gi07|100|010102", _
      "gi05|100|060101", _
      "gi04|100|fdc92b", _
      "gi03|100|fbc428", _
      "gi02|100|fbcf3c", _
      "gi01|100|fade3b", _
      "LS1|100|ae2d05", _
      "LS2|100|010000", _
      "LCWiz|100|dd6d05", _
      "LLWiz|100|1e0301", _
      "LC1|100|ec8508", _
      "LC2|100|e88410", _
      "LC3|100|f4e06c", _
      "LC4|100|d46406", _
      "LC5|100|f38417", _
      "LC6|100|ac4606", _
      "LC7|100|9e4c08", _
      "LC8|100|79360f", _
      "LWiz|100|853102", _
      "LW9|100|a24b16", _
      "LW8|100|712605", _
      "LW7|100|3f1404", _
      "LMet1|100|1c0501", _
      "LM1|100|922503", _
      "LSA|100|ef8802", _
      "LH9|100|8b4b24", _
      "LH8|100|863b04", _
      "LH7|100|a65611", _
      "LH6|100|b5540b", _
      "LH5|100|eb8311", _
      "LH4|100|f4b52a", _
      "LH3|100|fdbf27", _
      "LH2|100|febe1f", _
      "LH1|100|fcbc13", _
      "LPR1|100|9b340c", _
      "LPR3|100|cf5717", _
      "LPR2|100|c35413", _
      "LPR6|100|aa5c0c", _
      "LPR5|100|db6412", _
      "LPR4|100|fab214", _
      "LMR2|100|75340d", _
      "LMR1|100|762e0b", _
      "LCR2|100|feda3c", _
      "LCR1|100|f8ce33", _
      "LRI|100|020001", _
      "LLI|100|ffec81", _
      "LLO|100|fceb45", _
      "LSL|100|facf31" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "giapron|100|1e0b01", _
      "gi12|100|010101", _
      "gi11|100|090104", _
      "gi10|100|010101", _
      "gi09|100|f8d32a", _
      "gi08|100|491d07", _
      "gi07|100|622b01", _
      "gi06|100|080100", _
      "gi05|100|3a1807", _
      "gi04|100|fdcc37", _
      "gi03|100|fbc126", _
      "gi02|100|fff68a", _
      "gi01|100|fcdb47", _
      "LS1|100|f3c305", _
      "LS2|100|1f0906", _
      "LS3|100|060201", _
      "LCWiz|100|df7619", _
      "LLWiz|100|813807", _
      "LC1|100|fdf378", _
      "LC2|100|feca31", _
      "LC3|100|fdbd13", _
      "LC4|100|fcd22c", _
      "LC5|100|f6c419", _
      "LC6|100|f38314", _
      "LC7|100|f69607", _
      "LC8|100|d86717", _
      "LWiz|100|c7520b", _
      "LW9|100|cf5d11", _
      "LW8|100|ac4303", _
      "LW7|100|c75307", _
      "LW6|100|5b250c", _
      "LW5|100|050100", _
      "LSC3|100|010101", _
      "LSC2|100|010101", _
      "LSC1|100|010101", _
      "LCC3|100|0d0201", _
      "LCC2|100|010101", _
      "LMet4|100|321003", _
      "LMet3|100|210902", _
      "LMet2|100|020100", _
      "LMet1|100|5d0601", _
      "LM1|100|d06009", _
      "LSA|100|e55a07", _
      "LH9|100|903504", _
      "LH8|100|e26f10", _
      "LH7|100|ed820d", _
      "LH6|100|ea9b2f", _
      "LH5|100|f8c826", _
      "LH4|100|ec910d", _
      "LH3|100|fbb518", _
      "LH2|100|f2b719", _
      "LH1|100|f7b313", _
      "LPR1|100|fac624", _
      "LPR3|100|fff779", _
      "LPR2|100|e27a18", _
      "LPR6|100|feac18", _
      "LPR5|100|fcb215", _
      "LPR4|100|ffd22d", _
      "LMR2|100|d95818", _
      "LMR1|100|df610b", _
      "LCR2|100|ffd734", _
      "LCR1|100|fbe448", _
      "LRI|100|060200", _
      "LLI|100|fef6ca", _
      "LLO|100|fde255", _
      "LSL|100|fff2a9" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "giapron|100|010101", _
      "gi11|100|6e2304", _
      "gi10|100|120404", _
      "gi09|100|fcd849", _
      "gi08|100|8d4302", _
      "gi07|100|ae4b0d", _
      "gi06|100|190802", _
      "gi05|100|491306", _
      "gi04|100|f8e143", _
      "gi03|100|fbe166", _
      "gi02|100|ffe23e", _
      "gi01|100|f3ab17", _
      "LS1|100|fecc29", _
      "LS2|100|913d11", _
      "LS3|100|8c2f02", _
      "LSwC2|100|000000", _
      "LCWiz|100|fef073", _
      "LLWiz|100|a5431c", _
      "LC1|100|f6f354", _
      "LC2|100|fdde47", _
      "LC3|100|fbeb46", _
      "LC4|100|fbbd1f", _
      "LC5|100|f8bd20", _
      "LC6|100|ffb508", _
      "LC7|100|f9b81b", _
      "LC8|100|f38b03", _
      "LWiz|100|fee857", _
      "LW9|100|cb5905", _
      "LW8|100|de5b0c", _
      "LW7|100|983409", _
      "LW6|100|be4709", _
      "LW5|100|7f1e08", _
      "LW4|100|0b0402", _
      "LW3|100|020100", _
      "LW2|100|010101", _
      "LSC3|100|5d270a", _
      "LSC2|100|1d0001", _
      "LSC1|100|050100", _
      "LTW2|100|070001", _
      "LTW1|100|170403", _
      "LCC3|100|381b12", _
      "LCC1|100|010101", _
      "LMet4|100|823612", _
      "LMet3|100|702b02", _
      "LMet2|100|771e0a", _
      "LMet1|100|de5b09", _
      "LM1|100|f9c519", _
      "LSA|100|c35916", _
      "LH9|100|dc5004", _
      "LH8|100|db5100", _
      "LH7|100|f49705", _
      "LH6|100|fec81f", _
      "LH5|100|fab70f", _
      "LH4|100|fbb816", _
      "LH3|100|f6ec59", _
      "LH2|100|fdde5a", _
      "LH1|100|f9f25e", _
      "LPR1|100|fcb923", _
      "LPR3|100|feb019", _
      "LPR2|100|fdee70", _
      "LPR6|100|fbf777", _
      "LPR5|100|ffdb32", _
      "LPR4|100|fab911", _
      "LMR2|100|f8e354", _
      "LMR1|100|fbe14f", _
      "LCR2|100|f9af27", _
      "LCR1|100|fcc627", _
      "LRI|100|752c07", _
      "LRO|100|190801", _
      "LLI|100|f0db59", _
      "LLO|100|ffc029", _
      "LSL|100|d6540e", _
      "FL2|100|130804", _
      "FL3|100|fde754" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "giapron|100|000000", _
      "gi20|100|010101", _
      "gi18|100|010101", _
      "gi14|100|010101", _
      "gi12|100|48190a", _
      "gi11|100|934920", _
      "gi10|100|2e0701", _
      "gi09|100|fff46a", _
      "gi08|100|f2820f", _
      "gi07|100|e66506", _
      "gi06|100|350800", _
      "gi05|100|5a1300", _
      "gi04|100|fcdc2e", _
      "gi03|100|f6bf2e", _
      "gi02|100|621203", _
      "gi01|100|360b04", _
      "LS5|100|050000", _
      "LS1|100|fae14a", _
      "LS2|100|b45b0e", _
      "LS3|100|c35b07", _
      "LS4|100|070100", _
      "LS6|100|220600", _
      "LCWiz|100|ffd245", _
      "LLWiz|100|fdc316", _
      "LC1|100|ef7c05", _
      "LC2|100|c8400c", _
      "LC3|100|eb6a04", _
      "LC4|100|d46718", _
      "LC5|100|c14f08", _
      "LC6|100|cc5104", _
      "LC7|100|df6707", _
      "LC8|100|e7720e", _
      "LWiz|100|ffdd53", _
      "LW9|100|fde546", _
      "LW8|100|c95f15", _
      "LW7|100|c5500e", _
      "LW6|100|e46a02", _
      "LW5|100|be3a00", _
      "LW4|100|9f2b04", _
      "LW3|100|b14205", _
      "LW2|100|1a0903", _
      "LW1|100|0b0101", _
      "LSC3|100|a0420b", _
      "LSC2|100|601603", _
      "LSC1|100|964a16", _
      "LPC3|100|030001", _
      "LPC2|100|010101", _
      "LPC1|100|010101", _
      "LTW2|100|5a270c", _
      "LTW1|100|180b02", _
      "LCC3|100|4b180a", _
      "LCC2|100|591906", _
      "LCC1|100|0f0b08", _
      "LMet4|100|bc500a", _
      "LMet3|100|b74e0f", _
      "LMet2|100|b0360b", _
      "LMet1|100|f6e663", _
      "LM2|100|110403", _
      "LM1|100|ffea89", _
      "LSA|100|501607", _
      "LH9|100|b84e07", _
      "LH8|100|ad3f06", _
      "LH7|100|cc530b", _
      "LH6|100|b8480c", _
      "LH5|100|c14701", _
      "LH4|100|832302", _
      "LH3|100|a63303", _
      "LH2|100|f08a0e", _
      "LH1|100|d25705", _
      "LPR1|100|fd9d08", _
      "LPR3|100|fde945", _
      "LPR2|100|feec5a", _
      "LPR6|100|feb020", _
      "LPR5|100|f4c125", _
      "LPR4|100|f9ef7a", _
      "LMR2|100|ffbd1b", _
      "LMR1|100|f0a40a", _
      "LCR2|100|fdf066", _
      "LCR1|100|fce344", _
      "LRI|100|b55308", _
      "LRO|100|552607", _
      "LLI|100|f4c8d0", _
      "LLO|100|f5a60f", _
      "LSL|100|3e0700", _
      "FL2|100|010101", _
      "FL3|100|ad2d00" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "gi21|100|010101", _
      "gi19|100|050000", _
      "gi14|100|2f0402", _
      "gi12|100|3b0b01", _
      "gi11|100|e48005", _
      "gi10|100|7d3207", _
      "gi09|100|f48a04", _
      "gi08|100|e36000", _
      "gi07|100|b24606", _
      "gi06|100|340c08", _
      "gi05|100|4c1002", _
      "gi04|100|77230a", _
      "gi03|100|88391c", _
      "gi02|100|250301", _
      "gi01|100|190501", _
      "LPF|100|020103", _
      "LX|100|010102", _
      "LS5|100|511500", _
      "LS1|100|fff188", _
      "LS2|100|fbd52f", _
      "LS3|100|d89e25", _
      "LS4|100|d37c05", _
      "LS6|100|9e4607", _
      "LCWiz|100|feec8d", _
      "LLWiz|100|fac322", _
      "LC1|100|240a00", _
      "LC2|100|2f0400", _
      "LC3|100|401705", _
      "LC4|100|703c07", _
      "LC5|100|c54301", _
      "LC6|100|f78e01", _
      "LC7|100|faad09", _
      "LC8|100|7d0b00", _
      "LWiz|100|fdc921", _
      "LW9|100|fadf63", _
      "LW8|100|fdf2bb", _
      "LW7|100|fdd961", _
      "LW6|100|eebe1f", _
      "LW5|100|e05810", _
      "LW4|100|e66d1e", _
      "LW3|100|8d2b0b", _
      "LW2|100|f88d14", _
      "LW1|100|af4806", _
      "LMLR|100|240e04", _
      "LEBR|100|0b0704", _
      "LPC4|100|010101", _
      "LSC3|100|d2500b", _
      "LSC2|100|9d420a", _
      "LSC1|100|c06026", _
      "LF3|100|010101", _
      "LPC3|100|3c1904", _
      "LPC2|100|200d09", _
      "LPC1|100|080200", _
      "LTW2|100|56220b", _
      "LTW1|100|390e0b", _
      "LCC3|100|b95800", _
      "LCC2|100|6e2402", _
      "LCC1|100|3e1001", _
      "LMet4|100|f18b1f", _
      "LMet3|100|b34103", _
      "LMet2|100|f3d332", _
      "LMet1|100|f4a021", _
      "LM5|100|340f03", _
      "LM2|100|210602", _
      "LM1|100|ffe85b", _
      "LSA|100|030303", _
      "LH9|100|80250b", _
      "LH8|100|5c1003", _
      "LH7|100|581a00", _
      "LH6|100|360b00", _
      "LH5|100|2d0707", _
      "LH4|100|2d0a05", _
      "LH3|100|1e0906", _
      "LH2|100|100000", _
      "LH1|100|1a0b04", _
      "LPR1|100|f9df44", _
      "LPR3|100|ed7a05", _
      "LPR2|100|bd3901", _
      "LPR6|100|b3380d", _
      "LPR5|100|e77808", _
      "LPR4|100|561803", _
      "LMR2|100|fdda4f", _
      "LMR1|100|fcf780", _
      "LCR2|100|ebaa30", _
      "LCR1|100|fdda69", _
      "LRI|100|f9a70e", _
      "LRO|100|85310f", _
      "LLI|100|e37f17", _
      "LLO|100|621f0b", _
      "LSR|100|050304", _
      "LSL|100|000000", _
      "FL2|100|000000", _
      "FL3|100|b2400e" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
    .Lights = Array( _
      "gi20|100|2c0c05", _
      "gi19|100|632b02", _
      "gi18|100|0f0300", _
      "gi16|100|010101", _
      "gi15|100|010101", _
      "gi14|100|a74812", _
      "gi13|100|120404", _
      "gi12|100|441e0e", _
      "gi11|100|f7bd15", _
      "gi10|100|e57f16", _
      "gi09|100|782d07", _
      "gi08|100|ae3e02", _
      "gi07|100|7c2502", _
      "gi06|100|290c02", _
      "gi05|100|250b00", _
      "gi04|100|300601", _
      "gi03|100|1a0001", _
      "gi02|100|000000", _
      "gi01|100|000000", _
      "LPF|100|230804", _
      "LX|100|d6650b", _
      "LS5|100|912200", _
      "LS1|100|c04b06", _
      "LS2|100|ed8c12", _
      "LS3|100|feda2f", _
      "LS4|100|b64c0b", _
      "LS6|100|a2380e", _
      "LSwC1|100|010101", _
      "LCWiz|100|e57210", _
      "LLWiz|100|ffaa2a", _
      "LC1|100|110300", _
      "LC2|100|130203", _
      "LC3|100|070200", _
      "LC4|100|060002", _
      "LC5|100|010101", _
      "LC6|100|050000", _
      "LC7|100|251009", _
      "LC8|100|2a0500", _
      "LWiz|100|fef46e", _
      "LW9|100|fee55a", _
      "LW8|100|fcd856", _
      "LW7|100|fcf051", _
      "LW6|100|fcc320", _
      "LW5|100|fce04c", _
      "LW4|100|eec723", _
      "LW3|100|ecc234", _
      "LW2|100|e58806", _
      "LW1|100|ae5431", _
      "LMLR|100|5c1207", _
      "LEBR|100|6c2100", _
      "LMR|100|170202", _
      "LPC5|100|090100", _
      "LPC4|100|010003", _
      "LSC3|100|f09619", _
      "LSC2|100|d77304", _
      "LSC1|100|ffe258", _
      "LF3|100|712b07", _
      "LF2|100|511b03", _
      "LF1|100|0d0000", _
      "LPC3|100|8c3f1c", _
      "LPC2|100|3a1506", _
      "LPC1|100|3b140a", _
      "LTW2|100|f7c62a", _
      "LTW1|100|c66908", _
      "LCC3|100|ffd14e", _
      "LCC2|100|faab0e", _
      "LCC1|100|db6f07", _
      "LMet4|100|fee44b", _
      "LMet3|100|fae535", _
      "LMet2|100|fcde5f", _
      "LMet1|100|fce040", _
      "LM5|100|f88e0d", _
      "LM4|100|150301", _
      "LM3|100|010101", _
      "LM2|100|541c0c", _
      "LM1|100|de5f1e", _
      "LSA|100|000000", _
      "LH9|100|210b00", _
      "LH8|100|190600", _
      "LH7|100|030200", _
      "LH6|100|010101", _
      "LH5|100|000000", _
      "LH4|100|090001", _
      "LH3|100|050000", _
      "LH2|100|000000", _
      "LH1|100|000000", _
      "LPR1|100|e27002", _
      "LPR3|100|360e01", _
      "LPR2|100|280a05", _
      "LPR6|100|250704", _
      "LPR5|100|0d0301", _
      "LPR4|100|130406", _
      "LMR2|100|761f05", _
      "LMR1|100|d96a15", _
      "LCR2|100|47160f", _
      "LCR1|100|470d01", _
      "LRI|100|e67c16", _
      "LRO|100|7c1f07", _
      "LLI|100|120304", _
      "LLO|100|100501", _
      "LSR|100|1b0500", _
      "FL3|100|140100" _
      )
  End With
  With .AddStep(0.50000, Null, Null)
    .Lights = Array( _
      "gi22|100|100403", _
      "gi20|100|290e01", _
      "gi19|100|c4661f", _
      "gi18|100|010101", _
      "gi16|100|000000", _
      "gi15|100|803704", _
      "gi14|100|be612a", _
      "gi13|100|662005", _
      "gi12|100|2c150c", _
      "gi11|100|6f2701", _
      "gi10|100|ed9303", _
      "gi09|100|571a0a", _
      "gi08|100|661f07", _
      "gi07|100|240b02", _
      "gi06|100|010103", _
      "gi05|100|000000", _
      "gi04|100|000000", _
      "gi03|100|000000", _
      "LPF|100|2d120d", _
      "LX|100|c75207", _
      "LS5|100|eb7f07", _
      "LS1|100|74260b", _
      "LS2|100|fbcc22", _
      "LS3|100|feb92f", _
      "LS4|100|f6ed71", _
      "LS6|100|c5530c", _
      "LSwC2|100|010101", _
      "LSwC1|100|040301", _
      "LCWiz|100|642a18", _
      "LLWiz|100|f8c22e", _
      "LC1|100|000000", _
      "LC2|100|000000", _
      "LC3|100|000000", _
      "LC4|100|000000", _
      "LC5|100|000000", _
      "LC6|100|000000", _
      "LC7|100|000000", _
      "LC8|100|000000", _
      "LWiz|100|fab620", _
      "LW9|100|f8c927", _
      "LW8|100|f2b334", _
      "LW7|100|fad02d", _
      "LW6|100|fdf4a3", _
      "LW5|100|ffed58", _
      "LW4|100|f4a50f", _
      "LW3|100|f7d744", _
      "LW2|100|f8cc39", _
      "LW1|100|fbda4f", _
      "LMLR|100|aa3307", _
      "LEBR|100|f0930c", _
      "LMR|100|924412", _
      "LPC5|100|170807", _
      "LPC4|100|170701", _
      "LSC3|100|f8b415", _
      "LSC2|100|f9d12c", _
      "LSC1|100|fbe647", _
      "LF3|100|b14504", _
      "LF2|100|c1490b", _
      "LF1|100|763412", _
      "LPC3|100|ea8813", _
      "LPC2|100|632703", _
      "LPC1|100|5c2111", _
      "LTW2|100|fedc43", _
      "LTW1|100|fddf40", _
      "LCC3|100|fff9b3", _
      "LCC2|100|f8b521", _
      "LCC1|100|873708", _
      "LMet4|100|ffdc3d", _
      "LMet3|100|ffea7f", _
      "LMet2|100|fded7a", _
      "LMet1|100|ffcf2e", _
      "LM5|100|8f2505", _
      "LM4|100|8c3d12", _
      "LM3|100|251308", _
      "LM2|100|c96c12", _
      "LM1|100|8d3b0e", _
      "LH9|100|000000", _
      "LH8|100|000000", _
      "LH7|100|000000", _
      "LH6|100|000000", _
      "LH4|100|000000", _
      "LH3|100|000000", _
      "LPR1|100|220805", _
      "LPR3|100|0a0200", _
      "LPR2|100|0f0100", _
      "LPR6|100|020001", _
      "LPR5|100|000000", _
      "LPR4|100|000000", _
      "LMR2|100|090202", _
      "LMR1|100|310e06", _
      "LCR2|100|000000", _
      "LCR1|100|1f0201", _
      "LRI|100|c95a06", _
      "LRO|100|671b04", _
      "LLI|100|000000", _
      "LLO|100|000000", _
      "LSR|100|010101", _
      "FL1|100|160605", _
      "FL2|100|010101", _
      "FL3|100|000000" _
      )
  End With
  With .AddStep(0.53333, Null, Null)
    .Lights = Array( _
      "gi22|100|280d05", _
      "gi20|100|261102", _
      "gi19|100|d17b3a", _
      "gi18|100|000302", _
      "gi15|100|c04f13", _
      "gi14|100|f0a61a", _
      "gi13|100|e05a09", _
      "gi12|100|2c100c", _
      "gi11|100|ae4504", _
      "gi10|100|fbec47", _
      "gi09|100|1e0a01", _
      "gi08|100|160800", _
      "gi07|100|000000", _
      "gi06|100|000000", _
      "LPF|100|6d2b03", _
      "LX|100|efcc2b", _
      "LS5|100|f1b612", _
      "LS1|100|431101", _
      "LS2|100|be650c", _
      "LS3|100|fee240", _
      "LS4|100|fec934", _
      "LS6|100|fde743", _
      "LSwC3|100|2b1a08", _
      "LSwC2|100|060604", _
      "LSwC1|100|601b04", _
      "LCWiz|100|050003", _
      "LLWiz|100|c45000", _
      "LWiz|100|783212", _
      "LW9|100|ae4010", _
      "LW8|100|ba3f02", _
      "LW7|100|f69821", _
      "LW6|100|fdd63b", _
      "LW5|100|fbfdce", _
      "LW4|100|fbf05f", _
      "LW3|100|fbdf44", _
      "LW2|100|f6fffd", _
      "LW1|100|fad218", _
      "LMLR|100|ebc219", _
      "LEBR|100|f1be2e", _
      "LMR|100|b4531b", _
      "LPC5|100|69381f", _
      "LPC4|100|5b1700", _
      "LSC3|100|ffc529", _
      "LSC2|100|fce34e", _
      "LSC1|100|fec728", _
      "LF3|100|d4611c", _
      "LF2|100|b63a07", _
      "LF1|100|b03b04", _
      "LPC3|100|f7b30f", _
      "LPC2|100|f1aa11", _
      "LPC1|100|d97408", _
      "LTW2|100|fdc220", _
      "LTW1|100|fec410", _
      "LCC3|100|bc5505", _
      "LCC2|100|953606", _
      "LCC1|100|4f1f04", _
      "LMet4|100|fee94a", _
      "LMet3|100|fdd637", _
      "LMet2|100|fede43", _
      "LMet1|100|892f04", _
      "LM5|100|eb8f1f", _
      "LM4|100|8e3b12", _
      "LM3|100|55200f", _
      "LM2|100|fcdc3e", _
      "LM1|100|812e0f", _
      "LPR1|100|000000", _
      "LPR3|100|000000", _
      "LPR2|100|000000", _
      "LPR6|100|000000", _
      "LMR2|100|000000", _
      "LMR1|100|060000", _
      "LCR1|100|000000", _
      "LRI|100|340a01", _
      "LRO|100|351200", _
      "FL1|100|851d09", _
      "FL3|100|010101" _
      )
  End With
  With .AddStep(0.56667, Null, Null)
    .Lights = Array( _
      "gi22|100|3f1404", _
      "gi20|100|0e0500", _
      "gi19|100|ffde40", _
      "gi18|100|000000", _
      "gi15|100|cf5e0c", _
      "gi14|100|f9af16", _
      "gi13|100|f6b856", _
      "gi12|100|0c0200", _
      "gi11|100|221108", _
      "gi10|100|eca412", _
      "gi09|100|000000", _
      "gi08|100|000000", _
      "LPF|100|fec21a", _
      "LX|100|fff27a", _
      "LS5|100|eb9815", _
      "LS1|100|000000", _
      "LS2|100|ba5b23", _
      "LS3|100|99480c", _
      "LS4|100|f7d655", _
      "LS6|100|fffbc3", _
      "LSwC3|100|400a06", _
      "LSwC2|100|4c1b09", _
      "LSwC1|100|2c0a05", _
      "LCWiz|100|000000", _
      "LLWiz|100|46251f", _
      "LWiz|100|130102", _
      "LW9|100|441e12", _
      "LW8|100|3b0b01", _
      "LW7|100|831904", _
      "LW6|100|ac4407", _
      "LW5|100|f9a609", _
      "LW4|100|f4ba1f", _
      "LW3|100|ffeb72", _
      "LW2|100|fce85d", _
      "LW1|100|fdcf37", _
      "LMLR|100|f8d24c", _
      "LEBR|100|e99b16", _
      "LMR|100|f5b41b", _
      "LPC5|100|943606", _
      "LPC4|100|bf4600", _
      "LSC3|100|eb7d0f", _
      "LSC2|100|fff58d", _
      "LSC1|100|f9c747", _
      "LF3|100|e79511", _
      "LF2|100|c5480a", _
      "LF1|100|da550b", _
      "LPC3|100|eb8709", _
      "LPC2|100|fde95d", _
      "LPC1|100|f9ba35", _
      "LTW2|100|ad480e", _
      "LTW1|100|cf5e05", _
      "LCC3|100|9a3f0f", _
      "LCC2|100|cd5a0a", _
      "LCC1|100|491d08", _
      "LMet4|100|f8e043", _
      "LMet3|100|f5c73f", _
      "LMet2|100|ac4516", _
      "LMet1|100|621807", _
      "LM5|100|f6df5b", _
      "LM4|100|e4aa04", _
      "LM3|100|d56c01", _
      "LM2|100|fef493", _
      "LM1|100|1a0701", _
      "LMR1|100|000000", _
      "LRI|100|060102", _
      "LRO|100|030000", _
      "LSR|100|000000", _
      "FL1|100|ce3b02" _
      )
  End With
  With .AddStep(0.60000, Null, Null)
    .Lights = Array( _
      "gi17|100|1c0d08", _
      "gi22|100|913a12", _
      "gi20|100|0a0101", _
      "gi19|100|fed934", _
      "gi18|100|010101", _
      "gi15|100|fae053", _
      "gi14|100|fdc018", _
      "gi13|100|f8dc4c", _
      "gi12|100|1b0a03", _
      "gi11|100|1a0901", _
      "gi10|100|d16c10", _
      "LPF|100|fbbb1b", _
      "LX|100|fbf266", _
      "LS5|100|fef5ae", _
      "LS2|100|321205", _
      "LS3|100|f2b9cd", _
      "LS4|100|fdee51", _
      "LS6|100|fdeb69", _
      "LSwC3|100|bc5407", _
      "LSwC2|100|3f1a09", _
      "LSwC1|100|2c1201", _
      "LLWiz|100|000000", _
      "LWiz|100|000000", _
      "LW9|100|000000", _
      "LW8|100|070103", _
      "LW7|100|210500", _
      "LW6|100|63250f", _
      "LW5|100|882907", _
      "LW4|100|962f02", _
      "LW3|100|842403", _
      "LW2|100|e87211", _
      "LW1|100|f9d933", _
      "LMLR|100|fef069", _
      "LEBR|100|f8e373", _
      "LMR|100|fae357", _
      "LPC5|100|f9ab09", _
      "LPC4|100|6d2907", _
      "LSC3|100|430601", _
      "LSC2|100|ea8b1b", _
      "LSC1|100|faa91c", _
      "LF3|100|fff5bf", _
      "LF2|100|fed544", _
      "LF1|100|fcc822", _
      "LPC3|100|fff397", _
      "LPC2|100|9e3e0c", _
      "LPC1|100|833204", _
      "LTW2|100|a2480a", _
      "LTW1|100|551b00", _
      "LCC3|100|1e0b00", _
      "LCC2|100|31170e", _
      "LCC1|100|1b0801", _
      "LMet4|100|90452b", _
      "LMet3|100|f28617", _
      "LMet2|100|6d2304", _
      "LMet1|100|210803", _
      "LM5|100|fde666", _
      "LM4|100|e16719", _
      "LM3|100|eab545", _
      "LM2|100|c85b12", _
      "LM1|100|000000", _
      "LRI|100|000000", _
      "LRO|100|000000", _
      "FL1|100|f0cf2b", _
      "FL2|100|020001", _
      "FL3|100|060000" _
      )
  End With
  With .AddStep(0.63333, Null, Null)
    .Lights = Array( _
      "gi17|100|873408", _
      "gi22|100|f3a608", _
      "gi20|100|040302", _
      "gi21|100|000000", _
      "gi19|100|f8a91f", _
      "gi15|100|fefccc", _
      "gi14|100|f9bc17", _
      "gi13|100|fde552", _
      "gi12|100|040301", _
      "gi11|100|0a0200", _
      "gi10|100|0d0000", _
      "LPF|100|913605", _
      "LX|100|fedc3c", _
      "LS5|100|fed42e", _
      "LS2|100|160700", _
      "LS3|100|270502", _
      "LS4|100|913c09", _
      "LS6|100|f9e456", _
      "LSwC3|100|fcd337", _
      "LSwC2|100|682607", _
      "LSwC1|100|0e0501", _
      "LW8|100|000000", _
      "LW7|100|000000", _
      "LW6|100|180501", _
      "LW5|100|521a00", _
      "LW4|100|4c0e08", _
      "LW3|100|711e03", _
      "LW2|100|7a3614", _
      "LW1|100|7e3001", _
      "LMLR|100|fae33d", _
      "LEBR|100|fceb47", _
      "LMR|100|feda2e", _
      "LPC5|100|fedc2a", _
      "LPC4|100|24110a", _
      "LSC3|100|130101", _
      "LSC2|100|1c0202", _
      "LSC1|100|4f0d01", _
      "LF3|100|fdef5e", _
      "LF2|100|fbf695", _
      "LF1|100|fedf41", _
      "LPC3|100|b35b0f", _
      "LPC2|100|c05301", _
      "LPC1|100|a23c00", _
      "LTW2|100|2e1209", _
      "LTW1|100|190802", _
      "LCC3|100|180700", _
      "LCC2|100|1a0902", _
      "LCC1|100|1d0b04", _
      "LMet4|100|280702", _
      "LMet3|100|170303", _
      "LMet2|100|260903", _
      "LMet1|100|000000", _
      "LM5|100|fbea4e", _
      "LM4|100|eeb012", _
      "LM3|100|7e3307", _
      "LM2|100|973b09", _
      "FL1|100|fec431", _
      "FL2|100|000000", _
      "FL3|100|130303" _
      )
  End With
  With .AddStep(0.66667, Null, Null)
    .Lights = Array( _
      "gi17|100|924416", _
      "gi22|100|fcee96", _
      "gi20|100|0c0403", _
      "gi21|100|010101", _
      "gi19|100|fff9b4", _
      "gi15|100|fde65e", _
      "gi14|100|7b2712", _
      "gi13|100|fffde4", _
      "gi12|100|010101", _
      "gi11|100|000000", _
      "gi10|100|000000", _
      "LPF|100|c35206", _
      "LX|100|8f3906", _
      "LS5|100|a1430b", _
      "LS2|100|000000", _
      "LS3|100|000000", _
      "LS4|100|652001", _
      "LS6|100|d56b06", _
      "LSwC3|100|843a0d", _
      "LSwC2|100|1b0d07", _
      "LSwC1|100|060302", _
      "LW6|100|000000", _
      "LW5|100|000000", _
      "LW4|100|1d0a05", _
      "LW3|100|2e0a01", _
      "LW2|100|4c1200", _
      "LW1|100|290904", _
      "LMLR|100|c9590b", _
      "LEBR|100|bb5611", _
      "LMR|100|d65604", _
      "LPC5|100|c04a09", _
      "LPC4|100|28140d", _
      "LSC3|100|000000", _
      "LSC2|100|000000", _
      "LSC1|100|150100", _
      "LF3|100|f2db4d", _
      "LF2|100|fec625", _
      "LF1|100|fad938", _
      "LPC3|100|5e2805", _
      "LPC2|100|441e0c", _
      "LPC1|100|190902", _
      "LTW2|100|250c04", _
      "LTW1|100|150600", _
      "LCC3|100|000000", _
      "LCC2|100|0a0200", _
      "LCC1|100|0e0401", _
      "LMet4|100|000000", _
      "LMet3|100|000000", _
      "LMet2|100|000000", _
      "LM5|100|feaf25", _
      "LM4|100|a64c1e", _
      "LM3|100|802c01", _
      "LM2|100|240900", _
      "FL1|100|fff7a8", _
      "FL2|100|010101", _
      "FL3|100|080101" _
      )
  End With
  With .AddStep(0.70000, Null, Null)
    .Lights = Array( _
      "gi17|100|f0c822", _
      "gi22|100|cf610b", _
      "gi20|100|010101", _
      "gi19|100|bd570e", _
      "gi15|100|f9dd5a", _
      "gi14|100|1e0502", _
      "gi13|100|faa016", _
      "gi12|100|000000", _
      "LPF|100|3c1b13", _
      "LX|100|6e1e02", _
      "LS5|100|4e1503", _
      "LS4|100|270401", _
      "LS6|100|230f0e", _
      "LSwC3|100|9f3f04", _
      "LSwC2|100|0e0500", _
      "LSwC1|100|0c0b0c", _
      "LW4|100|000000", _
      "LW3|100|000000", _
      "LW2|100|1c0902", _
      "LW1|100|1e0300", _
      "LMLR|100|6e1c07", _
      "LEBR|100|7e3313", _
      "LMR|100|7d360a", _
      "LPC5|100|a2430a", _
      "LPC4|100|190501", _
      "LSC1|100|000000", _
      "LF3|100|ca5802", _
      "LF2|100|fdaa38", _
      "LF1|100|fcc128", _
      "LPC3|100|2d0b03", _
      "LPC2|100|1f0700", _
      "LPC1|100|210d02", _
      "LTW2|100|000000", _
      "LTW1|100|000000", _
      "LCC2|100|000000", _
      "LCC1|100|000000", _
      "LM5|100|78250a", _
      "LM4|100|a84613", _
      "LM3|100|3d1600", _
      "LM2|100|180700", _
      "FL1|100|f9bb18", _
      "FL3|100|000000" _
      )
  End With
  With .AddStep(0.73333, Null, Null)
    .Lights = Array( _
      "gi17|100|f67c3c", _
      "gi22|100|953a04", _
      "gi19|100|621804", _
      "gi18|100|000000", _
      "gi15|100|ef840b", _
      "gi14|100|000000", _
      "gi13|100|822804", _
      "LPF|100|1f0b00", _
      "LX|100|261003", _
      "LS5|100|150400", _
      "LS4|100|000000", _
      "LS6|100|000000", _
      "LSwC3|100|702703", _
      "LSwC2|100|0a0504", _
      "LSwC1|100|0c0200", _
      "LW2|100|000000", _
      "LW1|100|000000", _
      "LMLR|100|300b0b", _
      "LEBR|100|3e1103", _
      "LMR|100|482415", _
      "LPC5|100|220902", _
      "LPC4|100|0f0400", _
      "LF3|100|240c01", _
      "LF2|100|511503", _
      "LF1|100|933505", _
      "LPC3|100|000000", _
      "LPC2|100|0d0302", _
      "LPC1|100|0c0200", _
      "LM5|100|250801", _
      "LM4|100|280c02", _
      "LM3|100|1e0901", _
      "LM2|100|000000", _
      "FL1|100|a73202", _
      "FL3|100|040404" _
      )
  End With
  With .AddStep(0.76667, Null, Null)
    .Lights = Array( _
      "gi17|100|ffb017", _
      "gi22|100|260d04", _
      "gi20|100|000000", _
      "gi19|100|000000", _
      "gi15|100|210000", _
      "gi13|100|410e03", _
      "LPF|100|0c0402", _
      "LX|100|000000", _
      "LS5|100|000000", _
      "LSwC3|100|1c0c01", _
      "LSwC2|100|120401", _
      "LSwC1|100|010101", _
      "LMLR|100|000000", _
      "LEBR|100|000000", _
      "LMR|100|200903", _
      "LPC5|100|170600", _
      "LPC4|100|080300", _
      "LF3|100|020101", _
      "LF2|100|140502", _
      "LF1|100|270c00", _
      "LPC2|100|000000", _
      "LPC1|100|000000", _
      "LM5|100|000000", _
      "LM4|100|1c0902", _
      "LM3|100|110602", _
      "FL1|100|8e3713", _
      "FL3|100|000000" _
      )
  End With
  With .AddStep(0.80000, Null, Null)
    .Lights = Array( _
      "gi17|100|9b470e", _
      "gi22|100|180700", _
      "gi21|100|000000", _
      "gi15|100|010101", _
      "gi13|100|000000", _
      "LPF|100|000000", _
      "LSwC3|100|120401", _
      "LSwC2|100|040301", _
      "LSwC1|100|000000", _
      "LMR|100|000000", _
      "LPC5|100|000000", _
      "LPC4|100|000000", _
      "LF3|100|000000", _
      "LF2|100|000000", _
      "LF1|100|000000", _
      "LM4|100|000000", _
      "LM3|100|000000", _
      "FL1|100|240b06", _
      "FL2|100|000000", _
      "FL3|100|010101" _
      )
  End With
  With .AddStep(0.83333, Null, Null)
    .Lights = Array( _
      "gi17|100|963e0f", _
      "gi22|100|000000", _
      "gi15|100|000000", _
      "LSwC3|100|000000", _
      "LSwC2|100|000000", _
      "FL1|100|000000" _
      )
  End With
  With .AddStep(0.86667, Null, Null)
    .Lights = Array( _
      "gi17|100|3b190d", _
      "FL3|100|000000" _
      )
  End With
  With .AddStep(0.90000, Null, Null)
    .Lights = Array( _
      "gi17|100|210900" _
      )
  End With
  With .AddStep(0.93333, Null, Null)
    .Lights = Array( _
      "gi17|100|000000" _
      )
  End With
  With .AddStep(0.96667, Null, Null)
  End With
End With


With CreateGlfShow("earth_hit_right")
  With .AddStep(0.06667, Null, Null)
    .Lights = Array( _
      "giapron|100|010101", _
      "FL3|100|260804" _
      )
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "FL3|100|371508" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "giapron|100|000000", _
      "gi06|100|060201", _
      "gi05|100|090203", _
      "LSA|100|010101", _
      "LH9|100|010101", _
      "LSR|100|030002", _
      "FL3|100|ed7b14" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "giapron|100|1a0401", _
      "gi08|100|010101", _
      "gi07|100|170702", _
      "gi06|100|843605", _
      "gi05|100|813814", _
      "LC4|100|010101", _
      "LC5|100|010101", _
      "LC6|100|010101", _
      "LC7|100|010101", _
      "LC8|100|130101", _
      "LSA|100|030301", _
      "LH9|100|1d0c05", _
      "LH8|100|020001", _
      "LH7|100|010101", _
      "LH6|100|010101", _
      "LH5|100|010101", _
      "LH4|100|010101", _
      "LH3|100|010101", _
      "LPR6|100|010101", _
      "LRO|100|0e0202", _
      "LSR|100|802303", _
      "FL2|100|080300", _
      "FL3|100|faf1f7" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "giapron|100|220501", _
      "gi08|100|160505", _
      "gi07|100|8b3306", _
      "gi06|100|ae370c", _
      "gi05|100|dc6811", _
      "gi01|100|010101", _
      "LC1|100|010101", _
      "LC2|100|010101", _
      "LC3|100|010101", _
      "LC5|100|030301", _
      "LC6|100|040304", _
      "LC7|100|1d0e09", _
      "LC8|100|36180d", _
      "LSA|100|2b0e03", _
      "LH9|100|471403", _
      "LH8|100|1d0d08", _
      "LH7|100|1c0e02", _
      "LH6|100|060300", _
      "LH5|100|000001", _
      "LH4|100|000002", _
      "LH3|100|020202", _
      "LH2|100|010102", _
      "LH1|100|010101", _
      "LPR1|100|010101", _
      "LPR3|100|020001", _
      "LPR2|100|010101", _
      "LPR6|100|060401", _
      "LPR5|100|010101", _
      "LPR4|100|010101", _
      "LMR2|100|150503", _
      "LMR1|100|050400", _
      "LRI|100|300801", _
      "LRO|100|b73a06", _
      "LSR|100|a9390b", _
      "FL2|100|100503", _
      "FL3|100|f8c43b" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "giapron|100|251106", _
      "gi08|100|922501", _
      "gi07|100|b23d06", _
      "gi06|100|fcc422", _
      "gi05|100|f9ce3b", _
      "gi03|100|010101", _
      "gi02|100|010101", _
      "LSwC2|100|050401", _
      "LC2|100|020100", _
      "LC3|100|070101", _
      "LC4|100|2a0f00", _
      "LC5|100|512915", _
      "LC6|100|250a02", _
      "LC7|100|7f3d13", _
      "LC8|100|742503", _
      "LSA|100|6a2403", _
      "LH9|100|a14a12", _
      "LH8|100|541502", _
      "LH7|100|3f0f01", _
      "LH6|100|452511", _
      "LH5|100|5f1e03", _
      "LH4|100|0b0601", _
      "LH3|100|000202", _
      "LH2|100|080505", _
      "LPR1|100|1e0505", _
      "LPR3|100|7d553d", _
      "LPR2|100|070103", _
      "LPR6|100|441b08", _
      "LPR5|100|2c0f05", _
      "LPR4|100|010000", _
      "LMR2|100|923508", _
      "LMR1|100|722101", _
      "LCR2|100|010101", _
      "LCR1|100|010101", _
      "LRI|100|bf4004", _
      "LRO|100|d7650c", _
      "LSR|100|cf5206", _
      "LSL|100|010101", _
      "FL2|100|0f0400", _
      "FL3|100|fcf18d" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "giapron|100|2e150c", _
      "gi10|100|1f0901", _
      "gi08|100|b23505", _
      "gi07|100|fcae13", _
      "gi06|100|f6e763", _
      "gi05|100|fed93e", _
      "gi04|100|060100", _
      "gi03|100|020001", _
      "gi01|100|100201", _
      "LLWiz|100|1e0303", _
      "LC1|100|400e04", _
      "LC2|100|3c1408", _
      "LC3|100|391104", _
      "LC4|100|733a20", _
      "LC5|100|6d2811", _
      "LC6|100|f1a013", _
      "LC7|100|e9ab3f", _
      "LC8|100|fcda36", _
      "LWiz|100|030200", _
      "LSC3|100|4d2c14", _
      "LSC2|100|010101", _
      "LSA|100|d26503", _
      "LH9|100|fde34f", _
      "LH8|100|eb9113", _
      "LH7|100|eb8012", _
      "LH6|100|d38a1a", _
      "LH5|100|642707", _
      "LH4|100|450c03", _
      "LH3|100|3c1003", _
      "LH2|100|551905", _
      "LH1|100|491404", _
      "LPR1|100|511707", _
      "LPR3|100|6f2404", _
      "LPR2|100|270d06", _
      "LPR6|100|8e4210", _
      "LPR5|100|4b1911", _
      "LPR4|100|7a2e06", _
      "LMR2|100|b8511a", _
      "LMR1|100|c05301", _
      "LCR2|100|0c0400", _
      "LRI|100|c34206", _
      "LRO|100|db670a", _
      "LLI|100|010101", _
      "LLO|100|010101", _
      "LSR|100|f9bf22" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "giapron|100|1f0a03", _
      "gi14|100|010101", _
      "gi10|100|4f1501", _
      "gi08|100|dcb509", _
      "gi07|100|fae360", _
      "gi06|100|f6b120", _
      "gi05|100|fbdf36", _
      "gi04|100|010101", _
      "gi03|100|2c0c04", _
      "gi02|100|160402", _
      "gi01|100|2a0c09", _
      "LCWiz|100|080100", _
      "LLWiz|100|731701", _
      "LC1|100|722a01", _
      "LC2|100|7c3608", _
      "LC3|100|904102", _
      "LC4|100|994105", _
      "LC5|100|ea920b", _
      "LC6|100|fdec72", _
      "LC7|100|f7c825", _
      "LC8|100|ea9f17", _
      "LWiz|100|150600", _
      "LW9|100|020000", _
      "LSC3|100|6c3203", _
      "LSC2|100|491d01", _
      "LSC1|100|150502", _
      "LMet4|100|2d0f02", _
      "LSA|100|fad965", _
      "LH9|100|fad939", _
      "LH8|100|ea8112", _
      "LH7|100|e98011", _
      "LH6|100|e78605", _
      "LH5|100|b55104", _
      "LH4|100|d16d0e", _
      "LH3|100|bc5601", _
      "LH2|100|c95e00", _
      "LH1|100|853007", _
      "LPR1|100|883c1c", _
      "LPR3|100|e5a713", _
      "LPR2|100|964a2c", _
      "LPR6|100|eec321", _
      "LPR5|100|ec9e2e", _
      "LPR4|100|a2592f", _
      "LMR2|100|edaa16", _
      "LMR1|100|bf550e", _
      "LCR2|100|491706", _
      "LCR1|100|3f2213", _
      "LRI|100|ba430b", _
      "LRO|100|ffea50", _
      "LSR|100|fff08e" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "giapron|100|6b2801", _
      "gi19|100|010101", _
      "gi10|100|782106", _
      "gi08|100|fecb28", _
      "gi07|100|f3a91b", _
      "gi06|100|f9ed7a", _
      "gi05|100|fbe34a", _
      "gi04|100|370e01", _
      "gi03|100|642306", _
      "gi02|100|200303", _
      "gi01|100|391209", _
      "LS1|100|010101", _
      "LCWiz|100|6b4128", _
      "LLWiz|100|e66702", _
      "LC1|100|f4a309", _
      "LC2|100|ed8813", _
      "LC3|100|f8bf11", _
      "LC4|100|ca560b", _
      "LC5|100|f6971a", _
      "LC6|100|fbcd3c", _
      "LC7|100|fcdac5", _
      "LC8|100|ffc91a", _
      "LWiz|100|9c2f05", _
      "LW9|100|a23205", _
      "LW8|100|0c0200", _
      "LW7|100|090302", _
      "LSC3|100|933508", _
      "LSC2|100|903a0f", _
      "LSC1|100|602a06", _
      "LMet4|100|913d00", _
      "LMet3|100|010101", _
      "LSA|100|fef267", _
      "LH9|100|fce64e", _
      "LH8|100|feea3b", _
      "LH7|100|fdbd51", _
      "LH6|100|dc8f17", _
      "LH5|100|b44418", _
      "LH4|100|f6c31c", _
      "LH3|100|f0b413", _
      "LH2|100|faba40", _
      "LH1|100|f69831", _
      "LPR1|100|fce148", _
      "LPR3|100|fdaf0d", _
      "LPR2|100|e4ab06", _
      "LPR6|100|f5d02e", _
      "LPR5|100|dd720d", _
      "LPR4|100|ebb31d", _
      "LMR2|100|efdc56", _
      "LMR1|100|f3d52d", _
      "LCR2|100|923e08", _
      "LCR1|100|c4701e", _
      "LRI|100|ffe846", _
      "LRO|100|fff04b", _
      "LLI|100|280a02", _
      "LSR|100|f9e041", _
      "LSL|100|070000" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "giapron|100|230b01", _
      "gi14|100|180506", _
      "gi10|100|8d3516", _
      "gi09|100|010101", _
      "gi08|100|fef9a6", _
      "gi07|100|fbef98", _
      "gi06|100|fdd830", _
      "gi05|100|f4c61c", _
      "gi04|100|9c4508", _
      "gi03|100|dc6a07", _
      "gi02|100|582308", _
      "gi01|100|632707", _
      "LS1|100|160503", _
      "LS6|100|010101", _
      "LSwC2|100|000000", _
      "LCWiz|100|904b2f", _
      "LLWiz|100|ce5c14", _
      "LC1|100|fce564", _
      "LC2|100|f4bd15", _
      "LC3|100|ffbe1c", _
      "LC4|100|f7cb3a", _
      "LC5|100|f9d92e", _
      "LC6|100|ffef90", _
      "LC7|100|fbf18c", _
      "LC8|100|fbe64a", _
      "LWiz|100|b93b07", _
      "LW9|100|a32e04", _
      "LW8|100|741d06", _
      "LW7|100|983703", _
      "LW6|100|501c05", _
      "LW5|100|0d0503", _
      "LSC3|100|f18b15", _
      "LSC2|100|a03907", _
      "LSC1|100|421205", _
      "LMet4|100|d1650b", _
      "LMet3|100|5c2909", _
      "LMet1|100|130e0a", _
      "LM1|100|110300", _
      "LSA|100|b65b0c", _
      "LH9|100|fee13f", _
      "LH8|100|fbef75", _
      "LH7|100|fee954", _
      "LH6|100|fbe645", _
      "LH5|100|fdde37", _
      "LH4|100|fac01e", _
      "LH3|100|ffd135", _
      "LH2|100|fddf41", _
      "LH1|100|fcbb1f", _
      "LPR1|100|fdd237", _
      "LPR3|100|f5d450", _
      "LPR2|100|f3a046", _
      "LPR6|100|ffed46", _
      "LPR5|100|fcbe31", _
      "LPR4|100|ea7811", _
      "LMR2|100|fdb828", _
      "LMR1|100|fccc2e", _
      "LCR2|100|f4c512", _
      "LCR1|100|f2d51b", _
      "LRI|100|ffea71", _
      "LRO|100|f2c423", _
      "LLI|100|5e1b00", _
      "LLO|100|742a03", _
      "LSR|100|ffe44b", _
      "LSL|100|120907", _
      "FL2|100|130804", _
      "FL3|100|fde754" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "giapron|100|1c0801", _
      "gi15|100|010101", _
      "gi14|100|380f05", _
      "gi10|100|fd960e", _
      "gi09|100|241305", _
      "gi08|100|f3cf2c", _
      "gi07|100|fdc738", _
      "gi06|100|f29122", _
      "gi05|100|e67b0a", _
      "gi04|100|ffca46", _
      "gi03|100|fbcc25", _
      "gi02|100|341201", _
      "gi01|100|512003", _
      "LS5|100|010101", _
      "LS1|100|6e2b0f", _
      "LS6|100|180300", _
      "LCWiz|100|efc826", _
      "LLWiz|100|fdf68c", _
      "LC1|100|f8f498", _
      "LC2|100|fbec52", _
      "LC3|100|febe18", _
      "LC4|100|fdfb6a", _
      "LC5|100|fce954", _
      "LC6|100|face1d", _
      "LC7|100|d29520", _
      "LC8|100|ffd233", _
      "LWiz|100|ebc410", _
      "LW9|100|f16905", _
      "LW8|100|d05302", _
      "LW7|100|c24a0b", _
      "LW6|100|bf4403", _
      "LW5|100|722b07", _
      "LW4|100|431903", _
      "LMLR|100|010101", _
      "LSC3|100|ffefa1", _
      "LSC2|100|ba5a27", _
      "LSC1|100|9c4215", _
      "LF3|100|010101", _
      "LF2|100|010101", _
      "LF1|100|010101", _
      "LMet4|100|b43f09", _
      "LMet3|100|a74608", _
      "LMet2|100|481100", _
      "LMet1|100|9f3603", _
      "LM5|100|010101", _
      "LM1|100|8a2d05", _
      "LSA|100|8b4013", _
      "LH9|100|f8d13a", _
      "LH8|100|be560c", _
      "LH7|100|872d0d", _
      "LH6|100|f19c01", _
      "LH5|100|feed66", _
      "LH4|100|fff7b8", _
      "LH3|100|faf67c", _
      "LH2|100|e3a62f", _
      "LH1|100|923b07", _
      "LPR1|100|f8de45", _
      "LPR3|100|fde045", _
      "LPR2|100|fcf168", _
      "LPR6|100|fae248", _
      "LPR5|100|feec3d", _
      "LPR4|100|ffe837", _
      "LMR2|100|fffaa6", _
      "LMR1|100|fffabe", _
      "LCR2|100|f39712", _
      "LCR1|100|f79b10", _
      "LRI|100|fbc31e", _
      "LRO|100|fdce33", _
      "LLI|100|e38900", _
      "LLO|100|4b1801", _
      "LSR|100|ee9b1a", _
      "LSL|100|210e0a", _
      "FL2|100|010101", _
      "FL3|100|ad2d00" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "giapron|100|000000", _
      "gi14|100|642c08", _
      "gi13|100|010101", _
      "gi10|100|f79121", _
      "gi09|100|421b11", _
      "gi08|100|fcf5bc", _
      "gi07|100|e97819", _
      "gi06|100|591904", _
      "gi05|100|834b46", _
      "gi04|100|fcda32", _
      "gi03|100|f1b419", _
      "gi02|100|391805", _
      "gi01|100|974008", _
      "LX|100|010101", _
      "LS5|100|090100", _
      "LS1|100|d66d0f", _
      "LS2|100|080100", _
      "LS3|100|541c04", _
      "LS4|100|010101", _
      "LS6|100|290604", _
      "LCWiz|100|efa314", _
      "LLWiz|100|fdf79d", _
      "LC1|100|a24c07", _
      "LC2|100|a94804", _
      "LC3|100|bd6209", _
      "LC4|100|b73e06", _
      "LC5|100|90330d", _
      "LC6|100|a43a07", _
      "LC7|100|cd5b1d", _
      "LC8|100|9c3200", _
      "LWiz|100|faee5c", _
      "LW9|100|f2c75f", _
      "LW8|100|d55e16", _
      "LW7|100|d55c0a", _
      "LW6|100|d1510e", _
      "LW5|100|af4208", _
      "LW4|100|af5921", _
      "LW3|100|622c0b", _
      "LW2|100|351506", _
      "LW1|100|010101", _
      "LEBR|100|010101", _
      "LSC3|100|f3b818", _
      "LSC2|100|fdb71d", _
      "LSC1|100|ba5a03", _
      "LCC3|100|030104", _
      "LMet4|100|fef69c", _
      "LMet3|100|de6019", _
      "LMet2|100|ec6f0b", _
      "LMet1|100|a92f07", _
      "LM5|100|060000", _
      "LM1|100|be5624", _
      "LSA|100|561b05", _
      "LH9|100|b94f1d", _
      "LH8|100|af5221", _
      "LH7|100|a5440a", _
      "LH6|100|7e2504", _
      "LH5|100|903904", _
      "LH4|100|98450f", _
      "LH3|100|97450e", _
      "LH2|100|aa4e09", _
      "LH1|100|a84802", _
      "LPR1|100|f5e44d", _
      "LPR3|100|f7c531", _
      "LPR2|100|fbe783", _
      "LPR6|100|b04405", _
      "LPR5|100|e1600a", _
      "LPR4|100|ea8c1b", _
      "LMR2|100|fbc01e", _
      "LMR1|100|f5f288", _
      "LCR2|100|ffe941", _
      "LCR1|100|f8df3c", _
      "LRI|100|fdf072", _
      "LRO|100|fef490", _
      "LLI|100|f1a009", _
      "LLO|100|b05d28", _
      "LSR|100|6e250f", _
      "LSL|100|321207", _
      "FL1|100|010101", _
      "FL2|100|000000", _
      "FL3|100|b2400e" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
    .Lights = Array( _
      "gi14|100|76390b", _
      "gi11|100|150906", _
      "gi10|100|f2cd32", _
      "gi09|100|e9b51b", _
      "gi08|100|ed830f", _
      "gi07|100|500f02", _
      "gi06|100|310f0b", _
      "gi05|100|140402", _
      "gi04|100|f7f4b1", _
      "gi03|100|c35a03", _
      "gi02|100|aa3f01", _
      "gi01|100|722b02", _
      "LX|100|020101", _
      "LS5|100|310500", _
      "LS1|100|f7b61c", _
      "LS2|100|621200", _
      "LS3|100|c15b0a", _
      "LS4|100|130904", _
      "LS6|100|4c1f05", _
      "LCWiz|100|f7d639", _
      "LLWiz|100|f8ce37", _
      "LC1|100|6f2a01", _
      "LC2|100|772f07", _
      "LC3|100|7f2e05", _
      "LC4|100|913002", _
      "LC5|100|742404", _
      "LC6|100|741f03", _
      "LC7|100|681c03", _
      "LC8|100|4b1002", _
      "LWiz|100|fffacc", _
      "LW9|100|feea7c", _
      "LW8|100|fdf176", _
      "LW7|100|ea8c14", _
      "LW6|100|d96d03", _
      "LW5|100|be4208", _
      "LW4|100|d36a08", _
      "LW3|100|7a2b0a", _
      "LW2|100|7e3d0a", _
      "LW1|100|5c1a03", _
      "LMLR|100|180504", _
      "LMR|100|010101", _
      "LSC3|100|f6ab0f", _
      "LSC2|100|ffba17", _
      "LSC1|100|fcc21d", _
      "LF3|100|000000", _
      "LPC3|100|010101", _
      "LPC2|100|010101", _
      "LTW2|100|5b2504", _
      "LTW1|100|562006", _
      "LCC3|100|60230a", _
      "LCC2|100|200302", _
      "LCC1|100|080001", _
      "LMet4|100|fac627", _
      "LMet3|100|df7b1d", _
      "LMet2|100|c23e0a", _
      "LMet1|100|f8a605", _
      "LM5|100|0c0000", _
      "LM4|100|010101", _
      "LM2|100|050100", _
      "LM1|100|f8d02e", _
      "LSA|100|2b0501", _
      "LH9|100|3e1303", _
      "LH8|100|74290d", _
      "LH7|100|65220f", _
      "LH6|100|6a1903", _
      "LH5|100|903a12", _
      "LH4|100|7b2f05", _
      "LH3|100|682612", _
      "LH2|100|692f22", _
      "LH1|100|974c29", _
      "LPR1|100|fcdd36", _
      "LPR3|100|bd500c", _
      "LPR2|100|832309", _
      "LPR6|100|6c0e00", _
      "LPR5|100|a3441a", _
      "LPR4|100|8d3c0c", _
      "LMR2|100|f26006", _
      "LMR1|100|fda829", _
      "LCR2|100|ba3a07", _
      "LCR1|100|fdf898", _
      "LRI|100|e38508", _
      "LRO|100|6c1e0c", _
      "LLI|100|f5f9a2", _
      "LLO|100|782f08", _
      "LSR|100|39160d", _
      "LSL|100|150c02", _
      "FL3|100|140100" _
      )
  End With
  With .AddStep(0.50000, Null, Null)
    .Lights = Array( _
      "gi22|100|010101", _
      "gi19|100|130302", _
      "gi14|100|a03e04", _
      "gi12|100|130503", _
      "gi11|100|8d2a07", _
      "gi10|100|fab920", _
      "gi09|100|fbcc2f", _
      "gi08|100|541807", _
      "gi07|100|2a0b09", _
      "gi06|100|000000", _
      "gi05|100|000000", _
      "gi04|100|b25c14", _
      "gi03|100|87360f", _
      "gi02|100|1d0b02", _
      "gi01|100|230e05", _
      "LPF|100|010101", _
      "LX|100|180001", _
      "LS5|100|4f1509", _
      "LS1|100|f1f37c", _
      "LS2|100|b73906", _
      "LS3|100|e06a0a", _
      "LS4|100|471601", _
      "LS6|100|933f06", _
      "LCWiz|100|fde242", _
      "LLWiz|100|fcfca5", _
      "LC1|100|441509", _
      "LC2|100|511806", _
      "LC3|100|601a09", _
      "LC4|100|602718", _
      "LC5|100|511e01", _
      "LC6|100|370902", _
      "LC7|100|1f0803", _
      "LC8|100|130502", _
      "LWiz|100|fbca2f", _
      "LW9|100|fce869", _
      "LW8|100|feefa0", _
      "LW7|100|fcf067", _
      "LW6|100|ffdc3d", _
      "LW5|100|e26d20", _
      "LW4|100|e17622", _
      "LW3|100|87380c", _
      "LW2|100|b15e22", _
      "LW1|100|5c1907", _
      "LMLR|100|170302", _
      "LEBR|100|120400", _
      "LMR|100|060000", _
      "LPC5|100|010101", _
      "LSC3|100|facb29", _
      "LSC2|100|fab622", _
      "LSC1|100|eba710", _
      "LF3|100|010101", _
      "LPC3|100|411b07", _
      "LPC2|100|030100", _
      "LPC1|100|010101", _
      "LTW2|100|a64301", _
      "LTW1|100|9f3d01", _
      "LCC3|100|ab4112", _
      "LCC2|100|dd6216", _
      "LCC1|100|60210a", _
      "LMet4|100|fdcd32", _
      "LMet3|100|f8a818", _
      "LMet2|100|c7540b", _
      "LMet1|100|fcbf22", _
      "LM5|100|0d0700", _
      "LM3|100|010101", _
      "LM2|100|532404", _
      "LM1|100|ffec45", _
      "LSA|100|000000", _
      "LH9|100|000306", _
      "LH8|100|160403", _
      "LH7|100|1f0401", _
      "LH6|100|2f0b04", _
      "LH5|100|360a06", _
      "LH4|100|3f0e00", _
      "LH3|100|400904", _
      "LH2|100|3e160f", _
      "LH1|100|54301e", _
      "LPR1|100|a94810", _
      "LPR3|100|5c1d0a", _
      "LPR2|100|8b3116", _
      "LPR6|100|400c01", _
      "LPR5|100|540f05", _
      "LPR4|100|79290e", _
      "LMR2|100|8b380f", _
      "LMR1|100|e07818", _
      "LCR2|100|5d1a03", _
      "LCR1|100|984314", _
      "LRI|100|792704", _
      "LRO|100|1c0603", _
      "LLI|100|a24507", _
      "LLO|100|cc5808", _
      "LSR|100|000000", _
      "LSL|100|190801", _
      "FL3|100|000000" _
      )
  End With
  With .AddStep(0.53333, Null, Null)
    .Lights = Array( _
      "gi20|100|370e02", _
      "gi19|100|010101", _
      "gi18|100|130400", _
      "gi14|100|5d1a07", _
      "gi12|100|912700", _
      "gi11|100|b93500", _
      "gi10|100|892307", _
      "gi09|100|fdbf1d", _
      "gi08|100|1c0203", _
      "gi07|100|000000", _
      "gi04|100|753211", _
      "gi03|100|36170a", _
      "gi02|100|250e05", _
      "gi01|100|1b0700", _
      "LPF|100|140200", _
      "LX|100|4b1401", _
      "LS5|100|85420d", _
      "LS1|100|f8f99b", _
      "LS2|100|cd5505", _
      "LS3|100|d4600e", _
      "LS4|100|a04716", _
      "LS6|100|b3500c", _
      "LSwC3|100|010101", _
      "LSwC1|100|010101", _
      "LCWiz|100|fcd532", _
      "LLWiz|100|ee960c", _
      "LC1|100|290803", _
      "LC2|100|250901", _
      "LC3|100|1b0601", _
      "LC4|100|180700", _
      "LC5|100|120300", _
      "LC6|100|000000", _
      "LC7|100|000000", _
      "LC8|100|000000", _
      "LWiz|100|fbe861", _
      "LW9|100|ffeb72", _
      "LW8|100|f7be20", _
      "LW7|100|fedb40", _
      "LW6|100|fbcf2e", _
      "LW5|100|fae74a", _
      "LW4|100|fcf07b", _
      "LW3|100|9f430f", _
      "LW2|100|b05620", _
      "LW1|100|a34001", _
      "LMLR|100|532107", _
      "LEBR|100|1e0904", _
      "LMR|100|0f0101", _
      "LPC5|100|020001", _
      "LPC4|100|010101", _
      "LSC3|100|e46209", _
      "LSC2|100|f8af1e", _
      "LSC1|100|f8c61a", _
      "LF3|100|150501", _
      "LPC3|100|792808", _
      "LPC2|100|2e0915", _
      "LPC1|100|2d0e0c", _
      "LTW2|100|ca4e0f", _
      "LTW1|100|b03207", _
      "LCC3|100|c04206", _
      "LCC2|100|9d3509", _
      "LCC1|100|ae4605", _
      "LMet4|100|f9a617", _
      "LMet3|100|f8a917", _
      "LMet2|100|fad138", _
      "LMet1|100|ffef76", _
      "LM5|100|451701", _
      "LM4|100|0c0100", _
      "LM2|100|591e07", _
      "LM1|100|fbcd57", _
      "LH9|100|000000", _
      "LH8|100|000000", _
      "LH7|100|000000", _
      "LH6|100|000000", _
      "LH5|100|000000", _
      "LH4|100|190703", _
      "LH3|100|160400", _
      "LH2|100|1d0802", _
      "LH1|100|220b02", _
      "LPR1|100|5d220b", _
      "LPR3|100|280f0a", _
      "LPR2|100|4d1101", _
      "LPR6|100|0d0304", _
      "LPR5|100|1e0b09", _
      "LPR4|100|401105", _
      "LMR2|100|1f0214", _
      "LMR1|100|260705", _
      "LCR2|100|76230c", _
      "LCR1|100|822c0a", _
      "LRI|100|160301", _
      "LRO|100|000000", _
      "LLI|100|8a3902", _
      "LLO|100|a44606", _
      "LSL|100|1a0701" _
      )
  End With
  With .AddStep(0.56667, Null, Null)
    .Lights = Array( _
      "gi20|100|632b07", _
      "gi21|100|010101", _
      "gi18|100|6f2a01", _
      "gi14|100|360a01", _
      "gi12|100|b03902", _
      "gi11|100|d16e03", _
      "gi10|100|400c02", _
      "gi09|100|fff05f", _
      "gi08|100|000000", _
      "gi04|100|672b11", _
      "gi03|100|230b00", _
      "gi02|100|160700", _
      "gi01|100|000000", _
      "LPF|100|2a0803", _
      "LX|100|672f08", _
      "LS5|100|a04302", _
      "LS1|100|f1c225", _
      "LS2|100|ffe143", _
      "LS3|100|fcd235", _
      "LS4|100|df681c", _
      "LS6|100|d85903", _
      "LSwC2|100|010101", _
      "LCWiz|100|c85814", _
      "LLWiz|100|3e0d03", _
      "LC1|100|000000", _
      "LC2|100|000000", _
      "LC3|100|000000", _
      "LC4|100|000000", _
      "LC5|100|000000", _
      "LWiz|100|cf632a", _
      "LW9|100|ffe950", _
      "LW8|100|fdf9a8", _
      "LW7|100|ffd42a", _
      "LW6|100|ffcc30", _
      "LW5|100|fdb717", _
      "LW4|100|f7b325", _
      "LW3|100|f49f18", _
      "LW2|100|f3d94a", _
      "LW1|100|c93e02", _
      "LMLR|100|6c3003", _
      "LEBR|100|451803", _
      "LMR|100|291107", _
      "LPC5|100|0d0000", _
      "LPC4|100|1d0604", _
      "LSC3|100|a63204", _
      "LSC2|100|ab2e0a", _
      "LSC1|100|9c3205", _
      "LF3|100|010101", _
      "LPC3|100|ae4e14", _
      "LPC2|100|ac5b3d", _
      "LPC1|100|540b04", _
      "LTW2|100|ee7a27", _
      "LTW1|100|b34c10", _
      "LCC3|100|bf3f0e", _
      "LCC2|100|d97200", _
      "LCC1|100|cb530c", _
      "LMet4|100|f5d93b", _
      "LMet3|100|fbd733", _
      "LMet2|100|fee747", _
      "LMet1|100|ffe24c", _
      "LM5|100|542607", _
      "LM4|100|0e0101", _
      "LM3|100|1b0201", _
      "LM2|100|ad4d13", _
      "LM1|100|faf784", _
      "LH4|100|000000", _
      "LH3|100|000000", _
      "LH2|100|000000", _
      "LH1|100|000000", _
      "LPR1|100|0d0101", _
      "LPR3|100|000000", _
      "LPR2|100|060201", _
      "LPR6|100|000000", _
      "LPR5|100|000000", _
      "LPR4|100|000000", _
      "LMR2|100|000000", _
      "LMR1|100|080100", _
      "LCR2|100|200601", _
      "LCR1|100|2f0904", _
      "LRI|100|000000", _
      "LLI|100|521d03", _
      "LLO|100|cba58e", _
      "LSL|100|1a0901" _
      )
  End With
  With .AddStep(0.60000, Null, Null)
    .Lights = Array( _
      "gi20|100|7d2808", _
      "gi21|100|070101", _
      "gi18|100|bb5009", _
      "gi14|100|230b00", _
      "gi12|100|b03f08", _
      "gi11|100|fef774", _
      "gi10|100|1c0905", _
      "gi09|100|df610b", _
      "gi04|100|1f0b04", _
      "gi03|100|000000", _
      "gi02|100|000000", _
      "LPF|100|5b2407", _
      "LX|100|a85809", _
      "LS5|100|db560b", _
      "LS1|100|e28002", _
      "LS2|100|fafffb", _
      "LS3|100|ffca29", _
      "LS4|100|e3881b", _
      "LS6|100|712207", _
      "LSwC1|100|110103", _
      "LCWiz|100|4a1401", _
      "LLWiz|100|150200", _
      "LWiz|100|310501", _
      "LW9|100|792705", _
      "LW8|100|fd9a11", _
      "LW7|100|fff378", _
      "LW6|100|f9c030", _
      "LW5|100|ffd432", _
      "LW4|100|fdcc27", _
      "LW3|100|fdb115", _
      "LW2|100|f69e1f", _
      "LW1|100|fcc120", _
      "LMLR|100|8e3b11", _
      "LEBR|100|742e01", _
      "LMR|100|55260a", _
      "LPC5|100|040000", _
      "LPC4|100|300d03", _
      "LSC3|100|100501", _
      "LSC2|100|300c05", _
      "LSC1|100|560e00", _
      "LPC3|100|c75211", _
      "LPC2|100|903f04", _
      "LPC1|100|993f06", _
      "LTW2|100|fac520", _
      "LTW1|100|fed12f", _
      "LCC3|100|fddf3b", _
      "LCC2|100|fce83f", _
      "LCC1|100|e47b0f", _
      "LMet4|100|af3805", _
      "LMet3|100|fdfb97", _
      "LMet2|100|f8c22a", _
      "LMet1|100|feee63", _
      "LM5|100|3d1007", _
      "LM4|100|4d1904", _
      "LM3|100|2d0d01", _
      "LM2|100|f4bb27", _
      "LM1|100|fcb318", _
      "LPR1|100|000000", _
      "LPR2|100|000000", _
      "LMR1|100|000000", _
      "LCR2|100|000000", _
      "LCR1|100|000000", _
      "LLI|100|401403", _
      "LLO|100|2d0b01", _
      "LSL|100|000000", _
      "FL2|100|010101", _
      "FL3|100|010101" _
      )
  End With
  With .AddStep(0.63333, Null, Null)
    .Lights = Array( _
      "gi20|100|c86338", _
      "gi21|100|591904", _
      "gi18|100|e57311", _
      "gi16|100|010101", _
      "gi15|100|000000", _
      "gi14|100|010101", _
      "gi12|100|f6ed62", _
      "gi11|100|fff6cf", _
      "gi10|100|000000", _
      "gi09|100|711f00", _
      "gi04|100|000000", _
      "LPF|100|823c05", _
      "LX|100|f69507", _
      "LS5|100|a33602", _
      "LS1|100|8e3a15", _
      "LS2|100|f1bd23", _
      "LS3|100|f7d748", _
      "LS4|100|f2bd13", _
      "LS6|100|561205", _
      "LSwC2|100|020202", _
      "LSwC1|100|180300", _
      "LCWiz|100|080203", _
      "LLWiz|100|000000", _
      "LWiz|100|050000", _
      "LW9|100|340d05", _
      "LW8|100|400b0b", _
      "LW7|100|fee04e", _
      "LW6|100|fabf20", _
      "LW5|100|feef5c", _
      "LW4|100|fddb43", _
      "LW3|100|fca708", _
      "LW2|100|fcb00f", _
      "LW1|100|faac0a", _
      "LMLR|100|490f00", _
      "LEBR|100|9e4402", _
      "LMR|100|431700", _
      "LPC5|100|361301", _
      "LPC4|100|522003", _
      "LSC3|100|000000", _
      "LSC2|100|000000", _
      "LSC1|100|230901", _
      "LF3|100|000000", _
      "LPC3|100|f4e248", _
      "LPC2|100|e08c23", _
      "LPC1|100|c56217", _
      "LTW2|100|feb71e", _
      "LTW1|100|fbc42c", _
      "LCC3|100|f9cf2b", _
      "LCC2|100|fef6c6", _
      "LCC1|100|fdca2d", _
      "LMet4|100|030303", _
      "LMet3|100|a22b02", _
      "LMet2|100|f4b033", _
      "LMet1|100|f8df44", _
      "LM5|100|2d0b02", _
      "LM4|100|6f3204", _
      "LM3|100|5f2705", _
      "LM2|100|ef8c10", _
      "LM1|100|e37001", _
      "LLI|100|000000", _
      "LLO|100|1a0902", _
      "FL2|100|030102" _
      )
  End With
  With .AddStep(0.66667, Null, Null)
    .Lights = Array( _
      "gi20|100|fdef98", _
      "gi21|100|842f08", _
      "gi18|100|bc4d13", _
      "gi16|100|000000", _
      "gi12|100|feed9b", _
      "gi11|100|feda5e", _
      "gi09|100|6a1d01", _
      "LPF|100|b35109", _
      "LX|100|a23200", _
      "LS5|100|621704", _
      "LS1|100|3e1406", _
      "LS2|100|fff270", _
      "LS3|100|fef16d", _
      "LS4|100|f0a703", _
      "LS6|100|1b0800", _
      "LSwC2|100|010101", _
      "LSwC1|100|602806", _
      "LCWiz|100|000000", _
      "LWiz|100|000000", _
      "LW9|100|000000", _
      "LW8|100|120703", _
      "LW7|100|1f0c0b", _
      "LW6|100|4e1e16", _
      "LW5|100|e37c08", _
      "LW4|100|f49820", _
      "LW3|100|fdf3a8", _
      "LW2|100|fcb113", _
      "LW1|100|feca2d", _
      "LMLR|100|3b1007", _
      "LEBR|100|4a0e00", _
      "LMR|100|421003", _
      "LPC5|100|723b0f", _
      "LPC4|100|944908", _
      "LSC1|100|000000", _
      "LF3|100|010101", _
      "LPC3|100|f7d22d", _
      "LPC2|100|fddb32", _
      "LPC1|100|fef281", _
      "LTW2|100|ffd643", _
      "LTW1|100|ffcf31", _
      "LCC3|100|febb1a", _
      "LCC2|100|faa910", _
      "LCC1|100|ffdd3d", _
      "LMet4|100|000000", _
      "LMet3|100|290902", _
      "LMet2|100|fabc1d", _
      "LMet1|100|671200", _
      "LM5|100|170701", _
      "LM4|100|54240d", _
      "LM3|100|6f2f02", _
      "LM2|100|fac121", _
      "LM1|100|652911", _
      "LLO|100|000000", _
      "FL2|100|190602" _
      )
  End With
  With .AddStep(0.70000, Null, Null)
    .Lights = Array( _
      "gi20|100|e57c14", _
      "gi21|100|bf4c14", _
      "gi18|100|fff29f", _
      "gi16|100|2f1003", _
      "gi14|100|000000", _
      "gi12|100|fbb82c", _
      "gi11|100|fde952", _
      "gi09|100|1c0500", _
      "LPF|100|c8430a", _
      "LX|100|661901", _
      "LS5|100|360c00", _
      "LS1|100|000000", _
      "LS2|100|fdd435", _
      "LS3|100|e38307", _
      "LS4|100|c54f0d", _
      "LS6|100|010101", _
      "LSwC1|100|77360e", _
      "LW8|100|000000", _
      "LW7|100|000000", _
      "LW6|100|200705", _
      "LW5|100|130402", _
      "LW4|100|3f0802", _
      "LW3|100|982405", _
      "LW2|100|b44211", _
      "LW1|100|a43503", _
      "LMLR|100|1e0a00", _
      "LEBR|100|450c01", _
      "LMR|100|3c0d05", _
      "LPC5|100|401608", _
      "LPC4|100|d36408", _
      "LF1|100|000000", _
      "LPC3|100|f0ab03", _
      "LPC2|100|fcbe11", _
      "LPC1|100|ffe342", _
      "LTW2|100|f9d52e", _
      "LTW1|100|f7e345", _
      "LCC3|100|fce146", _
      "LCC2|100|fde650", _
      "LCC1|100|ffd138", _
      "LMet3|100|010101", _
      "LMet2|100|40100a", _
      "LMet1|100|3e0b02", _
      "LM5|100|010101", _
      "LM4|100|55170a", _
      "LM3|100|8b2c02", _
      "LM2|100|f8b914", _
      "LM1|100|0d0101", _
      "FL1|100|000000", _
      "FL2|100|381103" _
      )
  End With
  With .AddStep(0.73333, Null, Null)
    .Lights = Array( _
      "gi20|100|eba613", _
      "gi21|100|e39d33", _
      "gi19|100|000000", _
      "gi18|100|fcaf10", _
      "gi16|100|5a1c03", _
      "gi12|100|ffe442", _
      "gi11|100|de8405", _
      "gi09|100|000000", _
      "LPF|100|731200", _
      "LX|100|370900", _
      "LS5|100|010101", _
      "LS2|100|691904", _
      "LS3|100|350d0c", _
      "LS4|100|591703", _
      "LS6|100|000000", _
      "LSwC1|100|9e4207", _
      "LW6|100|000000", _
      "LW5|100|070000", _
      "LW4|100|040404", _
      "LW3|100|330f0a", _
      "LW2|100|4d1204", _
      "LW1|100|ab5d14", _
      "LMLR|100|010101", _
      "LEBR|100|290900", _
      "LMR|100|1b0804", _
      "LPC5|100|340c04", _
      "LPC4|100|ce4a10", _
      "LPC3|100|b64611", _
      "LPC2|100|f18003", _
      "LPC1|100|fee144", _
      "LTW2|100|da6007", _
      "LTW1|100|d45803", _
      "LCC3|100|df6c15", _
      "LCC2|100|fbf06e", _
      "LCC1|100|fff5a2", _
      "LMet3|100|000000", _
      "LMet2|100|1e0400", _
      "LMet1|100|000000", _
      "LM4|100|240500", _
      "LM3|100|550f01", _
      "LM2|100|b83c08", _
      "LM1|100|000000", _
      "FL2|100|834217" _
      )
  End With
  With .AddStep(0.76667, Null, Null)
    .Lights = Array( _
      "gi20|100|fbd931", _
      "gi21|100|ffbe1c", _
      "gi18|100|fed03a", _
      "gi16|100|632f05", _
      "gi12|100|fcfa93", _
      "gi11|100|b96231", _
      "LPF|100|531600", _
      "LX|100|010101", _
      "LS5|100|000000", _
      "LS2|100|210500", _
      "LS3|100|0a0200", _
      "LS4|100|1d0902", _
      "LSwC1|100|5b1507", _
      "LW5|100|000000", _
      "LW4|100|000000", _
      "LW3|100|050001", _
      "LW2|100|130502", _
      "LW1|100|290c02", _
      "LEBR|100|010101", _
      "LMR|100|010101", _
      "LPC5|100|150300", _
      "LPC4|100|dd7308", _
      "LF3|100|000000", _
      "LF2|100|000000", _
      "LPC3|100|490f00", _
      "LPC2|100|963f03", _
      "LPC1|100|d4650c", _
      "LTW2|100|340a03", _
      "LTW1|100|63270f", _
      "LCC3|100|210907", _
      "LCC2|100|6a1f05", _
      "LCC1|100|c66515", _
      "LMet2|100|000000", _
      "LM5|100|000000", _
      "LM4|100|010101", _
      "LM3|100|390a00", _
      "LM2|100|db5d0c", _
      "FL2|100|69300b" _
      )
  End With
  With .AddStep(0.80000, Null, Null)
    .Lights = Array( _
      "gi20|100|ac3c11", _
      "gi21|100|fab407", _
      "gi18|100|fdf276", _
      "gi16|100|bf560c", _
      "gi13|100|000000", _
      "gi12|100|e7820c", _
      "gi11|100|2c0c06", _
      "LPF|100|220d05", _
      "LS2|100|000000", _
      "LS3|100|000000", _
      "LS4|100|000000", _
      "LSwC1|100|460f03", _
      "LW3|100|000000", _
      "LW2|100|000000", _
      "LW1|100|000000", _
      "LMLR|100|000000", _
      "LPC5|100|010101", _
      "LPC4|100|591703", _
      "LPC3|100|1b0700", _
      "LPC2|100|37150c", _
      "LPC1|100|4c1104", _
      "LTW2|100|010101", _
      "LTW1|100|0c0101", _
      "LCC3|100|160301", _
      "LCC2|100|1c0604", _
      "LCC1|100|2f0a06", _
      "LM3|100|240b00", _
      "LM2|100|1f0b04", _
      "FL2|100|6d2208" _
      )
  End With
  With .AddStep(0.83333, Null, Null)
    .Lights = Array( _
      "gi20|100|510f0a", _
      "gi21|100|d55703", _
      "gi18|100|a1320e", _
      "gi16|100|f5860a", _
      "gi12|100|270502", _
      "gi11|100|000000", _
      "LPF|100|010101", _
      "LX|100|000000", _
      "LSwC1|100|310c03", _
      "LEBR|100|000000", _
      "LMR|100|000000", _
      "LPC4|100|1c0900", _
      "LPC3|100|000000", _
      "LPC2|100|010101", _
      "LPC1|100|1e0b02", _
      "LTW2|100|000000", _
      "LTW1|100|000000", _
      "LCC3|100|000000", _
      "LCC2|100|000000", _
      "LCC1|100|0f0303", _
      "LM3|100|010101", _
      "LM2|100|000000", _
      "FL2|100|4f1405", _
      "FL3|100|000000" _
      )
  End With
  With .AddStep(0.86667, Null, Null)
    .Lights = Array( _
      "gi22|100|000000", _
      "gi20|100|160601", _
      "gi21|100|883001", _
      "gi18|100|250905", _
      "gi16|100|faa207", _
      "gi12|100|000000", _
      "LPF|100|000000", _
      "LSwC1|100|010101", _
      "LPC5|100|000000", _
      "LPC4|100|010101", _
      "LPC2|100|000000", _
      "LPC1|100|000000", _
      "LCC1|100|000000", _
      "LM4|100|000000", _
      "FL2|100|2d0c00" _
      )
  End With
  With .AddStep(0.90000, Null, Null)
    .Lights = Array( _
      "gi20|100|000000", _
      "gi21|100|2c0b02", _
      "gi18|100|040100", _
      "gi16|100|a03103", _
      "LSwC3|100|000000", _
      "LPC4|100|000000", _
      "LM3|100|000000", _
      "FL2|100|0f0200" _
      )
  End With
  With .AddStep(0.93333, Null, Null)
    .Lights = Array( _
      "gi21|100|010101", _
      "gi18|100|000000", _
      "gi16|100|5c1500", _
      "LSwC2|100|000000", _
      "LSwC1|100|000000", _
      "FL2|100|010101" _
      )
  End With
  With .AddStep(0.96667, Null, Null)
    .Lights = Array( _
      "gi21|100|000000", _
      "gi16|100|1a0602", _
      "FL2|100|000000" _
      )
  End With
End With



End Sub



Sub CreateExtraBallShows()

With CreateGlfShow("eb_show")

  With .AddStep(0.01, Null, Null)
    With .Shows("insert_gi_slide_midleft")
      .Key = "key_eb_show1"
      .Speed = 1
      .Loops = 1
      With .Tokens()
          .Add "color", "ffffff"
          .Add "intensity", 100
      End With
    End With
  End With
  With .AddStep(0.02, Null, Null)
    With .Shows("insert_gi_slide_midright")
      .Key = "key_eb_show2"
      .Speed = 1
      .Loops = 1
      With .Tokens()
          .Add "color", "ffffff"
          .Add "intensity", 100
      End With
    End With
  End With

  With .AddStep(0.21, Null, Null)
    With .Shows("insert_gi_slide_midleft")
      .Key = "key_eb_show3"
      .Speed = 1
      .Loops = 1
      With .Tokens()
          .Add "color", HealthColor1
          .Add "intensity", 100
      End With
    End With
  End With
  With .AddStep(0.22, Null, Null)
    With .Shows("insert_gi_slide_midright")
      .Key = "key_eb_show4"
      .Speed = 1
      .Loops = 1
      With .Tokens()
          .Add "color", HealthColor1
          .Add "intensity", 100
      End With
    End With
  End With

  With .AddStep(0.31, Null, Null)
    With .Shows("insert_gi_slide_midleft")
      .Key = "key_eb_show5"
      .Speed = 1
      .Loops = 1
      With .Tokens()
          .Add "color", HealthColor1
          .Add "intensity", 5
      End With
    End With
  End With
  With .AddStep(0.32, Null, Null)
    With .Shows("insert_gi_slide_midright")
      .Key = "key_eb_show6"
      .Speed = 1
      .Loops = 1
      With .Tokens()
          .Add "color", HealthColor1
          .Add "intensity", 5
      End With
    End With
  End With

  With .AddStep(2, Null, 0.1)
  End With

End With


End Sub
'Final wave wizard shows

Sub CreateFinalWaveWizardShows()


With CreateGlfShow("asteroid_hit_single")
  With .AddStep(0.00000, Null, Null)
    .Lights = Array( _
      "LSwC2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.03333, Null, Null)
    .Lights = Array( _
      "LSwC2|(intensity)|000000", _
      "LM4|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.06667, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|(color)", _
      "LX|(intensity)|(color)", _
      "LEBR|(intensity)|(color)", _
      "LPC3|(intensity)|(color)", _
      "LM4|(intensity)|000000", _
      "LM2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|000000", _
      "gi18|(intensity)|(color)", _
      "gi16|(intensity)|(color)", _
      "gi13|(intensity)|(color)", _
      "LX|(intensity)|000000", _
      "LS5|(intensity)|(color)", _
      "LW2|(intensity)|(color)", _
      "LMLR|(intensity)|(color)", _
      "LEBR|(intensity)|000000", _
      "LPC3|(intensity)|000000", _
      "LTW2|(intensity)|(color)", _
      "LM2|(intensity)|000000" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|(color)", _
      "gi18|(intensity)|000000", _
      "gi16|(intensity)|000000", _
      "gi15|(intensity)|(color)", _
      "gi13|(intensity)|000000", _
      "gi12|(intensity)|(color)", _
      "LS5|(intensity)|000000", _
      "LS3|(intensity)|(color)", _
      "LW4|(intensity)|(color)", _
      "LW2|(intensity)|000000", _
      "LMLR|(intensity)|000000", _
      "LF3|(intensity)|(color)", _
      "LTW2|(intensity)|000000", _
      "LCC3|(intensity)|(color)", _
      "LCC2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|000000", _
      "gi19|(intensity)|(color)", _
      "gi15|(intensity)|000000", _
      "gi12|(intensity)|000000", _
      "gi11|(intensity)|(color)", _
      "LS2|(intensity)|(color)", _
      "LS3|(intensity)|000000", _
      "LS6|(intensity)|e7e7e7", _
      "LW6|(intensity)|(color)", _
      "LW5|(intensity)|(color)", _
      "LW4|(intensity)|000000", _
      "LF3|(intensity)|000000", _
      "LCC3|(intensity)|000000", _
      "LCC2|(intensity)|000000", _
      "LMet3|(intensity)|(color)", _
      "LMet2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|000000", _
      "gi14|(intensity)|(color)", _
      "gi11|(intensity)|000000", _
      "LS2|(intensity)|000000", _
      "LS6|(intensity)|000000", _
      "LW7|(intensity)|(color)", _
      "LW6|(intensity)|000000", _
      "LW5|(intensity)|000000", _
      "LSC1|(intensity)|(color)", _
      "LMet4|(intensity)|(color)", _
      "LMet3|(intensity)|000000", _
      "LMet2|(intensity)|000000", _
      "LMet1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "gi14|(intensity)|000000", _
      "gi10|(intensity)|(color)", _
      "LS1|(intensity)|(color)", _
      "LW9|(intensity)|(color)", _
      "LW8|(intensity)|(color)", _
      "LW7|(intensity)|000000", _
      "LSC3|(intensity)|(color)", _
      "LSC2|(intensity)|(color)", _
      "LSC1|(intensity)|000000", _
      "LMet1|(intensity)|000000", _
      "LM1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "gi09|(intensity)|(color)", _
      "LCWiz|(intensity)|(color)", _
      "LLWiz|(intensity)|(color)", _
      "LWiz|(intensity)|(color)", _
      "LW9|(intensity)|000000", _
      "LW8|(intensity)|000000", _
      "LSC3|(intensity)|0f0f0f", _
      "LSC2|(intensity)|000000", _
      "LMet4|(intensity)|000000", _
      "LM1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "gi10|(intensity)|000000", _
      "gi09|(intensity)|000000", _
      "LS1|(intensity)|000000", _
      "LWiz|(intensity)|000000", _
      "LSC3|(intensity)|000000", _
      "LMR1|(intensity)|d9d9d9", _
      "LCR1|(intensity)|ececec" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "gi08|(intensity)|(color)", _
      "gi07|(intensity)|(color)", _
      "gi04|(intensity)|(color)", _
      "gi03|(intensity)|(color)", _
      "LCWiz|(intensity)|000000", _
      "LLWiz|(intensity)|000000", _
      "LPR1|(intensity)|(color)", _
      "LPR3|(intensity)|(color)", _
      "LPR2|(intensity)|(color)", _
      "LMR2|(intensity)|(color)", _
      "LMR1|(intensity)|(color)", _
      "LCR2|(intensity)|(color)", _
      "LCR1|(intensity)|(color)", _
      "LRI|(intensity)|(color)", _
      "LRO|(intensity)|(color)", _
      "LLI|(intensity)|(color)", _
      "LLO|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "gi06|(intensity)|(color)", _
      "gi05|(intensity)|fefefe", _
      "gi04|(intensity)|d5d5d5", _
      "gi02|(intensity)|(color)", _
      "gi01|(intensity)|(color)", _
      "LC1|(intensity)|(color)", _
      "LC2|(intensity)|(color)", _
      "LC3|(intensity)|(color)", _
      "LC4|(intensity)|(color)", _
      "LC5|(intensity)|(color)", _
      "LC6|(intensity)|(color)", _
      "LC7|(intensity)|(color)", _
      "LC8|(intensity)|(color)", _
      "LH9|(intensity)|(color)", _
      "LH8|(intensity)|(color)", _
      "LH7|(intensity)|(color)", _
      "LH6|(intensity)|(color)", _
      "LH5|(intensity)|(color)", _
      "LH4|(intensity)|(color)", _
      "LH3|(intensity)|(color)", _
      "LH2|(intensity)|(color)", _
      "LH1|(intensity)|(color)", _
      "LPR1|(intensity)|000000", _
      "LPR6|(intensity)|(color)", _
      "LPR5|(intensity)|(color)", _
      "LPR4|(intensity)|(color)", _
      "LMR1|(intensity)|000000", _
      "LCR1|(intensity)|000000", _
      "LRI|(intensity)|000000", _
      "LLI|(intensity)|000000", _
      "LSR|(intensity)|(color)", _
      "LSL|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "gi08|(intensity)|000000", _
      "gi07|(intensity)|000000", _
      "gi05|(intensity)|(color)", _
      "gi04|(intensity)|000000", _
      "gi03|(intensity)|000000", _
      "LSA|(intensity)|(color)", _
      "LPR3|(intensity)|000000", _
      "LPR2|(intensity)|000000", _
      "LPR6|(intensity)|000000", _
      "LPR5|(intensity)|000000", _
      "LPR4|(intensity)|000000", _
      "LMR2|(intensity)|000000", _
      "LCR2|(intensity)|000000", _
      "LRO|(intensity)|000000", _
      "LLO|(intensity)|000000" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "gi06|(intensity)|000000", _
      "gi05|(intensity)|1a1a1a", _
      "gi02|(intensity)|000000", _
      "gi01|(intensity)|000000", _
      "LC1|(intensity)|000000", _
      "LC2|(intensity)|000000", _
      "LC3|(intensity)|000000", _
      "LC4|(intensity)|000000", _
      "LC5|(intensity)|000000", _
      "LC6|(intensity)|000000", _
      "LC7|(intensity)|000000", _
      "LC8|(intensity)|000000", _
      "LH9|(intensity)|000000", _
      "LH8|(intensity)|000000", _
      "LH7|(intensity)|000000", _
      "LH6|(intensity)|000000", _
      "LH5|(intensity)|000000", _
      "LH4|(intensity)|000000", _
      "LH3|(intensity)|000000", _
      "LH2|(intensity)|000000", _
      "LH1|(intensity)|000000", _
      "LSR|(intensity)|000000", _
      "LSL|(intensity)|000000" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|(color)", _
      "gi05|(intensity)|000000", _
      "LSA|(intensity)|000000" _
      )
  End With
  With .AddStep(0.50000, Null, Null)
  End With
  With .AddStep(0.53333, Null, Null)
  End With
  With .AddStep(0.56667, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|000000" _
      )
  End With
End With


With CreateGlfShow("asteroid_hit")
  With .AddStep(0.01, Null, Null)
    With .Shows("asteroid_hit_single")
      .Key = "key_asteroid_hit_single1"
      .Speed = 1.5
      .Loops = 1
      .Priority = 1000
      With .Tokens()
          .Add "color", "ffffff"
          .Add "intensity", 100
      End With
    End With
  End With
  With .AddStep(0.1, Null, Null)
    With .Shows("asteroid_hit_single")
      .Key = "key_asteroid_hit_single2"
      .Speed = 1.5
      .Loops = 1
      .Priority = 1000
      With .Tokens()
          .Add "color", MeteorWarmColor
          .Add "intensity", 100
      End With
    End With
  End With
  With .AddStep(0.2, Null, Null)
    With .Shows("asteroid_hit_single")
      .Key = "key_asteroid_hit_single3"
      .Speed = 1.5
      .Loops = 1
      .Priority = 1000
      With .Tokens()
          .Add "color", MeteorHotColor
          .Add "intensity", 100
      End With
    End With
  End With
End With



With CreateGlfShow("asteroid_explodes_show")

  With .AddStep(0.01, Null, Null)
    With .Shows("insert_swap3")
      .Key = "key_ass_xpld1"
      .Speed = 1.5
      .Loops = 3
      .Priority = 20000
      With .Tokens()
          .Add "color1", "ffffff"
          .Add "color2", MeteorHotColor
          .Add "color3", MeteorWarmColor
          .Add "intensity", 100
      End With
    End With
  End With

  With .AddStep(0.02, Null, Null)
    With .Shows("flicker_color_off")
      .Key = "key_ass_xpld2"
      .Speed = 4
      .Loops = 1
      With .Tokens()
          .Add "lights", "tAsteroid"
          .Add "color", "ffffff"
      End With
    End With
  End With

  With .AddStep(0.2, Null, Null)
    With .Shows("asteroid_hit")
      .Key = "key_ass_xpld3"
      .Speed = 1
      .Loops = 1
      .Priority = 20000
    End With
  End With

  With .AddStep(1.7, Null, Null)
    With .Shows("insert_swap3")
      .Key = "key_ass_xpld4"
      .Speed = 1.5
      .Loops = 3
      .Priority = 20000
      With .Tokens()
          .Add "color1", "000000"
          .Add "color2", MeteorHotColor
          .Add "color3", MeteorWarmColor
          .Add "intensity", 100
      End With
    End With
  End With

  With .AddStep(1.71, Null, Null)
    With .Shows("flicker_color_off")
      .Key = "key_ass_xpld5"
      .Speed = 4
      .Loops = 1
      With .Tokens()
          .Add "lights", "tAsteroid"
          .Add "color", "aaaaaa"
      End With
    End With
  End With

  With .AddStep(1.9, Null, Null)
    With .Shows("asteroid_hit_single")
      .Key = "key_ass_xpld6"
      .Speed = 1.5
      .Loops = 1
      .Priority = 20000
      With .Tokens()
          .Add "color", MeteorWarmColor
          .Add "intensity", 100
      End With
    End With
  End With

  With .AddStep(4.1, Null, Null)
    With .Shows("insert_swap2")
      .Key = "key_ass_xpld7"
      .Speed = 1.5
      .Loops = 4
      .Priority = 20000
      With .Tokens()
          .Add "color1", "000000"
          .Add "color2", MeteorHotColor
          .Add "intensity", 100
      End With
    End With
  End With

  With .AddStep(4.11, Null, Null)
    With .Shows("flicker_color_off")
      .Key = "key_ass_xpld8"
      .Speed = 4
      .Loops = 1
      With .Tokens()
          .Add "lights", "tAsteroid"
          .Add "color", "555555"
      End With
    End With
  End With

  With .AddStep(4.36, Null, Null)
    With .Shows("asteroid_hit_single")
      .Key = "key_ass_xpld9"
      .Speed = 1.5
      .Loops = 1
      .Priority = 20000
      With .Tokens()
          .Add "color", MeteorHotColor
          .Add "intensity", 100
      End With
    End With
  End With

  With .AddStep(5.4, Null, Null)
    With .Shows("flicker_color_off")
      .Key = "key_ass_xpld8"
      .Speed = 4
      .Loops = 1
      With .Tokens()
          .Add "lights", "tAsteroid"
          .Add "color", "111111"
      End With
    End With
  End With

  With .AddStep(5.41, Null, Null)
    With .Shows("asteroid_hit_single")
      .Key = "key_ass_xpld9"
      .Speed = 1.5
      .Loops = 1
      .Priority = 20000
      With .Tokens()
          .Add "color", MeteorHotColor
          .Add "intensity", 100
      End With
    End With
  End With


End With



End Sub





Sub CreateFullyLoadedShows()


    With CreateGlfShow("fully_loaded_scoop")

        With .AddStep(Null, Null, .1)
            .Lights = Array( _
                "LEBR|0|000000", _
                "LMR|(intensity2)|"&ProtonColor, _
                "LX|(intensity1)|"&ProtonColor)
        End With
        With .AddStep(Null, Null, .1)
            .Lights = Array( _
                "LEBR|(intensity1)|"&MoonColor, _
                "LMR|0|000000", _
                "LX|(intensity2)|"&ProtonColor)
        End With
        With .AddStep(Null, Null, .1)
            .Lights = Array( _
                "LEBR|(intensity2)|"&MoonColor, _
                "LMR|(intensity1)|"&MoonColor, _
                "LX|0|000000")
        End With

        With .AddStep(Null, Null, .1)
            .Lights = Array( _
                "LEBR|0|000000", _
                "LMR|(intensity2)|"&MoonColor, _
                "LX|(intensity1)|"&MoonColor)
        End With
        With .AddStep(Null, Null, .1)
            .Lights = Array( _
                "LEBR|(intensity1)|"&ClusterBombColor, _
                "LMR|0|000000", _
                "LX|(intensity2)|"&MoonColor)
        End With
        With .AddStep(Null, Null, .1)
            .Lights = Array( _
                "LEBR|(intensity2)|"&ClusterBombColor, _
                "LMR|(intensity1)|"&ClusterBombColor, _
                "LX|0|000000")
        End With

        With .AddStep(Null, Null, .1)
            .Lights = Array( _
                "LEBR|0|000000", _
                "LMR|(intensity2)|"&ClusterBombColor, _
                "LX|(intensity1)|"&ClusterBombColor)
        End With
        With .AddStep(Null, Null, .1)
            .Lights = Array( _
                "LEBR|(intensity1)|"&ProtonColor, _
                "LMR|0|000000", _
                "LX|(intensity2)|"&ClusterBombColor)
        End With
        With .AddStep(Null, Null, .1)
            .Lights = Array( _
                "LEBR|(intensity2)|"&ProtonColor, _
                "LMR|(intensity1)|"&ProtonColor, _
                "LX|0|000000")
        End With

    End With



    With CreateGlfShow("flwiz_proton_show")

        With .AddStep(0.01, Null, Null)
            With .Shows("insert_gi_slide_midleft")
            .Key = "key_flwiz_p_show1"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", "ffffff"
                .Add "intensity", 100
            End With
            End With
        End With
        With .AddStep(0.02, Null, Null)
            With .Shows("insert_gi_slide_midright")
            .Key = "key_flwiz_p_show2"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", "ffffff"
                .Add "intensity", 100
            End With
            End With
        End With

        With .AddStep(0.21, Null, Null)
            With .Shows("insert_gi_slide_midleft")
            .Key = "key_flwiz_p_show3"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", ProtonColor
                .Add "intensity", 100
            End With
            End With
        End With
        With .AddStep(0.22, Null, Null)
            With .Shows("insert_gi_slide_midright")
            .Key = "key_flwiz_p_show4"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", ProtonColor
                .Add "intensity", 100
            End With
            End With
        End With

        With .AddStep(0.31, Null, Null)
            With .Shows("insert_gi_slide_midleft")
            .Key = "key_flwiz_p_show5"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", ProtonColor
                .Add "intensity", 5
            End With
            End With
        End With
        With .AddStep(0.32, Null, Null)
            With .Shows("insert_gi_slide_midright")
            .Key = "key_flwiz_p_show6"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", ProtonColor
                .Add "intensity", 5
            End With
            End With
        End With

    End With


    With CreateGlfShow("flwiz_cluster_show")

        With .AddStep(0.01, Null, Null)
            With .Shows("insert_gi_slide_midleft")
            .Key = "key_flwiz_c_show1"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", "ffffff"
                .Add "intensity", 100
            End With
            End With
        End With
        With .AddStep(0.02, Null, Null)
            With .Shows("insert_gi_slide_midright")
            .Key = "key_flwiz_c_show2"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", "ffffff"
                .Add "intensity", 100
            End With
            End With
        End With

        With .AddStep(0.21, Null, Null)
            With .Shows("insert_gi_slide_midleft")
            .Key = "key_flwiz_c_show3"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", ClusterBombColor
                .Add "intensity", 100
            End With
            End With
        End With
        With .AddStep(0.22, Null, Null)
            With .Shows("insert_gi_slide_midright")
            .Key = "key_flwiz_c_show4"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", ClusterBombColor
                .Add "intensity", 100
            End With
            End With
        End With

        With .AddStep(0.31, Null, Null)
            With .Shows("insert_gi_slide_midleft")
            .Key = "key_flwiz_c_show5"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", ClusterBombColor
                .Add "intensity", 5
            End With
            End With
        End With
        With .AddStep(0.32, Null, Null)
            With .Shows("insert_gi_slide_midright")
            .Key = "key_flwiz_c_show6"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", ClusterBombColor
                .Add "intensity", 5
            End With
            End With
        End With

    End With


    With CreateGlfShow("flwiz_moon_show")

        With .AddStep(0.01, Null, Null)
            With .Shows("insert_gi_slide_midleft")
            .Key = "key_flwiz_m_show1"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", "ffffff"
                .Add "intensity", 100
            End With
            End With
        End With
        With .AddStep(0.02, Null, Null)
            With .Shows("insert_gi_slide_midright")
            .Key = "key_flwiz_m_show2"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", "ffffff"
                .Add "intensity", 100
            End With
            End With
        End With

        With .AddStep(0.21, Null, Null)
            With .Shows("insert_gi_slide_midleft")
            .Key = "key_flwiz_m_show3"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", MoonColor
                .Add "intensity", 100
            End With
            End With
        End With
        With .AddStep(0.22, Null, Null)
            With .Shows("insert_gi_slide_midright")
            .Key = "key_flwiz_m_show4"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", MoonColor
                .Add "intensity", 100
            End With
            End With
        End With

        With .AddStep(0.31, Null, Null)
            With .Shows("insert_gi_slide_midleft")
            .Key = "key_flwiz_m_show5"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", MoonColor
                .Add "intensity", 5
            End With
            End With
        End With
        With .AddStep(0.32, Null, Null)
            With .Shows("insert_gi_slide_midright")
            .Key = "key_flwiz_m_show6"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", MoonColor
                .Add "intensity", 5
            End With
            End With
        End With

    End With



End Sub
'Dark Chaos Shows

Sub CreateGeneralShows()

    With CreateGlfShow("flicker_color")
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|37|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|100|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|24|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|100|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|70|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|100|(color)")
        End With
    End With


    With CreateGlfShow("flicker2_color")
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|20|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|50|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|24|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|80|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|10|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|45|(color)")
        End With
    End With


    With CreateGlfShow("flicker_color_on")
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|37|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|100|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|24|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|100|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|70|(color)")
        End With
        With .AddStep(Null, Null, -1)
            .Lights = Array("(lights)|100|(color)")
        End With
    End With

    With CreateGlfShow("flicker_color_on_intensity")
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|37|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|100|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|24|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|100|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|70|(color)")
        End With
        With .AddStep(Null, Null, -1)
            .Lights = Array("(lights)|(intensity)|(color)")
        End With
    End With


    With CreateGlfShow("flicker2_color_on_intensity")
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|15|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|80|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|20|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|70|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|5|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|90|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|35|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|80|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|15|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|65|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|15|(color)")
        End With
        With .AddStep(Null, Null, -1)
            .Lights = Array("(lights)|(intensity)|(color)")
        End With
    End With


    With CreateGlfShow("flicker_color_off")
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|37|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|100|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|24|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|100|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|70|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|100|(color)")
        End With
        With .AddStep(Null, Null, .16)
            .Lights = Array("(lights)|37|(color)")
        End With
        With .AddStep(Null, Null, -1)
            .Lights = Array("(lights)|0|(color)")
        End With
    End With


    With CreateGlfShow("flash_color_with_fade")
      With .AddStep(Null, Null, 1)
          .Lights = Array("(lights)|100|(color)|(fade)")
      End With
      With .AddStep(Null, Null, 1)
          .Lights = Array("(lights)|100|000000|(fade)")
      End With
    End With


    With CreateGlfShow("flash_color_fadeout")
        With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|50|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|100|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|95|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|90|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|85|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|80|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|75|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|70|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|65|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|60|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|55|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|50|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|45|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|40|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|35|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|30|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|25|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|20|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|15|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|10|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|5|(color)")
      End With
      With .AddStep(Null, Null, 0.16)
          .Lights = Array("(lights)|0|(color)")
      End With
    End With

    With CreateGlfShow("bumper_bg_show1")
        With .AddStep(0.01, Null, Null)
            With .DOFEvent("8")
                .Action = "DOF_ON"
            End With
        End With
        With .AddStep(0.02, Null, Null)
            With .Shows("flash_color_fadeout")
                .Key = "key_DOF8"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "color", GIColor3000k
                    .Add "lights", "LBG08"
                End With
            End With
        End With
        With .AddStep(0.4, Null, Null)
            With .DOFEvent("8")
                .Action = "DOF_OFF"
            End With
        End With
        With .AddStep(0.41, Null, Null)
        End With
    End With

    With CreateGlfShow("bumper_bg_show2")
        With .AddStep(0.01, Null, Null)
            With .DOFEvent("9")
                .Action = "DOF_ON"
            End With
        End With
        With .AddStep(0.02, Null, Null)
            With .Shows("flash_color_fadeout")
                .Key = "key_DOF9"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "color", GIColor3000k
                    .Add "lights", "LBG09"
                End With
            End With
        End With
        With .AddStep(0.4, Null, Null)
            With .DOFEvent("9")
                .Action = "DOF_OFF"
            End With
        End With
        With .AddStep(0.41, Null, Null)
        End With
    End With

    With CreateGlfShow("bumper_bg_show3")
        With .AddStep(0.01, Null, Null)
            With .DOFEvent("12")
                .Action = "DOF_ON"
            End With
        End With
        With .AddStep(0.02, Null, Null)
            With .Shows("flash_color_fadeout")
                .Key = "key_DOF12"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "color", GIColor3000k
                    .Add "lights", "LBG12"
                End With
            End With
        End With
        With .AddStep(0.4, Null, Null)
            With .DOFEvent("12")
                .Action = "DOF_OFF"
            End With
        End With
        With .AddStep(0.41, Null, Null)
        End With
    End With


    With CreateGlfShow("rainbow")
        With .AddStep(Null, Null, 1)
            .Lights = Array("(lights)|100|e81416|1000")
        End With
        With .AddStep(Null, Null, 1)
            .Lights = Array("(lights)|100|ffa500|1000")
        End With
        With .AddStep(Null, Null, 1)
            .Lights = Array("(lights)|100|faeb36|1000")
        End With
        With .AddStep(Null, Null, 1)
            .Lights = Array("(lights)|100|79c314|1000")
        End With
        With .AddStep(Null, Null, 1)
            .Lights = Array("(lights)|100|487de7|1000")
        End With
        With .AddStep(Null, Null, 1)
            .Lights = Array("(lights)|100|4b369d|1000")
        End With
        With .AddStep(Null, Null, 1)
            .Lights = Array("(lights)|100|70369d|1000")
        End With
    End With


End Sub





'GI Shows

Sub CreateGIShows()

With CreateGlfShow("gi_spin1_cw")
    With .AddStep(0.00000, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|000000", _
        "giapron|(intensity)|000000", _
        "gi22|(intensity)|000000", _
        "gi20|(intensity)|000000", _
        "gi21|(intensity)|000000", _
        "gi19|(intensity)|47321f", _
        "gi18|(intensity)|000000", _
        "gi16|(intensity)|000000", _
        "gi15|(intensity)|000000", _
        "gi14|(intensity)|c58d54", _
        "gi13|(intensity)|000000", _
        "gi12|(intensity)|130c06", _
        "gi11|(intensity)|795532", _
        "gi10|(intensity)|ffb36b", _
        "gi09|(intensity)|f9af68", _
        "gi08|(intensity)|160f07", _
        "gi07|(intensity)|000000", _
        "gi06|(intensity)|000000", _
        "gi05|(intensity)|000000", _
        "gi04|(intensity)|180f08", _
        "gi03|(intensity)|000000", _
        "gi02|(intensity)|000000", _
        "gi01|(intensity)|000000" _
        )
    End With
    With .AddStep(0.03333, Null, Null)
        .Lights = Array( _
        "gi19|(intensity)|2e2013", _
        "gi14|(intensity)|ab7747", _
        "gi12|(intensity)|2a1d14", _
        "gi11|(intensity)|986b41", _
        "gi09|(intensity)|e09f5f", _
        "gi08|(intensity)|24170e", _
        "gi04|(intensity)|0a0603" _
        )
    End With
    With .AddStep(0.06667, Null, Null)
        .Lights = Array( _
        "gi19|(intensity)|1b120b", _
        "gi14|(intensity)|90643d", _
        "gi12|(intensity)|4a341f", _
        "gi11|(intensity)|b9834d", _
        "gi09|(intensity)|c38952", _
        "gi08|(intensity)|352516", _
        "gi07|(intensity)|070302", _
        "gi04|(intensity)|000000" _
        )
    End With
    With .AddStep(0.10000, Null, Null)
        .Lights = Array( _
        "gi19|(intensity)|0c0805", _
        "gi18|(intensity)|0d0805", _
        "gi14|(intensity)|74522f", _
        "gi12|(intensity)|725030", _
        "gi11|(intensity)|d89a5c", _
        "gi09|(intensity)|a37345", _
        "gi08|(intensity)|4a341f", _
        "gi07|(intensity)|150e08" _
        )
    End With
    With .AddStep(0.13333, Null, Null)
        .Lights = Array( _
        "gi20|(intensity)|030102", _
        "gi19|(intensity)|020100", _
        "gi18|(intensity)|2c1f13", _
        "gi14|(intensity)|5d4227", _
        "gi12|(intensity)|9c6d41", _
        "gi11|(intensity)|f0ab65", _
        "gi10|(intensity)|f4ae68", _
        "gi09|(intensity)|845d38", _
        "gi08|(intensity)|67482b", _
        "gi07|(intensity)|271c12", _
        "gi06|(intensity)|0f0b08" _
        )
    End With
    With .AddStep(0.16667, Null, Null)
        .Lights = Array( _
        "gi20|(intensity)|1d140b", _
        "gi19|(intensity)|000000", _
        "gi18|(intensity)|5b4126", _
        "gi14|(intensity)|49331f", _
        "gi12|(intensity)|c48c53", _
        "gi11|(intensity)|ffb36b", _
        "gi10|(intensity)|e4a160", _
        "gi09|(intensity)|6a4a2d", _
        "gi08|(intensity)|855e37", _
        "gi07|(intensity)|432f1e", _
        "gi06|(intensity)|2c1f12", _
        "gi05|(intensity)|040303" _
        )
    End With
    With .AddStep(0.20000, Null, Null)
        .Lights = Array( _
        "gi20|(intensity)|442f1c", _
        "gi21|(intensity)|080705", _
        "gi18|(intensity)|91663d", _
        "gi14|(intensity)|382819", _
        "gi12|(intensity)|e8a463", _
        "gi10|(intensity)|d09357", _
        "gi09|(intensity)|523a22", _
        "gi08|(intensity)|aa7848", _
        "gi07|(intensity)|64462a", _
        "gi06|(intensity)|523a22", _
        "gi05|(intensity)|1d140b" _
        )
    End With
    With .AddStep(0.23333, Null, Null)
        .Lights = Array( _
        "gi20|(intensity)|725130", _
        "gi21|(intensity)|332316", _
        "gi18|(intensity)|c68d54", _
        "gi14|(intensity)|2a1e12", _
        "gi12|(intensity)|ffb36b", _
        "gi10|(intensity)|bc834e", _
        "gi09|(intensity)|3f2c1b", _
        "gi08|(intensity)|ce9155", _
        "gi07|(intensity)|89613a", _
        "gi06|(intensity)|7f5934", _
        "gi05|(intensity)|402d1c" _
        )
    End With
    With .AddStep(0.26667, Null, Null)
        .Lights = Array( _
        "gi20|(intensity)|a57344", _
        "gi21|(intensity)|6c4d2e", _
        "gi18|(intensity)|efaa66", _
        "gi16|(intensity)|332316", _
        "gi14|(intensity)|21170d", _
        "gi11|(intensity)|f9b067", _
        "gi10|(intensity)|a57444", _
        "gi09|(intensity)|2f2114", _
        "gi08|(intensity)|eca762", _
        "gi07|(intensity)|b4814c", _
        "gi06|(intensity)|b3804b", _
        "gi05|(intensity)|6e4d2c" _
        )
    End With
    With .AddStep(0.30000, Null, Null)
        .Lights = Array( _
        "gi20|(intensity)|d69659", _
        "gi21|(intensity)|ac7848", _
        "gi18|(intensity)|ffb36b", _
        "gi16|(intensity)|7e5b35", _
        "gi14|(intensity)|1c130b", _
        "gi11|(intensity)|dd9d5d", _
        "gi10|(intensity)|91663c", _
        "gi09|(intensity)|241910", _
        "gi08|(intensity)|ffb36b", _
        "gi07|(intensity)|dd9d5d", _
        "gi06|(intensity)|e2a15f", _
        "gi05|(intensity)|a47446" _
        )
    End With
    With .AddStep(0.33333, Null, Null)
        .Lights = Array( _
        "gi22|(intensity)|020100", _
        "gi20|(intensity)|f9af68", _
        "gi21|(intensity)|e4a05f", _
        "gi16|(intensity)|ce9156", _
        "gi14|(intensity)|191009", _
        "gi12|(intensity)|eaa562", _
        "gi11|(intensity)|b9834d", _
        "gi10|(intensity)|7d5a34", _
        "gi09|(intensity)|1c130b", _
        "gi07|(intensity)|fab26a", _
        "gi06|(intensity)|ffb36b", _
        "gi05|(intensity)|d7985b", _
        "gi04|(intensity)|090603", _
        "gi03|(intensity)|010101" _
        )
    End With
    With .AddStep(0.36667, Null, Null)
        .Lights = Array( _
        "giapron|(intensity)|110c08", _
        "gi22|(intensity)|1f160d", _
        "gi20|(intensity)|ffb36b", _
        "gi21|(intensity)|ffb36b", _
        "gi18|(intensity)|eaa562", _
        "gi16|(intensity)|ffb36b", _
        "gi14|(intensity)|15100a", _
        "gi13|(intensity)|030200", _
        "gi12|(intensity)|c08750", _
        "gi11|(intensity)|966940", _
        "gi10|(intensity)|6e4e2f", _
        "gi09|(intensity)|180f08", _
        "gi07|(intensity)|ffb36b", _
        "gi05|(intensity)|fdb26a", _
        "gi04|(intensity)|160f09", _
        "gi03|(intensity)|100b07" _
        )
    End With
    With .AddStep(0.40000, Null, Null)
        .Lights = Array( _
        "giapron|(intensity)|4e3520", _
        "gi22|(intensity)|503721", _
        "gi18|(intensity)|b3804b", _
        "gi14|(intensity)|181009", _
        "gi13|(intensity)|150f09", _
        "gi12|(intensity)|91663c", _
        "gi11|(intensity)|72512f", _
        "gi10|(intensity)|5f4326", _
        "gi09|(intensity)|160f09", _
        "gi08|(intensity)|fcb26b", _
        "gi05|(intensity)|ffb36b", _
        "gi04|(intensity)|241a10", _
        "gi03|(intensity)|241b10", _
        "gi01|(intensity)|0b0704" _
        )
    End With
    With .AddStep(0.43333, Null, Null)
        .Lights = Array( _
        "giapron|(intensity)|9e6f42", _
        "gi22|(intensity)|88613a", _
        "gi20|(intensity)|e5a160", _
        "gi21|(intensity)|e5a160", _
        "gi19|(intensity)|060501", _
        "gi18|(intensity)|775431", _
        "gi16|(intensity)|ca8e54", _
        "gi14|(intensity)|1c130c", _
        "gi13|(intensity)|302215", _
        "gi12|(intensity)|64462a", _
        "gi11|(intensity)|563c24", _
        "gi10|(intensity)|533b23", _
        "gi08|(intensity)|e6a362", _
        "gi07|(intensity)|fbb16a", _
        "gi06|(intensity)|e4a161", _
        "gi04|(intensity)|3e2b1a", _
        "gi03|(intensity)|442f1e", _
        "gi02|(intensity)|0c0805", _
        "gi01|(intensity)|261c12" _
        )
    End With
    With .AddStep(0.46667, Null, Null)
        .Lights = Array( _
        "giapron|(intensity)|eaa562", _
        "gi22|(intensity)|c08850", _
        "gi20|(intensity)|b27f4c", _
        "gi21|(intensity)|a47446", _
        "gi19|(intensity)|120d09", _
        "gi18|(intensity)|442f1e", _
        "gi16|(intensity)|704f2e", _
        "gi15|(intensity)|030200", _
        "gi14|(intensity)|1f160d", _
        "gi13|(intensity)|533b23", _
        "gi12|(intensity)|3f2c1b", _
        "gi11|(intensity)|3d2a19", _
        "gi10|(intensity)|4c3621", _
        "gi09|(intensity)|180f08", _
        "gi08|(intensity)|cb8f55", _
        "gi07|(intensity)|e4a05f", _
        "gi06|(intensity)|bb844e", _
        "gi05|(intensity)|e7a362", _
        "gi04|(intensity)|5b4025", _
        "gi03|(intensity)|68492c", _
        "gi02|(intensity)|261c12", _
        "gi01|(intensity)|523a22" _
        )
    End With
    With .AddStep(0.50000, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|1f160d", _
        "giapron|(intensity)|ffb36b", _
        "gi22|(intensity)|efa964", _
        "gi20|(intensity)|795533", _
        "gi21|(intensity)|5f4329", _
        "gi19|(intensity)|261a0e", _
        "gi18|(intensity)|19120a", _
        "gi16|(intensity)|24190f", _
        "gi15|(intensity)|1c130c", _
        "gi14|(intensity)|2a1d14", _
        "gi13|(intensity)|7d5934", _
        "gi12|(intensity)|20160c", _
        "gi11|(intensity)|281d11", _
        "gi10|(intensity)|46311e", _
        "gi09|(intensity)|1c130b", _
        "gi08|(intensity)|ad7949", _
        "gi07|(intensity)|c08851", _
        "gi06|(intensity)|8f633c", _
        "gi05|(intensity)|bf8852", _
        "gi04|(intensity)|7b5733", _
        "gi03|(intensity)|91663b", _
        "gi02|(intensity)|513921", _
        "gi01|(intensity)|845e36" _
        )
    End With
    With .AddStep(0.53333, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|694b2d", _
        "giapron|(intensity)|fbb16a", _
        "gi22|(intensity)|ffb36b", _
        "gi20|(intensity)|48321f", _
        "gi21|(intensity)|251b11", _
        "gi19|(intensity)|3c2a1a", _
        "gi18|(intensity)|000000", _
        "gi16|(intensity)|000000", _
        "gi15|(intensity)|3b2a1a", _
        "gi14|(intensity)|362617", _
        "gi13|(intensity)|aa7747", _
        "gi12|(intensity)|0c0805", _
        "gi11|(intensity)|19120c", _
        "gi10|(intensity)|432e1c", _
        "gi09|(intensity)|24190f", _
        "gi08|(intensity)|8d633b", _
        "gi07|(intensity)|9d6e42", _
        "gi06|(intensity)|5f4427", _
        "gi05|(intensity)|91653e", _
        "gi04|(intensity)|a37345", _
        "gi03|(intensity)|bf874f", _
        "gi02|(intensity)|815b35", _
        "gi01|(intensity)|bd864e" _
        )
    End With
    With .AddStep(0.56667, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|bb844e", _
        "giapron|(intensity)|c38a53", _
        "gi20|(intensity)|20160c", _
        "gi21|(intensity)|010101", _
        "gi19|(intensity)|593f25", _
        "gi15|(intensity)|65472b", _
        "gi14|(intensity)|46311e", _
        "gi13|(intensity)|d29459", _
        "gi12|(intensity)|000000", _
        "gi11|(intensity)|0e0a07", _
        "gi09|(intensity)|2f2114", _
        "gi08|(intensity)|6b4c2d", _
        "gi07|(intensity)|765331", _
        "gi06|(intensity)|382819", _
        "gi05|(intensity)|5e4326", _
        "gi04|(intensity)|cb8e54", _
        "gi03|(intensity)|e6a261", _
        "gi02|(intensity)|b9844e", _
        "gi01|(intensity)|eda864" _
        )
    End With
    With .AddStep(0.60000, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|fab069", _
        "giapron|(intensity)|7a5531", _
        "gi22|(intensity)|e2a160", _
        "gi20|(intensity)|040303", _
        "gi21|(intensity)|000000", _
        "gi19|(intensity)|7c5733", _
        "gi15|(intensity)|966940", _
        "gi14|(intensity)|583e25", _
        "gi13|(intensity)|f3ad67", _
        "gi11|(intensity)|090504", _
        "gi10|(intensity)|442f1c", _
        "gi09|(intensity)|3f2c19", _
        "gi08|(intensity)|513822", _
        "gi07|(intensity)|533b23", _
        "gi06|(intensity)|191009", _
        "gi05|(intensity)|352516", _
        "gi04|(intensity)|eda762", _
        "gi03|(intensity)|ffb36b", _
        "gi02|(intensity)|eaa562", _
        "gi01|(intensity)|ffb36b" _
        )
    End With
    With .AddStep(0.63333, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|ffb36b", _
        "giapron|(intensity)|342415", _
        "gi22|(intensity)|a67646", _
        "gi20|(intensity)|000000", _
        "gi19|(intensity)|9f7042", _
        "gi15|(intensity)|c38b53", _
        "gi14|(intensity)|715031", _
        "gi13|(intensity)|ffb36b", _
        "gi11|(intensity)|020202", _
        "gi10|(intensity)|47321f", _
        "gi09|(intensity)|523a22", _
        "gi08|(intensity)|392819", _
        "gi07|(intensity)|362617", _
        "gi06|(intensity)|030200", _
        "gi05|(intensity)|150f09", _
        "gi04|(intensity)|ffb36b", _
        "gi02|(intensity)|ffb36b" _
        )
    End With
    With .AddStep(0.66667, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|de9e5e", _
        "giapron|(intensity)|030200", _
        "gi22|(intensity)|68492c", _
        "gi19|(intensity)|c28952", _
        "gi15|(intensity)|eba663", _
        "gi14|(intensity)|8b613b", _
        "gi11|(intensity)|000000", _
        "gi10|(intensity)|503721", _
        "gi09|(intensity)|6a4a2d", _
        "gi08|(intensity)|271b0f", _
        "gi07|(intensity)|1e150c", _
        "gi06|(intensity)|000000", _
        "gi05|(intensity)|000000", _
        "gi01|(intensity)|f5ae66" _
        )
    End With
    With .AddStep(0.70000, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|855e37", _
        "giapron|(intensity)|000000", _
        "gi22|(intensity)|322316", _
        "gi19|(intensity)|e39f5e", _
        "gi15|(intensity)|ffb36b", _
        "gi14|(intensity)|a37343", _
        "gi13|(intensity)|fbb16a", _
        "gi10|(intensity)|593f25", _
        "gi09|(intensity)|845d36", _
        "gi08|(intensity)|181009", _
        "gi07|(intensity)|0d0906", _
        "gi03|(intensity)|f0aa65", _
        "gi02|(intensity)|f9af68", _
        "gi01|(intensity)|cd9057" _
        )
    End With
    With .AddStep(0.73333, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|342417", _
        "gi22|(intensity)|0d0905", _
        "gi19|(intensity)|fbb16a", _
        "gi14|(intensity)|bf8850", _
        "gi13|(intensity)|d6985b", _
        "gi11|(intensity)|010101", _
        "gi10|(intensity)|66482c", _
        "gi09|(intensity)|a37345", _
        "gi08|(intensity)|0e0906", _
        "gi07|(intensity)|000000", _
        "gi04|(intensity)|f4ae66", _
        "gi03|(intensity)|d19358", _
        "gi02|(intensity)|d69659", _
        "gi01|(intensity)|9f7044" _
        )
    End With
    With .AddStep(0.76667, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|000000", _
        "gi22|(intensity)|000000", _
        "gi19|(intensity)|ffb36b", _
        "gi15|(intensity)|fbb168", _
        "gi14|(intensity)|d99a5c", _
        "gi13|(intensity)|a97747", _
        "gi11|(intensity)|040303", _
        "gi10|(intensity)|745330", _
        "gi09|(intensity)|c38952", _
        "gi08|(intensity)|060503", _
        "gi04|(intensity)|db9b5d", _
        "gi03|(intensity)|ac7848", _
        "gi02|(intensity)|a77445", _
        "gi01|(intensity)|6a4b2d" _
        )
    End With
    With .AddStep(0.80000, Null, Null)
        .Lights = Array( _
        "gi15|(intensity)|d5975a", _
        "gi14|(intensity)|f0aa65", _
        "gi13|(intensity)|785432", _
        "gi11|(intensity)|0c0805", _
        "gi10|(intensity)|88613a", _
        "gi09|(intensity)|e09f5f", _
        "gi08|(intensity)|020100", _
        "gi04|(intensity)|bb844e", _
        "gi03|(intensity)|835c38", _
        "gi02|(intensity)|745330", _
        "gi01|(intensity)|3e2b1a" _
        )
    End With
    With .AddStep(0.83333, Null, Null)
        .Lights = Array( _
        "gi19|(intensity)|ffb36d", _
        "gi15|(intensity)|a27244", _
        "gi14|(intensity)|ffb36b", _
        "gi13|(intensity)|4f3620", _
        "gi11|(intensity)|150e08", _
        "gi10|(intensity)|9c6d41", _
        "gi09|(intensity)|fab067", _
        "gi08|(intensity)|000000", _
        "gi04|(intensity)|976a40", _
        "gi03|(intensity)|5d4227", _
        "gi02|(intensity)|46311e", _
        "gi01|(intensity)|1b120b" _
        )
    End With
    With .AddStep(0.86667, Null, Null)
        .Lights = Array( _
        "gi19|(intensity)|e4a160", _
        "gi15|(intensity)|6e4d2d", _
        "gi13|(intensity)|2b1f13", _
        "gi11|(intensity)|20170d", _
        "gi10|(intensity)|b07d4a", _
        "gi09|(intensity)|ffb36b", _
        "gi04|(intensity)|73522f", _
        "gi03|(intensity)|3a2919", _
        "gi02|(intensity)|20170d", _
        "gi01|(intensity)|010100" _
        )
    End With
    With .AddStep(0.90000, Null, Null)
        .Lights = Array( _
        "gi19|(intensity)|c08750", _
        "gi15|(intensity)|402d1c", _
        "gi13|(intensity)|100b07", _
        "gi11|(intensity)|332316", _
        "gi10|(intensity)|c58c53", _
        "gi04|(intensity)|543c24", _
        "gi03|(intensity)|1f160d", _
        "gi02|(intensity)|060503", _
        "gi01|(intensity)|000000" _
        )
    End With
    With .AddStep(0.93333, Null, Null)
        .Lights = Array( _
        "gi19|(intensity)|986c3f", _
        "gi15|(intensity)|1e150c", _
        "gi13|(intensity)|000000", _
        "gi11|(intensity)|48321d", _
        "gi10|(intensity)|da9a5c", _
        "gi08|(intensity)|030102", _
        "gi04|(intensity)|382819", _
        "gi03|(intensity)|0d0805", _
        "gi02|(intensity)|000000" _
        )
    End With
    With .AddStep(0.96667, Null, Null)
        .Lights = Array( _
        "gi19|(intensity)|70502f", _
        "gi15|(intensity)|070302", _
        "gi14|(intensity)|f0ab66", _
        "gi12|(intensity)|030303", _
        "gi11|(intensity)|64462a", _
        "gi10|(intensity)|eca762", _
        "gi09|(intensity)|faaf6b", _
        "gi08|(intensity)|0a0604", _
        "gi04|(intensity)|21170d", _
        "gi03|(intensity)|000000" _
        )
    End With
    With .AddStep(1.00000, Null, Null)
        .Lights = Array( _
        "gi19|(intensity)|513921", _
        "gi15|(intensity)|000000", _
        "gi14|(intensity)|d9995b", _
        "gi12|(intensity)|170e07", _
        "gi11|(intensity)|845e36", _
        "gi10|(intensity)|fbb16a", _
        "gi09|(intensity)|e4a361", _
        "gi08|(intensity)|130c06", _
        "gi04|(intensity)|110c06" _
        )
    End With
    With .AddStep(1.03333, Null, Null)
        .Lights = Array( _
        "gi19|(intensity)|352516", _
        "gi14|(intensity)|bc854f", _
        "gi12|(intensity)|2f2114", _
        "gi11|(intensity)|aa7748", _
        "gi10|(intensity)|ffb36b", _
        "gi09|(intensity)|cc8f56", _
        "gi08|(intensity)|1e150c", _
        "gi04|(intensity)|050402" _
        )
    End With
    With .AddStep(1.06667, Null, Null)
        .Lights = Array( _
        "gi19|(intensity)|1f150c", _
        "gi14|(intensity)|9e6f43", _
        "gi12|(intensity)|533a22", _
        "gi11|(intensity)|cd9055", _
        "gi09|(intensity)|b07d4a", _
        "gi08|(intensity)|2d2013", _
        "gi07|(intensity)|030200", _
        "gi04|(intensity)|000000" _
        )
    End With
    With .AddStep(1.10000, Null, Null)
        .Lights = Array( _
        "gi19|(intensity)|0e0a07", _
        "gi18|(intensity)|0f0b08", _
        "gi14|(intensity)|7f5934", _
        "gi12|(intensity)|7b5733", _
        "gi11|(intensity)|eca762", _
        "gi09|(intensity)|94683d", _
        "gi08|(intensity)|432e1b", _
        "gi07|(intensity)|110b06" _
        )
    End With
    With .AddStep(1.13333, Null, Null)
        .Lights = Array( _
        "gi20|(intensity)|060503", _
        "gi19|(intensity)|030303", _
        "gi18|(intensity)|342417", _
        "gi14|(intensity)|68492c", _
        "gi12|(intensity)|ac7948", _
        "gi11|(intensity)|ffb36b", _
        "gi09|(intensity)|785532", _
        "gi08|(intensity)|5c4126", _
        "gi07|(intensity)|22180e", _
        "gi06|(intensity)|0d0805" _
        )
    End With
    With .AddStep(1.16667, Null, Null)
        .Lights = Array( _
        "gi20|(intensity)|24180f", _
        "gi19|(intensity)|000000", _
        "gi18|(intensity)|65472a", _
        "gi14|(intensity)|523a22", _
        "gi12|(intensity)|d8995b", _
        "gi10|(intensity)|f7af67", _
        "gi09|(intensity)|5e4326", _
        "gi08|(intensity)|7a5632", _
        "gi07|(intensity)|3b2a1a", _
        "gi06|(intensity)|261a0e", _
        "gi05|(intensity)|020100" _
        )
    End With
    With .AddStep(1.20000, Null, Null)
        .Lights = Array( _
        "gi20|(intensity)|4b3520", _
        "gi21|(intensity)|0d0a05", _
        "gi18|(intensity)|a07044", _
        "gi14|(intensity)|402d1c", _
        "gi12|(intensity)|fbb168", _
        "gi10|(intensity)|e3a15f", _
        "gi09|(intensity)|49331f", _
        "gi08|(intensity)|9a6d41", _
        "gi07|(intensity)|5a4025", _
        "gi06|(intensity)|49331f", _
        "gi05|(intensity)|191009" _
        )
    End With
    With .AddStep(1.23333, Null, Null)
        .Lights = Array( _
        "gi20|(intensity)|7c5833", _
        "gi21|(intensity)|3a2919", _
        "gi18|(intensity)|d9995b", _
        "gi16|(intensity)|010101", _
        "gi14|(intensity)|322316", _
        "gi12|(intensity)|ffb36b", _
        "gi11|(intensity)|fbb16a", _
        "gi10|(intensity)|ce9156", _
        "gi09|(intensity)|372718", _
        "gi08|(intensity)|ba834d", _
        "gi07|(intensity)|7f5934", _
        "gi06|(intensity)|74522f", _
        "gi05|(intensity)|3a2919" _
        )
    End With
    With .AddStep(1.26667, Null, Null)
        .Lights = Array( _
        "gi20|(intensity)|b6824d", _
        "gi21|(intensity)|765430", _
        "gi18|(intensity)|ffb36b", _
        "gi16|(intensity)|392818", _
        "gi14|(intensity)|271c12", _
        "gi11|(intensity)|e4a361", _
        "gi10|(intensity)|b6824e", _
        "gi09|(intensity)|2a1d13", _
        "gi08|(intensity)|d89a5c", _
        "gi07|(intensity)|a37343", _
        "gi06|(intensity)|a27244", _
        "gi05|(intensity)|63472a" _
        )
    End With
    With .AddStep(1.30000, Null, Null)
        .Lights = Array( _
        "gi20|(intensity)|e9a461", _
        "gi21|(intensity)|bc854f", _
        "gi16|(intensity)|8b623a", _
        "gi14|(intensity)|21170d", _
        "gi12|(intensity)|f4ae66", _
        "gi11|(intensity)|c98e54", _
        "gi10|(intensity)|a17143", _
        "gi09|(intensity)|1e150c", _
        "gi08|(intensity)|f0aa64", _
        "gi07|(intensity)|c98e54", _
        "gi06|(intensity)|ce9256", _
        "gi05|(intensity)|956940" _
        )
    End With
    With .AddStep(1.33333, Null, Null)
        .Lights = Array( _
        "gi22|(intensity)|030303", _
        "gi20|(intensity)|ffb36b", _
        "gi21|(intensity)|f7ae69", _
        "gi18|(intensity)|fbb16a", _
        "gi16|(intensity)|e2a160", _
        "gi14|(intensity)|1d140d", _
        "gi12|(intensity)|d7975a", _
        "gi11|(intensity)|aa7746", _
        "gi10|(intensity)|896139", _
        "gi09|(intensity)|16100a", _
        "gi08|(intensity)|ffb36b", _
        "gi07|(intensity)|e9a463", _
        "gi06|(intensity)|f2ac66", _
        "gi05|(intensity)|c48b53", _
        "gi04|(intensity)|050402" _
        )
    End With
    With .AddStep(1.36667, Null, Null)
        .Lights = Array( _
        "giapron|(intensity)|0e0a06", _
        "gi22|(intensity)|241a10", _
        "gi21|(intensity)|ffb36b", _
        "gi18|(intensity)|d7975a", _
        "gi16|(intensity)|ffb36b", _
        "gi14|(intensity)|1b120b", _
        "gi13|(intensity)|060302", _
        "gi12|(intensity)|ad7a47", _
        "gi11|(intensity)|886039", _
        "gi10|(intensity)|775432", _
        "gi09|(intensity)|120d08", _
        "gi07|(intensity)|ffb36b", _
        "gi06|(intensity)|ffb36b", _
        "gi05|(intensity)|eca762", _
        "gi04|(intensity)|130c06", _
        "gi03|(intensity)|0e0906" _
        )
    End With
    With .AddStep(1.40000, Null, Null)
        .Lights = Array( _
        "giapron|(intensity)|46311e", _
        "gi22|(intensity)|5a3e26", _
        "gi20|(intensity)|f7af67", _
        "gi21|(intensity)|fcb26b", _
        "gi18|(intensity)|a37345", _
        "gi16|(intensity)|f7af67", _
        "gi14|(intensity)|1c130c", _
        "gi13|(intensity)|1a130b", _
        "gi12|(intensity)|845c38", _
        "gi11|(intensity)|684b2d", _
        "gi10|(intensity)|6a492d", _
        "gi09|(intensity)|130c06", _
        "gi05|(intensity)|ffb36b", _
        "gi04|(intensity)|1f160d", _
        "gi03|(intensity)|20160d", _
        "gi01|(intensity)|060501" _
        )
    End With
    With .AddStep(1.43333, Null, Null)
        .Lights = Array( _
        "giapron|(intensity)|90643d", _
        "gi22|(intensity)|966940", _
        "gi20|(intensity)|d19358", _
        "gi21|(intensity)|d19358", _
        "gi19|(intensity)|0a0603", _
        "gi18|(intensity)|6e4e2f", _
        "gi16|(intensity)|b6814d", _
        "gi14|(intensity)|21170d", _
        "gi13|(intensity)|372718", _
        "gi12|(intensity)|5a4025", _
        "gi11|(intensity)|4d351f", _
        "gi10|(intensity)|5d4227", _
        "gi08|(intensity)|fab067", _
        "gi06|(intensity)|f6ae67", _
        "gi04|(intensity)|372718", _
        "gi03|(intensity)|3c2a1a", _
        "gi02|(intensity)|060503", _
        "gi01|(intensity)|21170d" _
        )
    End With
    With .AddStep(1.46667, Null, Null)
        .Lights = Array( _
        "giapron|(intensity)|d7975a", _
        "gi22|(intensity)|d49659", _
        "gi20|(intensity)|a17143", _
        "gi21|(intensity)|95683f", _
        "gi19|(intensity)|191009", _
        "gi18|(intensity)|3b2a1a", _
        "gi16|(intensity)|64472b", _
        "gi15|(intensity)|080403", _
        "gi14|(intensity)|241a10", _
        "gi13|(intensity)|5d4227", _
        "gi12|(intensity)|372718", _
        "gi11|(intensity)|362617", _
        "gi10|(intensity)|543b24", _
        "gi09|(intensity)|120d08", _
        "gi08|(intensity)|df9e5e", _
        "gi07|(intensity)|f7ae69", _
        "gi06|(intensity)|cf9156", _
        "gi05|(intensity)|fab067", _
        "gi04|(intensity)|4f3922", _
        "gi03|(intensity)|5e4326", _
        "gi02|(intensity)|21170d", _
        "gi01|(intensity)|49331f" _
        )
    End With
    With .AddStep(1.50000, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|241a10", _
        "giapron|(intensity)|ffb36b", _
        "gi22|(intensity)|feb46a", _
        "gi20|(intensity)|704f30", _
        "gi21|(intensity)|553d24", _
        "gi19|(intensity)|2b1f13", _
        "gi18|(intensity)|140f09", _
        "gi16|(intensity)|1e150c", _
        "gi15|(intensity)|1f160c", _
        "gi14|(intensity)|2f2114", _
        "gi13|(intensity)|876037", _
        "gi12|(intensity)|1c130b", _
        "gi11|(intensity)|22180e", _
        "gi10|(intensity)|4f3620", _
        "gi09|(intensity)|16100a", _
        "gi08|(intensity)|bd864f", _
        "gi07|(intensity)|d5975a", _
        "gi06|(intensity)|9c6d41", _
        "gi05|(intensity)|d29457", _
        "gi04|(intensity)|725030", _
        "gi03|(intensity)|855e38", _
        "gi02|(intensity)|47321f", _
        "gi01|(intensity)|785632" _
        )
    End With
    With .AddStep(1.53333, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|745230", _
        "gi22|(intensity)|ffb36b", _
        "gi20|(intensity)|412d1c", _
        "gi21|(intensity)|20170d", _
        "gi19|(intensity)|442f1e", _
        "gi18|(intensity)|000000", _
        "gi16|(intensity)|000000", _
        "gi15|(intensity)|442f1e", _
        "gi14|(intensity)|3e2b1a", _
        "gi13|(intensity)|ba844e", _
        "gi12|(intensity)|060501", _
        "gi11|(intensity)|140e09", _
        "gi10|(intensity)|4b3520", _
        "gi09|(intensity)|1e150c", _
        "gi08|(intensity)|996c42", _
        "gi07|(intensity)|ad7a49", _
        "gi06|(intensity)|6b4a2d", _
        "gi05|(intensity)|9f7042", _
        "gi04|(intensity)|94683e", _
        "gi03|(intensity)|ad7949", _
        "gi02|(intensity)|755431", _
        "gi01|(intensity)|ac7949" _
        )
    End With
    With .AddStep(1.56667, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|ce9256", _
        "giapron|(intensity)|d5975a", _
        "gi22|(intensity)|f9af68", _
        "gi20|(intensity)|1c130c", _
        "gi21|(intensity)|000000", _
        "gi19|(intensity)|634529", _
        "gi15|(intensity)|704f2e", _
        "gi14|(intensity)|4f3620", _
        "gi13|(intensity)|e6a261", _
        "gi12|(intensity)|000000", _
        "gi11|(intensity)|0b0704", _
        "gi10|(intensity)|4a341f", _
        "gi09|(intensity)|291d13", _
        "gi08|(intensity)|765431", _
        "gi07|(intensity)|815b35", _
        "gi06|(intensity)|3f2c1b", _
        "gi05|(intensity)|6a4a2d", _
        "gi04|(intensity)|b7824d", _
        "gi03|(intensity)|d29459", _
        "gi02|(intensity)|a77746", _
        "gi01|(intensity)|d99a5c" _
        )
    End With
    With .AddStep(1.60000, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|ffb36b", _
        "giapron|(intensity)|855e37", _
        "gi22|(intensity)|ce9156", _
        "gi20|(intensity)|020100", _
        "gi19|(intensity)|865f36", _
        "gi15|(intensity)|a47446", _
        "gi14|(intensity)|624428", _
        "gi13|(intensity)|ffb36b", _
        "gi11|(intensity)|040301", _
        "gi10|(intensity)|4c3520", _
        "gi09|(intensity)|372718", _
        "gi08|(intensity)|5a3f25", _
        "gi07|(intensity)|5c4126", _
        "gi06|(intensity)|1d140d", _
        "gi05|(intensity)|3d2a19", _
        "gi04|(intensity)|d89b5c", _
        "gi03|(intensity)|f0aa65", _
        "gi02|(intensity)|d7975a", _
        "gi01|(intensity)|fbb16a" _
        )
    End With
    With .AddStep(1.63333, Null, Null)
        .Lights = Array( _
        "giapron|(intensity)|3c2a1a", _
        "gi22|(intensity)|986b41", _
        "gi20|(intensity)|000000", _
        "gi19|(intensity)|b07c4c", _
        "gi15|(intensity)|d6975a", _
        "gi14|(intensity)|7a5632", _
        "gi11|(intensity)|000000", _
        "gi10|(intensity)|513921", _
        "gi09|(intensity)|49331f", _
        "gi08|(intensity)|402d1c", _
        "gi07|(intensity)|3d2a19", _
        "gi06|(intensity)|070302", _
        "gi05|(intensity)|19120a", _
        "gi04|(intensity)|f4ad67", _
        "gi03|(intensity)|ffb36b", _
        "gi02|(intensity)|f9af68", _
        "gi01|(intensity)|ffb36b" _
        )
    End With
    With .AddStep(1.66667, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|ca8f55", _
        "giapron|(intensity)|080401", _
        "gi22|(intensity)|5d4226", _
        "gi19|(intensity)|d5975a", _
        "gi15|(intensity)|fcb26b", _
        "gi14|(intensity)|976a40", _
        "gi10|(intensity)|593d25", _
        "gi09|(intensity)|5e4326", _
        "gi08|(intensity)|2c1f12", _
        "gi07|(intensity)|24180f", _
        "gi06|(intensity)|000000", _
        "gi05|(intensity)|020202", _
        "gi04|(intensity)|ffb36b", _
        "gi02|(intensity)|ffb36b" _
        )
    End With
    With .AddStep(1.70000, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|795732", _
        "giapron|(intensity)|000000", _
        "gi22|(intensity)|2a1e12", _
        "gi19|(intensity)|f6ad68", _
        "gi15|(intensity)|ffb36b", _
        "gi14|(intensity)|b5804c", _
        "gi13|(intensity)|e8a463", _
        "gi10|(intensity)|634529", _
        "gi09|(intensity)|795532", _
        "gi08|(intensity)|1c130c", _
        "gi07|(intensity)|100b07", _
        "gi05|(intensity)|000000", _
        "gi01|(intensity)|e2a160" _
        )
    End With
    With .AddStep(1.73333, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|2b1f13", _
        "gi22|(intensity)|070604", _
        "gi19|(intensity)|ffb36b", _
        "gi14|(intensity)|d39558", _
        "gi13|(intensity)|c38a53", _
        "gi10|(intensity)|704f2e", _
        "gi09|(intensity)|94683f", _
        "gi08|(intensity)|100b07", _
        "gi07|(intensity)|030303", _
        "gi03|(intensity)|e5a160", _
        "gi02|(intensity)|e9a461", _
        "gi01|(intensity)|af7b4b" _
        )
    End With
    With .AddStep(1.76667, Null, Null)
        .Lights = Array( _
        "gi17|(intensity)|000000", _
        "gi22|(intensity)|000000", _
        "gi15|(intensity)|eaa562", _
        "gi14|(intensity)|eea864", _
        "gi13|(intensity)|986b41", _
        "gi11|(intensity)|020001", _
        "gi10|(intensity)|805a35", _
        "gi09|(intensity)|b07c4a", _
        "gi08|(intensity)|0b0704", _
        "gi07|(intensity)|000000", _
        "gi04|(intensity)|eea966", _
        "gi03|(intensity)|bc854f", _
        "gi02|(intensity)|b8834f", _
        "gi01|(intensity)|755330" _
        )
    End With
    With .AddStep(1.80000, Null, Null)
        .Lights = Array( _
        "gi15|(intensity)|c18851", _
        "gi14|(intensity)|ffb36b", _
        "gi13|(intensity)|6e4e2f", _
        "gi11|(intensity)|060501", _
        "gi10|(intensity)|96693f", _
        "gi09|(intensity)|cc8f56", _
        "gi08|(intensity)|040303", _
        "gi04|(intensity)|cf9357", _
        "gi03|(intensity)|90653b", _
        "gi02|(intensity)|7f5935", _
        "gi01|(intensity)|46311e" _
        )
    End With
    With .AddStep(1.83333, Null, Null)
        .Lights = Array( _
        "gi19|(intensity)|eea863", _
        "gi15|(intensity)|93683d", _
        "gi13|(intensity)|44321e", _
        "gi11|(intensity)|110b07", _
        "gi10|(intensity)|ac7948", _
        "gi09|(intensity)|e4a361", _
        "gi08|(intensity)|020202", _
        "gi04|(intensity)|a57544", _
        "gi03|(intensity)|67482b", _
        "gi02|(intensity)|503821", _
        "gi01|(intensity)|1e150c" _
        )
    End With
    With .AddStep(1.86667, Null, Null)
        .Lights = Array( _
        "gi19|(intensity)|d09357", _
        "gi15|(intensity)|62472a", _
        "gi13|(intensity)|261a0e", _
        "gi11|(intensity)|1c130b", _
        "gi10|(intensity)|c38952", _
        "gi09|(intensity)|fab069", _
        "gi08|(intensity)|010101", _
        "gi04|(intensity)|7e5833", _
        "gi03|(intensity)|422e1d", _
        "gi02|(intensity)|251b11", _
        "gi01|(intensity)|030303" _
        )
    End With
    With .AddStep(1.90000, Null, Null)
        .Lights = Array( _
        "gi19|(intensity)|ad7947", _
        "gi15|(intensity)|3a2919", _
        "gi13|(intensity)|0d0906", _
        "gi11|(intensity)|2b1f12", _
        "gi10|(intensity)|d9995b", _
        "gi09|(intensity)|ffb36b", _
        "gi08|(intensity)|030303", _
        "gi04|(intensity)|5d4227", _
        "gi03|(intensity)|241a10", _
        "gi02|(intensity)|0b0704", _
        "gi01|(intensity)|000000" _
        )
    End With
    With .AddStep(1.93333, Null, 0.03333)
        .Lights = Array( _
        "gi19|(intensity)|8c613b", _
        "gi15|(intensity)|1a110a", _
        "gi14|(intensity)|f3ad67", _
        "gi13|(intensity)|000000", _
        "gi11|(intensity)|432e1d", _
        "gi10|(intensity)|eea965", _
        "gi08|(intensity)|060503", _
        "gi04|(intensity)|412e1d", _
        "gi03|(intensity)|0f0a07", _
        "gi02|(intensity)|000000" _
        )
    End With
    ' With .AddStep(1.96667, Null, Null)
    '     .Lights = Array( _
    '     "gi19|(intensity)|67492c", _
    '     "gi15|(intensity)|030200", _
    '     "gi14|(intensity)|df9e5e", _
    '     "gi11|(intensity)|5a4025", _
    '     "gi10|(intensity)|fdb368", _
    '     "gi08|(intensity)|0d0a05", _
    '     "gi04|(intensity)|261c12", _
    '     "gi03|(intensity)|010101" _
    '     )
    ' End With
End With


With CreateGlfShow("gi_cracked")
  With .AddStep(0.00000, Null, Null)
    .Lights = Array( _
      "gi17|100|ffb46b", _
      "giapron|100|ffb46b", _
      "gi22|100|ffb46b", _
      "gi20|100|ffb46b", _
      "gi21|100|ffb46b", _
      "gi19|100|ffb46b", _
      "gi18|100|ffb46b", _
      "gi16|100|ffb46b", _
      "gi15|100|ffb46b", _
      "gi14|100|ffb46b", _
      "gi13|100|ffb46b", _
      "gi12|100|ffb46b", _
      "gi11|100|ffb46b", _
      "gi10|100|ffb46b", _
      "gi09|100|ffb46b", _
      "gi08|100|ffb46b", _
      "gi07|100|ffb46b", _
      "gi06|100|ffb46b", _
      "gi05|100|ffb46b", _
      "gi04|100|ffb46b", _
      "gi03|100|ffb46b", _
      "gi02|100|ffb46b", _
      "gi01|100|ffb46b" _
      )
  End With
  With .AddStep(0.03333, Null, Null)
  End With
  With .AddStep(0.06667, Null, Null)
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "giapron|100|fdb36a" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "giapron|100|3c2b19" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "giapron|100|fcb26a" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "giapron|100|a87747" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "giapron|100|ffb46b" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "giapron|100|de9d5d" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "giapron|100|f5ad67" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "giapron|100|5f4328" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "giapron|100|412e1b" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "giapron|100|614429", _
      "gi05|100|604428" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "giapron|100|ffb46b", _
      "gi06|100|feb36a", _
      "gi05|100|ffb46b" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
    .Lights = Array( _
      "giapron|100|000000", _
      "gi06|100|ab7848", _
      "gi01|100|feb46b" _
      )
  End With
  With .AddStep(0.50000, Null, Null)
    .Lights = Array( _
      "giapron|100|291d11", _
      "gi07|100|d09357", _
      "gi06|100|a17244", _
      "gi02|100|feb36b", _
      "gi01|100|22180e" _
      )
  End With
  With .AddStep(0.53333, Null, Null)
    .Lights = Array( _
      "giapron|100|000000", _
      "gi07|100|ffb46b", _
      "gi06|100|735130", _
      "gi05|100|0c0805", _
      "gi02|100|e4a160", _
      "gi01|100|1e150d" _
      )
  End With
  With .AddStep(0.56667, Null, Null)
    .Lights = Array( _
      "gi06|100|0c0905", _
      "gi05|100|c68c53", _
      "gi03|100|64472a", _
      "gi02|100|715030", _
      "gi01|100|ffb46b" _
      )
  End With
  With .AddStep(0.60000, Null, Null)
    .Lights = Array( _
      "giapron|100|ffb46b", _
      "gi08|100|fab169", _
      "gi07|100|f7ae67", _
      "gi06|100|6e4e2e", _
      "gi05|100|ffb46b", _
      "gi03|100|b6814c", _
      "gi02|100|4e3721" _
      )
  End With
  With .AddStep(0.63333, Null, Null)
    .Lights = Array( _
      "gi08|100|ffb46b", _
      "gi07|100|49331f", _
      "gi06|100|ffb46b", _
      "gi04|100|feb36a", _
      "gi03|100|feb36a", _
      "gi02|100|ffb46b", _
      "gi01|100|1f160d" _
      )
  End With
  With .AddStep(0.66667, Null, Null)
    .Lights = Array( _
      "giapron|100|5d4227", _
      "gi08|100|5b4026", _
      "gi07|100|2f2114", _
      "gi05|100|865f38", _
      "gi04|100|7a5633", _
      "gi03|100|ffb46b", _
      "gi02|100|a97747", _
      "gi01|100|342516" _
      )
  End With
  With .AddStep(0.70000, Null, Null)
    .Lights = Array( _
      "giapron|100|020101", _
      "gi08|100|91663d", _
      "gi07|100|ffb46b", _
      "gi06|100|fdb36a", _
      "gi05|100|24190f", _
      "gi04|100|352516", _
      "gi02|100|735130", _
      "gi01|100|da9a5b" _
      )
  End With
  With .AddStep(0.73333, Null, Null)
    .Lights = Array( _
      "giapron|100|010100", _
      "gi08|100|f1aa65", _
      "gi06|100|624529", _
      "gi05|100|795533", _
      "gi04|100|feb46b", _
      "gi03|100|261b10", _
      "gi02|100|eaa562", _
      "gi01|100|020201" _
      )
  End With
  With .AddStep(0.76667, Null, Null)
    .Lights = Array( _
      "giapron|100|020201", _
      "gi09|100|feb36b", _
      "gi08|100|ffb46b", _
      "gi07|100|2c1f12", _
      "gi06|100|fcb26a", _
      "gi05|100|150f09", _
      "gi04|100|ffb46b", _
      "gi03|100|a77646", _
      "gi02|100|a07143", _
      "gi01|100|000000" _
      )
  End With
  With .AddStep(0.80000, Null, Null)
    .Lights = Array( _
      "giapron|100|000000", _
      "gi09|100|fab069", _
      "gi07|100|271c10", _
      "gi06|100|ffb46b", _
      "gi05|100|000000", _
      "gi04|100|0b0805", _
      "gi03|100|010100", _
      "gi02|100|7e5935", _
      "gi01|100|030201" _
      )
  End With
  With .AddStep(0.83333, Null, Null)
    .Lights = Array( _
      "gi09|100|735130", _
      "gi08|100|64462a", _
      "gi07|100|402d1b", _
      "gi05|100|1a120b", _
      "gi04|100|040302", _
      "gi03|100|130e08", _
      "gi02|100|030201", _
      "gi01|100|070503" _
      )
  End With
  With .AddStep(0.86667, Null, Null)
    .Lights = Array( _
      "gi10|100|b07c4a", _
      "gi09|100|21170e", _
      "gi08|100|65472a", _
      "gi07|100|a87746", _
      "gi06|100|d39559", _
      "gi05|100|000000", _
      "gi04|100|feb36a", _
      "gi03|100|2a1e12", _
      "gi02|100|040302", _
      "gi01|100|000000" _
      )
  End With
  With .AddStep(0.90000, Null, Null)
    .Lights = Array( _
      "giapron|100|1f160d", _
      "gi10|100|855e38", _
      "gi09|100|875f38", _
      "gi08|100|5b4026", _
      "gi07|100|000000", _
      "gi06|100|070503", _
      "gi05|100|010100", _
      "gi04|100|010100", _
      "gi03|100|000000", _
      "gi02|100|f6ae67" _
      )
  End With
  With .AddStep(0.93333, Null, Null)
    .Lights = Array( _
      "giapron|100|412e1b", _
      "gi10|100|e7a361", _
      "gi09|100|ffb46b", _
      "gi08|100|aa7847", _
      "gi07|100|030201", _
      "gi06|100|775432", _
      "gi05|100|030201", _
      "gi04|100|000000", _
      "gi03|100|020101", _
      "gi02|100|010100", _
      "gi01|100|040302" _
      )
  End With
  With .AddStep(0.96667, Null, Null)
    .Lights = Array( _
      "giapron|100|010100", _
      "gi10|100|e9a462", _
      "gi08|100|7a5633", _
      "gi07|100|010100", _
      "gi06|100|feb36a", _
      "gi05|100|010000", _
      "gi04|100|020201", _
      "gi03|100|000000", _
      "gi02|100|4e3721", _
      "gi01|100|ffb46b" _
      )
  End With
  With .AddStep(1.00000, Null, Null)
    .Lights = Array( _
      "giapron|100|020101", _
      "gi10|100|8f653c", _
      "gi09|100|604328", _
      "gi08|100|040302", _
      "gi07|100|030201", _
      "gi06|100|0c0805", _
      "gi05|100|513922", _
      "gi04|100|010100", _
      "gi03|100|261b10", _
      "gi02|100|fdb36a", _
      "gi01|100|feb36b" _
      )
  End With
  With .AddStep(1.03333, Null, Null)
    .Lights = Array( _
      "giapron|100|161009", _
      "gi10|100|f9af68", _
      "gi09|100|ffb46b", _
      "gi08|100|93673e", _
      "gi07|100|000000", _
      "gi06|100|010101", _
      "gi05|100|090704", _
      "gi04|100|000000", _
      "gi03|100|030201", _
      "gi02|100|ffb46b", _
      "gi01|100|010100" _
      )
  End With
  With .AddStep(1.06667, Null, Null)
    .Lights = Array( _
      "giapron|100|604428", _
      "gi11|100|feb46b", _
      "gi10|100|9e7042", _
      "gi08|100|ffb46b", _
      "gi07|100|030201", _
      "gi06|100|f4ad67", _
      "gi05|100|f9af68", _
      "gi04|100|010100", _
      "gi03|100|feb36a", _
      "gi02|100|010100", _
      "gi01|100|050302" _
      )
  End With
  With .AddStep(1.10000, Null, Null)
    .Lights = Array( _
      "giapron|100|010100", _
      "gi14|100|6a4b2c", _
      "gi11|100|5c4127", _
      "gi10|100|90653c", _
      "gi09|100|d09357", _
      "gi08|100|060402", _
      "gi07|100|8a623a", _
      "gi06|100|5a4026", _
      "gi05|100|0f0a06", _
      "gi04|100|010101", _
      "gi03|100|f9b068", _
      "gi02|100|dd9c5d", _
      "gi01|100|040302" _
      )
  End With
  With .AddStep(1.13333, Null, Null)
    .Lights = Array( _
      "giapron|100|5b4026", _
      "gi14|100|e7a361", _
      "gi11|100|de9d5d", _
      "gi10|100|fcb26a", _
      "gi09|100|fcb26a", _
      "gi08|100|ffb46b", _
      "gi07|100|030201", _
      "gi06|100|1e150c", _
      "gi05|100|060403", _
      "gi04|100|ffb46b", _
      "gi03|100|8f653c", _
      "gi02|100|3d2b1a", _
      "gi01|100|18110a" _
      )
  End With
  With .AddStep(1.16667, Null, Null)
    .Lights = Array( _
      "giapron|100|070503", _
      "gi14|100|f4ad67", _
      "gi11|100|fdb36a", _
      "gi10|100|ffb46b", _
      "gi09|100|48331e", _
      "gi08|100|feb36a", _
      "gi07|100|bb844e", _
      "gi06|100|342516", _
      "gi05|100|010100", _
      "gi03|100|030201", _
      "gi02|100|2b1f12", _
      "gi01|100|040302" _
      )
  End With
  With .AddStep(1.20000, Null, Null)
    .Lights = Array( _
      "giapron|100|000000", _
      "gi14|100|95693e", _
      "gi11|100|eba663", _
      "gi10|100|694a2c", _
      "gi09|100|c68c53", _
      "gi08|100|624529", _
      "gi07|100|18110a", _
      "gi06|100|2d2013", _
      "gi05|100|090604", _
      "gi04|100|000000", _
      "gi03|100|ffb46b", _
      "gi02|100|5a3f26", _
      "gi01|100|000000" _
      )
  End With
  With .AddStep(1.23333, Null, Null)
    .Lights = Array( _
      "giapron|100|010000", _
      "gi19|100|d49659", _
      "gi14|100|020101", _
      "gi12|100|fdb36a", _
      "gi11|100|ffb46b", _
      "gi10|100|bb844f", _
      "gi09|100|030201", _
      "gi08|100|795633", _
      "gi07|100|000000", _
      "gi06|100|e9a562", _
      "gi05|100|bf8750", _
      "gi04|100|090604", _
      "gi03|100|5e4328", _
      "gi02|100|020101", _
      "gi01|100|5f4328" _
      )
  End With
  With .AddStep(1.26667, Null, Null)
    .Lights = Array( _
      "giapron|100|b8824d", _
      "gi19|100|fbb169", _
      "gi14|100|030201", _
      "gi12|100|feb36b", _
      "gi10|100|fcb26a", _
      "gi09|100|010100", _
      "gi08|100|563d24", _
      "gi07|100|030201", _
      "gi06|100|523a22", _
      "gi05|100|3d2b19", _
      "gi04|100|060403", _
      "gi03|100|17100a", _
      "gi02|100|2a1e12", _
      "gi01|100|010100" _
      )
  End With
  With .AddStep(1.30000, Null, Null)
    .Lights = Array( _
      "giapron|100|fab069", _
      "gi19|100|eca763", _
      "gi14|100|ffb46b", _
      "gi12|100|3e2c1a", _
      "gi11|100|6c4c2d", _
      "gi10|100|715030", _
      "gi08|100|110c07", _
      "gi07|100|46311d", _
      "gi06|100|000000", _
      "gi05|100|010100", _
      "gi04|100|23180e", _
      "gi03|100|010000", _
      "gi02|100|362617", _
      "gi01|100|000000" _
      )
  End With
  With .AddStep(1.33333, Null, Null)
    .Lights = Array( _
      "giapron|100|312315", _
      "gi19|100|5e4227", _
      "gi18|100|fdb36a", _
      "gi14|100|020101", _
      "gi12|100|604428", _
      "gi11|100|f0aa65", _
      "gi10|100|4e3721", _
      "gi09|100|140e09", _
      "gi08|100|271b10", _
      "gi07|100|4f3821", _
      "gi06|100|4c3620", _
      "gi05|100|000000", _
      "gi04|100|010100", _
      "gi03|100|422f1c", _
      "gi02|100|050402", _
      "gi01|100|ba834e" _
      )
  End With
  With .AddStep(1.36667, Null, Null)
    .Lights = Array( _
      "giapron|100|ffb46b", _
      "gi19|100|020101", _
      "gi18|100|e3a05f", _
      "gi14|100|ffb46b", _
      "gi13|100|624529", _
      "gi12|100|ffb46b", _
      "gi11|100|fbb169", _
      "gi10|100|ffb46b", _
      "gi09|100|44301d", _
      "gi08|100|000000", _
      "gi07|100|040302", _
      "gi06|100|45311d", _
      "gi03|100|050302", _
      "gi02|100|fab069", _
      "gi01|100|ffb46b" _
      )
  End With
  With .AddStep(1.40000, Null, Null)
    .Lights = Array( _
      "giapron|100|020101", _
      "gi19|100|000000", _
      "gi18|100|5c4126", _
      "gi15|100|5d4227", _
      "gi14|100|eda763", _
      "gi13|100|2d2013", _
      "gi11|100|fdb26a", _
      "gi10|100|261b10", _
      "gi09|100|1b130b", _
      "gi08|100|5c4126", _
      "gi07|100|030201", _
      "gi06|100|ffb46b", _
      "gi05|100|020201", _
      "gi04|100|19120a", _
      "gi03|100|000000", _
      "gi02|100|010000", _
      "gi01|100|261b10" _
      )
  End With
  With .AddStep(1.43333, Null, Null)
    .Lights = Array( _
      "giapron|100|060402", _
      "gi19|100|a67546", _
      "gi18|100|2c1f12", _
      "gi15|100|46321d", _
      "gi14|100|9f7043", _
      "gi13|100|cb8f55", _
      "gi12|100|fab069", _
      "gi11|100|5f4328", _
      "gi10|100|fab169", _
      "gi09|100|342516", _
      "gi08|100|050302", _
      "gi07|100|b07c4a", _
      "gi06|100|845d37", _
      "gi05|100|010000", _
      "gi04|100|000000", _
      "gi03|100|422f1c", _
      "gi02|100|5e4227", _
      "gi01|100|000000" _
      )
  End With
  With .AddStep(1.46667, Null, Null)
    .Lights = Array( _
      "giapron|100|000000", _
      "gi20|100|5c4126", _
      "gi19|100|7a5633", _
      "gi18|100|a07143", _
      "gi15|100|fbb169", _
      "gi14|100|080603", _
      "gi13|100|de9d5d", _
      "gi12|100|ffb46b", _
      "gi11|100|f9b069", _
      "gi10|100|986b40", _
      "gi09|100|91663d", _
      "gi08|100|f7ae68", _
      "gi07|100|090604", _
      "gi06|100|000000", _
      "gi05|100|ca8f55", _
      "gi03|100|ffb46b", _
      "gi02|100|010100", _
      "gi01|100|604428" _
      )
  End With
  With .AddStep(1.50000, Null, Null)
    .Lights = Array( _
      "gi20|100|fdb36a", _
      "gi19|100|eda864", _
      "gi18|100|ffb46b", _
      "gi15|100|65472a", _
      "gi14|100|050302", _
      "gi13|100|f7ae67", _
      "gi12|100|6b4b2d", _
      "gi11|100|fdb36a", _
      "gi10|100|b17d4a", _
      "gi09|100|5d4127", _
      "gi08|100|1b130b", _
      "gi07|100|000000", _
      "gi06|100|ae7b49", _
      "gi05|100|020101", _
      "gi04|100|fcb26a", _
      "gi02|100|000000", _
      "gi01|100|000000" _
      )
  End With
  With .AddStep(1.53333, Null, Null)
    .Lights = Array( _
      "gi22|100|fab169", _
      "gi20|100|67492b", _
      "gi19|100|fbb169", _
      "gi15|100|020101", _
      "gi14|100|010100", _
      "gi13|100|e6a260", _
      "gi12|100|735130", _
      "gi11|100|de9d5d", _
      "gi10|100|593f25", _
      "gi09|100|feb46b", _
      "gi08|100|050302", _
      "gi07|100|010100", _
      "gi06|100|000000", _
      "gi05|100|694a2c", _
      "gi04|100|e19f5e", _
      "gi03|100|000000", _
      "gi02|100|010101", _
      "gi01|100|0c0805" _
      )
  End With
  With .AddStep(1.56667, Null, Null)
    .Lights = Array( _
      "giapron|100|050302", _
      "gi22|100|271b10", _
      "gi20|100|624529", _
      "gi19|100|060403", _
      "gi18|100|614429", _
      "gi15|100|ffb46b", _
      "gi14|100|0b0805", _
      "gi13|100|ffb46b", _
      "gi12|100|fdb26a", _
      "gi11|100|000000", _
      "gi10|100|543c23", _
      "gi09|100|835c37", _
      "gi08|100|060402", _
      "gi07|100|b7814d", _
      "gi06|100|3f2c1a", _
      "gi05|100|a67646", _
      "gi04|100|f0a965", _
      "gi03|100|2e2013", _
      "gi02|100|583e25", _
      "gi01|100|010100" _
      )
  End With
  With .AddStep(1.60000, Null, Null)
    .Lights = Array( _
      "giapron|100|0a0704", _
      "gi22|100|ffb46b", _
      "gi20|100|ffb46b", _
      "gi21|100|604428", _
      "gi19|100|8c633b", _
      "gi18|100|ffb46b", _
      "gi15|100|845d37", _
      "gi14|100|0d0905", _
      "gi13|100|634629", _
      "gi12|100|5a4026", _
      "gi10|100|020201", _
      "gi09|100|140e08", _
      "gi08|100|010100", _
      "gi07|100|000000", _
      "gi06|100|ffb46b", _
      "gi05|100|ffb46b", _
      "gi04|100|020201", _
      "gi03|100|030201", _
      "gi02|100|ffb46b" _
      )
  End With
  With .AddStep(1.63333, Null, Null)
    .Lights = Array( _
      "giapron|100|010100", _
      "gi20|100|fbb169", _
      "gi21|100|f8af68", _
      "gi19|100|010000", _
      "gi15|100|f9b068", _
      "gi14|100|ffb46b", _
      "gi13|100|fdb36a", _
      "gi12|100|533b23", _
      "gi10|100|4f3721", _
      "gi09|100|010000", _
      "gi08|100|5c4126", _
      "gi07|100|7b5734", _
      "gi05|100|feb36a", _
      "gi04|100|1d140c", _
      "gi03|100|9e7042", _
      "gi02|100|fcb26a", _
      "gi01|100|ffb46b" _
      )
  End With
  With .AddStep(1.66667, Null, Null)
    .Lights = Array( _
      "giapron|100|000000", _
      "gi22|100|feb36b", _
      "gi20|100|fdb36a", _
      "gi21|100|8b623a", _
      "gi19|100|ae7b49", _
      "gi18|100|ca8f55", _
      "gi15|100|000000", _
      "gi14|100|624629", _
      "gi13|100|ffb46b", _
      "gi12|100|050302", _
      "gi11|100|64462a", _
      "gi10|100|060402", _
      "gi09|100|000000", _
      "gi08|100|000000", _
      "gi07|100|e9a562", _
      "gi06|100|fbb169", _
      "gi05|100|9b6d41", _
      "gi04|100|000000", _
      "gi03|100|fdb26a", _
      "gi02|100|5f4328", _
      "gi01|100|c78d54" _
      )
  End With
  With .AddStep(1.70000, Null, Null)
    .Lights = Array( _
      "giapron|100|010100", _
      "gi22|100|de9c5d", _
      "gi20|100|6b4c2d", _
      "gi21|100|8e643b", _
      "gi19|100|010100", _
      "gi18|100|fcb26a", _
      "gi16|100|fcb26a", _
      "gi14|100|070503", _
      "gi12|100|000000", _
      "gi11|100|020201", _
      "gi10|100|68492c", _
      "gi09|100|1a130b", _
      "gi08|100|745231", _
      "gi07|100|ffb46b", _
      "gi06|100|000000", _
      "gi05|100|22180e", _
      "gi04|100|f5ad67", _
      "gi03|100|010000", _
      "gi02|100|020101", _
      "gi01|100|312315" _
      )
  End With
  With .AddStep(1.73333, Null, Null)
    .Lights = Array( _
      "giapron|100|976b40", _
      "gi22|100|281c11", _
      "gi20|100|cb8f55", _
      "gi21|100|ffb46b", _
      "gi19|100|9b6e41", _
      "gi18|100|3f2d1a", _
      "gi16|100|c38952", _
      "gi15|100|92673d", _
      "gi14|100|64472a", _
      "gi11|100|bb844e", _
      "gi10|100|010000", _
      "gi09|100|ffb46b", _
      "gi08|100|ffb46b", _
      "gi07|100|b37e4b", _
      "gi06|100|735130", _
      "gi05|100|010100", _
      "gi04|100|c18851", _
      "gi03|100|e19f5e", _
      "gi02|100|523a22", _
      "gi01|100|030201" _
      )
  End With
  With .AddStep(1.76667, Null, Null)
    .Lights = Array( _
      "gi17|100|feb36a", _
      "giapron|100|010000", _
      "gi22|100|ffb46b", _
      "gi20|100|020101", _
      "gi21|100|382717", _
      "gi19|100|ffb46b", _
      "gi18|100|af7c4a", _
      "gi16|100|725130", _
      "gi15|100|010100", _
      "gi14|100|000000", _
      "gi13|100|ab7948", _
      "gi12|100|040302", _
      "gi11|100|000000", _
      "gi10|100|050302", _
      "gi09|100|040302", _
      "gi07|100|604328", _
      "gi06|100|402d1b", _
      "gi05|100|000000", _
      "gi04|100|010100", _
      "gi03|100|19120b", _
      "gi02|100|000000", _
      "gi01|100|000000" _
      )
  End With
  With .AddStep(1.80000, Null, Null)
    .Lights = Array( _
      "gi17|100|e2a05f", _
      "giapron|100|010100", _
      "gi22|100|725130", _
      "gi20|100|010000", _
      "gi21|100|624529", _
      "gi19|100|24190f", _
      "gi18|100|010101", _
      "gi16|100|fdb36a", _
      "gi15|100|4f3821", _
      "gi14|100|010100", _
      "gi13|100|020101", _
      "gi12|100|000000", _
      "gi11|100|66482b", _
      "gi10|100|f9b068", _
      "gi09|100|000000", _
      "gi08|100|0e0a06", _
      "gi07|100|cc9056", _
      "gi06|100|8c633b", _
      "gi05|100|fbb169", _
      "gi04|100|ffb46b", _
      "gi03|100|6d4d2e", _
      "gi01|100|0a0704" _
      )
  End With
  With .AddStep(1.83333, Null, Null)
    .Lights = Array( _
      "gi17|100|5b4026", _
      "giapron|100|000000", _
      "gi22|100|010100", _
      "gi20|100|000000", _
      "gi21|100|9d6f42", _
      "gi19|100|010100", _
      "gi18|100|010100", _
      "gi16|100|ffb46b", _
      "gi15|100|000000", _
      "gi14|100|000000", _
      "gi13|100|dc9b5c", _
      "gi11|100|050402", _
      "gi10|100|281c11", _
      "gi08|100|fab069", _
      "gi07|100|000000", _
      "gi06|100|010100", _
      "gi05|100|000000", _
      "gi04|100|322315", _
      "gi03|100|000000", _
      "gi02|100|503922", _
      "gi01|100|281d11" _
      )
  End With
  With .AddStep(1.86667, Null, Null)
    .Lights = Array( _
      "gi17|100|3f2c1a", _
      "giapron|100|e8a461", _
      "gi22|100|000000", _
      "gi21|100|5f4328", _
      "gi19|100|533a23", _
      "gi18|100|000000", _
      "gi15|100|030201", _
      "gi14|100|f5ad67", _
      "gi13|100|ffb46b", _
      "gi12|100|f6ae67", _
      "gi11|100|e8a461", _
      "gi10|100|5f4328", _
      "gi08|100|18110a", _
      "gi06|100|080503", _
      "gi05|100|2a1e12", _
      "gi04|100|0b0704", _
      "gi03|100|65472a", _
      "gi02|100|feb36b", _
      "gi01|100|000000" _
      )
  End With
  With .AddStep(1.90000, Null, Null)
    .Lights = Array( _
      "gi17|100|feb36a", _
      "giapron|100|010000", _
      "gi22|100|65482b", _
      "gi20|100|020101", _
      "gi21|100|fdb26a", _
      "gi19|100|040302", _
      "gi18|100|5b4026", _
      "gi15|100|ffb46b", _
      "gi14|100|0e0a06", _
      "gi13|100|010101", _
      "gi12|100|feb36b", _
      "gi11|100|fab069", _
      "gi10|100|432f1c", _
      "gi09|100|020201", _
      "gi08|100|020101", _
      "gi07|100|f7ae68", _
      "gi06|100|000000", _
      "gi05|100|040301", _
      "gi04|100|000000", _
      "gi03|100|000000", _
      "gi02|100|feb46b", _
      "gi01|100|f4ac66" _
      )
  End With
  With .AddStep(1.93333, Null, Null)
    .Lights = Array( _
      "gi17|100|000000", _
      "giapron|100|000000", _
      "gi22|100|000000", _
      "gi20|100|010101", _
      "gi21|100|382717", _
      "gi19|100|66482b", _
      "gi18|100|000000", _
      "gi16|100|5e4328", _
      "gi15|100|4e3721", _
      "gi14|100|160f09", _
      "gi13|100|000000", _
      "gi12|100|f2ab66", _
      "gi11|100|010000", _
      "gi10|100|060403", _
      "gi09|100|0d0905", _
      "gi08|100|010100", _
      "gi07|100|000000", _
      "gi06|100|010100", _
      "gi05|100|573e25", _
      "gi03|100|020101", _
      "gi02|100|fdb36a", _
      "gi01|100|422e1c" _
      )
  End With
  With .AddStep(1.96667, Null, Null)
    .Lights = Array( _
      "gi17|100|ffb46b", _
      "gi20|100|feb36b", _
      "gi21|100|020101", _
      "gi19|100|010100", _
      "gi18|100|010101", _
      "gi16|100|020101", _
      "gi15|100|5e4227", _
      "gi14|100|040201", _
      "gi13|100|f7af68", _
      "gi12|100|b07c4a", _
      "gi11|100|020201", _
      "gi10|100|cb8f55", _
      "gi09|100|c58b52", _
      "gi08|100|634629", _
      "gi07|100|040302", _
      "gi06|100|020101", _
      "gi05|100|040302", _
      "gi04|100|302214", _
      "gi02|100|110c07", _
      "gi01|100|000000" _
      )
  End With
  With .AddStep(2.00000, Null, Null)
    .Lights = Array( _
      "gi17|100|f1aa65", _
      "giapron|100|281c11", _
      "gi22|100|130e08", _
      "gi20|100|ffb46b", _
      "gi21|100|000000", _
      "gi19|100|070503", _
      "gi18|100|040302", _
      "gi16|100|5f4328", _
      "gi15|100|64472a", _
      "gi14|100|080603", _
      "gi13|100|23190f", _
      "gi12|100|2b1e12", _
      "gi11|100|030201", _
      "gi10|100|553c24", _
      "gi09|100|cb8f55", _
      "gi08|100|090604", _
      "gi07|100|010000", _
      "gi06|100|040302", _
      "gi05|100|070503", _
      "gi04|100|ffb46b", _
      "gi03|100|352516", _
      "gi02|100|a37344" _
      )
  End With
  With .AddStep(2.03333, Null, Null)
    .Lights = Array( _
      "gi17|100|ffb46b", _
      "giapron|100|000000", _
      "gi22|100|fab069", _
      "gi20|100|a27244", _
      "gi19|100|000000", _
      "gi18|100|604428", _
      "gi16|100|89613a", _
      "gi15|100|1c130c", _
      "gi14|100|020201", _
      "gi13|100|010000", _
      "gi12|100|ffb46b", _
      "gi11|100|fcb26a", _
      "gi10|100|fcb26a", _
      "gi09|100|000000", _
      "gi08|100|000000", _
      "gi07|100|4e3721", _
      "gi06|100|f7ae68", _
      "gi05|100|020101", _
      "gi04|100|010100", _
      "gi03|100|000000", _
      "gi02|100|010000", _
      "gi01|100|010100" _
      )
  End With
  With .AddStep(2.06667, Null, Null)
    .Lights = Array( _
      "gi17|100|010100", _
      "gi22|100|0a0704", _
      "gi20|100|171009", _
      "gi19|100|060402", _
      "gi18|100|755331", _
      "gi16|100|8a613a", _
      "gi15|100|24190f", _
      "gi14|100|eea864", _
      "gi13|100|040302", _
      "gi12|100|020101", _
      "gi11|100|ffb46b", _
      "gi10|100|ffb46b", _
      "gi09|100|22180e", _
      "gi08|100|010100", _
      "gi07|100|090704", _
      "gi06|100|000000", _
      "gi05|100|120c07", _
      "gi04|100|b37e4b", _
      "gi02|100|865f38", _
      "gi01|100|000000" _
      )
  End With
  With .AddStep(2.10000, Null, Null)
    .Lights = Array( _
      "gi22|100|171009", _
      "gi20|100|000000", _
      "gi21|100|f3ac66", _
      "gi19|100|020201", _
      "gi18|100|fdb26a", _
      "gi16|100|18110a", _
      "gi15|100|000000", _
      "gi14|100|382717", _
      "gi13|100|a97747", _
      "gi12|100|000000", _
      "gi11|100|ba834e", _
      "gi10|100|5e4227", _
      "gi09|100|080603", _
      "gi08|100|010000", _
      "gi07|100|010100", _
      "gi05|100|020101", _
      "gi04|100|010100", _
      "gi02|100|1f160d" _
      )
  End With
  With .AddStep(2.13333, Null, Null)
    .Lights = Array( _
      "gi17|100|5c4127", _
      "giapron|100|010100", _
      "gi22|100|412e1b", _
      "gi20|100|020101", _
      "gi21|100|dd9c5d", _
      "gi19|100|976a3f", _
      "gi18|100|eaa562", _
      "gi16|100|000000", _
      "gi15|100|d6975a", _
      "gi14|100|d8995b", _
      "gi13|100|4e3721", _
      "gi12|100|110c07", _
      "gi11|100|020101", _
      "gi10|100|3c2a19", _
      "gi09|100|2e2113", _
      "gi08|100|000000", _
      "gi07|100|000000", _
      "gi06|100|010101", _
      "gi05|100|040301", _
      "gi03|100|020101", _
      "gi02|100|000000", _
      "gi01|100|0b0704" _
      )
  End With
  With .AddStep(2.16667, Null, Null)
    .Lights = Array( _
      "gi17|100|010000", _
      "giapron|100|000000", _
      "gi22|100|9f7143", _
      "gi20|100|0d0905", _
      "gi21|100|000000", _
      "gi19|100|030201", _
      "gi18|100|865f38", _
      "gi15|100|18110a", _
      "gi14|100|000000", _
      "gi13|100|1b130b", _
      "gi12|100|ffb46b", _
      "gi11|100|000000", _
      "gi10|100|010100", _
      "gi09|100|18110a", _
      "gi08|100|0f0b06", _
      "gi06|100|0a0704", _
      "gi05|100|000000", _
      "gi04|100|040302", _
      "gi03|100|000000", _
      "gi02|100|010100", _
      "gi01|100|fdb36a" _
      )
  End With
  With .AddStep(2.20000, Null, Null)
    .Lights = Array( _
      "gi17|100|593f25", _
      "gi22|100|040302", _
      "gi20|100|000000", _
      "gi19|100|fbb169", _
      "gi18|100|2f2114", _
      "gi15|100|130d08", _
      "gi14|100|ffb46b", _
      "gi13|100|010100", _
      "gi12|100|000000", _
      "gi11|100|020101", _
      "gi10|100|000000", _
      "gi09|100|000000", _
      "gi08|100|030201", _
      "gi06|100|3e2b1a", _
      "gi04|100|010100", _
      "gi02|100|010000", _
      "gi01|100|000000" _
      )
  End With
  With .AddStep(2.23333, Null, Null)
    .Lights = Array( _
      "gi17|100|000000", _
      "gi22|100|000000", _
      "gi20|100|392818", _
      "gi19|100|f8af68", _
      "gi18|100|000000", _
      "gi16|100|44301c", _
      "gi15|100|010100", _
      "gi14|100|feb36a", _
      "gi13|100|5c4126", _
      "gi11|100|000000", _
      "gi09|100|4d3620", _
      "gi08|100|000000", _
      "gi07|100|040302", _
      "gi06|100|89613a", _
      "gi05|100|2c1f12", _
      "gi04|100|000000", _
      "gi02|100|000000", _
      "gi01|100|140e08" _
      )
  End With
  With .AddStep(2.26667, Null, Null)
    .Lights = Array( _
      "gi17|100|010000", _
      "gi22|100|010000", _
      "gi20|100|010100", _
      "gi21|100|17100a", _
      "gi19|100|cf9257", _
      "gi18|100|0d0905", _
      "gi16|100|2d2013", _
      "gi15|100|614529", _
      "gi14|100|f7af68", _
      "gi13|100|030201", _
      "gi11|100|040302", _
      "gi10|100|030201", _
      "gi09|100|010000", _
      "gi08|100|040302", _
      "gi07|100|000000", _
      "gi06|100|010000", _
      "gi05|100|010000", _
      "gi03|100|feb36a", _
      "gi02|100|010000", _
      "gi01|100|000000" _
      )
  End With
  With .AddStep(2.30000, Null, Null)
    .Lights = Array( _
      "gi17|100|ffb46b", _
      "gi22|100|020101", _
      "gi20|100|000000", _
      "gi21|100|100b06", _
      "gi19|100|000000", _
      "gi18|100|ffb46b", _
      "gi16|100|000000", _
      "gi15|100|0b0704", _
      "gi14|100|000000", _
      "gi13|100|c38952", _
      "gi12|100|030201", _
      "gi11|100|ffb46b", _
      "gi10|100|ffb46b", _
      "gi09|100|000000", _
      "gi08|100|000000", _
      "gi07|100|010100", _
      "gi06|100|020101", _
      "gi05|100|050302", _
      "gi04|100|020201", _
      "gi03|100|000000", _
      "gi02|100|000000" _
      )
  End With
  With .AddStep(2.33333, Null, Null)
    .Lights = Array( _
      "gi17|100|d39558", _
      "gi22|100|000000", _
      "gi20|100|1d140c", _
      "gi21|100|100c07", _
      "gi19|100|23190f", _
      "gi18|100|020101", _
      "gi16|100|eda763", _
      "gi15|100|d29558", _
      "gi13|100|f6ae67", _
      "gi12|100|000000", _
      "gi11|100|040302", _
      "gi10|100|be8650", _
      "gi08|100|c08851", _
      "gi07|100|fdb36a", _
      "gi06|100|91673d", _
      "gi05|100|000000", _
      "gi04|100|fcb26a", _
      "gi02|100|010101", _
      "gi01|100|fbb169" _
      )
  End With
  With .AddStep(2.36667, Null, Null)
    .Lights = Array( _
      "gi17|100|130e08", _
      "gi22|100|845d37", _
      "gi20|100|ad7a48", _
      "gi21|100|060402", _
      "gi19|100|fdb36a", _
      "gi18|100|000000", _
      "gi16|100|d49659", _
      "gi15|100|040302", _
      "gi14|100|010000", _
      "gi13|100|000000", _
      "gi12|100|030201", _
      "gi11|100|775432", _
      "gi10|100|020101", _
      "gi08|100|020101", _
      "gi07|100|010100", _
      "gi06|100|030201", _
      "gi04|100|040302", _
      "gi03|100|281c11", _
      "gi02|100|b37f4b", _
      "gi01|100|010100" _
      )
  End With
  With .AddStep(2.40000, Null, Null)
    .Lights = Array( _
      "gi17|100|010000", _
      "gi22|100|000000", _
      "gi20|100|8e643c", _
      "gi21|100|553c24", _
      "gi16|100|6c4c2d", _
      "gi15|100|010100", _
      "gi14|100|fab169", _
      "gi13|100|030201", _
      "gi12|100|e5a260", _
      "gi11|100|fbb169", _
      "gi10|100|010100", _
      "gi09|100|5f4328", _
      "gi08|100|583e25", _
      "gi04|100|886039", _
      "gi03|100|000000", _
      "gi02|100|000000", _
      "gi01|100|000000" _
      )
  End With
  With .AddStep(2.43333, Null, Null)
    .Lights = Array( _
      "gi17|100|040302", _
      "gi22|100|020101", _
      "gi20|100|030201", _
      "gi21|100|000000", _
      "gi19|100|030201", _
      "gi16|100|67492b", _
      "gi15|100|020101", _
      "gi14|100|d8995b", _
      "gi13|100|110c07", _
      "gi12|100|5b4026", _
      "gi11|100|000000", _
      "gi10|100|030201", _
      "gi09|100|020101", _
      "gi08|100|392818", _
      "gi07|100|000000", _
      "gi06|100|000000", _
      "gi04|100|000000", _
      "gi03|100|010100", _
      "gi01|100|020101" _
      )
  End With
  With .AddStep(2.46667, Null, Null)
    .Lights = Array( _
      "gi17|100|ae7b49", _
      "gi22|100|000000", _
      "gi20|100|020101", _
      "gi21|100|b27e4b", _
      "gi19|100|000000", _
      "gi16|100|fdb36a", _
      "gi15|100|f6ae67", _
      "gi14|100|010100", _
      "gi13|100|422f1c", _
      "gi12|100|010000", _
      "gi11|100|6b4c2d", _
      "gi10|100|000000", _
      "gi09|100|010100", _
      "gi08|100|0b0805", _
      "gi03|100|010101", _
      "gi02|100|030201", _
      "gi01|100|000000" _
      )
  End With
  With .AddStep(2.50000, Null, Null)
    .Lights = Array( _
      "gi17|100|000000", _
      "gi22|100|46311d", _
      "gi20|100|000000", _
      "gi21|100|91673d", _
      "gi19|100|070503", _
      "gi18|100|0a0704", _
      "gi16|100|020201", _
      "gi15|100|64472a", _
      "gi14|100|030201", _
      "gi13|100|eda763", _
      "gi12|100|f8af68", _
      "gi11|100|986b40", _
      "gi10|100|010100", _
      "gi09|100|000000", _
      "gi08|100|010100", _
      "gi04|100|ffb46b", _
      "gi03|100|000000", _
      "gi02|100|000000" _
      )
  End With
  With .AddStep(2.53333, Null, Null)
    .Lights = Array( _
      "gi17|100|604428", _
      "gi22|100|0f0b06", _
      "gi21|100|070503", _
      "gi19|100|e7a361", _
      "gi18|100|af7c4a", _
      "gi16|100|000000", _
      "gi15|100|5e4328", _
      "gi14|100|100b07", _
      "gi13|100|ffb46b", _
      "gi12|100|000000", _
      "gi11|100|010000", _
      "gi10|100|000000", _
      "gi08|100|000000", _
      "gi04|100|000000", _
      "gi02|100|6c4c2d" _
      )
  End With
  With .AddStep(2.56667, Null, Null)
    .Lights = Array( _
      "gi17|100|45311d", _
      "gi22|100|010100", _
      "gi20|100|b47f4c", _
      "gi21|100|150f09", _
      "gi19|100|050402", _
      "gi18|100|a37344", _
      "gi16|100|040302", _
      "gi15|100|93683e", _
      "gi14|100|0a0704", _
      "gi13|100|feb46b", _
      "gi12|100|010000", _
      "gi11|100|f5ad67", _
      "gi10|100|2a1e12", _
      "gi03|100|020101", _
      "gi02|100|030201" _
      )
  End With
  With .AddStep(2.60000, Null, Null)
    .Lights = Array( _
      "gi17|100|150f09", _
      "gi22|100|000000", _
      "gi20|100|5e4228", _
      "gi21|100|000000", _
      "gi19|100|000000", _
      "gi18|100|000000", _
      "gi16|100|020201", _
      "gi15|100|000000", _
      "gi14|100|060402", _
      "gi13|100|2e2113", _
      "gi12|100|271c10", _
      "gi11|100|010101", _
      "gi10|100|000000", _
      "gi06|100|010100", _
      "gi04|100|030201", _
      "gi03|100|000000", _
      "gi02|100|000000" _
      )
  End With
  With .AddStep(2.63333, Null, Null)
    .Lights = Array( _
      "gi17|100|010100", _
      "gi22|100|de9d5d", _
      "gi20|100|ffb46b", _
      "gi21|100|030201", _
      "gi19|100|64472a", _
      "gi18|100|47321e", _
      "gi16|100|694a2c", _
      "gi15|100|412e1b", _
      "gi14|100|ffb46b", _
      "gi13|100|fdb26a", _
      "gi12|100|19110a", _
      "gi11|100|000000", _
      "gi04|100|000000" _
      )
  End With
  With .AddStep(2.66667, Null, Null)
    .Lights = Array( _
      "gi17|100|322315", _
      "gi22|100|5b4026", _
      "gi21|100|050302", _
      "gi19|100|1f160d", _
      "gi18|100|8e643b", _
      "gi16|100|020101", _
      "gi15|100|92673d", _
      "gi14|100|0a0704", _
      "gi13|100|18110a", _
      "gi12|100|040201", _
      "gi11|100|020201", _
      "gi06|100|000000" _
      )
  End With
  With .AddStep(2.70000, Null, Null)
    .Lights = Array( _
      "gi17|100|010101", _
      "gi22|100|fab169", _
      "gi20|100|4c3520", _
      "gi21|100|feb36b", _
      "gi19|100|db9b5c", _
      "gi18|100|251a0f", _
      "gi16|100|010000", _
      "gi15|100|f1aa65", _
      "gi14|100|010000", _
      "gi13|100|0a0704", _
      "gi12|100|fab069", _
      "gi11|100|010100", _
      "gi09|100|010101" _
      )
  End With
  With .AddStep(2.73333, Null, Null)
    .Lights = Array( _
      "gi17|100|fab169", _
      "gi22|100|ca8e55", _
      "gi20|100|694a2c", _
      "gi21|100|010101", _
      "gi19|100|030201", _
      "gi18|100|503922", _
      "gi16|100|000000", _
      "gi15|100|000000", _
      "gi14|100|000000", _
      "gi13|100|000000", _
      "gi12|100|0e0a06", _
      "gi11|100|050402", _
      "gi10|100|0c0805", _
      "gi09|100|010000" _
      )
  End With
  With .AddStep(2.76667, Null, Null)
    .Lights = Array( _
      "gi17|100|1a120b", _
      "gi22|100|feb36a", _
      "gi20|100|000000", _
      "gi21|100|896039", _
      "gi19|100|000000", _
      "gi18|100|020101", _
      "gi16|100|010000", _
      "gi15|100|040302", _
      "gi13|100|010000", _
      "gi12|100|000000", _
      "gi11|100|040302", _
      "gi10|100|040302", _
      "gi09|100|000000" _
      )
  End With
  With .AddStep(2.80000, Null, Null)
    .Lights = Array( _
      "gi17|100|c68c53", _
      "gi22|100|6f4e2f", _
      "gi21|100|9b6e41", _
      "gi19|100|b5804c", _
      "gi18|100|261b10", _
      "gi16|100|000000", _
      "gi15|100|1c140c", _
      "gi13|100|010101", _
      "gi12|100|030201", _
      "gi11|100|010100", _
      "gi10|100|2b1f12" _
      )
  End With
  With .AddStep(2.83333, Null, Null)
    .Lights = Array( _
      "gi17|100|000000", _
      "gi22|100|a07143", _
      "gi20|100|030201", _
      "gi21|100|000000", _
      "gi19|100|392818", _
      "gi18|100|010000", _
      "gi16|100|140e08", _
      "gi15|100|775432", _
      "gi13|100|010000", _
      "gi12|100|0c0805", _
      "gi11|100|000000", _
      "gi10|100|000000", _
      "gi09|100|725030" _
      )
  End With
  With .AddStep(2.86667, Null, Null)
    .Lights = Array( _
      "gi17|100|feb36b", _
      "gi22|100|010000", _
      "gi20|100|130e08", _
      "gi19|100|000000", _
      "gi18|100|010100", _
      "gi16|100|f9af68", _
      "gi15|100|010100", _
      "gi13|100|010100", _
      "gi12|100|010100", _
      "gi11|100|010000", _
      "gi09|100|000000" _
      )
  End With
  With .AddStep(2.90000, Null, Null)
    .Lights = Array( _
      "gi17|100|886039", _
      "gi22|100|000000", _
      "gi20|100|fbb169", _
      "gi18|100|000000", _
      "gi16|100|402d1b", _
      "gi15|100|000000", _
      "gi14|100|010100", _
      "gi13|100|feb36a", _
      "gi12|100|040302", _
      "gi11|100|020101", _
      "gi09|100|010100" _
      )
  End With
  With .AddStep(2.93333, Null, Null)
    .Lights = Array( _
      "gi17|100|815b36", _
      "gi21|100|fcb26a", _
      "gi16|100|48331e", _
      "gi15|100|010101", _
      "gi14|100|000000", _
      "gi13|100|feb46b", _
      "gi12|100|000000", _
      "gi11|100|000000", _
      "gi09|100|000000" _
      )
  End With
  With .AddStep(2.96667, Null, Null)
    .Lights = Array( _
      "gi17|100|0d0905", _
      "gi22|100|030201", _
      "gi20|100|000000", _
      "gi21|100|ffb46b", _
      "gi19|100|010100", _
      "gi18|100|5a4026", _
      "gi16|100|bb844e", _
      "gi15|100|100b07", _
      "gi14|100|040302", _
      "gi13|100|000000", _
      "gi11|100|040302", _
      "gi10|100|030201" _
      )
  End With
  With .AddStep(3.00000, Null, Null)
    .Lights = Array( _
      "gi17|100|000000", _
      "gi22|100|010100", _
      "gi20|100|010100", _
      "gi21|100|fbb169", _
      "gi19|100|000000", _
      "gi18|100|000000", _
      "gi16|100|020101", _
      "gi15|100|000000", _
      "gi14|100|000000", _
      "gi13|100|3d2b19", _
      "gi12|100|271c10", _
      "gi11|100|2f2114", _
      "gi10|100|000000" _
      )
  End With
  With .AddStep(3.03333, Null, Null)
    .Lights = Array( _
      "gi17|100|23190f", _
      "gi22|100|000000", _
      "gi20|100|120d08", _
      "gi21|100|ffb46b", _
      "gi19|100|010100", _
      "gi18|100|010100", _
      "gi16|100|030201", _
      "gi13|100|4c3620", _
      "gi12|100|000000", _
      "gi11|100|010100", _
      "gi10|100|271c10" _
      )
  End With
  With .AddStep(3.06667, Null, Null)
    .Lights = Array( _
      "gi17|100|64472a", _
      "gi20|100|010100", _
      "gi21|100|000000", _
      "gi19|100|000000", _
      "gi16|100|b17d4a", _
      "gi13|100|ad7a49", _
      "gi11|100|020101", _
      "gi10|100|010100" _
      )
  End With
  With .AddStep(3.10000, Null, Null)
    .Lights = Array( _
      "gi17|100|050402", _
      "gi22|100|020101", _
      "gi20|100|000000", _
      "gi18|100|000000", _
      "gi16|100|000000", _
      "gi13|100|000000", _
      "gi11|100|65472a", _
      "gi10|100|000000" _
      )
  End With
  With .AddStep(3.13333, Null, Null)
    .Lights = Array( _
      "gi17|100|030201", _
      "gi22|100|000000", _
      "gi21|100|0b0805", _
      "gi18|100|020101", _
      "gi16|100|392818", _
      "gi15|100|060403", _
      "gi14|100|010100", _
      "gi11|100|000000" _
      )
  End With
  With .AddStep(3.16667, Null, Null)
    .Lights = Array( _
      "gi17|100|20160d", _
      "gi22|100|030201", _
      "gi20|100|060402", _
      "gi21|100|000000", _
      "gi18|100|000000", _
      "gi16|100|130e08", _
      "gi15|100|000000", _
      "gi14|100|030201", _
      "gi13|100|010100" _
      )
  End With
  With .AddStep(3.20000, Null, Null)
    .Lights = Array( _
      "gi17|100|1e150d", _
      "gi22|100|000000", _
      "gi20|100|000000", _
      "gi21|100|010000", _
      "gi16|100|000000", _
      "gi14|100|000000", _
      "gi13|100|000000", _
      "gi11|100|040302" _
      )
  End With
  With .AddStep(3.23333, Null, Null)
    .Lights = Array( _
      "gi17|100|f7af68", _
      "gi22|100|4c3620", _
      "gi20|100|010100", _
      "gi21|100|000000", _
      "gi15|100|090604", _
      "gi13|100|020201", _
      "gi12|100|050402", _
      "gi11|100|000000" _
      )
  End With
  With .AddStep(3.26667, Null, Null)
    .Lights = Array( _
      "gi17|100|000000", _
      "gi22|100|030201", _
      "gi21|100|010101", _
      "gi19|100|010000", _
      "gi18|100|010100", _
      "gi16|100|030201", _
      "gi15|100|000000", _
      "gi13|100|010100", _
      "gi12|100|100b06" _
      )
  End With
  With .AddStep(3.30000, Null, Null)
    .Lights = Array( _
      "gi20|100|000000", _
      "gi21|100|523a23", _
      "gi19|100|030201", _
      "gi18|100|020201", _
      "gi16|100|000000", _
      "gi13|100|000000", _
      "gi12|100|010100" _
      )
  End With
  With .AddStep(3.33333, Null, Null)
    .Lights = Array( _
      "gi17|100|020101", _
      "gi22|100|010100", _
      "gi20|100|b7814d", _
      "gi21|100|000000", _
      "gi19|100|000000", _
      "gi18|100|000000", _
      "gi15|100|020201" _
      )
  End With
  With .AddStep(3.36667, Null, Null)
    .Lights = Array( _
      "gi17|100|000000", _
      "gi22|100|000000", _
      "gi20|100|010100", _
      "gi15|100|000000", _
      "gi13|100|030201", _
      "gi12|100|000000" _
      )
  End With
  With .AddStep(3.40000, Null, Null)
    .Lights = Array( _
      "gi22|100|90663d", _
      "gi20|100|000000", _
      "gi18|100|68492c", _
      "gi15|100|010100", _
      "gi13|100|000000" _
      )
  End With
  With .AddStep(3.43333, Null, Null)
    .Lights = Array( _
      "gi22|100|080503", _
      "gi20|100|010100", _
      "gi18|100|000000" _
      )
  End With
  With .AddStep(3.46667, Null, Null)
    .Lights = Array( _
      "gi22|100|000000", _
      "gi20|100|010101", _
      "gi21|100|010101", _
      "gi16|100|5b4026", _
      "gi15|100|000000", _
      "gi13|100|030201" _
      )
  End With
  With .AddStep(3.50000, Null, Null)
    .Lights = Array( _
      "gi22|100|010000", _
      "gi20|100|000000", _
      "gi21|100|000000", _
      "gi16|100|000000", _
      "gi13|100|010101" _
      )
  End With
  With .AddStep(3.53333, Null, Null)
    .Lights = Array( _
      "gi22|100|030201", _
      "gi13|100|000000" _
      )
  End With
  With .AddStep(3.56667, Null, Null)
    .Lights = Array( _
      "gi17|100|010100", _
      "gi22|100|000000", _
      "gi21|100|010101" _
      )
  End With
  With .AddStep(3.60000, Null, Null)
    .Lights = Array( _
      "gi17|100|000000", _
      "gi22|100|332415", _
      "gi21|100|000000" _
      )
  End With
  With .AddStep(3.63333, Null, Null)
    .Lights = Array( _
      "gi17|100|e8a461", _
      "gi22|100|000000" _
      )
  End With
  With .AddStep(3.66667, Null, Null)
    .Lights = Array( _
      "gi17|100|000000", _
      "gi16|100|060402" _
      )
  End With
  With .AddStep(3.70000, Null, Null)
    .Lights = Array( _
      "gi16|100|000000" _
      )
  End With
  With .AddStep(3.73333, Null, Null)
    .Lights = Array( _
      "gi16|100|030201" _
      )
  End With
  With .AddStep(3.76667, Null, Null)
    .Lights = Array( _
      "gi16|100|281c11" _
      )
  End With
  With .AddStep(3.80000, Null, Null)
    .Lights = Array( _
      "gi16|100|020101" _
      )
  End With
  With .AddStep(3.83333, Null, Null)
    .Lights = Array( _
      "gi17|100|0d0905", _
      "gi16|100|000000" _
      )
  End With
  With .AddStep(3.86667, Null, Null)
    .Lights = Array( _
      "gi17|100|000000" _
      )
  End With
  With .AddStep(3.90000, Null, Null)
  End With
  With .AddStep(3.93333, Null, Null)
  End With
  With .AddStep(3.96667, Null, 0.03333)
  End With
End With


End Sub





'Insert Shows

Sub CreateInsertShows()

With CreateGlfShow("insert_swap2")
    With .AddStep(Null, Null, 0.1)
        .Lights = Array( _
        "LPF|(intensity)|(color1)", _
        "LX|(intensity)|(color2)", _
        "LS5|(intensity)|(color1)", _
        "LS1|(intensity)|(color2)", _
        "LS2|(intensity)|(color1)", _
        "LS3|(intensity)|(color2)", _
        "LS4|(intensity)|(color1)", _
        "LS6|(intensity)|(color2)", _
        "LSwC3|(intensity)|(color1)", _
        "LSwC2|(intensity)|(color2)", _
        "LSwC1|(intensity)|(color1)", _
        "LCWiz|(intensity)|(color2)", _
        "LLWiz|(intensity)|(color1)", _
        "LC1|(intensity)|(color2)", _
        "LC2|(intensity)|(color1)", _
        "LC3|(intensity)|(color2)", _
        "LC4|(intensity)|(color1)", _
        "LC5|(intensity)|(color2)", _
        "LC6|(intensity)|(color1)", _
        "LC7|(intensity)|(color2)", _
        "LC8|(intensity)|(color1)", _
        "LWiz|(intensity)|(color2)", _
        "LW9|(intensity)|(color1)", _
        "LW8|(intensity)|(color2)", _
        "LW7|(intensity)|(color1)", _
        "LW6|(intensity)|(color2)", _
        "LW5|(intensity)|(color1)", _
        "LW4|(intensity)|(color2)", _
        "LW3|(intensity)|(color1)", _
        "LW2|(intensity)|(color2)", _
        "LW1|(intensity)|(color1)", _
        "LMLR|(intensity)|(color2)", _
        "LEBR|(intensity)|(color1)", _
        "LMR|(intensity)|(color2)", _
        "LPC5|(intensity)|(color1)", _
        "LPC4|(intensity)|(color2)", _
        "LSC3|(intensity)|(color2)", _
        "LSC2|(intensity)|(color1)", _
        "LSC1|(intensity)|(color2)", _
        "LF3|(intensity)|(color1)", _
        "LF2|(intensity)|(color2)", _
        "LF1|(intensity)|(color1)", _
        "LPC3|(intensity)|(color2)", _
        "LPC2|(intensity)|(color1)", _
        "LPC1|(intensity)|(color2)", _
        "LTW2|(intensity)|(color1)", _
        "LTW1|(intensity)|(color2)", _
        "LCC3|(intensity)|(color1)", _
        "LCC2|(intensity)|(color2)", _
        "LCC1|(intensity)|(color1)", _
        "LMet4|(intensity)|(color2)", _
        "LMet3|(intensity)|(color1)", _
        "LMet2|(intensity)|(color2)", _
        "LMet1|(intensity)|(color1)", _
        "LM5|(intensity)|(color2)", _
        "LM4|(intensity)|(color1)", _
        "LM3|(intensity)|(color2)", _
        "LM2|(intensity)|(color1)", _
        "LM1|(intensity)|(color2)", _
        "LSA|(intensity)|(color1)", _
        "LH9|(intensity)|(color2)", _
        "LH8|(intensity)|(color1)", _
        "LH7|(intensity)|(color2)", _
        "LH6|(intensity)|(color1)", _
        "LH5|(intensity)|(color2)", _
        "LH4|(intensity)|(color1)", _
        "LH3|(intensity)|(color2)", _
        "LH2|(intensity)|(color1)", _
        "LH1|(intensity)|(color2)", _
        "LPR1|(intensity)|(color1)", _
        "LPR3|(intensity)|(color2)", _
        "LPR2|(intensity)|(color1)", _
        "LPR6|(intensity)|(color2)", _
        "LPR5|(intensity)|(color1)", _
        "LPR4|(intensity)|(color2)", _
        "LMR2|(intensity)|(color1)", _
        "LMR1|(intensity)|(color2)", _
        "LCR2|(intensity)|(color1)", _
        "LCR1|(intensity)|(color2)", _
        "LRI|(intensity)|(color1)", _
        "LRO|(intensity)|(color2)", _
        "LLI|(intensity)|(color1)", _
        "LLO|(intensity)|(color2)", _
        "LSR|(intensity)|(color1)", _
        "LSL|(intensity)|(color2)" _
        )
    End With
    With .AddStep(Null, Null, 0.1)
        .Lights = Array( _
        "LPF|(intensity)|(color2)", _
        "LX|(intensity)|(color1)", _
        "LS5|(intensity)|(color2)", _
        "LS1|(intensity)|(color1)", _
        "LS2|(intensity)|(color2)", _
        "LS3|(intensity)|(color1)", _
        "LS4|(intensity)|(color2)", _
        "LS6|(intensity)|(color1)", _
        "LSwC3|(intensity)|(color2)", _
        "LSwC2|(intensity)|(color1)", _
        "LSwC1|(intensity)|(color2)", _
        "LCWiz|(intensity)|(color1)", _
        "LLWiz|(intensity)|(color2)", _
        "LC1|(intensity)|(color1)", _
        "LC2|(intensity)|(color2)", _
        "LC3|(intensity)|(color1)", _
        "LC4|(intensity)|(color2)", _
        "LC5|(intensity)|(color1)", _
        "LC6|(intensity)|(color2)", _
        "LC7|(intensity)|(color1)", _
        "LC8|(intensity)|(color2)", _
        "LWiz|(intensity)|(color1)", _
        "LW9|(intensity)|(color2)", _
        "LW8|(intensity)|(color1)", _
        "LW7|(intensity)|(color2)", _
        "LW6|(intensity)|(color1)", _
        "LW5|(intensity)|(color2)", _
        "LW4|(intensity)|(color1)", _
        "LW3|(intensity)|(color2)", _
        "LW2|(intensity)|(color1)", _
        "LW1|(intensity)|(color2)", _
        "LMLR|(intensity)|(color1)", _
        "LEBR|(intensity)|(color2)", _
        "LMR|(intensity)|(color1)", _
        "LPC5|(intensity)|(color2)", _
        "LPC4|(intensity)|(color1)", _
        "LSC3|(intensity)|(color1)", _
        "LSC2|(intensity)|(color2)", _
        "LSC1|(intensity)|(color1)", _
        "LF3|(intensity)|(color2)", _
        "LF2|(intensity)|(color1)", _
        "LF1|(intensity)|(color2)", _
        "LPC3|(intensity)|(color1)", _
        "LPC2|(intensity)|(color2)", _
        "LPC1|(intensity)|(color1)", _
        "LTW2|(intensity)|(color2)", _
        "LTW1|(intensity)|(color1)", _
        "LCC3|(intensity)|(color2)", _
        "LCC2|(intensity)|(color1)", _
        "LCC1|(intensity)|(color2)", _
        "LMet4|(intensity)|(color1)", _
        "LMet3|(intensity)|(color2)", _
        "LMet2|(intensity)|(color1)", _
        "LMet1|(intensity)|(color2)", _
        "LM5|(intensity)|(color1)", _
        "LM4|(intensity)|(color2)", _
        "LM3|(intensity)|(color1)", _
        "LM2|(intensity)|(color2)", _
        "LM1|(intensity)|(color1)", _
        "LSA|(intensity)|(color2)", _
        "LH9|(intensity)|(color1)", _
        "LH8|(intensity)|(color2)", _
        "LH7|(intensity)|(color1)", _
        "LH6|(intensity)|(color2)", _
        "LH5|(intensity)|(color1)", _
        "LH4|(intensity)|(color2)", _
        "LH3|(intensity)|(color1)", _
        "LH2|(intensity)|(color2)", _
        "LH1|(intensity)|(color1)", _
        "LPR1|(intensity)|(color2)", _
        "LPR3|(intensity)|(color1)", _
        "LPR2|(intensity)|(color2)", _
        "LPR6|(intensity)|(color1)", _
        "LPR5|(intensity)|(color2)", _
        "LPR4|(intensity)|(color1)", _
        "LMR2|(intensity)|(color2)", _
        "LMR1|(intensity)|(color1)", _
        "LCR2|(intensity)|(color2)", _
        "LCR1|(intensity)|(color1)", _
        "LRI|(intensity)|(color2)", _
        "LRO|(intensity)|(color1)", _
        "LLI|(intensity)|(color2)", _
        "LLO|(intensity)|(color1)", _
        "LSR|(intensity)|(color2)", _
        "LSL|(intensity)|(color1)" _
        )
    End With
End With


With CreateGlfShow("insert_swap3")
    With .AddStep(Null, Null, 0.1)
        .Lights = Array( _
        "LPF|(intensity)|(color1)", _
        "LX|(intensity)|(color2)", _
        "LS5|(intensity)|(color3)", _
        "LS1|(intensity)|(color1)", _
        "LS2|(intensity)|(color1)", _
        "LS3|(intensity)|(color2)", _
        "LS4|(intensity)|(color3)", _
        "LS6|(intensity)|(color1)", _
        "LSwC3|(intensity)|(color2)", _
        "LSwC2|(intensity)|(color3)", _
        "LSwC1|(intensity)|(color1)", _
        "LCWiz|(intensity)|(color2)", _
        "LLWiz|(intensity)|(color3)", _
        "LC1|(intensity)|(color1)", _
        "LC2|(intensity)|(color2)", _
        "LC3|(intensity)|(color3)", _
        "LC4|(intensity)|(color1)", _
        "LC5|(intensity)|(color2)", _
        "LC6|(intensity)|(color3)", _
        "LC7|(intensity)|(color1)", _
        "LC8|(intensity)|(color2)", _
        "LWiz|(intensity)|(color3)", _
        "LW9|(intensity)|(color1)", _
        "LW8|(intensity)|(color2)", _
        "LW7|(intensity)|(color3)", _
        "LW6|(intensity)|(color1)", _
        "LW5|(intensity)|(color2)", _
        "LW4|(intensity)|(color3)", _
        "LW3|(intensity)|(color1)", _
        "LW2|(intensity)|(color2)", _
        "LW1|(intensity)|(color3)", _
        "LMLR|(intensity)|(color1)", _
        "LEBR|(intensity)|(color2)", _
        "LMR|(intensity)|(color3)", _
        "LPC5|(intensity)|(color1)", _
        "LPC4|(intensity)|(color2)", _
        "LSC3|(intensity)|(color1)", _
        "LSC2|(intensity)|(color2)", _
        "LSC1|(intensity)|(color3)", _
        "LF3|(intensity)|(color1)", _
        "LF2|(intensity)|(color2)", _
        "LF1|(intensity)|(color3)", _
        "LPC3|(intensity)|(color1)", _
        "LPC2|(intensity)|(color2)", _
        "LPC1|(intensity)|(color3)", _
        "LTW2|(intensity)|(color3)", _
        "LTW1|(intensity)|(color1)", _
        "LCC3|(intensity)|(color2)", _
        "LCC2|(intensity)|(color3)", _
        "LCC1|(intensity)|(color1)", _
        "LMet4|(intensity)|(color2)", _
        "LMet3|(intensity)|(color3)", _
        "LMet2|(intensity)|(color1)", _
        "LMet1|(intensity)|(color2)", _
        "LM5|(intensity)|(color3)", _
        "LM4|(intensity)|(color1)", _
        "LM3|(intensity)|(color2)", _
        "LM2|(intensity)|(color3)", _
        "LM1|(intensity)|(color1)", _
        "LSA|(intensity)|(color2)", _
        "LH9|(intensity)|(color3)", _
        "LH8|(intensity)|(color1)", _
        "LH7|(intensity)|(color2)", _
        "LH6|(intensity)|(color3)", _
        "LH5|(intensity)|(color1)", _
        "LH4|(intensity)|(color2)", _
        "LH3|(intensity)|(color3)", _
        "LH2|(intensity)|(color1)", _
        "LH1|(intensity)|(color2)", _
        "LPR1|(intensity)|(color3)", _
        "LPR3|(intensity)|(color1)", _
        "LPR2|(intensity)|(color2)", _
        "LPR6|(intensity)|(color3)", _
        "LPR5|(intensity)|(color1)", _
        "LPR4|(intensity)|(color2)", _
        "LMR2|(intensity)|(color3)", _
        "LMR1|(intensity)|(color1)", _
        "LCR2|(intensity)|(color2)", _
        "LCR1|(intensity)|(color3)", _
        "LRI|(intensity)|(color1)", _
        "LRO|(intensity)|(color2)", _
        "LLI|(intensity)|(color3)", _
        "LLO|(intensity)|(color1)", _
        "LSR|(intensity)|(color2)", _
        "LSL|(intensity)|(color3)" _
        )
    End With
    With .AddStep(Null, Null, 0.1)
        .Lights = Array( _
        "LPF|(intensity)|(color3)", _
        "LX|(intensity)|(color1)", _
        "LS5|(intensity)|(color2)", _
        "LS1|(intensity)|(color3)", _
        "LS2|(intensity)|(color3)", _
        "LS3|(intensity)|(color1)", _
        "LS4|(intensity)|(color2)", _
        "LS6|(intensity)|(color3)", _
        "LSwC3|(intensity)|(color1)", _
        "LSwC2|(intensity)|(color2)", _
        "LSwC1|(intensity)|(color3)", _
        "LCWiz|(intensity)|(color1)", _
        "LLWiz|(intensity)|(color2)", _
        "LC1|(intensity)|(color3)", _
        "LC2|(intensity)|(color1)", _
        "LC3|(intensity)|(color2)", _
        "LC4|(intensity)|(color3)", _
        "LC5|(intensity)|(color1)", _
        "LC6|(intensity)|(color2)", _
        "LC7|(intensity)|(color3)", _
        "LC8|(intensity)|(color1)", _
        "LWiz|(intensity)|(color2)", _
        "LW9|(intensity)|(color3)", _
        "LW8|(intensity)|(color1)", _
        "LW7|(intensity)|(color2)", _
        "LW6|(intensity)|(color3)", _
        "LW5|(intensity)|(color1)", _
        "LW4|(intensity)|(color2)", _
        "LW3|(intensity)|(color3)", _
        "LW2|(intensity)|(color1)", _
        "LW1|(intensity)|(color2)", _
        "LMLR|(intensity)|(color3)", _
        "LEBR|(intensity)|(color1)", _
        "LMR|(intensity)|(color2)", _
        "LPC5|(intensity)|(color3)", _
        "LPC4|(intensity)|(color1)", _
        "LSC3|(intensity)|(color3)", _
        "LSC2|(intensity)|(color1)", _
        "LSC1|(intensity)|(color2)", _
        "LF3|(intensity)|(color3)", _
        "LF2|(intensity)|(color1)", _
        "LF1|(intensity)|(color2)", _
        "LPC3|(intensity)|(color3)", _
        "LPC2|(intensity)|(color1)", _
        "LPC1|(intensity)|(color2)", _
        "LTW2|(intensity)|(color2)", _
        "LTW1|(intensity)|(color3)", _
        "LCC3|(intensity)|(color1)", _
        "LCC2|(intensity)|(color2)", _
        "LCC1|(intensity)|(color3)", _
        "LMet4|(intensity)|(color1)", _
        "LMet3|(intensity)|(color2)", _
        "LMet2|(intensity)|(color3)", _
        "LMet1|(intensity)|(color1)", _
        "LM5|(intensity)|(color2)", _
        "LM4|(intensity)|(color3)", _
        "LM3|(intensity)|(color1)", _
        "LM2|(intensity)|(color2)", _
        "LM1|(intensity)|(color3)", _
        "LSA|(intensity)|(color1)", _
        "LH9|(intensity)|(color2)", _
        "LH8|(intensity)|(color3)", _
        "LH7|(intensity)|(color1)", _
        "LH6|(intensity)|(color2)", _
        "LH5|(intensity)|(color3)", _
        "LH4|(intensity)|(color1)", _
        "LH3|(intensity)|(color2)", _
        "LH2|(intensity)|(color3)", _
        "LH1|(intensity)|(color1)", _
        "LPR1|(intensity)|(color2)", _
        "LPR3|(intensity)|(color3)", _
        "LPR2|(intensity)|(color1)", _
        "LPR6|(intensity)|(color2)", _
        "LPR5|(intensity)|(color3)", _
        "LPR4|(intensity)|(color1)", _
        "LMR2|(intensity)|(color2)", _
        "LMR1|(intensity)|(color3)", _
        "LCR2|(intensity)|(color1)", _
        "LCR1|(intensity)|(color2)", _
        "LRI|(intensity)|(color3)", _
        "LRO|(intensity)|(color1)", _
        "LLI|(intensity)|(color2)", _
        "LLO|(intensity)|(color3)", _
        "LSR|(intensity)|(color1)", _
        "LSL|(intensity)|(color2)" _
        )
    End With
    With .AddStep(Null, Null, 0.1)
        .Lights = Array( _
        "LPF|(intensity)|(color2)", _
        "LX|(intensity)|(color3)", _
        "LS5|(intensity)|(color1)", _
        "LS1|(intensity)|(color2)", _
        "LS2|(intensity)|(color2)", _
        "LS3|(intensity)|(color3)", _
        "LS4|(intensity)|(color1)", _
        "LS6|(intensity)|(color2)", _
        "LSwC3|(intensity)|(color3)", _
        "LSwC2|(intensity)|(color1)", _
        "LSwC1|(intensity)|(color2)", _
        "LCWiz|(intensity)|(color3)", _
        "LLWiz|(intensity)|(color1)", _
        "LC1|(intensity)|(color2)", _
        "LC2|(intensity)|(color3)", _
        "LC3|(intensity)|(color1)", _
        "LC4|(intensity)|(color2)", _
        "LC5|(intensity)|(color3)", _
        "LC6|(intensity)|(color1)", _
        "LC7|(intensity)|(color2)", _
        "LC8|(intensity)|(color3)", _
        "LWiz|(intensity)|(color1)", _
        "LW9|(intensity)|(color2)", _
        "LW8|(intensity)|(color3)", _
        "LW7|(intensity)|(color1)", _
        "LW6|(intensity)|(color2)", _
        "LW5|(intensity)|(color3)", _
        "LW4|(intensity)|(color1)", _
        "LW3|(intensity)|(color2)", _
        "LW2|(intensity)|(color3)", _
        "LW1|(intensity)|(color1)", _
        "LMLR|(intensity)|(color2)", _
        "LEBR|(intensity)|(color3)", _
        "LMR|(intensity)|(color1)", _
        "LPC5|(intensity)|(color2)", _
        "LPC4|(intensity)|(color3)", _
        "LSC3|(intensity)|(color2)", _
        "LSC2|(intensity)|(color3)", _
        "LSC1|(intensity)|(color1)", _
        "LF3|(intensity)|(color2)", _
        "LF2|(intensity)|(color3)", _
        "LF1|(intensity)|(color1)", _
        "LPC3|(intensity)|(color2)", _
        "LPC2|(intensity)|(color3)", _
        "LPC1|(intensity)|(color1)", _
        "LTW2|(intensity)|(color1)", _
        "LTW1|(intensity)|(color2)", _
        "LCC3|(intensity)|(color3)", _
        "LCC2|(intensity)|(color1)", _
        "LCC1|(intensity)|(color2)", _
        "LMet4|(intensity)|(color3)", _
        "LMet3|(intensity)|(color1)", _
        "LMet2|(intensity)|(color2)", _
        "LMet1|(intensity)|(color3)", _
        "LM5|(intensity)|(color1)", _
        "LM4|(intensity)|(color2)", _
        "LM3|(intensity)|(color3)", _
        "LM2|(intensity)|(color1)", _
        "LM1|(intensity)|(color2)", _
        "LSA|(intensity)|(color3)", _
        "LH9|(intensity)|(color1)", _
        "LH8|(intensity)|(color2)", _
        "LH7|(intensity)|(color3)", _
        "LH6|(intensity)|(color1)", _
        "LH5|(intensity)|(color2)", _
        "LH4|(intensity)|(color3)", _
        "LH3|(intensity)|(color1)", _
        "LH2|(intensity)|(color2)", _
        "LH1|(intensity)|(color3)", _
        "LPR1|(intensity)|(color1)", _
        "LPR3|(intensity)|(color2)", _
        "LPR2|(intensity)|(color3)", _
        "LPR6|(intensity)|(color1)", _
        "LPR5|(intensity)|(color2)", _
        "LPR4|(intensity)|(color3)", _
        "LMR2|(intensity)|(color1)", _
        "LMR1|(intensity)|(color2)", _
        "LCR2|(intensity)|(color3)", _
        "LCR1|(intensity)|(color1)", _
        "LRI|(intensity)|(color2)", _
        "LRO|(intensity)|(color3)", _
        "LLI|(intensity)|(color1)", _
        "LLO|(intensity)|(color2)", _
        "LSR|(intensity)|(color3)", _
        "LSL|(intensity)|(color1)" _
        )
    End With
End With


With CreateGlfShow("insert_gi_spin_center")
  With .AddStep(0.00000, Null, Null)
    .Lights = Array( _
       "LLI|(intensity)|000000", _
      "LLO|(intensity)|000000", _
      "gi04|(intensity)|000000", _
      "LCWiz|(intensity)|(color)", _
      "LLWiz|(intensity)|(color)", _
      "LMR1|(intensity)|(color)", _
      "LCR1|(intensity)|(color)", _
      "LRI|(intensity)|(color)", _
      "LRO|(intensity)|(color)", _
      "LLI|(intensity)|(color)", _
      "LLO|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.03333, Null, Null)
    .Lights = Array( _
      "gi08|(intensity)|(color)", _
      "LLWiz|(intensity)|000000", _
      "LCR1|(intensity)|000000", _
      "LLI|(intensity)|000000", _
      "LLO|(intensity)|000000" _
      )
  End With
  With .AddStep(0.06667, Null, Null)
    .Lights = Array( _
      "gi09|(intensity)|(color)", _
      "gi07|(intensity)|(color)", _
      "LS1|(intensity)|(color)", _
      "LMR2|(intensity)|(color)", _
      "LSR|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "gi06|(intensity)|(color)", _
      "LM1|(intensity)|(color)", _
      "LRI|(intensity)|000000", _
      "LRO|(intensity)|000000" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "gi09|(intensity)|000000", _
      "gi08|(intensity)|000000", _
      "gi05|(intensity)|(color)", _
      "LC8|(intensity)|(color)", _
      "LWiz|(intensity)|(color)", _
      "LPR1|(intensity)|(color)", _
      "LSR|(intensity)|000000" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "gi12|(intensity)|(color)", _
      "gi11|(intensity)|(color)", _
      "gi07|(intensity)|000000", _
      "gi06|(intensity)|000000", _
      "LS1|(intensity)|000000", _
      "LS2|(intensity)|(color)", _
      "LCWiz|(intensity)|000000", _
      "LC6|(intensity)|(color)", _
      "LC7|(intensity)|(color)", _
      "LCC3|(intensity)|(color)", _
      "LMet1|(intensity)|(color)", _
      "LH9|(intensity)|(color)", _
      "LH8|(intensity)|(color)", _
      "LH7|(intensity)|(color)", _
      "LPR3|(intensity)|(color)", _
      "LPR6|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|(color)", _
      "gi21|(intensity)|(color)", _
      "gi18|(intensity)|(color)", _
      "gi16|(intensity)|(color)", _
      "gi12|(intensity)|000000", _
      "gi11|(intensity)|000000", _
      "gi05|(intensity)|000000", _
      "LS3|(intensity)|(color)", _
      "LC5|(intensity)|(color)", _
      "LW9|(intensity)|(color)", _
      "LW8|(intensity)|(color)", _
      "LTW2|(intensity)|(color)", _
      "LTW1|(intensity)|(color)", _
      "LCC2|(intensity)|(color)", _
      "LCC1|(intensity)|(color)", _
      "LMet2|(intensity)|(color)", _
      "LM1|(intensity)|000000", _
      "LH6|(intensity)|(color)", _
      "LH5|(intensity)|(color)", _
      "LPR2|(intensity)|(color)", _
      "LPR5|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|(color)", _
      "gi20|(intensity)|000000", _
      "gi21|(intensity)|000000", _
      "gi18|(intensity)|000000", _
      "gi16|(intensity)|000000", _
      "LS2|(intensity)|000000", _
      "LSwC1|(intensity)|(color)", _
      "LC3|(intensity)|(color)", _
      "LC4|(intensity)|(color)", _
      "LC8|(intensity)|000000", _
      "LW7|(intensity)|(color)", _
      "LW6|(intensity)|(color)", _
      "LW5|(intensity)|(color)", _
      "LW4|(intensity)|(color)", _
      "LW3|(intensity)|(color)", _
      "LW2|(intensity)|(color)", _
      "LW1|(intensity)|(color)", _
      "LPC4|(intensity)|(color)", _
      "LPC3|(intensity)|(color)", _
      "LPC2|(intensity)|(color)", _
      "LPC1|(intensity)|(color)", _
      "LTW1|(intensity)|000000", _
      "LCC3|(intensity)|000000", _
      "LCC2|(intensity)|000000", _
      "LCC1|(intensity)|000000", _
      "LMet1|(intensity)|000000", _
      "LM2|(intensity)|(color)", _
      "LSA|(intensity)|(color)", _
      "LH9|(intensity)|000000", _
      "LH4|(intensity)|(color)", _
      "LPR4|(intensity)|(color)", _
      "LMR1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|(color)", _
      "LX|(intensity)|(color)", _
      "LS3|(intensity)|000000", _
      "LS4|(intensity)|(color)", _
      "LSwC3|(intensity)|(color)", _
      "LSwC1|(intensity)|000000", _
      "LC1|(intensity)|(color)", _
      "LC2|(intensity)|(color)", _
      "LC7|(intensity)|000000", _
      "LEBR|(intensity)|(color)", _
      "LMR|(intensity)|(color)", _
      "LPC5|(intensity)|(color)", _
      "LPC4|(intensity)|000000", _
      "LPC3|(intensity)|000000", _
      "LPC2|(intensity)|000000", _
      "LPC1|(intensity)|000000", _
      "LTW2|(intensity)|000000", _
      "LMet3|(intensity)|(color)", _
      "LMet2|(intensity)|000000", _
      "LM4|(intensity)|(color)", _
      "LM2|(intensity)|000000", _
      "LH8|(intensity)|000000", _
      "LH7|(intensity)|000000", _
      "LH3|(intensity)|(color)", _
      "LH2|(intensity)|(color)", _
      "LMR2|(intensity)|000000", _
      "LCR2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|(color)", _
      "giapron|(intensity)|000000", _
      "gi22|(intensity)|000000", _
      "gi13|(intensity)|(color)", _
      "LX|(intensity)|000000", _
      "LS5|(intensity)|(color)", _
      "LS4|(intensity)|000000", _
      "LSwC3|(intensity)|000000", _
      "LC5|(intensity)|000000", _
      "LC6|(intensity)|000000", _
      "LW7|(intensity)|000000", _
      "LW6|(intensity)|000000", _
      "LW5|(intensity)|000000", _
      "LW4|(intensity)|000000", _
      "LW3|(intensity)|000000", _
      "LW2|(intensity)|000000", _
      "LW1|(intensity)|000000", _
      "LMLR|(intensity)|(color)", _
      "LEBR|(intensity)|000000", _
      "LMR|(intensity)|000000", _
      "LPC5|(intensity)|000000", _
      "LMet4|(intensity)|(color)", _
      "LM5|(intensity)|(color)", _
      "LM4|(intensity)|000000", _
      "LSA|(intensity)|000000", _
      "LH6|(intensity)|000000", _
      "LH5|(intensity)|000000", _
      "LH1|(intensity)|(color)", _
      "LPR6|(intensity)|000000", _
      "LCR1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|000000", _
      "gi19|(intensity)|(color)", _
      "gi15|(intensity)|(color)", _
      "gi13|(intensity)|000000", _
      "gi03|(intensity)|(color)", _
      "gi01|(intensity)|(color)", _
      "LS5|(intensity)|000000", _
      "LS6|(intensity)|(color)", _
      "LC3|(intensity)|000000", _
      "LC4|(intensity)|000000", _
      "LW9|(intensity)|000000", _
      "LW8|(intensity)|000000", _
      "LMLR|(intensity)|000000", _
      "LSC1|(intensity)|(color)", _
      "LF3|(intensity)|(color)", _
      "LF2|(intensity)|(color)", _
      "LF1|(intensity)|(color)", _
      "LMet3|(intensity)|000000", _
      "LM5|(intensity)|000000", _
      "LH4|(intensity)|000000", _
      "LH3|(intensity)|000000", _
      "LPR3|(intensity)|000000", _
      "LPR5|(intensity)|000000" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|000000", _
      "gi15|(intensity)|000000", _
      "gi14|(intensity)|(color)", _
      "gi02|(intensity)|(color)", _
      "LS6|(intensity)|000000", _
      "LLWiz|(intensity)|(color)", _
      "LC1|(intensity)|000000", _
      "LC2|(intensity)|000000", _
      "LSC3|(intensity)|(color)", _
      "LSC2|(intensity)|(color)", _
      "LF3|(intensity)|000000", _
      "LF2|(intensity)|000000", _
      "LF1|(intensity)|000000", _
      "LH2|(intensity)|000000", _
      "LH1|(intensity)|000000", _
      "LPR4|(intensity)|000000" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "gi14|(intensity)|000000", _
      "gi10|(intensity)|(color)", _
      "gi04|(intensity)|(color)", _
      "gi01|(intensity)|000000", _
      "LWiz|(intensity)|000000", _
      "LSC1|(intensity)|000000", _
      "LMet4|(intensity)|000000", _
      "LPR1|(intensity)|000000", _
      "LPR2|(intensity)|000000", _
      "LSL|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "gi02|(intensity)|000000", _
      "LSC3|(intensity)|000000", _
      "LSC2|(intensity)|000000", _
      "LLI|(intensity)|(color)", _
      "LLO|(intensity)|(color)", _
      "LSL|(intensity)|000000" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
    .Lights = Array( _
      "gi10|(intensity)|000000", _
      "gi03|(intensity)|000000", _
      "LCR2|(intensity)|000000" _
      )
  End With
  With .AddStep(0.50000, Null, Null)
    .Lights = Array( _
      "gi04|(intensity)|000000", _
      "LCWiz|(intensity)|(color)", _
      "LMR1|(intensity)|(color)", _
      "LRI|(intensity)|(color)", _
      "LRO|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.53333, Null, Null)
    .Lights = Array( _
      "gi08|(intensity)|(color)", _
      "LLWiz|(intensity)|000000", _
      "LCR1|(intensity)|000000", _
      "LLI|(intensity)|000000", _
      "LLO|(intensity)|000000" _
      )
  End With
  With .AddStep(0.56667, Null, Null)
    .Lights = Array( _
      "gi09|(intensity)|(color)", _
      "gi07|(intensity)|(color)", _
      "LS1|(intensity)|(color)", _
      "LMR2|(intensity)|(color)", _
      "LSR|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.60000, Null, Null)
    .Lights = Array( _
      "gi06|(intensity)|(color)", _
      "LM1|(intensity)|(color)", _
      "LRI|(intensity)|000000", _
      "LRO|(intensity)|000000" _
      )
  End With
  With .AddStep(0.63333, Null, Null)
    .Lights = Array( _
      "gi09|(intensity)|000000", _
      "gi08|(intensity)|000000", _
      "gi05|(intensity)|(color)", _
      "LC8|(intensity)|(color)", _
      "LWiz|(intensity)|(color)", _
      "LPR1|(intensity)|(color)", _
      "LSR|(intensity)|000000" _
      )
  End With
  With .AddStep(0.66667, Null, Null)
    .Lights = Array( _
      "gi12|(intensity)|(color)", _
      "gi11|(intensity)|(color)", _
      "gi07|(intensity)|000000", _
      "gi06|(intensity)|000000", _
      "LS1|(intensity)|000000", _
      "LS2|(intensity)|(color)", _
      "LCWiz|(intensity)|000000", _
      "LC6|(intensity)|(color)", _
      "LC7|(intensity)|(color)", _
      "LCC3|(intensity)|(color)", _
      "LMet1|(intensity)|(color)", _
      "LH9|(intensity)|(color)", _
      "LH8|(intensity)|(color)", _
      "LH7|(intensity)|(color)", _
      "LPR3|(intensity)|(color)", _
      "LPR6|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.70000, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|(color)", _
      "gi21|(intensity)|(color)", _
      "gi18|(intensity)|(color)", _
      "gi16|(intensity)|(color)", _
      "gi12|(intensity)|000000", _
      "gi11|(intensity)|000000", _
      "gi05|(intensity)|000000", _
      "LS3|(intensity)|(color)", _
      "LC5|(intensity)|(color)", _
      "LW9|(intensity)|(color)", _
      "LW8|(intensity)|(color)", _
      "LTW2|(intensity)|(color)", _
      "LTW1|(intensity)|(color)", _
      "LCC2|(intensity)|(color)", _
      "LCC1|(intensity)|(color)", _
      "LMet2|(intensity)|(color)", _
      "LM1|(intensity)|000000", _
      "LH6|(intensity)|(color)", _
      "LH5|(intensity)|(color)", _
      "LPR2|(intensity)|(color)", _
      "LPR5|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.73333, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|(color)", _
      "gi20|(intensity)|000000", _
      "gi21|(intensity)|000000", _
      "gi18|(intensity)|000000", _
      "gi16|(intensity)|000000", _
      "LS2|(intensity)|000000", _
      "LSwC1|(intensity)|(color)", _
      "LC3|(intensity)|(color)", _
      "LC4|(intensity)|(color)", _
      "LC8|(intensity)|000000", _
      "LW7|(intensity)|(color)", _
      "LW6|(intensity)|(color)", _
      "LW5|(intensity)|(color)", _
      "LW4|(intensity)|(color)", _
      "LW3|(intensity)|(color)", _
      "LW2|(intensity)|(color)", _
      "LW1|(intensity)|(color)", _
      "LPC4|(intensity)|(color)", _
      "LPC3|(intensity)|(color)", _
      "LPC2|(intensity)|(color)", _
      "LPC1|(intensity)|(color)", _
      "LTW1|(intensity)|000000", _
      "LCC3|(intensity)|000000", _
      "LCC2|(intensity)|000000", _
      "LCC1|(intensity)|000000", _
      "LMet1|(intensity)|000000", _
      "LM2|(intensity)|(color)", _
      "LSA|(intensity)|(color)", _
      "LH9|(intensity)|000000", _
      "LH4|(intensity)|(color)", _
      "LPR4|(intensity)|(color)", _
      "LMR1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.76667, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|(color)", _
      "LX|(intensity)|(color)", _
      "LS3|(intensity)|000000", _
      "LS4|(intensity)|(color)", _
      "LSwC3|(intensity)|(color)", _
      "LSwC1|(intensity)|000000", _
      "LC1|(intensity)|(color)", _
      "LC2|(intensity)|(color)", _
      "LC7|(intensity)|000000", _
      "LEBR|(intensity)|(color)", _
      "LMR|(intensity)|(color)", _
      "LPC5|(intensity)|(color)", _
      "LPC4|(intensity)|000000", _
      "LPC3|(intensity)|000000", _
      "LPC2|(intensity)|000000", _
      "LPC1|(intensity)|000000", _
      "LTW2|(intensity)|000000", _
      "LMet3|(intensity)|(color)", _
      "LMet2|(intensity)|000000", _
      "LM4|(intensity)|(color)", _
      "LM2|(intensity)|000000", _
      "LH8|(intensity)|000000", _
      "LH7|(intensity)|000000", _
      "LH3|(intensity)|(color)", _
      "LH2|(intensity)|(color)", _
      "LMR2|(intensity)|000000", _
      "LCR2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.80000, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|(color)", _
      "giapron|(intensity)|000000", _
      "gi22|(intensity)|000000", _
      "gi13|(intensity)|(color)", _
      "LX|(intensity)|000000", _
      "LS5|(intensity)|(color)", _
      "LS4|(intensity)|000000", _
      "LSwC3|(intensity)|000000", _
      "LC5|(intensity)|000000", _
      "LC6|(intensity)|000000", _
      "LW7|(intensity)|000000", _
      "LW6|(intensity)|000000", _
      "LW5|(intensity)|000000", _
      "LW4|(intensity)|000000", _
      "LW3|(intensity)|000000", _
      "LW2|(intensity)|000000", _
      "LW1|(intensity)|000000", _
      "LMLR|(intensity)|(color)", _
      "LEBR|(intensity)|000000", _
      "LMR|(intensity)|000000", _
      "LPC5|(intensity)|000000", _
      "LMet4|(intensity)|(color)", _
      "LM5|(intensity)|(color)", _
      "LM4|(intensity)|000000", _
      "LSA|(intensity)|000000", _
      "LH6|(intensity)|000000", _
      "LH5|(intensity)|000000", _
      "LH1|(intensity)|(color)", _
      "LPR6|(intensity)|000000", _
      "LCR1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.83333, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|000000", _
      "gi19|(intensity)|(color)", _
      "gi15|(intensity)|(color)", _
      "gi13|(intensity)|000000", _
      "gi03|(intensity)|(color)", _
      "gi01|(intensity)|(color)", _
      "LS5|(intensity)|000000", _
      "LS6|(intensity)|(color)", _
      "LC3|(intensity)|000000", _
      "LC4|(intensity)|000000", _
      "LW9|(intensity)|000000", _
      "LW8|(intensity)|000000", _
      "LMLR|(intensity)|000000", _
      "LSC1|(intensity)|(color)", _
      "LF3|(intensity)|(color)", _
      "LF2|(intensity)|(color)", _
      "LF1|(intensity)|(color)", _
      "LMet3|(intensity)|000000", _
      "LM5|(intensity)|000000", _
      "LH4|(intensity)|000000", _
      "LH3|(intensity)|000000", _
      "LPR3|(intensity)|000000", _
      "LPR5|(intensity)|000000" _
      )
  End With
  With .AddStep(0.86667, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|000000", _
      "gi15|(intensity)|000000", _
      "gi14|(intensity)|(color)", _
      "gi02|(intensity)|(color)", _
      "LS6|(intensity)|000000", _
      "LLWiz|(intensity)|(color)", _
      "LC1|(intensity)|000000", _
      "LC2|(intensity)|000000", _
      "LSC3|(intensity)|(color)", _
      "LSC2|(intensity)|(color)", _
      "LF3|(intensity)|000000", _
      "LF2|(intensity)|000000", _
      "LF1|(intensity)|000000", _
      "LH2|(intensity)|000000", _
      "LH1|(intensity)|000000", _
      "LPR4|(intensity)|000000" _
      )
  End With
  With .AddStep(0.90000, Null, Null)
    .Lights = Array( _
      "gi14|(intensity)|000000", _
      "gi10|(intensity)|(color)", _
      "gi04|(intensity)|(color)", _
      "gi01|(intensity)|000000", _
      "LWiz|(intensity)|000000", _
      "LSC1|(intensity)|000000", _
      "LMet4|(intensity)|000000", _
      "LPR1|(intensity)|000000", _
      "LPR2|(intensity)|000000", _
      "LSL|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.93333, Null, Null)
    .Lights = Array( _
      "gi02|(intensity)|000000", _
      "LSC3|(intensity)|000000", _
      "LSC2|(intensity)|000000", _
      "LLI|(intensity)|(color)", _
      "LLO|(intensity)|(color)", _
      "LSL|(intensity)|000000" _
      )
  End With
  With .AddStep(0.96667, Null, 0.03333)
    .Lights = Array( _
      "gi10|(intensity)|000000", _
      "gi03|(intensity)|000000", _
      "LCR2|(intensity)|000000" _
      )
  End With
End With


With CreateGlfShow("insert_gi_spin_right")
  With .AddStep(0.00000, Null, Null)
    .Lights = Array( _
      "LW7|(intensity)|000000", _
      "LW6|(intensity)|000000", _
      "LMet3|(intensity)|000000", _
      "LMet1|(intensity)|000000", _
      "LM1|(intensity)|000000", _
      "LW5|(intensity)|000000", _
      "gi14|(intensity)|(color)", _
      "LS2|(intensity)|(color)", _
      "LW6|(intensity)|(color)", _
      "LW5|(intensity)|(color)", _
      "LW4|(intensity)|(color)", _
      "LMet3|(intensity)|(color)", _
      "LMet2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.03333, Null, Null)
    .Lights = Array( _
      "gi11|(intensity)|(color)", _
      "LS3|(intensity)|(color)", _
      "LS6|(intensity)|(color)", _
      "LW6|(intensity)|000000", _
      "LW3|(intensity)|(color)", _
      "LTW1|(intensity)|(color)", _
      "LCC3|(intensity)|(color)", _
      "LCC2|(intensity)|(color)", _
      "LMet3|(intensity)|000000" _
      )
  End With
  With .AddStep(0.06667, Null, Null)
    .Lights = Array( _
      "gi18|(intensity)|(color)", _
      "gi12|(intensity)|(color)", _
      "gi11|(intensity)|000000", _
      "LS2|(intensity)|000000", _
      "LS3|(intensity)|000000", _
      "LS4|(intensity)|(color)", _
      "LW5|(intensity)|000000", _
      "LW2|(intensity)|(color)", _
      "LW1|(intensity)|(color)", _
      "LTW2|(intensity)|(color)", _
      "LCC3|(intensity)|000000", _
      "LCC2|(intensity)|000000", _
      "LCC1|(intensity)|(color)", _
      "LMet2|(intensity)|000000" _
      )
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|(color)", _
      "gi18|(intensity)|000000", _
      "gi12|(intensity)|000000", _
      "LS5|(intensity)|(color)", _
      "LW4|(intensity)|000000", _
      "LW3|(intensity)|000000", _
      "LPC3|(intensity)|(color)", _
      "LPC2|(intensity)|(color)", _
      "LPC1|(intensity)|(color)", _
      "LTW2|(intensity)|000000", _
      "LTW1|(intensity)|000000", _
      "LCC1|(intensity)|000000", _
      "LM2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|000000", _
      "gi21|(intensity)|(color)", _
      "gi16|(intensity)|(color)", _
      "LPF|(intensity)|(color)", _
      "LX|(intensity)|(color)", _
      "LSwC1|(intensity)|(color)", _
      "LW2|(intensity)|000000", _
      "LW1|(intensity)|000000", _
      "LMLR|(intensity)|(color)", _
      "LEBR|(intensity)|(color)", _
      "LPC4|(intensity)|(color)", _
      "LM3|(intensity)|(color)", _
      "LM2|(intensity)|000000" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "gi21|(intensity)|000000", _
      "gi16|(intensity)|000000", _
      "LPF|(intensity)|000000", _
      "LS4|(intensity)|000000", _
      "LSwC3|(intensity)|(color)", _
      "LSwC2|(intensity)|(color)", _
      "LSwC1|(intensity)|000000", _
      "LMR|(intensity)|(color)", _
      "LPC5|(intensity)|(color)", _
      "LPC4|(intensity)|000000", _
      "LPC3|(intensity)|000000", _
      "LPC2|(intensity)|000000", _
      "LPC1|(intensity)|000000", _
      "LM5|(intensity)|(color)", _
      "LM4|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|(color)", _
      "gi13|(intensity)|(color)", _
      "gi10|(intensity)|(color)", _
      "LX|(intensity)|000000", _
      "LS5|(intensity)|000000", _
      "LSwC2|(intensity)|000000", _
      "LEBR|(intensity)|000000", _
      "LMR|(intensity)|000000", _
      "LPC5|(intensity)|000000", _
      "LF3|(intensity)|(color)", _
      "LF2|(intensity)|(color)", _
      "LM4|(intensity)|000000", _
      "LM3|(intensity)|000000" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|000000", _
      "gi19|(intensity)|(color)", _
      "LSwC3|(intensity)|000000", _
      "LMLR|(intensity)|000000", _
      "LF1|(intensity)|(color)", _
      "LRO|(intensity)|(color)", _
      "LSR|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|(color)", _
      "gi15|(intensity)|(color)", _
      "gi13|(intensity)|000000", _
      "gi08|(intensity)|(color)", _
      "gi07|(intensity)|(color)", _
      "gi06|(intensity)|(color)", _
      "gi05|(intensity)|(color)", _
      "LSC3|(intensity)|(color)", _
      "LSC2|(intensity)|(color)", _
      "LSC1|(intensity)|(color)", _
      "LM5|(intensity)|000000", _
      "LRI|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|000000", _
      "giapron|(intensity)|(color)", _
      "gi06|(intensity)|000000", _
      "gi05|(intensity)|000000", _
      "LS6|(intensity)|000000", _
      "LLWiz|(intensity)|(color)", _
      "LC6|(intensity)|(color)", _
      "LC7|(intensity)|(color)", _
      "LC8|(intensity)|(color)", _
      "LF3|(intensity)|000000", _
      "LF2|(intensity)|000000", _
      "LF1|(intensity)|000000", _
      "LSA|(intensity)|(color)", _
      "LH9|(intensity)|(color)", _
      "LH8|(intensity)|(color)", _
      "LH7|(intensity)|(color)", _
      "LH6|(intensity)|(color)", _
      "LPR6|(intensity)|(color)", _
      "LMR2|(intensity)|(color)", _
      "LMR1|(intensity)|(color)", _
      "LRI|(intensity)|000000", _
      "LRO|(intensity)|000000", _
      "LSR|(intensity)|000000" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|000000", _
      "gi15|(intensity)|000000", _
      "gi10|(intensity)|000000", _
      "gi08|(intensity)|000000", _
      "gi07|(intensity)|000000", _
      "LC1|(intensity)|(color)", _
      "LC2|(intensity)|(color)", _
      "LC3|(intensity)|(color)", _
      "LC4|(intensity)|(color)", _
      "LC5|(intensity)|(color)", _
      "LC6|(intensity)|000000", _
      "LC7|(intensity)|000000", _
      "LC8|(intensity)|000000", _
      "LMet4|(intensity)|(color)", _
      "LSA|(intensity)|000000", _
      "LH9|(intensity)|000000", _
      "LH8|(intensity)|000000", _
      "LH7|(intensity)|000000", _
      "LH6|(intensity)|000000", _
      "LH5|(intensity)|(color)", _
      "LH4|(intensity)|(color)", _
      "LH3|(intensity)|(color)", _
      "LH2|(intensity)|(color)", _
      "LH1|(intensity)|(color)", _
      "LPR1|(intensity)|(color)", _
      "LPR3|(intensity)|(color)", _
      "LPR2|(intensity)|(color)", _
      "LPR5|(intensity)|(color)", _
      "LPR4|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "gi04|(intensity)|(color)", _
      "gi03|(intensity)|(color)", _
      "gi02|(intensity)|(color)", _
      "LLWiz|(intensity)|000000", _
      "LC1|(intensity)|000000", _
      "LC2|(intensity)|000000", _
      "LC3|(intensity)|000000", _
      "LC4|(intensity)|000000", _
      "LC5|(intensity)|000000", _
      "LWiz|(intensity)|(color)", _
      "LW9|(intensity)|(color)", _
      "LSC3|(intensity)|000000", _
      "LH5|(intensity)|000000", _
      "LH4|(intensity)|000000", _
      "LH3|(intensity)|000000", _
      "LH2|(intensity)|000000", _
      "LH1|(intensity)|000000", _
      "LPR1|(intensity)|000000", _
      "LPR3|(intensity)|000000", _
      "LPR2|(intensity)|000000", _
      "LPR6|(intensity)|000000", _
      "LPR5|(intensity)|000000", _
      "LPR4|(intensity)|000000", _
      "LMR2|(intensity)|000000", _
      "LMR1|(intensity)|000000", _
      "LCR2|(intensity)|(color)", _
      "LCR1|(intensity)|(color)", _
      "LSL|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|000000", _
      "gi04|(intensity)|000000", _
      "gi03|(intensity)|000000", _
      "gi02|(intensity)|000000", _
      "LCWiz|(intensity)|(color)", _
      "LW8|(intensity)|(color)", _
      "LSC2|(intensity)|000000", _
      "LCR2|(intensity)|000000", _
      "LCR1|(intensity)|000000", _
      "LLI|(intensity)|(color)", _
      "LLO|(intensity)|(color)", _
      "LSL|(intensity)|000000" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "gi09|(intensity)|(color)", _
      "LS1|(intensity)|(color)", _
      "LCWiz|(intensity)|000000", _
      "LWiz|(intensity)|000000", _
      "LW9|(intensity)|000000", _
      "LW7|(intensity)|(color)", _
      "LW6|(intensity)|(color)", _
      "LMet3|(intensity)|(color)", _
      "LMet1|(intensity)|(color)", _
      "LM1|(intensity)|(color)", _
      "LLI|(intensity)|000000", _
      "LLO|(intensity)|000000" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
    .Lights = Array( _
      "gi09|(intensity)|000000", _
      "LS1|(intensity)|000000", _
      "LW8|(intensity)|000000", _
      "LW5|(intensity)|(color)", _
      "LSC1|(intensity)|000000", _
      "LMet4|(intensity)|000000" _
      )
  End With
  With .AddStep(0.50000, Null, Null)
    .Lights = Array( _
      "LS2|(intensity)|(color)", _
      "LW7|(intensity)|000000", _
      "LW4|(intensity)|(color)", _
      "LMet2|(intensity)|(color)", _
      "LMet1|(intensity)|000000", _
      "LM1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.53333, Null, Null)
    .Lights = Array( _
      "gi11|(intensity)|(color)", _
      "LS3|(intensity)|(color)", _
      "LS6|(intensity)|(color)", _
      "LW6|(intensity)|000000", _
      "LW3|(intensity)|(color)", _
      "LTW1|(intensity)|(color)", _
      "LCC3|(intensity)|(color)", _
      "LCC2|(intensity)|(color)", _
      "LMet3|(intensity)|000000" _
      )
  End With
  With .AddStep(0.56667, Null, Null)
    .Lights = Array( _
      "gi18|(intensity)|(color)", _
      "gi12|(intensity)|(color)", _
      "gi11|(intensity)|000000", _
      "LS2|(intensity)|000000", _
      "LS3|(intensity)|000000", _
      "LS4|(intensity)|(color)", _
      "LW5|(intensity)|000000", _
      "LW2|(intensity)|(color)", _
      "LW1|(intensity)|(color)", _
      "LTW2|(intensity)|(color)", _
      "LCC3|(intensity)|000000", _
      "LCC2|(intensity)|000000", _
      "LCC1|(intensity)|(color)", _
      "LMet2|(intensity)|000000" _
      )
  End With
  With .AddStep(0.60000, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|(color)", _
      "gi18|(intensity)|000000", _
      "gi12|(intensity)|000000", _
      "LS5|(intensity)|(color)", _
      "LW4|(intensity)|000000", _
      "LW3|(intensity)|000000", _
      "LPC3|(intensity)|(color)", _
      "LPC2|(intensity)|(color)", _
      "LPC1|(intensity)|(color)", _
      "LTW2|(intensity)|000000", _
      "LTW1|(intensity)|000000", _
      "LCC1|(intensity)|000000", _
      "LM2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.63333, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|000000", _
      "gi21|(intensity)|(color)", _
      "gi16|(intensity)|(color)", _
      "LPF|(intensity)|(color)", _
      "LX|(intensity)|(color)", _
      "LSwC1|(intensity)|(color)", _
      "LW2|(intensity)|000000", _
      "LW1|(intensity)|000000", _
      "LMLR|(intensity)|(color)", _
      "LEBR|(intensity)|(color)", _
      "LPC4|(intensity)|(color)", _
      "LM3|(intensity)|(color)", _
      "LM2|(intensity)|000000" _
      )
  End With
  With .AddStep(0.66667, Null, Null)
    .Lights = Array( _
      "gi21|(intensity)|000000", _
      "gi16|(intensity)|000000", _
      "LPF|(intensity)|000000", _
      "LS4|(intensity)|000000", _
      "LSwC3|(intensity)|(color)", _
      "LSwC2|(intensity)|(color)", _
      "LSwC1|(intensity)|000000", _
      "LMR|(intensity)|(color)", _
      "LPC5|(intensity)|(color)", _
      "LPC4|(intensity)|000000", _
      "LPC3|(intensity)|000000", _
      "LPC2|(intensity)|000000", _
      "LPC1|(intensity)|000000", _
      "LM5|(intensity)|(color)", _
      "LM4|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.70000, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|(color)", _
      "gi13|(intensity)|(color)", _
      "gi10|(intensity)|(color)", _
      "LX|(intensity)|000000", _
      "LS5|(intensity)|000000", _
      "LSwC2|(intensity)|000000", _
      "LEBR|(intensity)|000000", _
      "LMR|(intensity)|000000", _
      "LPC5|(intensity)|000000", _
      "LF3|(intensity)|(color)", _
      "LF2|(intensity)|(color)", _
      "LM4|(intensity)|000000", _
      "LM3|(intensity)|000000" _
      )
  End With
  With .AddStep(0.73333, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|000000", _
      "gi19|(intensity)|(color)", _
      "LSwC3|(intensity)|000000", _
      "LMLR|(intensity)|000000", _
      "LF1|(intensity)|(color)", _
      "LRO|(intensity)|(color)", _
      "LSR|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.76667, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|(color)", _
      "gi15|(intensity)|(color)", _
      "gi13|(intensity)|000000", _
      "gi08|(intensity)|(color)", _
      "gi07|(intensity)|(color)", _
      "gi06|(intensity)|(color)", _
      "gi05|(intensity)|(color)", _
      "LSC3|(intensity)|(color)", _
      "LSC2|(intensity)|(color)", _
      "LSC1|(intensity)|(color)", _
      "LM5|(intensity)|000000", _
      "LRI|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.80000, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|000000", _
      "giapron|(intensity)|(color)", _
      "gi06|(intensity)|000000", _
      "gi05|(intensity)|000000", _
      "LS6|(intensity)|000000", _
      "LLWiz|(intensity)|(color)", _
      "LC6|(intensity)|(color)", _
      "LC7|(intensity)|(color)", _
      "LC8|(intensity)|(color)", _
      "LF3|(intensity)|000000", _
      "LF2|(intensity)|000000", _
      "LF1|(intensity)|000000", _
      "LSA|(intensity)|(color)", _
      "LH9|(intensity)|(color)", _
      "LH8|(intensity)|(color)", _
      "LH7|(intensity)|(color)", _
      "LH6|(intensity)|(color)", _
      "LPR6|(intensity)|(color)", _
      "LMR2|(intensity)|(color)", _
      "LMR1|(intensity)|(color)", _
      "LRI|(intensity)|000000", _
      "LRO|(intensity)|000000", _
      "LSR|(intensity)|000000" _
      )
  End With
  With .AddStep(0.83333, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|000000", _
      "gi15|(intensity)|000000", _
      "gi10|(intensity)|000000", _
      "gi08|(intensity)|000000", _
      "gi07|(intensity)|000000", _
      "LC1|(intensity)|(color)", _
      "LC2|(intensity)|(color)", _
      "LC3|(intensity)|(color)", _
      "LC4|(intensity)|(color)", _
      "LC5|(intensity)|(color)", _
      "LC6|(intensity)|000000", _
      "LC7|(intensity)|000000", _
      "LC8|(intensity)|000000", _
      "LMet4|(intensity)|(color)", _
      "LSA|(intensity)|000000", _
      "LH9|(intensity)|000000", _
      "LH8|(intensity)|000000", _
      "LH7|(intensity)|000000", _
      "LH6|(intensity)|000000", _
      "LH5|(intensity)|(color)", _
      "LH4|(intensity)|(color)", _
      "LH3|(intensity)|(color)", _
      "LH2|(intensity)|(color)", _
      "LH1|(intensity)|(color)", _
      "LPR1|(intensity)|(color)", _
      "LPR3|(intensity)|(color)", _
      "LPR2|(intensity)|(color)", _
      "LPR5|(intensity)|(color)", _
      "LPR4|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.86667, Null, Null)
    .Lights = Array( _
      "gi04|(intensity)|(color)", _
      "gi03|(intensity)|(color)", _
      "gi02|(intensity)|(color)", _
      "LLWiz|(intensity)|000000", _
      "LC1|(intensity)|000000", _
      "LC2|(intensity)|000000", _
      "LC3|(intensity)|000000", _
      "LC4|(intensity)|000000", _
      "LC5|(intensity)|000000", _
      "LWiz|(intensity)|(color)", _
      "LW9|(intensity)|(color)", _
      "LSC3|(intensity)|000000", _
      "LH5|(intensity)|000000", _
      "LH4|(intensity)|000000", _
      "LH3|(intensity)|000000", _
      "LH2|(intensity)|000000", _
      "LH1|(intensity)|000000", _
      "LPR1|(intensity)|000000", _
      "LPR3|(intensity)|000000", _
      "LPR2|(intensity)|000000", _
      "LPR6|(intensity)|000000", _
      "LPR5|(intensity)|000000", _
      "LPR4|(intensity)|000000", _
      "LMR2|(intensity)|000000", _
      "LMR1|(intensity)|000000", _
      "LCR2|(intensity)|(color)", _
      "LCR1|(intensity)|(color)", _
      "LSL|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.90000, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|000000", _
      "gi04|(intensity)|000000", _
      "gi03|(intensity)|000000", _
      "gi02|(intensity)|000000", _
      "LCWiz|(intensity)|(color)", _
      "LW8|(intensity)|(color)", _
      "LSC2|(intensity)|000000", _
      "LCR2|(intensity)|000000", _
      "LCR1|(intensity)|000000", _
      "LLI|(intensity)|(color)", _
      "LLO|(intensity)|(color)", _
      "LSL|(intensity)|000000" _
      )
  End With
  With .AddStep(0.93333, Null, Null)
    .Lights = Array( _
      "gi09|(intensity)|(color)", _
      "LS1|(intensity)|(color)", _
      "LCWiz|(intensity)|000000", _
      "LWiz|(intensity)|000000", _
      "LW9|(intensity)|000000", _
      "LW7|(intensity)|(color)", _
      "LW6|(intensity)|(color)", _
      "LMet3|(intensity)|(color)", _
      "LMet1|(intensity)|(color)", _
      "LM1|(intensity)|(color)", _
      "LLI|(intensity)|000000", _
      "LLO|(intensity)|000000" _
      )
  End With
  With .AddStep(0.96667, Null, 0.03333)
    .Lights = Array( _
      "gi09|(intensity)|000000", _
      "LS1|(intensity)|000000", _
      "LW8|(intensity)|000000", _
      "LW5|(intensity)|(color)", _
      "LSC1|(intensity)|000000", _
      "LMet4|(intensity)|000000" _
      )
  End With
End With


With CreateGlfShow("insert_gi_slide_diag")
  With .AddStep(0.00000, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|(color)", _
      "gi18|(intensity)|(color)", _
      "LPF|(intensity)|(color)", _
      "LMR|(intensity)|(color)", _
      "LPC5|(intensity)|(color)", _
      "LPC4|(intensity)|(color)", _
      "LPC1|(intensity)|(color)", _
      "LM4|(intensity)|(color)", _
      "LM3|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.03333, Null, Null)
    .Lights = Array( _
      "gi15|(intensity)|(color)", _
      "gi13|(intensity)|(color)", _
      "LEBR|(intensity)|(color)", _
      "LPC5|(intensity)|000000", _
      "LPC4|(intensity)|000000", _
      "LF1|(intensity)|(color)", _
      "LPC3|(intensity)|(color)", _
      "LPC2|(intensity)|(color)", _
      "LM3|(intensity)|000000" _
      )
  End With
  With .AddStep(0.06667, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|000000", _
      "gi18|(intensity)|000000", _
      "gi12|(intensity)|(color)", _
      "LPF|(intensity)|000000", _
      "LX|(intensity)|(color)", _
      "LS4|(intensity)|(color)", _
      "LMLR|(intensity)|(color)", _
      "LF3|(intensity)|(color)", _
      "LF2|(intensity)|(color)", _
      "LM5|(intensity)|(color)", _
      "LM4|(intensity)|000000", _
      "LM2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "gi13|(intensity)|000000", _
      "LS5|(intensity)|(color)", _
      "LW2|(intensity)|(color)", _
      "LW1|(intensity)|(color)", _
      "LEBR|(intensity)|000000", _
      "LMR|(intensity)|000000", _
      "LF1|(intensity)|000000", _
      "LPC2|(intensity)|000000", _
      "LPC1|(intensity)|000000", _
      "LTW2|(intensity)|(color)", _
      "LTW1|(intensity)|(color)", _
      "LCC2|(intensity)|(color)", _
      "LCC1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|(color)", _
      "gi15|(intensity)|000000", _
      "gi11|(intensity)|(color)", _
      "LX|(intensity)|000000", _
      "LS3|(intensity)|(color)", _
      "LS6|(intensity)|(color)", _
      "LW3|(intensity)|(color)", _
      "LMLR|(intensity)|000000", _
      "LF2|(intensity)|000000", _
      "LPC3|(intensity)|000000", _
      "LCC3|(intensity)|(color)", _
      "LM2|(intensity)|000000" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "gi12|(intensity)|000000", _
      "LS5|(intensity)|000000", _
      "LS2|(intensity)|(color)", _
      "LS4|(intensity)|000000", _
      "LW4|(intensity)|(color)", _
      "LW1|(intensity)|000000", _
      "LF3|(intensity)|000000", _
      "LTW2|(intensity)|000000", _
      "LTW1|(intensity)|000000", _
      "LCC1|(intensity)|000000", _
      "LM5|(intensity)|000000" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|000000", _
      "gi14|(intensity)|(color)", _
      "LW5|(intensity)|(color)", _
      "LW3|(intensity)|000000", _
      "LW2|(intensity)|000000", _
      "LCC3|(intensity)|000000", _
      "LCC2|(intensity)|000000", _
      "LMet3|(intensity)|(color)", _
      "LMet2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "gi11|(intensity)|000000", _
      "LS2|(intensity)|000000", _
      "LS3|(intensity)|000000", _
      "LS6|(intensity)|000000", _
      "LW6|(intensity)|(color)", _
      "LW4|(intensity)|000000", _
      "LSC1|(intensity)|(color)", _
      "LMet1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "gi14|(intensity)|000000", _
      "LW7|(intensity)|(color)", _
      "LW5|(intensity)|000000", _
      "LSC2|(intensity)|(color)", _
      "LMet4|(intensity)|(color)", _
      "LMet2|(intensity)|000000", _
      "LM1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "gi10|(intensity)|(color)", _
      "gi09|(intensity)|(color)", _
      "LS1|(intensity)|(color)", _
      "LW9|(intensity)|(color)", _
      "LW8|(intensity)|(color)", _
      "LW6|(intensity)|000000", _
      "LSC3|(intensity)|(color)", _
      "LMet3|(intensity)|000000" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "LW7|(intensity)|000000", _
      "LSC2|(intensity)|000000", _
      "LSC1|(intensity)|000000", _
      "LMet4|(intensity)|000000", _
      "LMet1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "gi10|(intensity)|000000", _
      "LCWiz|(intensity)|(color)", _
      "LLWiz|(intensity)|(color)", _
      "LWiz|(intensity)|(color)", _
      "LW8|(intensity)|000000", _
      "LSC3|(intensity)|000000", _
      "LM1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "gi09|(intensity)|000000", _
      "LS1|(intensity)|000000", _
      "LW9|(intensity)|000000" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "gi08|(intensity)|(color)", _
      "gi04|(intensity)|(color)", _
      "LCWiz|(intensity)|000000", _
      "LLWiz|(intensity)|000000", _
      "LWiz|(intensity)|000000", _
      "LPR1|(intensity)|(color)", _
      "LMR1|(intensity)|(color)", _
      "LCR1|(intensity)|(color)", _
      "LRI|(intensity)|(color)", _
      "LRO|(intensity)|(color)", _
      "LLI|(intensity)|(color)", _
      "LLO|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
    .Lights = Array( _
      "gi03|(intensity)|(color)", _
      "LPR3|(intensity)|(color)", _
      "LPR2|(intensity)|(color)", _
      "LMR2|(intensity)|(color)", _
      "LCR2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.50000, Null, Null)
    .Lights = Array( _
      "gi07|(intensity)|(color)", _
      "LC1|(intensity)|(color)", _
      "LC2|(intensity)|(color)", _
      "LC3|(intensity)|(color)", _
      "LC4|(intensity)|(color)", _
      "LC5|(intensity)|(color)", _
      "LC6|(intensity)|(color)", _
      "LC7|(intensity)|(color)", _
      "LC8|(intensity)|(color)", _
      "LPR6|(intensity)|(color)", _
      "LPR5|(intensity)|(color)", _
      "LPR4|(intensity)|(color)", _
      "LRI|(intensity)|000000", _
      "LLI|(intensity)|000000", _
      "LSR|(intensity)|(color)", _
      "LSL|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.53333, Null, Null)
    .Lights = Array( _
      "gi08|(intensity)|000000", _
      "gi06|(intensity)|(color)", _
      "gi05|(intensity)|(color)", _
      "gi04|(intensity)|000000", _
      "gi02|(intensity)|(color)", _
      "gi01|(intensity)|(color)", _
      "LH9|(intensity)|(color)", _
      "LH8|(intensity)|(color)", _
      "LH7|(intensity)|(color)", _
      "LH6|(intensity)|(color)", _
      "LH5|(intensity)|(color)", _
      "LH4|(intensity)|(color)", _
      "LH3|(intensity)|(color)", _
      "LH2|(intensity)|(color)", _
      "LH1|(intensity)|(color)", _
      "LPR1|(intensity)|000000", _
      "LMR2|(intensity)|000000", _
      "LMR1|(intensity)|000000", _
      "LCR2|(intensity)|000000", _
      "LCR1|(intensity)|000000", _
      "LRO|(intensity)|000000", _
      "LLO|(intensity)|000000" _
      )
  End With
  With .AddStep(0.56667, Null, Null)
    .Lights = Array( _
      "gi07|(intensity)|000000", _
      "gi03|(intensity)|000000", _
      "LPR3|(intensity)|000000", _
      "LPR2|(intensity)|000000", _
      "LPR6|(intensity)|000000", _
      "LPR5|(intensity)|000000", _
      "LPR4|(intensity)|000000" _
      )
  End With
  With .AddStep(0.60000, Null, Null)
    .Lights = Array( _
      "gi06|(intensity)|000000", _
      "gi02|(intensity)|000000", _
      "gi01|(intensity)|000000", _
      "LC1|(intensity)|000000", _
      "LC2|(intensity)|000000", _
      "LC3|(intensity)|000000", _
      "LC4|(intensity)|000000", _
      "LC5|(intensity)|000000", _
      "LC6|(intensity)|000000", _
      "LC7|(intensity)|000000", _
      "LC8|(intensity)|000000", _
      "LSA|(intensity)|(color)", _
      "LH9|(intensity)|000000", _
      "LH8|(intensity)|000000", _
      "LH7|(intensity)|000000", _
      "LH6|(intensity)|000000", _
      "LH5|(intensity)|000000", _
      "LH4|(intensity)|000000", _
      "LH3|(intensity)|000000", _
      "LH2|(intensity)|000000", _
      "LH1|(intensity)|000000", _
      "LSR|(intensity)|000000", _
      "LSL|(intensity)|000000" _
      )
  End With
  With .AddStep(0.63333, Null, Null)
    .Lights = Array( _
      "gi05|(intensity)|000000" _
      )
  End With
  With .AddStep(0.66667, Null, 0.03333)
    .Lights = Array( _
      "LSA|(intensity)|000000" _
      )
  End With
End With


With CreateGlfShow("insert_gi_slide_up")

  With .AddStep(0.03333, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.06667, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|000000" _
      )
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "LSA|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "gi06|(intensity)|(color)", _
      "gi05|(intensity)|(color)", _
      "gi02|(intensity)|(color)", _
      "gi01|(intensity)|(color)", _
      "LC1|(intensity)|(color)", _
      "LC2|(intensity)|(color)", _
      "LC3|(intensity)|(color)", _
      "LC4|(intensity)|(color)", _
      "LC5|(intensity)|(color)", _
      "LC6|(intensity)|(color)", _
      "LC7|(intensity)|(color)", _
      "LC8|(intensity)|(color)", _
      "LH9|(intensity)|(color)", _
      "LH8|(intensity)|(color)", _
      "LH7|(intensity)|(color)", _
      "LH6|(intensity)|(color)", _
      "LH5|(intensity)|(color)", _
      "LH4|(intensity)|(color)", _
      "LH3|(intensity)|(color)", _
      "LH2|(intensity)|(color)", _
      "LH1|(intensity)|(color)", _
      "LSR|(intensity)|(color)", _
      "LSL|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "gi07|(intensity)|(color)", _
      "gi05|(intensity)|000000", _
      "gi03|(intensity)|(color)", _
      "LSA|(intensity)|000000", _
      "LPR3|(intensity)|(color)", _
      "LPR2|(intensity)|(color)", _
      "LPR6|(intensity)|(color)", _
      "LPR5|(intensity)|(color)", _
      "LPR4|(intensity)|(color)", _
      "LMR2|(intensity)|(color)", _
      "LCR2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "gi08|(intensity)|(color)", _
      "gi06|(intensity)|000000", _
      "gi04|(intensity)|(color)", _
      "gi02|(intensity)|000000", _
      "gi01|(intensity)|000000", _
      "LC1|(intensity)|000000", _
      "LC2|(intensity)|000000", _
      "LC3|(intensity)|000000", _
      "LC4|(intensity)|000000", _
      "LC5|(intensity)|000000", _
      "LC6|(intensity)|000000", _
      "LC7|(intensity)|000000", _
      "LC8|(intensity)|000000", _
      "LH9|(intensity)|000000", _
      "LH8|(intensity)|000000", _
      "LH7|(intensity)|000000", _
      "LH6|(intensity)|000000", _
      "LH5|(intensity)|000000", _
      "LH4|(intensity)|000000", _
      "LH3|(intensity)|000000", _
      "LH2|(intensity)|000000", _
      "LH1|(intensity)|000000", _
      "LPR1|(intensity)|(color)", _
      "LPR6|(intensity)|000000", _
      "LPR5|(intensity)|000000", _
      "LPR4|(intensity)|000000", _
      "LMR1|(intensity)|(color)", _
      "LCR1|(intensity)|(color)", _
      "LRI|(intensity)|(color)", _
      "LRO|(intensity)|(color)", _
      "LLI|(intensity)|(color)", _
      "LLO|(intensity)|(color)", _
      "LSR|(intensity)|000000", _
      "LSL|(intensity)|000000" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "gi08|(intensity)|000000", _
      "gi07|(intensity)|000000", _
      "gi04|(intensity)|000000", _
      "gi03|(intensity)|000000", _
      "LCWiz|(intensity)|(color)", _
      "LLWiz|(intensity)|(color)", _
      "LPR1|(intensity)|000000", _
      "LPR3|(intensity)|000000", _
      "LPR2|(intensity)|000000", _
      "LMR2|(intensity)|000000", _
      "LMR1|(intensity)|000000", _
      "LCR2|(intensity)|000000", _
      "LCR1|(intensity)|000000", _
      "LRO|(intensity)|000000", _
      "LLO|(intensity)|000000" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "gi09|(intensity)|(color)", _
      "LS1|(intensity)|(color)", _
      "LWiz|(intensity)|(color)", _
      "LW9|(intensity)|(color)", _
      "LRI|(intensity)|000000", _
      "LLI|(intensity)|000000" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "gi10|(intensity)|(color)", _
      "LCWiz|(intensity)|000000", _
      "LLWiz|(intensity)|000000", _
      "LWiz|(intensity)|000000", _
      "LW8|(intensity)|(color)", _
      "LSC3|(intensity)|(color)", _
      "LSC2|(intensity)|(color)", _
      "LMet4|(intensity)|(color)", _
      "LM1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "gi10|(intensity)|000000", _
      "gi09|(intensity)|000000", _
      "LS1|(intensity)|000000", _
      "LW9|(intensity)|000000", _
      "LW7|(intensity)|(color)", _
      "LW6|(intensity)|(color)", _
      "LSC3|(intensity)|000000", _
      "LSC1|(intensity)|(color)", _
      "LMet1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "gi14|(intensity)|(color)", _
      "LS2|(intensity)|(color)", _
      "LW8|(intensity)|000000", _
      "LW7|(intensity)|000000", _
      "LW5|(intensity)|(color)", _
      "LSC2|(intensity)|000000", _
      "LSC1|(intensity)|000000", _
      "LMet4|(intensity)|000000", _
      "LMet3|(intensity)|(color)", _
      "LMet2|(intensity)|(color)", _
      "LMet1|(intensity)|000000", _
      "LM1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|(color)", _
      "gi14|(intensity)|000000", _
      "gi11|(intensity)|(color)", _
      "LS3|(intensity)|(color)", _
      "LS6|(intensity)|(color)", _
      "LW6|(intensity)|000000", _
      "LW5|(intensity)|000000", _
      "LW4|(intensity)|(color)", _
      "LW3|(intensity)|(color)", _
      "LW2|(intensity)|(color)", _
      "LCC3|(intensity)|(color)", _
      "LCC2|(intensity)|(color)", _
      "LMet3|(intensity)|000000" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "gi12|(intensity)|(color)", _
      "gi11|(intensity)|000000", _
      "LS5|(intensity)|(color)", _
      "LS2|(intensity)|000000", _
      "LS3|(intensity)|000000", _
      "LS4|(intensity)|(color)", _
      "LS6|(intensity)|000000", _
      "LW4|(intensity)|000000", _
      "LW1|(intensity)|(color)", _
      "LMLR|(intensity)|(color)", _
      "LF3|(intensity)|(color)", _
      "LTW2|(intensity)|(color)", _
      "LTW1|(intensity)|(color)", _
      "LCC3|(intensity)|000000", _
      "LCC1|(intensity)|(color)", _
      "LMet2|(intensity)|000000", _
      "LM5|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|000000", _
      "gi15|(intensity)|(color)", _
      "gi13|(intensity)|(color)", _
      "LX|(intensity)|(color)", _
      "LS5|(intensity)|000000", _
      "LW3|(intensity)|000000", _
      "LW2|(intensity)|000000", _
      "LEBR|(intensity)|(color)", _
      "LMR|(intensity)|(color)", _
      "LF2|(intensity)|(color)", _
      "LF1|(intensity)|(color)", _
      "LPC3|(intensity)|(color)", _
      "LPC2|(intensity)|(color)", _
      "LPC1|(intensity)|(color)", _
      "LTW2|(intensity)|000000", _
      "LTW1|(intensity)|000000", _
      "LCC2|(intensity)|000000", _
      "LM2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.50000, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|(color)", _
      "gi18|(intensity)|(color)", _
      "gi15|(intensity)|000000", _
      "gi12|(intensity)|000000", _
      "LPF|(intensity)|(color)", _
      "LX|(intensity)|000000", _
      "LS4|(intensity)|000000", _
      "LW1|(intensity)|000000", _
      "LMLR|(intensity)|000000", _
      "LPC5|(intensity)|(color)", _
      "LPC4|(intensity)|(color)", _
      "LF3|(intensity)|000000", _
      "LF2|(intensity)|000000", _
      "LPC3|(intensity)|000000", _
      "LCC1|(intensity)|000000", _
      "LM5|(intensity)|000000", _
      "LM4|(intensity)|(color)", _
      "LM3|(intensity)|(color)", _
      "LM2|(intensity)|000000" _
      )
  End With
  With .AddStep(0.53333, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|(color)", _
      "gi20|(intensity)|000000", _
      "gi21|(intensity)|(color)", _
      "gi18|(intensity)|000000", _
      "gi13|(intensity)|000000", _
      "LPF|(intensity)|000000", _
      "LSwC3|(intensity)|(color)", _
      "LSwC1|(intensity)|(color)", _
      "LEBR|(intensity)|000000", _
      "LMR|(intensity)|000000", _
      "LF1|(intensity)|000000", _
      "LPC2|(intensity)|000000", _
      "LPC1|(intensity)|000000", _
      "LM4|(intensity)|000000" _
      )
  End With
  With .AddStep(0.56667, Null, Null)
    .Lights = Array( _
      "LSwC2|(intensity)|(color)", _
      "LPC5|(intensity)|000000", _
      "LPC4|(intensity)|000000", _
      "LM3|(intensity)|000000" _
      )
  End With
  With .AddStep(0.60000, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|(color)", _
      "gi22|(intensity)|000000", _
      "gi21|(intensity)|000000", _
      "gi16|(intensity)|(color)", _
      "LSwC3|(intensity)|000000", _
      "LSwC2|(intensity)|000000", _
      "LSwC1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.63333, Null, 0.03333)
  .Lights = Array( _
      "gi17|(intensity)|000000", _
      "gi16|(intensity)|000000" _
      )
  End With
End With


With CreateGlfShow("insert_gi_slide_right")
  With .AddStep(0.03333, Null, Null)
    .Lights = Array( _
      "gi18|(intensity)|(color)", _
      "gi12|(intensity)|(color)", _
      "gi09|(intensity)|(color)", _
      "LLO|(intensity)|(color)", _
      "LSL|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.06667, Null, Null)
    .Lights = Array( _
      "gi16|(intensity)|(color)", _
      "gi11|(intensity)|(color)", _
      "gi02|(intensity)|(color)", _
      "LLI|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|(color)", _
      "gi21|(intensity)|(color)", _
      "gi04|(intensity)|(color)", _
      "gi01|(intensity)|(color)", _
      "LS1|(intensity)|(color)", _
      "LS2|(intensity)|(color)", _
      "LCC3|(intensity)|(color)", _
      "LCC2|(intensity)|(color)", _
      "LCC1|(intensity)|(color)", _
      "LM1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "gi18|(intensity)|000000", _
      "gi16|(intensity)|000000", _
      "gi12|(intensity)|000000", _
      "gi11|(intensity)|000000", _
      "gi09|(intensity)|000000", _
      "gi03|(intensity)|(color)", _
      "LCWiz|(intensity)|(color)", _
      "LTW2|(intensity)|(color)", _
      "LTW1|(intensity)|(color)", _
      "LMet1|(intensity)|(color)", _
      "LLO|(intensity)|000000", _
      "LSL|(intensity)|000000" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "gi21|(intensity)|000000", _
      "gi02|(intensity)|000000", _
      "LS1|(intensity)|000000", _
      "LS3|(intensity)|(color)", _
      "LSwC1|(intensity)|(color)", _
      "LC1|(intensity)|(color)", _
      "LC2|(intensity)|(color)", _
      "LPC4|(intensity)|(color)", _
      "LPC2|(intensity)|(color)", _
      "LPC1|(intensity)|(color)", _
      "LCC3|(intensity)|000000", _
      "LCC2|(intensity)|000000", _
      "LCC1|(intensity)|000000", _
      "LMet2|(intensity)|(color)", _
      "LM2|(intensity)|(color)", _
      "LM1|(intensity)|000000", _
      "LH3|(intensity)|(color)", _
      "LH2|(intensity)|(color)", _
      "LH1|(intensity)|(color)", _
      "LPR4|(intensity)|(color)", _
      "LCR2|(intensity)|(color)", _
      "LCR1|(intensity)|(color)", _
      "LLI|(intensity)|000000" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|(color)", _
      "gi20|(intensity)|000000", _
      "gi04|(intensity)|000000", _
      "gi03|(intensity)|000000", _
      "gi01|(intensity)|000000", _
      "LPF|(intensity)|(color)", _
      "LS2|(intensity)|000000", _
      "LSwC2|(intensity)|(color)", _
      "LC3|(intensity)|(color)", _
      "LC4|(intensity)|(color)", _
      "LWiz|(intensity)|(color)", _
      "LW9|(intensity)|(color)", _
      "LW8|(intensity)|(color)", _
      "LW7|(intensity)|(color)", _
      "LW6|(intensity)|(color)", _
      "LW5|(intensity)|(color)", _
      "LW4|(intensity)|(color)", _
      "LW3|(intensity)|(color)", _
      "LW2|(intensity)|(color)", _
      "LW1|(intensity)|(color)", _
      "LPC3|(intensity)|(color)", _
      "LTW1|(intensity)|000000", _
      "LM3|(intensity)|(color)", _
      "LSA|(intensity)|(color)", _
      "LH5|(intensity)|(color)", _
      "LH4|(intensity)|(color)", _
      "LPR1|(intensity)|(color)", _
      "LPR2|(intensity)|(color)", _
      "LPR5|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "LS3|(intensity)|000000", _
      "LS4|(intensity)|(color)", _
      "LSwC3|(intensity)|(color)", _
      "LSwC1|(intensity)|000000", _
      "LCWiz|(intensity)|000000", _
      "LC1|(intensity)|000000", _
      "LC5|(intensity)|(color)", _
      "LC6|(intensity)|(color)", _
      "LC7|(intensity)|(color)", _
      "LPC5|(intensity)|(color)", _
      "LPC1|(intensity)|000000", _
      "LTW2|(intensity)|000000", _
      "LMet1|(intensity)|000000", _
      "LH7|(intensity)|(color)", _
      "LH6|(intensity)|(color)", _
      "LH2|(intensity)|000000", _
      "LH1|(intensity)|000000", _
      "LPR3|(intensity)|(color)", _
      "LPR6|(intensity)|(color)", _
      "LCR2|(intensity)|000000", _
      "LCR1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|(color)", _
      "LX|(intensity)|(color)", _
      "LLWiz|(intensity)|(color)", _
      "LC2|(intensity)|000000", _
      "LC3|(intensity)|000000", _
      "LC8|(intensity)|(color)", _
      "LEBR|(intensity)|(color)", _
      "LMR|(intensity)|(color)", _
      "LPC4|(intensity)|000000", _
      "LPC3|(intensity)|000000", _
      "LPC2|(intensity)|000000", _
      "LMet3|(intensity)|(color)", _
      "LMet2|(intensity)|000000", _
      "LM4|(intensity)|(color)", _
      "LM2|(intensity)|000000", _
      "LH9|(intensity)|(color)", _
      "LH8|(intensity)|(color)", _
      "LH4|(intensity)|000000", _
      "LH3|(intensity)|000000", _
      "LPR2|(intensity)|000000", _
      "LPR4|(intensity)|000000", _
      "LMR2|(intensity)|(color)", _
      "LMR1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|000000", _
      "gi07|(intensity)|(color)", _
      "gi05|(intensity)|(color)", _
      "LPF|(intensity)|000000", _
      "LS5|(intensity)|(color)", _
      "LS4|(intensity)|000000", _
      "LSwC2|(intensity)|000000", _
      "LC4|(intensity)|000000", _
      "LC5|(intensity)|000000", _
      "LC6|(intensity)|000000", _
      "LWiz|(intensity)|000000", _
      "LW9|(intensity)|000000", _
      "LW8|(intensity)|000000", _
      "LW7|(intensity)|000000", _
      "LW6|(intensity)|000000", _
      "LW5|(intensity)|000000", _
      "LW4|(intensity)|000000", _
      "LW3|(intensity)|000000", _
      "LW2|(intensity)|000000", _
      "LW1|(intensity)|000000", _
      "LMLR|(intensity)|(color)", _
      "LPC5|(intensity)|000000", _
      "LMet4|(intensity)|(color)", _
      "LM3|(intensity)|000000", _
      "LSA|(intensity)|000000", _
      "LH6|(intensity)|000000", _
      "LH5|(intensity)|000000", _
      "LPR1|(intensity)|000000", _
      "LPR3|(intensity)|000000", _
      "LPR6|(intensity)|000000", _
      "LPR5|(intensity)|000000" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "gi13|(intensity)|(color)", _
      "gi08|(intensity)|(color)", _
      "gi06|(intensity)|(color)", _
      "LX|(intensity)|000000", _
      "LS6|(intensity)|(color)", _
      "LSwC3|(intensity)|000000", _
      "LC7|(intensity)|000000", _
      "LC8|(intensity)|000000", _
      "LEBR|(intensity)|000000", _
      "LSC3|(intensity)|(color)", _
      "LSC2|(intensity)|(color)", _
      "LSC1|(intensity)|(color)", _
      "LMet3|(intensity)|000000", _
      "LM5|(intensity)|(color)", _
      "LM4|(intensity)|000000", _
      "LH8|(intensity)|000000", _
      "LH7|(intensity)|000000", _
      "LMR2|(intensity)|000000", _
      "LMR1|(intensity)|000000", _
      "LRI|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|000000", _
      "gi10|(intensity)|(color)", _
      "LS5|(intensity)|000000", _
      "LLWiz|(intensity)|000000", _
      "LMR|(intensity)|000000", _
      "LF3|(intensity)|(color)", _
      "LF2|(intensity)|(color)", _
      "LF1|(intensity)|(color)", _
      "LMet4|(intensity)|000000", _
      "LH9|(intensity)|000000", _
      "LRO|(intensity)|(color)", _
      "LSR|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|(color)", _
      "gi19|(intensity)|(color)", _
      "gi15|(intensity)|(color)", _
      "gi14|(intensity)|(color)", _
      "gi08|(intensity)|000000", _
      "gi07|(intensity)|000000", _
      "gi05|(intensity)|000000", _
      "LMLR|(intensity)|000000", _
      "LM5|(intensity)|000000" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "gi13|(intensity)|000000", _
      "gi06|(intensity)|000000", _
      "LS6|(intensity)|000000", _
      "LSC3|(intensity)|000000", _
      "LSC2|(intensity)|000000", _
      "LSC1|(intensity)|000000", _
      "LF3|(intensity)|000000", _
      "LRI|(intensity)|000000" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|000000", _
      "gi14|(intensity)|000000", _
      "gi10|(intensity)|000000", _
      "LF2|(intensity)|000000", _
      "LF1|(intensity)|000000", _
      "LRO|(intensity)|000000", _
      "LSR|(intensity)|000000" _
      )
  End With
  With .AddStep(0.5, Null, 0.03333)
    .Lights = Array( _
      "gi15|(intensity)|000000", _
      "gi17|(intensity)|000000" _
      )
  End With
End With


With CreateGlfShow("insert_gi_slide_midright")
  With .AddStep(0.00000, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|(color)", _
      "LPF|(intensity)|(color)", _
      "LS4|(intensity)|(color)", _
      "LSwC2|(intensity)|(color)", _
      "LSwC1|(intensity)|(color)", _
      "LC2|(intensity)|(color)", _
      "LC3|(intensity)|(color)", _
      "LC4|(intensity)|(color)", _
      "LC5|(intensity)|(color)", _
      "LC6|(intensity)|(color)", _
      "LC7|(intensity)|(color)", _
      "LWiz|(intensity)|(color)", _
      "LW9|(intensity)|(color)", _
      "LW8|(intensity)|(color)", _
      "LW7|(intensity)|(color)", _
      "LW6|(intensity)|(color)", _
      "LW5|(intensity)|(color)", _
      "LW4|(intensity)|(color)", _
      "LW3|(intensity)|(color)", _
      "LW2|(intensity)|(color)", _
      "LW1|(intensity)|(color)", _
      "LPC5|(intensity)|(color)", _
      "LPC4|(intensity)|(color)", _
      "LPC3|(intensity)|(color)", _
      "LPC2|(intensity)|(color)", _
      "LMet2|(intensity)|(color)", _
      "LM3|(intensity)|(color)", _
      "LM2|(intensity)|(color)", _
      "LSA|(intensity)|(color)", _
      "LH7|(intensity)|(color)", _
      "LH6|(intensity)|(color)", _
      "LH5|(intensity)|(color)", _
      "LH4|(intensity)|(color)", _
      "LH3|(intensity)|(color)", _
      "LPR1|(intensity)|(color)", _
      "LPR3|(intensity)|(color)", _
      "LPR2|(intensity)|(color)", _
      "LPR6|(intensity)|(color)", _
      "LPR5|(intensity)|(color)", _
      "LPR4|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.03333, Null, Null)
    .Lights = Array( _
      "LX|(intensity)|(color)", _
      "LSwC3|(intensity)|(color)", _
      "LSwC1|(intensity)|000000", _
      "LC2|(intensity)|000000", _
      "LC8|(intensity)|(color)", _
      "LPC4|(intensity)|000000", _
      "LPC2|(intensity)|000000", _
      "LMet3|(intensity)|(color)", _
      "LMet2|(intensity)|000000", _
      "LM4|(intensity)|(color)", _
      "LM2|(intensity)|000000", _
      "LH8|(intensity)|(color)", _
      "LH3|(intensity)|000000", _
      "LPR4|(intensity)|000000", _
      "LMR2|(intensity)|(color)", _
      "LMR1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.06667, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|(color)", _
      "LLWiz|(intensity)|(color)", _
      "LC3|(intensity)|000000", _
      "LC4|(intensity)|000000", _
      "LEBR|(intensity)|(color)", _
      "LMR|(intensity)|(color)", _
      "LPC3|(intensity)|000000", _
      "LH9|(intensity)|(color)", _
      "LH4|(intensity)|000000", _
      "LPR2|(intensity)|000000" _
      )
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|000000", _
      "LPF|(intensity)|000000", _
      "LS5|(intensity)|(color)", _
      "LSwC2|(intensity)|000000", _
      "LC5|(intensity)|000000", _
      "LWiz|(intensity)|000000", _
      "LW9|(intensity)|000000", _
      "LW8|(intensity)|000000", _
      "LW7|(intensity)|000000", _
      "LW6|(intensity)|000000", _
      "LW5|(intensity)|000000", _
      "LW4|(intensity)|000000", _
      "LW3|(intensity)|000000", _
      "LW2|(intensity)|000000", _
      "LW1|(intensity)|000000", _
      "LMet4|(intensity)|(color)", _
      "LM3|(intensity)|000000", _
      "LSA|(intensity)|000000", _
      "LH5|(intensity)|000000", _
      "LPR1|(intensity)|000000", _
      "LPR5|(intensity)|000000" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "gi08|(intensity)|(color)", _
      "gi07|(intensity)|(color)", _
      "gi05|(intensity)|(color)", _
      "LS4|(intensity)|000000", _
      "LC6|(intensity)|000000", _
      "LMLR|(intensity)|(color)", _
      "LPC5|(intensity)|000000", _
      "LH6|(intensity)|000000", _
      "LPR3|(intensity)|000000", _
      "LPR6|(intensity)|000000" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "gi06|(intensity)|(color)", _
      "LSwC3|(intensity)|000000", _
      "LC7|(intensity)|000000", _
      "LMet3|(intensity)|000000", _
      "LM5|(intensity)|(color)", _
      "LM4|(intensity)|000000", _
      "LH8|(intensity)|000000", _
      "LH7|(intensity)|000000", _
      "LMR2|(intensity)|000000", _
      "LMR1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|000000", _
      "gi13|(intensity)|(color)", _
      "LX|(intensity)|000000", _
      "LS6|(intensity)|(color)", _
      "LC8|(intensity)|000000", _
      "LEBR|(intensity)|000000", _
      "LMR|(intensity)|000000", _
      "LSC3|(intensity)|(color)", _
      "LSC2|(intensity)|(color)", _
      "LSC1|(intensity)|(color)", _
      "LH9|(intensity)|000000", _
      "LRI|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "LLWiz|(intensity)|000000", _
      "LF3|(intensity)|(color)", _
      "LF2|(intensity)|(color)", _
      "LMet4|(intensity)|000000" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "gi10|(intensity)|(color)", _
      "gi07|(intensity)|000000", _
      "gi05|(intensity)|000000", _
      "LS5|(intensity)|000000", _
      "LMLR|(intensity)|000000", _
      "LF1|(intensity)|(color)", _
      "LRO|(intensity)|(color)", _
      "LSR|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|(color)", _
      "gi19|(intensity)|(color)", _
      "gi14|(intensity)|(color)", _
      "gi08|(intensity)|000000" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "gi15|(intensity)|(color)", _
      "gi06|(intensity)|000000", _
      "LS6|(intensity)|000000", _
      "LSC3|(intensity)|000000", _
      "LSC2|(intensity)|000000", _
      "LSC1|(intensity)|000000", _
      "LM5|(intensity)|000000", _
      "LRI|(intensity)|000000" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "gi13|(intensity)|000000" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "LF3|(intensity)|000000", _
      "LF2|(intensity)|000000", _
      "LF1|(intensity)|000000", _
      "LRO|(intensity)|000000", _
      "LSR|(intensity)|000000" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "gi10|(intensity)|000000" _
      )
  End With
  With .AddStep(0.46667, Null, 0.03333)
    .Lights = Array( _
      "gi17|(intensity)|000000", _
      "gi19|(intensity)|000000", _
      "gi15|(intensity)|000000", _
      "gi14|(intensity)|000000" _
      )
  End With
End With


With CreateGlfShow("insert_gi_slide_midleft")
  With .AddStep(0.00000, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|(color)", _
      "LPF|(intensity)|(color)", _
      "LS4|(intensity)|(color)", _
      "LSwC2|(intensity)|(color)", _
      "LSwC1|(intensity)|(color)", _
      "LC2|(intensity)|(color)", _
      "LC3|(intensity)|(color)", _
      "LC4|(intensity)|(color)", _
      "LC5|(intensity)|(color)", _
      "LC6|(intensity)|(color)", _
      "LC7|(intensity)|(color)", _
      "LWiz|(intensity)|(color)", _
      "LW9|(intensity)|(color)", _
      "LW8|(intensity)|(color)", _
      "LW7|(intensity)|(color)", _
      "LW6|(intensity)|(color)", _
      "LW5|(intensity)|(color)", _
      "LW4|(intensity)|(color)", _
      "LW3|(intensity)|(color)", _
      "LW2|(intensity)|(color)", _
      "LW1|(intensity)|(color)", _
      "LPC5|(intensity)|(color)", _
      "LPC4|(intensity)|(color)", _
      "LPC3|(intensity)|(color)", _
      "LPC2|(intensity)|(color)", _
      "LMet2|(intensity)|(color)", _
      "LM3|(intensity)|(color)", _
      "LM2|(intensity)|(color)", _
      "LSA|(intensity)|(color)", _
      "LH7|(intensity)|(color)", _
      "LH6|(intensity)|(color)", _
      "LH5|(intensity)|(color)", _
      "LH4|(intensity)|(color)", _
      "LH3|(intensity)|(color)", _
      "LPR1|(intensity)|(color)", _
      "LPR3|(intensity)|(color)", _
      "LPR2|(intensity)|(color)", _
      "LPR6|(intensity)|(color)", _
      "LPR5|(intensity)|(color)", _
      "LPR4|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.03333, Null, Null)
    .Lights = Array( _
      "LC1|(intensity)|(color)", _
      "LC6|(intensity)|000000", _
      "LC7|(intensity)|000000", _
      "LPC5|(intensity)|000000", _
      "LPC1|(intensity)|(color)", _
      "LH7|(intensity)|000000", _
      "LH2|(intensity)|(color)", _
      "LPR6|(intensity)|000000", _
      "LCR2|(intensity)|(color)", _
      "LCR1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.06667, Null, Null)
    .Lights = Array( _
      "LS3|(intensity)|(color)", _
      "LS4|(intensity)|000000", _
      "LCWiz|(intensity)|(color)", _
      "LTW2|(intensity)|(color)", _
      "LMet1|(intensity)|(color)", _
      "LH6|(intensity)|000000", _
      "LH1|(intensity)|(color)", _
      "LPR3|(intensity)|000000" _
      )
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|000000", _
      "LPF|(intensity)|000000", _
      "LSwC2|(intensity)|000000", _
      "LC4|(intensity)|000000", _
      "LC5|(intensity)|000000", _
      "LWiz|(intensity)|000000", _
      "LW9|(intensity)|000000", _
      "LW8|(intensity)|000000", _
      "LW7|(intensity)|000000", _
      "LW6|(intensity)|000000", _
      "LW5|(intensity)|000000", _
      "LW4|(intensity)|000000", _
      "LW3|(intensity)|000000", _
      "LW2|(intensity)|000000", _
      "LW1|(intensity)|000000", _
      "LTW1|(intensity)|(color)", _
      "LM3|(intensity)|000000", _
      "LSA|(intensity)|000000", _
      "LH5|(intensity)|000000", _
      "LPR1|(intensity)|000000", _
      "LPR5|(intensity)|000000" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "gi03|(intensity)|(color)", _
      "gi01|(intensity)|(color)", _
      "LS2|(intensity)|(color)", _
      "LC3|(intensity)|000000", _
      "LPC3|(intensity)|000000", _
      "LH4|(intensity)|000000", _
      "LPR2|(intensity)|000000" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|(color)", _
      "gi04|(intensity)|(color)", _
      "LC2|(intensity)|000000", _
      "LPC4|(intensity)|000000", _
      "LPC2|(intensity)|000000", _
      "LCC3|(intensity)|(color)", _
      "LCC2|(intensity)|(color)", _
      "LMet2|(intensity)|000000", _
      "LM1|(intensity)|(color)", _
      "LH3|(intensity)|000000", _
      "LPR4|(intensity)|000000" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "gi21|(intensity)|(color)", _
      "gi02|(intensity)|(color)", _
      "LS1|(intensity)|(color)", _
      "LSwC1|(intensity)|000000", _
      "LC1|(intensity)|000000", _
      "LPC1|(intensity)|000000", _
      "LCC1|(intensity)|(color)", _
      "LM2|(intensity)|000000", _
      "LH2|(intensity)|000000", _
      "LCR2|(intensity)|000000", _
      "LCR1|(intensity)|000000", _
      "LLI|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "LS3|(intensity)|000000", _
      "LTW2|(intensity)|000000", _
      "LMet1|(intensity)|000000", _
      "LH1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "gi16|(intensity)|(color)", _
      "gi12|(intensity)|(color)", _
      "gi11|(intensity)|(color)", _
      "LCWiz|(intensity)|000000", _
      "LLO|(intensity)|(color)", _
      "LSL|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "gi18|(intensity)|(color)", _
      "gi09|(intensity)|(color)", _
      "gi03|(intensity)|000000", _
      "LTW1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|000000", _
      "gi04|(intensity)|000000", _
      "gi01|(intensity)|000000", _
      "LS2|(intensity)|000000", _
      "LCC3|(intensity)|000000" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "gi21|(intensity)|000000", _
      "gi02|(intensity)|000000", _
      "LS1|(intensity)|000000", _
      "LCC2|(intensity)|000000", _
      "LCC1|(intensity)|000000", _
      "LM1|(intensity)|000000", _
      "LLI|(intensity)|000000" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array()
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array("gi16|(intensity)|000000","gi11|(intensity)|000000")
  End With
  With .AddStep(0.46667, Null, 0.03333)
    .Lights = Array( _
      "gi18|(intensity)|000000", _
      "gi12|(intensity)|000000", _
      "gi09|(intensity)|000000", _
      "LLO|(intensity)|000000", _
      "LSL|(intensity)|000000" _
      )
  End With
End With


With CreateGlfShow("insert_gi_slide_left")
  With .AddStep(0.03333, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|(color)", _
      "gi19|(intensity)|(color)", _
      "gi15|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.06667, Null, Null)
    .Lights = Array( _
      "gi14|(intensity)|(color)", _
      "gi10|(intensity)|(color)", _
      "LF2|(intensity)|(color)", _
      "LF1|(intensity)|(color)", _
      "LRO|(intensity)|(color)", _
      "LSR|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "gi13|(intensity)|(color)", _
      "gi06|(intensity)|(color)", _
      "LS6|(intensity)|(color)", _
      "LSC3|(intensity)|(color)", _
      "LSC2|(intensity)|(color)", _
      "LSC1|(intensity)|(color)", _
      "LF3|(intensity)|(color)", _
      "LM5|(intensity)|(color)", _
      "LRI|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|000000", _
      "gi19|(intensity)|000000", _
      "gi15|(intensity)|000000", _
      "gi14|(intensity)|000000", _
      "gi08|(intensity)|(color)", _
      "gi07|(intensity)|(color)", _
      "gi05|(intensity)|(color)", _
      "LMLR|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|(color)", _
      "gi10|(intensity)|000000", _
      "LS5|(intensity)|(color)", _
      "LLWiz|(intensity)|(color)", _
      "LMR|(intensity)|(color)", _
      "LF3|(intensity)|000000", _
      "LF2|(intensity)|000000", _
      "LF1|(intensity)|000000", _
      "LMet4|(intensity)|(color)", _
      "LH9|(intensity)|(color)", _
      "LRO|(intensity)|000000", _
      "LSR|(intensity)|000000" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "gi13|(intensity)|000000", _
      "gi08|(intensity)|000000", _
      "gi06|(intensity)|000000", _
      "LX|(intensity)|(color)", _
      "LS6|(intensity)|000000", _
      "LSwC3|(intensity)|(color)", _
      "LC7|(intensity)|(color)", _
      "LC8|(intensity)|(color)", _
      "LEBR|(intensity)|(color)", _
      "LPC5|(intensity)|(color)", _
      "LSC3|(intensity)|000000", _
      "LSC2|(intensity)|000000", _
      "LSC1|(intensity)|000000", _
      "LMet3|(intensity)|(color)", _
      "LM5|(intensity)|000000", _
      "LM4|(intensity)|(color)", _
      "LH8|(intensity)|(color)", _
      "LH7|(intensity)|(color)", _
      "LPR6|(intensity)|(color)", _
      "LMR2|(intensity)|(color)", _
      "LMR1|(intensity)|(color)", _
      "LRI|(intensity)|000000" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|(color)", _
      "gi07|(intensity)|000000", _
      "gi05|(intensity)|000000", _
      "LPF|(intensity)|(color)", _
      "LS5|(intensity)|000000", _
      "LS4|(intensity)|(color)", _
      "LSwC2|(intensity)|(color)", _
      "LC4|(intensity)|(color)", _
      "LC5|(intensity)|(color)", _
      "LC6|(intensity)|(color)", _
      "LWiz|(intensity)|(color)", _
      "LW9|(intensity)|(color)", _
      "LW8|(intensity)|(color)", _
      "LW7|(intensity)|(color)", _
      "LW6|(intensity)|(color)", _
      "LW5|(intensity)|(color)", _
      "LW4|(intensity)|(color)", _
      "LW3|(intensity)|(color)", _
      "LW2|(intensity)|(color)", _
      "LW1|(intensity)|(color)", _
      "LMLR|(intensity)|000000", _
      "LMet4|(intensity)|000000", _
      "LM3|(intensity)|(color)", _
      "LSA|(intensity)|(color)", _
      "LH6|(intensity)|(color)", _
      "LH5|(intensity)|(color)", _
      "LPR1|(intensity)|(color)", _
      "LPR3|(intensity)|(color)", _
      "LPR5|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|000000", _
      "LX|(intensity)|000000", _
      "LSwC3|(intensity)|000000", _
      "LSwC1|(intensity)|(color)", _
      "LLWiz|(intensity)|000000", _
      "LC2|(intensity)|(color)", _
      "LC3|(intensity)|(color)", _
      "LC8|(intensity)|000000", _
      "LEBR|(intensity)|000000", _
      "LMR|(intensity)|000000", _
      "LPC4|(intensity)|(color)", _
      "LPC3|(intensity)|(color)", _
      "LPC2|(intensity)|(color)", _
      "LMet3|(intensity)|000000", _
      "LMet2|(intensity)|(color)", _
      "LM4|(intensity)|000000", _
      "LM2|(intensity)|(color)", _
      "LH9|(intensity)|000000", _
      "LH8|(intensity)|000000", _
      "LH4|(intensity)|(color)", _
      "LH3|(intensity)|(color)", _
      "LPR2|(intensity)|(color)", _
      "LPR4|(intensity)|(color)", _
      "LMR2|(intensity)|000000", _
      "LMR1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "LS3|(intensity)|(color)", _
      "LS4|(intensity)|000000", _
      "LCWiz|(intensity)|(color)", _
      "LC1|(intensity)|(color)", _
      "LC5|(intensity)|000000", _
      "LC6|(intensity)|000000", _
      "LC7|(intensity)|000000", _
      "LPC5|(intensity)|000000", _
      "LPC1|(intensity)|(color)", _
      "LTW2|(intensity)|(color)", _
      "LMet1|(intensity)|(color)", _
      "LH7|(intensity)|000000", _
      "LH6|(intensity)|000000", _
      "LH2|(intensity)|(color)", _
      "LH1|(intensity)|(color)", _
      "LPR3|(intensity)|000000", _
      "LPR6|(intensity)|000000", _
      "LCR2|(intensity)|(color)", _
      "LCR1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|000000", _
      "gi20|(intensity)|(color)", _
      "gi04|(intensity)|(color)", _
      "gi03|(intensity)|(color)", _
      "gi01|(intensity)|(color)", _
      "LPF|(intensity)|000000", _
      "LS2|(intensity)|(color)", _
      "LSwC2|(intensity)|000000", _
      "LC3|(intensity)|000000", _
      "LC4|(intensity)|000000", _
      "LWiz|(intensity)|000000", _
      "LW9|(intensity)|000000", _
      "LW8|(intensity)|000000", _
      "LW7|(intensity)|000000", _
      "LW6|(intensity)|000000", _
      "LW5|(intensity)|000000", _
      "LW4|(intensity)|000000", _
      "LW3|(intensity)|000000", _
      "LW2|(intensity)|000000", _
      "LW1|(intensity)|000000", _
      "LPC3|(intensity)|000000", _
      "LTW1|(intensity)|(color)", _
      "LM3|(intensity)|000000", _
      "LSA|(intensity)|000000", _
      "LH5|(intensity)|000000", _
      "LH4|(intensity)|000000", _
      "LPR1|(intensity)|000000", _
      "LPR2|(intensity)|000000", _
      "LPR5|(intensity)|000000", _
      "LPR4|(intensity)|000000" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "gi21|(intensity)|(color)", _
      "gi02|(intensity)|(color)", _
      "LS1|(intensity)|(color)", _
      "LS3|(intensity)|000000", _
      "LSwC1|(intensity)|000000", _
      "LC1|(intensity)|000000", _
      "LC2|(intensity)|000000", _
      "LPC4|(intensity)|000000", _
      "LPC2|(intensity)|000000", _
      "LPC1|(intensity)|000000", _
      "LCC3|(intensity)|(color)", _
      "LCC2|(intensity)|(color)", _
      "LCC1|(intensity)|(color)", _
      "LMet2|(intensity)|000000", _
      "LM2|(intensity)|000000", _
      "LM1|(intensity)|(color)", _
      "LH3|(intensity)|000000", _
      "LH2|(intensity)|000000", _
      "LH1|(intensity)|000000", _
      "LCR2|(intensity)|000000", _
      "LCR1|(intensity)|000000", _
      "LLI|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "gi18|(intensity)|(color)", _
      "gi16|(intensity)|(color)", _
      "gi12|(intensity)|(color)", _
      "gi11|(intensity)|(color)", _
      "gi09|(intensity)|(color)", _
      "gi03|(intensity)|000000", _
      "LCWiz|(intensity)|000000", _
      "LTW2|(intensity)|000000", _
      "LTW1|(intensity)|000000", _
      "LMet1|(intensity)|000000", _
      "LLO|(intensity)|(color)", _
      "LSL|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|000000", _
      "gi21|(intensity)|000000", _
      "gi04|(intensity)|000000", _
      "gi01|(intensity)|000000", _
      "LS1|(intensity)|000000", _
      "LS2|(intensity)|000000", _
      "LCC3|(intensity)|000000", _
      "LCC2|(intensity)|000000", _
      "LCC1|(intensity)|000000", _
      "LM1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
    .Lights = Array( _
      "gi16|(intensity)|000000", _
      "gi11|(intensity)|000000", _
      "gi02|(intensity)|000000", _
      "LLI|(intensity)|000000" _
      )
  End With
  With .AddStep(0.5, Null, 0.03333)
    .Lights = Array( _
      "LLO|(intensity)|000000", _
      "gi09|(intensity)|000000", _
      "gi12|(intensity)|000000", _
      "gi18|(intensity)|000000" _
      )
  End With
End With


With CreateGlfShow("insert_gi_slide_down")
  With .AddStep(0.03333, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|(color)", _
      "gi16|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.06667, Null, Null)
  End With
  With .AddStep(0.10000, Null, Null)
    .Lights = Array( _
      "gi17|(intensity)|000000", _
      "gi22|(intensity)|(color)", _
      "gi21|(intensity)|(color)", _
      "gi16|(intensity)|000000", _
      "LSwC3|(intensity)|(color)", _
      "LSwC2|(intensity)|(color)", _
      "LSwC1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.13333, Null, Null)
    .Lights = Array( _
      "LSwC2|(intensity)|000000", _
      "LPC5|(intensity)|(color)", _
      "LPC4|(intensity)|(color)", _
      "LM3|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.16667, Null, Null)
    .Lights = Array( _
      "gi22|(intensity)|000000", _
      "gi20|(intensity)|(color)", _
      "gi21|(intensity)|000000", _
      "gi18|(intensity)|(color)", _
      "LPF|(intensity)|(color)", _
      "LSwC3|(intensity)|000000", _
      "LSwC1|(intensity)|000000", _
      "LMR|(intensity)|(color)", _
      "LPC1|(intensity)|(color)", _
      "LM4|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.20000, Null, Null)
    .Lights = Array( _
      "gi20|(intensity)|000000", _
      "gi15|(intensity)|(color)", _
      "gi13|(intensity)|(color)", _
      "LPF|(intensity)|000000", _
      "LX|(intensity)|(color)", _
      "LMLR|(intensity)|(color)", _
      "LEBR|(intensity)|(color)", _
      "LPC5|(intensity)|000000", _
      "LPC4|(intensity)|000000", _
      "LF2|(intensity)|(color)", _
      "LF1|(intensity)|(color)", _
      "LPC3|(intensity)|(color)", _
      "LPC2|(intensity)|(color)", _
      "LM4|(intensity)|000000", _
      "LM3|(intensity)|000000", _
      "LM2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.23333, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|(color)", _
      "gi18|(intensity)|000000", _
      "gi15|(intensity)|000000", _
      "gi13|(intensity)|000000", _
      "gi12|(intensity)|(color)", _
      "LS5|(intensity)|(color)", _
      "LS4|(intensity)|(color)", _
      "LW2|(intensity)|(color)", _
      "LW1|(intensity)|(color)", _
      "LEBR|(intensity)|000000", _
      "LMR|(intensity)|000000", _
      "LF3|(intensity)|(color)", _
      "LF1|(intensity)|000000", _
      "LPC2|(intensity)|000000", _
      "LPC1|(intensity)|000000", _
      "LTW2|(intensity)|(color)", _
      "LTW1|(intensity)|(color)", _
      "LCC2|(intensity)|(color)", _
      "LCC1|(intensity)|(color)", _
      "LM5|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.26667, Null, Null)
    .Lights = Array( _
      "gi12|(intensity)|000000", _
      "gi11|(intensity)|(color)", _
      "LX|(intensity)|000000", _
      "LS2|(intensity)|(color)", _
      "LS3|(intensity)|(color)", _
      "LS4|(intensity)|000000", _
      "LS6|(intensity)|(color)", _
      "LW4|(intensity)|(color)", _
      "LW3|(intensity)|(color)", _
      "LW1|(intensity)|000000", _
      "LMLR|(intensity)|000000", _
      "LF3|(intensity)|000000", _
      "LF2|(intensity)|000000", _
      "LPC3|(intensity)|000000", _
      "LCC3|(intensity)|(color)", _
      "LCC1|(intensity)|000000", _
      "LM5|(intensity)|000000", _
      "LM2|(intensity)|000000" _
      )
  End With
  With .AddStep(0.30000, Null, Null)
    .Lights = Array( _
      "gi19|(intensity)|000000", _
      "gi14|(intensity)|(color)", _
      "LS5|(intensity)|000000", _
      "LW5|(intensity)|(color)", _
      "LW3|(intensity)|000000", _
      "LW2|(intensity)|000000", _
      "LTW2|(intensity)|000000", _
      "LTW1|(intensity)|000000", _
      "LCC3|(intensity)|000000", _
      "LCC2|(intensity)|000000", _
      "LMet3|(intensity)|(color)", _
      "LMet2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.33333, Null, Null)
    .Lights = Array( _
      "gi11|(intensity)|000000", _
      "LS2|(intensity)|000000", _
      "LS3|(intensity)|000000", _
      "LS6|(intensity)|000000", _
      "LW7|(intensity)|(color)", _
      "LW6|(intensity)|(color)", _
      "LW4|(intensity)|000000", _
      "LSC1|(intensity)|(color)", _
      "LMet4|(intensity)|(color)", _
      "LMet2|(intensity)|000000", _
      "LMet1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.36667, Null, Null)
    .Lights = Array( _
      "gi14|(intensity)|000000", _
      "gi10|(intensity)|(color)", _
      "gi09|(intensity)|(color)", _
      "LW8|(intensity)|(color)", _
      "LW6|(intensity)|000000", _
      "LW5|(intensity)|000000", _
      "LSC3|(intensity)|(color)", _
      "LSC2|(intensity)|(color)", _
      "LMet3|(intensity)|000000", _
      "LM1|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.40000, Null, Null)
    .Lights = Array( _
      "LS1|(intensity)|(color)", _
      "LWiz|(intensity)|(color)", _
      "LW9|(intensity)|(color)", _
      "LW7|(intensity)|000000", _
      "LSC2|(intensity)|000000", _
      "LSC1|(intensity)|000000", _
      "LMet4|(intensity)|000000", _
      "LMet1|(intensity)|000000", _
      "LM1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.43333, Null, Null)
    .Lights = Array( _
      "gi10|(intensity)|000000", _
      "gi09|(intensity)|000000", _
      "LS1|(intensity)|000000", _
      "LCWiz|(intensity)|(color)", _
      "LLWiz|(intensity)|(color)", _
      "LW9|(intensity)|000000", _
      "LW8|(intensity)|000000", _
      "LSC3|(intensity)|000000" _
      )
  End With
  With .AddStep(0.46667, Null, Null)
    .Lights = Array( _
      "gi08|(intensity)|(color)", _
      "gi04|(intensity)|(color)", _
      "LCWiz|(intensity)|000000", _
      "LLWiz|(intensity)|000000", _
      "LWiz|(intensity)|000000", _
      "LPR1|(intensity)|(color)", _
      "LMR1|(intensity)|(color)", _
      "LCR1|(intensity)|(color)", _
      "LRI|(intensity)|(color)", _
      "LRO|(intensity)|(color)", _
      "LLI|(intensity)|(color)", _
      "LLO|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.50000, Null, Null)
    .Lights = Array( _
      "gi07|(intensity)|(color)", _
      "gi03|(intensity)|(color)", _
      "LPR3|(intensity)|(color)", _
      "LPR2|(intensity)|(color)", _
      "LPR6|(intensity)|(color)", _
      "LPR5|(intensity)|(color)", _
      "LPR4|(intensity)|(color)", _
      "LMR2|(intensity)|(color)", _
      "LCR2|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.53333, Null, Null)
    .Lights = Array( _
      "gi08|(intensity)|000000", _
      "gi06|(intensity)|(color)", _
      "gi05|(intensity)|(color)", _
      "gi04|(intensity)|000000", _
      "gi02|(intensity)|(color)", _
      "gi01|(intensity)|(color)", _
      "LC1|(intensity)|(color)", _
      "LC2|(intensity)|(color)", _
      "LC3|(intensity)|(color)", _
      "LC4|(intensity)|(color)", _
      "LC5|(intensity)|(color)", _
      "LC6|(intensity)|(color)", _
      "LC7|(intensity)|(color)", _
      "LC8|(intensity)|(color)", _
      "LH9|(intensity)|(color)", _
      "LH8|(intensity)|(color)", _
      "LH7|(intensity)|(color)", _
      "LH6|(intensity)|(color)", _
      "LH5|(intensity)|(color)", _
      "LH4|(intensity)|(color)", _
      "LH3|(intensity)|(color)", _
      "LH2|(intensity)|(color)", _
      "LH1|(intensity)|(color)", _
      "LPR1|(intensity)|000000", _
      "LPR2|(intensity)|000000", _
      "LMR2|(intensity)|000000", _
      "LMR1|(intensity)|000000", _
      "LCR2|(intensity)|000000", _
      "LCR1|(intensity)|000000", _
      "LRI|(intensity)|000000", _
      "LRO|(intensity)|000000", _
      "LLI|(intensity)|000000", _
      "LLO|(intensity)|000000", _
      "LSR|(intensity)|(color)", _
      "LSL|(intensity)|(color)" _
      )
  End With
  With .AddStep(0.56667, Null, Null)
    .Lights = Array( _
      "gi07|(intensity)|000000", _
      "gi06|(intensity)|000000", _
      "gi03|(intensity)|000000", _
      "gi02|(intensity)|000000", _
      "LC1|(intensity)|000000", _
      "LC2|(intensity)|000000", _
      "LC3|(intensity)|000000", _
      "LC4|(intensity)|000000", _
      "LC5|(intensity)|000000", _
      "LC6|(intensity)|000000", _
      "LC7|(intensity)|000000", _
      "LC8|(intensity)|000000", _
      "LSA|(intensity)|(color)", _
      "LPR3|(intensity)|000000", _
      "LPR6|(intensity)|000000", _
      "LPR5|(intensity)|000000", _
      "LPR4|(intensity)|000000", _
      "LSR|(intensity)|000000", _
      "LSL|(intensity)|000000" _
      )
  End With
  With .AddStep(0.60000, Null, Null)
    .Lights = Array( _
      "gi05|(intensity)|000000", _
      "gi01|(intensity)|000000", _
      "LH9|(intensity)|000000", _
      "LH8|(intensity)|000000", _
      "LH7|(intensity)|000000", _
      "LH6|(intensity)|000000", _
      "LH5|(intensity)|000000", _
      "LH4|(intensity)|000000", _
      "LH3|(intensity)|000000", _
      "LH2|(intensity)|000000", _
      "LH1|(intensity)|000000" _
      )
  End With
  With .AddStep(0.63333, Null, Null)
    .Lights = Array( _
      "giapron|(intensity)|(color)", _
      "LSA|(intensity)|000000" _
      )
  End With
  With .AddStep(0.66667, Null, 0.03333)
    .Lights = Array( _
      "giapron|(intensity)|000000" _
      )
  End With
End With


End Sub





' Left slingshot flasher dome shows
Const LeftSlingLightName = "FL5"
Const LeftSlingShowFrame = 0.1


Sub CreateLeftSlingShows()

    With CreateGlfShow("lsling_rotate1_cw")
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"g|0|(color)", _
                LeftSlingLightName&"h|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"h|0|(color)", _
                LeftSlingLightName&"a|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"a|0|(color)", _
                LeftSlingLightName&"b|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"b|0|(color)", _
                LeftSlingLightName&"c|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"c|0|(color)", _
                LeftSlingLightName&"d|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"d|0|(color)", _
                LeftSlingLightName&"e|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"e|0|(color)", _
                LeftSlingLightName&"f|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"f|0|(color)", _
                LeftSlingLightName&"g|(intensity)|(color)")
        End With
    End With

    With CreateGlfShow("lsling_rotate1_ccw")
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"b|0|(color)", _
                LeftSlingLightName&"a|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"a|0|(color)", _
                LeftSlingLightName&"h|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"h|0|(color)", _
                LeftSlingLightName&"g|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"g|0|(color)", _
                LeftSlingLightName&"f|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"f|0|(color)", _
                LeftSlingLightName&"e|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"e|0|(color)", _
                LeftSlingLightName&"d|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"d|0|(color)", _
                LeftSlingLightName&"c|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"c|0|(color)", _
                LeftSlingLightName&"b|(intensity)|(color)")
        End With
    End With


    With CreateGlfShow("lsling_rotate2_cw")
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"h|0|(color1)", _
                LeftSlingLightName&"a|(intensity)|(color1)", _
                LeftSlingLightName&"d|0|(color2)", _
                LeftSlingLightName&"e|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"a|0|(color1)", _
                LeftSlingLightName&"b|(intensity)|(color1)", _
                LeftSlingLightName&"e|0|(color2)", _
                LeftSlingLightName&"f|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"b|0|(color1)", _
                LeftSlingLightName&"c|(intensity)|(color1)", _
                LeftSlingLightName&"f|0|(color2)", _
                LeftSlingLightName&"g|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"c|0|(color1)", _
                LeftSlingLightName&"d|(intensity)|(color1)", _
                LeftSlingLightName&"g|0|(color2)", _
                LeftSlingLightName&"h|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"d|0|(color1)", _
                LeftSlingLightName&"e|(intensity)|(color1)", _
                LeftSlingLightName&"h|0|(color2)", _
                LeftSlingLightName&"a|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"e|0|(color1)", _
                LeftSlingLightName&"f|(intensity)|(color1)", _
                LeftSlingLightName&"a|0|(color2)", _
                LeftSlingLightName&"b|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"f|0|(color1)", _
                LeftSlingLightName&"g|(intensity)|(color1)", _
                LeftSlingLightName&"b|0|(color2)", _
                LeftSlingLightName&"c|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"g|0|(color1)", _
                LeftSlingLightName&"h|(intensity)|(color1)", _
                LeftSlingLightName&"c|0|(color2)", _
                LeftSlingLightName&"d|(intensity)|(color2)")
        End With
    End With

    With CreateGlfShow("lsling_rotate2_ccw")
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"b|0|(color1)", _
                LeftSlingLightName&"a|(intensity)|(color1)", _
                LeftSlingLightName&"f|0|(color2)", _
                LeftSlingLightName&"e|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"a|0|(color1)", _
                LeftSlingLightName&"h|(intensity)|(color1)", _
                LeftSlingLightName&"e|0|(color2)", _
                LeftSlingLightName&"d|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"h|0|(color1)", _
                LeftSlingLightName&"g|(intensity)|(color1)", _
                LeftSlingLightName&"d|0|(color2)", _
                LeftSlingLightName&"c|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"g|0|(color1)", _
                LeftSlingLightName&"f|(intensity)|(color1)", _
                LeftSlingLightName&"c|0|(color2)", _
                LeftSlingLightName&"b|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"f|0|(color1)", _
                LeftSlingLightName&"e|(intensity)|(color1)", _
                LeftSlingLightName&"b|0|(color2)", _
                LeftSlingLightName&"a|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"e|0|(color1)", _
                LeftSlingLightName&"d|(intensity)|(color1)", _
                LeftSlingLightName&"a|0|(color2)", _
                LeftSlingLightName&"h|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"d|0|(color1)", _
                LeftSlingLightName&"c|(intensity)|(color1)", _
                LeftSlingLightName&"h|0|(color2)", _
                LeftSlingLightName&"g|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"c|0|(color1)", _
                LeftSlingLightName&"b|(intensity)|(color1)", _
                LeftSlingLightName&"g|0|(color2)", _
                LeftSlingLightName&"f|(intensity)|(color2)")
        End With
    End With


    With CreateGlfShow("lsling_rotate4_cw")
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"h|0|(color1)", _
                LeftSlingLightName&"a|(intensity)|(color1)", _
                LeftSlingLightName&"b|0|(color2)", _
                LeftSlingLightName&"c|(intensity)|(color2)", _
                LeftSlingLightName&"d|0|(color3)", _
                LeftSlingLightName&"e|(intensity)|(color3)", _
                LeftSlingLightName&"f|0|(color4)", _
                LeftSlingLightName&"g|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"a|0|(color1)", _
                LeftSlingLightName&"b|(intensity)|(color1)", _
                LeftSlingLightName&"c|0|(color2)", _
                LeftSlingLightName&"d|(intensity)|(color2)", _
                LeftSlingLightName&"e|0|(color3)", _
                LeftSlingLightName&"f|(intensity)|(color3)", _
                LeftSlingLightName&"g|0|(color4)", _
                LeftSlingLightName&"h|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"b|0|(color1)", _
                LeftSlingLightName&"c|(intensity)|(color1)", _
                LeftSlingLightName&"d|0|(color2)", _
                LeftSlingLightName&"e|(intensity)|(color2)", _
                LeftSlingLightName&"f|0|(color3)", _
                LeftSlingLightName&"g|(intensity)|(color3)", _
                LeftSlingLightName&"h|0|(color4)", _
                LeftSlingLightName&"a|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"c|0|(color1)", _
                LeftSlingLightName&"d|(intensity)|(color1)", _
                LeftSlingLightName&"e|0|(color2)", _
                LeftSlingLightName&"f|(intensity)|(color2)", _
                LeftSlingLightName&"g|0|(color3)", _
                LeftSlingLightName&"h|(intensity)|(color3)", _
                LeftSlingLightName&"a|0|(color4)", _
                LeftSlingLightName&"b|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"d|0|(color1)", _
                LeftSlingLightName&"e|(intensity)|(color1)", _
                LeftSlingLightName&"f|0|(color2)", _
                LeftSlingLightName&"g|(intensity)|(color2)", _
                LeftSlingLightName&"h|0|(color3)", _
                LeftSlingLightName&"a|(intensity)|(color3)", _
                LeftSlingLightName&"b|0|(color4)", _
                LeftSlingLightName&"c|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"e|0|(color1)", _
                LeftSlingLightName&"f|(intensity)|(color1)", _
                LeftSlingLightName&"g|0|(color2)", _
                LeftSlingLightName&"h|(intensity)|(color2)", _
                LeftSlingLightName&"a|0|(color3)", _
                LeftSlingLightName&"b|(intensity)|(color3)", _
                LeftSlingLightName&"c|0|(color4)", _
                LeftSlingLightName&"d|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"f|0|(color1)", _
                LeftSlingLightName&"g|(intensity)|(color1)", _
                LeftSlingLightName&"h|0|(color2)", _
                LeftSlingLightName&"a|(intensity)|(color2)", _
                LeftSlingLightName&"b|0|(color3)", _
                LeftSlingLightName&"c|(intensity)|(color3)", _
                LeftSlingLightName&"d|0|(color4)", _
                LeftSlingLightName&"e|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"g|0|(color1)", _
                LeftSlingLightName&"h|(intensity)|(color1)", _
                LeftSlingLightName&"a|0|(color2)", _
                LeftSlingLightName&"b|(intensity)|(color2)", _
                LeftSlingLightName&"c|0|(color3)", _
                LeftSlingLightName&"d|(intensity)|(color3)", _
                LeftSlingLightName&"e|0|(color4)", _
                LeftSlingLightName&"f|(intensity)|(color4)")
        End With
    End With

    With CreateGlfShow("lsling_rotate4_ccw")
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"h|0|(color1)", _
                LeftSlingLightName&"a|(intensity)|(color1)", _
                LeftSlingLightName&"b|0|(color2)", _
                LeftSlingLightName&"c|(intensity)|(color2)", _
                LeftSlingLightName&"d|0|(color3)", _
                LeftSlingLightName&"e|(intensity)|(color3)", _
                LeftSlingLightName&"f|0|(color4)", _
                LeftSlingLightName&"g|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"g|0|(color1)", _
                LeftSlingLightName&"h|(intensity)|(color1)", _
                LeftSlingLightName&"a|0|(color2)", _
                LeftSlingLightName&"b|(intensity)|(color2)", _
                LeftSlingLightName&"c|0|(color3)", _
                LeftSlingLightName&"d|(intensity)|(color3)", _
                LeftSlingLightName&"e|0|(color4)", _
                LeftSlingLightName&"f|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"f|0|(color1)", _
                LeftSlingLightName&"g|(intensity)|(color1)", _
                LeftSlingLightName&"h|0|(color2)", _
                LeftSlingLightName&"a|(intensity)|(color2)", _
                LeftSlingLightName&"b|0|(color3)", _
                LeftSlingLightName&"c|(intensity)|(color3)", _
                LeftSlingLightName&"d|0|(color4)", _
                LeftSlingLightName&"e|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"e|0|(color1)", _
                LeftSlingLightName&"f|(intensity)|(color1)", _
                LeftSlingLightName&"g|0|(color2)", _
                LeftSlingLightName&"h|(intensity)|(color2)", _
                LeftSlingLightName&"a|0|(color3)", _
                LeftSlingLightName&"b|(intensity)|(color3)", _
                LeftSlingLightName&"c|0|(color4)", _
                LeftSlingLightName&"d|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"d|0|(color1)", _
                LeftSlingLightName&"e|(intensity)|(color1)", _
                LeftSlingLightName&"f|0|(color2)", _
                LeftSlingLightName&"g|(intensity)|(color2)", _
                LeftSlingLightName&"h|0|(color3)", _
                LeftSlingLightName&"a|(intensity)|(color3)", _
                LeftSlingLightName&"b|0|(color4)", _
                LeftSlingLightName&"c|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"c|0|(color1)", _
                LeftSlingLightName&"d|(intensity)|(color1)", _
                LeftSlingLightName&"e|0|(color2)", _
                LeftSlingLightName&"f|(intensity)|(color2)", _
                LeftSlingLightName&"g|0|(color3)", _
                LeftSlingLightName&"h|(intensity)|(color3)", _
                LeftSlingLightName&"a|0|(color4)", _
                LeftSlingLightName&"b|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"b|0|(color1)", _
                LeftSlingLightName&"c|(intensity)|(color1)", _
                LeftSlingLightName&"d|0|(color2)", _
                LeftSlingLightName&"e|(intensity)|(color2)", _
                LeftSlingLightName&"f|0|(color3)", _
                LeftSlingLightName&"g|(intensity)|(color3)", _
                LeftSlingLightName&"h|0|(color4)", _
                LeftSlingLightName&"a|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"a|0|(color1)", _
                LeftSlingLightName&"b|(intensity)|(color1)", _
                LeftSlingLightName&"c|0|(color2)", _
                LeftSlingLightName&"d|(intensity)|(color2)", _
                LeftSlingLightName&"e|0|(color3)", _
                LeftSlingLightName&"f|(intensity)|(color3)", _
                LeftSlingLightName&"g|0|(color4)", _
                LeftSlingLightName&"h|(intensity)|(color4)")
        End With
    End With


    With CreateGlfShow("lsling_rotate1_cw_skip1")
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"g|0|(color)", _
                LeftSlingLightName&"a|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"a|0|(color)", _
                LeftSlingLightName&"c|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"c|0|(color)", _
                LeftSlingLightName&"e|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"e|0|(color)", _
                LeftSlingLightName&"g|(intensity)|(color)")
        End With
    End With

    With CreateGlfShow("lsling_rotate1_ccw_skip1")
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"a|0|(color)", _
                LeftSlingLightName&"g|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"g|0|(color)", _
                LeftSlingLightName&"e|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"e|0|(color)", _
                LeftSlingLightName&"c|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"c|0|(color)", _
                LeftSlingLightName&"a|(intensity)|(color)")
        End With
    End With


    With CreateGlfShow("lsling_rotate2_cw_skip1")
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"g|0|(color1)", _
                LeftSlingLightName&"a|(intensity)|(color1)", _
                LeftSlingLightName&"c|0|(color2)", _
                LeftSlingLightName&"e|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"a|0|(color1)", _
                LeftSlingLightName&"c|(intensity)|(color1)", _
                LeftSlingLightName&"e|0|(color2)", _
                LeftSlingLightName&"g|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"c|0|(color1)", _
                LeftSlingLightName&"e|(intensity)|(color1)", _
                LeftSlingLightName&"g|0|(color2)", _
                LeftSlingLightName&"a|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"e|0|(color1)", _
                LeftSlingLightName&"g|(intensity)|(color1)", _
                LeftSlingLightName&"a|0|(color2)", _
                LeftSlingLightName&"c|(intensity)|(color2)")
        End With
    End With

    With CreateGlfShow("lsling_rotate2_ccw_skip1")
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"c|0|(color1)", _
                LeftSlingLightName&"a|(intensity)|(color1)", _
                LeftSlingLightName&"g|0|(color2)", _
                LeftSlingLightName&"e|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"a|0|(color1)", _
                LeftSlingLightName&"g|(intensity)|(color1)", _
                LeftSlingLightName&"e|0|(color2)", _
                LeftSlingLightName&"c|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"g|0|(color1)", _
                LeftSlingLightName&"e|(intensity)|(color1)", _
                LeftSlingLightName&"c|0|(color2)", _
                LeftSlingLightName&"a|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"e|0|(color1)", _
                LeftSlingLightName&"c|(intensity)|(color1)", _
                LeftSlingLightName&"a|0|(color2)", _
                LeftSlingLightName&"g|(intensity)|(color2)")
        End With
    End With

    With CreateGlfShow("lsling_swap_2_2_a")
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"a|(intensity)|(color1)", _
                LeftSlingLightName&"c|(intensity)|(color2)", _
                LeftSlingLightName&"e|(intensity)|(color1)", _
                LeftSlingLightName&"g|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"a|(intensity)|(color2)", _
                LeftSlingLightName&"c|(intensity)|(color1)", _
                LeftSlingLightName&"e|(intensity)|(color2)", _
                LeftSlingLightName&"g|(intensity)|(color1)")
        End With
    End With

    With CreateGlfShow("lsling_swap_2_2_b")
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"b|(intensity)|(color1)", _
                LeftSlingLightName&"d|(intensity)|(color2)", _
                LeftSlingLightName&"f|(intensity)|(color1)", _
                LeftSlingLightName&"h|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"b|(intensity)|(color2)", _
                LeftSlingLightName&"d|(intensity)|(color1)", _
                LeftSlingLightName&"f|(intensity)|(color2)", _
                LeftSlingLightName&"h|(intensity)|(color1)")
        End With
    End With

    With CreateGlfShow("lsling_swap_4_4")
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"a|(intensity)|(color1)", _
                LeftSlingLightName&"b|(intensity)|(color2)", _
                LeftSlingLightName&"c|(intensity)|(color1)", _
                LeftSlingLightName&"d|(intensity)|(color2)", _
                LeftSlingLightName&"e|(intensity)|(color1)", _
                LeftSlingLightName&"f|(intensity)|(color2)", _
                LeftSlingLightName&"g|(intensity)|(color1)", _
                LeftSlingLightName&"h|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, LeftSlingShowFrame)
            .Lights = Array( _
                LeftSlingLightName&"a|(intensity)|(color2)", _
                LeftSlingLightName&"b|(intensity)|(color1)", _
                LeftSlingLightName&"c|(intensity)|(color2)", _
                LeftSlingLightName&"d|(intensity)|(color1)", _
                LeftSlingLightName&"e|(intensity)|(color2)", _
                LeftSlingLightName&"f|(intensity)|(color1)", _
                LeftSlingLightName&"g|(intensity)|(color2)", _
                LeftSlingLightName&"h|(intensity)|(color1)")
        End With
    End With



    With CreateGlfShow("lsling_base_show")
        With .AddStep(0.01, Null, Null)
            With .Shows("lsling_rotate1_ccw")
                .Key = "key_lsling_base_show1"
                .Speed = 7
                .Loops = 1
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", "ffffff"
                End With
            End With
            With .DOFEvent("16")
                .Action = "DOF_ON"
            End With
        End With
        With .AddStep(0.02, Null, Null)
            With .Shows("flash_color")
                .Key = "key_lsling_base_show2"
                .Speed = 15
                .Loops = 3
                With .Tokens()
                    .Add "lights", "tLSling"
                    .Add "color", GIColor3000k
                End With
            End With
        End With
        With .AddStep(0.03, Null, Null)
            With .Shows("flash_color_fadeout")
                .Key = "key_DOF16"
                .Speed = 10
                .Loops = 1
                With .Tokens()
                    .Add "color", GIColor3000k
                    .Add "lights", "LBG16"
                End With
            End With
        End With
        With .AddStep(0.3, Null, Null)
            With .DOFEvent("16")
                .Action = "DOF_OFF"
            End With
        End With
        With .AddStep(0.31, Null, Null)
        End With
    End With


End Sub


Sub CreateMeteorWaveShows()

  With CreateGlfShow("meteor1_explodes")
    With .AddStep(0.02, Null, Null)
        With .Shows("flash_color")
            .Key = "key_DOF13"
            .Speed = 20
            .Loops = 10
            With .Tokens()
                .Add "color", GIColor3000k
                .Add "lights", "LBG13"
            End With
        End With
    End With
    With .AddStep(0.03333, Null, Null)
      With .DOFEvent("13")
        .Action = "DOF_ON"
      End With
      .Lights = Array( _
        "LW8|100|(color)", _
        "LW6|100|(color)", _
        "LMet2|100|(color)" _
        )
    End With
    With .AddStep(0.06667, Null, Null)
      .Lights = Array( _
        "gi09|100|(color)", _
        "LS3|100|(color)", _
        "LCWiz|100|(color)", _
        "LW8|100|000000", _
        "LW6|100|000000", _
        "LW4|100|(color)", _
        "LMet3|100|(color)", _
        "LMet2|100|000000" _
        )
    End With
    With .AddStep(0.10000, Null, Null)
      .Lights = Array( _
        "gi09|100|000000", _
        "LS3|100|000000", _
        "LCWiz|100|000000", _
        "LW4|100|000000", _
        "LW2|100|(color)", _
        "LTW2|100|(color)", _
        "LTW1|100|(color)", _
        "LCC2|100|(color)", _
        "LMet4|100|(color)", _
        "LMet3|100|000000" _
        )
    End With
    With .AddStep(0.13333, Null, Null)
      .Lights = Array( _
        "gi12|100|(color)", _
        "gi04|100|585858", _
        "LS4|100|(color)", _
        "LLWiz|100|ececec", _
        "LW2|100|000000", _
        "LW1|100|838383", _
        "LSC3|100|(color)", _
        "LSC2|100|(color)", _
        "LSC1|100|(color)", _
        "LTW2|100|000000", _
        "LTW1|100|000000", _
        "LCC2|100|000000", _
        "LCC1|100|101010", _
        "LMet4|100|000000", _
        "LM2|100|(color)", _
        "LCR1|100|(color)", _
        "LLI|100|(color)" _
        )
    End With
    With .AddStep(0.16667, Null, Null)
      .Lights = Array( _
        "gi12|100|000000", _
        "gi10|100|(color)", _
        "gi04|100|000000", _
        "gi03|100|(color)", _
        "LX|100|(color)", _
        "LS5|100|(color)", _
        "LS4|100|000000", _
        "LS6|100|(color)", _
        "LLWiz|100|000000", _
        "LW1|100|000000", _
        "LMLR|100|(color)", _
        "LSC3|100|000000", _
        "LSC2|100|000000", _
        "LSC1|100|000000", _
        "LPC2|100|(color)", _
        "LPC1|100|(color)", _
        "LCC1|100|000000", _
        "LM2|100|000000", _
        "LPR1|100|919191", _
        "LPR3|100|(color)", _
        "LPR2|100|(color)", _
        "LMR2|100|(color)", _
        "LMR1|100|(color)", _
        "LCR2|100|(color)", _
        "LCR1|100|000000", _
        "LLI|100|000000", _
        "LLO|100|(color)" _
        )
    End With
    With .AddStep(0.20000, Null, Null)
      .Lights = Array( _
        "gi20|100|(color)", _
        "gi19|100|(color)", _
        "gi18|100|(color)", _
        "gi14|100|(color)", _
        "gi10|100|000000", _
        "gi08|100|(color)", _
        "gi07|100|(color)", _
        "gi03|100|000000", _
        "gi02|100|(color)", _
        "LPF|100|(color)", _
        "LX|100|000000", _
        "LS5|100|000000", _
        "LS6|100|000000", _
        "LC1|100|(color)", _
        "LC2|100|(color)", _
        "LC3|100|(color)", _
        "LC4|100|(color)", _
        "LC5|100|(color)", _
        "LC6|100|(color)", _
        "LC7|100|(color)", _
        "LMLR|100|000000", _
        "LEBR|100|(color)", _
        "LMR|100|(color)", _
        "LPC4|100|(color)", _
        "LF3|100|(color)", _
        "LPC2|100|000000", _
        "LPC1|100|000000", _
        "LM5|100|(color)", _
        "LM4|100|(color)", _
        "LH5|100|(color)", _
        "LH4|100|(color)", _
        "LH3|100|(color)", _
        "LH2|100|(color)", _
        "LH1|100|(color)", _
        "LPR1|100|000000", _
        "LPR3|100|000000", _
        "LPR2|100|000000", _
        "LPR6|100|(color)", _
        "LPR5|100|(color)", _
        "LPR4|100|(color)", _
        "LMR2|100|000000", _
        "LMR1|100|000000", _
        "LCR2|100|000000", _
        "LRI|100|(color)", _
        "LLO|100|000000", _
        "LSL|100|(color)" _
        )
    End With
    With .AddStep(0.23333, Null, Null)
      .Lights = Array( _
        "gi20|100|000000", _
        "gi21|100|(color)", _
        "gi18|100|000000", _
        "gi15|100|1a1a1a", _
        "gi14|100|000000", _
        "gi13|100|(color)", _
        "gi08|100|000000", _
        "gi07|100|eeeeee", _
        "gi06|100|fefefe", _
        "gi05|100|080808", _
        "gi02|100|000000", _
        "gi01|100|(color)", _
        "LPF|100|000000", _
        "LSwC1|100|(color)", _
        "LC1|100|000000", _
        "LC2|100|000000", _
        "LC3|100|000000", _
        "LC4|100|000000", _
        "LC5|100|000000", _
        "LC6|100|000000", _
        "LC8|100|(color)", _
        "LEBR|100|000000", _
        "LMR|100|000000", _
        "LPC5|100|(color)", _
        "LF3|100|000000", _
        "LF2|100|(color)", _
        "LF1|100|(color)", _
        "LM5|100|000000", _
        "LM4|100|000000", _
        "LM3|100|(color)", _
        "LH9|100|(color)", _
        "LH8|100|(color)", _
        "LH7|100|(color)", _
        "LH6|100|(color)", _
        "LH3|100|000000", _
        "LH2|100|000000", _
        "LH1|100|000000", _
        "LPR6|100|000000", _
        "LPR5|100|000000", _
        "LPR4|100|000000", _
        "LRI|100|000000", _
        "LRO|100|(color)", _
        "LSL|100|393939" _
        )
    End With
    With .AddStep(0.26667, Null, Null)
      .Lights = Array( _
        "gi22|100|(color)", _
        "gi19|100|000000", _
        "gi15|100|(color)", _
        "gi13|100|000000", _
        "gi07|100|000000", _
        "gi06|100|(color)", _
        "gi05|100|(color)", _
        "gi01|100|000000", _
        "LSwC3|100|(color)", _
        "LSwC2|100|(color)", _
        "LC7|100|000000", _
        "LC8|100|000000", _
        "LPC5|100|000000", _
        "LPC4|100|000000", _
        "LF2|100|000000", _
        "LF1|100|000000", _
        "LM3|100|000000", _
        "LSA|100|(color)", _
        "LH9|100|000000", _
        "LH8|100|000000", _
        "LH7|100|000000", _
        "LH6|100|000000", _
        "LH5|100|000000", _
        "LH4|100|000000", _
        "LRO|100|000000", _
        "LSR|100|(color)", _
        "LSL|100|000000")
        '"LB4|100|(color)" _
        ')
    End With
    With .AddStep(0.30000, Null, Null)
      .Lights = Array( _
        "gi22|100|000000", _
        "gi21|100|000000", _
        "gi15|100|000000", _
        "gi06|100|000000", _
        "gi05|100|000000", _
        "LSwC3|100|000000", _
        "LSwC1|100|000000", _
        "LSA|100|000000", _
        "LSR|100|000000", _
        "LB3|100|(color)")
        '"LB4|100|000000" _
        ')
    End With
    With .AddStep(0.33333, Null, Null)
      .Lights = Array( _
        "giapron|100|(color)", _
        "gi16|100|(color)", _
        "LSwC2|100|000000", _
        "LB2|100|(color)", _
        "LB3|100|000000" _
        )
    End With
    With .AddStep(0.36667, Null, Null)
      .Lights = Array( _
        "gi17|100|(color)", _
        "gi16|100|7d7d7d", _
        "LB2|100|000000" _
        )
    End With
    With .AddStep(0.40000, Null, Null)
      .Lights = Array( _
        "giapron|100|000000", _
        "gi16|100|000000" _
        )
    End With
    With .AddStep(0.43333, Null, Null)
      .Lights = Array( _
        "gi17|100|000000" _
        )
    End With
    With .AddStep(0.46667, Null, Null)
      With .DOFEvent("13")
        .Action = "DOF_OFF"
      End With
    End With
  End With



  With CreateGlfShow("meteor2_explodes")
    With .AddStep(0.02, Null, Null)
        With .Shows("flash_color")
            .Key = "key_DOF10"
            .Speed = 20
            .Loops = 10
            With .Tokens()
                .Add "color", GIColor3000k
                .Add "lights", "LBG10"
            End With
        End With
    End With
    With .AddStep(0.03333, Null, Null)
      With .DOFEvent("10")
        .Action = "DOF_ON"
      End With
      .Lights = Array( _
        "LS2|100|(color)", _
        "LW3|100|(color)" _
        )
    End With
    With .AddStep(0.06667, Null, Null)
      .Lights = Array( _
        "LS2|100|000000", _
        "LW3|100|000000", _
        "LW1|100|(color)", _
        "LTW2|100|(color)", _
        "LTW1|100|(color)", _
        "LB1|100|(color)" _
        )
    End With
    With .AddStep(0.10000, Null, Null)
      .Lights = Array( _
        "gi11|100|(color)", _
        "LW9|100|(color)", _
        "LW1|100|000000", _
        "LPC3|100|(color)", _
        "LTW2|100|000000", _
        "LTW1|100|000000", _
        "LCC1|100|(color)", _
        "LMet4|100|(color)", _
        "LM2|100|(color)", _
        "LM1|100|(color)", _
        "LB1|100|000000" _
        )
    End With
    With .AddStep(0.13333, Null, Null)
      .Lights = Array( _
        "gi12|100|(color)", _
        "gi11|100|000000", _
        "LX|100|(color)", _
        "LS1|100|(color)", _
        "LS6|100|(color)", _
        "LWiz|100|(color)", _
        "LW9|100|000000", _
        "LMLR|100|(color)", _
        "LSC1|100|(color)", _
        "LPC3|100|000000", _
        "LPC2|100|b2b2b2", _
        "LPC1|100|(color)", _
        "LCC1|100|000000", _
        "LMet4|100|000000", _
        "LM2|100|000000", _
        "LM1|100|000000" _
        )
    End With
    With .AddStep(0.16667, Null, Null)
      .Lights = Array( _
        "gi20|100|(color)", _
        "gi12|100|000000", _
        "LPF|100|(color)", _
        "LX|100|000000", _
        "LS1|100|000000", _
        "LS6|100|000000", _
        "LCWiz|100|(color)", _
        "LLWiz|100|(color)", _
        "LWiz|100|000000", _
        "LMLR|100|000000", _
        "LMR|100|(color)", _
        "LSC3|100|(color)", _
        "LSC2|100|(color)", _
        "LSC1|100|000000", _
        "LPC2|100|000000", _
        "LPC1|100|000000", _
        "LM5|100|(color)", _
        "LM4|100|(color)" _
        )
    End With
    With .AddStep(0.20000, Null, Null)
      .Lights = Array( _
        "gi20|100|000000", _
        "gi19|100|(color)", _
        "gi18|100|(color)", _
        "gi14|100|(color)", _
        "gi13|100|(color)", _
        "gi10|100|(color)", _
        "LPF|100|000000", _
        "LCWiz|100|000000", _
        "LLWiz|100|000000", _
        "LMR|100|000000", _
        "LPC5|100|(color)", _
        "LPC4|100|(color)", _
        "LSC3|100|000000", _
        "LSC2|100|000000", _
        "LF3|100|(color)", _
        "LF2|100|(color)", _
        "LM5|100|000000", _
        "LM4|100|000000", _
        "LM3|100|(color)" _
        )
    End With
    With .AddStep(0.23333, Null, Null)
      .Lights = Array( _
        "gi22|100|(color)", _
        "gi21|100|(color)", _
        "gi19|100|000000", _
        "gi18|100|000000", _
        "gi15|100|(color)", _
        "gi14|100|000000", _
        "gi13|100|000000", _
        "gi10|100|000000", _
        "gi04|100|(color)", _
        "LSwC3|100|(color)", _
        "LSwC1|100|(color)", _
        "LPC5|100|000000", _
        "LPC4|100|000000", _
        "LF3|100|000000", _
        "LF2|100|000000", _
        "LF1|100|(color)", _
        "LM3|100|000000", _
        "LPR1|100|(color)", _
        "LMR1|100|(color)", _
        "LCR2|100|(color)", _
        "LCR1|100|(color)", _
        "LLI|100|(color)", _
        "LLO|100|(color)")
        '"LB4|100|(color)" _
        ')
    End With
    With .AddStep(0.26667, Null, Null)
      .Lights = Array( _
        "gi22|100|000000", _
        "gi21|100|000000", _
        "gi15|100|030303", _
        "gi08|100|(color)", _
        "gi04|100|6d6d6d", _
        "gi03|100|(color)", _
        "LSwC3|100|000000", _
        "LSwC2|100|(color)", _
        "LSwC1|100|000000", _
        "LF1|100|000000", _
        "LPR1|100|000000", _
        "LPR3|100|(color)", _
        "LPR2|100|(color)", _
        "LPR6|100|dbdbdb", _
        "LPR5|100|(color)", _
        "LPR4|100|(color)", _
        "LMR2|100|(color)", _
        "LMR1|100|000000", _
        "LCR1|100|000000", _
        "LRI|100|(color)", _
        "LLI|100|000000", _
        "LB3|100|(color)" _
        )
    End With
    With .AddStep(0.30000, Null, Null)
      .Lights = Array( _
        "gi15|100|000000", _
        "gi08|100|000000", _
        "gi07|100|(color)", _
        "gi04|100|000000", _
        "gi03|100|000000", _
        "gi02|100|(color)", _
        "LSwC2|100|000000", _
        "LC1|100|(color)", _
        "LC2|100|(color)", _
        "LC3|100|(color)", _
        "LC4|100|(color)", _
        "LC5|100|(color)", _
        "LC6|100|(color)", _
        "LC7|100|(color)", _
        "LC8|100|(color)", _
        "LH8|100|(color)", _
        "LH7|100|(color)", _
        "LH6|100|(color)", _
        "LH5|100|(color)", _
        "LH4|100|(color)", _
        "LH3|100|(color)", _
        "LH2|100|(color)", _
        "LH1|100|(color)", _
        "LPR3|100|000000", _
        "LPR2|100|000000", _
        "LPR6|100|(color)", _
        "LMR2|100|000000", _
        "LCR2|100|000000", _
        "LRI|100|000000", _
        "LRO|100|(color)", _
        "LLO|100|000000", _
        "LSL|100|(color)", _
        "LB2|100|272727")
        '"LB4|100|000000" _
        ')
    End With
    With .AddStep(0.33333, Null, Null)
      .Lights = Array( _
        "gi16|100|(color)", _
        "gi07|100|000000", _
        "gi06|100|(color)", _
        "gi05|100|(color)", _
        "gi01|100|(color)", _
        "LC1|100|000000", _
        "LC2|100|000000", _
        "LC3|100|000000", _
        "LC4|100|000000", _
        "LC5|100|a0a0a0", _
        "LH9|100|(color)", _
        "LPR6|100|000000", _
        "LPR5|100|000000", _
        "LPR4|100|000000", _
        "LRO|100|000000", _
        "LSR|100|(color)", _
        "LB2|100|(color)", _
        "LB3|100|000000" _
        )
    End With
    With .AddStep(0.36667, Null, Null)
      .Lights = Array( _
        "gi17|100|(color)", _
        "gi02|100|000000", _
        "gi01|100|000000", _
        "LC5|100|000000", _
        "LC6|100|000000", _
        "LC7|100|000000", _
        "LC8|100|000000", _
        "LSA|100|(color)", _
        "LH9|100|000000", _
        "LH8|100|000000", _
        "LH7|100|000000", _
        "LH6|100|000000", _
        "LH5|100|000000", _
        "LH4|100|000000", _
        "LH3|100|000000", _
        "LH2|100|000000", _
        "LH1|100|000000", _
        "LSL|100|000000", _
        "LB2|100|000000" _
        )
    End With
    With .AddStep(0.40000, Null, Null)
      .Lights = Array( _
        "gi16|100|000000", _
        "gi06|100|000000", _
        "gi05|100|000000", _
        "LSR|100|000000" _
        )
    End With
    With .AddStep(0.43333, Null, Null)
      .Lights = Array( _
        "gi17|100|000000", _
        "LSA|100|000000" _
        )
    End With
    With .AddStep(0.46667, Null, Null)
      With .DOFEvent("10")
        .Action = "DOF_OFF"
      End With
      .Lights = Array( _
        "giapron|100|(color)" _
        )
    End With
  End With



  With CreateGlfShow("meteor3_explodes")
    With .AddStep(0.02, Null, Null)
        With .Shows("flash_color")
            .Key = "key_DOF15"
            .Speed = 20
            .Loops = 10
            With .Tokens()
                .Add "color", GIColor3000k
                .Add "lights", "LBG15"
            End With
        End With
    End With
    With .AddStep(0.03333, Null, Null)
      With .DOFEvent("15")
        .Action = "DOF_ON"
      End With
      .Lights = Array( _
        "LW7|100|(color)", _
        "LW4|100|(color)", _
        "LMet4|100|(color)" _
        )
    End With
    With .AddStep(0.06667, Null, Null)
      .Lights = Array( _
        "LW8|100|fcfcfc", _
        "LW7|100|000000", _
        "LW4|100|000000", _
        "LSC1|100|(color)", _
        "LMet4|100|000000" _
        )
    End With
    With .AddStep(0.10000, Null, Null)
      .Lights = Array( _
        "LS4|100|(color)", _
        "LW8|100|000000", _
        "LW1|100|(color)", _
        "LSC3|100|(color)", _
        "LSC1|100|000000" _
        )
    End With
    With .AddStep(0.13333, Null, Null)
      .Lights = Array( _
        "gi19|100|(color)", _
        "gi10|100|c5c5c5", _
        "LX|100|(color)", _
        "LS4|100|000000", _
        "LLWiz|100|(color)", _
        "LWiz|100|(color)", _
        "LW1|100|000000", _
        "LEBR|100|(color)", _
        "LSC3|100|000000", _
        "LF3|100|(color)", _
        "LPC3|100|(color)", _
        "LTW2|100|(color)", _
        "LTW1|100|(color)", _
        "LCC3|100|(color)", _
        "LM2|100|(color)", _
        "LM1|100|(color)", _
        "LB1|100|(color)" _
        )
    End With
    With .AddStep(0.16667, Null, Null)
      .Lights = Array( _
        "gi19|100|000000", _
        "gi13|100|(color)", _
        "gi11|100|(color)", _
        "gi10|100|000000", _
        "LX|100|000000", _
        "LS1|100|(color)", _
        "LCWiz|100|(color)", _
        "LLWiz|100|000000", _
        "LWiz|100|000000", _
        "LEBR|100|000000", _
        "LMR|100|(color)", _
        "LF3|100|000000", _
        "LF2|100|(color)", _
        "LF1|100|e5e5e5", _
        "LPC3|100|000000", _
        "LPC2|100|(color)", _
        "LPC1|100|(color)", _
        "LTW2|100|000000", _
        "LTW1|100|000000", _
        "LCC3|100|000000", _
        "LCC2|100|(color)", _
        "LCC1|100|(color)", _
        "LM2|100|000000", _
        "LM1|100|000000", _
        "LB1|100|000000" _
        )
    End With
    With .AddStep(0.20000, Null, Null)
      .Lights = Array( _
        "gi15|100|(color)", _
        "gi13|100|000000", _
        "gi12|100|(color)", _
        "gi11|100|000000", _
        "gi09|100|(color)", _
        "LPF|100|(color)", _
        "LS1|100|000000", _
        "LCWiz|100|000000", _
        "LMR|100|000000", _
        "LPC5|100|(color)", _
        "LF2|100|000000", _
        "LF1|100|f4f4f4", _
        "LPC2|100|000000", _
        "LPC1|100|000000", _
        "LCC2|100|000000", _
        "LCC1|100|000000", _
        "LM4|100|(color)", _
        "LM3|100|(color)", _
        "LPR1|100|(color)", _
        "LMR1|100|(color)", _
        "LCR1|100|656565", _
        "LRI|100|(color)" _
        )
    End With
    With .AddStep(0.23333, Null, Null)
      .Lights = Array( _
        "gi22|100|(color)", _
        "gi20|100|(color)", _
        "gi15|100|000000", _
        "gi12|100|000000", _
        "gi09|100|000000", _
        "gi08|100|(color)", _
        "gi07|100|(color)", _
        "gi04|100|(color)", _
        "LPF|100|000000", _
        "LSwC3|100|(color)", _
        "LPC4|100|(color)", _
        "LF1|100|000000", _
        "LM4|100|000000", _
        "LPR3|100|(color)", _
        "LPR2|100|(color)", _
        "LMR2|100|(color)", _
        "LMR1|100|000000", _
        "LCR2|100|(color)", _
        "LCR1|100|(color)", _
        "LRI|100|000000", _
        "LRO|100|(color)", _
        "LLI|100|(color)")
        '"LB4|100|(color)" _
        ')
    End With
    With .AddStep(0.26667, Null, Null)
      .Lights = Array( _
        "gi20|100|000000", _
        "gi18|100|(color)", _
        "gi08|100|000000", _
        "gi03|100|(color)", _
        "LSwC2|100|242424", _
        "LSwC1|100|(color)", _
        "LC2|100|(color)", _
        "LC3|100|(color)", _
        "LC4|100|(color)", _
        "LC5|100|(color)", _
        "LC6|100|(color)", _
        "LC7|100|(color)", _
        "LC8|100|(color)", _
        "LPC5|100|000000", _
        "LPC4|100|000000", _
        "LM3|100|000000", _
        "LPR1|100|000000", _
        "LPR3|100|000000", _
        "LPR2|100|000000", _
        "LPR6|100|(color)", _
        "LPR5|100|(color)", _
        "LPR4|100|(color)", _
        "LMR2|100|000000", _
        "LCR2|100|000000", _
        "LCR1|100|000000", _
        "LRO|100|000000", _
        "LLO|100|(color)")
        '"LB4|100|000000" _
        ')
    End With
    With .AddStep(0.30000, Null, Null)
      .Lights = Array( _
        "gi22|100|000000", _
        "gi21|100|(color)", _
        "gi18|100|000000", _
        "gi07|100|000000", _
        "gi06|100|(color)", _
        "gi05|100|(color)", _
        "gi04|100|000000", _
        "gi02|100|(color)", _
        "LSwC3|100|000000", _
        "LSwC2|100|(color)", _
        "LSwC1|100|000000", _
        "LC1|100|(color)", _
        "LH9|100|(color)", _
        "LH8|100|(color)", _
        "LH7|100|(color)", _
        "LH6|100|(color)", _
        "LH5|100|(color)", _
        "LH4|100|(color)", _
        "LH3|100|(color)", _
        "LH2|100|(color)", _
        "LH1|100|(color)", _
        "LPR6|100|000000", _
        "LPR5|100|000000", _
        "LPR4|100|000000", _
        "LLI|100|000000", _
        "LSR|100|(color)", _
        "LB2|100|(color)", _
        "LB3|100|(color)" _
        )
    End With
    With .AddStep(0.33333, Null, Null)
      .Lights = Array( _
        "gi21|100|000000", _
        "gi06|100|000000", _
        "gi03|100|000000", _
        "gi01|100|(color)", _
        "LSwC2|100|000000", _
        "LC1|100|000000", _
        "LC2|100|000000", _
        "LC3|100|000000", _
        "LC4|100|000000", _
        "LC5|100|000000", _
        "LC6|100|000000", _
        "LC7|100|000000", _
        "LC8|100|000000", _
        "LSA|100|(color)", _
        "LH9|100|000000", _
        "LH8|100|000000", _
        "LH7|100|000000", _
        "LH6|100|000000", _
        "LH5|100|000000", _
        "LH4|100|000000", _
        "LH3|100|000000", _
        "LH2|100|161616", _
        "LLO|100|000000", _
        "LSR|100|000000", _
        "LSL|100|(color)", _
        "LB3|100|000000" _
        )
    End With
    With .AddStep(0.36667, Null, Null)
      .Lights = Array( _
        "gi17|100|(color)", _
        "gi16|100|(color)", _
        "gi05|100|000000", _
        "gi02|100|000000", _
        "gi01|100|000000", _
        "LH2|100|000000", _
        "LH1|100|000000", _
        "LB2|100|000000" _
        )
    End With
    With .AddStep(0.40000, Null, Null)
      .Lights = Array( _
        "LSA|100|000000", _
        "LSL|100|000000" _
        )
    End With
    With .AddStep(0.43333, Null, Null)
      .Lights = Array( _
        "gi17|100|000000", _
        "giapron|100|(color)", _
        "gi16|100|000000" _
        )
    End With
    With .AddStep(0.46667, Null, Null)
      With .DOFEvent("15")
        .Action = "DOF_OFF"
      End With
    End With
  End With



  With CreateGlfShow("meteor4_explodes")
    With .AddStep(0.02, Null, Null)
        With .Shows("flash_color")
            .Key = "key_DOF11"
            .Speed = 20
            .Loops = 10
            With .Tokens()
                .Add "color", GIColor3000k
                .Add "lights", "LBG11"
            End With
        End With
    End With
    With .AddStep(0.03333, Null, Null)
      With .DOFEvent("11")
        .Action = "DOF_ON"
      End With
      .Lights = Array( _
        "LMet3|100|(color)" _
        )
    End With
    With .AddStep(0.06667, Null, Null)
      .Lights = Array( _
        "gi10|100|(color)", _
        "LLWiz|100|(color)", _
        "LW9|100|(color)", _
        "LW6|100|(color)", _
        "LMet3|100|000000" _
        )
    End With
    With .AddStep(0.10000, Null, Null)
      .Lights = Array( _
        "gi14|100|(color)", _
        "gi10|100|000000", _
        "LS6|100|(color)", _
        "LLWiz|100|000000", _
        "LW9|100|000000", _
        "LW6|100|000000", _
        "LW4|100|(color)", _
        "LMet2|100|(color)" _
        )
    End With
    With .AddStep(0.13333, Null, Null)
      .Lights = Array( _
        "gi14|100|000000", _
        "LS5|100|(color)", _
        "LS6|100|000000", _
        "LW4|100|000000", _
        "LW3|100|(color)", _
        "LW2|100|(color)", _
        "LMet2|100|000000", _
        "LRI|100|(color)" _
        )
    End With
    With .AddStep(0.16667, Null, Null)
      .Lights = Array( _
        "gi19|100|191919", _
        "gi08|100|(color)", _
        "LS5|100|000000", _
        "LS1|100|(color)", _
        "LS2|100|(color)", _
        "LS4|100|(color)", _
        "LW3|100|000000", _
        "LW2|100|000000", _
        "LW1|100|(color)", _
        "LMLR|100|(color)", _
        "LF3|100|(color)", _
        "LM5|100|(color)", _
        "LM1|100|(color)", _
        "LPR1|100|(color)", _
        "LMR2|100|(color)", _
        "LRI|100|000000", _
        "LRO|100|(color)", _
        "LB1|100|(color)" _
        )
    End With
    With .AddStep(0.20000, Null, Null)
      .Lights = Array( _
        "gi19|100|000000", _
        "gi15|100|1d1d1d", _
        "gi13|100|(color)", _
        "gi09|100|(color)", _
        "gi08|100|000000", _
        "gi07|100|(color)", _
        "LX|100|(color)", _
        "LS1|100|000000", _
        "LS2|100|000000", _
        "LS4|100|000000", _
        "LW1|100|000000", _
        "LMLR|100|000000", _
        "LEBR|100|(color)", _
        "LF3|100|000000", _
        "LF2|100|(color)", _
        "LF1|100|(color)", _
        "LPC3|100|(color)", _
        "LTW2|100|(color)", _
        "LTW1|100|(color)", _
        "LCC3|100|(color)", _
        "LCC2|100|(color)", _
        "LM5|100|000000", _
        "LM2|100|(color)", _
        "LM1|100|000000", _
        "LPR1|100|000000", _
        "LPR3|100|(color)", _
        "LPR2|100|(color)", _
        "LPR6|100|(color)", _
        "LPR5|100|e8e8e8", _
        "LMR2|100|000000", _
        "LCR2|100|(color)", _
        "LCR1|100|(color)", _
        "LRO|100|000000", _
        "LB1|100|000000" _
        )
    End With
    With .AddStep(0.23333, Null, Null)
      .Lights = Array( _
        "gi15|100|(color)", _
        "gi13|100|000000", _
        "gi11|100|(color)", _
        "gi07|100|000000", _
        "gi06|100|(color)", _
        "gi05|100|(color)", _
        "gi04|100|(color)", _
        "gi03|100|(color)", _
        "LPF|100|dadada", _
        "LX|100|000000", _
        "LC1|100|f4f4f4", _
        "LC2|100|(color)", _
        "LC3|100|(color)", _
        "LC4|100|(color)", _
        "LC5|100|(color)", _
        "LC6|100|(color)", _
        "LC7|100|(color)", _
        "LC8|100|(color)", _
        "LEBR|100|000000", _
        "LMR|100|(color)", _
        "LF2|100|000000", _
        "LPC3|100|000000", _
        "LPC2|100|(color)", _
        "LPC1|100|(color)", _
        "LTW2|100|000000", _
        "LTW1|100|000000", _
        "LCC3|100|000000", _
        "LCC1|100|(color)", _
        "LM4|100|(color)", _
        "LM2|100|000000", _
        "LH9|100|(color)", _
        "LH8|100|(color)", _
        "LH7|100|(color)", _
        "LH6|100|(color)", _
        "LH5|100|(color)", _
        "LH4|100|(color)", _
        "LPR3|100|000000", _
        "LPR2|100|000000", _
        "LPR6|100|000000", _
        "LPR5|100|(color)", _
        "LPR4|100|(color)", _
        "LCR2|100|000000", _
        "LCR1|100|000000", _
        "LLI|100|(color)", _
        "LSR|100|(color)" _
        )
    End With
    With .AddStep(0.26667, Null, Null)
      .Lights = Array( _
        "gi15|100|000000", _
        "gi12|100|(color)", _
        "gi11|100|000000", _
        "gi09|100|000000", _
        "gi06|100|000000", _
        "gi04|100|000000", _
        "LPF|100|(color)", _
        "LC1|100|(color)", _
        "LC3|100|000000", _
        "LC4|100|000000", _
        "LC5|100|000000", _
        "LC6|100|000000", _
        "LC7|100|000000", _
        "LC8|100|000000", _
        "LMR|100|000000", _
        "LPC5|100|(color)", _
        "LPC4|100|c7c7c7", _
        "LF1|100|000000", _
        "LPC2|100|000000", _
        "LCC2|100|000000", _
        "LCC1|100|000000", _
        "LM3|100|(color)", _
        "LH9|100|000000", _
        "LH8|100|000000", _
        "LH7|100|000000", _
        "LH6|100|7f7f7f", _
        "LH3|100|(color)", _
        "LH2|100|(color)", _
        "LH1|100|(color)", _
        "LPR5|100|000000", _
        "LPR4|100|000000", _
        "LLI|100|000000", _
        "LLO|100|(color)", _
        "LSR|100|000000")
        '"LB4|100|(color)" _
        ')
    End With
    With .AddStep(0.30000, Null, Null)
      .Lights = Array( _
        "gi22|100|(color)", _
        "gi20|100|(color)", _
        "gi18|100|fefefe", _
        "gi12|100|000000", _
        "gi05|100|000000", _
        "gi03|100|000000", _
        "gi02|100|(color)", _
        "gi01|100|(color)", _
        "LPF|100|000000", _
        "LSwC3|100|(color)", _
        "LC1|100|000000", _
        "LC2|100|000000", _
        "LPC4|100|(color)", _
        "LPC1|100|000000", _
        "LM4|100|000000", _
        "LSA|100|(color)", _
        "LH6|100|000000", _
        "LH5|100|000000", _
        "LH4|100|000000", _
        "LH3|100|000000", _
        "LH2|100|000000", _
        "LH1|100|000000", _
        "LLO|100|000000", _
        "LSL|100|(color)" _
        )
    End With
    With .AddStep(0.33333, Null, Null)
      .Lights = Array( _
        "gi22|100|b7b7b7", _
        "gi20|100|000000", _
        "gi21|100|aaaaaa", _
        "gi18|100|(color)", _
        "gi02|100|000000", _
        "gi01|100|000000", _
        "LSwC2|100|(color)", _
        "LSwC1|100|(color)", _
        "LPC5|100|000000", _
        "LPC4|100|000000", _
        "LM3|100|000000", _
        "LSA|100|000000", _
        "LB2|100|(color)", _
        "LB3|100|(color)")
        '"LB4|100|000000" _
        ')
    End With
    With .AddStep(0.36667, Null, Null)
      .Lights = Array( _
        "gi22|100|000000", _
        "gi21|100|(color)", _
        "gi18|100|000000", _
        "LSwC3|100|000000", _
        "LSwC1|100|000000", _
        "LSL|100|000000" _
        )
    End With
    With .AddStep(0.40000, Null, Null)
      .Lights = Array( _
        "gi17|100|(color)", _
        "giapron|100|(color)", _
        "gi21|100|000000", _
        "LSwC2|100|000000", _
        "LB2|100|000000", _
        "LB3|100|000000" _
        )
    End With
    With .AddStep(0.43333, Null, Null)
      .Lights = Array( _
        "gi16|100|(color)" _
        )
    End With
    With .AddStep(0.46667, Null, Null)
      With .DOFEvent("11")
        .Action = "DOF_OFF"
      End With
      .Lights = Array( _
        "gi17|100|000000", _
        "giapron|100|000000" _
        )
    End With
  End With


End Sub


'Moon Shows

Sub CreateMoonShows()


    With CreateGlfShow("moon_launch")

         With .AddStep(0.0, Null, Null)
            With .Shows("insert_gi_spin_right")
                .Key = "key_moon_launch_spin"
                .Speed = 2
                .Loops = 2
                .Priority = 5005
                With .Tokens()
                    .Add "color", MoonColor
                    .Add "intensity", 100
                End With
            End With
        End With

        With .AddStep(0.01, Null, Null)
            With .Shows("flash_color")
                .Key = "key_moon_lanuch_flash1"
                .Speed = 13
                .Loops = 8
                .Priority = 5015
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "lights", "gi15"
                End With
            End With
        End With

        With .AddStep(0.02, Null, Null)
            With .Shows("flash_color")
                .Key = "key_moon_lanuch_flash2"
                .Speed = 13
                .Loops = 8
                .Priority = 5015
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "lights", "gi19"
                End With
            End With
        End With

        With .AddStep(0.03, Null, Null)
            With .Shows("flash_color")
                .Key = "key_moon_lanuch_flash3"
                .Speed = 13
                .Loops = 8
                .Priority = 5015
                With .Tokens()
                    .Add "color", "ffffff"
                    .Add "lights", "gi14"
                End With
            End With
        End With

    End With


    With CreateGlfShow("moon_missile_acquired")
        With .AddStep(0.03333, Null, Null)
            .Lights = Array( _
            "gi16|(intensity)|e4e4e4" _
            )
        End With
        With .AddStep(0.06667, Null, Null)
            .Lights = Array( _
            "gi17|(intensity)|fefefe", _
            "gi16|(intensity)|(color)" _
            )
        End With
        With .AddStep(0.10000, Null, Null)
            .Lights = Array( _
            "gi17|(intensity)|(color)" _
            )
        End With
        With .AddStep(0.13333, Null, Null)
        End With
        With .AddStep(0.16667, Null, Null)
        End With
        With .AddStep(0.20000, Null, Null)
        End With
        With .AddStep(0.23333, Null, Null)
        End With
        With .AddStep(0.26667, Null, Null)
        End With
        With .AddStep(0.30000, Null, Null)
            .Lights = Array( _
            "LSwC2|(intensity)|0b0b0b" _
            )
        End With
        With .AddStep(0.33333, Null, Null)
            .Lights = Array( _
            "gi16|(intensity)|929292", _
            "LSwC2|(intensity)|(color)" _
            )
        End With
        With .AddStep(0.36667, Null, Null)
            .Lights = Array( _
            "gi17|(intensity)|000000", _
            "gi21|(intensity)|(color)", _
            "gi16|(intensity)|000000" _
            )
        End With
        With .AddStep(0.40000, Null, Null)
            .Lights = Array( _
            "LSwC1|(intensity)|fdfdfd" _
            )
        End With
        With .AddStep(0.43333, Null, Null)
            .Lights = Array( _
            "gi22|(intensity)|0d0d0d", _
            "LSwC3|(intensity)|(color)", _
            "LSwC1|(intensity)|(color)" _
            )
        End With
        With .AddStep(0.46667, Null, Null)
            .Lights = Array( _
            "gi22|(intensity)|(color)" _
            )
        End With
        With .AddStep(0.50000, Null, Null)
        End With
        With .AddStep(0.53333, Null, Null)
            .Lights = Array( _
            "gi18|(intensity)|3f3f3f", _
            "LPC4|(intensity)|ededed" _
            )
        End With
        With .AddStep(0.56667, Null, Null)
            .Lights = Array( _
            "gi20|(intensity)|fbfbfb", _
            "gi18|(intensity)|(color)", _
            "LSwC2|(intensity)|a4a4a4", _
            "LPC5|(intensity)|(color)", _
            "LPC4|(intensity)|(color)", _
            "LM3|(intensity)|(color)" _
            )
        End With
        With .AddStep(0.60000, Null, Null)
            .Lights = Array( _
            "gi20|(intensity)|(color)", _
            "gi21|(intensity)|fefefe", _
            "LSwC2|(intensity)|000000" _
            )
        End With
        With .AddStep(0.63333, Null, Null)
            .Lights = Array( _
            "gi21|(intensity)|000000", _
            "LPF|(intensity)|fcfcfc", _
            "LM4|(intensity)|5a5a5a" _
            )
        End With
        With .AddStep(0.66667, Null, Null)
            .Lights = Array( _
            "LPF|(intensity)|(color)", _
            "LSwC3|(intensity)|f3f3f3", _
            "LSwC1|(intensity)|000000", _
            "LM4|(intensity)|(color)" _
            )
        End With
        With .AddStep(0.70000, Null, Null)
            .Lights = Array( _
            "gi22|(intensity)|000000", _
            "LSwC3|(intensity)|000000", _
            "LMR|(intensity)|(color)", _
            "LPC1|(intensity)|(color)" _
            )
        End With
        With .AddStep(0.73333, Null, Null)
            .Lights = Array( _
            "gi15|(intensity)|(color)", _
            "gi13|(intensity)|(color)", _
            "LF1|(intensity)|(color)" _
            )
        End With
        With .AddStep(0.76667, Null, Null)
            .Lights = Array( _
            "gi18|(intensity)|0c0c0c", _
            "gi12|(intensity)|(color)", _
            "LEBR|(intensity)|(color)", _
            "LPC5|(intensity)|fdfdfd", _
            "LPC4|(intensity)|000000", _
            "LPC2|(intensity)|(color)" _
            )
        End With
        With .AddStep(0.80000, Null, Null)
            .Lights = Array( _
            "gi20|(intensity)|000000", _
            "gi18|(intensity)|000000", _
            "LPC5|(intensity)|000000", _
            "LF2|(intensity)|(color)", _
            "LM3|(intensity)|000000" _
            )
        End With
        With .AddStep(0.83333, Null, Null)
            .Lights = Array( _
            "LX|(intensity)|(color)", _
            "LPC3|(intensity)|(color)", _
            "LCC1|(intensity)|(color)", _
            "LM2|(intensity)|(color)" _
            )
        End With
        With .AddStep(0.86667, Null, Null)
            .Lights = Array( _
            "LPF|(intensity)|000000", _
            "LF3|(intensity)|(color)", _
            "LM4|(intensity)|000000" _
            )
        End With
        With .AddStep(0.90000, Null, Null)
            .Lights = Array( _
            "LMLR|(intensity)|(color)", _
            "LMR|(intensity)|d8d8d8", _
            "LPC1|(intensity)|000000", _
            "LM5|(intensity)|(color)" _
            )
        End With
        With .AddStep(0.93333, Null, Null)
            .Lights = Array( _
            "gi15|(intensity)|000000", _
            "gi13|(intensity)|000000", _
            "LS4|(intensity)|(color)", _
            "LW1|(intensity)|fdfdfd", _
            "LMR|(intensity)|000000", _
            "LF1|(intensity)|000000", _
            "LTW2|(intensity)|(color)", _
            "LTW1|(intensity)|(color)", _
            "LCC2|(intensity)|(color)" _
            )
        End With
        With .AddStep(0.96667, Null, Null)
            .Lights = Array( _
            "gi19|(intensity)|(color)", _
            "gi12|(intensity)|000000", _
            "gi11|(intensity)|(color)", _
            "LS5|(intensity)|(color)", _
            "LW1|(intensity)|(color)", _
            "LEBR|(intensity)|000000", _
            "LPC2|(intensity)|000000" _
            )
        End With
        With .AddStep(1.00000, Null, Null)
            .Lights = Array( _
            "LW2|(intensity)|dddddd", _
            "LF2|(intensity)|000000", _
            "LPC3|(intensity)|fbfbfb", _
            "LCC3|(intensity)|(color)", _
            "LM2|(intensity)|cdcdcd" _
            )
        End With
        With .AddStep(1.03333, Null, Null)
            .Lights = Array( _
            "LX|(intensity)|000000", _
            "LW2|(intensity)|(color)", _
            "LPC3|(intensity)|000000", _
            "LCC1|(intensity)|000000", _
            "LM2|(intensity)|000000" _
            )
        End With
        With .AddStep(1.06667, Null, Null)
            .Lights = Array( _
            "LW3|(intensity)|(color)", _
            "LMLR|(intensity)|000000", _
            "LF3|(intensity)|000000", _
            "LM5|(intensity)|f4f4f4" _
            )
        End With
        With .AddStep(1.10000, Null, Null)
            .Lights = Array( _
            "LS2|(intensity)|(color)", _
            "LS3|(intensity)|(color)", _
            "LS4|(intensity)|000000", _
            "LS6|(intensity)|(color)", _
            "LW1|(intensity)|aaaaaa", _
            "LTW2|(intensity)|000000", _
            "LTW1|(intensity)|000000", _
            "LCC2|(intensity)|000000", _
            "LM5|(intensity)|000000" _
            )
        End With
        With .AddStep(1.13333, Null, Null)
            .Lights = Array( _
            "gi19|(intensity)|000000", _
            "gi11|(intensity)|000000", _
            "LS5|(intensity)|000000", _
            "LW1|(intensity)|000000" _
            )
        End With
        With .AddStep(1.16667, Null, Null)
            .Lights = Array( _
            "gi14|(intensity)|(color)", _
            "LW4|(intensity)|(color)", _
            "LW2|(intensity)|000000", _
            "LCC3|(intensity)|000000" _
            )
        End With
        With .AddStep(1.20000, Null, Null)
        End With
        With .AddStep(1.23333, Null, Null)
            .Lights = Array( _
            "LS2|(intensity)|474747", _
            "LS3|(intensity)|000000", _
            "LS6|(intensity)|f3f3f3", _
            "LW3|(intensity)|000000", _
            "LMet2|(intensity)|(color)" _
            )
        End With
        With .AddStep(1.26667, Null, Null)
            .Lights = Array( _
            "LS2|(intensity)|000000", _
            "LS6|(intensity)|000000", _
            "LW5|(intensity)|(color)" _
            )
        End With
        With .AddStep(1.30000, Null, Null)
            .Lights = Array( _
            "gi14|(intensity)|000000", _
            "LW4|(intensity)|000000" _
            )
        End With
        With .AddStep(1.33333, Null, Null)
            .Lights = Array( _
            "giapron|(intensity)|(color)", _
            "gi09|(intensity)|(color)", _
            "LMet3|(intensity)|(color)" _
            )
        End With
        With .AddStep(1.36667, Null, Null)
            .Lights = Array( _
            "LW6|(intensity)|(color)", _
            "LMet2|(intensity)|000000", _
            "LM1|(intensity)|(color)" _
            )
        End With
        With .AddStep(1.40000, Null, Null)
            .Lights = Array( _
            "LW5|(intensity)|000000", _
            "LSC1|(intensity)|(color)", _
            "LMet1|(intensity)|(color)" _
            )
        End With
        With .AddStep(1.43333, Null, Null)
            .Lights = Array( _
            "giapron|(intensity)|000000", _
            "gi09|(intensity)|000000", _
            "LS1|(intensity)|(color)", _
            "LMet3|(intensity)|000000", _
            "LSL|(intensity)|(color)" _
            )
        End With
        With .AddStep(1.46667, Null, Null)
            .Lights = Array( _
            "gi10|(intensity)|(color)", _
            "LW7|(intensity)|(color)", _
            "LW6|(intensity)|000000", _
            "LSC2|(intensity)|(color)", _
            "LM1|(intensity)|000000", _
            "LLO|(intensity)|(color)" _
            )
        End With
        With .AddStep(1.50000, Null, Null)
            .Lights = Array( _
            "LSC1|(intensity)|000000", _
            "LMet4|(intensity)|(color)", _
            "LMet1|(intensity)|000000" _
            )
        End With
        With .AddStep(1.53333, Null, Null)
            .Lights = Array( _
            "gi02|(intensity)|(color)", _
            "LS1|(intensity)|000000", _
            "LSC3|(intensity)|(color)", _
            "LSL|(intensity)|000000" _
            )
        End With
        With .AddStep(1.56667, Null, Null)
            .Lights = Array( _
            "gi10|(intensity)|000000", _
            "gi01|(intensity)|fdfdfd", _
            "LW8|(intensity)|(color)", _
            "LW7|(intensity)|000000", _
            "LSC2|(intensity)|000000", _
            "LLI|(intensity)|(color)", _
            "LLO|(intensity)|000000" _
            )
        End With
        With .AddStep(1.60000, Null, Null)
            .Lights = Array( _
            "gi02|(intensity)|000000", _
            "gi01|(intensity)|(color)", _
            "LMet4|(intensity)|000000" _
            )
        End With
        With .AddStep(1.63333, Null, Null)
            .Lights = Array( _
            "gi04|(intensity)|(color)", _
            "LW8|(intensity)|000000", _
            "LSC3|(intensity)|000000", _
            "LLI|(intensity)|000000" _
            )
        End With
        With .AddStep(1.66667, Null, Null)
            .Lights = Array( _
            "gi03|(intensity)|(color)", _
            "gi01|(intensity)|000000", _
            "LCWiz|(intensity)|(color)", _
            "LW9|(intensity)|(color)", _
            "LSA|(intensity)|(color)", _
            "LSR|(intensity)|(color)" _
            )
        End With
        With .AddStep(1.70000, Null, Null)
            .Lights = Array( _
            "gi04|(intensity)|000000", _
            "LH1|(intensity)|(color)" _
            )
        End With
        With .AddStep(1.73333, Null, Null)
            .Lights = Array( _
            "gi03|(intensity)|000000", _
            "LCWiz|(intensity)|000000", _
            "LC1|(intensity)|(color)", _
            "LW9|(intensity)|000000", _
            "LSA|(intensity)|000000", _
            "LH2|(intensity)|(color)", _
            "LRO|(intensity)|(color)", _
            "LSR|(intensity)|000000" _
            )
        End With
        With .AddStep(1.76667, Null, Null)
            .Lights = Array( _
            "gi06|(intensity)|(color)", _
            "gi05|(intensity)|(color)", _
            "LC2|(intensity)|(color)", _
            "LWiz|(intensity)|(color)", _
            "LH3|(intensity)|(color)", _
            "LH1|(intensity)|000000", _
            "LRO|(intensity)|000000" _
            )
        End With
        With .AddStep(1.80000, Null, Null)
            .Lights = Array( _
            "gi06|(intensity)|000000", _
            "LC1|(intensity)|000000", _
            "LWiz|(intensity)|000000", _
            "LH4|(intensity)|(color)", _
            "LH2|(intensity)|000000" _
            )
        End With
        With .AddStep(1.83333, Null, Null)
            .Lights = Array( _
            "gi08|(intensity)|(color)", _
            "gi07|(intensity)|(color)", _
            "gi05|(intensity)|000000", _
            "LLWiz|(intensity)|(color)", _
            "LC2|(intensity)|000000", _
            "LC3|(intensity)|(color)", _
            "LC4|(intensity)|(color)", _
            "LC5|(intensity)|(color)", _
            "LC6|(intensity)|(color)", _
            "LC7|(intensity)|(color)", _
            "LC8|(intensity)|(color)", _
            "LH9|(intensity)|(color)", _
            "LH8|(intensity)|(color)", _
            "LH7|(intensity)|(color)", _
            "LH6|(intensity)|(color)", _
            "LH5|(intensity)|(color)", _
            "LH4|(intensity)|000000", _
            "LH3|(intensity)|000000", _
            "LPR1|(intensity)|(color)", _
            "LPR3|(intensity)|(color)", _
            "LPR2|(intensity)|(color)", _
            "LPR6|(intensity)|(color)", _
            "LPR5|(intensity)|(color)", _
            "LPR4|(intensity)|(color)", _
            "LMR2|(intensity)|(color)", _
            "LMR1|(intensity)|(color)", _
            "LCR2|(intensity)|(color)", _
            "LCR1|(intensity)|(color)", _
            "LRI|(intensity)|(color)" _
            )
        End With
        With .AddStep(1.86667, Null, Null)
            .Lights = Array( _
            "LLWiz|(intensity)|000000", _
            "LC3|(intensity)|000000", _
            "LH6|(intensity)|000000", _
            "LH5|(intensity)|000000", _
            "LPR4|(intensity)|000000", _
            "LCR2|(intensity)|000000", _
            "LCR1|(intensity)|000000", _
            "LRI|(intensity)|000000" _
            )
        End With
        With .AddStep(1.90000, Null, Null)
            .Lights = Array( _
            "LC4|(intensity)|000000", _
            "LC5|(intensity)|000000", _
            "LH9|(intensity)|000000", _
            "LH8|(intensity)|000000", _
            "LH7|(intensity)|000000" _
            )
        End With
        With .AddStep(1.93333, Null, Null)
            .Lights = Array( _
            "gi08|(intensity)|000000", _
            "gi07|(intensity)|000000", _
            "LC6|(intensity)|000000", _
            "LC7|(intensity)|000000", _
            "LC8|(intensity)|000000", _
            "LPR2|(intensity)|000000", _
            "LPR5|(intensity)|000000" _
            )
        End With
        With .AddStep(1.96667, Null, Null)
            .Lights = Array( _
            "LPR6|(intensity)|000000" _
            )
        End With
    End With



End Sub





'Mystery Shows

Sub CreateMysteryShows()




End Sub





Sub CreateNukeShows()


With CreateGlfShow("nuke_inserts_show")
    With .AddStep(0.01, Null, Null)
        .Lights = Array("(lights)|100|(color)|300")
    End With
    With .AddStep(0.3, Null, Null)
        .Lights = Array("(lights)|100|000000|300")
    End With
    With .AddStep(1, Null, Null)
        .Lights = Array("(lights)|100|000000")
    End With
    With .AddStep(3.5, Null, Null)
        .Lights = Array("(lights)|100|000000")
    End With
    With .AddStep(3.8, Null, Null)
        .Lights = Array("(lights)|100|(color)|300")
    End With
    With .AddStep(4.1, Null, Null)
        .Lights = Array("(lights)|100|000000|300")
    End With
    With .AddStep(9, Null, 0.1)
        .Lights = Array("(lights)|100|000000")
    End With
End With


With CreateGlfShow("nuke_explodes")

  With .AddStep(0.01, Null, Null)
    With .Shows("nuke_inserts_show")
        .Key = "key_nuke_gi1"
        .Speed = 1
        .Loops = 1
        .Priority = 10000
        With .Tokens()
            .Add "lights", "GI"
            .Add "color", GIColor3000k
        End With
    End With
  End With

  With .AddStep(0.02, Null, Null)
    With .Shows("nuke_inserts_show")
        .Key = "key_nuke_gi2"
        .Speed = 1
        .Loops = 1
        .Priority = 9000
        With .Tokens()
            .Add "lights", "tInserts"
            .Add "color", GIColor3000k
        End With
    End With
  End With

  With .AddStep(0.03, Null, Null)
    With .Shows("nuke_inserts_show")
        .Key = "key_nuke_gi3"
        .Speed = 1
        .Loops = 1
        .Priority = 9000
        With .Tokens()
            .Add "lights", "tBumper"
            .Add "color", GIColor3000k
        End With
    End With
  End With

  With .AddStep(0.1, Null, Null)
    With .Shows("flash_color")
        .Key = "key_nuke_fired1"
        .Speed = 20
        .Loops = 20
        .Priority = 10000
        With .Tokens()
            .Add "lights", "tBlast"
            .Add "color", MeteorHotColor
        End With
    End With
  End With

  With .AddStep(0.11, Null, Null)
    With .Shows("flash_color")
        .Key = "key_nuke_fired2a"
        .Speed = 20
        .Loops = 11
        .Priority = 10000
        With .Tokens()
            .Add "lights", "tFlasherU"
            .Add "color", MeteorHotColor
            .Add "fade", 300
        End With
    End With
  End With

  With .AddStep(1, Null, Null)
    With .Shows("flash_color_fadeout")
        .Key = "key_nuke_fired2b"
        .Speed = 2
        .Loops = 1
        .Priority = 11000
        With .Tokens()
            .Add "lights", "tFlasherU"
            .Add "color", MeteorHotColor
        End With
    End With
  End With


  With .AddStep(3.9, Null, Null)
    With .Shows("flash_color")
      .Key = "key_nuke_fired3a"
      .Speed = 20
      .Loops = 5
      .Priority = 10000
       With .Tokens()
            .Add "lights", "tFlasher"
            .Add "color", "ffffff"
        End With
    End With
  End With

  With .AddStep(4.3, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_nuke_fired3b"
      .Speed = 2
      .Loops = 1
      .Priority = 10000
       With .Tokens()
            .Add "lights", "tFlasher"
            .Add "color", "ffffff"
        End With
    End With
  End With

  With .AddStep(4.02, Null, Null)
    With .Shows("flash_color_fadeout")
      .Key = "key_nuke_fired4"
      .Speed = 2
      .Loops = 1
      .Priority = 11000
       With .Tokens()
            .Add "lights", "GI"
            .Add "color", "ffffff"
        End With
    End With
  End With

  With .AddStep(5, Null, Null)
    With .Shows("meteor2_explodes")
      .Key = "key_nuke_fired5"
      .Speed = 1
      .Loops = 1
      .Priority = 11000
      With .Tokens()
        .Add "color", "ffffff"
      End With
    End With
  End With

  With .AddStep(5.3, Null, Null)
    With .Shows("meteor4_explodes")
      .Key = "key_nuke_fired6"
      .Speed = 1
      .Loops = 1
      .Priority = 11000
      With .Tokens()
        .Add "color", MeteorHotColor
      End With
    End With
  End With

  With .AddStep(5.7, Null, Null)
    With .Shows("meteor1_explodes")
      .Key = "key_nuke_fired7"
      .Speed = 1
      .Loops = 1
      .Priority = 11000
      With .Tokens()
        .Add "color", "ffffff"
      End With
    End With
  End With

  With .AddStep(6.2, Null, Null)
    With .Shows("meteor3_explodes")
      .Key = "key_nuke_fired8"
      .Speed = 1
      .Loops = 1
      .Priority = 11000
      With .Tokens()
        .Add "color", MeteorHotColor
      End With
    End With
  End With

  With .AddStep(6.8, Null, Null)
    With .Shows("meteor2_explodes")
      .Key = "key_nuke_fired9"
      .Speed = 1
      .Loops = 1
      .Priority = 11000
      With .Tokens()
        .Add "color", "ffffff"
      End With
    End With
  End With

  With .AddStep(7.5, Null, Null)
    With .Shows("meteor4_explodes")
      .Key = "key_nuke_fired10"
      .Speed = 1
      .Loops = 1
      .Priority = 11000
      With .Tokens()
        .Add "color", MeteorHotColor
      End With
    End With
  End With

  With .AddStep(8, Null, Null)
    With .Shows("meteor1_explodes")
      .Key = "key_nuke_fired11"
      .Speed = 1
      .Loops = 1
      .Priority = 11000
      With .Tokens()
        .Add "color", "ffffff"
      End With
    End With
  End With

  With .AddStep(8.5, Null, Null)
    With .Shows("meteor2_explodes")
      .Key = "key_nuke_fired12"
      .Speed = 1
      .Loops = 1
      .Priority = 11000
      With .Tokens()
        .Add "color", MeteorHotColor
      End With
    End With
  End With

  With .AddStep(9, Null, Null)
    With .Shows("meteor3_explodes")
      .Key = "key_nuke_fired13"
      .Speed = 1
      .Loops = 1
      .Priority = 11000
      With .Tokens()
        .Add "color", "ffffff"
      End With
    End With
  End With

End With



End Sub


Sub CreatePostGameShows()


With CreateGlfShow("slide_down6")
    With .AddStep(Null, Null, 0.1)
        With .Shows("insert_gi_slide_down")
            .Key = "insert_gi_slide_downA"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", "ffffff"
                .Add "intensity", 100
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.1)
        With .Shows("insert_gi_slide_down")
            .Key = "insert_gi_slide_downB"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", "ffffff"
                .Add "intensity", 50
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.1)
        With .Shows("insert_gi_slide_down")
            .Key = "insert_gi_slide_downC"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", "ffffff"
                .Add "intensity", 20
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.1)
        With .Shows("insert_gi_slide_down")
            .Key = "insert_gi_slide_downD"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", "ffffff"
                .Add "intensity", 10
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.1)
        With .Shows("insert_gi_slide_down")
            .Key = "insert_gi_slide_downE"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", "ffffff"
                .Add "intensity", 5
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.1)
        With .Shows("insert_gi_slide_down")
            .Key = "insert_gi_slide_downF"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", "ffffff"
                .Add "intensity", 3
            End With
        End With
    End With
End With


With CreateGlfShow("earth_hit_center2")
    With .AddStep(Null, Null, 0.3)
        With .Shows("earth_hit_center")
            .Key = "key_earth_hit_centerA"
            .Speed = 2
            .Loops = 1
        End With
    End With
    With .AddStep(Null, Null, 0.3)
        With .Shows("earth_hit_center")
            .Key = "key_earth_hit_centerB"
            .Speed = 2
            .Loops = 1
        End With
    End With
End With


With CreateGlfShow("meteors_sweep")
    With .AddStep(Null, Null, 0.2)
        With .Shows("flash_color_fadeout")
            .Key = "key_mw_sweep1"
            .Speed = 14
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorWaveColor
                .Add "lights", "LMet1"
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.2)
        With .Shows("flash_color_fadeout")
            .Key = "key_mw_sweep2"
            .Speed = 14
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorWaveColor
                .Add "lights", "LMet2"
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.2)
        With .Shows("flash_color_fadeout")
            .Key = "key_mw_sweep3"
            .Speed = 14
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorWaveColor
                .Add "lights", "LMet3"
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.2)
        With .Shows("flash_color_fadeout")
            .Key = "key_mw_sweep4"
            .Speed = 14
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorWaveColor
                .Add "lights", "LMet4"
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.2)
        With .Shows("flash_color_fadeout")
            .Key = "key_mw_sweep5"
            .Speed = 14
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorWaveColor
                .Add "lights", "LMet3"
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.2)
        With .Shows("flash_color_fadeout")
            .Key = "key_mw_sweep6"
            .Speed = 14
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorWaveColor
                .Add "lights", "LMet2"
            End With
        End With
    End With
End With



With CreateGlfShow("meteor_wave_fall")
    With .AddStep(Null, Null, 0.2)
        With .Shows("flash_color_fadeout")
            .Key = "key_mw_fall1"
            .Speed = 4
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorWaveColor
                .Add "lights", "LW1"
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.2)
        With .Shows("flash_color_fadeout")
            .Key = "key_mw_fall2"
            .Speed = 4
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorWaveColor
                .Add "lights", "LW2"
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.2)
        With .Shows("flash_color_fadeout")
            .Key = "key_mw_fall3"
            .Speed = 4
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorWaveColor
                .Add "lights", "LW3"
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.2)
        With .Shows("flash_color_fadeout")
            .Key = "key_mw_fall4"
            .Speed = 4
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorWaveColor
                .Add "lights", "LW4"
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.2)
        With .Shows("flash_color_fadeout")
            .Key = "key_mw_fall5"
            .Speed = 4
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorWaveColor
                .Add "lights", "LW5"
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.2)
        With .Shows("flash_color_fadeout")
            .Key = "key_mw_fall6"
            .Speed = 4
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorWaveColor
                .Add "lights", "LW6"
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.2)
        With .Shows("flash_color_fadeout")
            .Key = "key_mw_fall7"
            .Speed = 4
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorWaveColor
                .Add "lights", "LW7"
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.2)
        With .Shows("flash_color_fadeout")
            .Key = "key_mw_fall8"
            .Speed = 4
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorWaveColor
                .Add "lights", "LW8"
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.2)
        With .Shows("flash_color_fadeout")
            .Key = "key_mw_fall9"
            .Speed = 4
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorWaveColor
                .Add "lights", "LW9"
            End With
        End With
    End With
    With .AddStep(Null, Null, 0.2)
        With .Shows("flash_color_fadeout")
            .Key = "key_mw_fall10"
            .Speed = 4
            .Loops = 1
            With .Tokens()
                .Add "color", MeteorWaveColor
                .Add "lights", "LWiz"
            End With
        End With
    End With
End With



With CreateGlfShow("proton_big_charge_fire")

    With .AddStep(Null, Null, 0.96667)
        With .Shows("insert_gi_spin_center")
            .Key = "key_big_charge_fire1"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", ProtonColor
                .Add "intensity", 10
            End With
        End With
    End With

    With .AddStep(Null, Null, 0.96667/1.5)
        With .Shows("insert_gi_spin_center")
            .Key = "key_big_charge_fire2"
            .Speed = 1.5
            .Loops = 1
            With .Tokens()
                .Add "color", ProtonColor
                .Add "intensity", 20
            End With
        End With
    End With

    With .AddStep(Null, Null, 0.96667/2)
        With .Shows("insert_gi_spin_center")
            .Key = "key_big_charge_fire3"
            .Speed = 2
            .Loops = 1
            With .Tokens()
                .Add "color", ProtonColor
                .Add "intensity", 40
            End With
        End With
    End With

    With .AddStep(Null, Null, 0.96667/3)
        With .Shows("insert_gi_spin_center")
            .Key = "key_big_charge_fire4"
            .Speed = 3
            .Loops = 1
            With .Tokens()
                .Add "color", ProtonColor
                .Add "intensity", 60
            End With
        End With
    End With

    With .AddStep(Null, Null, 0.96667/4)
        With .Shows("insert_gi_spin_center")
            .Key = "key_big_charge_fire5"
            .Speed = 4
            .Loops = 1
            With .Tokens()
                .Add "color", ProtonColor
                .Add "intensity", 80
            End With
        End With
    End With

    With .AddStep(Null, Null, 2*0.96667/5)
        With .Shows("insert_gi_spin_center")
            .Key = "key_big_charge_fire6"
            .Speed = 5
            .Loops = 2
            With .Tokens()
                .Add "color", ProtonColor
                .Add "intensity", 100
            End With
        End With
    End With

    With .AddStep(Null, Null, 3*0.96667/7)
        With .Shows("insert_gi_spin_center")
            .Key = "key_big_charge_fire7"
            .Speed = 7
            .Loops = 3
            With .Tokens()
                .Add "color", "ffffff"
                .Add "intensity", 100
            End With
        End With
    End With

    With .AddStep(Null, Null, 0.01)
        With .Shows("insert_gi_spin_center")
            .Key = "key_big_charge_fire8"
            .Speed = 8
            .Loops = 2
            With .Tokens()
                .Add "color", "ff0000"
                .Add "intensity", 100
            End With
        End With
    End With

    With .AddStep(Null, Null, 0.1)
        With .Shows("flash_color")
            .Key = "key_big_charge_fire9"
            .Show = "flash_color"
            .Speed = 20
            .Loops = 7
            '.Priority = 10
            With .Tokens()
                .Add "lights", "tBlast"
                .Add "color", "ffffff"
            End With
        End With
    End With

End With


End Sub


' Left slingshot flasher dome shows
Const RightSlingLightName = "FL6"
Const RightSlingShowFrame = 0.1


Sub CreateRightSlingShows()

    With CreateGlfShow("rsling_rotate1_cw")
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"g|0|(color)", _
                RightSlingLightName&"h|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"h|0|(color)", _
                RightSlingLightName&"a|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"a|0|(color)", _
                RightSlingLightName&"b|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"b|0|(color)", _
                RightSlingLightName&"c|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"c|0|(color)", _
                RightSlingLightName&"d|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"d|0|(color)", _
                RightSlingLightName&"e|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"e|0|(color)", _
                RightSlingLightName&"f|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"f|0|(color)", _
                RightSlingLightName&"g|(intensity)|(color)")
        End With
    End With

    With CreateGlfShow("rsling_rotate1_ccw")
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"b|0|(color)", _
                RightSlingLightName&"a|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"a|0|(color)", _
                RightSlingLightName&"h|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"h|0|(color)", _
                RightSlingLightName&"g|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"g|0|(color)", _
                RightSlingLightName&"f|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"f|0|(color)", _
                RightSlingLightName&"e|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"e|0|(color)", _
                RightSlingLightName&"d|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"d|0|(color)", _
                RightSlingLightName&"c|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"c|0|(color)", _
                RightSlingLightName&"b|(intensity)|(color)")
        End With
    End With


    With CreateGlfShow("rsling_rotate2_cw")
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"h|0|(color1)", _
                RightSlingLightName&"a|(intensity)|(color1)", _
                RightSlingLightName&"d|0|(color2)", _
                RightSlingLightName&"e|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"a|0|(color1)", _
                RightSlingLightName&"b|(intensity)|(color1)", _
                RightSlingLightName&"e|0|(color2)", _
                RightSlingLightName&"f|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"b|0|(color1)", _
                RightSlingLightName&"c|(intensity)|(color1)", _
                RightSlingLightName&"f|0|(color2)", _
                RightSlingLightName&"g|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"c|0|(color1)", _
                RightSlingLightName&"d|(intensity)|(color1)", _
                RightSlingLightName&"g|0|(color2)", _
                RightSlingLightName&"h|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"d|0|(color1)", _
                RightSlingLightName&"e|(intensity)|(color1)", _
                RightSlingLightName&"h|0|(color2)", _
                RightSlingLightName&"a|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"e|0|(color1)", _
                RightSlingLightName&"f|(intensity)|(color1)", _
                RightSlingLightName&"a|0|(color2)", _
                RightSlingLightName&"b|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"f|0|(color1)", _
                RightSlingLightName&"g|(intensity)|(color1)", _
                RightSlingLightName&"b|0|(color2)", _
                RightSlingLightName&"c|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"g|0|(color1)", _
                RightSlingLightName&"h|(intensity)|(color1)", _
                RightSlingLightName&"c|0|(color2)", _
                RightSlingLightName&"d|(intensity)|(color2)")
        End With
    End With

    With CreateGlfShow("rsling_rotate2_ccw")
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"b|0|(color1)", _
                RightSlingLightName&"a|(intensity)|(color1)", _
                RightSlingLightName&"f|0|(color2)", _
                RightSlingLightName&"e|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"a|0|(color1)", _
                RightSlingLightName&"h|(intensity)|(color1)", _
                RightSlingLightName&"e|0|(color2)", _
                RightSlingLightName&"d|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"h|0|(color1)", _
                RightSlingLightName&"g|(intensity)|(color1)", _
                RightSlingLightName&"d|0|(color2)", _
                RightSlingLightName&"c|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"g|0|(color1)", _
                RightSlingLightName&"f|(intensity)|(color1)", _
                RightSlingLightName&"c|0|(color2)", _
                RightSlingLightName&"b|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"f|0|(color1)", _
                RightSlingLightName&"e|(intensity)|(color1)", _
                RightSlingLightName&"b|0|(color2)", _
                RightSlingLightName&"a|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"e|0|(color1)", _
                RightSlingLightName&"d|(intensity)|(color1)", _
                RightSlingLightName&"a|0|(color2)", _
                RightSlingLightName&"h|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"d|0|(color1)", _
                RightSlingLightName&"c|(intensity)|(color1)", _
                RightSlingLightName&"h|0|(color2)", _
                RightSlingLightName&"g|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"c|0|(color1)", _
                RightSlingLightName&"b|(intensity)|(color1)", _
                RightSlingLightName&"g|0|(color2)", _
                RightSlingLightName&"f|(intensity)|(color2)")
        End With
    End With


    With CreateGlfShow("rsling_rotate4_cw")
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"h|0|(color1)", _
                RightSlingLightName&"a|(intensity)|(color1)", _
                RightSlingLightName&"b|0|(color2)", _
                RightSlingLightName&"c|(intensity)|(color2)", _
                RightSlingLightName&"d|0|(color3)", _
                RightSlingLightName&"e|(intensity)|(color3)", _
                RightSlingLightName&"f|0|(color4)", _
                RightSlingLightName&"g|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"a|0|(color1)", _
                RightSlingLightName&"b|(intensity)|(color1)", _
                RightSlingLightName&"c|0|(color2)", _
                RightSlingLightName&"d|(intensity)|(color2)", _
                RightSlingLightName&"e|0|(color3)", _
                RightSlingLightName&"f|(intensity)|(color3)", _
                RightSlingLightName&"g|0|(color4)", _
                RightSlingLightName&"h|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"b|0|(color1)", _
                RightSlingLightName&"c|(intensity)|(color1)", _
                RightSlingLightName&"d|0|(color2)", _
                RightSlingLightName&"e|(intensity)|(color2)", _
                RightSlingLightName&"f|0|(color3)", _
                RightSlingLightName&"g|(intensity)|(color3)", _
                RightSlingLightName&"h|0|(color4)", _
                RightSlingLightName&"a|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"c|0|(color1)", _
                RightSlingLightName&"d|(intensity)|(color1)", _
                RightSlingLightName&"e|0|(color2)", _
                RightSlingLightName&"f|(intensity)|(color2)", _
                RightSlingLightName&"g|0|(color3)", _
                RightSlingLightName&"h|(intensity)|(color3)", _
                RightSlingLightName&"a|0|(color4)", _
                RightSlingLightName&"b|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"d|0|(color1)", _
                RightSlingLightName&"e|(intensity)|(color1)", _
                RightSlingLightName&"f|0|(color2)", _
                RightSlingLightName&"g|(intensity)|(color2)", _
                RightSlingLightName&"h|0|(color3)", _
                RightSlingLightName&"a|(intensity)|(color3)", _
                RightSlingLightName&"b|0|(color4)", _
                RightSlingLightName&"c|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"e|0|(color1)", _
                RightSlingLightName&"f|(intensity)|(color1)", _
                RightSlingLightName&"g|0|(color2)", _
                RightSlingLightName&"h|(intensity)|(color2)", _
                RightSlingLightName&"a|0|(color3)", _
                RightSlingLightName&"b|(intensity)|(color3)", _
                RightSlingLightName&"c|0|(color4)", _
                RightSlingLightName&"d|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"f|0|(color1)", _
                RightSlingLightName&"g|(intensity)|(color1)", _
                RightSlingLightName&"h|0|(color2)", _
                RightSlingLightName&"a|(intensity)|(color2)", _
                RightSlingLightName&"b|0|(color3)", _
                RightSlingLightName&"c|(intensity)|(color3)", _
                RightSlingLightName&"d|0|(color4)", _
                RightSlingLightName&"e|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"g|0|(color1)", _
                RightSlingLightName&"h|(intensity)|(color1)", _
                RightSlingLightName&"a|0|(color2)", _
                RightSlingLightName&"b|(intensity)|(color2)", _
                RightSlingLightName&"c|0|(color3)", _
                RightSlingLightName&"d|(intensity)|(color3)", _
                RightSlingLightName&"e|0|(color4)", _
                RightSlingLightName&"f|(intensity)|(color4)")
        End With
    End With

    With CreateGlfShow("rsling_rotate4_ccw")
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"h|0|(color1)", _
                RightSlingLightName&"a|(intensity)|(color1)", _
                RightSlingLightName&"b|0|(color2)", _
                RightSlingLightName&"c|(intensity)|(color2)", _
                RightSlingLightName&"d|0|(color3)", _
                RightSlingLightName&"e|(intensity)|(color3)", _
                RightSlingLightName&"f|0|(color4)", _
                RightSlingLightName&"g|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"g|0|(color1)", _
                RightSlingLightName&"h|(intensity)|(color1)", _
                RightSlingLightName&"a|0|(color2)", _
                RightSlingLightName&"b|(intensity)|(color2)", _
                RightSlingLightName&"c|0|(color3)", _
                RightSlingLightName&"d|(intensity)|(color3)", _
                RightSlingLightName&"e|0|(color4)", _
                RightSlingLightName&"f|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"f|0|(color1)", _
                RightSlingLightName&"g|(intensity)|(color1)", _
                RightSlingLightName&"h|0|(color2)", _
                RightSlingLightName&"a|(intensity)|(color2)", _
                RightSlingLightName&"b|0|(color3)", _
                RightSlingLightName&"c|(intensity)|(color3)", _
                RightSlingLightName&"d|0|(color4)", _
                RightSlingLightName&"e|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"e|0|(color1)", _
                RightSlingLightName&"f|(intensity)|(color1)", _
                RightSlingLightName&"g|0|(color2)", _
                RightSlingLightName&"h|(intensity)|(color2)", _
                RightSlingLightName&"a|0|(color3)", _
                RightSlingLightName&"b|(intensity)|(color3)", _
                RightSlingLightName&"c|0|(color4)", _
                RightSlingLightName&"d|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"d|0|(color1)", _
                RightSlingLightName&"e|(intensity)|(color1)", _
                RightSlingLightName&"f|0|(color2)", _
                RightSlingLightName&"g|(intensity)|(color2)", _
                RightSlingLightName&"h|0|(color3)", _
                RightSlingLightName&"a|(intensity)|(color3)", _
                RightSlingLightName&"b|0|(color4)", _
                RightSlingLightName&"c|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"c|0|(color1)", _
                RightSlingLightName&"d|(intensity)|(color1)", _
                RightSlingLightName&"e|0|(color2)", _
                RightSlingLightName&"f|(intensity)|(color2)", _
                RightSlingLightName&"g|0|(color3)", _
                RightSlingLightName&"h|(intensity)|(color3)", _
                RightSlingLightName&"a|0|(color4)", _
                RightSlingLightName&"b|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"b|0|(color1)", _
                RightSlingLightName&"c|(intensity)|(color1)", _
                RightSlingLightName&"d|0|(color2)", _
                RightSlingLightName&"e|(intensity)|(color2)", _
                RightSlingLightName&"f|0|(color3)", _
                RightSlingLightName&"g|(intensity)|(color3)", _
                RightSlingLightName&"h|0|(color4)", _
                RightSlingLightName&"a|(intensity)|(color4)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"a|0|(color1)", _
                RightSlingLightName&"b|(intensity)|(color1)", _
                RightSlingLightName&"c|0|(color2)", _
                RightSlingLightName&"d|(intensity)|(color2)", _
                RightSlingLightName&"e|0|(color3)", _
                RightSlingLightName&"f|(intensity)|(color3)", _
                RightSlingLightName&"g|0|(color4)", _
                RightSlingLightName&"h|(intensity)|(color4)")
        End With
    End With


    With CreateGlfShow("rsling_rotate1_cw_skip1")
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"g|0|(color)", _
                RightSlingLightName&"a|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"a|0|(color)", _
                RightSlingLightName&"c|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"c|0|(color)", _
                RightSlingLightName&"e|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"e|0|(color)", _
                RightSlingLightName&"g|(intensity)|(color)")
        End With
    End With

    With CreateGlfShow("rsling_rotate1_ccw_skip1")
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"a|0|(color)", _
                RightSlingLightName&"g|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"g|0|(color)", _
                RightSlingLightName&"e|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"e|0|(color)", _
                RightSlingLightName&"c|(intensity)|(color)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"c|0|(color)", _
                RightSlingLightName&"a|(intensity)|(color)")
        End With
    End With


    With CreateGlfShow("rsling_rotate2_cw_skip1")
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"g|0|(color1)", _
                RightSlingLightName&"a|(intensity)|(color1)", _
                RightSlingLightName&"c|0|(color2)", _
                RightSlingLightName&"e|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"a|0|(color1)", _
                RightSlingLightName&"c|(intensity)|(color1)", _
                RightSlingLightName&"e|0|(color2)", _
                RightSlingLightName&"g|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"c|0|(color1)", _
                RightSlingLightName&"e|(intensity)|(color1)", _
                RightSlingLightName&"g|0|(color2)", _
                RightSlingLightName&"a|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"e|0|(color1)", _
                RightSlingLightName&"g|(intensity)|(color1)", _
                RightSlingLightName&"a|0|(color2)", _
                RightSlingLightName&"c|(intensity)|(color2)")
        End With
    End With

    With CreateGlfShow("rsling_rotate2_ccw_skip1")
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"c|0|(color1)", _
                RightSlingLightName&"a|(intensity)|(color1)", _
                RightSlingLightName&"g|0|(color2)", _
                RightSlingLightName&"e|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"a|0|(color1)", _
                RightSlingLightName&"g|(intensity)|(color1)", _
                RightSlingLightName&"e|0|(color2)", _
                RightSlingLightName&"c|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"g|0|(color1)", _
                RightSlingLightName&"e|(intensity)|(color1)", _
                RightSlingLightName&"c|0|(color2)", _
                RightSlingLightName&"a|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"e|0|(color1)", _
                RightSlingLightName&"c|(intensity)|(color1)", _
                RightSlingLightName&"a|0|(color2)", _
                RightSlingLightName&"g|(intensity)|(color2)")
        End With
    End With

    With CreateGlfShow("rsling_swap_2_2_a")
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"a|(intensity)|(color1)", _
                RightSlingLightName&"c|(intensity)|(color2)", _
                RightSlingLightName&"e|(intensity)|(color1)", _
                RightSlingLightName&"g|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"a|(intensity)|(color2)", _
                RightSlingLightName&"c|(intensity)|(color1)", _
                RightSlingLightName&"e|(intensity)|(color2)", _
                RightSlingLightName&"g|(intensity)|(color1)")
        End With
    End With

    With CreateGlfShow("rsling_swap_2_2_b")
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"b|(intensity)|(color1)", _
                RightSlingLightName&"d|(intensity)|(color2)", _
                RightSlingLightName&"f|(intensity)|(color1)", _
                RightSlingLightName&"h|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"b|(intensity)|(color2)", _
                RightSlingLightName&"d|(intensity)|(color1)", _
                RightSlingLightName&"f|(intensity)|(color2)", _
                RightSlingLightName&"h|(intensity)|(color1)")
        End With
    End With

    With CreateGlfShow("rsling_swap_4_4")
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"a|(intensity)|(color1)", _
                RightSlingLightName&"b|(intensity)|(color2)", _
                RightSlingLightName&"c|(intensity)|(color1)", _
                RightSlingLightName&"d|(intensity)|(color2)", _
                RightSlingLightName&"e|(intensity)|(color1)", _
                RightSlingLightName&"f|(intensity)|(color2)", _
                RightSlingLightName&"g|(intensity)|(color1)", _
                RightSlingLightName&"h|(intensity)|(color2)")
        End With
        With .AddStep(Null, Null, RightSlingShowFrame)
            .Lights = Array( _
                RightSlingLightName&"a|(intensity)|(color2)", _
                RightSlingLightName&"b|(intensity)|(color1)", _
                RightSlingLightName&"c|(intensity)|(color2)", _
                RightSlingLightName&"d|(intensity)|(color1)", _
                RightSlingLightName&"e|(intensity)|(color2)", _
                RightSlingLightName&"f|(intensity)|(color1)", _
                RightSlingLightName&"g|(intensity)|(color2)", _
                RightSlingLightName&"h|(intensity)|(color1)")
        End With
    End With


    With CreateGlfShow("rsling_base_show")
        With .AddStep(0.01, Null, Null)
            With .Shows("rsling_rotate1_cw")
                .Key = "key_rsling_base_show1"
                .Speed = 7
                .Loops = 1
                With .Tokens()
                    .Add "intensity", 100
                    .Add "color", "ffffff"
                End With
            End With
            With .DOFEvent("14")
                .Action = "DOF_ON"
            End With
        End With
        With .AddStep(0.02, Null, Null)
            With .Shows("flash_color")
                .Key = "key_rsling_base_show2"
                .Speed = 15
                .Loops = 3
                With .Tokens()
                    .Add "lights", "tRSling"
                    .Add "color", GIColor3000k
                End With
            End With
        End With
        With .AddStep(0.02, Null, Null)
        With .Shows("flash_color_fadeout")
            .Key = "key_DOF14"
            .Speed = 10
            .Loops = 1
            With .Tokens()
                .Add "color", GIColor3000k
                .Add "lights", "LBG14"
            End With
        End With
    End With
        With .AddStep(0.3, Null, Null)
            With .DOFEvent("14")
                .Action = "DOF_OFF"
            End With
        End With
        With .AddStep(0.31, Null, Null)
        End With
    End With

End Sub


Sub CreateShieldShows()


With CreateGlfShow("shields_up_interior")
  With .AddStep(Null, Null, 0.03333)
    .Lights = Array( _
      "LSA|(intensity)|(color)" _
      )
  End With
  With .AddStep(Null, Null, 0.03333)
    .Lights = Array( _
      "gi06|(intensity)|(color)", _
      "gi05|(intensity)|(color)", _
      "gi02|(intensity)|(color)", _
      "gi01|(intensity)|(color)", _
      "LC1|(intensity)|(color)", _
      "LC2|(intensity)|(color)", _
      "LC3|(intensity)|(color)", _
      "LC4|(intensity)|(color)", _
      "LC5|(intensity)|(color)", _
      "LC6|(intensity)|(color)", _
      "LC7|(intensity)|(color)", _
      "LC8|(intensity)|(color)", _
      "LH9|(intensity)|(color)", _
      "LH8|(intensity)|(color)", _
      "LH7|(intensity)|(color)", _
      "LH6|(intensity)|(color)", _
      "LH5|(intensity)|(color)", _
      "LH4|(intensity)|(color)", _
      "LH3|(intensity)|(color)", _
      "LH2|(intensity)|(color)", _
      "LH1|(intensity)|(color)", _
      "LSR|(intensity)|(color)", _
      "LSL|(intensity)|(color)" _
      )
  End With
  With .AddStep(Null, Null, 0.03333)
    .Lights = Array( _
      "gi07|(intensity)|(color)", _
      "gi05|(intensity)|000000", _
      "gi03|(intensity)|(color)", _
      "LSA|(intensity)|000000", _
      "LPR3|(intensity)|(color)", _
      "LPR2|(intensity)|(color)", _
      "LPR6|(intensity)|(color)", _
      "LPR5|(intensity)|(color)", _
      "LPR4|(intensity)|(color)", _
      "LMR2|(intensity)|(color)", _
      "LCR2|(intensity)|(color)" _
      )
  End With
  With .AddStep(Null, Null, 0.03333)
    .Lights = Array( _
      "gi08|(intensity)|(color)", _
      "gi06|(intensity)|000000", _
      "gi04|(intensity)|(color)", _
      "gi02|(intensity)|000000", _
      "gi01|(intensity)|000000", _
      "LC1|(intensity)|000000", _
      "LC2|(intensity)|000000", _
      "LC3|(intensity)|000000", _
      "LC4|(intensity)|000000", _
      "LC5|(intensity)|000000", _
      "LC6|(intensity)|000000", _
      "LC7|(intensity)|000000", _
      "LC8|(intensity)|000000", _
      "LH9|(intensity)|000000", _
      "LH8|(intensity)|000000", _
      "LH7|(intensity)|000000", _
      "LH6|(intensity)|000000", _
      "LH5|(intensity)|000000", _
      "LH4|(intensity)|000000", _
      "LH3|(intensity)|000000", _
      "LH2|(intensity)|000000", _
      "LH1|(intensity)|000000", _
      "LPR1|(intensity)|(color)", _
      "LPR6|(intensity)|000000", _
      "LPR5|(intensity)|000000", _
      "LPR4|(intensity)|000000", _
      "LMR1|(intensity)|(color)", _
      "LCR1|(intensity)|(color)", _
      "LRI|(intensity)|(color)", _
      "LLI|(intensity)|(color)", _
      "LSR|(intensity)|000000", _
      "LSL|(intensity)|000000" _
      )
  End With
  With .AddStep(Null, Null, 0.03333)
    .Lights = Array( _
      "gi08|(intensity)|000000", _
      "gi07|(intensity)|000000", _
      "gi04|(intensity)|000000", _
      "gi03|(intensity)|000000", _
      "LPR1|(intensity)|000000", _
      "LPR3|(intensity)|000000", _
      "LPR2|(intensity)|000000", _
      "LMR2|(intensity)|000000", _
      "LMR1|(intensity)|000000", _
      "LCR2|(intensity)|000000", _
      "LCR1|(intensity)|000000" _
      )
  End With
  With .AddStep(Null, Null, 0.03333)
    .Lights = Array( _
      "LRI|(intensity)|000000", _
      "LLI|(intensity)|000000" _
      )
  End With
End With


With CreateGlfShow("shields_down_interior")
  With .AddStep(Null, Null, 0.1)
    .Lights = Array( _
      "LSA|(intensity)|(color)", _
      "gi01|(intensity)|(color)", _
      "gi02|(intensity)|(color)", _
      "gi03|(intensity)|(color)", _
      "gi04|(intensity)|(color)", _
      "gi05|(intensity)|(color)", _
      "gi06|(intensity)|(color)", _
      "gi07|(intensity)|(color)", _
      "gi08|(intensity)|(color)", _
      "LPR1|(intensity)|(color)", _
      "LPR2|(intensity)|(color)", _
      "LPR3|(intensity)|(color)", _
      "LPR4|(intensity)|(color)", _
      "LPR5|(intensity)|(color)", _
      "LPR6|(intensity)|(color)", _
      "LMR1|(intensity)|(color)", _
      "LMR2|(intensity)|(color)", _
      "LCR1|(intensity)|(color)", _
      "LCR2|(intensity)|(color)", _
      "LC1|(intensity)|(color)", _
      "LC2|(intensity)|(color)", _
      "LC3|(intensity)|(color)", _
      "LC4|(intensity)|(color)", _
      "LC5|(intensity)|(color)", _
      "LC6|(intensity)|(color)", _
      "LC7|(intensity)|(color)", _
      "LC8|(intensity)|(color)", _
      "LH9|(intensity)|(color)", _
      "LH8|(intensity)|(color)", _
      "LH7|(intensity)|(color)", _
      "LH6|(intensity)|(color)", _
      "LH5|(intensity)|(color)", _
      "LH4|(intensity)|(color)", _
      "LH3|(intensity)|(color)", _
      "LH2|(intensity)|(color)", _
      "LH1|(intensity)|(color)", _
      "LSR|(intensity)|(color)", _
      "LSL|(intensity)|(color)" _
      )
  End With
  With .AddStep(Null, Null, 1)
    .Lights = Array( _
      "LSA|(intensity)|000000|(fade)", _
      "gi01|(intensity)|000000|(fade)", _
      "gi02|(intensity)|000000|(fade)", _
      "gi03|(intensity)|000000|(fade)", _
      "gi04|(intensity)|000000|(fade)", _
      "gi05|(intensity)|000000|(fade)", _
      "gi06|(intensity)|000000|(fade)", _
      "gi07|(intensity)|000000|(fade)", _
      "gi08|(intensity)|000000|(fade)", _
      "LPR1|(intensity)|000000|(fade)", _
      "LPR2|(intensity)|000000|(fade)", _
      "LPR3|(intensity)|000000|(fade)", _
      "LPR4|(intensity)|000000|(fade)", _
      "LPR5|(intensity)|000000|(fade)", _
      "LPR6|(intensity)|000000|(fade)", _
      "LMR1|(intensity)|000000|(fade)", _
      "LMR2|(intensity)|000000|(fade)", _
      "LCR1|(intensity)|000000|(fade)", _
      "LCR2|(intensity)|000000|(fade)", _
      "LC1|(intensity)|000000|(fade)", _
      "LC2|(intensity)|000000|(fade)", _
      "LC3|(intensity)|000000|(fade)", _
      "LC4|(intensity)|000000|(fade)", _
      "LC5|(intensity)|000000|(fade)", _
      "LC6|(intensity)|000000|(fade)", _
      "LC7|(intensity)|000000|(fade)", _
      "LC8|(intensity)|000000|(fade)", _
      "LH9|(intensity)|000000|(fade)", _
      "LH8|(intensity)|000000|(fade)", _
      "LH7|(intensity)|000000|(fade)", _
      "LH6|(intensity)|000000|(fade)", _
      "LH5|(intensity)|000000|(fade)", _
      "LH4|(intensity)|000000|(fade)", _
      "LH3|(intensity)|000000|(fade)", _
      "LH2|(intensity)|000000|(fade)", _
      "LH1|(intensity)|000000|(fade)", _
      "LSR|(intensity)|000000|(fade)", _
      "LSL|(intensity)|000000|(fade)" _
      )
  End With
End With

With CreateGlfShow("shields_up")

  With .AddStep(0.01, Null, Null)
    With .Shows("flash_color_with_fade")
      .Key = "key_shield_up1"
      .Speed = 10
      .Loops = 5
      With .Tokens()
          .Add "lights", "tWiz"
          .Add "color", "ffffff"
          .Add "fade", 800
      End With
    End With
  End With
  With .AddStep(0.02, Null, Null)
    With .Shows("flash_color_with_fade")
      .Key = "key_shield_up2"
      .Speed = 10
      .Loops = 5
      With .Tokens()
          .Add "lights", "LLO"
          .Add "color", "ffffff"
          .Add "fade", 800
      End With
    End With
  End With
  With .AddStep(0.03, Null, Null)
    With .Shows("flash_color_with_fade")
      .Key = "key_shield_up3"
      .Speed = 10
      .Loops = 5
      With .Tokens()
          .Add "lights", "LRO"
          .Add "color", "ffffff"
          .Add "fade", 800
      End With
    End With
  End With

  With .AddStep(0.05, Null, Null)
    With .Shows("shields_up_interior")
      .Key = "key_shield_up4"
      .Speed = 1
      .Loops = 2
      With .Tokens()
          .Add "intensity", 100
          .Add "color", ShieldsColor
      End With
    End With
  End With


End With

With CreateGlfShow("shields_down")

  With .AddStep(0.01, Null, Null)
    With .Shows("flash_color")
      .Key = "key_shield_down1"
      .Speed = 15
      .Loops = 9
      With .Tokens()
          .Add "lights", "tWiz"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(0.02, Null, Null)
    With .Shows("flash_color")
      .Key = "key_shield_down2"
      .Speed = 15
      .Loops = 9
      With .Tokens()
          .Add "lights", "LLO"
          .Add "color", "ffffff"
      End With
    End With
  End With
  With .AddStep(0.03, Null, Null)
    With .Shows("flash_color")
      .Key = "key_shield_down3"
      .Speed = 15
      .Loops = 9
      With .Tokens()
          .Add "lights", "LRO"
          .Add "color", "ffffff"
      End With
    End With
  End With

  With .AddStep(0.03, Null, Null)
    With .Shows("shields_down_interior")
      .Key = "key_shield_down4"
      .Speed = 1
      .Loops = 1
      With .Tokens()
          .Add "intensity", 100
          .Add "color", ShieldsColor
          .Add "fade", 900
      End With
    End With
  End With


End With


End Sub


Sub CreateShipSaverBombShows()

With CreateGlfShow("ship_saver_acquired")
    With .AddStep(Null, Null, 0.1)
        With .Shows("insert_gi_slide_down")
            .Key = "insert_saver_acquiredA"
            .Speed = 1
            .Loops = 1
            With .Tokens()
                .Add "color", ShipSaveColor
                .Add "intensity", 100
            End With
        End With
    End With
    ' With .AddStep(Null, Null, 0.1)
    '     With .Shows("insert_gi_slide_down")
    '         .Key = "insert_saver_acquiredB"
    '         .Speed = 1
    '         .Loops = 1
    '         With .Tokens()
    '             .Add "color", ShipSaveColor
    '             .Add "intensity", 30
    '         End With
    '     End With
    ' End With
    ' With .AddStep(Null, Null, 0.1)
    '     With .Shows("insert_gi_slide_down")
    '         .Key = "insert_saver_acquiredC"
    '         .Speed = 1
    '         .Loops = 1
    '         With .Tokens()
    '             .Add "color", ShipSaveColor
    '             .Add "intensity", 5
    '         End With
    '     End With
    ' End With
End With



End Sub


Sub CreateSkillshotShows()


End Sub



Sub CreateTimeWarpShows()

    With CreateGlfShow("timewarp")
        With .AddStep(0.00000, Null, Null)
            .Lights = Array( _
            "gi17|100|000000", _
            "giapron|100|ffffff", _
            "gi22|100|eaeaea", _
            "gi20|100|03051c", _
            "gi21|100|000000", _
            "gi19|100|2d129f", _
            "gi18|100|1725de", _
            "gi16|100|000000", _
            "gi15|100|2f12a8", _
            "gi14|100|bdbacf", _
            "gi13|100|180a55", _
            "gi12|100|1826e7", _
            "gi11|100|1722b1", _
            "gi10|100|a8abdf", _
            "gi09|100|6c6883", _
            "gi08|100|171c5a", _
            "gi07|100|424244", _
            "gi06|100|020203", _
            "gi05|100|3c3c3c", _
            "gi04|100|250e81", _
            "gi03|100|08041c", _
            "gi02|100|09041f", _
            "gi01|100|000000", _
            "LTW2|100|1b28cd", _
            "LTW1|100|1827e6" _
            )
        End With
        With .AddStep(0.03333, Null, Null)
            .Lights = Array( _
            "gi22|100|f7f7f7", _
            "gi20|100|04082b", _
            "gi19|100|2f13a5", _
            "gi18|100|1825e3", _
            "gi14|100|aba6c3", _
            "gi13|100|130844", _
            "gi11|100|1821a3", _
            "gi10|100|babce5", _
            "gi09|100|585274", _
            "gi08|100|131965", _
            "gi07|100|2f2e33", _
            "gi06|100|000007", _
            "gi05|100|252525", _
            "gi04|100|210d70", _
            "gi03|100|080516", _
            "gi02|100|050214", _
            "gi01|100|010101", _
            "LTW2|100|1a26d3" _
            )
        End With
        With .AddStep(0.06667, Null, Null)
            .Lights = Array( _
            "gi22|100|fdfdfd", _
            "gi20|100|080a3f", _
            "gi21|100|000002", _
            "gi19|100|2f13a6", _
            "gi18|100|1826e7", _
            "gi14|100|9891b4", _
            "gi13|100|110737", _
            "gi11|100|1c2594", _
            "gi10|100|c8c8ea", _
            "gi09|100|49416c", _
            "gi08|100|11187a", _
            "gi07|100|20202a", _
            "gi06|100|02020c", _
            "gi05|100|181818", _
            "gi04|100|190b5c", _
            "gi03|100|0a0814", _
            "gi02|100|03020b", _
            "gi01|100|040404", _
            "LTW2|100|1726db", _
            "LTW1|100|1826e7" _
            )
        End With
        With .AddStep(0.10000, Null, Null)
            .Lights = Array( _
            "gi22|100|fefefe", _
            "gi20|100|090f59", _
            "gi21|100|010207", _
            "gi15|100|2f13a6", _
            "gi14|100|837aa6", _
            "gi13|100|0f082b", _
            "gi12|100|1726e5", _
            "gi11|100|242a8a", _
            "gi10|100|d4d5f0", _
            "gi09|100|3d3367", _
            "gi08|100|11198d", _
            "gi07|100|131625", _
            "gi06|100|020413", _
            "gi05|100|0c0c0c", _
            "gi04|100|170a4e", _
            "gi03|100|0f0e13", _
            "gi02|100|010006", _
            "gi01|100|0a0a0a", _
            "LTW2|100|1725de" _
            )
        End With
        With .AddStep(0.13333, Null, Null)
            .Lights = Array( _
            "giapron|100|fefefe", _
            "gi22|100|ffffff", _
            "gi20|100|0b1376", _
            "gi21|100|03020f", _
            "gi14|100|70669a", _
            "gi13|100|100c25", _
            "gi11|100|2c3383", _
            "gi10|100|dddff4", _
            "gi09|100|312564", _
            "gi08|100|121ca2", _
            "gi07|100|0d1024", _
            "gi06|100|040420", _
            "gi05|100|050505", _
            "gi04|100|13093d", _
            "gi03|100|17161b", _
            "gi02|100|010103", _
            "gi01|100|131313", _
            "LTW2|100|1825e3" _
            )
        End With
        With .AddStep(0.16667, Null, Null)
            .Lights = Array( _
            "giapron|100|fafafa", _
            "gi20|100|0e178f", _
            "gi21|100|03051a", _
            "gi19|100|2f12a8", _
            "gi15|100|2e13a2", _
            "gi14|100|605591", _
            "gi13|100|120f20", _
            "gi12|100|1725de", _
            "gi11|100|3a3e7d", _
            "gi10|100|e6e8f7", _
            "gi09|100|2c1d6b", _
            "gi08|100|131eb5", _
            "gi07|100|0b0b2d", _
            "gi06|100|040730", _
            "gi05|100|010101", _
            "gi04|100|130b32", _
            "gi03|100|242424", _
            "gi02|100|000001", _
            "gi01|100|202020", _
            "LTW2|100|1926e4" _
            )
        End With
        With .AddStep(0.20000, Null, Null)
            .Lights = Array( _
            "giapron|100|eaeaea", _
            "gi20|100|121cb0", _
            "gi21|100|05092f", _
            "gi16|100|010005", _
            "gi15|100|2d129b", _
            "gi14|100|4f418a", _
            "gi13|100|1b1926", _
            "gi12|100|1524d7", _
            "gi11|100|494c80", _
            "gi10|100|eaecf9", _
            "gi09|100|281772", _
            "gi08|100|1521c8", _
            "gi07|100|080b38", _
            "gi06|100|070c4a", _
            "gi05|100|010102", _
            "gi04|100|150f2b", _
            "gi03|100|343434", _
            "gi02|100|010101", _
            "gi01|100|353535", _
            "LTW2|100|1827e6" _
            )
        End With
        With .AddStep(0.23333, Null, Null)
            .Lights = Array( _
            "giapron|100|c7c7c7", _
            "gi20|100|1420c4", _
            "gi21|100|080c49", _
            "gi16|100|02020d", _
            "gi15|100|291091", _
            "gi14|100|413287", _
            "gi13|100|252429", _
            "gi12|100|1522cb", _
            "gi11|100|5b5e85", _
            "gi10|100|f0f2fc", _
            "gi09|100|28147a", _
            "gi08|100|1722d3", _
            "gi07|100|080c4a", _
            "gi06|100|0a1162", _
            "gi05|100|000008", _
            "gi04|100|1a172c", _
            "gi03|100|4b4b4b", _
            "gi02|100|040404", _
            "gi01|100|535353", _
            "LTW2|100|1826e7" _
            )
        End With
        With .AddStep(0.26667, Null, Null)
            .Lights = Array( _
            "gi17|100|040404", _
            "giapron|100|979797", _
            "gi20|100|1623d3", _
            "gi21|100|0c136e", _
            "gi16|100|03031c", _
            "gi15|100|240f83", _
            "gi14|100|3c2985", _
            "gi13|100|37363b", _
            "gi12|100|141db7", _
            "gi11|100|727294", _
            "gi10|100|f4f4fd", _
            "gi09|100|291284", _
            "gi08|100|1624dc", _
            "gi07|100|0a1063", _
            "gi06|100|0e1685", _
            "gi05|100|02020c", _
            "gi04|100|23212f", _
            "gi03|100|686868", _
            "gi02|100|0a0a0a", _
            "gi01|100|767676" _
            )
        End With
        With .AddStep(0.30000, Null, Null)
            .Lights = Array( _
            "gi17|100|111111", _
            "giapron|100|616161", _
            "gi20|100|1724df", _
            "gi21|100|0f1890", _
            "gi16|100|050935", _
            "gi15|100|1e0c70", _
            "gi14|100|35208a", _
            "gi13|100|4b4b4c", _
            "gi12|100|111aa5", _
            "gi11|100|8789a1", _
            "gi10|100|f9faff", _
            "gi09|100|2a128e", _
            "gi08|100|1825e4", _
            "gi07|100|0d157f", _
            "gi06|100|111ba1", _
            "gi05|100|020413", _
            "gi04|100|313039", _
            "gi03|100|868686", _
            "gi02|100|141414", _
            "gi01|100|9b9b9b" _
            )
        End With
        With .AddStep(0.33333, Null, Null)
            .Lights = Array( _
            "gi17|100|252525", _
            "giapron|100|373737", _
            "gi22|100|fdfdfd", _
            "gi20|100|1825e3", _
            "gi21|100|131db1", _
            "gi18|100|1726e6", _
            "gi16|100|090f59", _
            "gi15|100|1a0b5e", _
            "gi14|100|311a8f", _
            "gi13|100|646464", _
            "gi12|100|0e168c", _
            "gi11|100|9e9fb1", _
            "gi10|100|f9f9ff", _
            "gi09|100|2c1297", _
            "gi08|100|1926e4", _
            "gi07|100|111996", _
            "gi06|100|1320bc", _
            "gi05|100|040520", _
            "gi04|100|444349", _
            "gi03|100|a6a6a6", _
            "gi02|100|212121", _
            "gi01|100|c0c0c0" _
            )
        End With
        With .AddStep(0.36667, Null, Null)
            .Lights = Array( _
            "gi17|100|464646", _
            "giapron|100|1a1a1a", _
            "gi22|100|fafafa", _
            "gi20|100|1726e5", _
            "gi21|100|1422cc", _
            "gi18|100|1825e3", _
            "gi16|100|0e178a", _
            "gi15|100|15084a", _
            "gi14|100|2f1794", _
            "gi13|100|808080", _
            "gi12|100|0c1271", _
            "gi11|100|b3b5c2", _
            "gi10|100|fbfcff", _
            "gi09|100|2c119b", _
            "gi08|100|1827e6", _
            "gi07|100|131db1", _
            "gi06|100|1623d3", _
            "gi05|100|040832", _
            "gi04|100|5a595e", _
            "gi03|100|c3c3c3", _
            "gi02|100|373737", _
            "gi01|100|dddddd" _
            )
        End With
        With .AddStep(0.40000, Null, Null)
            .Lights = Array( _
            "gi17|100|767676", _
            "giapron|100|0b0b0b", _
            "gi22|100|f1f1f1", _
            "gi20|100|1826e7", _
            "gi21|100|1924de", _
            "gi18|100|1624db", _
            "gi16|100|121db4", _
            "gi15|100|0f0537", _
            "gi14|100|2e149a", _
            "gi13|100|9b9b9b", _
            "gi12|100|091059", _
            "gi11|100|c8c8d0", _
            "gi10|100|fdfdfd", _
            "gi09|100|2d12a1", _
            "gi08|100|1826e7", _
            "gi07|100|1421c6", _
            "gi06|100|1824dc", _
            "gi05|100|080d4c", _
            "gi04|100|77767b", _
            "gi03|100|dadada", _
            "gi02|100|545454", _
            "gi01|100|efefef" _
            )
        End With
        With .AddStep(0.43333, Null, Null)
            .Lights = Array( _
            "gi17|100|adadad", _
            "giapron|100|050505", _
            "gi22|100|e0e0e0", _
            "gi21|100|1724e2", _
            "gi18|100|1521cc", _
            "gi16|100|1623d2", _
            "gi15|100|0a0426", _
            "gi14|100|2e149c", _
            "gi13|100|b7b7b7", _
            "gi12|100|090e47", _
            "gi11|100|d9dadf", _
            "gi10|100|fefefe", _
            "gi09|100|2e13a2", _
            "gi07|100|1623d4", _
            "gi06|100|1825e3", _
            "gi05|100|0b126a", _
            "gi04|100|949494", _
            "gi03|100|eaeaea", _
            "gi02|100|757575", _
            "gi01|100|f9f9f9" _
            )
        End With
        With .AddStep(0.46667, Null, Null)
            .Lights = Array( _
            "gi17|100|d9d9d9", _
            "giapron|100|000000", _
            "gi22|100|c4c4c4", _
            "gi21|100|1726e5", _
            "gi19|100|2f13a6", _
            "gi18|100|121fb9", _
            "gi16|100|1724e2", _
            "gi15|100|07041b", _
            "gi14|100|2f14a1", _
            "gi13|100|cfcfcf", _
            "gi12|100|0a0e37", _
            "gi11|100|e6e6e8", _
            "gi10|100|ffffff", _
            "gi09|100|2f13a6", _
            "gi07|100|1824dc", _
            "gi06|100|1827e6", _
            "gi05|100|0f178a", _
            "gi04|100|b0b0b0", _
            "gi03|100|f5f5f5", _
            "gi02|100|9c9c9c", _
            "gi01|100|fdfdfd", _
            "LTW1|100|1726e5" _
            )
        End With
        With .AddStep(0.50000, Null, Null)
            .Lights = Array( _
            "gi17|100|f3f3f3", _
            "gi22|100|a3a3a3", _
            "gi21|100|1826e7", _
            "gi18|100|111a9f", _
            "gi16|100|1726e5", _
            "gi15|100|050311", _
            "gi14|100|2e13a3", _
            "gi13|100|e2e2e2", _
            "gi12|100|0c0f2e", _
            "gi11|100|efeff1", _
            "gi07|100|1726e5", _
            "gi05|100|131ba9", _
            "gi04|100|c9c9c9", _
            "gi03|100|fbfbfb", _
            "gi02|100|bebebe", _
            "gi01|100|ffffff" _
            )
        End With
        With .AddStep(0.53333, Null, Null)
            .Lights = Array( _
            "gi17|100|fdfdfd", _
            "gi22|100|7d7d7d", _
            "gi19|100|2f13a4", _
            "gi18|100|0d1580", _
            "gi16|100|1826e7", _
            "gi15|100|07060f", _
            "gi14|100|2f13a6", _
            "gi13|100|eeeeee", _
            "gi12|100|111227", _
            "gi11|100|f6f6f6", _
            "gi10|100|fdfdff", _
            "gi07|100|1827e6", _
            "gi06|100|1826e7", _
            "gi05|100|1421c4", _
            "gi04|100|dddddd", _
            "gi03|100|fefefe", _
            "gi02|100|dbdbdb" _
            )
        End With
        With .AddStep(0.56667, Null, Null)
            .Lights = Array( _
            "gi17|100|ffffff", _
            "gi22|100|595959", _
            "gi19|100|2e12a0", _
            "gi18|100|091062", _
            "gi15|100|0a090e", _
            "gi13|100|f7f7f7", _
            "gi12|100|171928", _
            "gi11|100|fafafa", _
            "gi10|100|fdfcff", _
            "gi09|100|2f12a8", _
            "gi05|100|1724d6", _
            "gi04|100|ebebeb", _
            "gi03|100|ffffff", _
            "gi02|100|eeeeee", _
            "LTW1|100|1826e1" _
            )
        End With
        With .AddStep(0.60000, Null, Null)
            .Lights = Array( _
            "gi22|100|3b3b3b", _
            "gi19|100|2c119c", _
            "gi18|100|090b45", _
            "gi15|100|111015", _
            "gi13|100|fcfcfc", _
            "gi12|100|25252f", _
            "gi11|100|fdfdfd", _
            "gi10|100|fbfaff", _
            "gi07|100|1826e7", _
            "gi05|100|1725de", _
            "gi04|100|f5f5f5", _
            "gi02|100|f9f9f9", _
            "LTW1|100|1925dd" _
            )
        End With
        With .AddStep(0.63333, Null, Null)
            .Lights = Array( _
            "gi22|100|242424", _
            "gi19|100|2a1194", _
            "gi18|100|050730", _
            "gi15|100|19191b", _
            "gi14|100|2f12a8", _
            "gi13|100|fdfdfd", _
            "gi12|100|333439", _
            "gi11|100|fefefe", _
            "gi10|100|faf9fe", _
            "gi05|100|1825e3", _
            "gi04|100|fbfbfb", _
            "gi02|100|fdfdfd", _
            "LTW1|100|1924d6" _
            )
        End With
        With .AddStep(0.66667, Null, Null)
            .Lights = Array( _
            "gi22|100|161616", _
            "gi20|100|1726e5", _
            "gi19|100|281088", _
            "gi18|100|03051d", _
            "gi15|100|272727", _
            "gi13|100|ffffff", _
            "gi12|100|454547", _
            "gi11|100|ffffff", _
            "gi10|100|f8f7fd", _
            "gi05|100|1827e6", _
            "gi04|100|fdfdfd", _
            "gi02|100|ffffff", _
            "LTW1|100|1925cf" _
            )
        End With
        With .AddStep(0.70000, Null, Null)
            .Lights = Array( _
            "gi22|100|0a0a0a", _
            "gi20|100|1826e1", _
            "gi21|100|1726e5", _
            "gi19|100|250f7c", _
            "gi18|100|020314", _
            "gi16|100|1825e5", _
            "gi15|100|3a3a3a", _
            "gi12|100|5a5a5a", _
            "gi10|100|f5f4fa", _
            "gi08|100|1827e6", _
            "gi05|100|1826e7", _
            "gi04|100|ffffff", _
            "gi01|100|fefefe", _
            "LTW1|100|1a27ca" _
            )
        End With
        With .AddStep(0.73333, Null, Null)
            .Lights = Array( _
            "gi17|100|fcfcfc", _
            "gi22|100|040404", _
            "gi20|100|1824db", _
            "gi21|100|1725e0", _
            "gi19|100|210f71", _
            "gi18|100|010109", _
            "gi16|100|1823d7", _
            "gi15|100|535353", _
            "gi12|100|727272", _
            "gi10|100|f2f1f9", _
            "gi06|100|1827e6", _
            "gi01|100|fdfdfd", _
            "LTW2|100|1826e6", _
            "LTW1|100|1e2ac1" _
            )
        End With
        With .AddStep(0.76667, Null, Null)
            .Lights = Array( _
            "gi17|100|f1f1f1", _
            "gi22|100|010101", _
            "gi20|100|1622cf", _
            "gi21|100|1524d7", _
            "gi19|100|211263", _
            "gi18|100|000105", _
            "gi16|100|1320bc", _
            "gi15|100|6f6f6f", _
            "gi12|100|8d8d8d", _
            "gi10|100|edebf8", _
            "gi08|100|1825e3", _
            "gi06|100|1726e3", _
            "gi01|100|f7f7f7", _
            "LTW2|100|1926e4", _
            "LTW1|100|2630ba" _
            )
        End With
        With .AddStep(0.80000, Null, Null)
            .Lights = Array( _
            "gi17|100|d5d5d5", _
            "gi20|100|131fbd", _
            "gi21|100|1421c7", _
            "gi19|100|201358", _
            "gi18|100|010101", _
            "gi16|100|101894", _
            "gi15|100|8e8e8e", _
            "gi12|100|a7a7a7", _
            "gi10|100|e9e7f5", _
            "gi08|100|1624dc", _
            "gi06|100|1724dc", _
            "gi03|100|fefefe", _
            "gi01|100|ebebeb", _
            "LTW2|100|1826df", _
            "LTW1|100|2f38b3" _
            )
        End With
        With .AddStep(0.83333, Null, Null)
            .Lights = Array( _
            "gi17|100|a9a9a9", _
            "gi22|100|000000", _
            "gi20|100|111aa3", _
            "gi21|100|111ca9", _
            "gi19|100|251a52", _
            "gi16|100|0a1062", _
            "gi15|100|aeaeae", _
            "gi12|100|c0c0c0", _
            "gi10|100|e2dff0", _
            "gi08|100|1722d3", _
            "gi06|100|1623d2", _
            "gi01|100|d5d5d5", _
            "LTW2|100|1827dd", _
            "LTW1|100|3941ae" _
            )
        End With
        With .AddStep(0.86667, Null, Null)
            .Lights = Array( _
            "gi17|100|717171", _
            "giapron|100|000005", _
            "gi22|100|000002", _
            "gi20|100|0e1689", _
            "gi21|100|0f1688", _
            "gi19|100|2b2450", _
            "gi18|100|020202", _
            "gi16|100|060a3c", _
            "gi15|100|c8c8c8", _
            "gi12|100|d4d4d4", _
            "gi10|100|d8d5ea", _
            "gi08|100|1421c8", _
            "gi07|100|1827e5", _
            "gi06|100|1320c1", _
            "gi03|100|fafafa", _
            "gi01|100|b7b7b7", _
            "LTW2|100|1a27d7", _
            "LTW1|100|484eaf" _
            )
        End With
        With .AddStep(0.90000, Null, Null)
            .Lights = Array( _
            "gi17|100|434343", _
            "giapron|100|00020e", _
            "gi22|100|000105", _
            "gi20|100|0b1169", _
            "gi21|100|0b1061", _
            "gi19|100|363052", _
            "gi18|100|080808", _
            "gi16|100|04051e", _
            "gi15|100|dfdfdf", _
            "gi12|100|e5e5e5", _
            "gi10|100|cec9e7", _
            "gi09|100|2f13a6", _
            "gi08|100|121eb7", _
            "gi07|100|1625e2", _
            "gi06|100|131ca8", _
            "gi05|100|1827e6", _
            "gi03|100|f4f4f4", _
            "gi02|100|fdfdfd", _
            "gi01|100|929292", _
            "LTW2|100|1b27d2", _
            "LTW1|100|585fb2" _
            )
        End With
        With .AddStep(0.93333, Null, Null)
            .Lights = Array( _
            "gi17|100|212121", _
            "giapron|100|03051f", _
            "gi22|100|02020c", _
            "gi20|100|080d50", _
            "gi21|100|070b43", _
            "gi19|100|45415a", _
            "gi18|100|0f0f0f", _
            "gi16|100|02020e", _
            "gi15|100|eeeeee", _
            "gi13|100|fefefe", _
            "gi12|100|f0f0f0", _
            "gi10|100|c3bede", _
            "gi08|100|111ba1", _
            "gi07|100|1824dc", _
            "gi06|100|0e1688", _
            "gi05|100|1726e3", _
            "gi03|100|e8e8e8", _
            "gi02|100|fafafa", _
            "gi01|100|6d6d6d", _
            "LTW2|100|1e29ca", _
            "LTW1|100|6d71b9" _
            )
        End With
        With .AddStep(0.96667, Null, Null)
            .Lights = Array( _
            "gi17|100|0e0e0e", _
            "giapron|100|070939", _
            "gi22|100|030414", _
            "gi20|100|050937", _
            "gi21|100|05062a", _
            "gi19|100|5a5769", _
            "gi18|100|181818", _
            "gi16|100|010006", _
            "gi15|100|f7f7f7", _
            "gi13|100|fdfdfd", _
            "gi12|100|f7f7f7", _
            "gi10|100|b6add8", _
            "gi08|100|0e178d", _
            "gi07|100|1623d4", _
            "gi06|100|0c126a", _
            "gi05|100|1725de", _
            "gi04|100|fefefe", _
            "gi03|100|d6d6d6", _
            "gi02|100|efefef", _
            "gi01|100|4d4d4d", _
            "LTW2|100|262fc4", _
            "LTW1|100|8186bf" _
            )
        End With
        With .AddStep(1.00000, Null, Null)
            .Lights = Array( _
            "gi17|100|050505", _
            "giapron|100|0a1063", _
            "gi22|100|050623", _
            "gi20|100|050527", _
            "gi21|100|030418", _
            "gi19|100|706e7b", _
            "gi18|100|252525", _
            "gi16|100|000000", _
            "gi15|100|fcfcfc", _
            "gi14|100|2f13a6", _
            "gi13|100|f9f9f9", _
            "gi12|100|fcfcfc", _
            "gi10|100|a79dce", _
            "gi09|100|2f13a4", _
            "gi08|100|0d1373", _
            "gi07|100|1321c7", _
            "gi06|100|080c4c", _
            "gi05|100|1724d5", _
            "gi04|100|fdfdfd", _
            "gi03|100|bdbdbd", _
            "gi02|100|dedede", _
            "gi01|100|313131", _
            "LTW2|100|2c35bf", _
            "LTW1|100|9699c6" _
            )
        End With
        With .AddStep(1.03333, Null, Null)
            .Lights = Array( _
            "gi17|100|000000", _
            "giapron|100|0f1893", _
            "gi22|100|060a38", _
            "gi20|100|030418", _
            "gi21|100|01020e", _
            "gi19|100|898792", _
            "gi18|100|393939", _
            "gi15|100|fefefe", _
            "gi13|100|f3f3f3", _
            "gi12|100|fdfdfd", _
            "gi11|100|fefefe", _
            "gi10|100|948ac1", _
            "gi09|100|2d129f", _
            "gi08|100|09115d", _
            "gi07|100|121cb1", _
            "gi06|100|050834", _
            "gi05|100|1321c3", _
            "gi04|100|fbfbfb", _
            "gi03|100|a0a0a0", _
            "gi02|100|c3c3c3", _
            "gi01|100|1e1e1e", _
            "LTW2|100|3640b9", _
            "LTW1|100|aaacd2" _
            )
        End With
        With .AddStep(1.06667, Null, Null)
            .Lights = Array( _
            "giapron|100|141ebc", _
            "gi22|100|080d4f", _
            "gi20|100|02020e", _
            "gi21|100|000008", _
            "gi19|100|a2a1a7", _
            "gi18|100|515151", _
            "gi15|100|ffffff", _
            "gi13|100|e7e7e7", _
            "gi12|100|ffffff", _
            "gi11|100|fdfdfd", _
            "gi10|100|8276b7", _
            "gi09|100|2c129a", _
            "gi08|100|0d114f", _
            "gi07|100|101a9b", _
            "gi06|100|040521", _
            "gi05|100|121caa", _
            "gi04|100|f5f5f5", _
            "gi03|100|818181", _
            "gi02|100|a0a0a0", _
            "gi01|100|101010", _
            "LTW2|100|454dbc", _
            "LTW1|100|bebfde" _
            )
        End With
        With .AddStep(1.10000, Null, Null)
            .Lights = Array( _
            "giapron|100|1723d7", _
            "gi22|100|0c1271", _
            "gi20|100|010207", _
            "gi21|100|010102", _
            "gi19|100|bab9be", _
            "gi18|100|717171", _
            "gi13|100|d5d5d5", _
            "gi11|100|fbfbfb", _
            "gi10|100|7163b0", _
            "gi09|100|2c1295", _
            "gi08|100|0f113f", _
            "gi07|100|0d147f", _
            "gi06|100|010414", _
            "gi05|100|0e178d", _
            "gi04|100|ededed", _
            "gi03|100|606060", _
            "gi02|100|7d7d7d", _
            "gi01|100|080808", _
            "LTW2|100|535aba", _
            "LTW1|100|cdcee5" _
            )
        End With
        With .AddStep(1.13333, Null, Null)
            .Lights = Array( _
            "giapron|100|1825e4", _
            "gi22|100|0e1892", _
            "gi20|100|030208", _
            "gi21|100|000000", _
            "gi19|100|cfced3", _
            "gi18|100|919191", _
            "gi14|100|2e12a3", _
            "gi13|100|bfbfbf", _
            "gi11|100|f6f6f6", _
            "gi10|100|6051a6", _
            "gi09|100|2b138e", _
            "gi08|100|151436", _
            "gi07|100|0a1064", _
            "gi06|100|02020c", _
            "gi05|100|0b126a", _
            "gi04|100|e0e0e0", _
            "gi03|100|484848", _
            "gi02|100|5b5b5b", _
            "gi01|100|040404", _
            "LTW2|100|656bbd", _
            "LTW1|100|dadbed" _
            )
        End With
        With .AddStep(1.16667, Null, Null)
            .Lights = Array( _
            "giapron|100|1827e6", _
            "gi22|100|111daf", _
            "gi20|100|060606", _
            "gi19|100|e1e1e3", _
            "gi18|100|b3b3b3", _
            "gi14|100|2e13a2", _
            "gi13|100|a4a4a4", _
            "gi11|100|eeeeef", _
            "gi10|100|5543a1", _
            "gi09|100|2a1485", _
            "gi08|100|181a33", _
            "gi07|100|090e51", _
            "gi06|100|010108", _
            "gi05|100|080c4d", _
            "gi04|100|cdcdcd", _
            "gi03|100|313133", _
            "gi02|100|3d3d3d", _
            "gi01|100|000000", _
            "LTW2|100|7a7ec5", _
            "LTW1|100|e4e6f4" _
            )
        End With
        With .AddStep(1.20000, Null, Null)
            .Lights = Array( _
            "giapron|100|1826e7", _
            "gi22|100|1421c8", _
            "gi20|100|0b0b0b", _
            "gi19|100|ededed", _
            "gi18|100|cecece", _
            "gi14|100|2e139e", _
            "gi13|100|868686", _
            "gi11|100|e4e3e8", _
            "gi10|100|4a359d", _
            "gi09|100|2c1a7e", _
            "gi08|100|222233", _
            "gi07|100|050939", _
            "gi06|100|000101", _
            "gi05|100|050832", _
            "gi04|100|b5b5b5", _
            "gi03|100|222127", _
            "gi02|100|252525", _
            "LTW2|100|8e92cc", _
            "LTW1|100|ebebf7" _
            )
        End With
        With .AddStep(1.23333, Null, Null)
            .Lights = Array( _
            "gi22|100|1625da", _
            "gi20|100|131313", _
            "gi19|100|f5f5f5", _
            "gi18|100|e4e4e4", _
            "gi14|100|2e149b", _
            "gi13|100|6b6b6b", _
            "gi11|100|d7d6db", _
            "gi10|100|40299c", _
            "gi09|100|302077", _
            "gi08|100|2d2f3b", _
            "gi07|100|060628", _
            "gi06|100|000000", _
            "gi05|100|040522", _
            "gi04|100|9a9a9a", _
            "gi03|100|16151b", _
            "gi02|100|161616", _
            "gi01|100|000002", _
            "LTW2|100|9fa5d2", _
            "LTW1|100|f3f3fb" _
            )
        End With
        With .AddStep(1.26667, Null, Null)
            .Lights = Array( _
            "gi22|100|1826e2", _
            "gi20|100|1f1f1f", _
            "gi19|100|fafafa", _
            "gi18|100|f1f1f1", _
            "gi14|100|2f1695", _
            "gi13|100|515153", _
            "gi11|100|c7c6cb", _
            "gi10|100|3a229c", _
            "gi09|100|382b76", _
            "gi08|100|404048", _
            "gi07|100|04061c", _
            "gi05|100|000410", _
            "gi04|100|7c7d7f", _
            "gi03|100|0d0f1b", _
            "gi02|100|0b0b0b", _
            "gi01|100|010207", _
            "LTW2|100|b4b8de", _
            "LTW1|100|f7f8fd" _
            )
        End With
        With .AddStep(1.30000, Null, Null)
            .Lights = Array( _
            "gi22|100|1726e5", _
            "gi20|100|2f2f2f", _
            "gi21|100|010101", _
            "gi19|100|fdfdfd", _
            "gi18|100|fafafa", _
            "gi15|100|fefefe", _
            "gi14|100|321b90", _
            "gi13|100|3b3a3f", _
            "gi11|100|b4b3b9", _
            "gi10|100|351c9d", _
            "gi09|100|453978", _
            "gi08|100|535458", _
            "gi07|100|040613", _
            "gi06|100|040404", _
            "gi05|100|02020c", _
            "gi04|100|616266", _
            "gi03|100|090a1b", _
            "gi02|100|050505", _
            "gi01|100|01030f", _
            "LTW2|100|c6c7e8", _
            "LTW1|100|fafbfd" _
            )
        End With
        With .AddStep(1.33333, Null, Null)
            .Lights = Array( _
            "giapron|100|1827e6", _
            "gi22|100|1826e7", _
            "gi20|100|434343", _
            "gi21|100|020202", _
            "gi19|100|fefefe", _
            "gi18|100|fdfdfd", _
            "gi15|100|fdfdfd", _
            "gi14|100|36208e", _
            "gi13|100|28292e", _
            "gi11|100|9d9ba8", _
            "gi10|100|33199f", _
            "gi09|100|554b80", _
            "gi08|100|68686a", _
            "gi07|100|070912", _
            "gi06|100|070707", _
            "gi05|100|000005", _
            "gi04|100|484850", _
            "gi03|100|050926", _
            "gi02|100|010101", _
            "gi01|100|03051c", _
            "LTW2|100|d3d5ef", _
            "LTW1|100|fcfbff" _
            )
        End With
        With .AddStep(1.36667, Null, Null)
            .Lights = Array( _
            "giapron|100|1724e1", _
            "gi20|100|5c5c5c", _
            "gi21|100|070707", _
            "gi19|100|ffffff", _
            "gi18|100|ffffff", _
            "gi15|100|f9f9f9", _
            "gi14|100|3d298b", _
            "gi13|100|1b1b25", _
            "gi12|100|fefefe", _
            "gi11|100|878494", _
            "gi10|100|3117a0", _
            "gi09|100|69608b", _
            "gi08|100|828284", _
            "gi07|100|0e0d12", _
            "gi06|100|0e0e0e", _
            "gi05|100|000000", _
            "gi04|100|333542", _
            "gi03|100|050830", _
            "gi02|100|010102", _
            "gi01|100|03082e", _
            "LTW2|100|dddff2", _
            "LTW1|100|fdfcff" _
            )
        End With
        With .AddStep(1.40000, Null, Null)
            .Lights = Array( _
            "giapron|100|1622d0", _
            "gi20|100|7a7a7a", _
            "gi21|100|0f0f0f", _
            "gi15|100|efefef", _
            "gi14|100|47388d", _
            "gi13|100|121524", _
            "gi12|100|fdfdfd", _
            "gi11|100|716d84", _
            "gi10|100|2f14a1", _
            "gi09|100|7f789a", _
            "gi08|100|9b9b9b", _
            "gi07|100|151517", _
            "gi06|100|161616", _
            "gi04|100|242537", _
            "gi03|100|090b46", _
            "gi02|100|010104", _
            "gi01|100|080b47", _
            "LTW2|100|e5e7f6", _
            "LTW1|100|ffffff" _
            )
        End With
        With .AddStep(1.43333, Null, Null)
            .Lights = Array( _
            "giapron|100|131db3", _
            "gi20|100|999999", _
            "gi21|100|1c1c1c", _
            "gi16|100|010101", _
            "gi15|100|e1e1e1", _
            "gi14|100|53468f", _
            "gi13|100|0d0f24", _
            "gi12|100|f9f9f9", _
            "gi11|100|5d5878", _
            "gi10|100|2f13a4", _
            "gi09|100|9692ad", _
            "gi08|100|b2b2b2", _
            "gi07|100|202022", _
            "gi06|100|262626", _
            "gi04|100|1a1c3a", _
            "gi03|100|090f5c", _
            "gi02|100|02020a", _
            "gi01|100|0a1162", _
            "LTW2|100|edeffb" _
            )
        End With
        With .AddStep(1.46667, Null, Null)
            .Lights = Array( _
            "gi17|100|000001", _
            "giapron|100|0e1683", _
            "gi20|100|b6b6b6", _
            "gi21|100|2e2e2e", _
            "gi16|100|020202", _
            "gi15|100|cbcbcb", _
            "gi14|100|645995", _
            "gi13|100|0a0c2b", _
            "gi12|100|f4f4f4", _
            "gi11|100|4d4569", _
            "gi10|100|2f12a7", _
            "gi09|100|adaabd", _
            "gi08|100|c9c9c9", _
            "gi07|100|2d2d2d", _
            "gi06|100|3a3a3a", _
            "gi04|100|13163d", _
            "gi03|100|0c1478", _
            "gi02|100|020411", _
            "gi01|100|0e1685", _
            "LTW2|100|f2f2fa" _
            )
        End With
        With .AddStep(1.50000, Null, Null)
            .Lights = Array( _
            "gi17|100|02020c", _
            "giapron|100|0a0e57", _
            "gi20|100|d0d0d0", _
            "gi21|100|4a4a4a", _
            "gi16|100|090909", _
            "gi15|100|afafaf", _
            "gi14|100|796fa4", _
            "gi13|100|080b3c", _
            "gi12|100|e9e9e9", _
            "gi11|100|3f3665", _
            "gi10|100|2f13a6", _
            "gi09|100|c3c0d1", _
            "gi08|100|dadada", _
            "gi07|100|404040", _
            "gi06|100|515151", _
            "gi05|100|020202", _
            "gi04|100|0d124a", _
            "gi03|100|101893", _
            "gi02|100|03051d", _
            "gi01|100|121ca5", _
            "LTW2|100|f6f7fc" _
            )
        End With
        With .AddStep(1.53333, Null, Null)
            .Lights = Array( _
            "gi17|100|010417", _
            "giapron|100|04092f", _
            "gi20|100|e4e4e4", _
            "gi21|100|6a6a6a", _
            "gi16|100|151515", _
            "gi15|100|919191", _
            "gi14|100|8e86b1", _
            "gi13|100|0a0e4d", _
            "gi12|100|dbdbdb", _
            "gi11|100|332860", _
            "gi09|100|d4d2de", _
            "gi08|100|e8e8e8", _
            "gi07|100|575757", _
            "gi06|100|717171", _
            "gi05|100|070707", _
            "gi04|100|0d125c", _
            "gi03|100|121eaf", _
            "gi02|100|04072e", _
            "gi01|100|1320c0", _
            "LTW2|100|fafaff" _
            )
        End With
        With .AddStep(1.56667, Null, Null)
            .Lights = Array( _
            "gi17|100|060933", _
            "giapron|100|020315", _
            "gi22|100|1726e5", _
            "gi20|100|f2f2f2", _
            "gi21|100|919191", _
            "gi16|100|2b2b2b", _
            "gi15|100|6f6f6f", _
            "gi14|100|a29bbe", _
            "gi13|100|091061", _
            "gi12|100|c9c9c9", _
            "gi11|100|2c1f65", _
            "gi09|100|e3e2e8", _
            "gi08|100|f2f2f2", _
            "gi07|100|707070", _
            "gi06|100|929292", _
            "gi05|100|0d0d0d", _
            "gi04|100|0d1470", _
            "gi03|100|1420c3", _
            "gi02|100|070d49", _
            "gi01|100|1623d5", _
            "LTW2|100|fcfbff" _
            )
        End With
        With .AddStep(1.60000, Null, Null)
            .Lights = Array( _
            "gi17|100|080e58", _
            "giapron|100|02020a", _
            "gi22|100|1825e2", _
            "gi20|100|fafafa", _
            "gi21|100|b6b6b6", _
            "gi18|100|fefefe", _
            "gi16|100|505050", _
            "gi15|100|545454", _
            "gi14|100|b6b0cb", _
            "gi13|100|0c147a", _
            "gi12|100|b1b1b1", _
            "gi11|100|28196b", _
            "gi10|100|2f12a8", _
            "gi09|100|edecf2", _
            "gi08|100|f9f9f9", _
            "gi07|100|8c8c8c", _
            "gi06|100|b3b3b3", _
            "gi05|100|181818", _
            "gi04|100|0f1688", _
            "gi03|100|1623d4", _
            "gi02|100|0a1163", _
            "gi01|100|1924de", _
            "LTW2|100|fcfbfe" _
            )
        End With
        With .AddStep(1.63333, Null, Null)
            .Lights = Array( _
            "gi17|100|0e1685", _
            "giapron|100|010005", _
            "gi22|100|1625db", _
            "gi20|100|fdfdfd", _
            "gi21|100|d5d5d5", _
            "gi18|100|fdfdfd", _
            "gi16|100|7d7d7d", _
            "gi15|100|3a3a3a", _
            "gi14|100|c8c5d9", _
            "gi13|100|101896", _
            "gi12|100|979797", _
            "gi11|100|261477", _
            "gi09|100|f4f3f8", _
            "gi08|100|fdfdfd", _
            "gi07|100|a8a8a8", _
            "gi06|100|cfcfcf", _
            "gi05|100|272727", _
            "gi04|100|121b9f", _
            "gi03|100|1824dc", _
            "gi02|100|0e1685", _
            "gi01|100|1825e3", _
            "LTW2|100|fefefe" _
            )
        End With
        With .AddStep(1.66667, Null, Null)
            .Lights = Array( _
            "gi17|100|121eb2", _
            "giapron|100|000000", _
            "gi22|100|1522cf", _
            "gi20|100|fefefe", _
            "gi21|100|ebebeb", _
            "gi19|100|fefefe", _
            "gi18|100|f9f9f9", _
            "gi16|100|b0b0b0", _
            "gi15|100|282828", _
            "gi14|100|d6d3e4", _
            "gi13|100|121cae", _
            "gi12|100|7d7d7d", _
            "gi11|100|28127f", _
            "gi09|100|faf9fe", _
            "gi07|100|c1c1c1", _
            "gi06|100|e4e4e4", _
            "gi05|100|3b3b3b", _
            "gi04|100|131eb7", _
            "gi03|100|1724e2", _
            "gi02|100|121ca7", _
            "gi01|100|1827e6", _
            "LTW2|100|ffffff" _
            )
        End With
        With .AddStep(1.70000, Null, Null)
            .Lights = Array( _
            "gi17|100|1522d0", _
            "gi22|100|121db3", _
            "gi20|100|ffffff", _
            "gi21|100|f6f6f6", _
            "gi19|100|fdfdfd", _
            "gi18|100|f0f0f0", _
            "gi16|100|dadada", _
            "gi15|100|19191b", _
            "gi14|100|e2e0ee", _
            "gi13|100|151fc0", _
            "gi12|100|646464", _
            "gi11|100|291287", _
            "gi09|100|fdfdff", _
            "gi08|100|fefefe", _
            "gi07|100|d8d8d8", _
            "gi06|100|f2f2f2", _
            "gi05|100|575757", _
            "gi04|100|1421c8", _
            "gi03|100|1926e4", _
            "gi02|100|1320c0", _
            "gi01|100|1826e7" _
            )
        End With
        With .AddStep(1.73333, Null, Null)
            .Lights = Array( _
            "gi17|100|1724e1", _
            "gi22|100|10199b", _
            "gi21|100|fdfdfd", _
            "gi19|100|fbfbfb", _
            "gi18|100|e0e0e0", _
            "gi16|100|f1f1f1", _
            "gi15|100|0f0f12", _
            "gi14|100|eae8f3", _
            "gi13|100|1522cf", _
            "gi12|100|4d4d4f", _
            "gi11|100|2b1293", _
            "gi09|100|fefeff", _
            "gi08|100|ffffff", _
            "gi07|100|e8e8e8", _
            "gi06|100|fafafa", _
            "gi05|100|757575", _
            "gi04|100|1722d5", _
            "gi03|100|1826e7", _
            "gi02|100|1424d3", _
            "LTW1|100|fbfbfe" _
            )
        End With
        With .AddStep(1.76667, Null, Null)
            .Lights = Array( _
            "gi17|100|1826e7", _
            "gi22|100|0c1476", _
            "gi21|100|ffffff", _
            "gi19|100|f6f6f6", _
            "gi18|100|cacaca", _
            "gi16|100|fcfcfc", _
            "gi15|100|09080e", _
            "gi14|100|f1f0f6", _
            "gi13|100|1625da", _
            "gi12|100|39393b", _
            "gi11|100|2c1299", _
            "gi09|100|ffffff", _
            "gi07|100|f3f3f3", _
            "gi06|100|fefefe", _
            "gi05|100|9a9a9a", _
            "gi04|100|1725de", _
            "gi02|100|1624dc", _
            "LTW1|100|faf9fe" _
            )
        End With
        With .AddStep(1.80000, Null, Null)
            .Lights = Array( _
            "gi22|100|090d57", _
            "gi19|100|eeeeee", _
            "gi18|100|acacac", _
            "gi16|100|fefefe", _
            "gi15|100|04070f", _
            "gi14|100|f5f4fa", _
            "gi13|100|1725e0", _
            "gi12|100|2a292d", _
            "gi11|100|2d129f", _
            "gi07|100|fafafa", _
            "gi05|100|b9b9b9", _
            "gi04|100|1825e5", _
            "gi02|100|1825e4", _
            "LTW1|100|f6f5fa" _
            )
        End With
        With .AddStep(1.83333, Null, Null)
            .Lights = Array( _
            "gi22|100|080a3c", _
            "gi19|100|e2e2e4", _
            "gi18|100|8c8c8c", _
            "gi16|100|ffffff", _
            "gi15|100|010412", _
            "gi14|100|f9f8fd", _
            "gi13|100|1926e4", _
            "gi12|100|1e1d24", _
            "gi11|100|2e13a2", _
            "gi07|100|fdfdfd", _
            "gi06|100|ffffff", _
            "gi05|100|d6d6d6", _
            "gi02|100|1827e6", _
            "LTW1|100|f3f2f8" _
            )
        End With
        With .AddStep(1.86667, Null, Null)
            .Lights = Array( _
            "gi22|100|050527", _
            "gi19|100|d3d3d5", _
            "gi18|100|6b6b6b", _
            "gi15|100|03051c", _
            "gi14|100|fbfaff", _
            "gi13|100|1826e7", _
            "gi12|100|151320", _
            "gi11|100|2f13a4", _
            "gi07|100|fefefe", _
            "gi05|100|eaeaea", _
            "gi04|100|1826e7", _
            "gi02|100|1826e7", _
            "LTW1|100|ecebf3" _
            )
        End With
        With .AddStep(1.90000, Null, Null)
            .Lights = Array( _
            "gi22|100|010415", _
            "gi19|100|bebdc0", _
            "gi18|100|4d4d4d", _
            "gi15|100|05062a", _
            "gi14|100|fdfdff", _
            "gi12|100|110e20", _
            "gi11|100|2f13a6", _
            "gi07|100|ffffff", _
            "gi05|100|f5f5f5", _
            "gi01|100|1826e6", _
            "LTW2|100|fdfdff", _
            "LTW1|100|e3e1ee" _
            )
        End With
        With .AddStep(1.93333, Null, Null)
            .Lights = Array( _
            "gi22|100|02020e", _
            "gi20|100|fefefe", _
            "gi19|100|a5a6ab", _
            "gi18|100|353535", _
            "gi15|100|07093c", _
            "gi14|100|ffffff", _
            "gi12|100|100c25", _
            "gi05|100|fbfbfb", _
            "gi01|100|1825e3", _
            "LTW2|100|fbfaff", _
            "LTW1|100|d9d7e4" _
            )
        End With
        With .AddStep(1.96667, Null, Null)
            .Lights = Array( _
            "gi17|100|1825e4", _
            "gi22|100|000107", _
            "gi20|100|fcfcfc", _
            "gi19|100|8c8c95", _
            "gi18|100|222222", _
            "gi16|100|fefefe", _
            "gi15|100|080e55", _
            "gi12|100|0d072c", _
            "gi05|100|fefefe", _
            "gi01|100|1824dc", _
            "LTW2|100|faf9fe", _
            "LTW1|100|ccc9dc" _
            )
        End With
        With .AddStep(2.00000, Null, Null)
            .Lights = Array( _
            "gi17|100|1823d7", _
            "gi22|100|010006", _
            "gi20|100|f8f8f8", _
            "gi21|100|fdfdfd", _
            "gi19|100|727480", _
            "gi18|100|151515", _
            "gi16|100|f9f9f9", _
            "gi15|100|0c126e", _
            "gi12|100|100637", _
            "gi11|100|2f12a8", _
            "gi05|100|ffffff", _
            "gi01|100|1623d2", _
            "LTW2|100|f5f4fc", _
            "LTW1|100|bbb8cd" _
            )
        End With
        With .AddStep(2.03333, Null, Null)
            .Lights = Array( _
            "gi17|100|1420bc", _
            "gi22|100|000000", _
            "gi20|100|efefef", _
            "gi21|100|f8f8f8", _
            "gi19|100|585a6e", _
            "gi18|100|0c0c0c", _
            "gi16|100|ebebeb", _
            "gi15|100|0f168a", _
            "gi12|100|130844", _
            "gi10|100|2f13a6", _
            "gi08|100|fdfdfd", _
            "gi06|100|fefefe", _
            "gi03|100|1926e4", _
            "gi01|100|131fbc", _
            "LTW2|100|f4f3fb", _
            "LTW1|100|a8a3c1" _
            )
        End With
        With .AddStep(2.06667, Null, Null)
            .Lights = Array( _
            "gi17|100|101991", _
            "gi20|100|e1e1e1", _
            "gi21|100|ececec", _
            "gi19|100|44465f", _
            "gi18|100|070707", _
            "gi16|100|cccccc", _
            "gi15|100|111ca9", _
            "gi12|100|180a57", _
            "gi09|100|fefeff", _
            "gi08|100|fbfbfb", _
            "gi06|100|fdfdfd", _
            "gi03|100|1724e2", _
            "gi02|100|1827e6", _
            "gi01|100|101a9f", _
            "LTW2|100|edecf4", _
            "LTW1|100|968fb3" _
            )
        End With
        With .AddStep(2.10000, Null, Null)
            .Lights = Array( _
            "gi17|100|0b1062", _
            "gi20|100|cdcdcd", _
            "gi21|100|d7d7d7", _
            "gi19|100|35355a", _
            "gi18|100|020202", _
            "gi16|100|9f9f9f", _
            "gi15|100|151fbf", _
            "gi12|100|1c0b68", _
            "gi09|100|fcfcfe", _
            "gi08|100|f8f8f8", _
            "gi06|100|f9f9f9", _
            "gi03|100|1824d9", _
            "gi02|100|1827e5", _
            "gi01|100|0d147e", _
            "LTW2|100|e4e2ef", _
            "LTW1|100|8279a5" _
            )
        End With
        With .AddStep(2.13333, Null, Null)
            .Lights = Array( _
            "gi17|100|060939", _
            "gi22|100|010101", _
            "gi20|100|b2b2b2", _
            "gi21|100|b8b8b8", _
            "gi19|100|242858", _
            "gi18|100|010101", _
            "gi16|100|6c6c6c", _
            "gi15|100|1522ce", _
            "gi12|100|230d7b", _
            "gi10|100|3014a5", _
            "gi09|100|f9fafe", _
            "gi08|100|f1f1f1", _
            "gi06|100|eeeeee", _
            "gi03|100|1522ce", _
            "gi02|100|1725de", _
            "gi01|100|0a105e", _
            "LTW2|100|dcd9e9", _
            "LTW1|100|6e6497" _
            )
        End With
        With .AddStep(2.16667, Null, Null)
            .Lights = Array( _
            "gi17|100|04061e", _
            "giapron|100|050505", _
            "gi22|100|060606", _
            "gi20|100|949494", _
            "gi21|100|939393", _
            "gi19|100|1c215c", _
            "gi18|100|010102", _
            "gi16|100|424242", _
            "gi15|100|1824dd", _
            "gi12|100|280f8d", _
            "gi10|100|3015a2", _
            "gi09|100|f4f5f9", _
            "gi08|100|e6e6e6", _
            "gi07|100|fefefe", _
            "gi06|100|dfdfdf", _
            "gi04|100|1827e6", _
            "gi03|100|121fbb", _
            "gi02|100|1723d5", _
            "gi01|100|060b42", _
            "LTW2|100|cfcce0", _
            "LTW1|100|5d518e" _
            )
        End With
        With .AddStep(2.20000, Null, Null)
            .Lights = Array( _
            "gi17|100|02020c", _
            "giapron|100|101010", _
            "gi22|100|0b0b0b", _
            "gi20|100|747474", _
            "gi21|100|6b6b6b", _
            "gi19|100|161b68", _
            "gi18|100|010005", _
            "gi16|100|232323", _
            "gi15|100|1724e2", _
            "gi14|100|fefeff", _
            "gi13|100|1826e6", _
            "gi12|100|2a1095", _
            "gi10|100|3116a3", _
            "gi09|100|edeef5", _
            "gi08|100|d7d7d7", _
            "gi07|100|fcfcfc", _
            "gi06|100|c8c8c8", _
            "gi04|100|1926e4", _
            "gi03|100|121ba2", _
            "gi02|100|1521c6", _
            "gi01|100|040729", _
            "LTW2|100|bfbad1", _
            "LTW1|100|4e408a" _
            )
        End With
        With .AddStep(2.23333, Null, Null)
            .Lights = Array( _
            "gi17|100|000008", _
            "giapron|100|242424", _
            "gi22|100|151515", _
            "gi20|100|575757", _
            "gi21|100|494949", _
            "gi19|100|141a77", _
            "gi18|100|020106", _
            "gi16|100|101010", _
            "gi15|100|1926e4", _
            "gi14|100|fbfbfc", _
            "gi13|100|1825e3", _
            "gi12|100|2d129d", _
            "gi10|100|3218a0", _
            "gi09|100|e3e3ef", _
            "gi08|100|c5c5c5", _
            "gi07|100|f8f8f8", _
            "gi06|100|aaaaaa", _
            "gi05|100|fdfdfd", _
            "gi04|100|1725e1", _
            "gi03|100|0d1788", _
            "gi02|100|101baa", _
            "gi01|100|020518", _
            "LTW2|100|aea7c8", _
            "LTW1|100|423386" _
            )
        End With
        With .AddStep(2.26667, Null, Null)
            .Lights = Array( _
            "gi17|100|000000", _
            "giapron|100|444444", _
            "gi22|100|242424", _
            "gi20|100|3f3f3f", _
            "gi21|100|2f2f2f", _
            "gi19|100|121a8c", _
            "gi18|100|04020d", _
            "gi16|100|080808", _
            "gi15|100|1826e7", _
            "gi14|100|f9f8fe", _
            "gi13|100|1624dc", _
            "gi12|100|2e12a3", _
            "gi10|100|361d9d", _
            "gi09|100|d3d5e2", _
            "gi08|100|aeaeae", _
            "gi07|100|f1f1f1", _
            "gi06|100|888888", _
            "gi05|100|fafafa", _
            "gi04|100|1624dc", _
            "gi03|100|0b126d", _
            "gi02|100|0f188d", _
            "gi01|100|01030f", _
            "LTW2|100|9d95bd", _
            "LTW1|100|392889" _
            )
        End With
        With .AddStep(2.30000, Null, Null)
            .Lights = Array( _
            "giapron|100|6f6f6f", _
            "gi22|100|373737", _
            "gi20|100|292929", _
            "gi21|100|1b1b1b", _
            "gi19|100|121b9c", _
            "gi18|100|050215", _
            "gi16|100|010101", _
            "gi14|100|f6f7fb", _
            "gi13|100|1722d7", _
            "gi12|100|2f13a6", _
            "gi10|100|3a229d", _
            "gi09|100|c1c2d6", _
            "gi08|100|959595", _
            "gi07|100|e5e5e5", _
            "gi06|100|696969", _
            "gi05|100|f1f1f1", _
            "gi04|100|1621d1", _
            "gi03|100|090d53", _
            "gi02|100|0c116c", _
            "gi01|100|010109", _
            "LTW2|100|8a81b1", _
            "LTW1|100|331e8a" _
            )
        End With
        With .AddStep(2.33333, Null, Null)
            .Lights = Array( _
            "giapron|100|a0a0a0", _
            "gi22|100|555555", _
            "gi20|100|1c1c1c", _
            "gi21|100|0f0f0f", _
            "gi19|100|131db0", _
            "gi18|100|090322", _
            "gi16|100|000000", _
            "gi14|100|f0f0f9", _
            "gi13|100|1421c8", _
            "gi11|100|2f13a6", _
            "gi10|100|422b9d", _
            "gi09|100|abadc8", _
            "gi08|100|7b7b7a", _
            "gi07|100|d3d3d3", _
            "gi06|100|484848", _
            "gi05|100|e2e2e2", _
            "gi04|100|1320c4", _
            "gi03|100|050b3d", _
            "gi02|100|080b4d", _
            "gi01|100|000002", _
            "LTW2|100|766ba3", _
            "LTW1|100|30198c" _
            )
        End With
        With .AddStep(2.36667, Null, Null)
            .Lights = Array( _
            "giapron|100|cecece", _
            "gi22|100|727272", _
            "gi20|100|121212", _
            "gi21|100|070707", _
            "gi19|100|151fc0", _
            "gi18|100|0e0530", _
            "gi14|100|e6e8f4", _
            "gi13|100|131db4", _
            "gi12|100|2f12a7", _
            "gi10|100|4a37a0", _
            "gi09|100|9295b9", _
            "gi08|100|626166", _
            "gi07|100|bcbcbc", _
            "gi06|100|323232", _
            "gi05|100|cbcbcb", _
            "gi04|100|121db3", _
            "gi03|100|06062a", _
            "gi02|100|030931", _
            "gi01|100|000000", _
            "LTW2|100|64579a", _
            "LTW1|100|2f1794" _
            )
        End With
        With .AddStep(2.40000, Null, Null)
            .Lights = Array( _
            "giapron|100|ededed", _
            "gi22|100|969696", _
            "gi20|100|0b0b0b", _
            "gi21|100|020202", _
            "gi19|100|1523cd", _
            "gi18|100|130844", _
            "gi14|100|dddfee", _
            "gi13|100|111aa1", _
            "gi12|100|2f12a8", _
            "gi10|100|5746a5", _
            "gi09|100|7c7fad", _
            "gi08|100|4e4d52", _
            "gi07|100|a2a2a2", _
            "gi06|100|202020", _
            "gi05|100|acacac", _
            "gi04|100|101a99", _
            "gi03|100|03051e", _
            "gi02|100|040522", _
            "LTW2|100|564894", _
            "LTW1|100|2f1499" _
            )
        End With
        With .AddStep(2.43333, Null, Null)
            .Lights = Array( _
            "giapron|100|f9f9f9", _
            "gi22|100|b7b7b7", _
            "gi20|100|050505", _
            "gi21|100|000000", _
            "gi19|100|1625da", _
            "gi18|100|1a0c5a", _
            "gi14|100|d1d4e6", _
            "gi13|100|0e1585", _
            "gi11|100|2e13a0", _
            "gi10|100|6556ab", _
            "gi09|100|6568a4", _
            "gi08|100|3b3a42", _
            "gi07|100|858585", _
            "gi06|100|141414", _
            "gi05|100|898989", _
            "gi04|100|0e1684", _
            "gi03|100|010311", _
            "gi02|100|010311", _
            "LTW2|100|483890", _
            "LTW1|100|2e139d" _
            )
        End With
        With .AddStep(2.46667, Null, Null)
            .Lights = Array( _
            "giapron|100|fefefe", _
            "gi22|100|d5d5d5", _
            "gi20|100|020204", _
            "gi19|100|1725df", _
            "gi18|100|200e73", _
            "gi14|100|bec1dd", _
            "gi13|100|0b126b", _
            "gi11|100|2c119b", _
            "gi10|100|7668b5", _
            "gi09|100|4e539b", _
            "gi08|100|2b2936", _
            "gi07|100|696969", _
            "gi06|100|0b0b0b", _
            "gi05|100|686868", _
            "gi04|100|0a1169", _
            "gi03|100|03040d", _
            "gi02|100|02020c", _
            "LTW2|100|402c8f", _
            "LTW1|100|2e13a0" _
            )
        End With
        With .AddStep(2.50000, Null, Null)
            .Lights = Array( _
            "giapron|100|ffffff", _
            "gi22|100|e8e8e8", _
            "gi20|100|010006", _
            "gi19|100|1825e3", _
            "gi18|100|260e85", _
            "gi14|100|aeaecf", _
            "gi13|100|090d54", _
            "gi11|100|2c1297", _
            "gi10|100|887cbc", _
            "gi09|100|3d429c", _
            "gi08|100|211e30", _
            "gi07|100|515151", _
            "gi06|100|050505", _
            "gi05|100|494949", _
            "gi04|100|080e52", _
            "gi03|100|06070c", _
            "gi02|100|000106", _
            "gi01|100|010101", _
            "LTW2|100|39238f", _
            "LTW1|100|2e13a2" _
            )
        End With
        With .AddStep(2.53333, Null, Null)
            .Lights = Array( _
            "gi22|100|f6f6f6", _
            "gi20|100|03020a", _
            "gi19|100|1726e5", _
            "gi18|100|2b1196", _
            "gi14|100|9699c5", _
            "gi13|100|090b42", _
            "gi11|100|2b1291", _
            "gi10|100|998fc6", _
            "gi09|100|2f379e", _
            "gi08|100|1a1630", _
            "gi07|100|3a3a3a", _
            "gi06|100|010101", _
            "gi05|100|323232", _
            "gi04|100|090c40", _
            "gi03|100|0b0b0d", _
            "gi02|100|010102", _
            "gi01|100|050505", _
            "LTW2|100|331c90", _
            "LTW1|100|2e12a5" _
            )
        End With
        With .AddStep(2.56667, Null, Null)
            .Lights = Array( _
            "gi22|100|fcfcfc", _
            "gi20|100|040210", _
            "gi19|100|1826e7", _
            "gi18|100|2d129f", _
            "gi15|100|1726e5", _
            "gi14|100|7f83ba", _
            "gi13|100|080d35", _
            "gi11|100|2a1385", _
            "gi10|100|aba1d2", _
            "gi09|100|262da5", _
            "gi08|100|161032", _
            "gi07|100|29292b", _
            "gi05|100|202020", _
            "gi04|100|080b2f", _
            "gi03|100|101012", _
            "gi02|100|000000", _
            "gi01|100|0b0b0b", _
            "LTW2|100|311994", _
            "LTW1|100|2f13a6" _
            )
        End With
        With .AddStep(2.60000, Null, Null)
            .Lights = Array( _
            "gi22|100|fefefe", _
            "gi20|100|060219", _
            "gi18|100|2f13a5", _
            "gi15|100|1725e0", _
            "gi14|100|686eb0", _
            "gi13|100|0c0d2a", _
            "gi11|100|2a187f", _
            "gi10|100|bbb3db", _
            "gi09|100|1e27af", _
            "gi08|100|160c3e", _
            "gi07|100|1c1b20", _
            "gi06|100|010103", _
            "gi05|100|121212", _
            "gi04|100|0a0b26", _
            "gi03|100|1b1b1b", _
            "gi01|100|141414", _
            "LTW2|100|2f1699" _
            )
        End With
        With .AddStep(2.63333, Null, Null)
            .Lights = Array( _
            "giapron|100|fefefe", _
            "gi22|100|ffffff", _
            "gi20|100|0c0527", _
            "gi21|100|010103", _
            "gi18|100|2f13a6", _
            "gi15|100|1624db", _
            "gi14|100|545aaa", _
            "gi13|100|0f0f22", _
            "gi11|100|2e1e77", _
            "gi10|100|c9c2e4", _
            "gi09|100|1a24bb", _
            "gi08|100|160b48", _
            "gi07|100|131217", _
            "gi05|100|0a0a0a", _
            "gi04|100|0e1122", _
            "gi03|100|272727", _
            "gi01|100|222222", _
            "LTW2|100|2e139d" _
            )
        End With
        With .AddStep(2.66667, Null, Null)
            .Lights = Array( _
            "giapron|100|fafafa", _
            "gi20|100|0f0636", _
            "gi18|100|2f12a8", _
            "gi15|100|1521ce", _
            "gi14|100|444aa7", _
            "gi13|100|131522", _
            "gi12|100|2f13a6", _
            "gi11|100|342576", _
            "gi10|100|d4cfea", _
            "gi09|100|1725c7", _
            "gi08|100|190b58", _
            "gi07|100|0d0c12", _
            "gi06|100|03010b", _
            "gi05|100|040404", _
            "gi04|100|151421", _
            "gi03|100|3b3b3b", _
            "gi02|100|010101", _
            "gi01|100|373737", _
            "LTW2|100|2e13a1", _
            "LTW1|100|2f12a8" _
            )
        End With
        With .AddStep(2.70000, Null, Null)
            .Lights = Array( _
            "gi17|100|010101", _
            "giapron|100|eeeeee", _
            "gi20|100|15094b", _
            "gi21|100|020109", _
            "gi15|100|141fbd", _
            "gi14|100|353ca6", _
            "gi13|100|1f1f29", _
            "gi11|100|3e3273", _
            "gi10|100|dddaef", _
            "gi09|100|1724d3", _
            "gi08|100|1c0c66", _
            "gi07|100|090712", _
            "gi06|100|04020f", _
            "gi05|100|010101", _
            "gi04|100|1c1c24", _
            "gi03|100|4f4f4f", _
            "gi02|100|070707", _
            "gi01|100|515151", _
            "LTW2|100|2f13a5" _
            )
        End With
        With .AddStep(2.73333, Null, Null)
            .Lights = Array( _
            "gi17|100|020202", _
            "giapron|100|d1d1d1", _
            "gi20|100|190a5f", _
            "gi21|100|04020f", _
            "gi15|100|121ba7", _
            "gi14|100|2a33aa", _
            "gi13|100|2c2d31", _
            "gi12|100|2e12a3", _
            "gi11|100|4d4378", _
            "gi10|100|e4e1f2", _
            "gi09|100|1824d8", _
            "gi08|100|210e77", _
            "gi07|100|080516", _
            "gi06|100|060219", _
            "gi04|100|2a292e", _
            "gi03|100|6a6a6a", _
            "gi02|100|0c0c0c", _
            "gi01|100|707070", _
            "LTW2|100|2f13a6" _
            )
        End With
        With .AddStep(2.76667, Null, Null)
            .Lights = Array( _
            "gi17|100|080808", _
            "giapron|100|a5a5a5", _
            "gi20|100|220d75", _
            "gi21|100|060319", _
            "gi15|100|0e178e", _
            "gi14|100|232cb5", _
            "gi13|100|3e3e40", _
            "gi12|100|2c119c", _
            "gi11|100|615883", _
            "gi10|100|eae8f6", _
            "gi09|100|1825de", _
            "gi08|100|270f86", _
            "gi07|100|09051e", _
            "gi06|100|0a0524", _
            "gi05|100|000000", _
            "gi04|100|3a3a39", _
            "gi03|100|878787", _
            "gi02|100|151515", _
            "gi01|100|959595" _
            )
        End With
        With .AddStep(2.80000, Null, Null)
            .Lights = Array( _
            "gi17|100|121212", _
            "giapron|100|717171", _
            "gi20|100|260e87", _
            "gi21|100|0c052c", _
            "gi16|100|010005", _
            "gi15|100|0c1271", _
            "gi14|100|1d27bc", _
            "gi13|100|515152", _
            "gi12|100|2b1198", _
            "gi11|100|766e92", _
            "gi10|100|eeecf7", _
            "gi09|100|1825e3", _
            "gi08|100|291091", _
            "gi07|100|0c042a", _
            "gi06|100|0f0537", _
            "gi05|100|010103", _
            "gi04|100|4c4c4c", _
            "gi03|100|a3a3a3", _
            "gi02|100|252525", _
            "gi01|100|b6b6b6" _
            )
        End With
        With .AddStep(2.83333, Null, Null)
            .Lights = Array( _
            "gi17|100|282828", _
            "giapron|100|454545", _
            "gi20|100|2a1095", _
            "gi21|100|130841", _
            "gi16|100|03010c", _
            "gi15|100|090d54", _
            "gi14|100|1925c5", _
            "gi13|100|6b6b6b", _
            "gi12|100|28108a", _
            "gi11|100|8c88a0", _
            "gi10|100|f3f2fa", _
            "gi09|100|1726e5", _
            "gi08|100|2c119b", _
            "gi07|100|100639", _
            "gi06|100|15094b", _
            "gi05|100|010008", _
            "gi04|100|636363", _
            "gi03|100|bfbfbf", _
            "gi02|100|383838", _
            "gi01|100|d3d3d3", _
            "LTW2|100|2f12a8" _
            )
        End With
        With .AddStep(2.86667, Null, Null)
            .Lights = Array( _
            "gi17|100|4a4a4a", _
            "giapron|100|232323", _
            "gi22|100|fdfdfd", _
            "gi20|100|2d129f", _
            "gi21|100|190a5c", _
            "gi16|100|07031a", _
            "gi15|100|060a3d", _
            "gi14|100|1725ce", _
            "gi13|100|858585", _
            "gi12|100|240e7e", _
            "gi11|100|a3a0b4", _
            "gi10|100|f6f5fd", _
            "gi09|100|1827e6", _
            "gi08|100|2e13a2", _
            "gi07|100|14084a", _
            "gi06|100|1b0c61", _
            "gi05|100|020109", _
            "gi04|100|7c7c7c", _
            "gi03|100|d6d6d6", _
            "gi02|100|525252", _
            "gi01|100|e9e9e9" _
            )
        End With
        With .AddStep(2.90000, Null, Null)
            .Lights = Array( _
            "gi17|100|797979", _
            "giapron|100|101010", _
            "gi22|100|f9f9f9", _
            "gi20|100|2e13a2", _
            "gi21|100|210c75", _
            "gi19|100|1827e6", _
            "gi18|100|2f13a6", _
            "gi16|100|0e0531", _
            "gi15|100|05062c", _
            "gi14|100|1825d5", _
            "gi13|100|a0a0a0", _
            "gi12|100|1d0c6d", _
            "gi11|100|bbb9c7", _
            "gi10|100|f8f7fe", _
            "gi08|100|2f13a6", _
            "gi07|100|1a0b5e", _
            "gi06|100|210e7a", _
            "gi05|100|040210", _
            "gi04|100|979797", _
            "gi03|100|e7e7e7", _
            "gi02|100|717171", _
            "gi01|100|f6f6f6" _
            )
        End With
        With .AddStep(2.93333, Null, Null)
            .Lights = Array( _
            "gi17|100|ababab", _
            "giapron|100|070707", _
            "gi22|100|f0f0f0", _
            "gi20|100|2f13a6", _
            "gi21|100|270f8b", _
            "gi18|100|2f13a4", _
            "gi16|100|170a50", _
            "gi15|100|03051d", _
            "gi14|100|1724dd", _
            "gi13|100|b8b8b8", _
            "gi12|100|190b5a", _
            "gi11|100|cdcbd8", _
            "gi10|100|faf9fe", _
            "gi09|100|1826e7", _
            "gi07|100|1f0d71", _
            "gi06|100|270f89", _
            "gi05|100|060318", _
            "gi04|100|b0b0b0", _
            "gi03|100|f3f3f3", _
            "gi02|100|949494", _
            "gi01|100|fbfbfb" _
            )
        End With
        With .AddStep(2.96667, Null, Null)
            .Lights = Array( _
            "gi17|100|d6d6d6", _
            "giapron|100|010101", _
            "gi22|100|dfdfdf", _
            "gi21|100|2c129a", _
            "gi19|100|1926e6", _
            "gi18|100|2e13a2", _
            "gi16|100|210c75", _
            "gi15|100|020315", _
            "gi14|100|1725e0", _
            "gi13|100|cfcfcf", _
            "gi12|100|160a4b", _
            "gi11|100|dddce4", _
            "gi10|100|fcfbff", _
            "gi08|100|2f12a8", _
            "gi07|100|240e84", _
            "gi06|100|2b119a", _
            "gi05|100|0b0428", _
            "gi04|100|c8c8c8", _
            "gi03|100|f9f9f9", _
            "gi02|100|b6b6b6", _
            "gi01|100|fefefe" _
            )
        End With
        With .AddStep(3.00000, Null, Null)
            .Lights = Array( _
            "gi17|100|f0f0f0", _
            "giapron|100|000000", _
            "gi22|100|c5c5c5", _
            "gi20|100|2f12a8", _
            "gi21|100|2e12a3", _
            "gi19|100|1725df", _
            "gi18|100|2c119a", _
            "gi16|100|280f8f", _
            "gi15|100|04040e", _
            "gi14|100|1825e3", _
            "gi13|100|e1e1e1", _
            "gi12|100|13093d", _
            "gi11|100|eae9ef", _
            "gi10|100|fcfbfe", _
            "gi07|100|28108e", _
            "gi06|100|2e13a0", _
            "gi05|100|10063a", _
            "gi04|100|dbdbdb", _
            "gi03|100|fefefe", _
            "gi02|100|d2d2d2", _
            "gi01|100|ffffff" _
            )
        End With
        With .AddStep(3.03333, Null, Null)
            .Lights = Array( _
            "gi17|100|fbfbfb", _
            "gi22|100|a6a6a6", _
            "gi21|100|2f13a6", _
            "gi19|100|1824dc", _
            "gi18|100|29108f", _
            "gi16|100|2d129f", _
            "gi15|100|07070f", _
            "gi14|100|1827e6", _
            "gi13|100|eeeeee", _
            "gi12|100|130b31", _
            "gi11|100|f2f1f7", _
            "gi07|100|2c119c", _
            "gi06|100|2f13a6", _
            "gi05|100|170a50", _
            "gi04|100|e9e9e9", _
            "gi02|100|e8e8e8", _
            "LTW1|100|2f13a6" _
            )
        End With
        With .AddStep(3.06667, Null, Null)
            .Lights = Array( _
            "gi17|100|fefefe", _
            "gi22|100|828282", _
            "gi19|100|1722d2", _
            "gi18|100|240e7e", _
            "gi16|100|2f13a6", _
            "gi15|100|0c0c10", _
            "gi13|100|f7f7f7", _
            "gi12|100|17122e", _
            "gi11|100|f8f7fc", _
            "gi10|100|fbfcfe", _
            "gi07|100|2d129f", _
            "gi05|100|1c0b67", _
            "gi04|100|f4f4f4", _
            "gi03|100|ffffff", _
            "gi02|100|f5f5f5" _
            )
        End With
        With .AddStep(3.10000, Null, Null)
            .Lights = Array( _
            "gi17|100|ffffff", _
            "gi22|100|616161", _
            "gi21|100|2f12a8", _
            "gi19|100|1421c7", _
            "gi18|100|1e0c66", _
            "gi16|100|2f12a8", _
            "gi15|100|141414", _
            "gi14|100|1826e7", _
            "gi13|100|fbfbfb", _
            "gi12|100|1c192a", _
            "gi11|100|fcfbfd", _
            "gi10|100|fafbfe", _
            "gi07|100|2f13a6", _
            "gi06|100|2f12a8", _
            "gi05|100|230f7f", _
            "gi04|100|fafafa", _
            "gi02|100|fbfbfb" _
            )
        End With
        With .AddStep(3.13333, Null, Null)
            .Lights = Array( _
            "gi22|100|434343", _
            "gi19|100|141eb8", _
            "gi18|100|170953", _
            "gi15|100|1f1f1f", _
            "gi13|100|fdfdfd", _
            "gi12|100|262432", _
            "gi11|100|fefefe", _
            "gi10|100|f9faff", _
            "gi05|100|280f8e", _
            "gi04|100|fdfdfd", _
            "gi02|100|fdfdfd", _
            "LTW1|100|2e12a4" _
            )
        End With
        With .AddStep(3.16667, Null, Null)
            .Lights = Array( _
            "gi22|100|2b2b2b", _
            "gi19|100|131da8", _
            "gi18|100|0f053a", _
            "gi15|100|2e2e2e", _
            "gi13|100|ffffff", _
            "gi12|100|37363d", _
            "gi11|100|ffffff", _
            "gi10|100|f6f7fe", _
            "gi05|100|2d119d", _
            "gi04|100|fefefe", _
            "gi02|100|ffffff", _
            "LTW1|100|2e13a1" _
            )
        End With
        With .AddStep(3.20000, Null, Null)
            .Lights = Array( _
            "gi22|100|1c1c1c", _
            "gi19|100|121c96", _
            "gi18|100|0b0529", _
            "gi15|100|404040", _
            "gi12|100|4a494f", _
            "gi10|100|f3f4fe", _
            "gi07|100|2f12a8", _
            "gi05|100|2e12a3", _
            "gi04|100|ffffff", _
            "LTW1|100|2e139e" _
            )
        End With
        With .AddStep(3.23333, Null, Null)
            .Lights = Array( _
            "gi17|100|fefefe", _
            "gi22|100|0f0f0f", _
            "gi20|100|2f13a6", _
            "gi19|100|121a82", _
            "gi18|100|07031a", _
            "gi15|100|595959", _
            "gi12|100|616065", _
            "gi10|100|edeffc", _
            "gi05|100|2f13a6", _
            "gi01|100|fdfdfd", _
            "LTW1|100|2f159c" _
            )
        End With
        With .AddStep(3.26667, Null, Null)
            .Lights = Array( _
            "gi17|100|fafafa", _
            "gi22|100|090909", _
            "gi20|100|2f13a7", _
            "gi21|100|2f13a6", _
            "gi19|100|161c72", _
            "gi18|100|050212", _
            "gi16|100|2f13a4", _
            "gi15|100|747474", _
            "gi12|100|7e7d80", _
            "gi10|100|eaecfb", _
            "gi09|100|1827e6", _
            "gi01|100|f9f9f9", _
            "LTW2|100|2f13a6", _
            "LTW1|100|331a9a" _
            )
        End With
        With .AddStep(3.30000, Null, Null)
            .Lights = Array( _
            "gi17|100|ebebeb", _
            "gi22|100|030303", _
            "gi20|100|2d12a1", _
            "gi21|100|2f13a4", _
            "gi19|100|1a2067", _
            "gi18|100|03020a", _
            "gi16|100|2d12a1", _
            "gi15|100|929292", _
            "gi12|100|9b9b9b", _
            "gi10|100|e2e4f8", _
            "gi08|100|2f13a6", _
            "gi05|100|2f12a8", _
            "gi01|100|ededed", _
            "LTW1|100|341c94" _
            )
        End With
        With .AddStep(3.33333, Null, Null)
            .Lights = Array( _
            "gi17|100|cccccc", _
            "gi22|100|000000", _
            "gi20|100|2c129a", _
            "gi21|100|2d12a0", _
            "gi19|100|22255c", _
            "gi18|100|010004", _
            "gi16|100|2a1193", _
            "gi15|100|afafaf", _
            "gi12|100|b7b7b7", _
            "gi10|100|dcddfa", _
            "gi09|100|1825e3", _
            "gi06|100|2f13a6", _
            "gi03|100|fdfdfd", _
            "gi01|100|dcdcdc", _
            "LTW1|100|3a2493" _
            )
        End With
        With .AddStep(3.36667, Null, Null)
            .Lights = Array( _
            "gi17|100|9e9e9e", _
            "gi20|100|29108f", _
            "gi21|100|2b1199", _
            "gi19|100|2d3058", _
            "gi18|100|000004", _
            "gi16|100|240e7d", _
            "gi15|100|c9c9c9", _
            "gi12|100|cecece", _
            "gi10|100|d1d2f1", _
            "gi09|100|1725df", _
            "gi08|100|2f13a5", _
            "gi03|100|fbfbfb", _
            "gi01|100|c1c1c1", _
            "LTW2|100|2f13a5", _
            "LTW1|100|412f93" _
            )
        End With
        With .AddStep(3.40000, Null, Null)
            .Lights = Array( _
            "gi17|100|6c6c6c", _
            "gi20|100|240e7e", _
            "gi21|100|270f87", _
            "gi19|100|3b3c5c", _
            "gi18|100|030303", _
            "gi16|100|190a5c", _
            "gi15|100|dedede", _
            "gi12|100|e2e2e2", _
            "gi10|100|c5c7ee", _
            "gi09|100|1824da", _
            "gi08|100|2e13a0", _
            "gi06|100|2e13a0", _
            "gi03|100|f5f5f5", _
            "gi02|100|fdfdfd", _
            "gi01|100|9f9f9f", _
            "LTW2|100|2f14a1", _
            "LTW1|100|4d3d95" _
            )
        End With
        With .AddStep(3.43333, Null, Null)
            .Lights = Array( _
            "gi17|100|414141", _
            "gi22|100|010103", _
            "gi20|100|1e0d6d", _
            "gi21|100|1f0c70", _
            "gi19|100|4c4d62", _
            "gi18|100|070707", _
            "gi16|100|10063a", _
            "gi15|100|eeeeee", _
            "gi12|100|efefef", _
            "gi10|100|b7b9ea", _
            "gi09|100|1623d3", _
            "gi08|100|2c1299", _
            "gi06|100|2b1199", _
            "gi03|100|eaeaea", _
            "gi02|100|fafafa", _
            "gi01|100|7c7c7c", _
            "LTW2|100|30169e", _
            "LTW1|100|5d4f9e" _
            )
        End With
        With .AddStep(3.46667, Null, Null)
            .Lights = Array( _
            "gi17|100|212121", _
            "giapron|100|010005", _
            "gi20|100|180a57", _
            "gi21|100|170a52", _
            "gi19|100|5e606f", _
            "gi18|100|111111", _
            "gi16|100|09051f", _
            "gi15|100|f7f7f7", _
            "gi13|100|fefefe", _
            "gi12|100|f7f7f7", _
            "gi10|100|a5a7e2", _
            "gi09|100|1622c9", _
            "gi08|100|291090", _
            "gi07|100|2f13a6", _
            "gi06|100|270f88", _
            "gi03|100|dbdbdb", _
            "gi02|100|f2f2f2", _
            "gi01|100|5a5a5a", _
            "LTW2|100|31179e", _
            "LTW1|100|6e61a4" _
            )
        End With
        With .AddStep(3.50000, Null, Null)
            .Lights = Array( _
            "gi17|100|0f0f0f", _
            "giapron|100|03010c", _
            "gi22|100|010005", _
            "gi20|100|12073f", _
            "gi21|100|10063b", _
            "gi19|100|787884", _
            "gi18|100|1b1b1b", _
            "gi16|100|050310", _
            "gi15|100|fcfcfc", _
            "gi14|100|1827e6", _
            "gi13|100|fcfcfc", _
            "gi12|100|fcfcfc", _
            "gi11|100|fdfdfe", _
            "gi10|100|9297da", _
            "gi09|100|1621bb", _
            "gi08|100|260f84", _
            "gi06|100|200e75", _
            "gi04|100|fefefe", _
            "gi03|100|c5c5c5", _
            "gi02|100|e3e3e3", _
            "gi01|100|3d3d3d", _
            "LTW2|100|341b99", _
            "LTW1|100|8378b0" _
            )
        End With
        With .AddStep(3.53333, Null, Null)
            .Lights = Array( _
            "gi17|100|050505", _
            "giapron|100|060318", _
            "gi22|100|03020a", _
            "gi20|100|0e052f", _
            "gi21|100|0b0426", _
            "gi19|100|8e8e96", _
            "gi18|100|2c2c2c", _
            "gi16|100|010006", _
            "gi15|100|fdfdfd", _
            "gi14|100|1726e5", _
            "gi13|100|f9f9f9", _
            "gi12|100|fefefe", _
            "gi11|100|fafbfd", _
            "gi10|100|7e84d3", _
            "gi09|100|1820ad", _
            "gi08|100|220d74", _
            "gi07|100|2d12a2", _
            "gi06|100|1a0b5f", _
            "gi05|100|2f13a6", _
            "gi04|100|fcfcfc", _
            "gi03|100|acacac", _
            "gi02|100|cdcdcd", _
            "gi01|100|272727", _
            "LTW2|100|382196", _
            "LTW1|100|968dbc" _
            )
        End With
        With .AddStep(3.56667, Null, Null)
            .Lights = Array( _
            "gi17|100|010101", _
            "giapron|100|0d052f", _
            "gi22|100|060315", _
            "gi20|100|090520", _
            "gi21|100|060317", _
            "gi19|100|a6a7ac", _
            "gi18|100|444444", _
            "gi16|100|010103", _
            "gi15|100|ffffff", _
            "gi13|100|f4f4f4", _
            "gi12|100|ffffff", _
            "gi11|100|f6f7fa", _
            "gi10|100|6b71cf", _
            "gi09|100|17219e", _
            "gi08|100|1e0c64", _
            "gi07|100|2c119c", _
            "gi06|100|140949", _
            "gi05|100|2e13a2", _
            "gi04|100|f8f8f8", _
            "gi03|100|8e8e8e", _
            "gi02|100|aeaeae", _
            "gi01|100|171717", _
            "LTW2|100|3f2b98", _
            "LTW1|100|aaa2ca" _
            )
        End With
        With .AddStep(3.60000, Null, Null)
            .Lights = Array( _
            "gi17|100|000000", _
            "giapron|100|15094c", _
            "gi22|100|080321", _
            "gi20|100|050216", _
            "gi21|100|04020e", _
            "gi19|100|bdbdbd", _
            "gi18|100|636363", _
            "gi16|100|000000", _
            "gi14|100|1924e0", _
            "gi13|100|e8e8e8", _
            "gi11|100|f0f1f6", _
            "gi10|100|585fc9", _
            "gi09|100|1b2391", _
            "gi08|100|1a0c57", _
            "gi07|100|28108c", _
            "gi06|100|0e0535", _
            "gi05|100|2c129a", _
            "gi04|100|f0f0f0", _
            "gi03|100|707070", _
            "gi02|100|8a8a8a", _
            "gi01|100|0d0d0d", _
            "LTW2|100|49379a", _
            "LTW1|100|bdb6d6" _
            )
        End With
        With .AddStep(3.63333, Null, Null)
            .Lights = Array( _
            "giapron|100|1f0d6f", _
            "gi22|100|0e0530", _
            "gi20|100|04020d", _
            "gi21|100|010006", _
            "gi19|100|d1d1d1", _
            "gi18|100|848484", _
            "gi14|100|1924de", _
            "gi13|100|dadada", _
            "gi11|100|e8e8f1", _
            "gi10|100|4750c5", _
            "gi09|100|212785", _
            "gi08|100|180d47", _
            "gi07|100|230f80", _
            "gi06|100|0a0425", _
            "gi05|100|28108a", _
            "gi04|100|e3e3e3", _
            "gi03|100|555555", _
            "gi02|100|686868", _
            "gi01|100|060606", _
            "LTW2|100|57479f", _
            "LTW1|100|ccc8e1" _
            )
        End With
        With .AddStep(3.66667, Null, Null)
            .Lights = Array( _
            "giapron|100|28108c", _
            "gi22|100|140945", _
            "gi20|100|04030b", _
            "gi21|100|000004", _
            "gi19|100|e2e2e2", _
            "gi18|100|a9a9a9", _
            "gi14|100|1925d9", _
            "gi13|100|c5c5c5", _
            "gi11|100|d8dae6", _
            "gi10|100|3b43c6", _
            "gi09|100|272d79", _
            "gi08|100|19103f", _
            "gi07|100|1e0c70", _
            "gi06|100|060317", _
            "gi05|100|210e78", _
            "gi04|100|d2d2d2", _
            "gi03|100|3e3e3e", _
            "gi02|100|494949", _
            "gi01|100|020202", _
            "LTW2|100|675aa5", _
            "LTW1|100|d9d6e9" _
            )
        End With
        With .AddStep(3.70000, Null, Null)
            .Lights = Array( _
            "giapron|100|2d129f", _
            "gi22|100|1a0b60", _
            "gi20|100|060609", _
            "gi21|100|010103", _
            "gi19|100|ededed", _
            "gi18|100|c9c9c9", _
            "gi14|100|1925d0", _
            "gi13|100|aeaeae", _
            "gi11|100|c8cad9", _
            "gi10|100|2e38c6", _
            "gi09|100|333876", _
            "gi08|100|1d1639", _
            "gi07|100|190b59", _
            "gi06|100|04020f", _
            "gi05|100|1a0b61", _
            "gi04|100|bfbfbf", _
            "gi03|100|2a2a2a", _
            "gi02|100|323232", _
            "gi01|100|010101", _
            "LTW2|100|7b6eb1", _
            "LTW1|100|e4e1f2" _
            )
        End With
        With .AddStep(3.73333, Null, Null)
            .Lights = Array( _
            "giapron|100|2f13a6", _
            "gi22|100|210c76", _
            "gi20|100|0c0b10", _
            "gi21|100|000000", _
            "gi19|100|f5f5f5", _
            "gi18|100|e1e1e1", _
            "gi14|100|1b27c9", _
            "gi13|100|939393", _
            "gi11|100|b4b6cc", _
            "gi10|100|2631ca", _
            "gi09|100|424578", _
            "gi08|100|231f3a", _
            "gi07|100|140846", _
            "gi06|100|02000b", _
            "gi05|100|140849", _
            "gi04|100|a5a5a5", _
            "gi03|100|1c1c1c", _
            "gi02|100|202020", _
            "gi01|100|000000", _
            "LTW2|100|8e83ba", _
            "LTW1|100|ebe9f6" _
            )
        End With
        With .AddStep(3.76667, Null, Null)
            .Lights = Array( _
            "giapron|100|2f12a8", _
            "gi22|100|270f89", _
            "gi20|100|151515", _
            "gi19|100|f9f9f9", _
            "gi18|100|f1f1f1", _
            "gi14|100|1f2ac1", _
            "gi13|100|797979", _
            "gi11|100|9fa0bf", _
            "gi10|100|212dd1", _
            "gi09|100|54567d", _
            "gi08|100|2e2b3c", _
            "gi07|100|0f0538", _
            "gi06|100|010005", _
            "gi05|100|0e0535", _
            "gi04|100|8b8b8b", _
            "gi03|100|141416", _
            "gi02|100|131313", _
            "LTW2|100|a198c8", _
            "LTW1|100|f3f1f8" _
            )
        End With
        With .AddStep(3.80000, Null, Null)
            .Lights = Array( _
            "gi22|100|2c1299", _
            "gi20|100|232323", _
            "gi19|100|fdfdfd", _
            "gi18|100|f9f9f9", _
            "gi14|100|232db9", _
            "gi13|100|5f5f5f", _
            "gi11|100|8387ae", _
            "gi10|100|1c2ad4", _
            "gi09|100|676887", _
            "gi08|100|3d3b48", _
            "gi07|100|0b0327", _
            "gi06|100|000002", _
            "gi05|100|0a0523", _
            "gi04|100|707070", _
            "gi03|100|0d0c11", _
            "gi02|100|0a0a0a", _
            "LTW2|100|b4acd4", _
            "LTW1|100|f5f4fa" _
            )
        End With
        With .AddStep(3.83333, Null, Null)
            .Lights = Array( _
            "gi22|100|2d12a1", _
            "gi20|100|353535", _
            "gi18|100|fdfdfd", _
            "gi15|100|fefefe", _
            "gi14|100|2b33b4", _
            "gi13|100|474747", _
            "gi12|100|fefefe", _
            "gi11|100|6d70a3", _
            "gi10|100|1927d9", _
            "gi09|100|7c7d94", _
            "gi08|100|504f57", _
            "gi07|100|09061d", _
            "gi06|100|020202", _
            "gi05|100|060316", _
            "gi04|100|575757", _
            "gi03|100|08070c", _
            "gi02|100|040404", _
            "gi01|100|010005", _
            "LTW2|100|c3bde0", _
            "LTW1|100|f8f7fc" _
            )
        End With
        With .AddStep(3.86667, Null, Null)
            .Lights = Array( _
            "gi22|100|2f13a6", _
            "gi20|100|4e4e4e", _
            "gi21|100|040404", _
            "gi19|100|ffffff", _
            "gi18|100|ffffff", _
            "gi15|100|fcfcfc", _
            "gi14|100|353eae", _
            "gi13|100|363636", _
            "gi11|100|56599a", _
            "gi10|100|1826de", _
            "gi09|100|9395a4", _
            "gi08|100|68676c", _
            "gi07|100|0b0819", _
            "gi06|100|070707", _
            "gi05|100|04020e", _
            "gi04|100|424242", _
            "gi03|100|05030d", _
            "gi02|100|010101", _
            "gi01|100|020109", _
            "LTW2|100|d2cee8", _
            "LTW1|100|faf9fe" _
            )
        End With
        With .AddStep(3.90000, Null, Null)
            .Lights = Array( _
            "gi20|100|6b6b6b", _
            "gi21|100|080808", _
            "gi15|100|f8f8f8", _
            "gi14|100|424aab", _
            "gi13|100|28272b", _
            "gi12|100|fbfbfb", _
            "gi11|100|424895", _
            "gi10|100|1826e1", _
            "gi09|100|a9aab7", _
            "gi08|100|828186", _
            "gi07|100|0e0c17", _
            "gi06|100|0e0e0e", _
            "gi05|100|010006", _
            "gi04|100|323232", _
            "gi03|100|040210", _
            "gi01|100|04020d", _
            "LTW2|100|dcd9ec", _
            "LTW1|100|fcfbff" _
            )
        End With
        With .AddStep(3.93333, Null, Null)
            .Lights = Array( _
            "giapron|100|2f13a6", _
            "gi22|100|2f12a8", _
            "gi20|100|8d8d8d", _
            "gi21|100|141414", _
            "gi15|100|efefef", _
            "gi14|100|535aab", _
            "gi13|100|1b1a1f", _
            "gi12|100|f5f5f5", _
            "gi11|100|333999", _
            "gi10|100|1726e3", _
            "gi09|100|bebec8", _
            "gi08|100|9d9d9f", _
            "gi07|100|141319", _
            "gi06|100|191919", _
            "gi05|100|000004", _
            "gi04|100|232228", _
            "gi03|100|060318", _
            "gi02|100|000000", _
            "gi01|100|050214", _
            "LTW2|100|e4e1f1", _
            "LTW1|100|fefeff" _
            )
        End With
        With .AddStep(3.96667, Null, Null)
            .Lights = Array( _
            "giapron|100|2d12a1", _
            "gi20|100|aeaeae", _
            "gi21|100|232323", _
            "gi16|100|010101", _
            "gi15|100|e2e2e2", _
            "gi14|100|666ab0", _
            "gi13|100|14131b", _
            "gi12|100|ebebeb", _
            "gi11|100|272f9f", _
            "gi09|100|d0d1d5", _
            "gi08|100|b8b8b8", _
            "gi07|100|1f1e22", _
            "gi06|100|292929", _
            "gi05|100|010103", _
            "gi04|100|191722", _
            "gi03|100|0b0426", _
            "gi02|100|010103", _
            "gi01|100|0a0524", _
            "LTW2|100|ebe9f5", _
            "LTW1|100|ffffff" _
            )
        End With
        With .AddStep(4.00000, Null, Null)
            .Lights = Array( _
            "giapron|100|2a1095", _
            "gi20|100|cbcbcb", _
            "gi21|100|3b3b3b", _
            "gi16|100|040404", _
            "gi15|100|cfcfcf", _
            "gi14|100|7a7fb8", _
            "gi13|100|0f0d1b", _
            "gi12|100|dcdcdc", _
            "gi11|100|2028a8", _
            "gi10|100|1827e6", _
            "gi09|100|dfe0e2", _
            "gi08|100|cecece", _
            "gi07|100|2e2e2e", _
            "gi06|100|3f3f3f", _
            "gi05|100|000000", _
            "gi04|100|120f20", _
            "gi03|100|0f0635", _
            "gi02|100|000004", _
            "gi01|100|0e0535", _
            "LTW2|100|f0eff7" _
            )
        End With
        With .AddStep(4.03333, Null, Null)
            .Lights = Array( _
            "gi17|100|010103", _
            "giapron|100|220f7a", _
            "gi20|100|e1e1e1", _
            "gi21|100|5d5d5d", _
            "gi16|100|0f0f0f", _
            "gi15|100|b6b6b6", _
            "gi14|100|9093c2", _
            "gi13|100|0b081d", _
            "gi12|100|c9c9c9", _
            "gi11|100|1c25b4", _
            "gi10|100|1826e7", _
            "gi09|100|e9eaec", _
            "gi08|100|e0e0e0", _
            "gi07|100|414141", _
            "gi06|100|5a5a5a", _
            "gi05|100|030303", _
            "gi04|100|0f0c21", _
            "gi03|100|130745", _
            "gi02|100|020109", _
            "gi01|100|15084d", _
            "LTW2|100|f5f4f9" _
            )
        End With
        With .AddStep(4.06667, Null, Null)
            .Lights = Array( _
            "giapron|100|190a5b", _
            "gi20|100|f0f0f0", _
            "gi21|100|858585", _
            "gi16|100|212121", _
            "gi15|100|999999", _
            "gi14|100|a5a8ce", _
            "gi13|100|0d0727", _
            "gi12|100|b0b0b0", _
            "gi11|100|1823c0", _
            "gi09|100|f3f3f5", _
            "gi08|100|ededed", _
            "gi07|100|5a5a5a", _
            "gi06|100|7c7c7c", _
            "gi05|100|060606", _
            "gi04|100|0e0929", _
            "gi03|100|190b57", _
            "gi02|100|04020f", _
            "gi01|100|1c0c64", _
            "LTW2|100|f7f6fb", _
            "LTW1|100|fdfdff" _
            )
        End With
        With .AddStep(4.10000, Null, Null)
            .Lights = Array( _
            "gi17|100|03020a", _
            "giapron|100|100639", _
            "gi20|100|f9f9f9", _
            "gi21|100|adadad", _
            "gi18|100|fdfdfd", _
            "gi16|100|444444", _
            "gi15|100|7b7b7b", _
            "gi14|100|b9b9da", _
            "gi13|100|0e0530", _
            "gi12|100|959595", _
            "gi11|100|1624cb", _
            "gi09|100|f8f8f8", _
            "gi08|100|f6f6f6", _
            "gi07|100|767676", _
            "gi06|100|9f9f9f", _
            "gi05|100|0e0e0e", _
            "gi04|100|0f0833", _
            "gi03|100|1e0d6e", _
            "gi02|100|060316", _
            "gi01|100|220e7d", _
            "LTW2|100|faf9fe", _
            "LTW1|100|fcfcfe" _
            )
        End With
        With .AddStep(4.13333, Null, Null)
            .Lights = Array( _
            "gi17|100|060316", _
            "giapron|100|08041f", _
            "gi20|100|fdfdfd", _
            "gi21|100|d1d1d1", _
            "gi18|100|fbfbfb", _
            "gi16|100|737373", _
            "gi15|100|606060", _
            "gi14|100|c9cbe2", _
            "gi13|100|120740", _
            "gi12|100|76777b", _
            "gi11|100|1724d5", _
            "gi09|100|fcfcfc", _
            "gi08|100|fbfbfb", _
            "gi07|100|939393", _
            "gi06|100|c2c2c2", _
            "gi05|100|191919", _
            "gi04|100|120740", _
            "gi03|100|250f82", _
            "gi02|100|0a0325", _
            "gi01|100|28108c", _
            "LTW2|100|fcfcfe", _
            "LTW1|100|f9faff" _
            )
        End With
        With .AddStep(4.16667, Null, Null)
            .Lights = Array( _
            "gi17|100|0d052e", _
            "giapron|100|050311", _
            "gi22|100|2f13a4", _
            "gi20|100|ffffff", _
            "gi21|100|e9e9e9", _
            "gi18|100|f4f4f4", _
            "gi16|100|a9a9a9", _
            "gi15|100|454545", _
            "gi14|100|d7d8ea", _
            "gi13|100|170952", _
            "gi12|100|5b5c61", _
            "gi11|100|1824da", _
            "gi09|100|fdfdfd", _
            "gi08|100|fefefe", _
            "gi07|100|b1b1b1", _
            "gi06|100|dcdcdc", _
            "gi05|100|2b2b2b", _
            "gi04|100|170953", _
            "gi03|100|28108e", _
            "gi02|100|0f0536", _
            "gi01|100|2c119e", _
            "LTW2|100|fdfdff", _
            "LTW1|100|f8f9fe" _
            )
        End With
        With .AddStep(4.20000, Null, Null)
            .Lights = Array( _
            "gi17|100|15094d", _
            "giapron|100|010005", _
            "gi22|100|2e12a2", _
            "gi21|100|f7f7f7", _
            "gi19|100|fefefe", _
            "gi18|100|e5e5e5", _
            "gi16|100|d7d7d7", _
            "gi15|100|333333", _
            "gi14|100|e2e4f1", _
            "gi13|100|1c0c65", _
            "gi12|100|44444f", _
            "gi11|100|1725e0", _
            "gi09|100|fefefe", _
            "gi07|100|cbcbcb", _
            "gi06|100|eeeeee", _
            "gi05|100|424242", _
            "gi04|100|1c0c64", _
            "gi03|100|2c119c", _
            "gi02|100|15094b", _
            "gi01|100|2e13a2", _
            "LTW1|100|f3f3fd" _
            )
        End With
        With .AddStep(4.23333, Null, Null)
            .Lights = Array( _
            "gi17|100|1f0d72", _
            "giapron|100|010103", _
            "gi22|100|2c129b", _
            "gi21|100|fdfdfd", _
            "gi19|100|fdfdfd", _
            "gi18|100|cecece", _
            "gi16|100|f1f1f1", _
            "gi15|100|222222", _
            "gi14|100|ececf8", _
            "gi13|100|220c77", _
            "gi12|100|313340", _
            "gi11|100|1926e7", _
            "gi09|100|ffffff", _
            "gi08|100|ffffff", _
            "gi07|100|e0e0e0", _
            "gi06|100|f8f8f8", _
            "gi05|100|616161", _
            "gi04|100|200d77", _
            "gi03|100|2d129f", _
            "gi02|100|1b0b64", _
            "gi01|100|2f13a6", _
            "LTW1|100|f2f2fe" _
            )
        End With
        With .AddStep(4.26667, Null, Null)
            .Lights = Array( _
            "gi17|100|28108d", _
            "giapron|100|000000", _
            "gi22|100|28108b", _
            "gi21|100|ffffff", _
            "gi19|100|fbfbfb", _
            "gi18|100|b0b0b0", _
            "gi16|100|fcfcfc", _
            "gi15|100|151515", _
            "gi14|100|f2f2fa", _
            "gi13|100|260f84", _
            "gi12|100|222439", _
            "gi11|100|1827e6", _
            "gi07|100|eeeeee", _
            "gi06|100|fdfdfd", _
            "gi05|100|838383", _
            "gi04|100|260f85", _
            "gi03|100|2f13a6", _
            "gi02|100|220f7a", _
            "LTW2|100|fbfcff", _
            "LTW1|100|e9ebf8" _
            )
        End With
        With .AddStep(4.30000, Null, Null)
            .Lights = Array( _
            "gi17|100|2d129f", _
            "gi22|100|240e7b", _
            "gi19|100|f7f7f7", _
            "gi18|100|8e8e8e", _
            "gi16|100|ffffff", _
            "gi15|100|0e0e10", _
            "gi14|100|f6f7fc", _
            "gi13|100|291090", _
            "gi12|100|181b3c", _
            "gi07|100|f7f7f7", _
            "gi06|100|fefefe", _
            "gi05|100|a9a9a9", _
            "gi04|100|2a1193", _
            "gi02|100|28108d", _
            "gi01|100|2f12a8", _
            "LTW2|100|fafbff", _
            "LTW1|100|e4e5f7" _
            )
        End With
        With .AddStep(4.33333, Null, Null)
            .Lights = Array( _
            "gi17|100|2f13a6", _
            "gi22|100|1b0c62", _
            "gi19|100|f1f1f1", _
            "gi18|100|6a6a6a", _
            "gi15|100|08070c", _
            "gi14|100|fafbfd", _
            "gi13|100|2c119b", _
            "gi12|100|121542", _
            "gi11|100|1826e7", _
            "gi07|100|fcfcfc", _
            "gi06|100|ffffff", _
            "gi05|100|c9c9c9", _
            "gi04|100|2c119b", _
            "gi02|100|2c119b", _
            "LTW2|100|f8f9fd", _
            "LTW1|100|d8daf3" _
            )
        End With
        With .AddStep(4.36667, Null, Null)
            .Lights = Array( _
            "gi17|100|2f12a8", _
            "gi22|100|15084c", _
            "gi19|100|e7e7e7", _
            "gi18|100|4b4b4b", _
            "gi15|100|06050a", _
            "gi14|100|fcfcfe", _
            "gi13|100|2e12a3", _
            "gi12|100|0d134f", _
            "gi07|100|fdfdfd", _
            "gi05|100|e3e3e3", _
            "gi04|100|2e13a2", _
            "gi03|100|2f12a8", _
            "gi02|100|2e12a3", _
            "LTW2|100|f6f6fe", _
            "LTW1|100|ccccee" _
            )
        End With
        With .AddStep(4.40000, Null, Null)
            .Lights = Array( _
            "gi22|100|0e0535", _
            "gi20|100|fefefe", _
            "gi19|100|d9d9d9", _
            "gi18|100|333333", _
            "gi15|100|04030b", _
            "gi14|100|fefefe", _
            "gi13|100|2f13a6", _
            "gi12|100|0d1262", _
            "gi07|100|ffffff", _
            "gi05|100|f3f3f3", _
            "gi04|100|2f13a6", _
            "gi02|100|2f13a6", _
            "LTW2|100|f1f4fd", _
            "LTW1|100|bcbee5" _
            )
        End With
        With .AddStep(4.43333, Null, Null)
            .Lights = Array( _
            "gi22|100|0b0423", _
            "gi20|100|fdfdfd", _
            "gi19|100|c8c8c9", _
            "gi18|100|1f1f1f", _
            "gi15|100|050311", _
            "gi14|100|ffffff", _
            "gi12|100|0e1476", _
            "gi05|100|fafafa", _
            "gi02|100|2f12a8", _
            "LTW2|100|edeffc", _
            "LTW1|100|a9acde" _
            )
        End With
        With .AddStep(4.46667, Null, Null)
            .Lights = Array( _
            "gi22|100|060316", _
            "gi20|100|fafafa", _
            "gi21|100|fdfdfd", _
            "gi19|100|b3b2b7", _
            "gi18|100|121212", _
            "gi16|100|fdfdfd", _
            "gi15|100|07031a", _
            "gi13|100|2f12a8", _
            "gi12|100|0e188f", _
            "gi05|100|fdfdfd", _
            "LTW2|100|e6e9fa", _
            "LTW1|100|9599d6" _
            )
        End With
        With .AddStep(4.50000, Null, Null)
            .Lights = Array( _
            "gi22|100|04020d", _
            "gi20|100|f3f3f3", _
            "gi21|100|fbfbfb", _
            "gi19|100|9c9ba0", _
            "gi18|100|0b0b0b", _
            "gi16|100|f3f3f3", _
            "gi15|100|0b0425", _
            "gi12|100|121ca3", _
            "gi08|100|fefefe", _
            "gi05|100|ffffff", _
            "gi04|100|2f12a8", _
            "gi01|100|2f13a6", _
            "LTW2|100|dfe1fa", _
            "LTW1|100|7e84ce" _
            )
        End With
        With .AddStep(4.53333, Null, Null)
            .Lights = Array( _
            "gi17|100|2f13a6", _
            "gi22|100|020107", _
            "gi20|100|e4e4e4", _
            "gi21|100|f1f1f1", _
            "gi19|100|858489", _
            "gi18|100|050505", _
            "gi16|100|dbdbdb", _
            "gi15|100|0f0536", _
            "gi12|100|131fbc", _
            "gi08|100|fdfdfd", _
            "gi06|100|fefefe", _
            "LTW2|100|d6d9f7", _
            "LTW1|100|696fc7" _
            )
        End With
        With .AddStep(4.56667, Null, Null)
            .Lights = Array( _
            "gi17|100|2d12a1", _
            "gi22|100|000004", _
            "gi20|100|d1d1d1", _
            "gi21|100|dfdfdf", _
            "gi19|100|6d6b76", _
            "gi18|100|010206", _
            "gi16|100|b0b0b0", _
            "gi15|100|140946", _
            "gi12|100|1521cb", _
            "gi10|100|1825e5", _
            "gi08|100|fbfbfb", _
            "gi06|100|fcfcfc", _
            "gi01|100|2d129f", _
            "LTW2|100|c8ccf0", _
            "LTW1|100|555dc2" _
            )
        End With
        With .AddStep(4.60000, Null, Null)
            .Lights = Array( _
            "gi17|100|2a1194", _
            "gi22|100|010103", _
            "gi20|100|b5b5b5", _
            "gi21|100|c0c0c0", _
            "gi19|100|575561", _
            "gi18|100|010208", _
            "gi16|100|7b7b7b", _
            "gi15|100|190b5b", _
            "gi12|100|1823d8", _
            "gi10|100|1826e2", _
            "gi09|100|fefefe", _
            "gi08|100|f5f5f5", _
            "gi06|100|f6f6f6", _
            "gi03|100|2f13a6", _
            "gi01|100|2b1197", _
            "LTW2|100|bcbfea", _
            "LTW1|100|454cc1" _
            )
        End With
        With .AddStep(4.63333, Null, Null)
            .Lights = Array( _
            "gi17|100|230d7c", _
            "gi22|100|000000", _
            "gi20|100|939393", _
            "gi21|100|9a9a9a", _
            "gi19|100|454254", _
            "gi18|100|030210", _
            "gi16|100|4b4b4b", _
            "gi15|100|1f0d72", _
            "gi12|100|1725df", _
            "gi10|100|1826df", _
            "gi09|100|fcfcfc", _
            "gi08|100|ececec", _
            "gi06|100|e9e9e9", _
            "gi01|100|260f84", _
            "LTW2|100|a8ade3", _
            "LTW1|100|373fc1" _
            )
        End With
        With .AddStep(4.66667, Null, Null)
            .Lights = Array( _
            "gi17|100|190b5a", _
            "giapron|100|020202", _
            "gi22|100|020202", _
            "gi20|100|737373", _
            "gi21|100|717171", _
            "gi19|100|363349", _
            "gi18|100|03051a", _
            "gi16|100|282828", _
            "gi15|100|250e81", _
            "gi12|100|1825e5", _
            "gi11|100|1827e6", _
            "gi10|100|1928dd", _
            "gi09|100|fafafa", _
            "gi08|100|dfdfdf", _
            "gi07|100|fefefe", _
            "gi06|100|d5d5d5", _
            "gi03|100|2e12a3", _
            "gi02|100|2f13a6", _
            "gi01|100|1f0d72", _
            "LTW2|100|969cde", _
            "LTW1|100|2b35c5" _
            )
        End With
        With .AddStep(4.70000, Null, Null)
            .Lights = Array( _
            "gi17|100|10063a", _
            "giapron|100|090909", _
            "gi22|100|070707", _
            "gi20|100|555555", _
            "gi21|100|4c4c4c", _
            "gi19|100|2b2548", _
            "gi18|100|040627", _
            "gi16|100|121212", _
            "gi15|100|291092", _
            "gi12|100|1826e6", _
            "gi10|100|1d2ad8", _
            "gi09|100|f5f5f7", _
            "gi08|100|cccccc", _
            "gi07|100|fbfbfb", _
            "gi06|100|b8b8b8", _
            "gi03|100|2d129d", _
            "gi01|100|180a56", _
            "LTW2|100|8389d6", _
            "LTW1|100|232eca" _
            )
        End With
        With .AddStep(4.73333, Null, Null)
            .Lights = Array( _
            "gi17|100|0a041e", _
            "giapron|100|191919", _
            "gi22|100|0e0e0e", _
            "gi20|100|3c3c3c", _
            "gi21|100|2e2e2e", _
            "gi19|100|241c45", _
            "gi18|100|060a3b", _
            "gi16|100|060606", _
            "gi15|100|2c119c", _
            "gi12|100|1826e7", _
            "gi11|100|1825e4", _
            "gi10|100|202dd8", _
            "gi09|100|edecf0", _
            "gi08|100|b5b5b5", _
            "gi07|100|f5f5f5", _
            "gi06|100|959595", _
            "gi05|100|fdfdfd", _
            "gi03|100|2a1193", _
            "gi02|100|2e13a2", _
            "gi01|100|130843", _
            "LTW2|100|6e73d0", _
            "LTW1|100|1e2bd2" _
            )
        End With
        With .AddStep(4.76667, Null, Null)
            .Lights = Array( _
            "gi17|100|040210", _
            "giapron|100|323232", _
            "gi22|100|191919", _
            "gi20|100|282828", _
            "gi21|100|1a1a1a", _
            "gi19|100|1f154a", _
            "gi18|100|090d55", _
            "gi16|100|000000", _
            "gi15|100|2e13a2", _
            "gi14|100|fdfdff", _
            "gi13|100|2f13a6", _
            "gi11|100|1725e0", _
            "gi10|100|242fd0", _
            "gi09|100|e1e0e5", _
            "gi08|100|9b9b9b", _
            "gi07|100|ebebeb", _
            "gi06|100|717171", _
            "gi05|100|f8f8f8", _
            "gi04|100|2f13a6", _
            "gi03|100|270f87", _
            "gi02|100|2c1299", _
            "gi01|100|0c042c", _
            "LTW2|100|5b62cc", _
            "LTW1|100|1c28d7" _
            )
        End With
        With .AddStep(4.80000, Null, Null)
            .Lights = Array( _
            "gi17|100|010005", _
            "giapron|100|5b5b5b", _
            "gi22|100|2c2c2c", _
            "gi20|100|191919", _
            "gi21|100|0d0d0d", _
            "gi19|100|1e1253", _
            "gi18|100|0c1375", _
            "gi15|100|2f13a6", _
            "gi14|100|fbfaff", _
            "gi11|100|1624dc", _
            "gi10|100|2d37cc", _
            "gi09|100|d3d2d7", _
            "gi08|100|7f7f80", _
            "gi07|100|dddddd", _
            "gi06|100|525252", _
            "gi05|100|ebebeb", _
            "gi03|100|200e72", _
            "gi02|100|28108b", _
            "gi01|100|07041a", _
            "LTW2|100|4851cb", _
            "LTW1|100|1a26db" _
            )
        End With
        With .AddStep(4.83333, Null, Null)
            .Lights = Array( _
            "gi17|100|010103", _
            "giapron|100|8f8f8f", _
            "gi22|100|454545", _
            "gi20|100|0d0e11", _
            "gi21|100|060606", _
            "gi19|100|1f1062", _
            "gi18|100|0f1791", _
            "gi14|100|f8f7fc", _
            "gi13|100|2e12a4", _
            "gi11|100|1724d5", _
            "gi10|100|343ecb", _
            "gi09|100|c2c1c9", _
            "gi08|100|646569", _
            "gi07|100|c5c5c5", _
            "gi06|100|383838", _
            "gi05|100|d8d8d8", _
            "gi04|100|2f13a5", _
            "gi03|100|1b0c61", _
            "gi02|100|210e78", _
            "gi01|100|050311", _
            "LTW2|100|3a43c9", _
            "LTW1|100|1826df" _
            )
        End With
        With .AddStep(4.86667, Null, Null)
            .Lights = Array( _
            "gi17|100|000000", _
            "giapron|100|c3c3c3", _
            "gi22|100|656565", _
            "gi20|100|06070c", _
            "gi21|100|010101", _
            "gi19|100|230f71", _
            "gi18|100|121daf", _
            "gi15|100|2f12a8", _
            "gi14|100|f5f4f9", _
            "gi13|100|2d129e", _
            "gi11|100|1722cc", _
            "gi10|100|414bc8", _
            "gi09|100|afadba", _
            "gi08|100|4c4f56", _
            "gi07|100|acacac", _
            "gi06|100|222222", _
            "gi05|100|bbbbbb", _
            "gi04|100|2d129e", _
            "gi03|100|16094e", _
            "gi02|100|1a0b62", _
            "gi01|100|03020a", _
            "LTW2|100|2e38cc", _
            "LTW1|100|1825e3" _
            )
        End With
        With .AddStep(4.90000, Null, Null)
            .Lights = Array( _
            "giapron|100|e7e7e7", _
            "gi22|100|898989", _
            "gi20|100|050511", _
            "gi21|100|000000", _
            "gi19|100|240e7b", _
            "gi18|100|1422c8", _
            "gi14|100|eeedf3", _
            "gi13|100|2b1197", _
            "gi11|100|1620be", _
            "gi10|100|4e57cb", _
            "gi09|100|9996a6", _
            "gi08|100|383a46", _
            "gi07|100|8d8d8d", _
            "gi06|100|151515", _
            "gi05|100|989898", _
            "gi04|100|2c1298", _
            "gi03|100|11073b", _
            "gi02|100|140848", _
            "gi01|100|010005", _
            "LTW2|100|2531ce", _
            "LTW1|100|1825e6" _
            )
        End With
        With .AddStep(4.93333, Null, Null)
            .Lights = Array( _
            "giapron|100|f9f9f9", _
            "gi22|100|b0b0b0", _
            "gi20|100|010313", _
            "gi19|100|260f86", _
            "gi18|100|1723d7", _
            "gi14|100|e6e4ef", _
            "gi13|100|270f89", _
            "gi11|100|1820b0", _
            "gi10|100|6068ce", _
            "gi09|100|838094", _
            "gi08|100|292c3f", _
            "gi07|100|6e6e6e", _
            "gi06|100|0b0b0b", _
            "gi05|100|727272", _
            "gi04|100|280f8e", _
            "gi03|100|0b0529", _
            "gi02|100|0f0536", _
            "gi01|100|010103", _
            "LTW2|100|202bd3", _
            "LTW1|100|1827e6" _
            )
        End With
        With .AddStep(4.96667, Null, Null)
            .Lights = Array( _
            "giapron|100|fdfdfd", _
            "gi22|100|d0d0d0", _
            "gi20|100|030520", _
            "gi19|100|2a1093", _
            "gi18|100|1725de", _
            "gi14|100|dcdae5", _
            "gi13|100|240e7c", _
            "gi11|100|1620a3", _
            "gi10|100|747ad1", _
            "gi09|100|6e6884", _
            "gi08|100|1c1d3a", _
            "gi07|100|545454", _
            "gi06|100|050505", _
            "gi05|100|515151", _
            "gi04|100|240d80", _
            "gi03|100|08041e", _
            "gi02|100|0a0525", _
            "gi01|100|000001", _
            "LTW2|100|1c28d7" _
            )
        End With
        With .AddStep(5.00000, Null, Null)
            .Lights = Array( _
            "giapron|100|ffffff", _
            "gi22|100|e7e7e7", _
            "gi20|100|03082e", _
            "gi19|100|2c129a", _
            "gi18|100|1825e3", _
            "gi14|100|cfcddb", _
            "gi13|100|1f0c66", _
            "gi11|100|172194", _
            "gi10|100|858cda", _
            "gi09|100|5a5277", _
            "gi08|100|15163e", _
            "gi07|100|3b3b3b", _
            "gi06|100|010102", _
            "gi05|100|343434", _
            "gi04|100|200c70", _
            "gi03|100|070415", _
            "gi02|100|060315", _
            "gi01|100|000000", _
            "LTW2|100|1b27dc", _
            "LTW1|100|1826e7" _
            )
        End With
        With .AddStep(5.03333, Null, Null)
            .Lights = Array( _
            "gi22|100|f5f5f5", _
            "gi20|100|060c47", _
            "gi21|100|010103", _
            "gi19|100|2e12a1", _
            "gi18|100|1827e6", _
            "gi14|100|c0bdd0", _
            "gi13|100|180a58", _
            "gi12|100|1827e6", _
            "gi11|100|1e2485", _
            "gi10|100|999cdf", _
            "gi09|100|4a4070", _
            "gi08|100|111345", _
            "gi07|100|29292b", _
            "gi06|100|010103", _
            "gi05|100|1f1f1f", _
            "gi04|100|1a0b5e", _
            "gi03|100|080612", _
            "gi02|100|04020e", _
            "gi01|100|010101", _
            "LTW2|100|1a25df" _
            )
        End With
        With .AddStep(5.06667, Null, Null)
            .Lights = Array( _
            "gi22|100|fcfcfc", _
            "gi20|100|09105d", _
            "gi21|100|010109", _
            "gi19|100|2f13a6", _
            "gi18|100|1826e7", _
            "gi14|100|ada9c1", _
            "gi13|100|140846", _
            "gi12|100|1825e3", _
            "gi11|100|242a7c", _
            "gi10|100|abade6", _
            "gi09|100|3c3269", _
            "gi08|100|0f1456", _
            "gi07|100|1b1b1d", _
            "gi06|100|010005", _
            "gi05|100|141414", _
            "gi04|100|15094c", _
            "gi03|100|0b0a10", _
            "gi02|100|010006", _
            "gi01|100|050505", _
            "LTW2|100|1726e5" _
            )
        End With
        With .AddStep(5.10000, Null, Null)
            .Lights = Array( _
            "gi22|100|fefefe", _
            "gi20|100|0d147d", _
            "gi21|100|010310", _
            "gi14|100|9b94b5", _
            "gi13|100|110737", _
            "gi12|100|1725e0", _
            "gi11|100|2d3275", _
            "gi10|100|b9bde9", _
            "gi09|100|332768", _
            "gi08|100|0d136a", _
            "gi07|100|12121a", _
            "gi06|100|010109", _
            "gi05|100|0a0a0a", _
            "gi04|100|12083d", _
            "gi03|100|111112", _
            "gi02|100|000004", _
            "gi01|100|0a0a0a" _
            )
        End With
        With .AddStep(5.13333, Null, Null)
            .Lights = Array( _
            "giapron|100|fefefe", _
            "gi22|100|ffffff", _
            "gi20|100|10199a", _
            "gi21|100|03051d", _
            "gi15|100|2f13a6", _
            "gi14|100|877fa6", _
            "gi13|100|110a2d", _
            "gi12|100|1624d9", _
            "gi11|100|3a3e74", _
            "gi10|100|c7caf0", _
            "gi09|100|2c1e6c", _
            "gi08|100|0e157f", _
            "gi07|100|0a0c18", _
            "gi06|100|000410", _
            "gi05|100|050505", _
            "gi04|100|110930", _
            "gi03|100|1a1a1c", _
            "gi02|100|000000", _
            "gi01|100|161616" _
            )
        End With
        With .AddStep(5.16667, Null, Null)
            .Lights = Array( _
            "giapron|100|f9f9f9", _
            "gi20|100|131db1", _
            "gi21|100|05072e", _
            "gi19|100|2f12a8", _
            "gi16|100|010103", _
            "gi14|100|726998", _
            "gi13|100|130f29", _
            "gi12|100|1622d0", _
            "gi11|100|4b4d75", _
            "gi10|100|d4d4f6", _
            "gi09|100|291875", _
            "gi08|100|101894", _
            "gi07|100|07081a", _
            "gi06|100|03051b", _
            "gi05|100|010101", _
            "gi04|100|110d28", _
            "gi03|100|282828", _
            "gi01|100|262626", _
            "LTW2|100|1827e6" _
            )
        End With
        With .AddStep(5.20000, Null, Null)
            .Lights = Array( _
            "giapron|100|e6e6e6", _
            "gi20|100|1621c9", _
            "gi21|100|080c4d", _
            "gi16|100|02020a", _
            "gi15|100|2d12a1", _
            "gi14|100|61568f", _
            "gi13|100|191627", _
            "gi12|100|1320c2", _
            "gi11|100|5f5e7f", _
            "gi10|100|dcddf8", _
            "gi09|100|28167b", _
            "gi08|100|121cad", _
            "gi07|100|040723", _
            "gi06|100|05072d", _
            "gi05|100|000000", _
            "gi04|100|161328", _
            "gi03|100|3d3d3d", _
            "gi02|100|010101", _
            "gi01|100|3d3d3d", _
            "LTW2|100|1826e7" _
            )
        End With
        With .AddStep(5.23333, Null, Null)
            .Lights = Array( _
            "giapron|100|c1c1c1", _
            "gi20|100|1723d7", _
            "gi21|100|0b116b", _
            "gi16|100|020417", _
            "gi15|100|2c129a", _
            "gi14|100|504388", _
            "gi13|100|211f2c", _
            "gi12|100|121db0", _
            "gi11|100|72748b", _
            "gi10|100|e4e6fa", _
            "gi09|100|291387", _
            "gi08|100|1420be", _
            "gi07|100|060830", _
            "gi06|100|080a43", _
            "gi05|100|000002", _
            "gi04|100|1c1a27", _
            "gi03|100|545454", _
            "gi02|100|050505", _
            "gi01|100|5b5b5b" _
            )
        End With
        With .AddStep(5.26667, Null, Null)
            .Lights = Array( _
            "gi17|100|040404", _
            "giapron|100|8e8e8e", _
            "gi20|100|1725e0", _
            "gi21|100|0e1892", _
            "gi16|100|04072f", _
            "gi15|100|291090", _
            "gi14|100|453784", _
            "gi13|100|302f35", _
            "gi12|100|101895", _
            "gi11|100|88899b", _
            "gi10|100|e9eafa", _
            "gi09|100|2a128e", _
            "gi08|100|1422cc", _
            "gi07|100|080a43", _
            "gi06|100|0a0f60", _
            "gi05|100|000105", _
            "gi04|100|28272f", _
            "gi03|100|707070", _
            "gi02|100|0c0c0c", _
            "gi01|100|808080" _
            )
        End With
        With .AddStep(5.30000, Null, Null)
            .Lights = Array( _
            "gi17|100|0e0e0e", _
            "giapron|100|595959", _
            "gi20|100|1826e5", _
            "gi21|100|121eb2", _
            "gi18|100|1827e4", _
            "gi16|100|090e52", _
            "gi15|100|250e81", _
            "gi14|100|3b2a84", _
            "gi13|100|434247", _
            "gi12|100|0d1580", _
            "gi11|100|9d9fac", _
            "gi10|100|edeffc", _
            "gi09|100|2c1298", _
            "gi08|100|1824da", _
            "gi07|100|080f58", _
            "gi06|100|0d147c", _
            "gi05|100|010109", _
            "gi04|100|37363c", _
            "gi03|100|8f8f8f", _
            "gi02|100|181818", _
            "gi01|100|a4a4a4" _
            )
        End With
        With .AddStep(5.33333, Null, Null)
            .Lights = Array( _
            "gi17|100|1e1e1e", _
            "giapron|100|2f2f2f", _
            "gi22|100|fdfdfd", _
            "gi20|100|1827e6", _
            "gi21|100|1521cb", _
            "gi18|100|1725e1", _
            "gi16|100|0d167f", _
            "gi15|100|210d6f", _
            "gi14|100|332187", _
            "gi13|100|5a5a5a", _
            "gi12|100|0a1067", _
            "gi11|100|b5b5bf", _
            "gi10|100|f5f5ff", _
            "gi09|100|2d129d", _
            "gi08|100|1725e0", _
            "gi07|100|0d1371", _
            "gi06|100|111a9d", _
            "gi05|100|00040f", _
            "gi04|100|4c4b50", _
            "gi03|100|aeaeae", _
            "gi02|100|272727", _
            "gi01|100|c7c7c7" _
            )
        End With
        With .AddStep(5.36667, Null, Null)
            .Lights = Array( _
            "gi17|100|3f3f3f", _
            "giapron|100|171717", _
            "gi22|100|fbfbfb", _
            "gi20|100|1826e7", _
            "gi21|100|1625da", _
            "gi18|100|1824d8", _
            "gi16|100|111daf", _
            "gi15|100|190a5c", _
            "gi14|100|301c89", _
            "gi13|100|767676", _
            "gi12|100|080d4e", _
            "gi11|100|c8c9ce", _
            "gi10|100|f7f8fd", _
            "gi09|100|2e13a0", _
            "gi08|100|1724e2", _
            "gi07|100|0f188f", _
            "gi06|100|151eba", _
            "gi05|100|04051f", _
            "gi04|100|656565", _
            "gi03|100|c8c8c8", _
            "gi02|100|3f3f3f", _
            "gi01|100|e2e2e2", _
            "LTW1|100|1827e6" _
            )
        End With
        With .AddStep(5.40000, Null, Null)
            .Lights = Array( _
            "gi17|100|6e6e6e", _
            "giapron|100|080808", _
            "gi22|100|f3f3f3", _
            "gi21|100|1825e4", _
            "gi18|100|1521ca", _
            "gi16|100|1422ce", _
            "gi15|100|130745", _
            "gi14|100|2f178f", _
            "gi13|100|939393", _
            "gi12|100|0a0c3f", _
            "gi11|100|d9dadc", _
            "gi10|100|f8f9fe", _
            "gi09|100|2f14a3", _
            "gi08|100|1726e5", _
            "gi07|100|121ca9", _
            "gi06|100|1422cc", _
            "gi05|100|060830", _
            "gi04|100|828282", _
            "gi03|100|dfdfdf", _
            "gi02|100|5b5b5b", _
            "gi01|100|f1f1f1" _
            )
        End With
        With .AddStep(5.43333, Null, Null)
            .Lights = Array( _
            "gi17|100|a4a4a4", _
            "giapron|100|010101", _
            "gi22|100|e4e4e4", _
            "gi21|100|1827e6", _
            "gi18|100|131eb3", _
            "gi16|100|1725de", _
            "gi15|100|0e0436", _
            "gi14|100|2e1597", _
            "gi13|100|b0b0b0", _
            "gi12|100|080c2e", _
            "gi11|100|e5e6e7", _
            "gi10|100|f9faff", _
            "gi09|100|2f13a6", _
            "gi08|100|1826e7", _
            "gi07|100|151fbe", _
            "gi06|100|1724dc", _
            "gi05|100|080c48", _
            "gi04|100|9c9c9c", _
            "gi03|100|eeeeee", _
            "gi02|100|7f7f7f", _
            "gi01|100|fafafa" _
            )
        End With
        With .AddStep(5.46667, Null, Null)
            .Lights = Array( _
            "gi17|100|d3d3d3", _
            "giapron|100|000000", _
            "gi22|100|cccccc", _
            "gi21|100|1826e7", _
            "gi18|100|101999", _
            "gi16|100|1a27e5", _
            "gi15|100|0a0424", _
            "gi14|100|2d139b", _
            "gi13|100|c9c9c9", _
            "gi12|100|0b0d24", _
            "gi11|100|f0f0f0", _
            "gi10|100|fafbff", _
            "gi07|100|1522ce", _
            "gi06|100|1724e2", _
            "gi05|100|0b1163", _
            "gi04|100|b7b7b7", _
            "gi03|100|f7f7f7", _
            "gi02|100|a3a3a3", _
            "gi01|100|fdfdfd", _
            "LTW1|100|1825e5" _
            )
        End With
        With .AddStep(5.50000, Null, Null)
            .Lights = Array( _
            "gi17|100|f0f0f0", _
            "gi22|100|aaaaaa", _
            "gi19|100|2f13a6", _
            "gi18|100|0c1477", _
            "gi16|100|1826e7", _
            "gi15|100|070419", _
            "gi14|100|2e139f", _
            "gi13|100|dedede", _
            "gi12|100|0f1222", _
            "gi11|100|f7f7f7", _
            "gi10|100|fdfdff", _
            "gi09|100|2f12a8", _
            "gi07|100|1625da", _
            "gi06|100|1826e4", _
            "gi05|100|0e1583", _
            "gi04|100|cfcfcf", _
            "gi03|100|fcfcfc", _
            "gi02|100|c5c5c5", _
            "gi01|100|ffffff", _
            "LTW1|100|1826e0" _
            )
        End With
        With .AddStep(5.53333, Null, Null)
            .Lights = Array( _
            "gi17|100|fcfcfc", _
            "gi22|100|858585", _
            "gi19|100|2f13a4", _
            "gi18|100|080f58", _
            "gi15|100|070514", _
            "gi14|100|2e13a0", _
            "gi13|100|ececec", _
            "gi12|100|181724", _
            "gi11|100|fafafa", _
            "gi10|100|fefeff", _
            "gi07|100|1724e1", _
            "gi06|100|1826e7", _
            "gi05|100|111ba7", _
            "gi04|100|e2e2e2", _
            "gi03|100|fefefe", _
            "gi02|100|e0e0e0", _
            "LTW1|100|1725dd" _
            )
        End With
        With .AddStep(5.56667, Null, Null)
            .Lights = Array( _
            "gi17|100|ffffff", _
            "gi22|100|636363", _
            "gi18|100|050a41", _
            "gi15|100|070510", _
            "gi14|100|2e12a5", _
            "gi13|100|f6f6f6", _
            "gi12|100|212128", _
            "gi11|100|fdfdfd", _
            "gi10|100|ffffff", _
            "gi07|100|1926e4", _
            "gi05|100|151fbf", _
            "gi04|100|eeeeee", _
            "gi03|100|ffffff", _
            "gi02|100|f0f0f0", _
            "LTW1|100|1825d4" _
            )
        End With
        With .AddStep(5.60000, Null, Null)
            .Lights = Array( _
            "gi22|100|414141", _
            "gi20|100|1827e6", _
            "gi19|100|2d12a1", _
            "gi18|100|04072b", _
            "gi15|100|0e0d12", _
            "gi14|100|2f13a6", _
            "gi13|100|fbfbfb", _
            "gi12|100|2e2e31", _
            "gi10|100|fdfdff", _
            "gi07|100|1826e7", _
            "gi05|100|1623d2", _
            "gi04|100|f7f7f7", _
            "gi02|100|fafafa", _
            "LTW1|100|1826cf" _
            )
        End With
        With .AddStep(5.63333, Null, Null)
            .Lights = Array( _
            "gi22|100|292929", _
            "gi20|100|1825e3", _
            "gi21|100|1827e6", _
            "gi19|100|2c119b", _
            "gi18|100|02041a", _
            "gi15|100|16151a", _
            "gi13|100|fdfdfd", _
            "gi12|100|404042", _
            "gi11|100|ffffff", _
            "gi10|100|fcfcfe", _
            "gi05|100|1725de", _
            "gi04|100|fcfcfc", _
            "gi02|100|fdfdfd", _
            "LTW2|100|1726e3", _
            "LTW1|100|1a26c6" _
            )
        End With
        With .AddStep(5.66667, Null, Null)
            .Lights = Array( _
            "gi22|100|181818", _
            "gi20|100|1725df", _
            "gi19|100|2a1193", _
            "gi18|100|010310", _
            "gi16|100|1726e5", _
            "gi15|100|222222", _
            "gi13|100|ffffff", _
            "gi12|100|525252", _
            "gi10|100|fbfbfd", _
            "gi05|100|1825e3", _
            "gi04|100|fdfdfd", _
            "gi02|100|ffffff", _
            "LTW1|100|1d27bc" _
            )
        End With
        With .AddStep(5.70000, Null, Null)
            .Lights = Array( _
            "gi22|100|0d0d0d", _
            "gi20|100|1723d7", _
            "gi21|100|1725e1", _
            "gi19|100|28108a", _
            "gi18|100|02020a", _
            "gi16|100|1723da", _
            "gi15|100|323232", _
            "gi14|100|2f12a8", _
            "gi12|100|6b6b6b", _
            "gi10|100|faf9ff", _
            "gi05|100|1826e7", _
            "gi04|100|ffffff", _
            "gi01|100|fefefe", _
            "LTW1|100|242bb6" _
            )
        End With
        With .AddStep(5.73333, Null, Null)
            .Lights = Array( _
            "gi17|100|fdfdfd", _
            "gi22|100|060606", _
            "gi20|100|1422ca", _
            "gi21|100|1723d8", _
            "gi19|100|260f82", _
            "gi18|100|000104", _
            "gi16|100|1320c3", _
            "gi15|100|494949", _
            "gi12|100|838383", _
            "gi10|100|f8f7fd", _
            "gi01|100|fcfcfc", _
            "LTW2|100|1825df", _
            "LTW1|100|2832af" _
            )
        End With
        With .AddStep(5.76667, Null, Null)
            .Lights = Array( _
            "gi17|100|f3f3f3", _
            "gi22|100|020202", _
            "gi20|100|121db5", _
            "gi21|100|1421c4", _
            "gi19|100|251073", _
            "gi18|100|010102", _
            "gi16|100|111a9b", _
            "gi15|100|676767", _
            "gi12|100|9e9e9e", _
            "gi10|100|f4f3fa", _
            "gi08|100|1726e5", _
            "gi01|100|f5f5f5", _
            "LTW2|100|1925dc", _
            "LTW1|100|323aa6" _
            )
        End With
        With .AddStep(5.80000, Null, Null)
            .Lights = Array( _
            "gi17|100|dadada", _
            "gi22|100|000000", _
            "gi20|100|10199c", _
            "gi21|100|111caa", _
            "gi19|100|221366", _
            "gi18|100|000000", _
            "gi16|100|0c116c", _
            "gi15|100|858585", _
            "gi12|100|b7b7b7", _
            "gi10|100|f0eff7", _
            "gi06|100|1826e5", _
            "gi03|100|fefefe", _
            "gi01|100|e7e7e7", _
            "LTW2|100|1926d6", _
            "LTW1|100|4047a3" _
            )
        End With
        With .AddStep(5.83333, Null, Null)
            .Lights = Array( _
            "gi17|100|b0b0b0", _
            "gi22|100|010103", _
            "gi20|100|0d147c", _
            "gi21|100|0e1684", _
            "gi19|100|24175d", _
            "gi18|100|020202", _
            "gi16|100|060c42", _
            "gi15|100|a6a6a6", _
            "gi12|100|cdcdcd", _
            "gi10|100|ebe9f5", _
            "gi08|100|1725df", _
            "gi06|100|1725dd", _
            "gi03|100|fdfdfd", _
            "gi01|100|d0d0d0", _
            "LTW2|100|1a27cd", _
            "LTW1|100|4e55a3" _
            )
        End With
        With .AddStep(5.86667, Null, Null)
            .Lights = Array( _
            "gi17|100|797979", _
            "gi22|100|000008", _
            "gi20|100|09105f", _
            "gi21|100|0a1060", _
            "gi19|100|2a1f59", _
            "gi18|100|050505", _
            "gi16|100|050624", _
            "gi15|100|c3c3c3", _
            "gi12|100|dfdfdf", _
            "gi10|100|e5e3f1", _
            "gi09|100|2f13a7", _
            "gi08|100|1625da", _
            "gi06|100|1722d6", _
            "gi03|100|f9f9f9", _
            "gi01|100|b0b0b0", _
            "LTW2|100|1e29c5", _
            "LTW1|100|6166a8" _
            )
        End With
        With .AddStep(5.90000, Null, Null)
            .Lights = Array( _
            "gi17|100|494949", _
            "giapron|100|000105", _
            "gi22|100|00030d", _
            "gi20|100|070c46", _
            "gi21|100|080b41", _
            "gi19|100|312858", _
            "gi18|100|0a0a0a", _
            "gi16|100|010311", _
            "gi15|100|dadada", _
            "gi12|100|ececec", _
            "gi10|100|dedbee", _
            "gi09|100|2f13a6", _
            "gi08|100|1622ce", _
            "gi06|100|1320c5", _
            "gi03|100|f1f1f1", _
            "gi02|100|fdfdfd", _
            "gi01|100|898989", _
            "LTW2|100|212dc1", _
            "LTW1|100|7479b1" _
            )
        End With
        With .AddStep(5.93333, Null, Null)
            .Lights = Array( _
            "gi17|100|272727", _
            "giapron|100|03030f", _
            "gi22|100|010415", _
            "gi20|100|050832", _
            "gi21|100|040628", _
            "gi19|100|3e385b", _
            "gi18|100|131313", _
            "gi16|100|000008", _
            "gi15|100|ebebeb", _
            "gi13|100|fefefe", _
            "gi12|100|f5f5f5", _
            "gi10|100|d6d2e9", _
            "gi08|100|1420c0", _
            "gi07|100|1926e6", _
            "gi06|100|111dac", _
            "gi03|100|e4e4e4", _
            "gi02|100|f9f9f9", _
            "gi01|100|656565", _
            "LTW2|100|2731b7", _
            "LTW1|100|8b8dba" _
            )
        End With
        With .AddStep(5.96667, Null, Null)
            .Lights = Array( _
            "gi17|100|111111", _
            "giapron|100|040522", _
            "gi22|100|040626", _
            "gi20|100|040523", _
            "gi21|100|020417", _
            "gi19|100|504c64", _
            "gi18|100|1e1e1e", _
            "gi16|100|000000", _
            "gi15|100|f6f6f6", _
            "gi12|100|fbfbfb", _
            "gi10|100|cac3e2", _
            "gi09|100|2e12a4", _
            "gi08|100|111dad", _
            "gi07|100|1725de", _
            "gi06|100|0f1890", _
            "gi05|100|1726e5", _
            "gi04|100|fefefe", _
            "gi03|100|d0d0d0", _
            "gi02|100|ededed", _
            "gi01|100|444444", _
            "LTW2|100|313ab1", _
            "LTW1|100|9ea1c4" _
            )
        End With
        With .AddStep(6.00000, Null, Null)
            .Lights = Array( _
            "gi17|100|050505", _
            "giapron|100|080b43", _
            "gi22|100|060a3a", _
            "gi20|100|010413", _
            "gi21|100|02020d", _
            "gi19|100|656276", _
            "gi18|100|2e2e2e", _
            "gi15|100|fbfbfb", _
            "gi13|100|fafafa", _
            "gi12|100|fdfdfd", _
            "gi11|100|fefefe", _
            "gi10|100|bbb4d8", _
            "gi09|100|2d129f", _
            "gi08|100|10199a", _
            "gi07|100|1922db", _
            "gi06|100|0c126f", _
            "gi05|100|1725de", _
            "gi04|100|fdfdfd", _
            "gi03|100|b6b6b6", _
            "gi02|100|d9d9d9", _
            "gi01|100|2b2b2b", _
            "LTW2|100|3b44ae", _
            "LTW1|100|b2b4cf" _
            )
        End With
        With .AddStep(6.03333, Null, Null)
            .Lights = Array( _
            "gi17|100|000000", _
            "giapron|100|0b136d", _
            "gi22|100|080e56", _
            "gi20|100|03030f", _
            "gi21|100|000105", _
            "gi19|100|7d7b8a", _
            "gi18|100|464646", _
            "gi15|100|fefefe", _
            "gi13|100|f5f5f5", _
            "gi12|100|fefefe", _
            "gi11|100|fdfdfd", _
            "gi10|100|ada5ce", _
            "gi09|100|2b1199", _
            "gi08|100|0f1785", _
            "gi07|100|1521cb", _
            "gi06|100|090e50", _
            "gi05|100|1822d8", _
            "gi04|100|fbfbfb", _
            "gi03|100|979797", _
            "gi02|100|bdbdbd", _
            "gi01|100|191919", _
            "LTW2|100|4c53ae", _
            "LTW1|100|c5c7db" _
            )
        End With
        With .AddStep(6.06667, Null, Null)
            .Lights = Array( _
            "giapron|100|10199d", _
            "gi22|100|0d1375", _
            "gi20|100|010207", _
            "gi21|100|010101", _
            "gi19|100|9795a0", _
            "gi18|100|616161", _
            "gi15|100|ffffff", _
            "gi13|100|eaeaea", _
            "gi12|100|ffffff", _
            "gi11|100|fbfbfb", _
            "gi10|100|9a90c3", _
            "gi09|100|2b1291", _
            "gi08|100|0d146d", _
            "gi07|100|131fba", _
            "gi06|100|05093a", _
            "gi05|100|1421c7", _
            "gi04|100|f4f4f4", _
            "gi03|100|787878", _
            "gi02|100|999999", _
            "gi01|100|0d0d0d", _
            "LTW2|100|5c63b1", _
            "LTW1|100|d1d4e4" _
            )
        End With
        With .AddStep(6.10000, Null, Null)
            .Lights = Array( _
            "giapron|100|1521c3", _
            "gi22|100|0f1898", _
            "gi20|100|000105", _
            "gi21|100|000000", _
            "gi19|100|b0afb5", _
            "gi18|100|818181", _
            "gi14|100|2f13a6", _
            "gi13|100|dbdbdb", _
            "gi11|100|f7f7f8", _
            "gi10|100|8a7fba", _
            "gi09|100|2a128a", _
            "gi08|100|0e135a", _
            "gi07|100|121ba5", _
            "gi06|100|050623", _
            "gi05|100|121dae", _
            "gi04|100|eaeaea", _
            "gi03|100|5a5a5a", _
            "gi02|100|737373", _
            "gi01|100|050505", _
            "LTW2|100|7075b8", _
            "LTW1|100|e0e0ee" _
            )
        End With
        With .AddStep(6.13333, Null, Null)
            .Lights = Array( _
            "giapron|100|1823dc", _
            "gi22|100|131eb5", _
            "gi20|100|040404", _
            "gi19|100|c8c7cb", _
            "gi18|100|a2a2a2", _
            "gi13|100|c6c6c6", _
            "gi11|100|f0f0f2", _
            "gi10|100|776ab0", _
            "gi09|100|271383", _
            "gi08|100|10134b", _
            "gi07|100|0e1689", _
            "gi06|100|030418", _
            "gi05|100|0f188f", _
            "gi04|100|dbdbdb", _
            "gi03|100|404040", _
            "gi02|100|525252", _
            "gi01|100|020202", _
            "LTW2|100|8689c1", _
            "LTW1|100|eaeaf6" _
            )
        End With
        With .AddStep(6.16667, Null, Null)
            .Lights = Array( _
            "giapron|100|1825e5", _
            "gi22|100|1521cb", _
            "gi20|100|090909", _
            "gi19|100|dbdadf", _
            "gi18|100|c1c1c1", _
            "gi14|100|2e12a5", _
            "gi13|100|adadad", _
            "gi11|100|e6e5e8", _
            "gi10|100|6759a8", _
            "gi09|100|2a197b", _
            "gi08|100|141740", _
            "gi07|100|0d1373", _
            "gi06|100|02020e", _
            "gi05|100|0b126e", _
            "gi04|100|c7c7c7", _
            "gi03|100|2c2c2c", _
            "gi02|100|343434", _
            "gi01|100|000000", _
            "LTW2|100|9a9dca", _
            "LTW1|100|f0f1f8" _
            )
        End With
        With .AddStep(6.20000, Null, Null)
            .Lights = Array( _
            "giapron|100|1826e7", _
            "gi22|100|1824da", _
            "gi20|100|0f0f0f", _
            "gi19|100|e9e8eb", _
            "gi18|100|dbdbdb", _
            "gi14|100|2e13a1", _
            "gi13|100|8f8f8f", _
            "gi11|100|d8d8da", _
            "gi10|100|5848a0", _
            "gi09|100|2d1f71", _
            "gi08|100|1b1c3b", _
            "gi07|100|0a0e58", _
            "gi06|100|000106", _
            "gi05|100|080d50", _
            "gi04|100|adadad", _
            "gi03|100|1c1c1e", _
            "gi02|100|1f1f1f", _
            "LTW2|100|aeaed3", _
            "LTW1|100|f6f7fc" _
            )
        End With
        With .AddStep(6.23333, Null, Null)
            .Lights = Array( _
            "gi22|100|1724e1", _
            "gi20|100|191919", _
            "gi19|100|f2f2f4", _
            "gi18|100|ececec", _
            "gi14|100|2e139e", _
            "gi13|100|727274", _
            "gi11|100|c8c7cd", _
            "gi10|100|4f3a9e", _
            "gi09|100|34276e", _
            "gi08|100|24273b", _
            "gi07|100|080a41", _
            "gi06|100|010005", _
            "gi05|100|050937", _
            "gi04|100|919191", _
            "gi03|100|121214", _
            "gi02|100|141414", _
            "gi01|100|000002", _
            "LTW2|100|bfc0dd", _
            "LTW1|100|f9fafe" _
            )
        End With
        With .AddStep(6.26667, Null, Null)
            .Lights = Array( _
            "gi22|100|1926e4", _
            "gi20|100|272727", _
            "gi19|100|f9f9f9", _
            "gi18|100|f6f6f6", _
            "gi14|100|2f149d", _
            "gi13|100|57585d", _
            "gi11|100|b4b3bc", _
            "gi10|100|442e9b", _
            "gi09|100|40356e", _
            "gi08|100|343343", _
            "gi07|100|05072f", _
            "gi06|100|010101", _
            "gi05|100|050424", _
            "gi04|100|757575", _
            "gi03|100|0b0c10", _
            "gi02|100|090909", _
            "gi01|100|010005", _
            "LTW2|100|cdcfe6", _
            "LTW1|100|fdfdff" _
            )
        End With
        With .AddStep(6.30000, Null, Null)
            .Lights = Array( _
            "gi22|100|1826e7", _
            "gi20|100|373737", _
            "gi19|100|fdfdfd", _
            "gi18|100|fcfcfc", _
            "gi15|100|fefefe", _
            "gi14|100|301798", _
            "gi13|100|404048", _
            "gi11|100|a09eab", _
            "gi10|100|3c2599", _
            "gi09|100|4f4577", _
            "gi08|100|44444e", _
            "gi07|100|070823", _
            "gi06|100|020202", _
            "gi05|100|020316", _
            "gi04|100|5a5a5a", _
            "gi03|100|050811", _
            "gi02|100|040404", _
            "gi01|100|010107", _
            "LTW2|100|dadcee", _
            "LTW1|100|fefeff" _
            )
        End With
        With .AddStep(6.33333, Null, Null)
            .Lights = Array( _
            "gi20|100|515151", _
            "gi21|100|040404", _
            "gi19|100|fefefe", _
            "gi18|100|fefefe", _
            "gi15|100|fdfdfd", _
            "gi14|100|331b93", _
            "gi13|100|2e303c", _
            "gi11|100|888597", _
            "gi10|100|361e9a", _
            "gi09|100|60587f", _
            "gi08|100|58585f", _
            "gi07|100|060819", _
            "gi06|100|050505", _
            "gi05|100|02020c", _
            "gi04|100|434247", _
            "gi03|100|030514", _
            "gi02|100|010101", _
            "gi01|100|03030f", _
            "LTW2|100|e4e6f3", _
            "LTW1|100|ffffff" _
            )
        End With
        With .AddStep(6.36667, Null, Null)
            .Lights = Array( _
            "giapron|100|1726e5", _
            "gi20|100|6d6d6d", _
            "gi21|100|0b0b0b", _
            "gi19|100|ffffff", _
            "gi18|100|ffffff", _
            "gi15|100|fafafa", _
            "gi14|100|382291", _
            "gi13|100|212132", _
            "gi12|100|fdfdfd", _
            "gi11|100|726f85", _
            "gi10|100|33199f", _
            "gi09|100|76708f", _
            "gi08|100|6e6f73", _
            "gi07|100|0a0c18", _
            "gi06|100|090909", _
            "gi05|100|010006", _
            "gi04|100|2e2f34", _
            "gi03|100|03051d", _
            "gi02|100|000000", _
            "gi01|100|02041a", _
            "LTW2|100|eceff9" _
            )
        End With
        With .AddStep(6.40000, Null, Null)
            .Lights = Array( _
            "giapron|100|1725dd", _
            "gi20|100|8b8b8b", _
            "gi21|100|141414", _
            "gi15|100|f1f1f1", _
            "gi14|100|3d2b91", _
            "gi13|100|151734", _
            "gi12|100|fbfbfb", _
            "gi11|100|5f5879", _
            "gi10|100|30169e", _
            "gi09|100|8d899f", _
            "gi08|100|88888b", _
            "gi07|100|101018", _
            "gi06|100|121212", _
            "gi05|100|000002", _
            "gi04|100|21212d", _
            "gi03|100|04072a", _
            "gi01|100|040729", _
            "LTW2|100|f2f2fa" _
            )
        End With
        With .AddStep(6.43333, Null, Null)
            .Lights = Array( _
            "gi17|100|010103", _
            "giapron|100|1522cc", _
            "gi20|100|a9a9a9", _
            "gi21|100|222222", _
            "gi15|100|e5e5e5", _
            "gi14|100|483890", _
            "gi13|100|0f1339", _
            "gi12|100|f6f6f6", _
            "gi11|100|4e466e", _
            "gi10|100|3015a2", _
            "gi09|100|a3a1b1", _
            "gi08|100|a2a2a2", _
            "gi07|100|18191b", _
            "gi06|100|1e1e1e", _
            "gi05|100|000000", _
            "gi04|100|161928", _
            "gi03|100|040a3f", _
            "gi02|100|000003", _
            "gi01|100|080b42", _
            "LTW2|100|f8f9fd" _
            )
        End With
        With .AddStep(6.46667, Null, Null)
            .Lights = Array( _
            "gi17|100|010109", _
            "giapron|100|121ca8", _
            "gi20|100|c6c6c6", _
            "gi21|100|383838", _
            "gi16|100|040404", _
            "gi15|100|d1d1d1", _
            "gi14|100|574898", _
            "gi13|100|0b0e44", _
            "gi12|100|ededed", _
            "gi11|100|3f3569", _
            "gi10|100|2f13a4", _
            "gi09|100|b9b7c5", _
            "gi08|100|b9b9b9", _
            "gi07|100|252527", _
            "gi06|100|2e2e2e", _
            "gi05|100|010101", _
            "gi04|100|101129", _
            "gi03|100|090d53", _
            "gi02|100|010108", _
            "gi01|100|09105d", _
            "LTW2|100|f9fafe" _
            )
        End With
        With .AddStep(6.50000, Null, Null)
            .Lights = Array( _
            "gi17|100|020413", _
            "giapron|100|0d157a", _
            "gi20|100|dcdcdc", _
            "gi21|100|575757", _
            "gi16|100|0c0c0c", _
            "gi15|100|b6b6b6", _
            "gi14|100|685c9e", _
            "gi13|100|0c1159", _
            "gi12|100|e0e0e0", _
            "gi11|100|352a66", _
            "gi10|100|2f13a6", _
            "gi09|100|ceccd7", _
            "gi08|100|cecece", _
            "gi07|100|353535", _
            "gi06|100|454545", _
            "gi04|100|0a0d31", _
            "gi03|100|0c136c", _
            "gi02|100|02030f", _
            "gi01|100|0d1581", _
            "LTW2|100|fcfdff" _
            )
        End With
        With .AddStep(6.53333, Null, Null)
            .Lights = Array( _
            "gi17|100|05062a", _
            "giapron|100|070d4d", _
            "gi22|100|1827e6", _
            "gi20|100|ececec", _
            "gi21|100|7b7b7b", _
            "gi16|100|1c1c1c", _
            "gi15|100|989898", _
            "gi14|100|7d72aa", _
            "gi13|100|0c126e", _
            "gi12|100|cfcfcf", _
            "gi11|100|2c1f67", _
            "gi09|100|dddce2", _
            "gi08|100|dfdfdf", _
            "gi07|100|4a4a4a", _
            "gi06|100|626262", _
            "gi05|100|050505", _
            "gi04|100|080c3c", _
            "gi03|100|0e178b", _
            "gi02|100|03051b", _
            "gi01|100|111ba2", _
            "LTW2|100|fefeff" _
            )
        End With
        With .AddStep(6.56667, Null, Null)
            .Lights = Array( _
            "gi17|100|080d51", _
            "giapron|100|06062b", _
            "gi22|100|1725e0", _
            "gi20|100|f6f6f6", _
            "gi21|100|a0a0a0", _
            "gi16|100|373737", _
            "gi15|100|797979", _
            "gi14|100|9188b7", _
            "gi13|100|0e1587", _
            "gi12|100|bbbbbb", _
            "gi11|100|291a6f", _
            "gi09|100|e9e8ed", _
            "gi08|100|ececec", _
            "gi07|100|616161", _
            "gi06|100|818181", _
            "gi05|100|0a0a0a", _
            "gi04|100|090d4d", _
            "gi03|100|121ca6", _
            "gi02|100|07072c", _
            "gi01|100|151fbe", _
            "LTW2|100|ffffff" _
            )
        End With
        With .AddStep(6.60000, Null, Null)
            .Lights = Array( _
            "gi17|100|0d147b", _
            "giapron|100|020314", _
            "gi22|100|1723d7", _
            "gi20|100|fbfbfb", _
            "gi21|100|c5c5c5", _
            "gi18|100|fefefe", _
            "gi16|100|5f5f5f", _
            "gi15|100|5b5b5b", _
            "gi14|100|a69ec7", _
            "gi13|100|111a9e", _
            "gi12|100|a0a0a0", _
            "gi11|100|271577", _
            "gi10|100|2f13a7", _
            "gi09|100|f1f0f5", _
            "gi08|100|f5f5f5", _
            "gi07|100|7a7a7a", _
            "gi06|100|a3a3a3", _
            "gi05|100|121212", _
            "gi04|100|0a1162", _
            "gi03|100|151fbe", _
            "gi02|100|080a43", _
            "gi01|100|1422d1" _
            )
        End With
        With .AddStep(6.63333, Null, Null)
            .Lights = Array( _
            "gi17|100|131aa9", _
            "giapron|100|010109", _
            "gi22|100|1422ca", _
            "gi20|100|fdfdfd", _
            "gi21|100|e0e0e0", _
            "gi18|100|fbfbfb", _
            "gi16|100|909090", _
            "gi15|100|424242", _
            "gi14|100|b9b3d4", _
            "gi13|100|131eb7", _
            "gi12|100|868686", _
            "gi11|100|271382", _
            "gi10|100|2f12a8", _
            "gi09|100|f7f7f9", _
            "gi08|100|fafafa", _
            "gi07|100|979797", _
            "gi06|100|c1c1c1", _
            "gi05|100|202020", _
            "gi04|100|0d147d", _
            "gi03|100|1522ce", _
            "gi02|100|0a105e", _
            "gi01|100|1725dd", _
            "LTW1|100|fefeff" _
            )
        End With
        With .AddStep(6.66667, Null, Null)
            .Lights = Array( _
            "gi17|100|1422cb", _
            "giapron|100|000000", _
            "gi22|100|121db4", _
            "gi20|100|ffffff", _
            "gi21|100|f2f2f2", _
            "gi19|100|fefefe", _
            "gi18|100|f5f5f5", _
            "gi16|100|bfbfbf", _
            "gi15|100|2d2d2f", _
            "gi14|100|c8c3e0", _
            "gi13|100|1522c9", _
            "gi12|100|6c6c6c", _
            "gi11|100|29118a", _
            "gi09|100|fcfcfe", _
            "gi08|100|fdfdfd", _
            "gi07|100|b2b2b2", _
            "gi06|100|dadada", _
            "gi05|100|313131", _
            "gi04|100|101997", _
            "gi03|100|1625da", _
            "gi02|100|0e157f", _
            "gi01|100|1825e3", _
            "LTW1|100|fdfdff" _
            )
        End With
        With .AddStep(6.70000, Null, Null)
            .Lights = Array( _
            "gi17|100|1725de", _
            "gi22|100|101992", _
            "gi21|100|fafafa", _
            "gi19|100|fdfdfd", _
            "gi18|100|e8e8e8", _
            "gi16|100|e3e3e3", _
            "gi15|100|1d1c22", _
            "gi14|100|d7d4e7", _
            "gi13|100|1723d5", _
            "gi12|100|545454", _
            "gi11|100|2b1292", _
            "gi09|100|fefefe", _
            "gi08|100|fefefe", _
            "gi07|100|cbcbcb", _
            "gi06|100|ececec", _
            "gi05|100|494949", _
            "gi04|100|121dab", _
            "gi03|100|1826e1", _
            "gi02|100|101aa0", _
            "gi01|100|1826e7", _
            "LTW1|100|fcfbff" _
            )
        End With
        With .AddStep(6.73333, Null, Null)
            .Lights = Array( _
            "gi17|100|1827e6", _
            "gi22|100|0d1374", _
            "gi21|100|fdfdfd", _
            "gi19|100|fbfbfb", _
            "gi18|100|d5d5d5", _
            "gi16|100|f6f6f6", _
            "gi15|100|131218", _
            "gi14|100|e1dfed", _
            "gi13|100|1823dd", _
            "gi12|100|414141", _
            "gi11|100|2c129a", _
            "gi09|100|ffffff", _
            "gi08|100|ffffff", _
            "gi07|100|dedede", _
            "gi06|100|f7f7f7", _
            "gi05|100|666666", _
            "gi04|100|1420c0", _
            "gi03|100|1826e5", _
            "gi02|100|121fbc", _
            "LTW1|100|f9f8fd" _
            )
        End With
        With .AddStep(6.76667, Null, Null)
            .Lights = Array( _
            "gi17|100|1826e7", _
            "gi22|100|090d53", _
            "gi21|100|ffffff", _
            "gi19|100|f7f7f7", _
            "gi18|100|bbbbbb", _
            "gi16|100|fdfdfd", _
            "gi15|100|0a0a16", _
            "gi14|100|ebe9f6", _
            "gi13|100|1825e5", _
            "gi12|100|2e2e30", _
            "gi11|100|2d129f", _
            "gi07|100|ededed", _
            "gi06|100|fcfcfc", _
            "gi05|100|888888", _
            "gi04|100|1522cf", _
            "gi03|100|1826e7", _
            "gi02|100|1522cf", _
            "LTW1|100|f6f5fa" _
            )
        End With
        With .AddStep(6.80000, Null, Null)
            .Lights = Array( _
            "gi22|100|050938", _
            "gi19|100|efefef", _
            "gi18|100|9b9b9b", _
            "gi16|100|ffffff", _
            "gi15|100|070918", _
            "gi14|100|f2f1f9", _
            "gi13|100|1926e6", _
            "gi12|100|201f26", _
            "gi11|100|2e13a0", _
            "gi07|100|f7f7f7", _
            "gi06|100|fefefe", _
            "gi05|100|aaaaaa", _
            "gi04|100|1625da", _
            "gi02|100|1824df", _
            "LTW1|100|f1f0f6" _
            )
        End With
        With .AddStep(6.83333, Null, Null)
            .Lights = Array( _
            "gi22|100|030624", _
            "gi19|100|e4e5e7", _
            "gi18|100|787878", _
            "gi15|100|050623", _
            "gi14|100|f5f4fa", _
            "gi13|100|1827e6", _
            "gi12|100|181623", _
            "gi11|100|2f13a6", _
            "gi07|100|fbfbfb", _
            "gi06|100|ffffff", _
            "gi05|100|c9c9c9", _
            "gi04|100|1725e0", _
            "gi02|100|1825e3", _
            "LTW2|100|fdfdff", _
            "LTW1|100|ebe9f2" _
            )
        End With
        With .AddStep(6.86667, Null, Null)
            .Lights = Array( _
            "gi22|100|020315", _
            "gi19|100|d3d4da", _
            "gi18|100|595959", _
            "gi15|100|050830", _
            "gi14|100|f8f7fd", _
            "gi13|100|1826e7", _
            "gi12|100|120f21", _
            "gi07|100|fdfdfd", _
            "gi05|100|e1e1e1", _
            "gi04|100|1726e5", _
            "gi02|100|1726e5", _
            "LTW2|100|fcfcfe", _
            "LTW1|100|e1dfec" _
            )
        End With
        With .AddStep(6.90000, Null, Null)
            .Lights = Array( _
            "gi22|100|00030c", _
            "gi19|100|c0c0c8", _
            "gi18|100|3f3f3f", _
            "gi15|100|070b45", _
            "gi14|100|faf9fe", _
            "gi12|100|0e0a22", _
            "gi11|100|2f12a8", _
            "gi07|100|ffffff", _
            "gi05|100|f0f0f0", _
            "gi02|100|1826e7", _
            "LTW2|100|fbfafe", _
            "LTW1|100|d6d3e4" _
            )
        End With
        With .AddStep(6.93333, Null, Null)
            .Lights = Array( _
            "gi17|100|1726e5", _
            "gi22|100|000106", _
            "gi20|100|fdfdfd", _
            "gi19|100|a6a7b3", _
            "gi18|100|292929", _
            "gi15|100|090f5c", _
            "gi14|100|fcfbff", _
            "gi12|100|0e082c", _
            "gi05|100|f9f9f9", _
            "gi04|100|1826e7", _
            "LTW2|100|f7f6fc", _
            "LTW1|100|c8c5d9" _
            )
        End With
        With .AddStep(6.96667, Null, Null)
            .Lights = Array( _
            "gi17|100|1824db", _
            "gi22|100|010103", _
            "gi20|100|fbfbfb", _
            "gi21|100|fefefe", _
            "gi19|100|8d8f9f", _
            "gi18|100|1a1a1a", _
            "gi16|100|fdfdfd", _
            "gi15|100|0d147a", _
            "gi14|100|fefeff", _
            "gi12|100|0f0735", _
            "gi05|100|fdfdfd", _
            "gi01|100|1926e6", _
            "LTW2|100|f4f3f9", _
            "LTW1|100|b6b2cd" _
            )
        End With
        With .AddStep(7.00000, Null, Null)
            .Lights = Array( _
            "gi17|100|1320c3", _
            "gi22|100|000000", _
            "gi20|100|f4f4f4", _
            "gi21|100|fcfcfc", _
            "gi19|100|767891", _
            "gi18|100|101010", _
            "gi16|100|f5f5f5", _
            "gi15|100|0f1893", _
            "gi14|100|ffffff", _
            "gi12|100|130843", _
            "gi05|100|ffffff", _
            "gi01|100|1624dc", _
            "LTW2|100|f0eff7", _
            "LTW1|100|a69fbe" _
            )
        End With
        With .AddStep(7.03333, Null, Null)
            .Lights = Array( _
            "gi17|100|11199c", _
            "gi20|100|e8e8e8", _
            "gi21|100|f4f4f4", _
            "gi19|100|5a5d7e", _
            "gi18|100|090909", _
            "gi16|100|e1e1e1", _
            "gi15|100|121cac", _
            "gi12|100|180a59", _
            "gi08|100|fefefe", _
            "gi01|100|1722d2", _
            "LTW2|100|eae8f3", _
            "LTW1|100|938bb2" _
            )
        End With
        With .AddStep(7.06667, Null, Null)
            .Lights = Array( _
            "gi17|100|0c116c", _
            "gi20|100|d5d5d5", _
            "gi21|100|e3e3e3", _
            "gi19|100|464972", _
            "gi18|100|040404", _
            "gi16|100|bdbdbd", _
            "gi15|100|1421c4", _
            "gi12|100|1d0c68", _
            "gi10|100|2f13a6", _
            "gi08|100|fdfdfd", _
            "gi06|100|fefefe", _
            "gi01|100|131fbf", _
            "LTW2|100|e3e1ee", _
            "LTW1|100|8076a8" _
            )
        End With
        With .AddStep(7.10000, Null, Null)
            .Lights = Array( _
            "gi17|100|080b40", _
            "gi20|100|bebebe", _
            "gi21|100|cacaca", _
            "gi19|100|333971", _
            "gi18|100|010101", _
            "gi16|100|8b8b8b", _
            "gi15|100|1623d4", _
            "gi14|100|fefefe", _
            "gi12|100|220e7b", _
            "gi09|100|fdfdfd", _
            "gi08|100|fbfbfb", _
            "gi06|100|fbfbfb", _
            "gi03|100|1825e3", _
            "gi01|100|121ba4", _
            "LTW2|100|d8d5e6", _
            "LTW1|100|6c619a" _
            )
        End With
        With .AddStep(7.13333, Null, Null)
            .Lights = Array( _
            "gi17|100|050623", _
            "giapron|100|010101", _
            "gi22|100|040404", _
            "gi20|100|a0a0a0", _
            "gi21|100|a7a7a7", _
            "gi19|100|282c74", _
            "gi16|100|5a5a5a", _
            "gi15|100|1724dd", _
            "gi14|100|fdfdfd", _
            "gi13|100|1827e6", _
            "gi12|100|270f8a", _
            "gi09|100|fcfcfe", _
            "gi08|100|f6f6f6", _
            "gi06|100|f4f4f4", _
            "gi03|100|1624dc", _
            "gi02|100|1726e5", _
            "gi01|100|0e1683", _
            "LTW2|100|cbc8dd", _
            "LTW1|100|5b4f90" _
            )
        End With
        With .AddStep(7.16667, Null, Null)
            .Lights = Array( _
            "gi17|100|010310", _
            "giapron|100|040404", _
            "gi22|100|090909", _
            "gi20|100|808080", _
            "gi21|100|818181", _
            "gi19|100|1f257a", _
            "gi18|100|000002", _
            "gi16|100|333333", _
            "gi15|100|1825e5", _
            "gi14|100|fafbff", _
            "gi13|100|1926e4", _
            "gi12|100|2b1196", _
            "gi09|100|f6f6f8", _
            "gi08|100|eeeeee", _
            "gi06|100|e8e8e8", _
            "gi03|100|1722d2", _
            "gi02|100|1725e0", _
            "gi01|100|091063", _
            "LTW2|100|bcb8d3", _
            "LTW1|100|4b3d8a" _
            )
        End With
        With .AddStep(7.20000, Null, Null)
            .Lights = Array( _
            "gi17|100|000105", _
            "giapron|100|0c0c0c", _
            "gi22|100|101010", _
            "gi20|100|626262", _
            "gi21|100|5a5a5a", _
            "gi19|100|19208a", _
            "gi18|100|010006", _
            "gi16|100|191919", _
            "gi15|100|1827e6", _
            "gi14|100|f8f9fe", _
            "gi13|100|1724e1", _
            "gi12|100|2d129e", _
            "gi10|100|3015a4", _
            "gi09|100|eff0f4", _
            "gi08|100|e2e2e2", _
            "gi07|100|fefefe", _
            "gi06|100|d6d6d6", _
            "gi03|100|1320c2", _
            "gi02|100|1524d8", _
            "gi01|100|090b43", _
            "LTW2|100|aba5c7", _
            "LTW1|100|403089" _
            )
        End With
        With .AddStep(7.23333, Null, Null)
            .Lights = Array( _
            "gi17|100|010100", _
            "giapron|100|1a1a1a", _
            "gi22|100|1c1c1c", _
            "gi20|100|484848", _
            "gi21|100|3e3e3e", _
            "gi19|100|171e9f", _
            "gi18|100|03010c", _
            "gi16|100|0b0b0b", _
            "gi14|100|f6f7fd", _
            "gi13|100|1824db", _
            "gi12|100|2e13a2", _
            "gi10|100|3015a2", _
            "gi09|100|e5e6ea", _
            "gi08|100|d3d3d3", _
            "gi07|100|fbfbfb", _
            "gi06|100|bbbbbb", _
            "gi05|100|fefefe", _
            "gi04|100|1726e5", _
            "gi03|100|121dac", _
            "gi02|100|1421c8", _
            "gi01|100|04062d", _
            "LTW2|100|988fbb", _
            "LTW1|100|3a2589" _
            )
        End With
        With .AddStep(7.26667, Null, Null)
            .Lights = Array( _
            "gi17|100|000000", _
            "giapron|100|363636", _
            "gi22|100|2c2c2c", _
            "gi20|100|323232", _
            "gi21|100|252525", _
            "gi19|100|141fad", _
            "gi18|100|050213", _
            "gi16|100|030303", _
            "gi15|100|1826e7", _
            "gi14|100|f4f4fe", _
            "gi13|100|1623d0", _
            "gi12|100|2f13a6", _
            "gi11|100|2f13a6", _
            "gi10|100|3218a0", _
            "gi09|100|d7d7df", _
            "gi08|100|bfbfbf", _
            "gi07|100|f6f6f6", _
            "gi06|100|9a9a9a", _
            "gi05|100|fcfcfc", _
            "gi03|100|0f1793", _
            "gi02|100|121cae", _
            "gi01|100|02041a", _
            "LTW2|100|867cb1", _
            "LTW1|100|351f8f" _
            )
        End With
        With .AddStep(7.30000, Null, Null)
            .Lights = Array( _
            "giapron|100|5f5f5f", _
            "gi22|100|444444", _
            "gi20|100|212121", _
            "gi21|100|151515", _
            "gi19|100|141fbc", _
            "gi18|100|08041e", _
            "gi16|100|010101", _
            "gi14|100|ebedfa", _
            "gi13|100|1220c1", _
            "gi10|100|341aa0", _
            "gi09|100|c5c6d2", _
            "gi08|100|a8a8a8", _
            "gi07|100|ededed", _
            "gi06|100|7b7b7b", _
            "gi05|100|f6f6f6", _
            "gi04|100|1725df", _
            "gi03|100|0c1478", _
            "gi02|100|0f1891", _
            "gi01|100|030210", _
            "LTW2|100|7368a4", _
            "LTW1|100|301893" _
            )
        End With
        With .AddStep(7.33333, Null, Null)
            .Lights = Array( _
            "giapron|100|909090", _
            "gi22|100|616161", _
            "gi20|100|161616", _
            "gi21|100|0b0b0b", _
            "gi19|100|1523cb", _
            "gi18|100|0d042d", _
            "gi16|100|000000", _
            "gi14|100|e7e8f8", _
            "gi13|100|121cac", _
            "gi12|100|2f12a8", _
            "gi10|100|3b22a0", _
            "gi09|100|b1b3c2", _
            "gi08|100|8f8f8f", _
            "gi07|100|dfdfdf", _
            "gi06|100|595959", _
            "gi05|100|eaeaea", _
            "gi04|100|1524d7", _
            "gi03|100|090f5f", _
            "gi02|100|0c126e", _
            "gi01|100|010207", _
            "LTW2|100|60539b", _
            "LTW1|100|2f1696" _
            )
        End With
        With .AddStep(7.36667, Null, Null)
            .Lights = Array( _
            "giapron|100|c1c1c1", _
            "gi22|100|848484", _
            "gi20|100|0c0c0c", _
            "gi21|100|050505", _
            "gi19|100|1723d6", _
            "gi18|100|120740", _
            "gi14|100|dcdef3", _
            "gi13|100|0f1994", _
            "gi11|100|2f13a4", _
            "gi10|100|412a9f", _
            "gi09|100|999aaf", _
            "gi08|100|757575", _
            "gi07|100|cbcbcb", _
            "gi06|100|404040", _
            "gi05|100|d7d7d7", _
            "gi04|100|1523ce", _
            "gi03|100|080b44", _
            "gi02|100|080d50", _
            "gi01|100|010103", _
            "LTW2|100|524396", _
            "LTW1|100|2e149b" _
            )
        End With
        With .AddStep(7.40000, Null, Null)
            .Lights = Array( _
            "giapron|100|e3e3e3", _
            "gi22|100|a6a6a6", _
            "gi20|100|070707", _
            "gi21|100|010101", _
            "gi19|100|1824dc", _
            "gi18|100|180a57", _
            "gi14|100|d1d2f0", _
            "gi13|100|0d147b", _
            "gi11|100|2e13a2", _
            "gi10|100|4935a4", _
            "gi09|100|8084a0", _
            "gi08|100|5e5d62", _
            "gi07|100|b3b3b3", _
            "gi06|100|292929", _
            "gi05|100|bdbdbd", _
            "gi04|100|141eba", _
            "gi03|100|040830", _
            "gi02|100|060937", _
            "gi01|100|000000", _
            "LTW2|100|463590", _
            "LTW1|100|2f149f" _
            )
        End With
        With .AddStep(7.43333, Null, Null)
            .Lights = Array( _
            "giapron|100|f6f6f6", _
            "gi22|100|c6c6c6", _
            "gi20|100|030305", _
            "gi21|100|000000", _
            "gi19|100|1825e5", _
            "gi18|100|1e0c6e", _
            "gi14|100|c3c3e7", _
            "gi13|100|09105f", _
            "gi11|100|2c119b", _
            "gi10|100|5442a8", _
            "gi09|100|696b8f", _
            "gi08|100|49484d", _
            "gi07|100|979797", _
            "gi06|100|1b1b1b", _
            "gi05|100|9b9b9b", _
            "gi04|100|111ba8", _
            "gi03|100|040522", _
            "gi02|100|050523", _
            "LTW2|100|3c2992", _
            "LTW1|100|2e13a1" _
            )
        End With
        With .AddStep(7.46667, Null, Null)
            .Lights = Array( _
            "giapron|100|fdfdfd", _
            "gi22|100|e0e0e0", _
            "gi20|100|010005", _
            "gi19|100|1926e6", _
            "gi18|100|240f84", _
            "gi14|100|b0b3e0", _
            "gi13|100|070d4a", _
            "gi11|100|2b1294", _
            "gi10|100|6454af", _
            "gi09|100|525687", _
            "gi08|100|36353b", _
            "gi07|100|7b7b7b", _
            "gi06|100|101010", _
            "gi05|100|7a7a7a", _
            "gi04|100|0e178f", _
            "gi03|100|030416", _
            "gi02|100|020316", _
            "LTW2|100|382093", _
            "LTW1|100|2f13a5" _
            )
        End With
        With .AddStep(7.50000, Null, Null)
            .Lights = Array( _
            "giapron|100|ffffff", _
            "gi22|100|efefef", _
            "gi20|100|04020c", _
            "gi19|100|1827e6", _
            "gi18|100|291090", _
            "gi15|100|1827e6", _
            "gi14|100|9ea0d8", _
            "gi13|100|070a37", _
            "gi11|100|2a128c", _
            "gi10|100|7566b6", _
            "gi09|100|414583", _
            "gi08|100|282633", _
            "gi07|100|616161", _
            "gi06|100|090909", _
            "gi05|100|595959", _
            "gi04|100|0c1376", _
            "gi03|100|060612", _
            "gi02|100|02020c", _
            "LTW2|100|331b95", _
            "LTW1|100|2f13a6" _
            )
        End With
        With .AddStep(7.53333, Null, Null)
            .Lights = Array( _
            "gi22|100|fafafa", _
            "gi20|100|040210", _
            "gi19|100|1826e7", _
            "gi18|100|2d129f", _
            "gi15|100|1825e3", _
            "gi14|100|878bce", _
            "gi13|100|080829", _
            "gi11|100|271384", _
            "gi10|100|8578bf", _
            "gi09|100|323781", _
            "gi08|100|1e1b2e", _
            "gi07|100|494949", _
            "gi06|100|040404", _
            "gi05|100|3e3e3e", _
            "gi04|100|090f5c", _
            "gi03|100|07080d", _
            "gi02|100|000009", _
            "gi01|100|030303", _
            "LTW2|100|301798" _
            )
        End With
        With .AddStep(7.56667, Null, Null)
            .Lights = Array( _
            "gi22|100|fefefe", _
            "gi20|100|060318", _
            "gi18|100|2f14a3", _
            "gi15|100|1725df", _
            "gi14|100|6f74c5", _
            "gi13|100|0a0a22", _
            "gi11|100|28167a", _
            "gi10|100|968bc7", _
            "gi09|100|262c85", _
            "gi08|100|1a162d", _
            "gi07|100|353535", _
            "gi06|100|010101", _
            "gi05|100|272727", _
            "gi04|100|080d4b", _
            "gi03|100|0d0e10", _
            "gi02|100|000003", _
            "gi01|100|090909", _
            "LTW2|100|2f159b", _
            "LTW1|100|2f12a8" _
            )
        End With
        With .AddStep(7.60000, Null, Null)
            .Lights = Array( _
            "gi20|100|0a0525", _
            "gi18|100|2f13a6", _
            "gi15|100|1723d7", _
            "gi14|100|5c62c0", _
            "gi13|100|0c0e1c", _
            "gi12|100|2f13a6", _
            "gi11|100|2b1c72", _
            "gi10|100|a89ed2", _
            "gi09|100|1f268f", _
            "gi08|100|150d32", _
            "gi07|100|242426", _
            "gi06|100|000000", _
            "gi05|100|181818", _
            "gi04|100|0a0c3b", _
            "gi03|100|131218", _
            "gi02|100|000000", _
            "gi01|100|0f0f0f", _
            "LTW2|100|2e139e" _
            )
        End With
        With .AddStep(7.63333, Null, Null)
            .Lights = Array( _
            "gi22|100|ffffff", _
            "gi20|100|0f0537", _
            "gi21|100|010005", _
            "gi15|100|1521ca", _
            "gi14|100|4950be", _
            "gi13|100|12131d", _
            "gi11|100|31246e", _
            "gi10|100|b6addb", _
            "gi09|100|1a239d", _
            "gi08|100|150b3d", _
            "gi07|100|18181a", _
            "gi06|100|010005", _
            "gi05|100|0e0e0e", _
            "gi04|100|0a0e2e", _
            "gi03|100|212121", _
            "gi02|100|010101", _
            "gi01|100|1a1a1a", _
            "LTW2|100|2e13a1" _
            )
        End With
        With .AddStep(7.66667, Null, Null)
            .Lights = Array( _
            "giapron|100|fcfcfc", _
            "gi20|100|140847", _
            "gi18|100|2f12a8", _
            "gi15|100|121db5", _
            "gi14|100|3942be", _
            "gi13|100|1a1b1f", _
            "gi11|100|392d6b", _
            "gi10|100|c6bee6", _
            "gi09|100|1821ac", _
            "gi08|100|160b47", _
            "gi07|100|111015", _
            "gi05|100|070707", _
            "gi04|100|0f1025", _
            "gi03|100|303030", _
            "gi01|100|2c2c2c", _
            "LTW2|100|2e12a4" _
            )
        End With
        With .AddStep(7.70000, Null, Null)
            .Lights = Array( _
            "giapron|100|f4f4f4", _
            "gi20|100|1a0b5e", _
            "gi21|100|03010d", _
            "gi15|100|101a9d", _
            "gi14|100|2e37c0", _
            "gi13|100|28282a", _
            "gi12|100|2e12a3", _
            "gi11|100|473d71", _
            "gi10|100|cfcaea", _
            "gi09|100|1620bd", _
            "gi08|100|190b54", _
            "gi07|100|0b0a11", _
            "gi06|100|030209", _
            "gi05|100|030303", _
            "gi04|100|161827", _
            "gi03|100|424242", _
            "gi02|100|040404", _
            "gi01|100|434343", _
            "LTW2|100|2f13a6" _
            )
        End With
        With .AddStep(7.73333, Null, Null)
            .Lights = Array( _
            "gi17|100|030303", _
            "giapron|100|dedede", _
            "gi20|100|1f0d72", _
            "gi21|100|050217", _
            "gi15|100|0d1581", _
            "gi14|100|2630c5", _
            "gi13|100|373739", _
            "gi12|100|2d129e", _
            "gi11|100|574f78", _
            "gi10|100|d7d2ee", _
            "gi09|100|1622c5", _
            "gi08|100|1c0c65", _
            "gi07|100|0a0814", _
            "gi06|100|040210", _
            "gi05|100|000000", _
            "gi04|100|21212c", _
            "gi03|100|5b5b5b", _
            "gi02|100|080808", _
            "gi01|100|626262" _
            )
        End With
        With .AddStep(7.76667, Null, Null)
            .Lights = Array( _
            "gi17|100|0a0a0a", _
            "giapron|100|b7b7b7", _
            "gi20|100|270f86", _
            "gi21|100|0b0426", _
            "gi16|100|010103", _
            "gi15|100|0b1169", _
            "gi14|100|1f2bcc", _
            "gi13|100|4b4b4b", _
            "gi12|100|2c1298", _
            "gi11|100|6d6685", _
            "gi10|100|e0ddf2", _
            "gi09|100|1622d0", _
            "gi08|100|220c77", _
            "gi07|100|070416", _
            "gi06|100|060219", _
            "gi04|100|2d2e33", _
            "gi03|100|757575", _
            "gi02|100|101010", _
            "gi01|100|828282" _
            )
        End With
        With .AddStep(7.80000, Null, Null)
            .Lights = Array( _
            "gi17|100|181818", _
            "giapron|100|868686", _
            "gi20|100|291092", _
            "gi21|100|100639", _
            "gi16|100|020109", _
            "gi15|100|080d4d", _
            "gi14|100|1c28d2", _
            "gi13|100|616161", _
            "gi12|100|280f8d", _
            "gi11|100|827e96", _
            "gi10|100|e6e4f4", _
            "gi09|100|1723d9", _
            "gi08|100|260e85", _
            "gi07|100|08041d", _
            "gi06|100|0c0429", _
            "gi04|100|404041", _
            "gi03|100|929292", _
            "gi02|100|1c1c1c", _
            "gi01|100|a6a6a6" _
            )
        End With
        With .AddStep(7.83333, Null, Null)
            .Lights = Array( _
            "gi17|100|323232", _
            "giapron|100|575757", _
            "gi22|100|fefefe", _
            "gi20|100|2d129e", _
            "gi21|100|170954", _
            "gi16|100|050215", _
            "gi15|100|050936", _
            "gi14|100|1b26d8", _
            "gi13|100|7a7a7a", _
            "gi12|100|240d7e", _
            "gi11|100|9a97a8", _
            "gi10|100|edebf9", _
            "gi09|100|1725df", _
            "gi08|100|291092", _
            "gi07|100|0c0429", _
            "gi06|100|11073b", _
            "gi05|100|000004", _
            "gi04|100|555555", _
            "gi03|100|afafaf", _
            "gi02|100|2d2d2d", _
            "gi01|100|c6c6c6", _
            "LTW2|100|2f12a8" _
            )
        End With
        With .AddStep(7.86667, Null, Null)
            .Lights = Array( _
            "gi17|100|595959", _
            "giapron|100|313131", _
            "gi22|100|fbfbfb", _
            "gi20|100|2e13a2", _
            "gi21|100|1e0d6e", _
            "gi16|100|0a0426", _
            "gi15|100|050626", _
            "gi14|100|1826de", _
            "gi13|100|969696", _
            "gi12|100|1f0c6d", _
            "gi11|100|b0aebc", _
            "gi10|100|f1effa", _
            "gi09|100|1825e3", _
            "gi08|100|2c129a", _
            "gi07|100|100639", _
            "gi06|100|160950", _
            "gi05|100|010005", _
            "gi04|100|6c6c6c", _
            "gi03|100|c9c9c9", _
            "gi02|100|444444", _
            "gi01|100|dfdfdf" _
            )
        End With
        With .AddStep(7.90000, Null, Null)
            .Lights = Array( _
            "gi17|100|8a8a8a", _
            "giapron|100|181818", _
            "gi22|100|f5f5f5", _
            "gi20|100|2f13a6", _
            "gi21|100|260f84", _
            "gi19|100|1926e4", _
            "gi18|100|2f13a6", _
            "gi16|100|130841", _
            "gi15|100|020419", _
            "gi14|100|1826e1", _
            "gi13|100|afafaf", _
            "gi12|100|18095b", _
            "gi11|100|c5c4cd", _
            "gi10|100|f3f2fb", _
            "gi09|100|1926e4", _
            "gi08|100|2d12a1", _
            "gi07|100|14084a", _
            "gi06|100|1d0c68", _
            "gi05|100|03010c", _
            "gi04|100|868686", _
            "gi03|100|dddddd", _
            "gi02|100|606060", _
            "gi01|100|efefef" _
            )
        End With
        With .AddStep(7.93333, Null, Null)
            .Lights = Array( _
            "gi17|100|bababa", _
            "giapron|100|0a0a0a", _
            "gi22|100|e8e8e8", _
            "gi20|100|2f13a7", _
            "gi21|100|2a1096", _
            "gi19|100|1724e2", _
            "gi18|100|2e12a3", _
            "gi16|100|1b0b63", _
            "gi15|100|00020f", _
            "gi14|100|1725e5", _
            "gi13|100|c7c7c7", _
            "gi12|100|150949", _
            "gi11|100|d6d5dc", _
            "gi10|100|f5f3fd", _
            "gi09|100|1826e7", _
            "gi08|100|2f14a3", _
            "gi07|100|1a0b60", _
            "gi06|100|240e7e", _
            "gi05|100|040210", _
            "gi04|100|a1a1a1", _
            "gi03|100|ededed", _
            "gi02|100|828282", _
            "gi01|100|f9f9f9" _
            )
        End With
        With .AddStep(7.96667, Null, Null)
            .Lights = Array( _
            "gi17|100|e1e1e1", _
            "giapron|100|030303", _
            "gi22|100|d3d3d3", _
            "gi20|100|2f12a8", _
            "gi21|100|2e13a2", _
            "gi19|100|1824dc", _
            "gi18|100|2d129d", _
            "gi16|100|260f84", _
            "gi15|100|02020a", _
            "gi14|100|1726e5", _
            "gi13|100|dbdbdb", _
            "gi12|100|12083c", _
            "gi11|100|e5e5e7", _
            "gi10|100|f5f3fc", _
            "gi08|100|2f13a6", _
            "gi07|100|200d74", _
            "gi06|100|280f8f", _
            "gi05|100|07031b", _
            "gi04|100|b9b9b9", _
            "gi03|100|f7f7f7", _
            "gi02|100|a6a6a6", _
            "gi01|100|fdfdfd", _
            "LTW1|100|2f12a7" _
            )
        End With
        With .AddStep(8.00000, Null, Null)
            .Lights = Array( _
            "gi17|100|f5f5f5", _
            "giapron|100|000000", _
            "gi22|100|b6b6b6", _
            "gi21|100|2f13a6", _
            "gi19|100|1724d5", _
            "gi18|100|291090", _
            "gi16|100|2c129a", _
            "gi15|100|05060b", _
            "gi14|100|1827e6", _
            "gi13|100|e9e9e9", _
            "gi12|100|11092e", _
            "gi11|100|f0eff4", _
            "gi10|100|f5f5fe", _
            "gi07|100|250e81", _
            "gi06|100|2c129a", _
            "gi05|100|0c042b", _
            "gi04|100|cfcfcf", _
            "gi03|100|fcfcfc", _
            "gi02|100|c5c5c5", _
            "gi01|100|ffffff", _
            "LTW1|100|2f13a6" _
            )
        End With
        With .AddStep(8.03333, Null, Null)
            .Lights = Array( _
            "gi17|100|fdfdfd", _
            "gi22|100|949494", _
            "gi21|100|2f12a8", _
            "gi19|100|1521cb", _
            "gi18|100|230f81", _
            "gi16|100|2f14a3", _
            "gi15|100|0a0a0c", _
            "gi14|100|1826e7", _
            "gi13|100|f4f4f4", _
            "gi12|100|120f29", _
            "gi11|100|f6f5fa", _
            "gi10|100|f5f5fd", _
            "gi07|100|291090", _
            "gi06|100|2e12a3", _
            "gi05|100|12073f", _
            "gi04|100|e1e1e1", _
            "gi03|100|fdfdfd", _
            "gi02|100|dedede" _
            )
        End With
        With .AddStep(8.06667, Null, Null)
            .Lights = Array( _
            "gi17|100|ffffff", _
            "gi22|100|6e6e6e", _
            "gi19|100|121fbc", _
            "gi18|100|1d0c6b", _
            "gi16|100|2f13a6", _
            "gi15|100|0f0f10", _
            "gi13|100|fafafa", _
            "gi12|100|181527", _
            "gi11|100|fbfbfd", _
            "gi10|100|f5f5ff", _
            "gi08|100|2f12a8", _
            "gi07|100|2c129a", _
            "gi06|100|2f13a6", _
            "gi05|100|180a55", _
            "gi04|100|eeeeee", _
            "gi03|100|ffffff", _
            "gi02|100|efefef" _
            )
        End With
        With .AddStep(8.10000, Null, Null)
            .Lights = Array( _
            "gi22|100|505050", _
            "gi19|100|121cac", _
            "gi18|100|170a54", _
            "gi16|100|2f12a8", _
            "gi15|100|191919", _
            "gi13|100|fdfdfd", _
            "gi12|100|1f1d2a", _
            "gi11|100|fdfdfd", _
            "gi10|100|f4f4fe", _
            "gi07|100|2e12a3", _
            "gi05|100|1e0c70", _
            "gi04|100|f7f7f7", _
            "gi02|100|f8f8f8", _
            "LTW1|100|2e13a3" _
            )
        End With
        With .AddStep(8.13333, Null, Null)
            .Lights = Array( _
            "gi22|100|353535", _
            "gi19|100|111b98", _
            "gi18|100|120740", _
            "gi15|100|272727", _
            "gi13|100|fefefe", _
            "gi12|100|2d2c34", _
            "gi11|100|fefefe", _
            "gi10|100|eff1fe", _
            "gi07|100|2f13a6", _
            "gi06|100|2f12a8", _
            "gi05|100|250e82", _
            "gi04|100|fbfbfb", _
            "gi02|100|fdfdfd", _
            "LTW1|100|2e13a2" _
            )
        End With
        With .AddStep(8.16667, Null, Null)
            .Lights = Array( _
            "gi22|100|222222", _
            "gi19|100|111985", _
            "gi18|100|0c042c", _
            "gi15|100|3b3b3b", _
            "gi13|100|ffffff", _
            "gi12|100|3d3c42", _
            "gi11|100|ffffff", _
            "gi10|100|eceefd", _
            "gi05|100|2a1095", _
            "gi04|100|fdfdfd", _
            "gi02|100|ffffff", _
            "LTW1|100|2e139d" _
            )
        End With
        With .AddStep(8.20000, Null, Null)
            .Lights = Array( _
            "gi22|100|141414", _
            "gi20|100|2f13a6", _
            "gi19|100|111873", _
            "gi18|100|080420", _
            "gi15|100|4e4e4e", _
            "gi12|100|535257", _
            "gi10|100|e8eafd", _
            "gi07|100|2f12a8", _
            "gi05|100|2d129f", _
            "gi04|100|fefefe", _
            "LTW2|100|2f13a7", _
            "LTW1|100|2f1699" _
            )
        End With
        With .AddStep(8.23333, Null, Null)
            .Lights = Array( _
            "gi17|100|fdfdfd", _
            "gi22|100|0a0a0a", _
            "gi19|100|131961", _
            "gi18|100|050212", _
            "gi16|100|2f13a6", _
            "gi15|100|696969", _
            "gi12|100|6d6d6d", _
            "gi10|100|e1e3fc", _
            "gi05|100|2f13a6", _
            "gi04|100|ffffff", _
            "gi01|100|fefefe", _
            "LTW2|100|2f13a6", _
            "LTW1|100|301893" _
            )
        End With
        With .AddStep(8.26667, Null, Null)
            .Lights = Array( _
            "gi17|100|f6f6f6", _
            "gi22|100|050505", _
            "gi20|100|2e13a2", _
            "gi21|100|2f13a6", _
            "gi19|100|181d57", _
            "gi18|100|03010c", _
            "gi16|100|3013a8", _
            "gi15|100|868686", _
            "gi12|100|898989", _
            "gi10|100|dbdcfb", _
            "gi01|100|fbfbfb", _
            "LTW1|100|341d92" _
            )
        End With
        With .AddStep(8.30000, Null, Null)
            .Lights = Array( _
            "gi17|100|e1e1e1", _
            "gi22|100|010101", _
            "gi20|100|2c129a", _
            "gi21|100|2e12a3", _
            "gi19|100|202350", _
            "gi18|100|020106", _
            "gi16|100|2d129d", _
            "gi15|100|a2a2a2", _
            "gi12|100|a4a4a4", _
            "gi10|100|d0d4f7", _
            "gi05|100|2f12a8", _
            "gi01|100|f4f4f4", _
            "LTW1|100|38238e" _
            )
        End With
        With .AddStep(8.33333, Null, Null)
            .Lights = Array( _
            "gi17|100|bdbdbd", _
            "gi20|100|291091", _
            "gi21|100|2c129a", _
            "gi19|100|2b2c4e", _
            "gi18|100|000004", _
            "gi16|100|270f87", _
            "gi15|100|bfbfbf", _
            "gi12|100|bebebe", _
            "gi10|100|c7caf4", _
            "gi08|100|2f13a6", _
            "gi06|100|2f13a6", _
            "gi03|100|fefefe", _
            "gi01|100|e7e7e7", _
            "LTW2|100|2f14a1", _
            "LTW1|100|412e8e" _
            )
        End With
        With .AddStep(8.36667, Null, Null)
            .Lights = Array( _
            "gi17|100|8a8a8a", _
            "gi22|100|000000", _
            "gi20|100|250e83", _
            "gi21|100|270f8c", _
            "gi19|100|393b54", _
            "gi18|100|010103", _
            "gi16|100|1d0c6c", _
            "gi15|100|d6d6d6", _
            "gi12|100|d4d4d4", _
            "gi10|100|bbbef3", _
            "gi09|100|1726e5", _
            "gi03|100|fcfcfc", _
            "gi01|100|cfcfcf", _
            "LTW2|100|2f14a0", _
            "LTW1|100|4c3d8f" _
            )
        End With
        With .AddStep(8.40000, Null, Null)
            .Lights = Array( _
            "gi17|100|595959", _
            "gi20|100|1f0b6b", _
            "gi21|100|200e74", _
            "gi19|100|484b5e", _
            "gi18|100|040404", _
            "gi16|100|140945", _
            "gi15|100|e7e7e7", _
            "gi12|100|e6e6e6", _
            "gi10|100|adb1f0", _
            "gi09|100|1825e3", _
            "gi08|100|2e12a5", _
            "gi06|100|2e12a5", _
            "gi03|100|f9f9f9", _
            "gi02|100|fefefe", _
            "gi01|100|b1b1b1", _
            "LTW2|100|2f159d", _
            "LTW1|100|594c93" _
            )
        End With
        With .AddStep(8.43333, Null, Null)
            .Lights = Array( _
            "gi17|100|323232", _
            "gi22|100|000004", _
            "gi20|100|190a5b", _
            "gi21|100|190a5d", _
            "gi19|100|5d5c6a", _
            "gi18|100|0a0a0a", _
            "gi16|100|0c042b", _
            "gi15|100|f3f3f3", _
            "gi14|100|1827e6", _
            "gi12|100|f2f2f2", _
            "gi10|100|9da1e9", _
            "gi09|100|1725de", _
            "gi08|100|2d129f", _
            "gi06|100|2d129f", _
            "gi03|100|f2f2f2", _
            "gi02|100|fcfcfc", _
            "gi01|100|8e8e8e", _
            "LTW2|100|31189a", _
            "LTW1|100|6a5f9b" _
            )
        End With
        With .AddStep(8.46667, Null, Null)
            .Lights = Array( _
            "gi17|100|171717", _
            "giapron|100|010103", _
            "gi22|100|010005", _
            "gi20|100|130844", _
            "gi21|100|12073f", _
            "gi19|100|72727b", _
            "gi18|100|141414", _
            "gi16|100|060316", _
            "gi15|100|fafafa", _
            "gi13|100|fdfdfd", _
            "gi12|100|f9f9f9", _
            "gi10|100|898fe3", _
            "gi09|100|1724da", _
            "gi08|100|2c129a", _
            "gi07|100|2f13a6", _
            "gi06|100|2b1196", _
            "gi03|100|e6e6e6", _
            "gi02|100|f7f7f7", _
            "gi01|100|6b6b6b", _
            "LTW2|100|331b97", _
            "LTW1|100|8076aa" _
            )
        End With
        With .AddStep(8.50000, Null, Null)
            .Lights = Array( _
            "gi17|100|0a0a0a", _
            "giapron|100|020109", _
            "gi22|100|03020a", _
            "gi20|100|0e0532", _
            "gi21|100|0b052c", _
            "gi19|100|8c8b91", _
            "gi18|100|202020", _
            "gi16|100|02010a", _
            "gi15|100|fefefe", _
            "gi14|100|1926e4", _
            "gi13|100|fbfbfb", _
            "gi12|100|fdfdfd", _
            "gi11|100|fefefe", _
            "gi10|100|797fdf", _
            "gi09|100|1723d1", _
            "gi08|100|291090", _
            "gi06|100|260f85", _
            "gi04|100|fefefe", _
            "gi03|100|d4d4d4", _
            "gi02|100|ececec", _
            "gi01|100|4b4b4b", _
            "LTW2|100|3a2395", _
            "LTW1|100|938ab5" _
            )
        End With
        With .AddStep(8.53333, Null, Null)
            .Lights = Array( _
            "gi17|100|040404", _
            "giapron|100|040210", _
            "gi22|100|040210", _
            "gi20|100|0a0525", _
            "gi21|100|07031b", _
            "gi19|100|a3a3a5", _
            "gi18|100|313131", _
            "gi16|100|000004", _
            "gi14|100|1725e1", _
            "gi13|100|f6f6f6", _
            "gi12|100|fefefe", _
            "gi11|100|fcfcfe", _
            "gi10|100|656ddb", _
            "gi09|100|1522c7", _
            "gi08|100|260f84", _
            "gi07|100|2f13a4", _
            "gi06|100|210c70", _
            "gi05|100|2f13a6", _
            "gi04|100|fdfdfd", _
            "gi03|100|bdbdbd", _
            "gi02|100|d8d8d8", _
            "gi01|100|313131", _
            "LTW2|100|3f2996", _
            "LTW1|100|a9a2c5" _
            )
        End With
        With .AddStep(8.56667, Null, Null)
            .Lights = Array( _
            "gi17|100|000000", _
            "giapron|100|090423", _
            "gi22|100|08041a", _
            "gi20|100|060316", _
            "gi21|100|050311", _
            "gi19|100|bababc", _
            "gi18|100|4b4b4b", _
            "gi16|100|000000", _
            "gi15|100|ffffff", _
            "gi14|100|1725dd", _
            "gi13|100|ececec", _
            "gi12|100|ffffff", _
            "gi11|100|f9f9fb", _
            "gi10|100|525bd8", _
            "gi09|100|1623ba", _
            "gi08|100|220d78", _
            "gi07|100|2d12a0", _
            "gi06|100|190b5c", _
            "gi05|100|2f13a4", _
            "gi04|100|fafafa", _
            "gi03|100|a0a0a0", _
            "gi02|100|bebebe", _
            "gi01|100|1e1e1e", _
            "LTW2|100|493894", _
            "LTW1|100|bbb7d1" _
            )
        End With
        With .AddStep(8.60000, Null, Null)
            .Lights = Array( _
            "giapron|100|10063b", _
            "gi22|100|0c042d", _
            "gi20|100|04020f", _
            "gi21|100|020107", _
            "gi19|100|cecece", _
            "gi18|100|6b6b6b", _
            "gi14|100|1825d6", _
            "gi13|100|dfdfdf", _
            "gi11|100|f2f3f7", _
            "gi10|100|444dd5", _
            "gi09|100|1822ae", _
            "gi08|100|1d0d67", _
            "gi07|100|2b1198", _
            "gi06|100|130743", _
            "gi05|100|2d129f", _
            "gi04|100|f5f5f5", _
            "gi03|100|828282", _
            "gi02|100|9d9d9d", _
            "gi01|100|111111", _
            "LTW2|100|57489b", _
            "LTW1|100|cac7dc" _
            )
        End With
        With .AddStep(8.63333, Null, Null)
            .Lights = Array( _
            "giapron|100|1a0b5e", _
            "gi22|100|120740", _
            "gi20|100|01000a", _
            "gi21|100|000004", _
            "gi19|100|dddddd", _
            "gi18|100|8e8e8e", _
            "gi14|100|1825d1", _
            "gi13|100|cdcdcd", _
            "gi11|100|e9eaee", _
            "gi10|100|3842d7", _
            "gi09|100|1a24a0", _
            "gi08|100|1b0d59", _
            "gi07|100|280f8e", _
            "gi06|100|0d0532", _
            "gi05|100|2b1198", _
            "gi04|100|ececec", _
            "gi03|100|676767", _
            "gi02|100|7b7b7b", _
            "gi01|100|0a0a0a", _
            "LTW2|100|675aa3", _
            "LTW1|100|dad6e7" _
            )
        End With
        With .AddStep(8.66667, Null, Null)
            .Lights = Array( _
            "giapron|100|240e7d", _
            "gi22|100|180a58", _
            "gi20|100|040308", _
            "gi21|100|010102", _
            "gi19|100|eaeaea", _
            "gi18|100|b1b1b1", _
            "gi14|100|1825c8", _
            "gi13|100|b6b6b6", _
            "gi11|100|dcdde2", _
            "gi10|100|2c37d5", _
            "gi09|100|202892", _
            "gi08|100|1a0f49", _
            "gi07|100|250e80", _
            "gi06|100|090520", _
            "gi05|100|270f88", _
            "gi04|100|dedede", _
            "gi03|100|4d4d4d", _
            "gi02|100|595959", _
            "gi01|100|040404", _
            "LTW2|100|7a6fac", _
            "LTW1|100|e4e2ef" _
            )
        End With
        With .AddStep(8.70000, Null, Null)
            .Lights = Array( _
            "giapron|100|2b1196", _
            "gi22|100|1f0d72", _
            "gi20|100|07070a", _
            "gi21|100|000000", _
            "gi19|100|f4f4f4", _
            "gi18|100|cfcfcf", _
            "gi14|100|1d27be", _
            "gi13|100|9c9c9c", _
            "gi11|100|cbcbd5", _
            "gi10|100|2631d8", _
            "gi09|100|272e88", _
            "gi08|100|1c1244", _
            "gi07|100|1f0c6a", _
            "gi06|100|050215", _
            "gi05|100|210c72", _
            "gi04|100|cdcdcd", _
            "gi03|100|373737", _
            "gi02|100|3e3e3e", _
            "gi01|100|010101", _
            "LTW2|100|8d83b7", _
            "LTW1|100|edecf4" _
            )
        End With
        With .AddStep(8.73333, Null, Null)
            .Lights = Array( _
            "giapron|100|2e12a3", _
            "gi22|100|260f85", _
            "gi20|100|101011", _
            "gi19|100|f9f9f9", _
            "gi18|100|e5e5e5", _
            "gi14|100|1f2ab2", _
            "gi13|100|838383", _
            "gi11|100|b7b9c6", _
            "gi10|100|202cda", _
            "gi09|100|313884", _
            "gi08|100|20193d", _
            "gi07|100|190a5b", _
            "gi06|100|04020d", _
            "gi05|100|1a0b5c", _
            "gi04|100|b6b6b6", _
            "gi03|100|262626", _
            "gi02|100|262626", _
            "gi01|100|000000", _
            "LTW2|100|a198c4", _
            "LTW1|100|f2f1f9" _
            )
        End With
        With .AddStep(8.76667, Null, Null)
            .Lights = Array( _
            "giapron|100|2f13a6", _
            "gi22|100|2a1095", _
            "gi20|100|1a1a1a", _
            "gi19|100|fcfcfc", _
            "gi18|100|f3f3f3", _
            "gi14|100|252fab", _
            "gi13|100|676767", _
            "gi11|100|a2a4b3", _
            "gi10|100|1e2ade", _
            "gi09|100|3f4582", _
            "gi08|100|28243e", _
            "gi07|100|140846", _
            "gi06|100|010006", _
            "gi05|100|130843", _
            "gi04|100|9c9c9c", _
            "gi03|100|181818", _
            "gi02|100|181818", _
            "LTW2|100|b4add0", _
            "LTW1|100|f6f5fa" _
            )
        End With
        With .AddStep(8.80000, Null, Null)
            .Lights = Array( _
            "giapron|100|2f12a8", _
            "gi22|100|2d12a0", _
            "gi20|100|272727", _
            "gi19|100|fdfdfd", _
            "gi18|100|fbfbfb", _
            "gi14|100|2e36a4", _
            "gi13|100|505050", _
            "gi11|100|888aa3", _
            "gi10|100|1c28e0", _
            "gi09|100|525485", _
            "gi08|100|353244", _
            "gi07|100|100637", _
            "gi06|100|000004", _
            "gi05|100|0e0530", _
            "gi04|100|818181", _
            "gi03|100|101012", _
            "gi02|100|0e0e0e", _
            "LTW2|100|c2bddb", _
            "LTW1|100|f9f8fd" _
            )
        End With
        With .AddStep(8.83333, Null, Null)
            .Lights = Array( _
            "gi22|100|2f13a6", _
            "gi20|100|3d3d3d", _
            "gi19|100|fefefe", _
            "gi18|100|fdfdfd", _
            "gi15|100|fdfdfd", _
            "gi14|100|3a40a0", _
            "gi13|100|3b3b3b", _
            "gi12|100|fefefe", _
            "gi11|100|6f7391", _
            "gi10|100|1927e3", _
            "gi09|100|66698f", _
            "gi08|100|474553", _
            "gi07|100|0c0627", _
            "gi06|100|010103", _
            "gi05|100|09051f", _
            "gi04|100|686868", _
            "gi03|100|09080c", _
            "gi02|100|070707", _
            "gi01|100|010103", _
            "LTW2|100|d1cee3", _
            "LTW1|100|fbfbfe" _
            )
        End With
        With .AddStep(8.86667, Null, Null)
            .Lights = Array( _
            "gi20|100|575757", _
            "gi21|100|040404", _
            "gi19|100|ffffff", _
            "gi18|100|ffffff", _
            "gi15|100|fafafa", _
            "gi14|100|484e9f", _
            "gi13|100|2a292e", _
            "gi12|100|fdfdfd", _
            "gi11|100|595c83", _
            "gi10|100|1726e5", _
            "gi09|100|7c7d9b", _
            "gi08|100|5e5d65", _
            "gi07|100|0c081f", _
            "gi06|100|060606", _
            "gi05|100|050214", _
            "gi04|100|515151", _
            "gi03|100|07060c", _
            "gi02|100|030303", _
            "gi01|100|000003", _
            "LTW2|100|dfdced", _
            "LTW1|100|fdfdff" _
            )
        End With
        With .AddStep(8.90000, Null, Null)
            .Lights = Array( _
            "gi22|100|2f12a8", _
            "gi20|100|747474", _
            "gi21|100|0a0a0a", _
            "gi15|100|f4f4f4", _
            "gi14|100|5a5fa2", _
            "gi13|100|1e1d23", _
            "gi12|100|fafafa", _
            "gi11|100|46497f", _
            "gi09|100|9294ab", _
            "gi08|100|77767e", _
            "gi07|100|0d0a1b", _
            "gi06|100|0c0c0c", _
            "gi05|100|04030b", _
            "gi04|100|3c3c3e", _
            "gi03|100|05040c", _
            "gi02|100|000000", _
            "gi01|100|020109", _
            "LTW2|100|e6e4f2", _
            "LTW1|100|fefeff" _
            )
        End With
        With .AddStep(8.93333, Null, Null)
            .Lights = Array( _
            "giapron|100|2f13a6", _
            "gi20|100|959595", _
            "gi21|100|171717", _
            "gi15|100|e8e8e8", _
            "gi14|100|6d72aa", _
            "gi13|100|16141e", _
            "gi12|100|f2f2f2", _
            "gi11|100|363a7d", _
            "gi10|100|1827e6", _
            "gi09|100|a8aaba", _
            "gi08|100|939395", _
            "gi07|100|12101a", _
            "gi06|100|141414", _
            "gi05|100|010005", _
            "gi04|100|2c2c2e", _
            "gi03|100|050311", _
            "gi01|100|04020f", _
            "LTW2|100|eeecf7", _
            "LTW1|100|ffffff" _
            )
        End With
        With .AddStep(8.96667, Null, Null)
            .Lights = Array( _
            "giapron|100|2f12a6", _
            "gi20|100|b6b6b6", _
            "gi21|100|282828", _
            "gi15|100|d7d7d7", _
            "gi14|100|8386b2", _
            "gi13|100|0f0d1b", _
            "gi12|100|e8e8e8", _
            "gi11|100|2a2f80", _
            "gi09|100|bdbeca", _
            "gi08|100|aeaeb0", _
            "gi07|100|1a191f", _
            "gi06|100|232323", _
            "gi04|100|1f1e24", _
            "gi03|100|07031a", _
            "gi01|100|070419", _
            "LTW2|100|f3f2f9" _
            )
        End With
        With .AddStep(9.00000, Null, Null)
            .Lights = Array( _
            "giapron|100|2c119c", _
            "gi20|100|d1d1d1", _
            "gi21|100|424242", _
            "gi16|100|070707", _
            "gi15|100|c0c0c0", _
            "gi14|100|979abd", _
            "gi13|100|0e0b20", _
            "gi12|100|d7d7d7", _
            "gi11|100|212788", _
            "gi10|100|1826e7", _
            "gi09|100|cfcfd7", _
            "gi08|100|c8c8ca", _
            "gi07|100|29292b", _
            "gi06|100|373737", _
            "gi05|100|000000", _
            "gi04|100|17151e", _
            "gi03|100|0b0426", _
            "gi02|100|010103", _
            "gi01|100|0b0426", _
            "LTW2|100|f5f4fa" _
            )
        End With
        With .AddStep(9.03333, Null, Null)
            .Lights = Array( _
            "gi17|100|000004", _
            "giapron|100|28108b", _
            "gi20|100|e5e5e5", _
            "gi21|100|646464", _
            "gi16|100|121212", _
            "gi15|100|a5a5a5", _
            "gi14|100|acafcc", _
            "gi13|100|0d0827", _
            "gi12|100|c2c2c2", _
            "gi11|100|1b2292", _
            "gi09|100|dedfe3", _
            "gi08|100|dbdbdb", _
            "gi07|100|3a3a3a", _
            "gi06|100|535353", _
            "gi05|100|010101", _
            "gi04|100|110e1f", _
            "gi03|100|0f0635", _
            "gi02|100|010005", _
            "gi01|100|11073c", _
            "LTW2|100|f8f7fd" _
            )
        End With
        With .AddStep(9.06667, Null, Null)
            .Lights = Array( _
            "gi17|100|020106", _
            "giapron|100|1e0c6f", _
            "gi20|100|f3f3f3", _
            "gi21|100|8d8d8d", _
            "gi16|100|272727", _
            "gi15|100|878787", _
            "gi14|100|bec0d9", _
            "gi13|100|0e0631", _
            "gi12|100|a8a8a8", _
            "gi11|100|1820a3", _
            "gi09|100|eaebed", _
            "gi08|100|e9e9e9", _
            "gi07|100|515151", _
            "gi06|100|747474", _
            "gi05|100|040404", _
            "gi04|100|100c22", _
            "gi03|100|130845", _
            "gi02|100|03020a", _
            "gi01|100|170a51", _
            "LTW2|100|fbfaff" _
            )
        End With
        With .AddStep(9.10000, Null, Null)
            .Lights = Array( _
            "gi17|100|040112", _
            "giapron|100|15084b", _
            "gi22|100|2f13a6", _
            "gi20|100|fafafa", _
            "gi21|100|b6b6b6", _
            "gi18|100|fdfdfd", _
            "gi16|100|4b4b4b", _
            "gi15|100|696969", _
            "gi14|100|cecfe0", _
            "gi13|100|12073f", _
            "gi12|100|8c8c8c", _
            "gi11|100|1520b2", _
            "gi09|100|f3f3f5", _
            "gi08|100|f3f3f3", _
            "gi07|100|6d6d6d", _
            "gi06|100|969696", _
            "gi05|100|0b0b0b", _
            "gi04|100|0d072a", _
            "gi03|100|190a5c", _
            "gi02|100|040210", _
            "gi01|100|1d0c6b", _
            "LTW2|100|fdfcff" _
            )
        End With
        With .AddStep(9.13333, Null, Null)
            .Lights = Array( _
            "gi17|100|0b0425", _
            "giapron|100|0d052c", _
            "gi20|100|fdfdfd", _
            "gi21|100|d7d7d7", _
            "gi18|100|fafafa", _
            "gi16|100|7c7c7c", _
            "gi15|100|4f4f4f", _
            "gi14|100|dbddea", _
            "gi13|100|170a51", _
            "gi12|100|707070", _
            "gi11|100|1721c0", _
            "gi09|100|f8f8f8", _
            "gi08|100|fafafa", _
            "gi07|100|8b8b8b", _
            "gi06|100|bababa", _
            "gi05|100|161616", _
            "gi04|100|0f0634", _
            "gi03|100|200c72", _
            "gi02|100|060319", _
            "gi01|100|250e81", _
            "LTW2|100|fdfdff", _
            "LTW1|100|fefeff" _
            )
        End With
        With .AddStep(9.16667, Null, Null)
            .Lights = Array( _
            "gi17|100|12083d", _
            "giapron|100|060317", _
            "gi22|100|2f13a4", _
            "gi20|100|ffffff", _
            "gi21|100|ececec", _
            "gi18|100|f1f1f1", _
            "gi16|100|b1b1b1", _
            "gi15|100|3a3a3a", _
            "gi14|100|e8e8f2", _
            "gi13|100|1c0c63", _
            "gi12|100|565559", _
            "gi11|100|1621c9", _
            "gi09|100|fbfbfb", _
            "gi08|100|fdfdfd", _
            "gi07|100|aaaaaa", _
            "gi06|100|d7d7d7", _
            "gi05|100|242424", _
            "gi04|100|120740", _
            "gi03|100|250e82", _
            "gi02|100|0b052a", _
            "gi01|100|291092", _
            "LTW2|100|ffffff", _
            "LTW1|100|fdfdff" _
            )
        End With
        With .AddStep(9.20000, Null, Null)
            .Lights = Array( _
            "gi17|100|1a0b60", _
            "giapron|100|03020a", _
            "gi22|100|2d129d", _
            "gi21|100|f8f8f8", _
            "gi19|100|fefefe", _
            "gi18|100|e1e1e1", _
            "gi16|100|dcdcdc", _
            "gi15|100|272727", _
            "gi14|100|eff0f5", _
            "gi13|100|200d76", _
            "gi12|100|403f44", _
            "gi11|100|1724d4", _
            "gi09|100|fdfdfd", _
            "gi08|100|fefefe", _
            "gi07|100|c4c4c4", _
            "gi06|100|eaeaea", _
            "gi05|100|3a3a3a", _
            "gi04|100|170952", _
            "gi03|100|291092", _
            "gi02|100|10063a", _
            "gi01|100|2d129e", _
            "LTW1|100|f9f8fd" _
            )
        End With
        With .AddStep(9.23333, Null, Null)
            .Lights = Array( _
            "gi17|100|240f83", _
            "giapron|100|010005", _
            "gi22|100|291091", _
            "gi21|100|fefefe", _
            "gi19|100|fbfbfb", _
            "gi18|100|c9c9c9", _
            "gi16|100|f4f4f4", _
            "gi15|100|191919", _
            "gi14|100|f6f7fb", _
            "gi13|100|270f86", _
            "gi12|100|2c2c34", _
            "gi11|100|1823dd", _
            "gi09|100|fefefe", _
            "gi08|100|ffffff", _
            "gi07|100|dbdbdb", _
            "gi06|100|f6f6f6", _
            "gi05|100|585858", _
            "gi04|100|1b0b63", _
            "gi03|100|2c129a", _
            "gi02|100|170a51", _
            "gi01|100|2f13a6", _
            "LTW1|100|f7f6fd" _
            )
        End With
        With .AddStep(9.26667, Null, Null)
            .Lights = Array( _
            "gi17|100|2b1199", _
            "giapron|100|010102", _
            "gi22|100|240e7d", _
            "gi21|100|ffffff", _
            "gi19|100|f8f8f8", _
            "gi18|100|a9a9a9", _
            "gi16|100|fdfdfd", _
            "gi15|100|121212", _
            "gi14|100|f9fafe", _
            "gi13|100|291090", _
            "gi12|100|1e202c", _
            "gi11|100|1724e2", _
            "gi09|100|ffffff", _
            "gi07|100|eaeaea", _
            "gi06|100|fbfbfb", _
            "gi05|100|7b7b7b", _
            "gi04|100|210c76", _
            "gi03|100|2e12a3", _
            "gi02|100|1d0c6a", _
            "LTW1|100|f3f3fb" _
            )
        End With
        With .AddStep(9.30000, Null, Null)
            .Lights = Array( _
            "gi17|100|2e12a3", _
            "giapron|100|000000", _
            "gi22|100|1c0b69", _
            "gi19|100|f2f2f2", _
            "gi18|100|848484", _
            "gi16|100|ffffff", _
            "gi15|100|0a090e", _
            "gi14|100|fcfcfe", _
            "gi13|100|2c119e", _
            "gi12|100|151829", _
            "gi11|100|1926e4", _
            "gi07|100|f5f5f5", _
            "gi06|100|fefefe", _
            "gi05|100|a2a2a2", _
            "gi04|100|260f84", _
            "gi03|100|2f13a6", _
            "gi02|100|250e7f", _
            "gi01|100|2f12a8", _
            "LTW2|100|fefeff", _
            "LTW1|100|ededf9" _
            )
        End With
        With .AddStep(9.33333, Null, Null)
            .Lights = Array( _
            "gi17|100|2f13a6", _
            "gi22|100|16094f", _
            "gi19|100|eaeaea", _
            "gi18|100|616161", _
            "gi15|100|06050a", _
            "gi14|100|fefeff", _
            "gi13|100|2e12a0", _
            "gi12|100|11112c", _
            "gi11|100|1827e6", _
            "gi07|100|fbfbfb", _
            "gi06|100|ffffff", _
            "gi05|100|c3c3c3", _
            "gi04|100|291093", _
            "gi02|100|291092", _
            "LTW2|100|fcfdff", _
            "LTW1|100|e3e5f3" _
            )
        End With
        With .AddStep(9.36667, Null, Null)
            .Lights = Array( _
            "gi17|100|2f12a8", _
            "gi22|100|10053c", _
            "gi19|100|dddddd", _
            "gi18|100|444444", _
            "gi15|100|04020e", _
            "gi14|100|ffffff", _
            "gi13|100|2f13a7", _
            "gi12|100|0a0e34", _
            "gi11|100|1826e7", _
            "gi07|100|fdfdfd", _
            "gi05|100|dedede", _
            "gi04|100|2d129c", _
            "gi03|100|2f12a8", _
            "gi02|100|2d129d", _
            "LTW2|100|fafbff", _
            "LTW1|100|d7d9ee" _
            )
        End With
        With .AddStep(9.40000, Null, Null)
            .Lights = Array( _
            "gi22|100|0b0426", _
            "gi20|100|fefefe", _
            "gi19|100|ccccce", _
            "gi18|100|2c2c2c", _
            "gi15|100|040210", _
            "gi13|100|2f13a6", _
            "gi12|100|0b0d42", _
            "gi07|100|ffffff", _
            "gi05|100|f0f0f0", _
            "gi04|100|2e12a2", _
            "gi02|100|2e12a4", _
            "LTW2|100|f9fafe", _
            "LTW1|100|cbcce3" _
            )
        End With
        With .AddStep(9.43333, Null, Null)
            .Lights = Array( _
            "gi22|100|07031a", _
            "gi20|100|fdfdfd", _
            "gi19|100|b7b7bb", _
            "gi18|100|1a1a1a", _
            "gi15|100|07031a", _
            "gi12|100|090e50", _
            "gi10|100|1827e6", _
            "gi05|100|f9f9f9", _
            "gi04|100|2f13a6", _
            "gi02|100|2f13a6", _
            "LTW2|100|f6f7fd", _
            "LTW1|100|b8bcda" _
            )
        End With
        With .AddStep(9.46667, Null, Null)
            .Lights = Array( _
            "gi22|100|040210", _
            "gi20|100|f9f9f9", _
            "gi21|100|fdfdfd", _
            "gi19|100|a1a1a2", _
            "gi18|100|0f0f0f", _
            "gi16|100|fcfcfc", _
            "gi15|100|0a0523", _
            "gi13|100|2f12a8", _
            "gi12|100|0b116c", _
            "gi10|100|1726e3", _
            "gi05|100|fdfdfd", _
            "LTW2|100|f0f3fc", _
            "LTW1|100|a6a8cf" _
            )
        End With
        With .AddStep(9.50000, Null, Null)
            .Lights = Array( _
            "gi22|100|020107", _
            "gi20|100|f0f0f0", _
            "gi21|100|fafafa", _
            "gi19|100|89888e", _
            "gi18|100|070707", _
            "gi16|100|f1f1f1", _
            "gi15|100|0e0533", _
            "gi12|100|0e1581", _
            "gi08|100|fefefe", _
            "gi05|100|ffffff", _
            "gi04|100|2f13a7", _
            "gi02|100|2f12a8", _
            "LTW2|100|eaecf8", _
            "LTW1|100|8f92c5" _
            )
        End With
        With .AddStep(9.53333, Null, Null)
            .Lights = Array( _
            "gi17|100|2f13a6", _
            "gi22|100|000003", _
            "gi20|100|e0e0e0", _
            "gi21|100|efefef", _
            "gi19|100|727079", _
            "gi18|100|040404", _
            "gi16|100|d5d5d5", _
            "gi15|100|130844", _
            "gi12|100|10199b", _
            "gi08|100|fdfdfd", _
            "gi06|100|fefefe", _
            "gi04|100|2f12a8", _
            "gi01|100|2f13a6", _
            "LTW2|100|e2e4f4", _
            "LTW1|100|787ebb" _
            )
        End With
        With .AddStep(9.56667, Null, Null)
            .Lights = Array( _
            "gi17|100|2c119b", _
            "gi22|100|010103", _
            "gi20|100|cacaca", _
            "gi21|100|d9d9d9", _
            "gi19|100|5c5a68", _
            "gi18|100|010103", _
            "gi16|100|a8a8a8", _
            "gi15|100|180a5a", _
            "gi12|100|131db1", _
            "gi10|100|1a26de", _
            "gi08|100|fbfbfb", _
            "gi06|100|fdfdfd", _
            "gi01|100|2f13a4", _
            "LTW2|100|d8daf0", _
            "LTW1|100|636ab2" _
            )
        End With
        With .AddStep(9.60000, Null, Null)
            .Lights = Array( _
            "gi17|100|270f87", _
            "gi22|100|000000", _
            "gi20|100|acacac", _
            "gi21|100|bababa", _
            "gi19|100|4a4758", _
            "gi16|100|727272", _
            "gi15|100|1d0c6b", _
            "gi12|100|1421c4", _
            "gi10|100|1a27da", _
            "gi08|100|f7f7f7", _
            "gi06|100|f7f7f7", _
            "gi01|100|2d129e", _
            "LTW2|100|cdceea", _
            "LTW1|100|5056ae" _
            )
        End With
        With .AddStep(9.63333, Null, Null)
            .Lights = Array( _
            "gi17|100|1d0c6b", _
            "gi20|100|8a8a8a", _
            "gi21|100|919191", _
            "gi19|100|3a3650", _
            "gi18|100|010006", _
            "gi16|100|404040", _
            "gi15|100|240f83", _
            "gi12|100|1623d1", _
            "gi10|100|1b28d6", _
            "gi09|100|fefefe", _
            "gi08|100|efefef", _
            "gi06|100|ececec", _
            "gi03|100|2f13a6", _
            "gi01|100|2a1191", _
            "LTW2|100|bfbfe2", _
            "LTW1|100|4146a9" _
            )
        End With
        With .AddStep(9.66667, Null, Null)
            .Lights = Array( _
            "gi17|100|140847", _
            "giapron|100|010101", _
            "gi22|100|040404", _
            "gi20|100|6b6b6b", _
            "gi21|100|696969", _
            "gi19|100|2f284a", _
            "gi18|100|02020e", _
            "gi16|100|222222", _
            "gi15|100|280f8d", _
            "gi12|100|1624dc", _
            "gi10|100|1e2bd1", _
            "gi09|100|fcfcfc", _
            "gi08|100|e3e3e3", _
            "gi07|100|fefefe", _
            "gi06|100|dadada", _
            "gi01|100|250e82", _
            "LTW2|100|aaadda", _
            "LTW1|100|333aab" _
            )
        End With
        With .AddStep(9.70000, Null, Null)
            .Lights = Array( _
            "gi17|100|0c042a", _
            "giapron|100|080808", _
            "gi22|100|080808", _
            "gi20|100|4c4c4c", _
            "gi21|100|444444", _
            "gi19|100|251c48", _
            "gi18|100|020517", _
            "gi16|100|0e0e0e", _
            "gi15|100|2c119b", _
            "gi12|100|1825e1", _
            "gi10|100|2530ca", _
            "gi09|100|f9f9fa", _
            "gi08|100|d1d1d3", _
            "gi07|100|fcfcfc", _
            "gi06|100|bfbfbf", _
            "gi03|100|2e13a3", _
            "gi02|100|2f13a6", _
            "gi01|100|1f0c69", _
            "LTW2|100|9798ce", _
            "LTW1|100|2830b1" _
            )
        End With
        With .AddStep(9.73333, Null, Null)
            .Lights = Array( _
            "gi17|100|050217", _
            "giapron|100|151515", _
            "gi22|100|111111", _
            "gi20|100|353535", _
            "gi21|100|282828", _
            "gi19|100|21164e", _
            "gi18|100|060524", _
            "gi16|100|040404", _
            "gi15|100|2e13a0", _
            "gi14|100|fcfcfe", _
            "gi13|100|2f13a6", _
            "gi12|100|1726e5", _
            "gi10|100|2a35c8", _
            "gi09|100|f2f2f4", _
            "gi08|100|bbbbbd", _
            "gi07|100|f7f7f7", _
            "gi06|100|9e9e9e", _
            "gi05|100|fefefe", _
            "gi03|100|2c119c", _
            "gi02|100|2f12a8", _
            "gi01|100|170954", _
            "LTW2|100|8185c5", _
            "LTW1|100|212bbc" _
            )
        End With
        With .AddStep(9.76667, Null, Null)
            .Lights = Array( _
            "gi17|100|030109", _
            "giapron|100|2b2b2b", _
            "gi22|100|1e1e1e", _
            "gi20|100|212121", _
            "gi21|100|171717", _
            "gi19|100|1f1257", _
            "gi18|100|050935", _
            "gi16|100|000000", _
            "gi15|100|2f13a6", _
            "gi14|100|faf9fe", _
            "gi11|100|1726e5", _
            "gi10|100|333dc3", _
            "gi09|100|ecebf0", _
            "gi08|100|a0a1a3", _
            "gi07|100|efefef", _
            "gi06|100|7a7a7a", _
            "gi05|100|f9f9f9", _
            "gi03|100|2a1191", _
            "gi02|100|2d129f", _
            "gi01|100|10063a", _
            "LTW2|100|6d72bc", _
            "LTW1|100|1d28c2" _
            )
        End With
        With .AddStep(9.80000, Null, Null)
            .Lights = Array( _
            "gi17|100|000003", _
            "giapron|100|535353", _
            "gi22|100|313131", _
            "gi20|100|161616", _
            "gi21|100|0b0b0b", _
            "gi19|100|1f1161", _
            "gi18|100|090d51", _
            "gi14|100|f8f7fc", _
            "gi13|100|2e12a3", _
            "gi12|100|1826e7", _
            "gi10|100|4049c0", _
            "gi09|100|e1e0e5", _
            "gi08|100|86868d", _
            "gi07|100|e1e1e1", _
            "gi06|100|5a5a5a", _
            "gi05|100|efefef", _
            "gi03|100|260f84", _
            "gi02|100|2b1197", _
            "gi01|100|0b0428", _
            "LTW2|100|585eba", _
            "LTW1|100|1c25cb" _
            )
        End With
        With .AddStep(9.83333, Null, Null)
            .Lights = Array( _
            "gi17|100|000000", _
            "giapron|100|868686", _
            "gi22|100|4c4c4c", _
            "gi20|100|0d0d0f", _
            "gi21|100|050505", _
            "gi19|100|200f71", _
            "gi18|100|0b116d", _
            "gi15|100|2f12a8", _
            "gi14|100|f4f3f8", _
            "gi13|100|2d129d", _
            "gi11|100|1725e0", _
            "gi10|100|4c54c1", _
            "gi09|100|d2d1d7", _
            "gi08|100|6a6b77", _
            "gi07|100|cdcdcd", _
            "gi06|100|3e3e3e", _
            "gi05|100|dddddd", _
            "gi04|100|2f13a6", _
            "gi03|100|210c72", _
            "gi02|100|270f89", _
            "gi01|100|060318", _
            "LTW2|100|464eb6", _
            "LTW1|100|1826d1" _
            )
        End With
        With .AddStep(9.86667, Null, Null)
            .Lights = Array( _
            "giapron|100|bbbbbb", _
            "gi22|100|6d6d6d", _
            "gi20|100|050506", _
            "gi21|100|010101", _
            "gi19|100|250f7d", _
            "gi18|100|0f178b", _
            "gi14|100|efeef3", _
            "gi13|100|2b1196", _
            "gi11|100|1624dc", _
            "gi10|100|5e67c4", _
            "gi09|100|c1c0c6", _
            "gi08|100|515561", _
            "gi07|100|b3b3b3", _
            "gi06|100|262626", _
            "gi05|100|c2c2c2", _
            "gi04|100|2e12a4", _
            "gi03|100|1a0b5f", _
            "gi02|100|220d77", _
            "gi01|100|040210", _
            "LTW2|100|3841b5", _
            "LTW1|100|1824da" _
            )
        End With
        With .AddStep(9.90000, Null, Null)
            .Lights = Array( _
            "giapron|100|e3e3e3", _
            "gi22|100|929292", _
            "gi20|100|030208", _
            "gi21|100|000000", _
            "gi19|100|270f8a", _
            "gi18|100|121dac", _
            "gi14|100|e5e4ee", _
            "gi13|100|270f8a", _
            "gi11|100|1722d2", _
            "gi10|100|6e74c9", _
            "gi09|100|adabb6", _
            "gi08|100|3d3f57", _
            "gi07|100|959595", _
            "gi06|100|161616", _
            "gi05|100|9f9f9f", _
            "gi04|100|2d129f", _
            "gi03|100|15084c", _
            "gi02|100|190a5b", _
            "gi01|100|020107", _
            "LTW2|100|2c35b8", _
            "LTW1|100|1824df" _
            )
        End With
        With .AddStep(9.93333, Null, Null)
            .Lights = Array( _
            "giapron|100|f7f7f7", _
            "gi22|100|b7b7b7", _
            "gi20|100|02020b", _
            "gi19|100|291092", _
            "gi18|100|1520c2", _
            "gi14|100|dad8e6", _
            "gi13|100|210e7a", _
            "gi11|100|1522c9", _
            "gi10|100|8389d2", _
            "gi09|100|9795a3", _
            "gi08|100|2a2f4f", _
            "gi07|100|777777", _
            "gi06|100|0e0e0e", _
            "gi05|100|7c7c7c", _
            "gi04|100|2c129a", _
            "gi03|100|10063a", _
            "gi02|100|130845", _
            "gi01|100|010005", _
            "LTW2|100|242ebe", _
            "LTW1|100|1825e3" _
            )
        End With
        With .AddStep(9.96667, Null, Null)
            .Lights = Array( _
            "giapron|100|fdfdfd", _
            "gi22|100|d5d5d5", _
            "gi20|100|000410", _
            "gi19|100|2c129b", _
            "gi18|100|1623d4", _
            "gi14|100|cdcadb", _
            "gi13|100|1d0c6b", _
            "gi11|100|1521bd", _
            "gi10|100|9599d6", _
            "gi09|100|807d92", _
            "gi08|100|202353", _
            "gi07|100|5b5b5d", _
            "gi06|100|070707", _
            "gi05|100|5a5a5a", _
            "gi04|100|28108c", _
            "gi03|100|0c0429", _
            "gi02|100|0e0530", _
            "gi01|100|010103", _
            "LTW2|100|1e2ac6" _
            )
        End With
    End With




End Sub



'*******************************************
' Sounds Configuration
'*******************************************


'Creates all sounds in the game
'NOTE: make sure all game sounds are positioned to the Backglass in the Sound Manager

Sub CreateSounds()

    'Add sound effect tracks here. Provied track name and duration (seconds)
    AddSoundEffect "sfx_ball_drain", 4.075
    AddSoundEffect "sfx_bumper1", 1.927
    AddSoundEffect "sfx_bumper2", 3.461
    AddSoundEffect "sfx_bumper3", 3.461
    AddSoundEffect "sfx_bumper4", 1.025
    AddSoundEffect "sfx_button", 0.451
    AddSoundEffect "sfx_combo", 6.000
    AddSoundEffect "sfx_EarthHit1", 6.129
    AddSoundEffect "sfx_EarthHit2", 2.316
    AddSoundEffect "sfx_EarthHit3", 3.755
    AddSoundEffect "sfx_entry", 2.270
    AddSoundEffect "sfx_LCC1", 5.904
    AddSoundEffect "sfx_LCC2", 5.904
    AddSoundEffect "sfx_LCC3", 5.904
    AddSoundEffect "sfx_LDS", 1.730
    AddSoundEffect "sfx_left_ramp_time_warp", 4.049
    AddSoundEffect "sfx_left_sling", 2.068
    AddSoundEffect "sfx_LF1", 7.731
    AddSoundEffect "sfx_LF2", 8.231
    AddSoundEffect "sfx_LF3", 8.231
    AddSoundEffect "sfx_LH", 0.961
    AddSoundEffect "sfx_LLI", 1.925
    AddSoundEffect "sfx_LLO", 1.866
    AddSoundEffect "sfx_LM1", 1.476
    AddSoundEffect "sfx_LM2", 1.951
    AddSoundEffect "sfx_LM3", 2.105
    AddSoundEffect "sfx_LM4", 2.105
    AddSoundEffect "sfx_LM5", 1.951
    AddSoundEffect "sfx_LMet1", 4.231
    AddSoundEffect "sfx_LMet2", 1.995
    AddSoundEffect "sfx_LMet3", 1.737
    AddSoundEffect "sfx_LMet4", 4.092
    AddSoundEffect "sfx_LMet5", 0.908
    AddSoundEffect "sfx_LMet6", 1.474
    AddSoundEffect "sfx_LMet7", 1.643
    AddSoundEffect "sfx_LMet8", 4.461
    AddSoundEffect "sfx_LPC1", 1.901
    AddSoundEffect "sfx_LPC2", 2.107
    AddSoundEffect "sfx_LPC3", 1.793
    AddSoundEffect "sfx_LPC4", 2.000
    AddSoundEffect "sfx_LPC5", 1.876
    AddSoundEffect "sfx_LPF1", 2.633
    AddSoundEffect "sfx_LPF2", 2.953
    AddSoundEffect "sfx_LPF3", 2.953
    AddSoundEffect "sfx_LPF4", 2.953
    AddSoundEffect "sfx_LPF5", 2.633
    AddSoundEffect "sfx_LRI", 1.904
    AddSoundEffect "sfx_LRO", 4.075
    AddSoundEffect "sfx_LS1", 0.945
    AddSoundEffect "sfx_LS2", 0.629
    AddSoundEffect "sfx_LS3", 0.548
    AddSoundEffect "sfx_LS4", 0.522
    AddSoundEffect "sfx_LS5", 0.586
    AddSoundEffect "sfx_LS6", 0.945
    AddSoundEffect "sfx_LSC1", 2.363
    AddSoundEffect "sfx_LSC2", 1.918
    AddSoundEffect "sfx_LSC3", 2.502
    AddSoundEffect "sfx_LSC4", 2.155
    AddSoundEffect "sfx_LSL", 2.224
    AddSoundEffect "sfx_LSR", 2.224
    AddSoundEffect "sfx_LSUp", 2.803
    AddSoundEffect "sfx_LTW", 5.410
    AddSoundEffect "sfx_mag_cap", 2.972
    AddSoundEffect "sfx_Orb1", 1.543
    AddSoundEffect "sfx_Orb2", 1.713
    AddSoundEffect "sfx_Orb3", 1.571
    AddSoundEffect "sfx_powerdown", 3.712
    AddSoundEffect "sfx_right_ramp_moon_launch", 3.146
    AddSoundEffect "sfx_right_sling", 1.957
    AddSoundEffect "sfx_Spinner", 0.173
    AddSoundEffect "sfx_tally_alt", 2.000
    AddSoundEffect "sfx_cluster_fired", 4.593
    AddSoundEffect "sfx_launch", 7.552
    AddSoundEffect "sfx_ball_launch1", 4.736
    AddSoundEffect "sfx_ball_launch2", 4.736
    AddSoundEffect "sfx_ball_launch3", 4.736
    AddSoundEffect "sfx_scoop", 2.690
    AddSoundEffect "sfx_tilt_warning", 1.050
    AddSoundEffect "sfx_tilt", 4.714
    AddSoundEffect "sfx_boom1", 6.087
    AddSoundEffect "sfx_boom2", 6.034
    AddSoundEffect "sfx_boom3", 5.851
    AddSoundEffect "sfx_boom4", 5.329
    AddSoundEffect "sfx_boom5", 6.322
    AddSoundEffect "sfx_boom6", 6.322
    AddSoundEffect "sfx_final_explosion", 9.473
    AddSoundEffect "sfx_jackpot", 1.386
    AddSoundEffect "sfx_super_jackpot", 3.422
    AddSoundEffect "sfx_error_buzz", 0.506
    AddSoundEffect "sfx_alien_ship_crash", 4.467
    AddSoundEffect "sfx_hs_initial", 0.139
    AddSoundEffect "sfx_final_wave_scoop", 10.316

    'Add callout tracks here. Provied track name and duration (seconds)
    AddCallout "voc_AlienAlert", 6.000
    AddCallout "voc_AlienHit", 3.046
    AddCallout "voc_ball_locked", 2.316
    AddCallout "voc_extra_ball_acheived", 2.847
    AddCallout "voc_extra_ball_ready", 3.297
    AddCallout "voc_LCR1", 5.972
    AddCallout "voc_LCR2", 4.718
    AddCallout "voc_LCWiz", 2.422
    AddCallout "voc_LLWiz", 3.252
    AddCallout "voc_LMLR", 2.587
    AddCallout "voc_LMR", 4.415
    AddCallout "voc_LMR1", 2.362
    AddCallout "voc_LMR2", 2.877
    AddCallout "voc_LPR1", 2.361
    AddCallout "voc_p1", 2.926
    AddCallout "voc_p2", 2.926
    AddCallout "voc_p3", 2.926
    AddCallout "voc_p4", 2.926
    AddCallout "voc_select_option", 1.784
    AddCallout "voc_ShipSaver", 2.233
    AddCallout "voc_ss", 2.331
    AddCallout "voc_sss", 2.540
    AddCallout "voc_Training", 2.392
    AddCallout "voc_wave_incoming", 4.974
    AddCallout "voc_Wiz", 2.111
    AddCallout "voc_attract1", 2.423
    AddCallout "voc_attract2", 2.000
    AddCallout "voc_attract3", 2.000
    AddCallout "voc_attract4", 2.362
    AddCallout "voc_attract5", 2.000
    AddCallout "voc_winners_poem1", 4.055
    AddCallout "voc_winners_poem2", 3.768
    AddCallout "voc_winners_poem3", 3.768
    AddCallout "voc_winners_poem4", 2.624
    AddCallout "voc_winners_poem5", 3.363
    AddCallout "voc_winners_poem6", 4.055
    AddCallout "voc_wizard_game", 1.966
    AddCallout "voc_wave_completed", 3.579
    AddCallout "voc_super_spinner", 2.059
    AddCallout "voc_super_pop_bumpers", 2.623
    AddCallout "voc_relaxed_combos", 1.768
    AddCallout "voc_imminent_shutdown", 2.072
    AddCallout "voc_full_protons", 1.962
    AddCallout "voc_full_health", 1.804
    AddCallout "voc_double_scoring", 1.846
    AddCallout "voc_double_bonus", 1.879
    AddCallout "voc_critically_low_health", 2.417
    AddCallout "voc_shields_acquired", 2.218
    AddCallout "voc_ssss", 3.723
    AddCallout "voc_sdsss", 4.302
    AddCallout "voc_training_canceled", 4.415
    AddCallout "voc_final_wave_ready", 3.657
    AddCallout "voc_nuke", 5.773
    AddCallout "voc_training_incomplete", 2.668

    'Add music tracks here. Provied track name and duration (seconds)
    '  looping
    AddMusic "mus_wave0", 92.212, -1
    AddMusic "mus_wave1", 53.551, -1
    AddMusic "mus_wave2", 58.018, -1
    AddMusic "mus_wave3", 60.274, -1
    AddMusic "mus_wave4", 60.656, -1
    AddMusic "mus_wave5", 63.447, -1
    AddMusic "mus_wave6", 61.422, -1
    AddMusic "mus_wave7", 56.844, -1
    AddMusic "mus_wave8", 52.863, -1
    AddMusic "mus_wave9", 57.763, -1
    AddMusic "mus_ambient_bg", 58.508, -1
    AddMusic "mus_wizard", 118.143, -1
    AddMusic "mus_wizard2", 79.967, -1
    '  not looping
    AddMusic "mus_training_1", 70.532, 0
    AddMusic "mus_training_2", 69.160, 0
    AddMusic "mus_training_3", 70.296, 0
    AddMusic "mus_training_4", 74.050, 0
    AddMusic "mus_training_5", 72.831, 0
    AddMusic "mus_post_game", 54.897, 0
    AddMusic "mus_post_game_heavier", 65.358, 0
    AddMusic "mus_victory", 65.463, 0



    'Nuke sfx with extra volume
    With CreateGlfSound("sfx_nuke")  'Nuke detonation
        .File = "sfx_nuke"
        .Bus = "sfx"
        .Volume = 1 'Override bus volume
        .Duration = 11.860* 1000
        .EventsWhenStopped = Array("sfx_nuke_stopped")
    End With


End Sub



' Below are utility routines for adding sound tracks


'Routine for adding a music track
Sub AddMusic(Name, Duration, Loops)
    With CreateGlfSound(Name)
        'msgbox Name&" "&MUSDurations(x)
        .File = Name 'Name in VPX Sound Manager
        .Bus = "mus" ' Sound bus to play on
        '.Volume = 0.8 'Override bus volume
        .Loops = Loops 'default to all music looping
        .Duration = Duration * 1000
        .EventsWhenStopped = Array(Name&"_stopped")
    End With
End Sub


'Routine for adding a sound effect track
Sub AddSoundEffect(Name, Duration)
    With CreateGlfSound(Name)
        .File = Name 'Name in VPX Sound Manager
        .Bus = "sfx" ' Sound bus to play on
        '.Volume = 0.6 'Override bus volume
        .Duration = Duration * 1000
        .EventsWhenStopped = Array(Name&"_stopped")
    End With
End Sub


'Routine for adding a callout track
Sub AddCallout(Name, Duration)
    With CreateGlfSound(Name)
        .File = Name 'Name in VPX Sound Manager
        .Bus = "voc" ' Sound bus to play on
        '.Volume = 0.6 'Override bus volume
        .Duration = Duration * 1000
        .EventsWhenStopped = Array(Name&"_stopped")
    End With
End Sub


'VPX Game Logic Framework (https://mpcarr.github.io/vpx-glf/)

'
Dim glf_currentPlayer : glf_currentPlayer = Null
Dim glf_canAddPlayers : glf_canAddPlayers = True
Dim glf_PI : glf_PI = 4 * Atn(1)
Dim glf_plunger, glf_ballsearch, glf_highscore
glf_ballsearch = Null
glf_highscore = Null
Dim glf_ballsearch_enabled : glf_ballsearch_enabled = False
Dim glf_gameStarted : glf_gameStarted = False
Dim glf_gameTilted : glf_gameTilted = False
Dim glf_gameEnding : glf_gameEnding = False
Dim glf_last_switch_hit_time : glf_last_switch_hit_time = 0
Dim glf_last_ballsearch_reset_time : glf_last_ballsearch_reset_time = 0
Dim glf_last_switch_hit : glf_last_switch_hit = ""
Dim glf_current_virtual_tilt : glf_current_virtual_tilt = 0
Dim glf_tilt_sensitivity : glf_tilt_sensitivity = 7
Dim glf_flex_alphadmd : Set glf_flex_alphadmd = Nothing
Dim glf_flex_alphadmd_enabled : glf_flex_alphadmd_enabled = False
Dim glf_flex_alphadmd_segments(31)
Dim glf_pinEvents : Set glf_pinEvents = CreateObject("Scripting.Dictionary")
Dim glf_pinEventsOrder : Set glf_pinEventsOrder = CreateObject("Scripting.Dictionary")
Dim glf_playerEvents : Set glf_playerEvents = CreateObject("Scripting.Dictionary")
Dim Glf_EventBlocks : Set Glf_EventBlocks = CreateObject("Scripting.Dictionary")
Dim Glf_ShotProfiles : Set Glf_ShotProfiles = CreateObject("Scripting.Dictionary")
Dim Glf_ShowStartQueue : Set Glf_ShowStartQueue = CreateObject("Scripting.Dictionary")
Dim glf_playerEventsOrder : Set glf_playerEventsOrder = CreateObject("Scripting.Dictionary")
Dim glf_playerState : Set glf_playerState = CreateObject("Scripting.Dictionary")
Dim glf_running_shows : Set glf_running_shows = CreateObject("Scripting.Dictionary")
Dim glf_cached_shows : Set glf_cached_shows = CreateObject("Scripting.Dictionary")
Dim glf_cached_rgb_fades : Set glf_cached_rgb_fades = CreateObject("Scripting.Dictionary")
Dim glf_lightPriority : Set glf_lightPriority = CreateObject("Scripting.Dictionary")
Dim glf_lightColorLookup : Set glf_lightColorLookup = CreateObject("Scripting.Dictionary")
Dim glf_lightMaps : Set glf_lightMaps = CreateObject("Scripting.Dictionary")
Dim glf_lightStacks : Set glf_lightStacks = CreateObject("Scripting.Dictionary")
Dim glf_lightTags : Set glf_lightTags = CreateObject("Scripting.Dictionary")
Dim glf_lightNames : Set glf_lightNames = CreateObject("Scripting.Dictionary")
Dim glf_modes : Set glf_modes = CreateObject("Scripting.Dictionary")
Dim glf_timers : Set glf_timers = CreateObject("Scripting.Dictionary")
Dim glf_codestr : glf_codestr = ""
Dim glf_state_machines : Set glf_state_machines = CreateObject("Scripting.Dictionary")
Dim glf_ball_devices : Set glf_ball_devices = CreateObject("Scripting.Dictionary")
Dim glf_diverters : Set glf_diverters = CreateObject("Scripting.Dictionary")
Dim glf_flippers : Set glf_flippers = CreateObject("Scripting.Dictionary")
Dim glf_autofiredevices : Set glf_autofiredevices = CreateObject("Scripting.Dictionary")
Dim glf_ball_holds : Set glf_ball_holds = CreateObject("Scripting.Dictionary")
Dim glf_magnets : Set glf_magnets = CreateObject("Scripting.Dictionary")
Dim glf_segment_displays : Set glf_segment_displays = CreateObject("Scripting.Dictionary")
Dim glf_drop_targets : Set glf_drop_targets = CreateObject("Scripting.Dictionary")
Dim glf_standup_targets : Set glf_standup_targets = CreateObject("Scripting.Dictionary")
Dim glf_multiball_locks : Set glf_multiball_locks = CreateObject("Scripting.Dictionary")
Dim glf_multiballs : Set glf_multiballs = CreateObject("Scripting.Dictionary")
Dim glf_shows : Set glf_shows = CreateObject("Scripting.Dictionary")
Dim glf_initialVars : Set glf_initialVars = CreateObject("Scripting.Dictionary")
Dim glf_dispatch_await : Set glf_dispatch_await = CreateObject("Scripting.Dictionary")
Dim glf_dispatch_handlers_await : Set glf_dispatch_handlers_await = CreateObject("Scripting.Dictionary")
Dim glf_dispatch_current_kwargs
Dim glf_dispatch_lightmaps_await : Set glf_dispatch_lightmaps_await = CreateObject("Scripting.Dictionary")
Dim glf_machine_vars : Set glf_machine_vars = CreateObject("Scripting.Dictionary")
Dim glf_achievements : Set glf_achievements = CreateObject("Scripting.Dictionary")
Dim glf_sound_buses : Set glf_sound_buses = CreateObject("Scripting.Dictionary")
Dim glf_sounds : Set glf_sounds = CreateObject("Scripting.Dictionary")
Dim glf_combo_switches : Set glf_combo_switches = CreateObject("Scripting.Dictionary")
Dim glf_funcRefMap : Set glf_funcRefMap = CreateObject("Scripting.Dictionary")
Dim bcpController : bcpController = Null
Dim glf_debugBcpController : glf_debugBcpController = Null
Dim glf_hasDebugController : glf_hasDebugController = False
Dim glf_monitor_player_state : glf_monitor_player_state = ""
Dim glf_monitor_modes : glf_monitor_modes = ""
Dim glf_monitor_event_stream : glf_monitor_event_stream = ""
Dim glf_running_modes : glf_running_modes = ""
Dim glf_production_mode : glf_production_mode = True
Dim useGlfBCPMonitor : useGlfBCPMonitor = False
Dim useBCP : useBCP = False
Dim bcpPort : bcpPort = 5050
Dim bcpExeName : bcpExeName = CGameName & "_gmc.exe"
Dim glf_monitor_player_vars : glf_monitor_player_vars = false
Dim glf_BIP : glf_BIP = 0
Dim glf_FuncCount : glf_FuncCount = 9999
Dim glf_SeqCount : glf_SeqCount = 0
Dim glf_max_dispatch : glf_max_dispatch = 25
Dim glf_max_lightmap_sync : glf_max_lightmap_sync = -1
Dim glf_max_lightmap_sync_enabled : glf_max_lightmap_sync_enabled = False
Dim glf_max_lights_test : glf_max_lights_test = 0

Dim glf_master_volume : glf_master_volume = 0.8


Dim glf_troughSize : glf_troughSize = tnob
Dim glf_lastTroughSw : glf_lastTroughSw = Null
Dim glf_game

Dim glf_debugLog : Set glf_debugLog = (new GlfDebugLogFile)()
Dim glf_debugEnabled : glf_debugEnabled = False
Dim glf_debug_level : glf_debug_level = "Info"

Dim glf_table

Dim glf_ball1, glf_ball2, glf_ball3, glf_ball4, glf_ball5, glf_ball6, glf_ball7, glf_ball8

Public Sub Glf_ConnectToBCPMediaController(args)
  If glf_production_mode = True Then
    Dim fso
    Set fso = CreateObject("Scripting.FileSystemObject")
    If fso.FileExists(bcpExeName) Then
      Set bcpController = (new GlfVpxBcpController)(bcpPort, bcpExeName)
    Else
      MsgBox "Missing GMCDisplay file"
    End If
  Else
    Set bcpController = (new GlfVpxBcpController)(bcpPort, "")
  End If
End Sub

Public Sub Glf_ConnectToDebugBCPMediaController(args)
    Set glf_debugBcpController = (new GlfMonitorBcpController)(5051, "glf_monitor.exe")
  glf_hasDebugController = True
End Sub

Public Sub Glf_WriteDebugLog(name, message)
  If glf_debug_level = "Debug" Then
    glf_debugLog.WriteToLog name, message
    'Glf_MonitorEventStream name, message
  End If
End Sub

Public Function SwitchHandler(handler, args)
  SwitchHandler = False
  Select Case handler
    Case "BaseModeDeviceEventHandler"
      BaseModeDeviceEventHandler args
      SwitchHandler = True
  End Select

End Function

Public Sub Glf_Init(ByRef table)
    Set glf_table = table
  With GlfGameSettings()
    .BallsPerGame = 3
  End With
  Glf_Options Null 'Force Options Check
  Glf_RegisterLights()
  glf_debugLog.WriteToLog "Init", "Start"
  If glf_troughSize > 0 Then : swTrough1.DestroyBall : Set glf_ball1 = swTrough1.CreateSizedballWithMass(Ballsize / 2,Ballmass) : gBot = Array(glf_ball1) : Set glf_lastTroughSw = swTrough1 : End If
  If glf_troughSize > 1 Then : swTrough2.DestroyBall : Set glf_ball2 = swTrough2.CreateSizedballWithMass(Ballsize / 2,Ballmass) : gBot = Array(glf_ball1, glf_ball2) : Set glf_lastTroughSw = swTrough2 : End If
  If glf_troughSize > 2 Then : swTrough3.DestroyBall : Set glf_ball3 = swTrough3.CreateSizedballWithMass(Ballsize / 2,Ballmass) : gBot = Array(glf_ball1, glf_ball2, glf_ball3) : Set glf_lastTroughSw = swTrough3 : End If
  If glf_troughSize > 3 Then : swTrough4.DestroyBall : Set glf_ball4 = swTrough4.CreateSizedballWithMass(Ballsize / 2,Ballmass) : gBot = Array(glf_ball1, glf_ball2, glf_ball3, glf_ball4) : Set glf_lastTroughSw = swTrough4 : End If
  If glf_troughSize > 4 Then : swTrough5.DestroyBall : Set glf_ball5 = swTrough5.CreateSizedballWithMass(Ballsize / 2,Ballmass) : gBot = Array(glf_ball1, glf_ball2, glf_ball3, glf_ball4, glf_ball5) : Set glf_lastTroughSw = swTrough5 : End If
  If glf_troughSize > 5 Then : swTrough6.DestroyBall : Set glf_ball6 = swTrough6.CreateSizedballWithMass(Ballsize / 2,Ballmass) : gBot = Array(glf_ball1, glf_ball2, glf_ball3, glf_ball4, glf_ball5, glf_ball6) : Set glf_lastTroughSw = swTrough6 : End If
  If glf_troughSize > 6 Then : swTrough7.DestroyBall : Set glf_ball7 = swTrough7.CreateSizedballWithMass(Ballsize / 2,Ballmass) : gBot = Array(glf_ball1, glf_ball2, glf_ball3, glf_ball4, glf_ball5, glf_ball6, glf_ball7) : Set glf_lastTroughSw = swTrough7 : End If
  If glf_troughSize > 7 Then : Drain.DestroyBall : Set glf_ball8 = Drain.CreateSizedballWithMass(Ballsize / 2,Ballmass) : gBot = Array(glf_ball1, glf_ball2, glf_ball3, glf_ball4, glf_ball5, glf_ball6, glf_ball7, glf_ball8) : End If


    Dim codestr : codestr = ""
  Dim switch
  For Each switch in Glf_Switches
    codestr = codestr & "Sub " & switch.Name & "_Hit() : If Not glf_gameTilted Then : DispatchPinEvent """ & switch.Name & "_active"", ActiveBall : glf_last_switch_hit_time = gametime : glf_last_switch_hit = """& switch.Name &""": End If : End Sub" & vbCrLf
    codestr = codestr & "Sub " & switch.Name & "_UnHit() : If Not glf_gameTilted Then : DispatchPinEvent """ & switch.Name & "_inactive"", ActiveBall : End If  : End Sub" & vbCrLf
  Next

    codestr = codestr & vbCrLf

  Dim slingshot
  For Each slingshot in Glf_Slingshots
    codestr = codestr & "Sub " & slingshot.Name & "_Slingshot() : If Not glf_gameTilted Then : DispatchPinEvent """ & slingshot.Name & "_active"", ActiveBall : glf_last_switch_hit_time = gametime : glf_last_switch_hit = """& slingshot.Name &""": End If  : End Sub" & vbCrLf
  Next

    codestr = codestr & vbCrLf

  Dim spinner
  For Each spinner in Glf_Spinners
    codestr = codestr & "Sub " & spinner.Name & "_Spin() : If Not glf_gameTilted Then : DispatchPinEvent """ & spinner.Name & "_active"", ActiveBall : glf_last_switch_hit_time = gametime : glf_last_switch_hit = """& spinner.Name &""": End If  : End Sub" & vbCrLf
  Next

  Dim drop_target
  Dim drop_array, using_roth_drops
  using_roth_drops = False
  drop_array = Array()
  For Each drop_target in glf_drop_targets.Items()
    codestr = codestr & "Sub " & drop_target.Switch & "_Hit() : If Not glf_gameTilted Then : If glf_drop_targets(""" & drop_target.Name & """).UseRothDroptarget = True Then : DTHit glf_drop_targets(""" & drop_target.Name & """).RothDTSwitchID : Else : DispatchPinEvent """ & drop_target.Switch & "_active"", ActiveBall : glf_last_switch_hit_time = gametime : glf_last_switch_hit = """& drop_target.Switch &""": End If : End If : End Sub" & vbCrLf
    codestr = codestr & "Sub " & drop_target.Switch & "_UnHit() : If Not glf_gameTilted Then : If glf_drop_targets(""" & drop_target.Name & """).UseRothDroptarget = False Then : DispatchPinEvent """ & drop_target.Switch & "_inactive"", ActiveBall : End If : End If : End Sub" & vbCrLf
  Next

  Dim standup_target
  For Each standup_target in glf_standup_targets.Items()
    codestr = codestr & "Sub " & standup_target.Switch & "_Hit() : If Not glf_gameTilted Then : If glf_standup_targets(""" & standup_target.Name & """).UseRothStanduptarget = True Then : STHit glf_standup_targets(""" & standup_target.Name & """).RothSTSwitchID : Else : DispatchPinEvent """ & standup_target.Switch & "_active"", ActiveBall : glf_last_switch_hit_time = gametime : glf_last_switch_hit = """& standup_target.Switch &""": End If : End If : End Sub" & vbCrLf
    codestr = codestr & "Sub " & standup_target.Switch & "_UnHit() : If Not glf_gameTilted Then : If glf_standup_targets(""" & standup_target.Name & """).UseRothStanduptarget = False Then : DispatchPinEvent """ & standup_target.Switch & "_inactive"", ActiveBall : End If : End If : End Sub" & vbCrLf
  Next

    codestr = codestr & vbCrLf

  ExecuteGlobal codestr

  If glf_debugEnabled = True Then

    '
  End If

  'Cache Shows
  glf_debugLog.WriteToLog "Init", "Caching Shows"
  Dim mode, show_count, shot_count, cached_show
  show_count = 0
  shot_count = 0
  For Each mode in glf_modes.Items()
    Glf_WriteDebugLog "Init", mode.Name
    If Not IsNull(mode.ShowPlayer) Then
      With mode.ShowPlayer()
        Dim show_settings
        For Each show_settings in .EventShows()
          If Not IsNull(show_settings.Show) And show_settings.Action = "play" Then
            show_settings.InternalCacheId = CStr(show_count)
            show_count = show_count + 1
            cached_show = Glf_ConvertShow(show_settings.Show, show_settings.Tokens)
            glf_cached_shows.Add "show_player_" & mode.name & "_" & show_settings.Key & "__" & show_settings.InternalCacheId, cached_show
          End If
        Next
      End With
    End If

    If Not IsNull(mode.LightPlayer) Then
      With mode.LightPlayer()
        .ReloadLights()
      End With
    End If
    Dim x,state
    If UBound(mode.ModeShots) > -1 Then
      Dim mode_shot
      For Each mode_shot in mode.ModeShots
        Dim shot_profile : Set shot_profile = Glf_ShotProfiles(mode_shot.Profile)

        If mode_shot.InternalCacheId = -1 Then
          mode_shot.InternalCacheId = shot_count
          shot_count = shot_count + 1
        End If
        For x=0 to shot_profile.StatesCount
          Set state = shot_profile.StateForIndex(x)
          If state.InternalCacheId = -1 Then
            state.InternalCacheId = CStr(show_count)
            show_count = show_count + 1
          End If

          Dim key
          Dim mergedTokens : Set mergedTokens = CreateObject("Scripting.Dictionary")
          If Not IsNull(state.Tokens) Then
            Dim state_tokens : Set state_tokens = state.Tokens()
            For Each key In state_tokens.Keys()
              mergedTokens.Add key, state_tokens(key)
            Next
          End If
          Dim tokens
          If Not IsNull(mode_shot.Tokens) Then
            Set tokens = mode_shot.Tokens
            For Each key In tokens.Keys
              If mergedTokens.Exists(key) Then
                mergedTokens(key) = tokens(key)
              Else
                mergedTokens.Add key, tokens(key)
              End If
            Next
          End If
          cached_show = Glf_ConvertShow(state.Show, mergedTokens)
          glf_cached_shows.Add mode.name & "_" & x & "_" & mode_shot.Name & "_" & state.Key & "_" & mode_shot.InternalCacheId & "_" & state.InternalCacheId, cached_show
        Next
      Next
    End If

    If UBound(mode.ModeStateMachines) > -1 Then
      Dim mode_state_machine,state_count
      state_count = 0
      For Each mode_state_machine in mode.ModeStateMachines
        Dim state_items : state_items = mode_state_machine.StateItems
        For x=0 to UBound(state_items)
          Set state = state_items(x)
          If state.InternalCacheId = -1 Then
            state.InternalCacheId = CStr(state_count)
            state_count = state_count + 1
          End If
          If Not IsNull(state.ShowWhenActive().Show) Then
            If state.ShowWhenActive().Action = "play" Then
              state.ShowWhenActive().InternalCacheId = CStr(show_count)
              show_count = show_count + 1
              cached_show = Glf_ConvertShow(state.ShowWhenActive().Show, state.ShowWhenActive().Tokens)
              glf_cached_shows.Add mode.name & "_" & mode_state_machine.Name & "_" & state.Name & "_" & state.ShowWhenActive().Key & "_" & state.InternalCacheId & "_" & state.ShowWhenActive().InternalCacheId, cached_show
            End If
          End If
        Next
      Next
    End If
  Next
  glf_debugLog.WriteToLog "Init", "Finished Caching Shows"

  glf_debugLog.WriteToLog "Init", "Creating Machine Vars"
  With CreateMachineVar("player1_score")
        .InitialValue = 0
        .ValueType = "int"
        .Persist = True
    End With
  With CreateMachineVar("player2_score")
        .InitialValue = 0
        .ValueType = "int"
        .Persist = True
    End With
  With CreateMachineVar("player3_score")
        .InitialValue = 0
        .ValueType = "int"
        .Persist = True
    End With
  With CreateMachineVar("player4_score")
        .InitialValue = 0
        .ValueType = "int"
        .Persist = True
    End With

  If Not IsNull(glf_highscore) Then
    glf_highscore.WriteDefaults()
  End If

  Glf_ReadMachineVars("MachineVars")
  Glf_ReadMachineVars("HighScores")
  glf_debugLog.WriteToLog "Init", "Finished Creating Machine Vars"
  'glf_debugLog.WriteToLog "Code String", glf_codestr
  If glf_production_mode = False Then
    Dim fso1, TxtFileStream1
    Set fso1 = CreateObject("Scripting.FileSystemObject")
    Set TxtFileStream1 = fso1.OpenTextFile("cached-functions.vbs", 2, True)
    TxtFileStream1.WriteLine glf_codestr
    TxtFileStream1.Close
  End If

  SetDelay "reset", "Glf_Reset", Null, 1000
End Sub

Sub Glf_Reset(args)
  DispatchQueuePinEvent "reset_complete", Null
End Sub

AddPinEventListener "reset_complete", "initial_segment_displays", "Glf_SegmentInit", 100, Null
AddPinEventListener "reset_virtual_segment_lights", "reset_segment_displays", "Glf_SegmentInit", 100, Null
Function Glf_SegmentInit(args)
  Dim segment_display
  For Each segment_display in glf_segment_displays.Items()
    segment_display.SetVirtualDMDLights Not glf_flex_alphadmd_enabled
  Next
  If Not IsNull(args) Then
    If IsObject(args(1)) Then
      Set Glf_SegmentInit = args(1)
    Else
      Glf_SegmentInit = args(1)
    End If
  Else
    Glf_SegmentInit = Null
  End If
End Function

Sub Glf_ReadMachineVars(section)
    Dim objFSO, objFile, arrLines, line, inSection
    Set objFSO = CreateObject("Scripting.FileSystemObject")

    If Not objFSO.FileExists(CGameName & "_glf.ini") Then Exit Sub

    Set objFile = objFSO.OpenTextFile(CGameName & "_glf.ini", 1)
    arrLines = Split(objFile.ReadAll, vbCrLf)
    objFile.Close

    inSection = False
    For Each line In arrLines
        line = Trim(line)
        If Left(line, 1) = "[" And Right(line, 1) = "]" Then
            inSection = (LCase(Mid(line, 2, Len(line) - 2)) = LCase(section))
        ElseIf inSection And InStr(line, "=") > 0 Then
      Dim split_key : split_key = Split(line, "=")
      Dim key : key = Trim(split_key(0))
      If glf_machine_vars.Exists(key) Then
              glf_machine_vars(key).Value = Trim(split_key(1))
      Else
        With CreateMachineVar(key)
          .InitialValue = Trim(split_key(1))
          .ValueType = "int"
          .Persist = False
        End With
      End If
        End If
    Next
End Sub

Sub Glf_DisableVirtualSegmentDmd()
  If Not glf_flex_alphadmd is Nothing Then
    glf_flex_alphadmd.Show = False
    glf_flex_alphadmd.Run = False
    Set glf_flex_alphadmd = Nothing
  End If
  glf_flex_alphadmd_enabled = False
  DispatchPinEvent "reset_virtual_segment_lights", Null
End Sub

Sub Glf_EnableVirtualSegmentDmd(args)
  Glf_DisableVirtualSegmentDmd()
  Dim i
  Set glf_flex_alphadmd = CreateObject("FlexDMD.FlexDMD")
  With glf_flex_alphadmd
    .TableFile = Table1.Filename & ".vpx"
    .Color = RGB(255, 88, 32)
    .Width = 128
    .Height = 32
    .Clear = True
    .Run = True
    .GameName = cGameName
    .RenderMode = 3
  End With
  For i = 0 To 31
    glf_flex_alphadmd_segments(i) = 0
  Next
  glf_flex_alphadmd.Segments = glf_flex_alphadmd_segments
  glf_flex_alphadmd_enabled = True
  DispatchPinEvent "reset_virtual_segment_lights", Null
End Sub

Sub Glf_WriteMachineVars(section)
    Dim objFSO, objFile, arrLines, line, inSection, foundSection
    Dim outputLines, key
    Set objFSO = CreateObject("Scripting.FileSystemObject")

    If objFSO.FileExists(CGameName & "_glf.ini") Then
        Set objFile = objFSO.OpenTextFile(CGameName & "_glf.ini", 1)
        arrLines = Split(objFile.ReadAll, vbCrLf)
        objFile.Close
    Else
        arrLines = Array()
    End If

    outputLines = ""
    inSection = False
    foundSection = False

    For Each line In arrLines
        If Left(line, 1) = "[" And Right(line, 1) = "]" Then
            inSection = (LCase(Mid(line, 2, Len(line) - 2)) = LCase(section))
            foundSection = foundSection Or inSection
        End If

        If inSection And InStr(line, "=") > 0 Then
      Dim split_key : split_key = Split(line, "=")
            key = Trim(split_key(0))
            If glf_machine_vars.Exists(key) Then
        If glf_machine_vars(key).Persist = True Then
                  line = key & "=" & glf_machine_vars(key).Value
                  glf_machine_vars.Remove key
        End If
            End If
        End If

    If line = "" And inSection Then
      ' Add remaining keys in the section
      For Each key In glf_machine_vars.Keys
        If glf_machine_vars(key).Persist = True Then
          outputLines = outputLines & key & "=" & glf_machine_vars(key).Value & vbCrLf
        End If
      Next
      glf_machine_vars.RemoveAll
    End If
        If line <> "" Then
      outputLines = outputLines & line & vbCrLf
    End If
    Next

    If Not foundSection Then
        outputLines = outputLines & "["&section&"]" & vbCrLf
        For Each key In glf_machine_vars.Keys
      If glf_machine_vars(key).Persist = True Then
              outputLines = outputLines & key & "=" & glf_machine_vars(key).Value & vbCrLf
      End If
        Next
    End If

    Set objFile = objFSO.CreateTextFile(CGameName & "_glf.ini", True)
    objFile.Write outputLines
    objFile.Close
End Sub



Sub Glf_Options(ByVal eventId)

  Dim glfMaxDispatch : glfMaxDispatch = 1


  Dim ballsPerGame : ballsPerGame = 1 'Table1.Option("Balls Per Game", 1, 2, 1, 1, 0, Array("3 Balls", "5 Balls"))    'apophis mod
  If ballsPerGame = 1 Then
    glf_game.BallsPerGame = 3
  Else
    glf_game.BallsPerGame = 5
  End If
  Dim tilt_sensitivity : tilt_sensitivity = Table1.Option("Tilt Sensitivity (digital nudge)", 1, 10, 1, 5, 0, Array("1", "2", "3", "4", "5", "6", "7", "8", "9", "10"))
  glf_tilt_sensitivity = tilt_sensitivity

  glf_max_dispatch = glfMaxDispatch*5

  glf_debugLog.WriteToLog "Options", "BCP Check"
  Dim glfuseBCP : glfuseBCP = 0 'Table1.Option("Glf Backbox Control Protocol", 0, 1, 1, 0, 0, Array("Off", "On"))  'apophis mod
  If glfuseBCP = 1 Then
    If IsNull(bcpController) Then
      SetDelay "start_glf_bcp", "Glf_ConnectToBCPMediaController", Null, 500
    End If
  Else
    useBCP = False
    If Not IsNull(bcpController) Then
      bcpController.Disconnect
      bcpController = Null
    End If
  End If

  glf_debugLog.WriteToLog "Options", "GLF Segments (Flex) Check"
  Dim glfuseVirtualSegmentDMD : glfuseVirtualSegmentDMD = Table1.Option("Glf Virtual Segment DMD", 0, 1, 1, 0, 0, Array("Off", "On"))
  If glfuseVirtualSegmentDMD = 1 And glf_flex_alphadmd_enabled = False Then
    SetDelay "start_flex_segments", "Glf_EnableVirtualSegmentDmd", Null, 500
  ElseIf glfuseVirtualSegmentDMD = 0 And  glf_flex_alphadmd_enabled = True Then
    Glf_DisableVirtualSegmentDmd()
  End If

  glf_debugLog.WriteToLog "Options", "LightmapSync"
  Dim min_lightmap_update_rate : min_lightmap_update_rate = Table1.Option("Glf Min Lightmap Update Rate", 1, 6, 1, 1, 0, Array("Disabled", "30 Hz", "60 Hz", "120 Hz", "144 Hz", "165 Hz"))
    Select Case min_lightmap_update_rate
    Case 1: glf_max_lightmap_sync_enabled = False
    Case 2: glf_max_lightmap_sync = 30 : glf_max_lightmap_sync_enabled = True
        Case 3: glf_max_lightmap_sync = 15 : glf_max_lightmap_sync_enabled = True
        Case 4: glf_max_lightmap_sync = 8 : glf_max_lightmap_sync_enabled = True
        Case 5: glf_max_lightmap_sync = 7 : glf_max_lightmap_sync_enabled = True
        Case 6: glf_max_lightmap_sync = 6 : glf_max_lightmap_sync_enabled = True
    End Select

End Sub

Public Sub Glf_Exit()
  If Not IsNull(bcpController) Then
    bcpController.Disconnect
    bcpController = Null
  End If
  If Not IsNull(glf_debugBcpController) Then
    glf_debugBcpController.Disconnect
    glf_debugBcpController = Null
    glf_hasDebugController = False
  End If
  If glf_debugEnabled = True Then
    glf_debugLog.WriteToLog "Max Lights", glf_max_lights_test
    glf_debugLog.DisableLogs
  End If
  Glf_DisableVirtualSegmentDmd()
  Glf_WriteMachineVars("MachineVars")
End Sub

Public Sub Glf_KeyDown(ByVal keycode)
    If glf_gameStarted = True Then
    If keycode = StartGameKey Then
      If glf_canAddPlayers = True Then
        Glf_AddPlayer()
      End If
      DispatchPinEvent "s_start_active", True
    End If
  Else
    If keycode = StartGameKey Then
      DispatchRelayPinEvent "request_to_start_game", True
      DispatchPinEvent "s_start_active", True
    End If
  End If

  If keycode = LeftFlipperKey Then
    RunAutoFireDispatchPinEvent "s_left_flipper_active", Null
  End If

  If keycode = RightFlipperKey Then
    RunAutoFireDispatchPinEvent "s_right_flipper_active", Null
  End If

  If keycode = LockbarKey Then
    RunAutoFireDispatchPinEvent "s_lockbar_key_active", Null
  End If

  If KeyCode = PlungerKey Then
    RunAutoFireDispatchPinEvent "s_plunger_key_active", Null
  End If

  If KeyCode = LeftMagnaSave Then
    RunAutoFireDispatchPinEvent "s_left_magna_key_active", Null
  End If

  If KeyCode = RightMagnaSave Then
    RunAutoFireDispatchPinEvent "s_right_magna_key_active", Null
  End If

  If KeyCode = StagedRightFlipperKey Then
    RunAutoFireDispatchPinEvent "s_right_staged_flipper_key_active", Null
  End If

  If KeyCode = StagedLeftFlipperKey Then
    RunAutoFireDispatchPinEvent "s_left_staged_flipper_key_active", Null
  End If

  If keycode = MechanicalTilt Then
    SetDelay "glf_mechcanical_tilt_debounce", "MechcanicalTiltDebounce", Null, 300
    End If

  If keycode = LeftTiltKey Then
    Nudge 90, 2
    Glf_CheckTilt
  End If
    If keycode = RightTiltKey Then
    Nudge 270, 2
    Glf_CheckTilt
  End If
    If keycode = CenterTiltKey Then
    Nudge 0, 3
    Glf_CheckTilt
  End If

  If KeyCode = AddCreditKey Then
    RunAutoFireDispatchPinEvent "s_add_credit_key_active", Null
  End If

  If KeyCode = AddCreditKey2 Then
    RunAutoFireDispatchPinEvent "s_add_credit_key2_active", Null
  End If
End Sub

Public Sub Glf_KeyUp(ByVal keycode)


  If keycode = StartGameKey Then
    DispatchPinEvent "s_start_inactive", True
  End If

  If KeyCode = PlungerKey Then
    RunAutoFireDispatchPinEvent "s_plunger_key_inactive", Null
  End If

  If keycode = LeftFlipperKey Then
    RunAutoFireDispatchPinEvent "s_left_flipper_inactive", Null
  End If

  If keycode = RightFlipperKey Then
    RunAutoFireDispatchPinEvent "s_right_flipper_inactive", Null
  End If

  If keycode = LockbarKey Then
    RunAutoFireDispatchPinEvent "s_lockbar_key_inactive", Null
  End If

  If KeyCode = LeftMagnaSave Then
    RunAutoFireDispatchPinEvent "s_left_magna_key_inactive", Null
  End If

  If KeyCode = RightMagnaSave Then
    RunAutoFireDispatchPinEvent "s_right_magna_key_inactive", Null
  End If

  If KeyCode = StagedRightFlipperKey Then
    RunAutoFireDispatchPinEvent "s_right_staged_flipper_key_inactive", Null
  End If

  If KeyCode = StagedLeftFlipperKey Then
    RunAutoFireDispatchPinEvent "s_left_staged_flipper_key_inactive", Null
  End If

  If KeyCode = AddCreditKey Then
    RunAutoFireDispatchPinEvent "s_add_credit_key_inactive", Null
  End If

  If KeyCode = AddCreditKey2 Then
    RunAutoFireDispatchPinEvent "s_add_credit_key2_inactive", Null
  End If
End Sub

Public Sub MechcanicalTiltDebounce(args)
  RunAutoFireDispatchPinEvent "s_tilt_warning_active", Null
End Sub

Dim glf_lastEventExecutionTime, glf_lastBcpExecutionTime, glf_lastLightUpdateExecutionTime, glf_lastTiltUpdateExecutionTime
glf_lastEventExecutionTime = 0
glf_lastBcpExecutionTime = 0
glf_lastLightUpdateExecutionTime = 0
glf_lastTiltUpdateExecutionTime = 0

Public Sub Glf_GameTimer_Timer()

  If (gametime - glf_lastEventExecutionTime) > 25 Then
    'debug.print "Slow GLF Frame: " & gametime - glf_lastEventExecutionTime & ". Dispatch Count: " & glf_frame_dispatch_count & ". Handler Count: " & glf_frame_handler_count
  End If
  glf_frame_dispatch_count = 0
  glf_frame_handler_count = 0
  'glf_temp1 = 0

  Dim i, key, keys, lightMap
  i = 0
  keys = glf_dispatch_handlers_await.Keys()
  i = Glf_RunHandlers(i)
  If i<glf_max_dispatch Then
    keys = glf_dispatch_await.Keys()
    For Each key in keys
      RunDispatchPinEvent key, glf_dispatch_await(key)
      glf_dispatch_await.Remove key
      If UBound(glf_dispatch_handlers_await.Keys())>-1 Then
        'Handlers were added, process those first.
        i = Glf_RunHandlers(i)
      End If
      i = i + 1
      If i>=glf_max_dispatch Then
        Exit For
      End If
    Next
  End If

  DelayTick

  If glf_max_lightmap_sync_enabled = True Then
    keys = glf_dispatch_lightmaps_await.Keys()
    'debug.print(ubound(keys))
    If glf_max_lights_test < Ubound(keys) Then
      glf_max_lights_test = Ubound(keys)
    End If
    For Each key in keys
      For Each lightMap in glf_lightMaps(key)
        lightMap.Color = glf_lightNames(key).Color
      Next
      glf_dispatch_lightmaps_await.Remove key
      If (gametime - glf_lastEventExecutionTime) > glf_max_lightmap_sync Then
        'debug.print("Exiting")
        Exit For
      End If
    Next
  End If
  If (gametime - glf_lastTiltUpdateExecutionTime) >=50 And glf_current_virtual_tilt > 0 Then
    glf_current_virtual_tilt = glf_current_virtual_tilt - 0.1
    glf_lastTiltUpdateExecutionTime = gametime
    'Debug.print("Tilt Cooldown: " & glf_current_virtual_tilt)
  End If

  If (gametime - glf_lastBcpExecutionTime) >= 300 Then
        glf_lastBcpExecutionTime = gametime
    Glf_BcpUpdate
    Glf_MonitorPlayerStateUpdate "GLF BIP", glf_BIP
    Glf_MonitorBcpUpdate
    End If

  If glf_last_switch_hit_time > 0 And (gametime - glf_last_ballsearch_reset_time) > 2000 Then
    Glf_ResetBallSearch
    glf_last_switch_hit_time = 0
    glf_last_ballsearch_reset_time = gametime
  End If
  glf_lastEventExecutionTime = gametime
End Sub

Sub Glf_CheckTilt()
  glf_current_virtual_tilt = glf_current_virtual_tilt + glf_tilt_sensitivity
  If (glf_current_virtual_tilt > 10) Then
    RunAutoFireDispatchPinEvent "s_tilt_warning_active", Null
    glf_current_virtual_tilt = glf_tilt_sensitivity
  End If
End Sub

Sub Glf_ResetBallSearch()
  If glf_ballsearch_enabled = True Then
    glf_ballsearch.Reset()
  End If
End Sub

Public Function Glf_RunHandlers(i)
  Dim key, keys, args
  keys = glf_dispatch_handlers_await.Keys()
  If UBound(keys) = -1 Then
    Glf_RunHandlers = i
    Exit Function
  End If
  For Each key in keys
    args = glf_dispatch_handlers_await(key)
    Dim wait_for : wait_for = DispatchPinHandlers(key, args)
    glf_dispatch_handlers_await.Remove key
    If Not IsEmpty(wait_for) Then
      Dim remaining_handlers_keys : remaining_handlers_keys = glf_dispatch_handlers_await.Keys
      Dim remaining_handlers_items : remaining_handlers_items = glf_dispatch_handlers_await.Items
      AddPinEventListener wait_for, key & "_wait_for", "ContinueDispatchQueuePinEvent", 1000, Array(remaining_handlers_keys, remaining_handlers_items)
      glf_dispatch_handlers_await.RemoveAll
      Exit For
    End If
    i = i + 1
    If i=glf_max_dispatch Then
      Exit For
    End If
  Next
  If Ubound(glf_dispatch_handlers_await.Keys())=-1 Then
    'Finished processing Handlers for current event.
    'Remove any blocks for this event.
    Glf_EventBlocks(args(2)).RemoveAll
  End If
  Glf_RunHandlers = i
End Function
Dim glf_tmp_lmarr
Public Function Glf_RegisterLights()

  If glf_production_mode = False Then
    Dim elementDict : Set elementDict = CreateObject("Scripting.Dictionary")

    For Each e in GetElements()
      If typename(e) = "Primitive" or typename(e) = "Flasher"  Then
        elementDict.Add LCase(e.Name), True
      End If
    Next
  End If

  Dim light, tags, tag
  For Each light In Glf_Lights
    tags = Split(light.BlinkPattern, ",")
    For Each tag in tags

      tag = "T_" & Trim(tag)
      If Not glf_lightTags.Exists(tag) Then
        Set glf_lightTags(tag) = CreateObject("Scripting.Dictionary")
      End If
      If Not glf_lightTags(tag).Exists(light.Name) Then
        glf_lightTags(tag).Add light.Name, True
      End If
    Next
    glf_lightPriority.Add light.Name, 0
    If glf_production_mode = False Then
      Dim e, lmStr: lmStr = "Dim glf_" & light.name & "_lmarr : glf_" & light.name & "_lmarr = Array("
      For Each e in elementDict.Keys
        If InStr(e, LCase("_" & light.Name & "_")) Then
          lmStr = lmStr & e & ","
        End If
        For Each tag in tags
          tag = "T_" & Trim(tag)
          If InStr(e, LCase("_" & tag & "_")) Then
            lmStr = lmStr & e & ","
          End If
        Next
      Next
      lmStr = lmStr & "Null)"
      lmStr = Replace(lmStr, ",Null)", ")")
      lmStr = Replace(lmStr, "Null)", ")")
      ExecuteGlobal lmStr
      glf_lightMaps.Add light.Name, Eval("glf_" & light.name & "_lmarr")
      glf_codestr = glf_codestr & lmStr & vbCrLf
      glf_codestr = glf_codestr & "glf_lightMaps.Add """ & light.name & """, glf_" & light.Name & "_lmarr" & vbCrLf
    End If

    glf_lightNames.Add light.Name, light
    Dim lightStack : Set lightStack = (new GlfLightStack)()
    glf_lightStacks.Add light.Name, lightStack
    light.State = 1
    Glf_SetLight light.Name, "000000"
  Next
End Function

Public Function Glf_SetLight(light, color)

  Dim rgbColor
  If glf_lightColorLookup.Exists(color) Then
    rgbColor = glf_lightColorLookup(color)
  Else
    glf_lightColorLookup.Add color, RGB( CInt("&H" & (Left(color, 2))), CInt("&H" & (Mid(color, 3, 2))), CInt("&H" & (Right(color, 2)) ))
    rgbColor = glf_lightColorLookup(color)
  End If

  glf_lightNames(light).Color = rgbColor

  If glf_max_lightmap_sync_enabled = True Then
    If Not glf_dispatch_lightmaps_await.Exists(light) Then
      glf_dispatch_lightmaps_await.Add light, True
    End If
  Else
    dim lightMap
    For Each lightMap in glf_lightMaps(light)
      lightMap.Color = glf_lightNames(light).Color
    Next
  End If
End Function

Public Function Glf_ParseInput(value)
  Dim templateCode : templateCode = ""
  Dim tmp: tmp = value
  Dim isVariable, parts
  If glf_funcRefMap.Exists(CStr(value)) Then
    'msgbox "match " & value & " REF: " & glf_funcRefMap(value)
    Glf_ParseInput = Array(glf_funcRefMap(CStr(value)), value, True)
  Else
    Select Case VarType(value)
      Case 8 ' vbString
        tmp = Glf_ReplaceCurrentPlayerAttributes(tmp)
        tmp = Glf_ReplaceAnyPlayerAttributes(tmp)
        tmp = Glf_ReplaceDeviceAttributes(tmp)
        tmp = Glf_ReplaceMachineAttributes(tmp)
        tmp = Glf_ReplaceModeAttributes(tmp)
        tmp = Glf_ReplaceGameAttributes(tmp)
        tmp = Glf_ReplaceKwargsAttributes(tmp)
        'msgbox tmp
        If InStr(tmp, " if ") Then
          templateCode = "Function Glf_" & glf_FuncCount & "(args)" & vbCrLf
          templateCode = templateCode & vbTab & Glf_ConvertIf(tmp, "Glf_" & glf_FuncCount) & vbCrLf
          templateCode = templateCode & "End Function"
        Else
          isVariable = Glf_IsCondition(tmp)
          If Not IsNull(isVariable) Then
            'The input needs formatting
            parts = Split(isVariable, ":")
            If UBound(parts) = 1 Then
              tmp = "Glf_FormatValue(" & parts(0) & ", """ & parts(1) & """)"
            End If
          End If
          templateCode = "Function Glf_" & glf_FuncCount & "(args)" & vbCrLf
          templateCode = templateCode & vbTab & "Glf_" & glf_FuncCount & " = " & tmp & vbCrLf
          templateCode = templateCode & "End Function"
        End IF
      Case Else
        templateCode = "Function Glf_" & glf_FuncCount & "(args)" & vbCrLf
        isVariable = Glf_IsCondition(tmp)
        If Not IsNull(isVariable) Then
          'The input needs formatting
          parts = Split(isVariable, ":")
          If UBound(parts) = 1 Then
            tmp = "Glf_FormatValue(" & parts(0) & ", """ & parts(1) & """)"
          End If
        End If
        templateCode = templateCode & vbTab & "Glf_" & glf_FuncCount & " = " & tmp & vbCrLf
        templateCode = templateCode & "End Function"
    End Select
    'msgbox templateCode
    ExecuteGlobal templateCode
    glf_codestr = glf_codestr & templateCode & vbCrLf
    Dim funcRef : funcRef = "Glf_" & glf_FuncCount
    If Not glf_funcRefMap.Exists(CStr(value)) Then
      glf_codestr = glf_codestr & "glf_funcRefMap.Add """ & Replace(value, """", """""") & """, """ & funcRef & """" & vbCrLf
      glf_funcRefMap.Add CStr(value), funcRef
    End If
    glf_FuncCount = glf_FuncCount + 1
    Glf_ParseInput = Array(funcRef, value, True)
  End If
End Function

Public Function Glf_ParseEventInput(value)
  Dim templateCode : templateCode = ""
  Dim parts : parts = Split(value, ":")
  Dim event_delay : event_delay = 0
  Dim priority : priority = 0
  If UBound(parts) = 1 Then
    value = parts(0)
    event_delay= parts(1)
  End If

  Dim condition : condition = Glf_IsCondition(value)
  If IsNull(condition) Then
    parts = Split(value, ".")
    If UBound(parts) = 1 Then
      value = parts(0)
      priority= parts(1)
    End If
    Glf_ParseEventInput = Array(value, value, Null, event_delay, priority)
  Else

    If glf_funcRefMap.Exists(value) Then
      Dim func_ref : func_ref = glf_funcRefMap(value)
      value = Replace(value, "{"&condition&"}", "")
      parts = Split(value, ".")
      If UBound(parts) = 1 Then
        value = parts(0)
        priority= parts(1)
      End If
      Glf_ParseEventInput = Array(value & func_ref, value, func_ref, event_delay, priority)
      Exit Function
    End If

    dim conditionReplaced : conditionReplaced = Glf_ReplaceCurrentPlayerAttributes(condition)
    conditionReplaced = Glf_ReplaceAnyPlayerAttributes(conditionReplaced)
    conditionReplaced = Glf_ReplaceDeviceAttributes(conditionReplaced)
    conditionReplaced = Glf_ReplaceMachineAttributes(conditionReplaced)
    conditionReplaced = Glf_ReplaceModeAttributes(conditionReplaced)
    conditionReplaced = Glf_ReplaceGameAttributes(conditionReplaced)

    conditionReplaced = Glf_ReplaceKwargsAttributes(conditionReplaced)
    templateCode = "Function Glf_" & glf_FuncCount & "(args)" & vbCrLf
    templateCode = templateCode & vbTab & "On Error Resume Next" & vbCrLf
    templateCode = templateCode & vbTab & Glf_ConvertCondition(conditionReplaced, "Glf_" & glf_FuncCount) & vbCrLf
    templateCode = templateCode & vbTab & "If Err Then Glf_" & glf_FuncCount & " = False" & vbCrLf
    templateCode = templateCode & "End Function"
    ExecuteGlobal templateCode
    glf_codestr = glf_codestr & templateCode & vbCrLf
    Dim funcRef : funcRef = "Glf_" & glf_FuncCount
    glf_FuncCount = glf_FuncCount + 1
    If Not glf_funcRefMap.Exists(value) Then
      glf_codestr = glf_codestr & "glf_funcRefMap.Add """ & Replace(value, """", """""") & """, """ & funcRef & """" & vbCrLf
      glf_funcRefMap.Add value, funcRef
    End If
    value = Replace(value, "{"&condition&"}", "")
    parts = Split(value, ".")
    If UBound(parts) = 1 Then
      value = parts(0)
      priority= parts(1)
    End If
    Glf_ParseEventInput = Array(value & funcRef ,value, funcRef, event_delay, priority)
  End If
End Function

Public Function Glf_ParseDispatchEventInput(value)
  Dim templateCode : templateCode = ""
  Dim kwargs : kwargs = Empty
  Dim eventKey
  Dim pos : pos = InStr(value, ":")
  If pos > 0 Then
    eventKey = Trim(Left(value, pos - 1))
    kwargs = Glf_IsCondition(Trim(Mid(value, pos + 1)))
  Else
    eventKey = value
  End If

  If IsEmpty(kwargs) Then
    Glf_ParseDispatchEventInput = Array(eventKey, Empty)
  Else
    dim kwargsReplaced : kwargsReplaced = Glf_ReplaceCurrentPlayerAttributes(kwargs)
    kwargsReplaced = Glf_ReplaceAnyPlayerAttributes(kwargsReplaced)
    kwargsReplaced = Glf_ReplaceDeviceAttributes(kwargsReplaced)
    kwargsReplaced = Glf_ReplaceMachineAttributes(kwargsReplaced)
    kwargsReplaced = Glf_ReplaceModeAttributes(kwargsReplaced)
    kwargsReplaced = Glf_ReplaceGameAttributes(kwargsReplaced)

    templateCode = "Function Glf_" & glf_FuncCount & "(args)" & vbCrLf
    templateCode = templateCode & vbTab & "On Error Resume Next" & vbCrLf
    templateCode = templateCode & vbTab & Glf_ConvertDynamicKwargs(kwargsReplaced, "Glf_" & glf_FuncCount) & vbCrLf
    templateCode = templateCode & vbTab & "If Err Then Glf_" & glf_FuncCount & " = Null" & vbCrLf
    templateCode = templateCode & "End Function"
    'msgbox templateCode
    ExecuteGlobal templateCode
    'glf_codestr = glf_codestr & templateCode & vbCrLf
    Dim funcRef : funcRef = "Glf_" & glf_FuncCount
    glf_FuncCount = glf_FuncCount + 1

    Glf_ParseDispatchEventInput = Array(eventKey, funcRef)
  End If
End Function

' Function Glf_ReplaceCurrentPlayerAttributes(inputString)
'     Dim pattern, replacement, regex, outputString
'     pattern = "current_player\.([a-zA-Z0-9_]+)"
'     Set regex = New RegExp
'     regex.Pattern = pattern
'     regex.IgnoreCase = True
'     regex.Global = True
'     replacement = "GetPlayerState(""$1"")"
'     outputString = regex.Replace(inputString, replacement)
'     Set regex = Nothing
'     Glf_ReplaceCurrentPlayerAttributes = outputString
' End Function

Function Glf_ReplaceCurrentPlayerAttributes(inputString)
    Dim outputString, startPos, attrStart, attrEnd
    Dim beforeMatch, afterMatch, attribute, replacement

    outputString = inputString
    startPos = InStr(outputString, "current_player.")

    Do While startPos > 0
        ' Start of the attribute is just after the dot
        attrStart = startPos + Len("current_player.")
        attrEnd = attrStart

        ' Find the end of the attribute (until a non-word character or end of string)
        Do While attrEnd <= Len(outputString)
            Dim ch
            ch = Mid(outputString, attrEnd, 1)
            If Not (ch >= "a" And ch <= "z") And Not (ch >= "A" And ch <= "Z") And Not (ch >= "0" And ch <= "9") And ch <> "_" Then
                Exit Do
            End If
            attrEnd = attrEnd + 1
        Loop

        attribute = Mid(outputString, attrStart, attrEnd - attrStart)
        replacement = "GetPlayerState(""" & attribute & """)"

        beforeMatch = Left(outputString, startPos - 1)
        afterMatch = Mid(outputString, attrEnd)
        outputString = beforeMatch & replacement & afterMatch

        ' Search again from just after the replacement
        startPos = InStr(startPos + Len(replacement), outputString, "current_player.")
    Loop

    Glf_ReplaceCurrentPlayerAttributes = outputString
End Function


' Function Glf_ReplaceAnyPlayerAttributes(inputString)
'     Dim pattern, replacement, regex, outputString
'     pattern = "players\[([0-3]+)\]\.([a-zA-Z0-9_]+)"
'     Set regex = New RegExp
'     regex.Pattern = pattern
'     regex.IgnoreCase = True
'     regex.Global = True
'     replacement = "GetPlayerStateForPlayer($1, ""$2"")"
'     outputString = regex.Replace(inputString, replacement)
'     Set regex = Nothing
'     Glf_ReplaceAnyPlayerAttributes = outputString
' End Function

Function Glf_ReplaceAnyPlayerAttributes(inputString)
    Dim outputString, startPos, openBracket, closeBracket, dotPos
    Dim beforeMatch, afterMatch, indexStr, attribute, replacement

    outputString = inputString
    startPos = InStr(outputString, "players[")

    Do While startPos > 0
        openBracket = InStr(startPos, outputString, "[")
        closeBracket = InStr(openBracket, outputString, "]")
        dotPos = InStr(closeBracket + 1, outputString, ".")

        If openBracket > 0 And closeBracket > openBracket And dotPos > closeBracket Then
            indexStr = Mid(outputString, openBracket + 1, closeBracket - openBracket - 1)

            If IsNumeric(indexStr) Then
                If CInt(indexStr) >= 0 And CInt(indexStr) <= 3 Then
                    ' Extract attribute
                    Dim attrStart, attrEnd, ch
                    attrStart = dotPos + 1
                    attrEnd = attrStart
                    Do While attrEnd <= Len(outputString)
                        ch = Mid(outputString, attrEnd, 1)
                        If Not ((ch >= "a" And ch <= "z") Or (ch >= "A" And ch <= "Z") Or (ch >= "0" And ch <= "9") Or ch = "_") Then
                            Exit Do
                        End If
                        attrEnd = attrEnd + 1
                    Loop
                    attribute = Mid(outputString, attrStart, attrEnd - attrStart)

                    replacement = "GetPlayerStateForPlayer(" & indexStr & ", """ & attribute & """)"
                    beforeMatch = Left(outputString, startPos - 1)
                    afterMatch = Mid(outputString, attrEnd)
                    outputString = beforeMatch & replacement & afterMatch

                    startPos = InStr(startPos + Len(replacement), outputString, "players[")
                Else
                    ' Invalid index, move past it
                    startPos = InStr(closeBracket + 1, outputString, "players[")
                End If
            Else
                ' Not numeric index
                startPos = InStr(closeBracket + 1, outputString, "players[")
            End If
        Else
            Exit Do
        End If
    Loop

    Glf_ReplaceAnyPlayerAttributes = outputString
End Function


' Function Glf_ReplaceDeviceAttributes(inputString)
'     Dim pattern, replacement, regex, outputString
'     pattern = "devices\.([a-zA-Z0-9_]+)\.([a-zA-Z0-9_]+)\.([a-zA-Z0-9_]+)"
'     Set regex = New RegExp
'     regex.Pattern = pattern
'     regex.IgnoreCase = True
'     regex.Global = True
'   replacement = "glf_$1(""$2"").GetValue(""$3"")"
'     outputString = regex.Replace(inputString, replacement)
'     Set regex = Nothing
'     Glf_ReplaceDeviceAttributes = outputString
' End Function

Function Glf_ReplaceDeviceAttributes(inputString)
    Dim outputString, startPos, endPos, beforeMatch, afterMatch
    Dim fullMatch, parts, deviceType, deviceId, attribute

    outputString = inputString
    startPos = InStr(outputString, "devices.")

    Do While startPos > 0
        ' Find the end of the match by looking for three dots after "devices."
        Dim firstDot, secondDot, thirdDot

        firstDot = InStr(startPos + 8, outputString, ".")
        If firstDot = 0 Then Exit Do

        secondDot = InStr(firstDot + 1, outputString, ".")
        If secondDot = 0 Then Exit Do

        ' Third part ends at the next non-word character or end of string
        thirdDot = secondDot + 1
        Do While thirdDot <= Len(outputString)
            Dim ch
            ch = Mid(outputString, thirdDot, 1)
            If Not (ch >= "a" And ch <= "z") And Not (ch >= "A" And ch <= "Z") And Not (ch >= "0" And ch <= "9") And ch <> "_" Then
                Exit Do
            End If
            thirdDot = thirdDot + 1
        Loop
        endPos = thirdDot - 1

        ' Extract full match and parts
        fullMatch = Mid(outputString, startPos, endPos - startPos + 1)
        parts = Split(fullMatch, ".")
        If UBound(parts) = 3 Then
            deviceType = parts(1)
            deviceId = parts(2)
            attribute = parts(3)

            ' Build replacement
            Dim replacement
            replacement = "glf_" & deviceType & "(""" & deviceId & """).GetValue(""" & attribute & """)"

            ' Replace in outputString
            beforeMatch = Left(outputString, startPos - 1)
            afterMatch = Mid(outputString, endPos + 1)
            outputString = beforeMatch & replacement & afterMatch

            ' Move startPos forward
            startPos = InStr(startPos + Len(replacement), outputString, "devices.")
        Else
            Exit Do
        End If
    Loop

    Glf_ReplaceDeviceAttributes = outputString
End Function


' Function Glf_ReplaceMachineAttributes(inputString)
'     Dim pattern, replacement, regex, outputString
'     pattern = "machine\.([a-zA-Z0-9_]+)"
'     Set regex = New RegExp
'     regex.Pattern = pattern
'     regex.IgnoreCase = True
'     regex.Global = True
'   replacement = "glf_machine_vars(""$1"").GetValue()"
'     outputString = regex.Replace(inputString, replacement)
'     Set regex = Nothing
'     Glf_ReplaceMachineAttributes = outputString
' End Function

Function Glf_ReplaceMachineAttributes(inputString)
    Dim outputString, startPos, attrStart, attrEnd
    Dim beforeMatch, afterMatch, attribute, replacement

    outputString = inputString
    startPos = InStr(outputString, "machine.")

    Do While startPos > 0
        ' Position of attribute name starts after "machine."
        attrStart = startPos + Len("machine.")
        attrEnd = attrStart

        ' Read characters in the attribute (letters, digits, or underscore)
        Do While attrEnd <= Len(outputString)
            Dim ch
            ch = Mid(outputString, attrEnd, 1)
            If Not ((ch >= "a" And ch <= "z") Or (ch >= "A" And ch <= "Z") Or (ch >= "0" And ch <= "9") Or ch = "_") Then
                Exit Do
            End If
            attrEnd = attrEnd + 1
        Loop

        ' Extract attribute name
        attribute = Mid(outputString, attrStart, attrEnd - attrStart)

        ' Build replacement text
        replacement = "glf_machine_vars(""" & attribute & """).GetValue()"

        ' Reconstruct string with replacement
        beforeMatch = Left(outputString, startPos - 1)
        afterMatch = Mid(outputString, attrEnd)
        outputString = beforeMatch & replacement & afterMatch

        ' Continue searching after the replacement
        startPos = InStr(startPos + Len(replacement), outputString, "machine.")
    Loop

    Glf_ReplaceMachineAttributes = outputString
End Function


' Function Glf_ReplaceGameAttributes(inputString)
'     Dim pattern, replacement, regex, outputString
'     pattern = "game\.([a-zA-Z0-9_]+)"
'     Set regex = New RegExp
'     regex.Pattern = pattern
'     regex.IgnoreCase = True
'     regex.Global = True
'   replacement = "Glf_GameVariable(""$1"")"
'     outputString = regex.Replace(inputString, replacement)
'     Set regex = Nothing
'     Glf_ReplaceGameAttributes = outputString
' End Function

Function Glf_ReplaceGameAttributes(inputString)
    Dim outputString, startPos, attrStart, attrEnd
    Dim beforeMatch, afterMatch, attribute, replacement

    outputString = inputString
    startPos = InStr(outputString, "game.")

    Do While startPos > 0
        ' Position of attribute name starts after "game."
        attrStart = startPos + Len("game.")
        attrEnd = attrStart

        ' Walk forward while characters are valid for identifier
        Do While attrEnd <= Len(outputString)
            Dim ch
            ch = Mid(outputString, attrEnd, 1)
            If Not ((ch >= "a" And ch <= "z") Or (ch >= "A" And ch <= "Z") Or (ch >= "0" And ch <= "9") Or ch = "_") Then
                Exit Do
            End If
            attrEnd = attrEnd + 1
        Loop

        attribute = Mid(outputString, attrStart, attrEnd - attrStart)
        replacement = "Glf_GameVariable(""" & attribute & """)"

        beforeMatch = Left(outputString, startPos - 1)
        afterMatch = Mid(outputString, attrEnd)
        outputString = beforeMatch & replacement & afterMatch

        startPos = InStr(startPos + Len(replacement), outputString, "game.")
    Loop

    Glf_ReplaceGameAttributes = outputString
End Function


' Function Glf_ReplaceModeAttributes(inputString)
'     Dim pattern, replacement, regex, outputString
'     pattern = "modes\.([a-zA-Z0-9_]+)\.([a-zA-Z0-9_]+)"
'     Set regex = New RegExp
'     regex.Pattern = pattern
'     regex.IgnoreCase = True
'     regex.Global = True
'   replacement = "glf_modes(""$1"").GetValue(""$2"")"
'     outputString = regex.Replace(inputString, replacement)
'     Set regex = Nothing
'     Glf_ReplaceModeAttributes = outputString
' End Function

Function Glf_ReplaceModeAttributes(inputString)
    Dim outputString, startPos, modeStart, modeEnd, attrStart, attrEnd
    Dim beforeMatch, afterMatch, modeName, attribute, replacement

    outputString = inputString
    startPos = InStr(outputString, "modes.")

    Do While startPos > 0
        modeStart = startPos + Len("modes.")
        modeEnd = modeStart

        ' Read the mode name
        Do While modeEnd <= Len(outputString)
            Dim ch
            ch = Mid(outputString, modeEnd, 1)
            If Not ((ch >= "a" And ch <= "z") Or (ch >= "A" And ch <= "Z") Or (ch >= "0" And ch <= "9") Or ch = "_") Then
                Exit Do
            End If
            modeEnd = modeEnd + 1
        Loop

        ' Ensure there's a dot after mode name
        If Mid(outputString, modeEnd, 1) = "." Then
            ' Now read the attribute
            attrStart = modeEnd + 1
            attrEnd = attrStart

            Do While attrEnd <= Len(outputString)
                ch = Mid(outputString, attrEnd, 1)
                If Not ((ch >= "a" And ch <= "z") Or (ch >= "A" And ch <= "Z") Or (ch >= "0" And ch <= "9") Or ch = "_") Then
                    Exit Do
                End If
                attrEnd = attrEnd + 1
            Loop

            modeName = Mid(outputString, modeStart, modeEnd - modeStart)
            attribute = Mid(outputString, attrStart, attrEnd - attrStart)

            replacement = "glf_modes(""" & modeName & """).GetValue(""" & attribute & """)"

            beforeMatch = Left(outputString, startPos - 1)
            afterMatch = Mid(outputString, attrEnd)
            outputString = beforeMatch & replacement & afterMatch

            startPos = InStr(startPos + Len(replacement), outputString, "modes.")
        Else
            ' Not a valid modes.mode.attribute, skip ahead
            startPos = InStr(modeEnd + 1, outputString, "modes.")
        End If
    Loop

    Glf_ReplaceModeAttributes = outputString
End Function

' Function Glf_ReplaceKwargsAttributes(inputString)
'     Dim pattern, replacement, regex, outputString
'     pattern = "kwargs\.([a-zA-Z0-9_]+)"
'     Set regex = New RegExp
'     regex.Pattern = pattern
'     regex.IgnoreCase = True
'     regex.Global = True
'     replacement = "glf_dispatch_current_kwargs(""$1"")"
'     outputString = regex.Replace(inputString, replacement)
'     Set regex = Nothing
'     Glf_ReplaceKwargsAttributes = outputString
' End Function

Function Glf_ReplaceKwargsAttributes(inputString)
    Dim outputString, startPos, attrStart, attrEnd
    Dim beforeMatch, afterMatch, attribute, replacement

    outputString = inputString
    startPos = InStr(outputString, "kwargs.")

    Do While startPos > 0
        attrStart = startPos + Len("kwargs.")
        attrEnd = attrStart

        ' Walk forward through the attribute name
        Do While attrEnd <= Len(outputString)
            Dim ch
            ch = Mid(outputString, attrEnd, 1)
            If Not ((ch >= "a" And ch <= "z") Or (ch >= "A" And ch <= "Z") Or (ch >= "0" And ch <= "9") Or ch = "_") Then
                Exit Do
            End If
            attrEnd = attrEnd + 1
        Loop

        attribute = Mid(outputString, attrStart, attrEnd - attrStart)

        replacement = "glf_dispatch_current_kwargs(""" & attribute & """)"

        beforeMatch = Left(outputString, startPos - 1)
        afterMatch = Mid(outputString, attrEnd)
        outputString = beforeMatch & replacement & afterMatch

        startPos = InStr(startPos + Len(replacement), outputString, "kwargs.")
    Loop

    Glf_ReplaceKwargsAttributes = outputString
End Function


Function Glf_GameVariable(value)
  Glf_GameVariable = False
  Select Case value
    Case "tilted"
      Glf_GameVariable = glf_gameTilted
    Case "balls_per_game"
      Glf_GameVariable = glf_game.BallsPerGame()
    Case "balls_in_play"
      Glf_GameVariable = glf_BIP
  End Select
End Function

' Function Glf_CheckForGetPlayerState(inputString)
'     Dim pattern, regex, matches, match, hasGetPlayerState, attribute, playerNumber
'   inputString = Glf_ReplaceCurrentPlayerAttributes(inputString)
'   inputString = Glf_ReplaceAnyPlayerAttributes(inputString)
'     pattern = "GetPlayerState\(""([a-zA-Z0-9_]+)""\)"
'     Set regex = New RegExp
'     regex.Pattern = pattern
'     regex.IgnoreCase = True
'     regex.Global = False

'     Set matches = regex.Execute(inputString)
'     If matches.Count > 0 Then
'         hasGetPlayerState = True
'     playerNumber = -1 'Current Player
'         attribute = matches(0).SubMatches(0)
'     Else
'         hasGetPlayerState = False
'         attribute = ""
'     playerNumber = Null
'     End If


'   pattern = "GetPlayerStateForPlayer\(([0-3]), ""([a-zA-Z0-9_]+)""\)"
'     Set regex = New RegExp
'     regex.Pattern = pattern
'     regex.IgnoreCase = True
'     regex.Global = False

'     Set matches = regex.Execute(inputString)
'     If matches.Count > 0 Then
'         hasGetPlayerState = True
'     playerNumber = Int(matches(0).SubMatches(0))
'         attribute = matches(0).SubMatches(1)
'     Else
'         hasGetPlayerState = False
'         attribute = ""
'     playerNumber = Null
'     End If

'     Set regex = Nothing
'     Set matches = Nothing

'     Glf_CheckForGetPlayerState = Array(hasGetPlayerState, attribute, playerNumber)
' End Function

Function Glf_CheckForGetPlayerState(inputString)
    Dim hasGetPlayerState, attribute, playerNumber
    Dim pos, startAttr, endAttr, ch, temp

    ' First, apply replacements
    inputString = Glf_ReplaceCurrentPlayerAttributes(inputString)
    inputString = Glf_ReplaceAnyPlayerAttributes(inputString)

    ' Check for GetPlayerState("...")
    pos = InStr(inputString, "GetPlayerState(""")
    If pos > 0 Then
        startAttr = pos + Len("GetPlayerState(""")
        endAttr = startAttr
        Do While endAttr <= Len(inputString)
            ch = Mid(inputString, endAttr, 1)
            If ch = """" Then Exit Do
            endAttr = endAttr + 1
        Loop

        attribute = Mid(inputString, startAttr, endAttr - startAttr)
        hasGetPlayerState = True
        playerNumber = -1 ' current player
    Else
        ' Check for GetPlayerStateForPlayer(n, "...")
        pos = InStr(inputString, "GetPlayerStateForPlayer(")
        If pos > 0 Then
            ' Extract player number
            startAttr = pos + Len("GetPlayerStateForPlayer(")
            endAttr = InStr(startAttr, inputString, ",")
            temp = Trim(Mid(inputString, startAttr, endAttr - startAttr))
            If IsNumeric(temp) Then
                playerNumber = CInt(temp)
            Else
                playerNumber = Null
            End If

            ' Extract attribute name
            startAttr = InStr(endAttr, inputString, """") + 1
            endAttr = InStr(startAttr, inputString, """")
            attribute = Mid(inputString, startAttr, endAttr - startAttr)

            hasGetPlayerState = True
        Else
            hasGetPlayerState = False
            attribute = ""
            playerNumber = Null
        End If
    End If

    Glf_CheckForGetPlayerState = Array(hasGetPlayerState, attribute, playerNumber)
End Function

' Function Glf_CheckForDeviceState(inputString)
'     Dim pattern, regex, matches, match, hasDeviceState, attribute, deviceType, deviceName
'     pattern = "devices\.([a-zA-Z0-9_]+)\.([a-zA-Z0-9_]+)\.([a-zA-Z0-9_]+)"
'     Set regex = New RegExp
'     regex.Pattern = pattern
'     regex.IgnoreCase = True
'     regex.Global = False
'     Set matches = regex.Execute(inputString)
'     If matches.Count > 0 Then
'         hasDeviceState = True
'     deviceType = matches(0).SubMatches(0)
'     deviceType = Left(deviceType, Len(deviceType)-1)
'         deviceName = matches(0).SubMatches(1)
'     attribute = matches(0).SubMatches(2)
'     attribute = Left(attribute, Len(attribute)-1)
'     Else
'         hasDeviceState = False
'         deviceType = Empty
'     deviceName = Empty
'     attribute = Empty
'     End If

'     Set regex = Nothing
'     Set matches = Nothing

'     Glf_CheckForDeviceState = Array(hasDeviceState, deviceType, deviceName, attribute)
' End Function

Function Glf_CheckForDeviceState(inputString)
    Dim hasDeviceState, deviceType, deviceName, attribute
    Dim pos, segStart, segEnd, part1, part2, part3
    Dim tempStr

    hasDeviceState = False
    deviceType = Empty
    deviceName = Empty
    attribute = Empty

    pos = InStr(inputString, "devices.")
    If pos > 0 Then
        segStart = pos + Len("devices.")

        ' Get first segment (deviceType)
        segEnd = InStr(segStart, inputString, ".")
        If segEnd > 0 Then
            part1 = Mid(inputString, segStart, segEnd - segStart)
            segStart = segEnd + 1

            ' Get second segment (deviceName)
            segEnd = InStr(segStart, inputString, ".")
            If segEnd > 0 Then
                part2 = Mid(inputString, segStart, segEnd - segStart)
                segStart = segEnd + 1

                ' Get third segment (attribute)
                segEnd = segStart
                Do While segEnd <= Len(inputString)
                    Dim ch
                    ch = Mid(inputString, segEnd, 1)
                    If Not ((ch >= "a" And ch <= "z") Or (ch >= "A" And ch <= "Z") Or (ch >= "0" And ch <= "9") Or ch = "_") Then
                        Exit Do
                    End If
                    segEnd = segEnd + 1
                Loop
                part3 = Mid(inputString, segStart, segEnd - segStart)

                If part1 <> "" And part2 <> "" And part3 <> "" Then
                    hasDeviceState = True
                    deviceType = Left(part1, Len(part1) - 1) ' mimic your original trimming
                    deviceName = part2
                    attribute = Left(part3, Len(part3) - 1)  ' mimic your original trimming
                End If
            End If
        End If
    End If

    Glf_CheckForDeviceState = Array(hasDeviceState, deviceType, deviceName, attribute)
End Function

Function Glf_ConvertIf(value, retName)
    Dim parts, condition, truePart, falsePart, isVariable
    parts = Split(value, " if ")
    truePart = Trim(parts(0))
    Dim conditionAndFalsePart
    conditionAndFalsePart = Split(parts(1), " else ")
    condition = Trim(conditionAndFalsePart(0))
    falsePart = Trim(conditionAndFalsePart(1))
  isVariable = Glf_IsCondition(truePart)
  If Not IsNull(isVariable) Then
    'The input needs formatting
    parts = Split(isVariable, ":")
    If UBound(parts) = 1 Then
      truePart = "Glf_FormatValue(" & parts(0) & ", """ & parts(1) & """)"
    End If
  End If
  isVariable = Glf_IsCondition(falsePart)
  If Not IsNull(isVariable) Then
    'The input needs formatting
    parts = Split(isVariable, ":")
    If UBound(parts) = 1 Then
      falsePart = "Glf_FormatValue(" & parts(0) & ", """ & parts(1) & """)"
    End If
  End If

    Dim vbscriptIfStatement
    vbscriptIfStatement = "If " & condition & " Then" & vbCrLf & _
                          "    "&retName&" = " & truePart & vbCrLf & _
                          "Else" & vbCrLf & _
                          "    "&retName&" = " & falsePart & vbCrLf & _
                          "End If"
  Glf_ConvertIf = vbscriptIfStatement
End Function

Function Glf_ConvertCondition(value, retName)
  value = Replace(value, "==", "=")
  value = Replace(value, "!=", "<>")
  value = Replace(value, "&&", "And")
  value = Replace(value, "||", "Or")
  Glf_ConvertCondition = "    "&retName&" = " & value
End Function

Function Glf_ConvertDynamicKwargs(input, retName)
  'Value is a string of key values
  Dim templateCode : templateCode = ""
  Dim arrayOfValues : arrayOfValues = Split(input, ",")
  Dim kvp
  templateCode = templateCode & vbTab & "Dim kwargs : Set kwargs = GlfKwargs()" & vbCrLf
  For Each kvp in arrayOfValues
    Dim key,value
    Dim split_key : split_key = Split(kvp, ":")
    key = split_key(0)
    split_key = Split(kvp, ":")
    value = split_key(1)
    templateCode = templateCode & vbTab & "kwargs.Add """ & key & """, " & value & vbCrLf
  Next

  templateCode = templateCode & vbTab & "Set " & retName & " = kwargs"

  Glf_ConvertDynamicKwargs = templateCode
End Function

Function Glf_FormatValue(value, formatString)
    Dim padChar, width, result, align, hasCommas

  If TypeName(value) = "Boolean" Then
        If Not value Then
            Glf_FormatValue = ""
            Exit Function
        End If
    End If

    ' Default values
    padChar = " " ' Default padding character is space
    align = ">"   ' Default alignment is right
    width = 0     ' Default width is 0 (no padding)
    hasCommas = False ' Default: No thousand separators

    ' Check for :, in the format string
    If InStr(formatString, ",") > 0 Then
        hasCommas = True
        formatString = Replace(formatString, ",", "") ' Remove , from format string
    End If

    ' Parse the remaining format string
    If Len(formatString) >= 2 Then
        padChar = Mid(formatString, 1, 1)
        align = Mid(formatString, 2, 1)
        width = CInt(Mid(formatString, 3))
    End If

    ' Format the value
    If hasCommas And IsNumeric(value) Then
        ' Add commas as thousand separators
        Dim numStr, decimalPart
        numStr = CStr(value)
        If InStr(numStr, ".") > 0 Then
            decimalPart = Mid(numStr, InStr(numStr, "."))
            numStr = Left(numStr, InStr(numStr, ".") - 1)
        Else
            decimalPart = ""
        End If

        Dim i, formattedNum
        formattedNum = ""
        For i = Len(numStr) To 1 Step -1
            formattedNum = Mid(numStr, i, 1) & formattedNum
            If ((Len(numStr) - i) Mod 3 = 2) And (i > 1) Then
                formattedNum = "," & formattedNum
            End If
        Next
        value = formattedNum & decimalPart
    End If

    ' Apply alignment and padding
    Select Case align
        Case ">" ' Right-align with padding
            If Len(value) < width Then
                result = String(width - Len(value), padChar) & value
            Else
                result = value
            End If
        Case "<" ' Left-align with padding
            If Len(value) < width Then
                result = value & String(width - Len(value), padChar)
            Else
                result = value
            End If
        Case "^" ' Center-align with padding
            Dim leftPad, rightPad
            If Len(value) < width Then
                leftPad = (width - Len(value)) \ 2
                rightPad = width - Len(value) - leftPad
                result = String(leftPad, padChar) & value & String(rightPad, padChar)
            Else
                result = value
            End If
        Case Else ' Default: Return value as is
            result = value
    End Select

    Glf_FormatValue = result
End Function

Public Sub Glf_SetInitialPlayerVar(variable_name, initial_value)
  glf_initialVars.Add variable_name, initial_value
End Sub

Function glf_ReadShowYAMLFiles()
    Dim fso, folder, file, yamlFiles, fileContent
    Set fso = CreateObject("Scripting.FileSystemObject")

    ' Check if the directory exists
    If Not fso.FolderExists(directoryPath) Then
        WScript.Echo "Directory does not exist: " & directoryPath
        Exit Function
    End If

    ' Initialize the array to store file contents
    ReDim yamlFiles(-1)

    ' Get the folder object
    Set folder = fso.GetFolder(directoryPath)

    ' Iterate through the files in the directory
    For Each file In folder.Files
        ' Check if the file has a .yaml extension
        If LCase(fso.GetExtensionName(file.Name)) = "yaml" Then
            ' Read the file content
            Set fileContent = fso.OpenTextFile(file.Path, 1) ' 1 = ForReading
            ReDim Preserve yamlFiles(UBound(yamlFiles) + 1)
            yamlFiles(UBound(yamlFiles)) = fileContent.ReadAll
            fileContent.Close
        End If
    Next

    ' Return the array of YAML file contents
    ReadYAMLFiles = yamlFiles
End Function

Sub glf_ConvertYamlShowToGlfShow(yamlFilePath)
    Dim fso, file, content, lines, line, output, i, stepLights
    Dim glf_ShowName, stepTime, lightsDict, key, lightName, color, intensity, lightParts

    ' Initialize FileSystemObject
    Set fso = CreateObject("Scripting.FileSystemObject")

    ' Read the YAML file
    Set file = fso.OpenTextFile(yamlFilePath, 1)
    content = file.ReadAll
    file.Close

    ' Split the content into lines
    lines = Split(content, vbLf)

    ' Initialize variables
    glf_ShowName = fso.GetBaseName(yamlFilePath)
    output = "Dim glf_Show" & glf_ShowName & " : Set glf_Show" & glf_ShowName & " = (new GlfShow)(""" & glf_ShowName & """)" & vbCrLf
    output = output & "With glf_Show" & glf_ShowName & vbCrLf

    ' Iterate through lines to extract steps and lights
  stepLights = ""
    For i = 0 To UBound(lines)
        line = Trim(lines(i))

        ' Close the step when a new time step or end of file is reached
        If InStr(line, "- time:") = 1 And stepLights <> "" Then
      'output = output & vbTab & vbTab & ".Lights = Array("& Left(stepLights, Len(stepLights) - 1)&")" & vbCrLf
      output = output & vbTab & vbTab & ".Lights = Array(" & _
            SplitStringWithUnderscore(Left(stepLights, Len(stepLights) - 1), 1500) & ")" & vbCrLf
            output = output & vbTab & "End With" & vbCrLf
      stepLights = ""
    End If

        ' Identify time steps
        If InStr(line, "- time:") = 1 Then
      Dim split_key : split_key = Split(line, ":")
            stepTime = Trim(split_key(1))
            output = output & vbTab & "With .AddStep(" & stepTime & ", Null, Null)" & vbCrLf

    ElseIf InStr(line, "lights:") = 1 Then
      'Do Nothing
        ' Identify lights and colors
        ElseIf InStr(line, ":") > 0 Then
            lightParts = Split(line, ":")
      key = lightParts(0)
            lightName = Trim(key)

            color = lightParts(1)
      color = Trim(color)
      color = Replace(color, """", "")
            'msgbox key & "<>" & color
            ' Default intensity to 100 if color is not "000000"
            intensity = 100
            'If color = "000000" Then
            '    intensity = 0
            'End If

            ' Add lights to output
            'If intensity > 0 Then

            'End If
      stepLights = stepLights + """" & lightName & "|" & intensity & "|" & color & ""","

        End If
    Next
    'msgbox Len(stepLights)
    ' Close the final step and the show
  If Len(stepLights) = 0 Then
    output = output & vbTab & vbTab & ".Lights = Array()" & vbCrLf
  Else
    output = output & vbTab & vbTab & ".Lights = Array(" & _
    SplitStringWithUnderscore(Left(stepLights, Len(stepLights) - 1), 1500) & ")" & vbCrLf
  End If

    output = output & vbTab & "End With" & vbCrLf
    output = output & "End With" & vbCrLf

    ' Write the output to a VBScript file
    Dim outputFilePath
    outputFilePath = fso.GetParentFolderName(yamlFilePath) & "\" & glf_ShowName & ".vbs"
    Set file = fso.CreateTextFile(outputFilePath, True)
    file.Write output
    file.Close

    ' Clean up
    Set fso = Nothing
    Set file = Nothing
End Sub

Function SplitStringWithUnderscore(str, maxLength)
    Dim result, i, strLen
    strLen = Len(str)
    result = ""

    If strLen <= maxLength Then
        result = str
    Else
        For i = 1 To strLen Step maxLength
            If i + maxLength - 1 < strLen Then
                result = result & Mid(str, i, maxLength) & "_" & vbCrLf & vbTab & vbTab & vbTab
            Else
                result = result & Mid(str, i, maxLength)
            End If
        Next
    End If

    SplitStringWithUnderscore = result
End Function

Function GlfShotProfiles(name)
  If Glf_ShotProfiles.Exists(name) Then
    Set GlfShotProfiles = Glf_ShotProfiles(name)
  Else
    Dim new_shotprofile : Set new_shotprofile = (new GlfShotProfile)(name)
    Glf_ShotProfiles.Add name, new_shotprofile
    Set GlfShotProfiles = new_shotprofile
  End If
End Function

Function CreateGlfMode(name, priority)
  If Not glf_modes.Exists(name) Then
    Dim mode : Set mode = (new Mode)(name, priority)
    glf_modes.Add name, mode
    Set CreateGlfMode = mode
  End If
End Function

Function GlfModes(name)
  If glf_modes.Exists(name) Then
    Set GlfModes = glf_modes(name)
  Else
    GlfModes = Null
  End If
End Function

Function GlfKwargs()
  Set GlfKwargs = CreateObject("Scripting.Dictionary")
End Function

Function Glf_ConvertShow(show, tokens)

  Dim showStep, light, lightsCount, x,tagLight, tagLights, lightParts, token, stepIdx
  Dim newShow, lightsInShow
  Set lightsInShow = CreateObject("Scripting.Dictionary")

  ReDim newShow(UBound(show.Steps().Keys()))
  stepIdx = 0
  For Each showStep in show.Steps().Items()

    If UBound(showStep.ShowsInStep().Keys()) > -1 Then
      Dim show_item

      Dim show_items : show_items = showStep.ShowsInStep().Items()
          For Each show_item in show_items
        If Not glf_cached_shows.Exists(show_item.Key & "__" & show_item.InternalCacheId) Then
          Dim cached_show
          cached_show = Glf_ConvertShow(show_item.Show, show_item.Tokens)
          glf_cached_shows.Add show_item.Key & "__" & show_item.InternalCacheId, cached_show
        End If
      Next
    End If

    lightsCount = 0
    For Each light in showStep.Lights
      lightParts = Split(light, "|")
      If IsArray(lightParts) Then
        token = Glf_IsToken(lightParts(0))
        If IsNull(token) And Not glf_lightNames.Exists(lightParts(0)) Then
          tagLights = glf_lightTags("T_"&lightParts(0)).Keys()
          lightsCount = UBound(tagLights)+1
        Else
          If IsNull(token) Then
            lightsCount = lightsCount + 1
          Else
            'resolve token lights
            If Not glf_lightNames.Exists(tokens(token)) Then
              'token is a tag
              tagLights = glf_lightTags("T_"&tokens(token)).Keys()
              lightsCount = UBound(tagLights)+1
            Else
              lightsCount = lightsCount + 1
            End If
          End If
        End If
      End If
    Next

    Dim seqArray
    ReDim seqArray(lightsCount-1)
    x=0
    For Each light in showStep.Lights
      lightParts = Split(light, "|")
      Dim lightColor : lightColor = ""
      Dim fadeMs : fadeMs = ""
      Dim fade_duration : fade_duration = -1
      Dim intensity
      Dim step_number : step_number = -1
      Dim localLightsSet : Set localLightsSet = CreateObject("Scripting.Dictionary")
      If IsNull(Glf_IsToken(lightParts(1))) Then
        intensity = lightParts(1)
      Else
        intensity = tokens(Glf_IsToken(lightParts(1)))
      End If
      If Ubound(lightParts) >= 2 Then

        If IsNull(Glf_IsToken(lightParts(2))) Then
          lightColor = lightParts(2)
        Else
          lightColor = tokens(Glf_IsToken(lightParts(2)))
        End If
        If UBound(lightParts) = 3 Then
          If IsNull(Glf_IsToken(lightParts(3))) Then
            fade_duration = lightParts(3)
          Else
            fade_duration = tokens(Glf_IsToken(lightParts(3)))
          End If
          step_number = fade_duration * 0.01
          step_number = Round(step_number, 0) + 2
          If step_number<4 Then
            step_number = 4
          End If
          fadeMs = "|" & step_number
        End If
      End If

      Dim resolved_light_name

      If IsArray(lightParts) Then
        token = Glf_IsToken(lightParts(0))
        If IsNull(token) And Not glf_lightNames.Exists(lightParts(0)) Then
          tagLights = glf_lightTags("T_"&lightParts(0)).Keys()
          resolved_light_name = "T_"&lightParts(0)
          For Each tagLight in tagLights
            If UBound(lightParts) >=1 Then
              seqArray(x) = tagLight & "|"&intensity&"|" & AdjustHexColor(lightColor, intensity) & "|fade_" & resolved_light_name & "_?_" & AdjustHexColor(lightColor, intensity) & "_steps_" & step_number & fadeMs
            Else
              seqArray(x) = tagLight & "|"&intensity & "|000000" & "|fade_" & resolved_light_name & "_?_" & AdjustHexColor(lightColor, intensity) & "_steps_" & step_number & fadeMs
            End If
            If Not localLightsSet.Exists(tagLight) Then
              localLightsSet.Add tagLight, True
            End If
            If Not lightsInShow.Exists(tagLight) Then
              lightsInShow.Add tagLight, True
            End If
            x=x+1
          Next
        Else
          If IsNull(token) Then
            resolved_light_name = lightParts(0)
            If UBound(lightParts) >= 1 Then
              seqArray(x) = lightParts(0) & "|"&intensity&"|"&AdjustHexColor(lightColor, intensity) & "|fade_" & resolved_light_name & "_?_" & AdjustHexColor(lightColor, intensity) & "_steps_" & step_number & fadeMs
            Else
              seqArray(x) = lightParts(0) & "|"&intensity & "|000000" & "|fade_" & resolved_light_name & "_?_" & AdjustHexColor(lightColor, intensity) & "_steps_" & step_number & fadeMs
            End If
            If Not localLightsSet.Exists(lightParts(0)) Then
              localLightsSet.Add lightParts(0), True
            End If
            If Not lightsInShow.Exists(lightParts(0)) Then
              lightsInShow.Add lightParts(0), True
            End If
            x=x+1
          Else
            'resolve token lights
            If Not glf_lightNames.Exists(tokens(token)) Then
              'token is a tag
              tagLights = glf_lightTags("T_"&tokens(token)).Keys()
              resolved_light_name = "T_"&tokens(token)
              For Each tagLight in tagLights
                If UBound(lightParts) >=1 Then
                  seqArray(x) = tagLight & "|"&intensity&"|"&AdjustHexColor(lightColor, intensity) & "|fade_" & resolved_light_name & "_?_" & AdjustHexColor(lightColor, intensity) & "_steps_" & step_number & fadeMs
                Else
                  seqArray(x) = tagLight & "|"&intensity & "|000000" & "|fade_" & resolved_light_name & "_?_" & AdjustHexColor(lightColor, intensity) & "_steps_" & step_number & fadeMs
                End If
                If Not localLightsSet.Exists(tagLight) Then
                  localLightsSet.Add tagLight, True
                End If
                If Not lightsInShow.Exists(tagLight) Then
                  lightsInShow.Add tagLight, True
                End If
                x=x+1
              Next
            Else
              resolved_light_name = tokens(token)
              If UBound(lightParts) >= 1 Then
                seqArray(x) = tokens(token) & "|"&intensity&"|"&AdjustHexColor(lightColor, intensity) & "|fade_" & resolved_light_name & "_?_" & AdjustHexColor(lightColor, intensity) & "_steps_" & step_number & fadeMs
              Else
                seqArray(x) = tokens(token) & "|"&intensity & "|000000" & "|fade_" & resolved_light_name & "_?_" & AdjustHexColor(lightColor, intensity) & "_steps_" & step_number & fadeMs
              End If
              If Not localLightsSet.Exists(tokens(token)) Then
                localLightsSet.Add tokens(token), True
              End If
              If Not lightsInShow.Exists(tokens(token)) Then
                lightsInShow.Add tokens(token), True
              End If
              x=x+1
            End If
          End If
        End If

        'Generate a fake show for the fade in the format light from ? color to lightColor over x steps
        If fadeMs <> "" Then
          Dim fade_seq, i, step_duration,cached_rgb_seq

          Dim cache_name : cache_name = "fade_" & resolved_light_name & "_?_" & AdjustHexColor(lightColor, intensity) & "_steps_" & step_number
          If Not glf_cached_shows.Exists(cache_name & "__-1") Then
            'MsgBox cache_name
            Dim fade_show : Set fade_show = CreateGlfShow(cache_name)


            step_duration = (fade_duration / step_number)/1000
            For i=1 to step_number

              Dim lightsArr
              ReDim lightsArr(UBound(localLightsSet.Keys))
              Dim localLightItem, k
              k=0
              For Each localLightItem in localLightsSet.Keys()
                cached_rgb_seq = Glf_FadeRGB("FF0000", AdjustHexColor(lightColor, intensity), step_number)
                ReDim fade_seq(step_number - 1)
                Dim j
                For j = 0 To UBound(fade_seq)
                  fade_seq(j) = localLightItem & "|100|" & cached_rgb_seq(j)
                Next
                lightsArr(k) = fade_seq(i-1)
                k=k+1
              Next
              With fade_show
                With .AddStep(Null, Null, step_duration)
                  .Lights = lightsArr
                End With
              End With
            Next
            cached_show = Glf_ConvertShow(fade_show, Null)
            'msgbox "Converted show: " & cache_name & ", steps: " & ubound(cached_show(0)) & ". Fade Replacements: " & ubound(cached_rgb_seq)
            glf_cached_shows.Add cache_name & "__-1", cached_show
          End If
        End If

      End If
    Next
    'Glf_WriteDebugLog "Convert Show", Join(seqArray)
    newShow(stepIdx) = seqArray
    stepIdx = stepIdx + 1
  Next
  Glf_ConvertShow = Array(newShow, lightsInShow)
End Function

Private Function Glf_IsToken(mainString)
  ' Check if the string contains an opening parenthesis and ends with a closing parenthesis
  If InStr(mainString, "(") > 0 And Right(mainString, 1) = ")" Then
    ' Extract the substring within the parentheses
    Dim startPos, subString
    startPos = InStr(mainString, "(")
    subString = Mid(mainString, startPos + 1, Len(mainString) - startPos - 1)
    Glf_IsToken = subString
  Else
    Glf_IsToken = Null
  End If
End Function

Private Function Glf_IsCondition(mainString)
  ' Check if the string contains an opening { and ends with a closing }
  If InStr(mainString, "{") > 0 And Right(mainString, 1) = "}" Then
    Dim startPos, subString
    startPos = InStr(mainString, "{")
    subString = Mid(mainString, startPos + 1, Len(mainString) - startPos - 1)
    Glf_IsCondition = subString
  Else
    Glf_IsCondition = Null
  End If
End Function

Function Glf_RotateArray(arr, direction)
    Dim n, rotatedArray, i
    ReDim rotatedArray(UBound(arr))

    If LCase(direction) = "l" Then
        For i = 0 To UBound(arr) - 1
            rotatedArray(i) = arr(i + 1)
        Next
        rotatedArray(UBound(arr)) = arr(0)
    ElseIf LCase(direction) = "r" Then
        For i = UBound(arr) To 1 Step -1
            rotatedArray(i) = arr(i - 1)
        Next
        rotatedArray(0) = arr(UBound(arr))
    Else
        ' Invalid direction
        Glf_RotateArray = arr
        Exit Function
    End If

    ' Return the rotated array
    Glf_RotateArray = rotatedArray
End Function

Function Glf_CopyArray(arr)
    Dim newArr, i
    ReDim newArr(UBound(arr))
    For i = 0 To UBound(arr)
        newArr(i) = arr(i)
    Next
    Glf_CopyArray = newArr
End Function

Function Glf_IsInArray(value, arr)
    Dim i
    Glf_IsInArray = False

    For i = LBound(arr) To UBound(arr)
        If arr(i) = value Then
            Glf_IsInArray = True
            Exit Function
        End If
    Next
End Function

Function CreateGlfInput(value)
  Set CreateGlfInput = (new GlfInput)(value)
End Function

Class GlfInput
  Private m_raw, m_value, m_isGetRef, m_isPlayerState, m_playerStateValue, m_playerStatePlayer, m_isDeviceState, m_deviceStateDeviceType, m_deviceStateDeviceName, m_deviceStateDeviceAttr

    Public Property Get Value()
    If m_isGetRef = True Then
      Value = GetRef(m_value)(Null)
    Else
      Value = m_value
    End If
  End Property

    Public Property Get Raw() : Raw = m_raw : End Property
  Public Property Get RawMValue() : RawMValue = m_value : End Property

  Public Property Get IsPlayerState() : IsPlayerState = m_isPlayerState : End Property
  Public Property Get PlayerStateValue() : PlayerStateValue = m_playerStateValue : End Property
  Public Property Get PlayerStatePlayer() : PlayerStatePlayer = m_playerStatePlayer : End Property

  Public Property Get IsDeviceState() : IsDeviceState = m_isDeviceState : End Property
  Public Property Get DeviceStateEvent() : DeviceStateEvent = m_deviceStateDeviceType & "_" & m_deviceStateDeviceName & "_" & m_deviceStateDeviceAttr : End Property

  Public default Function init(input)
        m_raw = input
        Dim parsedInput : parsedInput = Glf_ParseInput(input)
    Dim playerState : playerState = Glf_CheckForGetPlayerState(input)
    m_isPlayerState = playerState(0)
    m_playerStateValue = playerState(1)
    m_playerStatePlayer = playerState(2)
    Dim deviceState : deviceState = Glf_CheckForDeviceState(input)
    m_isDeviceState = deviceState(0)
    m_deviceStateDeviceType = deviceState(1)
    m_deviceStateDeviceName = deviceState(2)
    m_deviceStateDeviceAttr = deviceState(3)

        m_value = parsedInput(0)
        m_isGetRef = parsedInput(2)
      Set Init = Me
  End Function

End Class

Function Glf_FadeRGB(color1, color2, steps)
  If glf_cached_rgb_fades.Exists(color1&"_"&color2&"_"&CStr(steps)) Then
    Glf_FadeRGB = glf_cached_rgb_fades(color1&"_"&color2&"_"&CStr(steps))
    Exit Function
  End If

  Dim cached_rgb_seq : cached_rgb_seq = Array()
  Dim r1, g1, b1, r2, g2, b2, c1,c2
  Dim i
  Dim r, g, b
  c1 = clng( RGB( Glf_HexToInt(Left(color1, 2)), Glf_HexToInt(Mid(color1, 3, 2)), Glf_HexToInt(Right(color1, 2)))  )
  c2 = clng( RGB( Glf_HexToInt(Left(color2, 2)), Glf_HexToInt(Mid(color2, 3, 2)), Glf_HexToInt(Right(color2, 2)))  )

  r1 = c1 Mod 256
  g1 = (c1 \ 256) Mod 256
  b1 = (c1 \ (256 * 256)) Mod 256

  r2 = c2 Mod 256
  g2 = (c2 \ 256) Mod 256
  b2 = (c2 \ (256 * 256)) Mod 256

  ReDim cached_rgb_seq(steps - 1)
  Dim rgb_color
  For i = 0 To steps - 1
    r = r1 + (r2 - r1) * i / (steps - 1)
    g = g1 + (g2 - g1) * i / (steps - 1)
    b = b1 + (b2 - b1) * i / (steps - 1)
    rgb_color = Glf_RGBToHex(CInt(r), CInt(g), CInt(b))
    cached_rgb_seq(i) = rgb_color
  Next
  glf_cached_rgb_fades.Add color1&"_"&color2&"_"&CStr(steps), cached_rgb_seq
  Glf_FadeRGB = cached_rgb_seq
End Function

Function Glf_RGBToHex(r, g, b)
  Glf_RGBToHex = Right("0" & Hex(r), 2) & _
  Right("0" & Hex(g), 2) & _
  Right("0" & Hex(b), 2)
End Function

Private Function Glf_HexToInt(hex)
  Glf_HexToInt = CInt("&H" & hex)
End Function

'******************************************************
'*****   GLF Shows                               ****
'******************************************************

Function CreateGlfShow(name)
  Dim show : Set show = (new GlfShow)(name)
  'msgbox name
  glf_shows.Add name, show
  Set CreateGlfShow = show
End Function

With CreateGlfShow("on")
  With .AddStep(Null, Null, -1)
    .Lights = Array("(lights)|100")
  End With
End With

With CreateGlfShow("off")
  With .AddStep(Null, Null, -1)
    .Lights = Array("(lights)|100|000000")
  End With
End With

With CreateGlfShow("flash")
  With .AddStep(Null, Null, 1)
    .Lights = Array("(lights)|100")
  End With
  With .AddStep(Null, Null, 1)
    .Lights = Array("(lights)|100|000000")
  End With
End With



With CreateGlfShow("flash_color")
  With .AddStep(Null, Null, 1)
    .Lights = Array("(lights)|100|(color)")
  End With
  With .AddStep(Null, Null, 1)
    .Lights = Array("(lights)|100|000000")
  End With
End With

With CreateGlfShow("led_color")
  With .AddStep(Null, Null, -1)
    .Lights = Array("(lights)|100|(color)")
  End With
End With

With CreateGlfShow("fade_led_color")
  With .AddStep(Null, Null, -1)
    .Lights = Array("(lights)|100|(color)|(fade)")
  End With
End With

With CreateGlfShow("fade_rgb_test")
  With .AddStep(Null, Null, 1)
    .Lights = Array("(lights)|100|ff0000|(fade)")
  End With
  With .AddStep(Null, Null, 1)
    .Lights = Array("(lights)|100|00ff00|(fade)")
  End With
  With .AddStep(Null, Null, 1)
    .Lights = Array("(lights)|100|0000ff|(fade)")
  End With
End With

With GlfShotProfiles("default")
  With .States("on")
    .Show = "flash"
  End With
  With .States("off")
    .Show = "off"
  End With
End With

With GlfShotProfiles("flash_color")
  With .States("off")
    .Show = "off"
  End With
  With .States("on")
    .Show = "flash_color"
  End With
End With

Function AdjustHexColor(hexColor, percentage)
    ' Ensure percentage is between 0 and 100
    If percentage < 0 Then percentage = 0
    If percentage > 100 Then percentage = 100

    ' Parse the R, G, B components
    Dim r, g, b
    r = CLng("&H" & Mid(hexColor, 1, 2))
    g = CLng("&H" & Mid(hexColor, 3, 2))
    b = CLng("&H" & Mid(hexColor, 5, 2))

    ' Adjust the RGB components by the percentage
    r = Int(r * (percentage / 100))
    g = Int(g * (percentage / 100))
    b = Int(b * (percentage / 100))

    ' Ensure the values are within the valid range (0 to 255)
    r = FixRange(r)
    g = FixRange(g)
    b = FixRange(b)

    ' Convert back to hex and return the adjusted color
    AdjustHexColor = PadHex(Hex(r)) & PadHex(Hex(g)) & PadHex(Hex(b))
End Function

' Helper function to ensure values stay within range
Function FixRange(value)
    If value < 0 Then value = 0
    If value > 255 Then value = 255
    FixRange = value
End Function

' Helper function to pad single digit hex values with a leading zero
Function PadHex(hexValue)
    If Len(hexValue) < 2 Then
        PadHex = "0" & hexValue
    Else
        PadHex = hexValue
    End If
End Function

'******************************************************
'*****   GLF Pin Events                            ****
'******************************************************

Const GLF_GAME_START = "game_start"
Const GLF_GAME_STARTED = "game_started"
Const GLF_BALL_WILL_END = "ball_will_end"
Const GLF_BALL_ENDING = "ball_ending"
Const GLF_BALL_ENDED = "ball_ended"
Const GLF_NEXT_PLAYER = "next_player"
Const GLF_BALL_DRAIN = "ball_drain"
Const GLF_BALL_STARTED = "ball_started"

'******************************************************
'*****   GLF Player State                          ****
'******************************************************

Const GLF_SCORE = "score"
Const GLF_CURRENT_BALL = "ball"
Const GLF_INITIALS = "initials"


Function EnableGlfBallSearch()
  Dim ball_search : Set ball_search = (new GlfBallSearch)()
    With CreateGlfMode("glf_ball_search", 100)
        .StartEvents = Array("reset_complete")

        With .TimedSwitches("flipper_cradle")
            .Switches = Array("s_left_flipper", "s_right_flipper")
            .Time = 3000
            .EventsWhenActive = Array("flipper_cradle")
            .EventsWhenReleased = Array("flipper_release")
        End With
    End With
    glf_ballsearch_enabled = True
  Set EnableGlfBallSearch = ball_search
End Function

Class GlfBallSearch

    Private m_debug
    Private m_timeout
    Private m_search_interval
    Private m_ball_search_wait_after_iteration
    Private m_phase
    Private m_devices
    Private m_current_device_type

    Public Property Get GetValue(value)
        'Select Case value
            'Case
        'End Select
        GetValue = True
    End Property

    Public Property Let Timeout(value): Set m_timeout = CreateGlfInput(value): End Property
    Public Property Get Timeout(): Timeout = m_timeout.Value(): End Property

    Public Property Let SearchInterval(value): Set m_search_interval = CreateGlfInput(value): End Property
    Public Property Get SearchInterval(): SearchInterval = m_search_interval.Value(): End Property

    Public Property Let BallSearchWaitAfterIteration(value): Set m_ball_search_wait_after_iteration = CreateGlfInput(value): End Property
    Public Property Get BallSearchWaitAfterIteration(): BallSearchWaitAfterIteration = m_ball_search_wait_after_iteration.Value(): End Property

    Public Property Let Debug(value)
        m_debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

    Public default Function init()
        Set m_timeout = CreateGlfInput(15000)
        Set m_search_interval = CreateGlfInput(150)
        Set m_ball_search_wait_after_iteration = CreateGlfInput(10000)
        m_phase = 0
        m_devices = Array()
        m_current_device_type = Empty
        Set glf_ballsearch = Me
        SetDelay "ball_search" , "BallSearchHandler", Array(Array("start", Me), Null), m_timeout.Value
        AddPinEventListener "flipper_cradle", "ball_search_flipper_cradle", "BallSearchHandler", 30, Array("stop", Me)
        AddPinEventListener "flipper_release", "ball_search_flipper_cradle", "BallSearchHandler", 30, Array("reset", Me)
        Set Init = Me
    End Function

    Public Sub Start(phase)
        Dim ball_hold, held_balls
        held_balls = 0
        For Each ball_hold in glf_ball_holds.Items()
            held_balls = held_balls + ball_hold.GetValue("balls_held")
        Next
        If glf_gameStarted = True And glf_BIP > 0 And (glf_BIP-held_balls)>0 And glf_plunger.HasBall() = False Then
            m_phase = phase
            glf_last_switch_hit_time = 0
            'Fire all auto fire devices, slings, pops.
            m_devices = glf_autofiredevices.Items()
            m_current_device_type = "autofire"
            DispatchPinEvent "ball_search_started", Null
            If UBound(m_devices) > -1 Then
                m_devices(0).BallSearch(m_phase)
                SetDelay "ball_search_next_device" , "BallSearchHandler", Array(Array("next_device", Me, 0), Null), m_search_interval.Value
            End If
        Else
            SetDelay "ball_search" , "BallSearchHandler", Array(Array("start", Me), Null), m_timeout.Value
        End If
    End Sub

    Public Sub NextDevice(device_index)
        If UBound(m_devices) > device_index Then
            m_devices(device_index+1).BallSearch(m_phase)
            SetDelay "ball_search_next_device" , "BallSearchHandler", Array(Array("next_device", Me, device_index+1), Null), m_search_interval.Value
        Else
            If m_current_device_type = "autofire" Then
                m_devices = glf_ball_devices.Items()
                m_current_device_type = "balldevices"
                If UBound(m_devices) > -1 Then
                    m_devices(0).BallSearch(m_phase)
                    SetDelay "ball_search_next_device" , "BallSearchHandler", Array(Array("next_device", Me, 0), Null), m_search_interval.Value
                End If
            ElseIf m_current_device_type = "balldevices" Then
                m_devices = glf_drop_targets.Items()
                m_current_device_type = "droptargets"
                If UBound(m_devices) > -1 Then
                    m_devices(0).BallSearch(m_phase)
                    SetDelay "ball_search_next_device" , "BallSearchHandler", Array(Array("next_device", Me, 0), Null), m_search_interval.Value
                End If
            ElseIf m_current_device_type = "droptargets" Then
                m_devices = glf_diverters.Items()
                m_current_device_type = "diverters"
                If UBound(m_devices) > -1 Then
                    m_devices(0).BallSearch(m_phase)
                    SetDelay "ball_search_next_device" , "BallSearchHandler", Array(Array("next_device", Me, 0), Null), m_search_interval.Value
                End If
            Else
                m_current_device_type = Empty
                If m_phase < 3 Then
                    Start m_phase+1
                Else
                    m_phase = 0
                    SetDelay "ball_search" , "BallSearchHandler", Array(Array("start", Me), Null), m_timeout.Value
                End If
            End If
        End If
    End Sub

    Public Sub Reset()
        RemoveDelay "ball_search_next_device"
        DispatchPinEvent "ball_search_stopped", Null
        m_phase = 0
        SetDelay "ball_search" , "BallSearchHandler", Array(Array("start", Me), Null), m_timeout.Value
    End Sub

    Public Sub StopBallSearch()
        DispatchPinEvent "ball_search_stopped", Null
        RemoveDelay "ball_search_next_device"
        m_phase = 0
        RemoveDelay "ball_search"
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

End Class

Function BallSearchHandler(args)
    Dim ownProps, kwargs
    ownProps = args(0)
    Dim evt : evt = ownProps(0)
    Dim ball_search : Set ball_search = ownProps(1)
    Select Case evt
        Case "start"
            ball_search.Start 1
        Case "reset":
            ball_search.Reset
        Case "stop":
            ball_search.StopBallSearch
        Case "next_device"
            ball_search.NextDevice ownProps(2)
    End Select
End Function



'*****************************************************************************************************************************************
'  Vpx Glf Bcp Controller
'*****************************************************************************************************************************************

Class GlfVpxBcpController

    Private m_bcpController, m_connected, m_mode_list

    Public default Function init(port, backboxCommand)
        On Error Resume Next
        Set m_bcpController = CreateObject("vpx_bcp_controller.VpxBcpController")
        m_bcpController.Connect port, backboxCommand
        m_connected = True
        useBcp = True
        m_mode_list = ""
        If backboxCommand = "" Then
            m_bcpController.EnableLogging()
        End If
        AddPinEventListener "player_added", "bcp_player_added", "GlfVpxBcpControllerEventHandler", 50, Array("player_added")
        AddPinEventListener "next_player", "bcp_player_next_player", "GlfVpxBcpControllerEventHandler", 50, Array("next_player")
        AddPinEventListener "game_started", "bcp_player_next_player", "GlfVpxBcpControllerEventHandler", 50, Array("next_player")
        AddPinEventListener "ball_ended", "bcp_player_ball_end", "GlfVpxBcpControllerEventHandler", 50, Array("ball_end")
        If Err Then MsgBox("Can not start VPX BCP Controller") : m_connected = False
        Set Init = Me
  End Function

  Public Sub Send(commandMessage)
    If m_connected = True Then
            m_bcpController.Send commandMessage
        End If
  End Sub

    Public Function GetMessages
    If m_connected Then
            GetMessages = m_bcpController.GetMessages
        End If
  End Function

    Public Sub Reset()
    If m_connected Then
            m_bcpController.Send "reset"
            m_bcpController.Send "trigger?name=windowtitle"
        End If
  End Sub

    Public Sub PlaySlide(slide, context, calling_context, priorty)
    If m_connected Then
            m_bcpController.Send "trigger?json={""name"": ""slides_play"", ""settings"": {""" & slide & """: {""action"": ""play"", ""expire"": 0}}, ""context"": """ & context & """, ""calling_context"": """ & calling_context & """, ""priority"": " & priorty & "}"
        End If
  End Sub

    Public Sub PlayWidget(widget, context, calling_context, priorty, expire)
    If m_connected Then
            m_bcpController.Send "trigger?json={""name"": ""widgets_play"", ""settings"": {""" & widget & """: {""action"": ""play"", ""expire"": " & expire & " , ""x"": 0, ""y"": 0}}, ""context"": """ & context & """, ""calling_context"": """ & calling_context & """, ""priority"": " & priorty & "}"
        End If
  End Sub

    Public Sub ModeList()
        If m_connected Then
            If m_mode_list <> glf_running_modes Then
                m_bcpController.Send "mode_list?json={""running_modes"": ["&glf_running_modes&"]}"
                m_mode_list = glf_running_modes
            End If
        End If
    End Sub

    Public Sub SlidesClear(context)
        If m_connected Then
            m_bcpController.Send "trigger?name=slides_clear&context=" & context
        End If
    End Sub

    Public Sub ModeStart(name, priority)
        If m_connected Then
            m_bcpController.Send "mode_start?priority=int:" & priority & "&name=" & name
        End If
    End Sub

    Public Sub ModeStop(name)
        If m_connected Then
            m_bcpController.Send "mode_stop?name=" & name
        End If
    End Sub


    Public Sub SendPlayerVariable(name, value, prevValue)
    If m_connected Then
            m_bcpController.Send "player_variable?name=" & name & "&value=" & EncodeVariable(value) & "&prev_value=" & EncodeVariable(prevValue) & "&change=" & EncodeVariable(VariableVariance(value, prevValue)) & "&player_num=int:" & Getglf_currentPlayerNumber+1
        End If
  End Sub

    Private Function EncodeVariable(value)
        Dim retValue
        Select Case VarType(value)
            Case vbInteger, vbLong
                retValue = "int:" & value
            Case vbSingle, vbDouble
                retValue = "float:" & value
            Case vbString
                retValue = value
            Case vbBoolean
                retValue = "bool:" & CStr(value)
            Case Else
                retValue = "NoneType:"
        End Select
        EncodeVariable = retValue
    End Function

    Private Function VariableVariance(v1, v2)
        Dim retValue
        Select Case VarType(v1)
            Case vbInteger, vbLong, vbSingle, vbDouble
                retValue = Abs(v1 - v2)
            Case Else
                retValue = True
        End Select
        VariableVariance = retValue
    End Function

    Public Sub Disconnect()
        If m_connected Then
            m_bcpController.Disconnect()
            m_connected = False
            useBcp = False
        End If
    End Sub
End Class

Sub Glf_BcpSendPlayerVar(args)
    If useBcp=False Then
        Exit Sub
    End If
    Dim ownProps, kwargs : ownProps = args(0) : kwargs = args(1)
    Dim player_var : player_var = kwargs(0)
    Dim value : value = kwargs(1)
    Dim prevValue : prevValue = kwargs(2)
    bcpController.SendPlayerVariable player_var, value, prevValue
End Sub

Sub Glf_BcpSendEvent(evt)
    If useBcp=False Then
        Exit Sub
    End If
    bcpController.Send "trigger?name=" & evt
End Sub

Sub Glf_BcpAddPlayer(playerNum)
    If useBcp Then
        bcpController.Send("player_added?player_num=int:"&playerNum)
        dim p
        Select Case playerNum
            Case 1:
                p = "PLAYER 1"
            Case 2:
                p = "PLAYER 2"
            Case 3:
                p = "PLAYER 3"
            Case 4:
                p = "PLAYER 4"
        End Select
        Dim key, player_state
        Set player_state = glf_playerState(p)
        For Each key in player_state.Keys()
            Glf_BcpSendPlayerVar Array(Null, Array(key, player_state(key), Empty))
        Next
    End If
End Sub

Sub Glf_BcpUpdate()
    If useBcp=False Then
        Exit Sub
    End If
    Dim messages : messages = bcpController.GetMessages()
    If IsEmpty(messages) Then
        Exit Sub
    End If
    If IsArray(messages) and UBound(messages)>-1 Then
        Dim message, parameters, parameter, eventName
        For Each message in messages
            'debug.print(message.Command)
            Select Case message.Command
                case "hello"
                    bcpController.Reset
                case "monitor_start"
                    Dim category : category = message.GetValue("category")
                    If category = "player_vars" Then
                        glf_monitor_player_vars = True
                        'AddPlayerStateEventListener "score", "bcp_player_var_score_0", 0, "Glf_BcpSendPlayerVar", 1000, Null
                        'AddPlayerStateEventListener "current_ball", "bcp_player_var_ball_0", 0, "Glf_BcpSendPlayerVar", 1000, Null
                    End If
                case "register_trigger"
                    eventName = message.GetValue("event")
            End Select
        Next
    End If
    bcpController.ModeList()
End Sub

Function GlfVpxBcpControllerEventHandler(args)

    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Select Case evt
        Case "player_added"
            bcpController.Send "player_added?player_num=int:" & kwargs("num")
        Case "next_player"
            Dim p_num : p_num = Getglf_currentPlayerNumber() + 1
            bcpController.Send "player_turn_start?player_num=int:" & p_num
            bcpController.Send "ball_start?player_num=int:" & p_num & "&ball=int:" & GetPlayerState("ball")
            bcpController.SendPlayerVariable "number", p_num, p_num-1
            'bcpController.SendPlayerVariable "number", 1, 0
        Case "ball_end"
            bcpController.Send "ball_end"
    End Select
    If IsObject(args(1)) Then
        Set GlfVpxBcpControllerEventHandler = kwargs
    Else
        GlfVpxBcpControllerEventHandler = kwargs
    End If

End Function

'*****************************************************************************************************************************************
'  Vpx Glf Bcp Controller
'*****************************************************************************************************************************************


'*****************************************************************************************************************************************
'  Glf Monitor Bcp Controller
'*****************************************************************************************************************************************

Class GlfMonitorBcpController

    Private m_bcpController, m_connected, m_isInMonitor

    Public default Function init(port, backboxCommand)
        On Error Resume Next
        Set m_bcpController = CreateObject("vpx_bcp_controller.VpxBcpController")
        m_bcpController.Connect port, backboxCommand
        m_connected = True
        If Err Then MsgBox("Can not start VPX BCP Controller") : m_connected = False
        Set Init = Me
  End Function

    Public Function IsInMonitior()
        If m_connected = True And m_isInMonitor = True Then
            IsInMonitior=True
        Else
            IsInMonitior=False
        End If
    End Function

  Public Sub Send(commandMessage)
    If m_connected = True Then
            m_bcpController.Send commandMessage
        End If
  End Sub

    Public Function GetMessages
    If m_connected Then
            GetMessages = m_bcpController.GetMessages
        End If
  End Function

    Public Sub Reset()
    If m_connected Then
            m_bcpController.Send "reset"
            m_bcpController.Send "trigger?json={""name"": ""slides_play"", ""settings"": {""monitor"": {""action"": ""play"", ""expire"": 0}}, ""context"": """", ""priority"": 1}"

            Dim mode
            For Each mode in glf_modes.Items()
                Glf_MonitorModeUpdate mode
            Next
            m_isInMonitor = True
        End If
  End Sub

    Public Sub Disconnect()
        If m_connected Then
            m_bcpController.Disconnect()
            m_connected = False
        End If
    End Sub
End Class

Sub Glf_MonitorModeUpdate(mode)
    If glf_hasDebugController = False Then
        Exit Sub
    End If
    glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """&mode.Status&""", ""debug"": " & mode.IsDebug & "},"
    Dim config_item
    For Each config_item in mode.BallSavesItems()
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & config_item.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & config_item.Name & """},"
    Next
    For Each config_item in mode.CountersItems()
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & config_item.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & config_item.Name & """},"
    Next
    For Each config_item in mode.TimersItems()
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & config_item.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & config_item.Name & """},"
    Next
    For Each config_item in mode.MultiballLocksItems()
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & config_item.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & config_item.Name & """},"
    Next
    For Each config_item in mode.MultiballsItems()
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & config_item.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & config_item.Name & """},"
    Next
    For Each config_item in mode.ModeShots()
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & config_item.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & config_item.Name & """},"
    Next
    For Each config_item in mode.ShotGroupsItems()
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & config_item.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & config_item.Name & """},"
    Next
    For Each config_item in mode.BallHoldsItems()
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & config_item.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & config_item.Name & """},"
    Next
    For Each config_item in mode.SequenceShotsItems()
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & config_item.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & config_item.Name & """},"
    Next
    For Each config_item in mode.ExtraBallsItems()
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & config_item.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & config_item.Name & """},"
    Next
    For Each config_item in mode.ComboSwitchesItems()
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & config_item.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & config_item.Name & """},"
    Next
    For Each config_item in mode.TimedSwitchesItems()
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & config_item.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & config_item.Name & """},"
    Next
    For Each config_item in mode.ModeStateMachines()
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & config_item.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & config_item.Name & """},"
    Next
    If Not IsNull(mode.LightPlayer) Then
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & mode.LightPlayer.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & mode.LightPlayer.Name & """},"
    End If
    If Not IsNull(mode.EventPlayer) Then
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & mode.EventPlayer.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & mode.EventPlayer.Name & """},"
    End If
    If Not IsNull(mode.TiltConfig) Then
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & mode.TiltConfig.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & mode.TiltConfig.Name & """},"
    End If
    If Not IsNull(mode.QueueEventPlayer) Then
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & mode.QueueEventPlayer.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & mode.QueueEventPlayer.Name & """},"
    End If
    If Not IsNull(mode.QueueRelayPlayer) Then
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & mode.QueueRelayPlayer.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & mode.QueueRelayPlayer.Name & """},"
    End If
    If Not IsNull(mode.RandomEventPlayer) Then
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & mode.RandomEventPlayer.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & mode.RandomEventPlayer.Name & """},"
    End If
    If Not IsNull(mode.ShowPlayer) Then
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & mode.ShowPlayer.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & mode.ShowPlayer.Name & """},"
    End If
    If Not IsNull(mode.SegmentDisplayPlayer) Then
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & mode.SegmentDisplayPlayer.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & mode.SegmentDisplayPlayer.Name & """},"
    End If
    If Not IsNull(mode.VariablePlayer) Then
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & mode.VariablePlayer.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & mode.VariablePlayer.Name & """},"
    End If
    If Not IsNull(mode.DOFPlayer) Then
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & mode.DOFPlayer.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & mode.DOFPlayer.Name & """},"
    End If
    If Not IsNull(mode.SlidePlayer) Then
        glf_monitor_modes = glf_monitor_modes & "{""mode"": """&mode.Name&""", ""value"": """", ""debug"": " & mode.SlidePlayer.IsDebug & ", ""mode_device"": 1, ""mode_device_name"": """ & mode.SlidePlayer.Name & """},"
    End If
End Sub

Sub Glf_MonitorPlayerStateUpdate(key, value)
    If glf_hasDebugController = False Then
        Exit Sub
    End If
    glf_monitor_player_state = glf_monitor_player_state & "{""key"": """&key&""", ""value"": """&value&"""},"
End Sub

Sub Glf_MonitorEventStream(label, message)
    If glf_hasDebugController = False Then
        Exit Sub
    End If
    glf_monitor_event_stream = glf_monitor_event_stream & "{""label"": """&label&""", ""message"": """&message&"""},"
End Sub


Sub Glf_MonitorBcpUpdate()
    If glf_hasDebugController = False Then
        Exit Sub
    End If

    'Send Updates
    If glf_debugBcpController.IsInMonitior Then
        glf_debugBcpController.Send "glf_monitor?json={""name"": ""glf_player_state"",""changes"": ["&glf_monitor_player_state&"]}"
        glf_monitor_player_state = ""

        glf_debugBcpController.Send "glf_monitor?json={""name"": ""glf_monitor_modes"",""changes"": ["&glf_monitor_modes&"]}"
        glf_monitor_modes = ""

        glf_debugBcpController.Send "glf_monitor?json={""name"": ""glf_event_stream"",""changes"": ["&glf_monitor_event_stream&"]}"
        glf_monitor_event_stream = ""
    End If


    Dim messages : messages = glf_debugBcpController.GetMessages()
    If IsEmpty(messages) Then
        Exit Sub
    End If
    If IsArray(messages) and UBound(messages)>-1 Then
        Dim message, parameters, parameter, eventName
        For Each message in messages
            debug.print(message.Command)
            Select Case message.Command
                case "hello"
                    glf_debugBcpController.Reset
                case "trigger"
                    eventName = message.GetValue("name")
                    Dim mode_name, device_name
                    debug.print eventName
                    If eventName = "glf_monitor_debug_mode" Then
                        mode_name = message.GetValue("mode")
                        debug.print mode_name
                        If Not IsNull(GlfModes(mode_name)) Then
                            debug.print("got mode")
                            If GlfModes(mode_name).IsDebug = 1 Then
                                debug.print("Turning off debug")
                                GlfModes(mode_name).Debug = False
                            Else
                                debug.print("Turning on debug")
                                GlfModes(mode_name).Debug = True
                            End If
                        End If
                    End If
                    If eventName = "glf_monitor_debug_mode_device" Then
                        mode_name = message.GetValue("mode")
                        device_name = message.GetValue("mode_device")
                        device_name = Replace(device_name, mode_name & "_", "")
                        debug.print mode_name
                        debug.print device_name
                        If Not IsNull(GlfModes(mode_name)) Then
                            debug.print("got mode")
                            Dim config_item, mode, is_debug
                            is_debug = message.GetValue("debug")
                            debug.print is_debug
                            If is_debug = "bool:true" Then
                                is_debug = True
                            Else
                                is_debug = False
                            End If
                            Set mode = GlfModes(mode_name)
                            For Each config_item in mode.BallSavesItems()
                                If config_item.Name = device_name Then : config_item.Debug = is_debug : End If
                            Next
                            For Each config_item in mode.CountersItems()
                                If config_item.Name = device_name Then : config_item.Debug = is_debug : End If
                            Next
                            For Each config_item in mode.TimersItems()
                                If config_item.Name = device_name Then : config_item.Debug = is_debug : End If
                            Next
                            For Each config_item in mode.MultiballLocksItems()
                                If config_item.Name = device_name Then : config_item.Debug = is_debug : End If
                            Next
                            For Each config_item in mode.MultiballsItems()
                                If config_item.Name = device_name Then : config_item.Debug = is_debug : End If
                            Next
                            For Each config_item in mode.ModeShots()
                                If config_item.Name = device_name Then : config_item.Debug = is_debug : End If
                            Next
                            For Each config_item in mode.ShotGroupsItems()
                                If config_item.Name = device_name Then : config_item.Debug = is_debug : End If
                            Next
                            For Each config_item in mode.BallHoldsItems()
                                If config_item.Name = device_name Then : config_item.Debug = is_debug : End If
                            Next
                            For Each config_item in mode.SequenceShotsItems()
                                If config_item.Name = device_name Then : config_item.Debug = is_debug : End If
                            Next
                            For Each config_item in mode.ExtraBallsItems()
                                If config_item.Name = device_name Then : config_item.Debug = is_debug : End If
                            Next
                            For Each config_item in mode.ComboSwitchesItems()
                                If config_item.Name = device_name Then : config_item.Debug = is_debug : End If
                            Next
                            For Each config_item in mode.TimedSwitchesItems()
                                If config_item.Name = device_name Then : config_item.Debug = is_debug : End If
                            Next
                            For Each config_item in mode.ModeStateMachines()
                                If config_item.Name = device_name Then : config_item.Debug = is_debug : End If
                            Next
                            If Not IsNull(mode.LightPlayer) Then
                                If mode.LightPlayer.Name = device_name Then : mode.LightPlayer.Debug = is_debug : End If
                            End If
                            If Not IsNull(mode.EventPlayer) Then
                                If mode.EventPlayer.Name = device_name Then : mode.EventPlayer.Debug = is_debug : End If
                            End If
                            If Not IsNull(mode.TiltConfig) Then
                                If mode.TiltConfig.Name = device_name Then : mode.TiltConfig.Debug = is_debug : End If
                            End If
                            If Not IsNull(mode.RandomEventPlayer) Then
                                If mode.RandomEventPlayer.Name = device_name Then : mode.RandomEventPlayer.Debug = is_debug : End If
                            End If
                            If Not IsNull(mode.ShowPlayer) Then
                                If mode.ShowPlayer.Name = device_name Then : mode.ShowPlayer.Debug = is_debug : End If
                            End If
                            If Not IsNull(mode.SegmentDisplayPlayer) Then
                                If mode.SegmentDisplayPlayer.Name = device_name Then : mode.SegmentDisplayPlayer.Debug = is_debug : End If
                            End If
                            If Not IsNull(mode.VariablePlayer) Then
                                If mode.VariablePlayer.Name = device_name Then : mode.VariablePlayer.Debug = is_debug : End If
                            End If
                        End If
                    End If
            End Select
        Next
    End If
End Sub

'*****************************************************************************************************************************************
'  Vpx Glf Bcp Controller
'*****************************************************************************************************************************************a
Class GlfAchievements

    Private m_name
    Private m_priority
    Private m_complete_events
    Private m_debug

    Public Property Get Name(): Name = m_name: End Property
    Public Property Get GetValue(value)
        Select Case value
            Case "enabled":
                GetValue = m_enabled
        End Select
    End Property

    Public Property Let EnableEvents(value) : m_base_device.EnableEvents = value : End Property
    Public Property Let DisableEvents(value) : m_base_device.DisableEvents = value : End Property
    Public Property Let CompleteEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_complete_events.Add x, newEvent
        Next
    End Property

    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property

    Public default Function Init(name, mode)
        m_name = "achievements_" & name
        m_mode = mode.Name
        m_priority = mode.Priority
        Set m_complete_events = CreateObject("Scripting.Dictionary")

        Set m_base_device = (new GlfBaseModeDevice)(mode, "achievement", Me)
        glf_achievements.Add name, Me
        Set Init = Me
    End Function

    Public Sub Activate()
        Dim key
        For Each key in m_complete_events.Keys
            AddPinEventListener m_complete_events(key).EventName, m_name & "_complete_event_" & key, "AchievementsEventHandler", m_priority+m_complete_events(key).Priority, Array("complete", Me)
        Next
    End Sub

    Public Sub Deactivate()
        Disable()
        Dim key
        For Each key in m_complete_events.Keys
            RemovePinEventListener m_complete_events(key).EventName, m_name & "_complete_event_" & key
        Next
    End Sub

    Public Sub Complete()
        'TODO: Implement Complete Events
    End Sub

    Private Sub Log(message)
        If m_debug Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

End Class

Function AchievementsHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If

    Dim evt : evt = ownProps(0)
    Dim achievement : Set achievement = ownProps(1)

    Select Case evt
        Case "complete"
            achievement.Complete
    End Select

    If IsObject(args(1)) Then
        Set AchievementsHandler = kwargs
    Else
        AchievementsHandler = kwargs
    End If
End Function



Class GlfBallHold

    Private m_name
    Private m_priority
    Private m_mode
    Private m_base_device
    Private m_debug

    Private m_enabled
    Private m_balls_to_hold
    Private m_hold_devices
    Private m_balls_held
    Private m_hold_queue
    Private m_release_all_events
    Private m_release_one_events
    Private m_release_one_if_full_events

    Public Property Get Name() : Name = m_name : End Property
    Public Property Get GetValue(value)
        Select Case value
            Case "balls_held":
                GetValue = m_balls_held
        End Select
    End Property
    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

    Public Property Let EnableEvents(value) : m_base_device.EnableEvents = value : End Property
    Public Property Let DisableEvents(value) : m_base_device.DisableEvents = value : End Property

    Public Property Get BallsToHold() : BallsToHold = m_balls_to_hold : End Property
    Public Property Let BallsToHold(value) : m_balls_to_hold = value : End Property

    Public Property Get HoldDevices() : HoldDevices = m_hold_devices : End Property
    Public Property Let HoldDevices(value) : m_hold_devices = value : End Property

    Public Property Get ReleaseAllEvents(): Set ReleaseAllEvents = m_release_all_events: End Property
    Public Property Let ReleaseAllEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_release_all_events.Add newEvent.Raw, newEvent
        Next
    End Property

    Public Property Get ReleaseOneEvents(): Set ReleaseOneEvents = m_release_one_events: End Property
    Public Property Let ReleaseOneEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_release_one_events.Add newEvent.Raw, newEvent
        Next
    End Property

    Public Property Get ReleaseOneIfFullEvents(): Set ReleaseOneIfFullEvents = m_release_one_if_full_events: End Property
    Public Property Let ReleaseOneIfFullEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_release_one_if_full_events.Add newEvent.Raw, newEvent
        Next
    End Property

  Public default Function init(name, mode)
        m_name = "ball_hold_" & name
        m_mode = mode.Name
        m_priority = mode.Priority
        m_balls_to_hold = 0
        m_balls_held = 0
        m_hold_devices = Array()
        Set m_hold_queue = CreateObject("Scripting.Dictionary")
        Set m_release_all_events = CreateObject("Scripting.Dictionary")
        Set m_release_one_events = CreateObject("Scripting.Dictionary")
        Set m_release_one_if_full_events = CreateObject("Scripting.Dictionary")
        ReleaseAllEvents = Array("tilt")
        Set m_base_device = (new GlfBaseModeDevice)(mode, "ball_hold", Me)
        glf_ball_holds.Add name, Me
        Set Init = Me
  End Function

    Public Sub Activate()
        If UBound(m_base_device.EnableEvents.Keys()) = -1 Then
            Enable()
        End If
    End Sub

    Public Sub Deactivate()
        Disable()
    End Sub

    Public Sub Enable()
        m_enabled = True
        'Add Event Listeners
        Dim device
        For Each device in m_hold_devices
            AddPinEventListener "balldevice_" & device & "_ball_enter", m_mode & "_" & name & "_hold", "BallHoldsEventHandler", m_priority, Array("hold", me, device)
        Next
        Dim evt
        For Each evt in m_release_all_events.Keys
            AddPinEventListener m_release_all_events(evt).EventName, m_mode & "_" & name & "_release_all", "BallHoldsEventHandler", m_priority+m_release_all_events(evt).Priority, Array("release_all", me, m_release_all_events(evt))
        Next
        For Each evt in m_release_one_events.Keys
            AddPinEventListener m_release_one_events(evt).EventName, m_mode & "_" & name & "_release_one", "BallHoldsEventHandler", m_priority+m_release_one_events(evt).Priority, Array("release_one", me, m_release_one_events(evt))
        Next
        For Each evt in m_release_one_if_full_events.Keys
            AddPinEventListener m_release_one_if_full_events(evt).EventName, m_mode & "_" & name & "_release_one_if_full", "BallHoldsEventHandler", m_priority+m_release_one_if_full_events(evt).Priority, Array("release_one_if_full", me, m_release_one_if_full_events(evt))
        Next
    End Sub

    Public Sub Disable()
        m_enabled = False
        ReleaseAll()
        Dim device
        For Each device in m_hold_devices
            RemovePinEventListener "balldevice_" & device & "_ball_enter", m_mode & "_" & name & "_hold"
        Next
        Dim evt
        For Each evt in m_release_all_events.Keys
            RemovePinEventListener m_release_all_events(evt).EventName, m_mode & "_" & name & "_release_all"
        Next
        For Each evt in m_release_one_events.Keys
            RemovePinEventListener m_release_one_events(evt).EventName, m_mode & "_" & name & "_release_one"
        Next
        For Each evt in m_release_one_if_full_events.Keys
            RemovePinEventListener m_release_one_if_full_events(evt).EventName, m_mode & "_" & name & "_release_one_if_full"
        Next
    End Sub

    Public Function IsFull()
        'Return true if hold is full
        If RemainingSpaceInHold() = 0 Then
            IsFull = True
        Else
            IsFull = False
        End If
    End Function

    Public Function RemainingSpaceInHold()
        'Return the remaining capacity of the hold.
        Dim balls
        balls = m_balls_to_hold - m_balls_held
        If balls < 0 Then
            balls = 0
        End If
        RemainingSpaceInHold = balls
    End Function

    Public Function HoldBall(device, unclaimed_balls)
        ' Handle result of _ball_enter event of hold_devices.
        If IsFull() Then
            Log "Cannot hold balls. Hold is full."
            HoldBall = unclaimed_balls
            Exit Function
        End If

        If unclaimed_balls <= 0 Then
            HoldBalls = unclaimed_balls
            Exit Function
        End If

        Dim capacity : capacity = RemainingSpaceInHold()
        Dim balls_to_hold
        If unclaimed_balls > capacity Then
            balls_to_hold = capacity
        Else
            balls_to_hold = unclaimed_balls
        End If
        m_balls_held = m_balls_held + balls_to_hold
        Log "Held " & balls_to_hold & " balls"

        Dim kwargs : Set kwargs = GlfKwargs()
        With kwargs
            .Add "balls_held", balls_to_hold
            .Add "total_balls_held", m_balls_held
        End With
        DispatchPinEvent m_name & "_held_ball", kwargs

        'check if we are full now and post event if yes
        If IsFull() Then
            Set kwargs = GlfKwargs()
            With kwargs
                .Add "balls", m_balls_held
            End With
            DispatchPinEvent m_name & "_full", kwargs
        End If

        m_hold_queue.Add device, unclaimed_balls

        HoldBall = unclaimed_balls - balls_to_hold
    End Function

    Public Function ReleaseAll()
        'Release all balls in hold.
        ReleaseAll = ReleaseBalls(m_balls_held)
    End Function

    Public Function ReleaseBalls(balls_to_release)
        'Release all balls and return the actual amount of balls released.
        '
        'Args:
        '----
        '    balls_to_release: number of ball to release from hold

        If Ubound(m_hold_queue.Keys()) = -1 Then
            ReleaseBalls = 0
            Exit Function
        End If

        Dim remaining_balls_to_release : remaining_balls_to_release = balls_to_release

        Log "Releasing up to " & balls_to_release & " balls from hold"
        Dim balls_released : balls_released = 0
        Do While Ubound(m_hold_queue.Keys()) > -1
            Dim keys : keys = m_hold_queue.Keys()
            Dim device, balls_held
            device = keys(0)
            balls_held = m_hold_queue(device)
            m_hold_queue.Remove device

            Dim deviceControl : Set deviceControl = glf_ball_devices(device)

            Dim balls : balls = balls_held
            Dim balls_in_device : balls_in_device = deviceControl.Balls
            If balls > balls_in_device Then
                balls = balls_in_device
            End If

            If balls > remaining_balls_to_release Then
                m_hold_queue.Add device, balls_held - remaining_balls_to_release
                balls = remaining_balls_to_release
            End If

            deviceControl.EjectBalls balls
            balls_released = balls_released + balls
            remaining_balls_to_release = remaining_balls_to_release - balls
            If remaining_balls_to_release <= 0 Then
               Exit Do
            End If
        Loop

        If balls_released > 0 Then
            Dim kwargs : Set kwargs = GlfKwargs()
            With kwargs
                .Add "balls_released", balls_released
            End With
            DispatchPinEvent m_name & "_balls_released", kwargs
        End If

        m_balls_held = m_balls_held - balls_released
        ReleaseBalls = balls_released
    End Function

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

    Public Function ToYaml()
        Dim yaml
        Dim evt, x
        yaml = "  " & Replace(m_name, "ball_hold_", "") & ":" & vbCrLf
        Dim enable_events_keys : enable_events_keys = m_base_device.EnableEvents().Keys
        Dim enable_events : Set enable_events = m_base_device.EnableEvents()
        If UBound(enable_events_keys) > -1 Then
            yaml = yaml & "    enable_events: "
            x=0
            For Each key in enable_events_keys
                yaml = yaml & enable_events(key).Raw
                If x <> UBound(enable_events_keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If
        Dim disable_events_keys : disable_events_keys = m_base_device.DisableEvents().Keys
        Dim disable_events : Set disable_events = m_base_device.DisableEvents()
        If UBound(disable_events_keys) > -1 Then
            yaml = yaml & "    disable_events: "
            x=0
            For Each key in disable_events_keys
                yaml = yaml & disable_events(key).Raw
                If x <> UBound(disable_events_keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If
        yaml = yaml & "    hold_devices: " & Join(m_hold_devices, ",") & vbCrLf
        If m_balls_to_hold > 0 Then
            yaml = yaml & "    balls_to_hold: " & m_balls_to_hold & vbCrLf
        End If
        If UBound(m_release_all_events.Keys) > -1 Then
            yaml = yaml & "    release_all_events: "
            x=0
            For Each key in m_release_all_events.keys
                yaml = yaml & m_release_all_events(key).Raw
                If x <> UBound(m_release_all_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If
        If UBound(m_release_one_events.Keys) > -1 Then
            yaml = yaml & "    release_one_events: "
            x=0
            For Each key in m_release_one_events.keys
                yaml = yaml & m_release_one_events(key).Raw
                If x <> UBound(m_release_one_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If
        If UBound(m_release_one_if_full_events.Keys) > -1 Then
            yaml = yaml & "    release_one_if_full_events: "
            x=0
            For Each key in m_release_one_if_full_events.keys
                yaml = yaml & m_release_one_if_full_events(key).Raw
                If x <> UBound(m_release_one_if_full_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If
        ToYaml = yaml
    End Function

End Class

Function BallHoldsEventHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    Dim evt : evt = ownProps(0)
    Dim ball_hold : Set ball_hold = ownProps(1)
    Dim glfEvent
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If

    Select Case evt
        Case "hold"
            kwargs = ball_hold.HoldBall(ownProps(2), kwargs)
        Case "release_all"
            Set glfEvent = ownProps(2)
            If glfEvent.Evaluate() = False Then
                Exit Function
            End If
            ball_hold.ReleaseAll
        Case "release_one"
            Set glfEvent = ownProps(2)
            If glfEvent.Evaluate() = False Then
                Exit Function
            End If
            ball_hold.ReleaseBalls 1
        Case "release_one_if_full"
            Set glfEvent = ownProps(2)
            If glfEvent.Evaluate() = False Then
                Exit Function
            End If
            If ball_hold.IsFull Then
                ball_hold.ReleaseBalls 1
            End If
    End Select

    If IsObject(args(1)) Then
        Set BallHoldsEventHandler = kwargs
    Else
        BallHoldsEventHandler = kwargs
    End If
End Function
Class BallSave

    Private m_name
    Private m_mode
    Private m_priority
    Private m_active_time
    Private m_grace_period
    Private m_enable_events
    Private m_timer_start_events
    Private m_auto_launch
    Private m_balls_to_save
    Private m_saving_balls
    Private m_enabled
    Private m_timer_started
    Private m_tick
    Private m_in_grace
    Private m_in_hurry_up
    Private m_hurry_up_time
    private m_base_device
    Private m_debug

    Public Property Get Name(): Name = m_name: End Property
    Public Property Get AutoLaunch(): AutoLaunch = m_auto_launch: End Property
    Public Property Let ActiveTime(value) : m_active_time = Glf_ParseInput(value) : End Property
    Public Property Let GracePeriod(value) : m_grace_period = Glf_ParseInput(value) : End Property
    Public Property Let HurryUpTime(value) : m_hurry_up_time = Glf_ParseInput(value) : End Property
    Public Property Let EnableEvents(value) : m_base_device.EnableEvents = value : End Property
    Public Property Let DisableEvents(value) : m_base_device.DisableEvents = value : End Property

    Public Property Let TimerStartEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_timer_start_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let AutoLaunch(value) : m_auto_launch = value : End Property
    Public Property Let BallsToSave(value) : m_balls_to_save = value : End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property
    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property

  Public default Function init(name, mode)
        m_name = "ball_save_" & name
        m_mode = mode.Name
        m_priority = mode.Priority
        m_active_time = Null
      m_grace_period = Null
        m_hurry_up_time = Null
        Set m_enable_events = CreateObject("Scripting.Dictionary")
        Set m_timer_start_events = CreateObject("Scripting.Dictionary")
      m_auto_launch = False
      m_balls_to_save = 1
        m_enabled = False
        m_timer_started = False
        m_debug = False
        Set m_base_device = (new GlfBaseModeDevice)(mode, "ball_save", Me)
      Set Init = Me
  End Function

    Public Sub Activate()
        Dim evt
        For Each evt in m_timer_start_events.Keys
            AddPinEventListener m_timer_start_events(evt).EventName, m_name & "_timer_start", "BallSaveEventHandler", m_priority+m_timer_start_events(evt).Priority, Array("timer_start", Me, evt)
        Next
    End Sub

    Public Sub Deactivate()
        Disable()
        Dim evt
        For Each evt in m_timer_start_events.Keys
            RemovePinEventListener m_timer_start_events(evt).EventName, m_name & "_timer_start"
        Next
    End Sub

    Public Sub Enable()
        If m_enabled = True Then
            Exit Sub
        End If
        m_enabled = True
        m_saving_balls = m_balls_to_save
        Log "Enabling. Auto launch: "&m_auto_launch&", Balls to save: "&m_balls_to_save
        AddPinEventListener GLF_BALL_DRAIN, m_name & "_ball_drain", "BallSaveEventHandler", 1000, Array("drain", Me)
        DispatchPinEvent m_name&"_enabled", Null
        If UBound(m_timer_start_events.Keys) = -1 Then
            Log "Timer Starting as no timer start events are set"
            TimerStart()
        End If
    End Sub

    Public Sub Disable
        'Disable ball save
        If m_enabled = False Then
            Exit Sub
        End If
        m_enabled = False
        m_saving_balls = m_balls_to_save
        m_timer_started = False
        Log "Disabling..."
        RemovePinEventListener GLF_BALL_DRAIN, m_name & "_ball_drain"
        RemoveDelay "_ball_save_"&m_name&"_disable"
        RemoveDelay m_name&"_grace_period"
        RemoveDelay m_name&"_hurry_up_time"

    End Sub

    Sub Drain(ballsToSave)
        If m_enabled = True And ballsToSave > 0 Then
            If m_saving_balls > 0 Then
                m_saving_balls = m_saving_balls -1
            End If
            Log "Ball(s) drained while active. Requesting new one(s). Auto launch: "& m_auto_launch
            DispatchPinEvent m_name&"_saving_ball", Null
            SetDelay m_name&"_queued_release", "BallSaveEventHandler" , Array(Array("queue_release", Me),Null), 1000
            If m_saving_balls = 0 Then
                Disable()
            End If
        End If
    End Sub

    Public Sub TimerStart
        'Start the timer.
        'This is usually called after the ball was ejected while the ball save may have been enabled earlier.
        If m_timer_started=True Or m_enabled=False Then
            Exit Sub
        End If
        m_timer_started=True
        DispatchPinEvent m_name&"_timer_start", Null
        If Not IsNull(m_active_time) Then
            Dim active_time : active_time = GetRef(m_active_time(0))(Null)
            Dim grace_period, hurry_up_time
            If Not IsNull(m_grace_period) Then
                grace_period = GetRef(m_grace_period(0))(Null)
            Else
                grace_period = 0
            End If
            If Not IsNull(m_hurry_up_time) Then
                hurry_up_time = GetRef(m_hurry_up_time(0))(Null)
            Else
                hurry_up_time = 0
            End If
            Log "Starting ball save timer: " & active_time
            Log "gametime: "& gametime & ". disabled at: " & gametime+active_time+grace_period
            SetDelay m_name&"_disable", "BallSaveEventHandler" , Array(Array("disable", Me),Null), active_time+grace_period
            SetDelay m_name&"_grace_period", "BallSaveEventHandler", Array(Array("grace_period", Me),Null), active_time
            SetDelay m_name&"_hurry_up_time", "BallSaveEventHandler", Array(Array("hurry_up_time", Me), Null), active_time-hurry_up_time
        End If
    End Sub

    Public Sub EnterGracePeriod
        DispatchPinEvent m_name & "_grace_period", Null
    End Sub

    Public Sub EnterHurryUpTime
        DispatchPinEvent m_name & "_hurry_up", Null
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

    Public Function ToYaml
        Dim yaml
        yaml = "  " & Replace(m_name, "ball_save_", "") & ":" & vbCrLf
        yaml = yaml & "    active_time: " & m_active_time(1) & "s" & vbCrLf
        yaml = yaml & "    grace_period: " & m_grace_period(1) & "s" & vbCrLf
        yaml = yaml & "    hurry_up_time: " & m_hurry_up_time(1) & "s" & vbCrLf
        yaml = yaml & "    enable_events: "
        Dim evt,x : x = 0
        For Each evt in m_enable_events.Keys
            yaml = yaml & m_enable_events(evt).Raw
            If x <> UBound(m_enable_events.Keys) Then
                yaml = yaml & ", "
            End If
            x = x +1
        Next
        yaml = yaml & vbCrLf
        yaml = yaml & "    timer_start_events: "
        x=0
        For Each evt in m_timer_start_events.Keys
            yaml = yaml & m_timer_start_events(evt).Raw
            If x <> UBound(m_timer_start_events.Keys) Then
                yaml = yaml & ", "
            End If
            x = x +1
        Next
        yaml = yaml & vbCrLf
        yaml = yaml & "    auto_launch: " & LCase(m_auto_launch) & vbCrLf
        yaml = yaml & "    balls_to_save: " & m_balls_to_save & vbCrLf

        ' Add disable_events if any exist
        If m_disable_events.Count > 0 Then
            yaml = yaml & "    disable_events: "
            x = 0
            For Each evt in m_disable_events.Keys
                yaml = yaml & m_disable_events(evt).Raw
                If x <> UBound(m_disable_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        ' Add timer_stop_events if any exist
        If m_timer_stop_events.Count > 0 Then
            yaml = yaml & "    timer_stop_events: "
            x = 0
            For Each evt in m_timer_stop_events.Keys
                yaml = yaml & m_timer_stop_events(evt).Raw
                If x <> UBound(m_timer_stop_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        ' Add timer_complete_events if any exist
        If m_timer_complete_events.Count > 0 Then
            yaml = yaml & "    timer_complete_events: "
            x = 0
            For Each evt in m_timer_complete_events.Keys
                yaml = yaml & m_timer_complete_events(evt).Raw
                If x <> UBound(m_timer_complete_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        ' Add ball_save_events if any exist
        If m_ball_save_events.Count > 0 Then
            yaml = yaml & "    ball_save_events: "
            x = 0
            For Each evt in m_ball_save_events.Keys
                yaml = yaml & m_ball_save_events(evt).Raw
                If x <> UBound(m_ball_save_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        ' Add ball_save_complete_events if any exist
        If m_ball_save_complete_events.Count > 0 Then
            yaml = yaml & "    ball_save_complete_events: "
            x = 0
            For Each evt in m_ball_save_complete_events.Keys
                yaml = yaml & m_ball_save_complete_events(evt).Raw
                If x <> UBound(m_ball_save_complete_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        ' Add debug setting if enabled
        If m_debug Then
            yaml = yaml & "    debug: true" & vbCrLf
        End If

        ToYaml = yaml
    End Function
End Class

Function BallSaveEventHandler(args)
    Dim ownProps, ballsToSave : ownProps = args(0)
    Dim evt : evt = ownProps(0)
    ballsToSave = args(1)
    Dim ballSave : Set ballSave = ownProps(1)
    Select Case evt
        Case "activate"
            ballSave.Activate
        Case "deactivate"
            ballSave.Deactivate
        Case "enable"
            ballSave.Enable ownProps(2)
        Case "disable"
            ballSave.Disable
        Case "grace_period"
            ballSave.EnterGracePeriod
        Case "hurry_up_time"
            ballSave.EnterHurryUpTime
        Case "drain"
            If ballsToSave > 0 Then
                ballSave.Drain ballsToSave
                ballsToSave = ballsToSave - 1
            End If
        Case "timer_start"
            ballSave.TimerStart
        Case "queue_release"
            If glf_plunger.HasBall = False And ballInReleasePostion = True  And glf_plunger.IncomingBalls = 0  Then
                Glf_ReleaseBall(Null)
                If ballSave.AutoLaunch = True Then
                    SetDelay ballSave.Name&"_auto_launch", "BallSaveEventHandler" , Array(Array("auto_launch", ballSave),Null), 500
                End If
            Else
                SetDelay ballSave.Name&"_queued_release", "BallSaveEventHandler" , Array(Array("queue_release", ballSave), Null), 1000
            End If
        Case "auto_launch"
            If glf_plunger.HasBall = True Then
                glf_plunger.Eject
            Else
                SetDelay ballSave.Name&"_auto_launch", "BallSaveEventHandler" , Array(Array("auto_launch", ballSave), Null), 500
            End If
    End Select
    BallSaveEventHandler = ballsToSave
End Function


Class GlfComboSwitches

    Private m_name
    Private m_priority
    Private m_mode
    Private m_base_device
    Private m_debug

    Private m_switch_1
    Private m_switch_2
    Private m_events_when_both
    Private m_events_when_inactive
    Private m_events_when_one
    Private m_events_when_switch_1
    Private m_events_when_switch_2
    Private m_hold_time
    Private m_max_offset_time
    Private m_release_time

    Private m_switch_1_active
    Private m_switch_2_active

    Private m_switch_state

    Public Property Get Name() : Name = m_name : End Property
    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

    Public Property Get GetValue(value)
        Select Case value
            'Case ""
            '    GetValue = m_ticks
        End Select
    End Property

    Public Property Let Switch1(value): m_switch_1 = value: End Property
    Public Property Let Switch2(value): m_switch_2 = value: End Property
    Public Property Let HoldTime(value): Set m_hold_time = CreateGlfInput(value): End Property
    Public Property Let MaxOffsetTime(value): Set m_max_offset_time = CreateGlfInput(value): End Property
    Public Property Let ReleaseTime(value): Set m_release_time = CreateGlfInput(value): End Property
    Public Property Let EventsWhenBoth(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_events_when_both.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let EventsWhenInactive(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_events_when_inactive.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let EventsWhenOne(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_events_when_one.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let EventsWhenSwitch1(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_events_when_switch_1.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let EventsWhenSwitch2(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_events_when_switch_2.Add newEvent.Raw, newEvent
        Next
    End Property

  Public default Function init(name, mode)
        m_name = "combo_switch_" & name
        m_mode = mode.Name
        m_priority = mode.Priority

        m_switch_1 = Empty
        m_switch_2 = Empty
        Set m_events_when_both = CreateObject("Scripting.Dictionary")
        Set m_events_when_inactive = CreateObject("Scripting.Dictionary")
        Set m_events_when_one = CreateObject("Scripting.Dictionary")
        Set m_events_when_switch_1 = CreateObject("Scripting.Dictionary")
        Set m_events_when_switch_2 = CreateObject("Scripting.Dictionary")
        Set m_hold_time = CreateGlfInput(0)
        Set m_max_offset_time = CreateGlfInput(-1)
        Set m_release_time = CreateGlfInput(0)

        m_switch_1_active = 0
        m_switch_2_active = 0

        m_switch_state = Empty
        Set m_base_device = (new GlfBaseModeDevice)(mode, "combo_switch", Me)

        glf_combo_switches.Add name, Me

        Set Init = Me
  End Function

    Public Sub Activate()
        Log "Activating Combo Switch"
        AddPinEventListener m_switch_1 & "_active" , m_name & "_switch1_active" , "ComboSwitchEventHandler", m_priority, Array("switch1_active", Me, m_switch_1)
        AddPinEventListener m_switch_1 & "_inactive" , m_name & "_switch1_inactive" , "ComboSwitchEventHandler", m_priority, Array("switch1_inactive", Me, m_switch_1)
        AddPinEventListener m_switch_2 & "_active" , m_name & "_switch2_active" , "ComboSwitchEventHandler", m_priority, Array("switch2_active", Me, m_switch_2)
        AddPinEventListener m_switch_2 & "_inactive" , m_name & "_switch2_inactive" , "ComboSwitchEventHandler", m_priority, Array("switch2_inactive", Me, m_switch_2)
    End Sub

    Public Sub Deactivate()
        Log "Deactivating Combo Switch"
        RemovePinEventListener m_switch_1 & "_active" , m_name & "_switch1_active"
        RemovePinEventListener m_switch_1 & "_inactive" , m_name & "_switch1_inactive"
        RemovePinEventListener m_switch_2 & "_active" , m_name & "_switch2_active"
        RemovePinEventListener m_switch_2 & "_inactive" , m_name & "_switch2_inactive"
        RemoveDelay m_name & "_" & "switch_1_inactive"
        RemoveDelay m_name & "_" & "switch_2_inactive"
        RemoveDelay m_name & "_" & "switch_1_active"
        RemoveDelay m_name & "_" & "switch_1_active"
        RemoveDelay m_name & "_" & "switch_2_only"
        RemoveDelay m_name & "_" & "switch_1_only"
    End Sub

    Public Sub Switch1WentActive(switch_name)
        Log "switch_1 just went active"
        RemoveDelay m_name & "_" & "switch_1_inactive"

        If m_switch_1_active > 0 Then
            Exit Sub
        End If

        If m_hold_time.Value() = 0 Then
            ActivateSwitches1 switch_name
        Else
            SetDelay m_name & "_switch_1_active", "ComboSwitchEventHandler", Array(Array("activate_switch1", Me, switch_name),Null), m_hold_time.Value()
        End If
    End Sub

    Public Sub Switch2WentActive(switch_name)
        Log "switch_2 just went active"
        RemoveDelay m_name & "_" & "switch_2_inactive"

        If m_switch_2_active > 0 Then
            Exit Sub
        End If

        If m_hold_time.Value() = 0 Then
            ActivateSwitches2 switch_name
        Else
            SetDelay m_name & "_switch_2_active", "ComboSwitchEventHandler", Array(Array("activate_switch2", Me, switch_name),Null), m_hold_time.Value()
        End If
    End Sub

    Public Sub Switch1WentInactive(switch_name)
        Log "switch_1 just went inactive"
        RemoveDelay m_name & "_" & "switch_1_active"

        If m_release_time.Value() = 0 Then
            ReleaseSwitch1 switch_name
        Else
            SetDelay m_name & "_switch_1_inactive", "ComboSwitchEventHandler", Array(Array("release_switch1", Me, switch_name),Null), m_release_time.Value()
        End If
    End Sub

    Public Sub Switch2WentInactive(switch_name)
        Log "switch_2 just went inactive"
        RemoveDelay m_name & "_" & "switch_2_active"

        If m_release_time.Value() = 0 Then
            ReleaseSwitch2 switch_name
        Else
            SetDelay m_name & "_switch_2_inactive", "ComboSwitchEventHandler", Array(Array("release_switch2", Me, switch_name),Null), m_release_time.Value()
        End If
    End Sub

    Public Sub ActivateSwitches1(switch_name)
        Log "Switch_1 has passed the hold time and is now active"
        m_switch_1_active = gametime
        RemoveDelay m_name & "_" & "switch_2_only"

        If m_switch_2_active > 0 Then
            If m_max_offset_time.Value() >= 0 And (m_switch_1_active - m_switch_2_active) > m_max_offset_time.Value() Then
                Log "Switches_2 is active, but the max_offset_time=" & m_max_offset_time.Value() & " which is larger than when a Switches_1 switch was first activated, so the state will not switch to both"
                Exit Sub
            End If
            PostSwitchStateEvents "both"
        ElseIf m_max_offset_time.Value()>=0 Then
            SetDelay m_name & "_switch_1_only", "ComboSwitchEventHandler", Array(Array("switch_1_only", Me, switch_name),Null), max_offset_time.Value()
        End If
    End Sub

    Public Sub ActivateSwitches2(switch_name)
        Log "Switch_2 has passed the hold time and is now active"
        m_switch_2_active = gametime
        RemoveDelay m_name & "_" & "switch_1_only"

        If m_switch_1_active > 0 Then
            If m_max_offset_time.Value() >= 0 And (m_switch_2_active - m_switch_1_active) > m_max_offset_time.Value() Then
                Log "Switches_1 is active, but the max_offset_time=" & m_max_offset_time.Value() & " which is larger than when a Switches_2 switch was first activated, so the state will not switch to both"
                Exit Sub
            End If
            PostSwitchStateEvents "both"
        ElseIf m_max_offset_time.Value()>=0 Then
            SetDelay m_name & "_switch_2_only", "ComboSwitchEventHandler", Array(Array("switch_2_only", Me, switch_name),Null), max_offset_time.Value()
        End If
    End Sub

    Public Sub ReleaseSwitch1(switch_name)
        Log "Switches_1 has passed the release time and is now released"
        m_switch_1_active = 0

        If m_switch_2_active > 0 And m_switch_state = "both" Then
            PostSwitchStateEvents "one"
        ElseIf m_switch_state = "one" Then
            PostSwitchStateEvents "inactive"
        End If
    End Sub

    Public Sub ReleaseSwitch2(switch_name)
        Log "Switches_2 has passed the release time and is now released"
        m_switch_2_active = 0

        If m_switch_1_active > 0 And m_switch_state = "both" Then
            PostSwitchStateEvents "one"
        ElseIf m_switch_state = "one" Then
            PostSwitchStateEvents "inactive"
        End If
    End Sub

    Public Sub PostSwitchStateEvents(state)
        If m_switch_state = state Then
            Exit Sub
        End If
        m_switch_state = state
        Log "New State " & state

        Dim evt
        Select Case state
            Case "both"
                For Each evt in m_events_when_both.Keys
                    If m_events_when_both(evt).Evaluate() Then
                        DispatchPinEvent m_events_when_both(evt).EventName, Null
                    End If
                Next
            Case "one"
                For Each evt in m_events_when_one.Keys
                    If m_events_when_one(evt).Evaluate() Then
                        DispatchPinEvent m_events_when_one(evt).EventName, Null
                    End If
                Next
            Case "inactive"
                For Each evt in m_events_when_inactive.Keys
                    If m_events_when_inactive(evt).Evaluate() Then
                        DispatchPinEvent m_events_when_inactive(evt).EventName, Null
                    End If
                Next
            Case "switches_1"
                For Each evt in m_events_when_switch_1.Keys
                    If m_events_when_switch_1(evt).Evaluate() Then
                        DispatchPinEvent m_events_when_switch_1(evt).EventName, Null
                    End If
                Next
            Case "switches_2"
                For Each evt in m_events_when_switch_2.Keys
                    If m_events_when_switch_2(evt).Evaluate() Then
                        DispatchPinEvent m_events_when_switch_2(evt).EventName, Null
                    End If
                Next
        End Select

    End Sub

    Public Function ToYaml()
        Dim yaml, key, x
        yaml = "  " & Replace(m_name, "combo_switch_", "") & ":" & vbCrLf
        If Not IsEmpty(m_switch_1) Then
            yaml = yaml & "    switches_1: " & m_switch_1 & vbCrLf
        End If
        If Not IsEmpty(m_switch_2) Then
            yaml = yaml & "    switches_2: " & m_switch_2 & vbCrLf
        End If
        If UBound(m_events_when_both.Keys()) > -1 Then
            yaml = yaml & "    events_when_both: " & vbCrLf
            For Each key in m_events_when_both.Keys()
                yaml = yaml & "      - " & key & vbCrLf
            Next
        End If
        If UBound(m_events_when_inactive.Keys()) > -1 Then
            yaml = yaml & "    events_when_inactive: " & vbCrLf
            For Each key in m_events_when_inactive.Keys()
                yaml = yaml & "      - " & key & vbCrLf
            Next
        End If
        If UBound(m_events_when_switch_1.Keys()) > -1 Then
            yaml = yaml & "    events_when_switches_1: " & vbCrLf
            For Each key in m_events_when_switch_1.Keys()
                yaml = yaml & "      - " & key & vbCrLf
            Next
        End If
        If UBound(m_events_when_switch_2.Keys()) > -1 Then
            yaml = yaml & "    events_when_switches_2: " & vbCrLf
            For Each key in m_events_when_switch_2.Keys()
                yaml = yaml & "      - " & key & vbCrLf
            Next
        End If
        If UBound(m_events_when_switch_2.Keys()) > -1 Then
            yaml = yaml & "    events_when_switches_2: " & vbCrLf
            For Each key in m_events_when_switch_2.Keys()
                yaml = yaml & "      - " & key & vbCrLf
            Next
        End If
        If m_hold_time.Raw <> 0 Then
            yaml = yaml & "    hold_time: " & m_hold_time.Raw & vbCrLf
        End If
        If m_max_offset_time.Raw <> 0 Then
            yaml = yaml & "    max_offset_time: " & m_max_offset_time.Raw & vbCrLf
        End If
        If m_release_time.Raw <> 0 Then
            yaml = yaml & "    release_time: " & m_release_time.Raw & vbCrLf
        End If

        ToYaml = yaml
    End Function

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

End Class

Function ComboSwitchEventHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim combo_switch : Set combo_switch = ownProps(1)
    Dim switch_name : switch_name = ownProps(2)
    Select Case evt
        Case "switch1_active"
            combo_switch.Switch1WentActive switch_name
        Case "switch2_active"
            combo_switch.Switch2WentActive switch_name
        Case "switch1_inactive"
            combo_switch.Switch1WentInactive switch_name
        Case "switch2_inactive"
            combo_switch.Switch2WentInactive switch_name
        Case "activate_switch1"
            combo_switch.ActivateSwitches1 switch_name
        Case "activate_switch2"
            combo_switch.ActivateSwitches2 switch_name
        Case "release_switch1"
            combo_switch.ReleaseSwitch1 switch_name
        Case "release_switch2"
            combo_switch.ReleaseSwitch2 switch_name
        Case "switch_1_only"
            combo_switch.PostSwitchStateEvents "switches_1"
        Case "switch_2_only"
            combo_switch.PostSwitchStateEvents "switches_2"
    End Select
    If IsObject(args(1)) Then
        Set ComboSwitchEventHandler = kwargs
    Else
        ComboSwitchEventHandler = kwargs
    End If
End Function


Class GlfCounter

    Private m_name
    Private m_priority
    Private m_mode
    Private m_enable_events
    Private m_count_events
    Private m_count_complete_value
    Private m_disable_on_complete
    Private m_reset_on_complete
    Private m_events_when_complete
    Private m_persist_state
    Private m_debug

    Private m_count

    Public Property Let EnableEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_enable_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let CountEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_count_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let CountCompleteValue(value) : m_count_complete_value = value : End Property
    Public Property Let DisableOnComplete(value) : m_disable_on_complete = value : End Property
    Public Property Let ResetOnComplete(value) : m_reset_on_complete = value : End Property
    Public Property Let EventsWhenComplete(value) : m_events_when_complete = value : End Property
    Public Property Let PersistState(value) : m_persist_state = value : End Property
    Public Property Let Debug(value) : m_debug = value : End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

  Public default Function init(name, mode)
        m_name = "counter_" & name
        m_mode = mode.Name
        m_priority = mode.Priority
        m_count = -1
        Set m_enable_events = CreateObject("Scripting.Dictionary")
        Set m_count_events = CreateObject("Scripting.Dictionary")

        AddPinEventListener m_mode & "_starting", m_name & "_activate", "CounterEventHandler", m_priority, Array("activate", Me)
        AddPinEventListener m_mode & "_stopping", m_name & "_deactivate", "CounterEventHandler", m_priority, Array("deactivate", Me)
        Set Init = Me
  End Function

    Public Sub SetValue(value)
        If value = "" Then
            value = 0
        End If
        m_count = value
        If m_persist_state Then
            SetPlayerState m_name & "_state", m_count
        End If
    End Sub

    Public Sub Activate()
        If m_persist_state And m_count > -1 Then
            If GetPlayerState(m_name & "_state")=False Then
                SetValue 0
            Else
                SetValue GetPlayerState(m_name & "_state")
            End If
        Else
            SetValue 0
        End If
        Dim evt
        For Each evt in m_enable_events.Keys
            AddPinEventListener m_enable_events(evt).EventName, m_name & "_enable", "CounterEventHandler", m_priority+m_enable_events(evt).Priority, Array("enable", Me, evt)
        Next
    End Sub

    Public Sub Deactivate()
        Disable()
        If Not m_persist_state Then
            SetValue -1
        End If
        Dim evt
        For Each evt in m_enable_events.Keys
            RemovePinEventListener m_enable_events(evt).EventName, m_name & "_enable"
        Next
    End Sub

    Public Sub Enable()
        Log "Enabling"
        Dim evt
        For Each evt in m_count_events.Keys
            AddPinEventListener m_count_events(evt).EventName, m_name & "_count", "CounterEventHandler", m_priority+m_count_events(evt).Priority, Array("count", Me)
        Next
    End Sub

    Public Sub Disable()
        Log "Disabling"
        Dim evt
        For Each evt in m_count_events.Keys
            RemovePinEventListener m_count_events(evt).EventName, m_name & "_count"
        Next
    End Sub

    Public Sub Count()
        Log "counting: old value: "& m_count & ", new Value: " & m_count+1 & ", target: "& m_count_complete_value
        SetValue m_count + 1
        If m_count = m_count_complete_value Then
            Dim evt
            For Each evt in m_events_when_complete
                DispatchPinEvent evt, Null
            Next
            If m_disable_on_complete Then
                Disable()
            End If
            If m_reset_on_complete Then
                SetValue 0
            End If
        End If
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub
End Class

Function CounterEventHandler(args)

    Dim ownProps, kwargs : ownProps = args(0) : kwargs = args(1)
    Dim evt : evt = ownProps(0)
    Dim counter : Set counter = ownProps(1)
    Select Case evt
        Case "activate"
            counter.Activate
        Case "deactivate"
            counter.Deactivate
        Case "enable"
            counter.Enable
        Case "count"
            counter.Count
    End Select
    CounterEventHandler = kwargs
End Function


Class GlfDofPlayer

    Private m_name
    Private m_priority
    Private m_mode
    Private m_debug
    private m_base_device
    Private m_events
    Private m_eventValues

    Public Property Get Name() : Name = "dof_player" : End Property


    Public Property Get EventDOF() : EventDOF = m_eventValues.Items() : End Property
    Public Property Get EventName(name)

        Dim newEvent : Set newEvent = (new GlfEvent)(name)
        m_events.Add newEvent.Raw, newEvent
        Dim new_dof : Set new_dof = (new GlfDofPlayerItem)()
        m_eventValues.Add newEvent.Raw, new_dof
        Set EventName = new_dof

    End Property

    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

  Public default Function init(mode)
        m_name = "dof_player_" & mode.name
        m_mode = mode.Name
        m_priority = mode.Priority
        m_debug = False
        Set m_events = CreateObject("Scripting.Dictionary")
        Set m_eventValues = CreateObject("Scripting.Dictionary")
        Set m_base_device = (new GlfBaseModeDevice)(mode, "dof_player", Me)
        Set Init = Me
  End Function

    Public Sub Activate()
        Dim evt
        For Each evt In m_events.Keys()
            AddPinEventListener m_events(evt).EventName, m_mode & "_" & evt & "_dof_player_play", "DofPlayerEventHandler", m_priority+m_events(evt).Priority, Array("play", Me, evt)
        Next
    End Sub

    Public Sub Deactivate()
        Dim evt
        For Each evt In m_events.Keys()
            RemovePinEventListener m_events(evt).EventName, m_mode & "_" & evt & "_dof_player_play"
        Next
    End Sub

    Public Function Play(evt)
        Play = Empty
        If m_events(evt).Evaluate() Then
            Log "Firing DOF Event: " & m_eventValues(evt).DOFEvent & " State: " & m_eventValues(evt).Action
            DOF m_eventValues(evt).DOFEvent, m_eventValues(evt).Action
        End If
    End Function

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_mode & "_dof_player", message
        End If
    End Sub

    Public Function ToYaml()
        Dim yaml
        Dim evt
        If UBound(m_events.Keys) > -1 Then
            For Each key in m_events.keys
                yaml = yaml & "  " & key & ": " & vbCrLf
                yaml = yaml & m_events(key).ToYaml
            Next
            yaml = yaml & vbCrLf
        End If
        ToYaml = yaml
    End Function

End Class

Function DofPlayerEventHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim dof_player : Set dof_player = ownProps(1)
    Select Case evt
        Case "activate"
            dof_player.Activate
        Case "deactivate"
            dof_player.Deactivate
        Case "play"
            dof_player.Play(ownProps(2))
    End Select
    If IsObject(args(1)) Then
        Set DofPlayerEventHandler = kwargs
    Else
        DofPlayerEventHandler = kwargs
    End If
End Function

Class GlfDofPlayerItem
  Private m_dof_event, m_action

    Public Property Get Action(): Action = m_action: End Property
    Public Property Let Action(input)
        Select Case input
            Case "DOF_OFF"
                m_action = 0
            Case "DOF_ON"
                m_action = 1
            Case "DOF_PULSE"
                m_action = 2
        End Select
    End Property

    Public Property Get DOFEvent(): DOFEvent = m_dof_event: End Property
    Public Property Let DOFEvent(input): m_dof_event = CInt(input): End Property

  Public default Function init()
        m_action = Empty
        m_dof_event = Empty
        Set Init = Me
  End Function

End Class



Class GlfEventPlayer

    Private m_priority
    Private m_mode
    Private m_debug
    private m_base_device
    Private m_events
    Private m_eventValues

    Public Property Get Name() : Name = "event_player" : End Property

    Public Property Get Events() : Set Events = m_events : End Property
    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

  Public default Function init(mode)
        m_mode = mode.Name
        m_priority = mode.Priority
        m_debug = False
        Set m_events = CreateObject("Scripting.Dictionary")
        Set m_eventValues = CreateObject("Scripting.Dictionary")
        Set m_base_device = (new GlfBaseModeDevice)(mode, "event_player", Me)
        Set Init = Me
  End Function

    Public Sub Add(key, value)
        Dim newEvent : Set newEvent = (new GlfEvent)(key)
        m_events.Add newEvent.Raw, newEvent

        Dim evtValue, evtValues(), i
        Redim evtValues(UBound(value))
        i=0
        For Each evtValue in value
            Dim newEventValue : Set newEventValue = (new GlfEventDispatch)(evtValue)
            Set evtValues(i) = newEventValue
            i=i+1
        Next
        m_eventValues.Add newEvent.Raw, evtValues
    End Sub

    Public Sub Activate()
        Dim evt
        For Each evt In m_events.Keys()
            Log "Adding Event Listener for: " & m_events(evt).EventName
            AddPinEventListener m_events(evt).EventName, m_mode & "_" & m_events(evt).Name & "_event_player_play", "EventPlayerEventHandler", m_priority+m_events(evt).Priority, Array("play", Me, evt)
        Next
    End Sub

    Public Sub Deactivate()
        Dim evt
        For Each evt In m_events.Keys()
            RemovePinEventListener m_events(evt).EventName, m_mode & "_" & m_events(evt).Name & "_event_player_play"
        Next
    End Sub

    Public Sub FireEvent(evt)
        Log "Dispatching Event: " & evt
        If Not IsNull(m_events(evt).Condition) Then
            'msgbox m_events(evt).Condition
            If GetRef(m_events(evt).Condition)(Null) = False Then
                Exit Sub
            End If
        End If
        Dim evtValue
        For Each evtValue In m_eventValues(evt)
            Log "Dispatching Event: " & evtValue.EventName
            Glf_BcpSendEvent evtValue.EventName
            DispatchPinEvent evtValue.EventName, evtValue.Kwargs
        Next
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_mode & "_event_player", message
        End If
    End Sub

    Public Function ToYaml()
        Dim yaml
        Dim evt
        If UBound(m_events.Keys) > -1 Then
            For Each key in m_events.keys
                yaml = yaml & "  " & m_events(key).Raw & ": " & vbCrLf
                For Each evt in m_eventValues(key)
                    yaml = yaml & "    - " & evt & vbCrLf
                Next
            Next
            yaml = yaml & vbCrLf
        End If
        ToYaml = yaml
    End Function

End Class

Function EventPlayerEventHandler(args)

    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim eventPlayer : Set eventPlayer = ownProps(1)
    Select Case evt
        Case "play"
            eventPlayer.FireEvent ownProps(2)
    End Select
    If IsObject(args(1)) Then
        Set EventPlayerEventHandler = kwargs
    Else
        EventPlayerEventHandler = kwargs
    End If
End Function

Class GlfExtraBall

    Private m_name
    private m_command_name
    Private m_priority
    Private m_mode
    Private m_base_device
    Private m_debug

    Private m_award_events
    Private m_max_per_game

    Public Property Get Name(): Name = m_name: End Property
    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

    Public Property Get GetValue(value)
        Select Case value
            'Case "":
            '    GetValue =
        End Select
    End Property

    Public Property Let AwardEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_award_events.Add newEvent.Raw, newEvent
        Next
    End Property

    Public Property Let MaxPerGame(value) : Set m_max_per_game = CreateGlfInput(value) : End Property

  Public default Function init(name, mode)
        m_name = "extra_ball_" & name
        m_command_name = name
        m_mode = mode.Name
        m_priority = mode.Priority

        Set m_award_events = CreateObject("Scripting.Dictionary")
        Set m_max_per_game = CreateGlfInput(0)

        Glf_SetInitialPlayerVar m_name & "_awarded", 0

        m_debug = False
        Set m_base_device = (new GlfBaseModeDevice)(mode, "extra_ball", Me)

        Set Init = Me
  End Function

    Public Sub Activate()
        Enable()
    End Sub

    Public Sub Deactivate()
        Disable()
    End Sub

    Public Sub Enable()
        Log "Enabling"
        Dim evt
        For Each evt in m_award_events.Keys
            AddPinEventListener m_award_events(evt).EventName, m_name & "_" & evt & "_award", "ExtraBallsHandler", m_priority+m_award_events(evt).Priority, Array("award", Me, m_award_events(evt))
        Next
    End Sub

    Public Sub Disable()
        Log "Disabling"
        Dim evt
        For Each evt in m_award_events.Keys
            RemovePinEventListener m_award_events(evt).EventName, m_name & "_" & evt & "_award"
        Next
    End Sub

    Public Sub Award(evt)
        If evt.Evaluate() Then
            If GetPlayerState(m_name & "_awarded") < m_max_per_game.Value() Then
                SetPlayerState "extra_balls", GetPlayerState("extra_balls") + 1
                SetPlayerState m_name & "_awarded", GetPlayerState(m_name & "_awarded") + 1
                DispatchPinEvent m_name & "_awarded", Null
                DispatchPinEvent "extra_ball_awarded", Null
            End If
        End If
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

End Class

Function ExtraBallsHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim extra_ball : Set extra_ball = ownProps(1)
    Select Case evt
        Case "award"
            extra_ball.Award ownProps(2)
    End Select
    If IsObject(args(1)) Then
        Set ExtraBallsHandler = kwargs
    Else
        ExtraBallsHandler = kwargs
    End If
End Function
Function GlfGameSettings()
    Set glf_game = (new GlfGame)()
  Set GlfGameSettings = glf_game
End Function

Class GlfGame

    Private m_balls_per_game

    Public Property Get BallsPerGame()
        BallsPerGame = m_balls_per_game.Value()
    End Property
    Public Property Let BallsPerGame(input)
        Set m_balls_per_game = CreateGlfInput(input)
    End Property

  Public default Function init()

        Set m_balls_per_game = CreateGlfInput(3)

        Set Init = Me
  End Function

    Public Function ToYaml()
        Dim yaml : yaml = ""
        ToYaml = yaml
    End Function

End Class
Function EnableGlfHighScores()
    Dim high_score_mode : Set high_score_mode = CreateGlfMode("glf_high_scores", 80)
    high_score_mode.StartEvents = Array("game_ending")
    high_score_mode.StopEvents = Array("high_score_complete")
    high_score_mode.UseWaitQueue = True
    Dim high_score : Set high_score = (new GlfHighScore)(high_score_mode)
    high_score.Debug = True
    Set high_score_mode.HighScore = high_score
    Set glf_highscore = high_score
  Set EnableGlfHighScores = glf_highscore
End Function

Class GlfHighScore

    Private m_name
    Private m_priority
    Private m_mode
    Private m_debug
    private m_base_device
    private m_categories
    private m_defaults
    private m_vars
    private m_award_slide_display_time
    private m_enter_initials_timeout
    private m_reset_high_scores_events
    private m_highscores
    Private m_initials_needed
    Private m_current_initials

    Public Property Get Name() : Name = "high_score" : End Property

    Public Property Get Categories()
        Set Categories = m_categories
    End Property

    Public Property Get Defaults(name)
        Dim new_default : Set new_default = CreateObject("Scripting.Dictionary")
        m_defaults.Add name, new_default
        Set Defaults = m_defaults(name)
    End Property

    Public Property Get Vars(name)
        m_vars.Add name, CreateObject("Scripting.Dictionary")
        Set Vars = m_vars(name)
    End Property

    Public Property Let AwardSlideDisplayTime(input)
        Set m_award_slide_display_time = CreateGlfInput(input)
    End Property

    Public Property Let EnterInitialsTimeout(input)
        Set m_enter_initials_timeout = CreateGlfInput(input)
    End Property

    Public Property Let ResetHighScoreEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_reset_high_scores_events.Add newEvent.Raw, newEvent
        Next
    End Property

    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

  Public default Function init(mode)
        m_name = "high_score_" & mode.name
        m_mode = mode.Name
        m_priority = mode.Priority
        m_debug = False
        Set m_award_slide_display_time = CreateGlfInput(4000)
        Set m_enter_initials_timeout = CreateGlfInput(20000)
        Set m_categories = CreateObject("Scripting.Dictionary")
        Set m_defaults = CreateObject("Scripting.Dictionary")
        Set m_vars = CreateObject("Scripting.Dictionary")
        Set m_highscores = CreateObject("Scripting.Dictionary")
        Set m_initials_needed = CreateObject("Scripting.Dictionary")
        Set m_reset_high_scores_events = CreateObject("Scripting.Dictionary")
        Set m_base_device = (new GlfBaseModeDevice)(mode, "high_score", Me)
        ReadHighScores()
        Set Init = Me
  End Function

    Public Sub Activate()

        'Run High Scores.
        'Check if any player variable beats the stored value for that category.
        'Ask for intiital if we dont have them.
        'display award
        'write scores.
        'finish
        Log "Activating"
        Dim category, p

        For Each category in m_categories.Keys()
            'eg score.
            ' get the value for each player
            Dim player_values()
            Dim player_numbers()
            ReDiM player_values(UBound(glf_playerState.Keys()))
            ReDiM player_numbers(UBound(glf_playerState.Keys()))
            For p=0 to UBound(glf_playerState.Keys())
                player_values(p) = GetPlayerStateForPlayer(p, category)
                player_numbers(p) = p+1
            Next

             'Sort the values high to low.
             Dim n, i, j, temp, swapped
             n = UBound(player_values) - LBound(player_values) + 1
             For i = 0 To n - 1
                 swapped = False
                 For j = 0 To n - i - 2
                     If player_values(j) < player_values(j + 1) Then
                         temp = player_values(j)
                         player_values(j) = player_values(j + 1)
                         player_values(j + 1) = temp

                         temp = player_numbers(j)
                         player_numbers(j) = player_numbers(j + 1)
                         player_numbers(j + 1) = temp

                         swapped = True
                     End If
                 Next
                 If Not swapped Then
                     Exit For
                 End If
             Next

            'msgbox player_values(0)

            For i = 0 To UBound(player_values)
                Dim position
                'msgbox "UBound(m_categories(category)): " & UBound(m_categories(category))
                For position=0 to UBound(m_categories(category))
                    Dim high_score
                    'msgbox "Category: " & category
                    high_score = m_highscores(category)(CStr(position+1))("value")
                    high_score = CLng(high_score)
                    ''msgbox "HighScore: " & ">" & high_score & "<"
                    ''msgbox "PlayerScore: " & CInt(player_values(i))
                    'msgbox typename(high_score)
                    'msgbox typename(player_values(i))
                    If player_values(i) > high_score Then
                        'msgbox "setting new high score"
                        Log "Setting new high score"

                        'Shift everything down, knocking the bottom score off.
                        Dim shift_index, hs_item, hs_tmp
                        Set hs_tmp = GlfKwargs()
                        With hs_tmp
                            .Add "label", ""
                            .Add "player_name", ""
                            .Add "value", 0
                        End With
                        Set hs_item = GlfKwargs()
                        With hs_item
                            .Add "label", ""
                            .Add "player_name", ""
                            .Add "value", 0
                        End With
                        For shift_index=position+1 to UBound(m_categories(category))
                            If shift_index>position+1 Then
                                hs_item("label") = hs_tmp("label")
                                hs_item("player_name") = hs_tmp("player_name")
                                hs_item("value") = hs_tmp("value")
                            Else
                                hs_item("label") = m_highscores(category)(CStr(shift_index))("label")
                                hs_item("player_name") = m_highscores(category)(CStr(shift_index))("player_name")
                                hs_item("value") = m_highscores(category)(CStr(shift_index))("value")
                            End If
                            hs_tmp("label") = m_highscores(category)(CStr(shift_index+1))("label")
                            hs_tmp("player_name") = m_highscores(category)(CStr(shift_index+1))("player_name")
                            hs_tmp("value") = m_highscores(category)(CStr(shift_index+1))("value")

                            ''msgbox "hs_item" & hs_item("value")
                            'msgbox "hs_tmp" & hs_tmp("value")

                            m_highscores(category)(CStr(shift_index+1))("label") = hs_item("label")
                            m_highscores(category)(CStr(shift_index+1))("player_name") = hs_item("player_name")
                            m_highscores(category)(CStr(shift_index+1))("value") = hs_item("value")
                        Next

                        'new score
                        m_highscores(category)(CStr(position+1))("value") = player_values(i)
                        m_highscores(category)(CStr(position+1))("player_name") = ""
                        m_highscores(category)(CStr(position+1))("player_num") = player_numbers(i)
                        m_highscores(category)(CStr(position+1))("award") = m_categories(category)(position)
                        m_highscores(category)(CStr(position+1))("category") = category
                        m_highscores(category)(CStr(position+1))("position") = position + 1
                        If Not m_initials_needed.Exists(i+1) Then
                            m_initials_needed.Add i+1, m_highscores(category)(CStr(position+1))
                        End If
                        Exit For
                    Else
                        'msgbox "Player Score " & player_values(i) & " is not greater than the high score: " & high_score
                    End If
                Next
            Next
        Next

        'Ask for Initials
        If Ubound(m_initials_needed.Keys())>-1 Then
            Log "Asking for Initials"
            m_current_initials = 0
            Dim initials_needed_items : initials_needed_items = m_initials_needed.Items()
            AddPinEventListener "text_input_high_score_complete", "text_input_high_score_complete", "HighScoreEventHandler", m_priority, Array("initials_complete", Me, initials_needed_items(0))
            DispatchPinEvent "high_score_enter_initials", initials_needed_items(0)
            SetDelay "enter_initials_timeout", "HighScoreEventHandler", Array(Array("initials_complete", Me, initials_needed_items(0)), Null), m_enter_initials_timeout.Value
        Else
            'No New High Scores, End Mode
            Log "No High Score, Ending"
            'msgbox "No High Score, Ending"
            DispatchPinEvent "high_score_complete", Null
        End If

    End Sub

    Public Sub Deactivate()

    End Sub

    Public Sub InitialsInputComplete(initials_item, kwargs)

        'Show Award.
        Log "Initials Complete"
        'msgbox "Initials Complete"
        RemoveDelay "enter_initials_timeout"
        RemovePinEventListener "text_input_high_score_complete", "text_input_high_score_complete"

        'm_highscores(initials_item("category"))(CStr(initials_item("position")))("player_name") = text

        Dim text : text = ""
        If Not IsNull(kwargs) Then
            If kwargs.Exists("text") Then
                text = kwargs("text")
            End If
        End If

        Dim keys, key
        keys = m_highscores.Keys()
        For Each key in keys
            Dim s
            For Each s in m_highscores(key).Keys()
                Dim high_scores_item : Set high_scores_item = m_highscores(key)
                If high_scores_item(s)("player_num") = initials_item("player_num") Then
                    'msgbox "Setting Player " & m_current_initials+1 & " Name to >" & text & "<"
                    high_scores_item(s)("player_name") = text
                End If
            Next
        Next

        Log "Show Award"
        DispatchPinEvent "high_score_award_display", initials_item
        DispatchPinEvent initials_item("award") & "_award_display", initials_item
        DispatchPinEvent initials_item("category") & "_award_display", initials_item

        SetDelay "award_display_time", "HighScoreEventHandler", Array(Array("award_display_complete", Me), Null), m_award_slide_display_time.Value

    End Sub

    Public Sub AwardDisplayComplete()

        Log "Award Complete"
        If Ubound(m_initials_needed.Keys())>m_current_initials Then
            Log "Asking for Next Initials"
            m_current_initials = m_current_initials + 1
            Dim initials_needed_items : initials_needed_items = m_initials_needed.Items()
            AddPinEventListener "text_input_high_score_complete", "text_input_high_score_complete", "HighScoreEventHandler", m_priority, Array("initials_complete", Me, initials_needed_items(m_current_initials))
            DispatchPinEvent "high_score_enter_initials", initials_needed_items(m_current_initials)
            SetDelay "enter_initials_timeout", "HighScoreEventHandler", Array(Array("initials_complete", Me, initials_needed_items(m_current_initials)), Null), m_enter_initials_timeout.Value
        Else
            Log "Writing High Scores"
            Dim keys, key
            keys = m_highscores.Keys()
            Dim tmp : Set tmp = CreateObject("Scripting.Dictionary")
            For Each key in keys
                Dim s, i
                i=1
                'msgbox "Key Count" & ubound(m_highscores(key).Keys())
                For Each s in m_highscores(key).Keys()
                    Dim high_scores_item : Set high_scores_item = m_highscores(key)
                    'msgbox s
                    tmp.Add key & "_" & i & "_label", m_categories(key)(i-1)
                    tmp.Add key & "_" & i &"_name", high_scores_item(s)("player_name")
                    tmp.Add key & "_" & i &"_value", high_scores_item(s)("value")
                    i=i+1
                Next
                WriteHighScores "HighScores", tmp
            Next
            m_initials_needed.RemoveAll
            Log "Ending"
            DispatchPinEvent "high_score_complete", Null
        End If
        'End Mode
    End Sub

    Public Sub WriteDefaults()
        ReadHighScores()
        dim key, keys, i
        keys = m_defaults.Keys()
        Dim tmp : Set tmp = CreateObject("Scripting.Dictionary")
        For Each key in keys
            Dim default_keys : default_keys = m_defaults(key).Keys()
            For i=0 to UBound(default_keys)
                Dim default_value_item : Set default_value_item = m_defaults(key)
                Dim cat_a1 : cat_a1 = m_categories(key)
                If m_highscores.Exists(key) Then
                    If Not m_highscores(key).Exists(CStr(i+1)) Then
                        tmp.Add key & "_" & i+1 &"_label", cat_a1(i)
                        tmp.Add key & "_" & i+1 &"_name", default_keys(i)
                        tmp.Add key & "_" & i+1 &"_value", default_value_item(default_keys(i))
                    End If
                Else
                    tmp.Add key & "_" & i+1 & "_label", cat_a1(i)
                    tmp.Add key & "_" & i+1 &"_name", default_keys(i)
                    tmp.Add key & "_" & i+1 &"_value", default_value_item(default_keys(i))
                End If
            Next
            WriteHighScores "HighScores", tmp
        Next
        ReadHighScores()
    End Sub

    Private Sub WriteHighScores(section, scores)
        Dim objFSO, objFile, arrLines, line, inSection, foundSection
        Dim outputLines, key
        Set objFSO = CreateObject("Scripting.FileSystemObject")

        If objFSO.FileExists(CGameName & "_glf.ini") Then
            Set objFile = objFSO.OpenTextFile(CGameName & "_glf.ini", 1)
            arrLines = Split(objFile.ReadAll, vbCrLf)
            objFile.Close
        Else
            arrLines = Array()
        End If

        outputLines = ""
        inSection = False
        foundSection = False

        For Each line In arrLines
            If Left(line, 1) = "[" And Right(line, 1) = "]" Then
                inSection = (LCase(Mid(line, 2, Len(line) - 2)) = LCase(section))
                foundSection = foundSection Or inSection
            End If

            If inSection And InStr(line, "=") > 0 Then
                Dim split_key : split_key = Split(line, "=")
                key = Trim(split_key(0))
                If scores.Exists(key) Then
                    line = key & "=" & scores(key)
                    scores.Remove key
                End If
            End If

            If line = "" And inSection Then
                ' Add remaining keys in the section
                For Each key In scores.Keys
                    outputLines = outputLines & key & "=" & scores(key) & vbCrLf
                Next
                scores.RemoveAll
            End If
            If line <> "" Then
                outputLines = outputLines & line & vbCrLf
            End If
        Next

        If Not foundSection Then
            outputLines = outputLines & "["&section&"]" & vbCrLf
            For Each key In scores.Keys
                outputLines = outputLines & key & "=" & scores(key) & vbCrLf
            Next
        End If

        Set objFile = objFSO.CreateTextFile(CGameName & "_glf.ini", True)
        objFile.Write outputLines
        objFile.Close
        Glf_ReadMachineVars("HighScores")
    End Sub

    Sub ReadHighScores()
        Dim objFSO, objFile, arrLines, line, inSection
        Set objFSO = CreateObject("Scripting.FileSystemObject")

        If Not objFSO.FileExists(CGameName & "_glf.ini") Then Exit Sub

        Set objFile = objFSO.OpenTextFile(CGameName & "_glf.ini", 1)
        arrLines = Split(objFile.ReadAll, vbCrLf)
        objFile.Close

        m_highscores.RemoveAll()

        inSection = False
        Dim current_name
        For Each line In arrLines
            line = Trim(line)
            If Left(line, 1) = "[" And Right(line, 1) = "]" Then
                inSection = (LCase(Mid(line, 2, Len(line) - 2)) = LCase("HighScores"))
            ElseIf inSection And InStr(line, "=") > 0 Then
                Dim parts : parts = Split(line, "=")
                Dim key_parts : key_parts = Split(parts(0), "_")

                Dim category : category = Trim(key_parts(0))
                Dim position : position = Trim(key_parts(1))
                Dim attr : attr = Trim(key_parts(2))
                Dim current_label
                If m_categories.Exists(category) Then
                    If Not m_highscores.Exists(category) Then
                        m_highscores.Add category, CreateObject("Scripting.Dictionary")
                    End If
                    Select Case attr
                        Case "label":
                            current_label = parts(1)
                        Case "name":
                            current_name = parts(1)
                        Case "value":
                            Dim kwargs : Set kwargs = GlfKwargs()
                            With kwargs
                                .Add "label", current_label
                                .Add "player_name", current_name
                                .Add "value", parts(1)
                            End With
                            'msgbox category & "," & position & ", " & current_label & ", " & current_name & ", " & parts(1)
                            m_highscores(category).Add CStr(position), kwargs
                    End Select
                End If
            End If
        Next
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_mode & "_high_score", message
        End If
    End Sub

    Public Function ToYaml()
        Dim yaml : yaml = ""
        ToYaml = yaml
    End Function

End Class

Function HighScoreEventHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim high_score : Set high_score = ownProps(1)
    Select Case evt
        Case "activate"
            high_score.Activate
        Case "deactivate"
            high_score.Deactivate
        Case "initials_complete"
            high_score.InitialsInputComplete ownProps(2), kwargs
        Case "award_display_complete"
            high_score.AwardDisplayComplete
    End Select
    If IsObject(args(1)) Then
        Set HighScoreEventHandler = kwargs
    Else
        HighScoreEventHandler = kwargs
    End If
End Function

Class GlfHighScoreItem
  Private m_slide, m_action, m_expire, m_max_queue_time, m_method, m_priority, m_target, m_tokens

    Public Property Get Slide(): Slide = m_slide: End Property
    Public Property Let Slide(input)
        m_slide = input
    End Property

    Public Property Get Action(): Action = m_action: End Property
    Public Property Let Action(input)
        m_action = input
    End Property

    Public Property Get Expire(): Expire = m_expire: End Property
    Public Property Let Expire(input)
        m_expire = input
    End Property

    Public Property Get MaxQueueTime(): MaxQueueTime = m_max_queue_time: End Property
    Public Property Let MaxQueueTime(input)
        m_max_queue_time = input
    End Property

    Public Property Get Method(): Method = m_method: End Property
    Public Property Let Method(input)
        m_method = input
    End Property

    Public Property Get Priority(): Priority = m_priority: End Property
    Public Property Let Priority(input)
        m_priority = input
    End Property

    Public Property Get Target(): Target = m_target: End Property
    Public Property Let Target(input)
        m_target = input
    End Property

    Public Property Get Tokens(): Tokens = m_tokens: End Property
    Public Property Let Tokens(input)
        m_tokens = input
    End Property

  Public default Function init()
        m_action = "play"
        m_slide = Empty
        m_expire = Empty
        m_max_queue_time = Empty
        m_method = Empty
        m_priority = Empty
        m_target = Empty
        m_tokens = Empty
        Set Init = Me
  End Function

End Class


Class GlfLightPlayer

    Private m_priority
    Private m_mode
    Private m_events
    Private m_debug
    Private m_name
    Private m_value
    private m_base_device

    Public Property Get Name() : Name = m_name : End Property

    Public Property Get EventNames() : EventNames = m_events.Keys() : End Property
    Public Property Get EventName(name)
        If m_events.Exists(name) Then
            Set EventName = m_events(name)
        Else
            Dim new_event : Set new_event = (new GlfLightPlayerEventItem)()
            m_events.Add name, new_event
            Set EventName = new_event
        End If
    End Property

    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

  Public default Function init(mode)
        m_name = "light_player_" & mode.name
        m_mode = mode.Name
        m_priority = mode.Priority
        Set m_events = CreateObject("Scripting.Dictionary")

        Set m_base_device = (new GlfBaseModeDevice)(mode, "light_player", Me)
        Set Init = Me
  End Function

    Public Sub Activate()
        Dim evt
        For Each evt In m_events.Keys()
            Log "Adding Event Listener for event: " & evt
            AddPinEventListener evt, m_mode & "_light_player_play", "LightPlayerEventHandler", m_priority, Array("play", Me, m_events(evt), evt)
        Next
    End Sub

    Public Sub Deactivate()
        Dim evt
        For Each evt In m_events.Keys()
            RemovePinEventListener evt, m_mode & "_light_player_play"
            PlayOff evt, m_events(evt)
        Next
    End Sub

    Public Sub ReloadLights()
        Log "Reloading Lights"
        Dim evt
        For Each evt in m_events.Keys()
            Dim lightName, light,lightsCount,x,tagLight, tagLights
            'First get light counts
            lightsCount = 0
            For Each lightName in m_events(evt).LightNames
                Set light = m_events(evt).Lights(lightName)
                If Not glf_lightNames.Exists(lightName) Then
                    tagLights = glf_lightTags("T_"&lightName).Keys()
                    Log "Tag Lights: " & Join(tagLights)
                    For Each tagLight in tagLights
                        lightsCount = lightsCount + 1
                    Next
                Else
                    lightsCount = lightsCount + 1
                End If
            Next
            Log "Adding " & lightsCount & " lights for event: " & evt
            Dim seqArray
            ReDim seqArray(lightsCount-1)
            x=0
            'Build Seq
            For Each lightName in m_events(evt).LightNames
                Set light = m_events(evt).Lights(lightName)

                If Not glf_lightNames.Exists(lightName) Then
                    tagLights = glf_lightTags("T_"&lightName).Keys()
                    For Each tagLight in tagLights
                        seqArray(x) = tagLight & "|100|" & light.Color & "|" & light.Fade
                        x=x+1
                    Next
                Else
                    seqArray(x) = lightName & "|100|" & light.Color & "|" & light.Fade
                    x=x+1
                End If
            Next
            Log "Light List: " & Join(seqArray)
            m_events(evt).LightSeq = seqArray
        Next
    End Sub

    Public Sub Play(evt, lights)
        LightPlayerCallbackHandler evt, Array(lights.LightSeq), m_name, m_priority, True, 1, Empty
    End Sub

    Public Sub PlayOff(evt, lights)
        LightPlayerCallbackHandler evt, Array(lights.LightSeq), m_name, m_priority, False, 1, Empty
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

    Public Function ToYaml()
        Dim yaml
        Dim evt, key
        If UBound(m_events.Keys) > -1 Then
            For Each key in m_events.keys
                yaml = yaml & "  " & key & ": " & vbCrLf
                yaml = yaml & m_events(key).ToYaml()
            Next
            yaml = yaml & vbCrLf
        End If
        ToYaml = yaml
    End Function
End Class

Class GlfLightPlayerEventItem
  Private m_lights, m_lightSeq

    Public Property Get LightNames() : LightNames = m_lights.Keys() : End Property
    Public Property Get Lights(name)
        If m_lights.Exists(name) Then
            Set Lights = m_lights(name)
        Else
            Dim new_event : Set new_event = (new GlfLightPlayerItem)()
            m_lights.Add name, new_event
            Set Lights = new_event
        End If
    End Property

    Public Property Get LightSeq() : LightSeq = m_lightSeq : End Property
    Public Property Let LightSeq(input) : m_lightSeq = input : End Property

    Public Function ToYaml()
        Dim yaml, key
        If UBound(m_lights.Keys) > -1 Then
            For Each key in m_lights.keys
                yaml = yaml & "    " & key & ": " & vbCrLf
                yaml = yaml & m_lights(key).ToYaml()
            Next
            yaml = yaml & vbCrLf
        End If
        ToYaml = yaml
    End Function

  Public default Function init()
        Set m_lights = CreateObject("Scripting.Dictionary")
        m_lightSeq = Array()
        Set Init = Me
  End Function

End Class

Class GlfLightPlayerItem
  Private m_light, m_color, m_fade, m_priority

    Public Property Get Light(): Light = m_light: End Property
    Public Property Let Light(input): m_light = input: End Property

    Public Property Get Color(): Color = m_color: End Property
    Public Property Let Color(input): m_color = input: End Property

    Public Property Get Fade(): Fade = m_fade: End Property
    Public Property Let Fade(input): m_fade = input: End Property

    Public Property Get Priority(): Priority = m_priority: End Property
    Public Property Let Priority(input): m_priority = input: End Property

    Public Function ToYaml()
        Dim yaml
        yaml = yaml & "      color: " & m_color & vbCrLf
        If Not IsEmpty(m_fade) Then
            yaml = yaml & "      fade: " & m_fade & vbCrLf
        End If
        If m_priority <> 0 Then
            yaml = yaml & "      priority: " & m_priority & vbCrLf
        End If
        ToYaml = yaml
    End Function

  Public default Function init()
        m_color = "ffffff"
        m_fade = Empty
        m_priority = 0
        Set Init = Me
  End Function

End Class

Function LightPlayerCallbackHandler(key, lights, mode, priority, play, speed, color_replacement)
    Dim shows_added
    Dim lightStack
    Dim lightParts, light
    If play = False Then
        For Each light in lights(0)
            lightParts = Split(light,"|")
            Set lightStack = glf_lightStacks(lightParts(0))
            If Not lightStack.IsEmpty() Then
                'glf_debugLog.WriteToLog "LightPlayer", "Removing Light " & lightParts(0)
                lightStack.PopByKey(mode & "_" & key)
                Dim show_key
                For Each show_key in glf_running_shows.Keys
                    If Left(show_key, Len("fade_" & mode & "_" & key & "_" & lightParts(0))) = "fade_" & mode & "_" & key & "_" & lightParts(0) Then
                        glf_running_shows(show_key).StopRunningShow()
                    End If
                Next
                If Not lightStack.IsEmpty() Then
                    ' Set the light to the next color on the stack
                    Dim nextColor
                    Set nextColor = lightStack.Peek()
                    Glf_SetLight lightParts(0), nextColor("Color")
                Else
                    ' Turn off the light since there's nothing on the stack
                    Glf_SetLight lightParts(0), "000000"
                End If
            End If
        Next
        LightPlayerCallbackHandler = Array(Null)
        Exit Function
        'glf_debugLog.WriteToLog "LightPlayer", "Removing Light Seq" & mode & "_" & key
    Else
        If UBound(lights) = -1 Then
            LightPlayerCallbackHandler = Array(Null)
            Exit Function
        End If
        If IsArray(lights) Then
            'glf_debugLog.WriteToLog "LightPlayer", "Adding Light Seq" & Join(lights) & ". Key:" & mode & "_" & key
        Else
            'glf_debugLog.WriteToLog "LightPlayer", "Lights not an array!?"
        End If
        'glf_debugLog.WriteToLog "LightPlayer", "Adding Light Seq" & Join(lights) & ". Key:" & mode & "_" & key
        Set shows_added = CreateObject("Scripting.Dictionary")
        For Each light in lights(0)
            lightParts = Split(light,"|")

            Set lightStack = glf_lightStacks(lightParts(0))
            Dim oldColor : oldColor = Empty
            Dim newColor : newColor = lightParts(2)
            If Not IsEmpty(color_replacement) Then
                newColor = color_replacement
            End If

            If lightStack.IsEmpty() Then
                oldColor = "000000"
                ' If stack is empty, push the color onto the stack and set the light color
                lightStack.Push mode & "_" & key, newColor, priority
                Glf_SetLight lightParts(0), newColor
            Else
                Dim current
                Set current = lightStack.Peek()
                If priority >= current("Priority") Then
                    oldColor = current("Color")
                    ' If the new priority is higher, push it onto the stack and change the light color
                    lightStack.Push mode & "_" & key, newColor, priority
                    Glf_SetLight lightParts(0), newColor
                Else
                    ' Otherwise, just push it onto the stack without changing the light color
                    lightStack.Push mode & "_" & key, newColor, priority
                End If
            End If

            If Not IsEmpty(oldColor) And Ubound(lightParts)=4 Then
                If lightParts(4) <> "" Then
                    'FadeMs
                    Dim cache_name, new_running_show,cached_show,show_settings, fade_seq
                    cache_name = lightParts(3)
                    fade_seq = Glf_FadeRGB(oldColor, newColor, lightParts(4))
                    'MsgBox cache_name
                    shows_added.Add cache_name, True

                    If glf_cached_shows.Exists(cache_name & "__-1") Then
                        Set show_settings = (new GlfShowPlayerItem)()
                        show_settings.Show = cache_name
                        show_settings.Loops = 1
                        show_settings.Speed = speed
                        show_settings.ColorLookup = fade_seq
                        Set new_running_show = (new GlfRunningShow)(cache_name, show_settings.Key, show_settings, priority+1, Null, Null)
                    End If
                End If
            End If
        Next
        LightPlayerCallbackHandler = Array(shows_added)
    End If
End Function

Function LightPlayerEventHandler(args)
    Dim ownProps : ownProps = args(0)
    Dim evt : evt = ownProps(0)
    Dim LightPlayer : Set LightPlayer = ownProps(1)
    Select Case evt
        Case "activate"
            LightPlayer.Activate
        Case "deactivate"
            LightPlayer.Deactivate
        Case "play"
            LightPlayer.Play ownProps(3), ownProps(2)
    End Select
    LightPlayerEventHandler = Null
End Function

Class GlfLightStack
    Private stack

    Public default Function Init()
        ReDim stack(-1)  ' Initialize an empty array
        Set Init = Me
    End Function

    Public Sub Push(key, color, priority)
        Dim found : found = False
        Dim i

        ' Check if the key already exists in the stack and update it
        For i = LBound(stack) To UBound(stack)
            If stack(i)("Key") = key Then
                ' Replace the existing item if the key matches
                Set stack(i) = CreateColorPriorityObject(key, color, priority)
                found = True
                Exit For
            End If
        Next

        If Not found Then
            ' Insert the new item into the array maintaining priority order
            ReDim Preserve stack(UBound(stack) + 1)
            Set stack(UBound(stack)) = CreateColorPriorityObject(key, color, priority)
            SortStackByPriority
        End If
    End Sub

    Public Function PopByKey(key)
        Dim i, removedItem, found
        found = False
        Set removedItem = Nothing

        ' Loop through the stack to find the item with the matching key
        For i = LBound(stack) To UBound(stack)
            If stack(i)("Key") = key Then
                ' Store the item to be removed
                Set removedItem = stack(i)
                found = True

                ' Shift all elements after the removed item to the left
                Dim j
                For j = i To UBound(stack) - 1
                    Set stack(j) = stack(j + 1)
                Next

                ' Resize the array to remove the last element
                ReDim Preserve stack(UBound(stack) - 1)
                Exit For
            End If
        Next

        ' Return the removed item (or Nothing if not found)
        If found Then
            Set PopByKey = removedItem
        Else
            Set PopByKey = Nothing
        End If
    End Function


    ' Get the current top color without popping it
    Public Function Peek()
        If UBound(stack) >= 0 Then
            Set Peek = stack(LBound(stack))
        Else
            Set Peek = Nothing
        End If
    End Function

    ' Check if the stack is empty
    Public Function IsEmpty()
        IsEmpty = (UBound(stack) < 0)
    End Function

    ' Create a color-priority object
    Private Function CreateColorPriorityObject(key, color, priority)
        Dim colorPriorityObject
        Set colorPriorityObject = CreateObject("Scripting.Dictionary")
        colorPriorityObject.Add "Key", key
        colorPriorityObject.Add "Color", color
        colorPriorityObject.Add "Priority", priority
        Set CreateColorPriorityObject = colorPriorityObject
    End Function

    ' Sort the stack by priority (descending)
    Private Sub SortStackByPriority()
        Dim i, j
        Dim temp
        For i = LBound(stack) To UBound(stack) - 1
            For j = i + 1 To UBound(stack)
                If stack(i)("Priority") < stack(j)("Priority") Then
                    ' Swap the elements
                    Set temp = stack(i)
                    Set stack(i) = stack(j)
                    Set stack(j) = temp
                End If
            Next
        Next
    End Sub

    Public Sub PrintStackOrder()
        Dim i
        Debug.Print "Stack Order:"
        For i = LBound(stack) To UBound(stack)
            Debug.Print "Key: " & stack(i)("Key") & ", Color: " & stack(i)("Color") & ", Priority: " & stack(i)("Priority")
        Next
    End Sub
End Class

Class GlfBaseModeDevice

    Private m_mode
    Private m_priority
    Private m_enable_events
    Private m_disable_events
    Private m_device
    Private m_parent
    Private m_debug

    Public Property Get EnableEvents(): Set EnableEvents = m_enable_events: End Property
    Public Property Let EnableEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_enable_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Get DisableEvents(): Set DisableEvents = m_disable_events: End Property
    Public Property Let DisableEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_disable_events.Add newEvent.Raw, newEvent
        Next
    End Property

    Public Property Get Mode(): Set Mode = m_mode: End Property

    Public Property Let Debug(value) : m_debug = value : End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

  Public default Function init(mode, device, parent)
        Set m_mode = mode
        m_priority = mode.Priority
        m_device = device
        Set m_parent = parent
        If mode.IsDebug = 1 Then
            m_debug = True
        End If

        Set m_enable_events = CreateObject("Scripting.Dictionary")
        Set m_disable_events = CreateObject("Scripting.Dictionary")

        AddPinEventListener m_mode.Name & "_starting", m_device & "_" & m_parent.Name & "_activate", "BaseModeDeviceEventHandler", m_priority+1, Array("activate", Me)
        AddPinEventListener m_mode.Name & "_stopping", m_device & "_" & m_parent.Name & "_deactivate", "BaseModeDeviceEventHandler", m_priority-1, Array("deactivate", Me)
        Set Init = Me
  End Function

    Public Sub Activate()
        Log "Activating"
        Dim evt
        For Each evt In m_enable_events.Keys()
            AddPinEventListener m_enable_events(evt).EventName, m_mode.Name & m_device & "_" & m_parent.Name & "_enable", "BaseModeDeviceEventHandler", m_priority+m_enable_events(evt).Priority, Array("enable", m_parent, m_enable_events(evt))
        Next
        For Each evt In m_disable_events.Keys()
            AddPinEventListener m_disable_events(evt).EventName, m_mode.Name & m_device & "_" & m_parent.Name & "_disable", "BaseModeDeviceEventHandler", m_priority+m_disable_events(evt).Priority, Array("disable", m_parent, m_disable_events(evt))
        Next
        m_parent.Activate
    End Sub

    Public Sub Deactivate()
        Log "Deactivating"
        Dim evt
        For Each evt In m_enable_events.Keys()
            RemovePinEventListener m_enable_events(evt).EventName, m_mode.Name & m_device & "_" & m_parent.Name & "_enable"
        Next
        For Each evt In m_disable_events.Keys()
            RemovePinEventListener m_disable_events(evt).EventName, m_mode.Name & m_device & "_" & m_parent.Name & "_disable"
        Next
        m_parent.Deactivate
    End Sub

    Public Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_mode.Name & "_" & m_device & "_" & m_parent.Name, message
        End If
    End Sub
End Class


Function BaseModeDeviceEventHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim device : Set device = ownProps(1)
    Dim glfEvent
    Select Case evt
        Case "activate"
            device.Activate
        Case "deactivate"
            device.Deactivate
        Case "enable"
            Set glfEvent = ownProps(2)
            If glfEvent.Evaluate() = False Then
                Exit Function
            End If
            device.Enable
        Case "disable"
            Set glfEvent = ownProps(2)
            If glfEvent.Evaluate() = False Then
                Exit Function
            End If
            device.Disable
    End Select
    If IsObject(args(1)) Then
        Set BaseModeDeviceEventHandler = kwargs
    Else
        BaseModeDeviceEventHandler = kwargs
    End If
End Function

Class Mode

    Private m_name
    Private m_modename
    Private m_start_events
    Private m_stop_events
    private m_priority
    Private m_debug
    Private m_started
    Private m_ballsaves
    Private m_counters
    Private m_multiball_locks
    Private m_multiballs
    Private m_shots
    Private m_shot_groups
    Private m_ballholds
    Private m_timers
    Private m_lightplayer
    Private m_segment_display_player
    Private m_showplayer
    Private m_variableplayer
    Private m_eventplayer
    Private m_queueEventplayer
    Private m_queueRelayPlayer
    Private m_random_event_player
    Private m_sound_player
    Private m_dof_player
    Private m_slide_player
    Private m_widget_player
    Private m_shot_profiles
    Private m_sequence_shots
    Private m_state_machines
    Private m_extra_balls
    Private m_combo_switches
    Private m_timed_switches
    Private m_tilt
    Private m_high_score
    Private m_use_wait_queue

    Public Property Get Name(): Name = m_name : End Property
    Public Property Get ModeName(): ModeName = m_modename : End Property
    Public Property Get GetValue(value)
        Select Case value
            Case "active":
                If m_started Then
                    GetValue = True
                Else
                    GetValue = False
                End If
        End Select
    End Property
    Public Property Get Priority(): Priority = m_priority: End Property
    Public Property Get Status()
        If m_started Then
            Status = "started"
        Else
            Status = "stopped"
        End If
    End Property
    Public Property Get LightPlayer()
        If IsNull(m_lightplayer) Then
            Set m_lightplayer = (new GlfLightPlayer)(Me)
        End If
        Set LightPlayer = m_lightplayer
    End Property
    Public Property Get ShowPlayer()
        If IsNull(m_showplayer) Then
            Set m_showplayer = (new GlfShowPlayer)(Me)
        End If
        Set ShowPlayer = m_showplayer
    End Property
    Public Property Get SegmentDisplayPlayer()
        If IsNull(m_segment_display_player) Then
            Set m_segment_display_player = (new GlfSegmentDisplayPlayer)(Me)
        End If
        Set SegmentDisplayPlayer = m_segment_display_player
    End Property
    Public Property Get EventPlayer() : Set EventPlayer = m_eventplayer: End Property
    Public Property Get QueueEventPlayer() : Set QueueEventPlayer = m_queueEventplayer: End Property
    Public Property Get QueueRelayPlayer() : Set QueueRelayPlayer = m_queueRelayPlayer: End Property
    Public Property Get RandomEventPlayer() : Set RandomEventPlayer = m_random_event_player : End Property
    Public Property Get VariablePlayer(): Set VariablePlayer = m_variableplayer: End Property
    Public Property Get SoundPlayer() : Set SoundPlayer = m_sound_player : End Property
    Public Property Get DOFPlayer() : Set DOFPlayer = m_dof_player : End Property
    Public Property Get SlidePlayer() : Set SlidePlayer = m_slide_player : End Property
    Public Property Get WidgetPlayer() : Set WidgetPlayer = m_widget_player : End Property

    Public Property Get ShotProfiles(name)
        If m_shot_profiles.Exists(name) Then
            Set ShotProfiles = m_shot_profiles(name)
        Else
            Dim new_shotprofile : Set new_shotprofile = (new GlfShotProfile)(name)
            m_shot_profiles.Add name, new_shotprofile
            Glf_ShotProfiles.Add name, new_shotprofile
            Set ShotProfiles = new_shotprofile
        End If
    End Property

    Public Property Get BallSavesItems() : BallSavesItems = m_ballsaves.Items() : End Property
    Public Property Get BallSaves(name)
        If m_ballsaves.Exists(name) Then
            Set BallSaves = m_ballsaves(name)
        Else
            Dim new_ballsave : Set new_ballsave = (new BallSave)(name, Me)
            m_ballsaves.Add name, new_ballsave
            Set BallSaves = new_ballsave
        End If
    End Property

    Public Property Get TimersItems() : TimersItems = m_timers.Items() : End Property
    Public Property Get Timers(name)
        If m_timers.Exists(name) Then
            Set Timers = m_timers(name)
        Else
            Dim new_timer : Set new_timer = (new GlfTimer)(name, Me)
            m_timers.Add name, new_timer
            Set Timers = new_timer
        End If
    End Property

    Public Property Get CountersItems() : CountersItems = m_counters.Items() : End Property
    Public Property Get Counters(name)
        If m_counters.Exists(name) Then
            Set Counters = m_counters(name)
        Else
            Dim new_counter : Set new_counter = (new GlfCounter)(name, Me)
            m_counters.Add name, new_counter
            Set Counters = new_counter
        End If
    End Property

    Public Property Get MultiballLocksItems() : MultiballLocksItems = m_multiball_locks.Items() : End Property
    Public Property Get MultiballLocks(name)
        If m_multiball_locks.Exists(name) Then
            Set MultiballLocks = m_multiball_locks(name)
        Else
            Dim new_multiball_lock : Set new_multiball_lock = (new GlfMultiballLocks)(name, Me)
            m_multiball_locks.Add name, new_multiball_lock
            Set MultiballLocks = new_multiball_lock
        End If
    End Property

    Public Property Get MultiballsItems() : MultiballsItems = m_multiballs.Items() : End Property
    Public Property Get Multiballs(name)
        If m_multiballs.Exists(name) Then
            Set Multiballs = m_multiballs(name)
        Else
            Dim new_multiball : Set new_multiball = (new GlfMultiballs)(name, Me)
            m_multiballs.Add name, new_multiball
            Set Multiballs = new_multiball
        End If
    End Property

    Public Property Get SequenceShotsItems() : SequenceShotsItems = m_sequence_shots.Items() : End Property
    Public Property Get SequenceShots(name)
        If m_sequence_shots.Exists(name) Then
            Set SequenceShots = m_sequence_shots(name)
        Else
            Dim new_sequence_shot : Set new_sequence_shot = (new GlfSequenceShots)(name, Me)
            m_sequence_shots.Add name, new_sequence_shot
            Set SequenceShots = new_sequence_shot
        End If
    End Property

    Public Property Get ExtraBallsItems() : ExtraBallsItems = m_extra_balls.Items() : End Property
    Public Property Get ExtraBalls(name)
        If m_extra_balls.Exists(name) Then
            Set ExtraBalls = m_extra_balls(name)
        Else
            Dim new_extra_ball : Set new_extra_ball = (new GlfExtraBall)(name, Me)
            m_extra_balls.Add name, new_extra_ball
            Set ExtraBalls = new_extra_ball
        End If
    End Property
    Public Property Get ComboSwitchesItems() : ComboSwitchesItems = m_combo_switches.Items() : End Property
    Public Property Get ComboSwitches(name)
        If m_combo_switches.Exists(name) Then
            Set ComboSwitches = m_combo_switches(name)
        Else
            Dim new_combo_switch : Set new_combo_switch = (new GlfComboSwitches)(name, Me)
            m_combo_switches.Add name, new_combo_switch
            Set ComboSwitches = new_combo_switch
        End If
    End Property
    Public Property Get TimedSwitchesItems() : TimedSwitchesItems = m_timed_switches.Items() : End Property
        Public Property Get TimedSwitches(name)
            If m_timed_switches.Exists(name) Then
                Set TimedSwitches = m_timed_switches(name)
            Else
                Dim new_timed_switch : Set new_timed_switch = (new GlfTimedSwitches)(name, Me)
                m_timed_switches.Add name, new_timed_switch
                Set TimedSwitches = new_timed_switch
            End If
        End Property
    Public Property Get Tilt()
        If Not IsNull(m_tilt) Then
            Set Tilt = m_tilt
        Else
            Set m_tilt = (new GlfTilt)(Me)
            Set Tilt = m_tilt
        End If
    End Property

    Public Property Get TiltConfig()
        If Not IsNull(m_tilt) Then
            Set TiltConfig = m_tilt
        Else
            TiltConfig = Null
        End If
    End Property

    Public Property Set HighScore(value) : Set m_high_score = value : End Property
    Public Property Get HighScore()
        If Not IsNull(m_high_score) Then
            Set HighScore = m_high_score
        Else
            Set m_high_score = (new GlfHighScore)(Me)
            Set HighScore = m_high_score
        End If
    End Property

    Public Property Get StateMachines(name)
        If m_state_machines.Exists(name) Then
            Set StateMachines = m_state_machines(name)
        Else
            Dim new_state_machine : Set new_state_machine = (new GlfStateMachine)(name, Me)
            m_state_machines.Add name, new_state_machine
            Set StateMachines = new_state_machine
        End If
    End Property
    Public Property Get ModeStateMachines(): ModeStateMachines = m_state_machines.Items(): End Property

    Public Property Get ModeShots(): ModeShots = m_shots.Items(): End Property
    Public Property Get Shots(name)
        If m_shots.Exists(name) Then
            Set Shots = m_shots(name)
        Else
            Dim new_shot : Set new_shot = (new GlfShot)(name, Me)
            m_shots.Add name, new_shot
            Set Shots = new_shot
        End If
    End Property

    Public Property Get ShotGroupsItems() : ShotGroupsItems = m_shot_groups.Items() : End Property
    Public Property Get ShotGroups(name)
        If m_shot_groups.Exists(name) Then
            Set ShotGroups = m_shot_groups(name)
        Else
            Dim new_shot_group : Set new_shot_group = (new GlfShotGroup)(name, Me)
            m_shot_groups.Add name, new_shot_group
            Set ShotGroups = new_shot_group
        End If
    End Property

    Public Property Get BallHoldsItems() : BallHoldsItems = m_ballholds.Items() : End Property
    Public Property Get BallHolds(name)
        If m_ballholds.Exists(name) Then
            Set BallHolds = m_shots(name)
        Else
            Dim new_ballhold : Set new_ballhold = (new GlfBallHold)(name, Me)
            m_ballholds.Add name, new_ballhold
            Set BallHolds = new_ballhold
        End If
    End Property

    Public Property Let StartEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_start_events.Add newEvent.Raw, newEvent
            AddPinEventListener newEvent.EventName, m_name & "_start", "ModeEventHandler", m_priority+newEvent.Priority, Array("start", Me, newEvent)
        Next
    End Property

    Public Property Let StopEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_stop_events.Add newEvent.Raw, newEvent
            AddPinEventListener newEvent.EventName, m_name & "_stop", "ModeEventHandler", m_priority+newEvent.Priority+1, Array("stop", Me, newEvent)
        Next
    End Property

    Public Property Get UseWaitQueue(): UseWaitQueue = m_use_wait_queue: End Property
    Public Property Let UseWaitQueue(input): m_use_wait_queue = input: End Property

    Public Property Get IsDebug()
        If m_debug = True Then
            IsDebug = 1
        Else
            IsDebug = 0
        End If
    End Property
    Public Property Let Debug(value)
        m_debug = value
        Dim config_item
        For Each config_item in m_ballsaves.Items()
            config_item.Debug = value
        Next
        For Each config_item in m_counters.Items()
            config_item.Debug = value
        Next
        For Each config_item in m_timers.Items()
            config_item.Debug = value
        Next
        For Each config_item in m_multiball_locks.Items()
            config_item.Debug = value
        Next
        For Each config_item in m_multiballs.Items()
            config_item.Debug = value
        Next
        For Each config_item in m_shots.Items()
            config_item.Debug = value
        Next
        For Each config_item in m_shot_groups.Items()
            config_item.Debug = value
        Next
        For Each config_item in m_ballholds.Items()
            config_item.Debug = value
        Next
        For Each config_item in m_sequence_shots.Items()
            config_item.Debug = value
        Next
        For Each config_item in m_state_machines.Items()
            config_item.Debug = value
        Next
        For Each config_item in m_extra_balls.Items()
            config_item.Debug = value
        Next
        For Each config_item in m_combo_switches.Items()
            config_item.Debug = value
        Next
        For Each config_item in m_timed_switches.Items()
            config_item.Debug = value
        Next
        If Not IsNull(m_tilt) Then
            m_tilt.Debug = value
        End If
        If Not IsNull(m_lightplayer) Then
            m_lightplayer.Debug = value
        End If
        If Not IsNull(m_eventplayer) Then
            m_eventplayer.Debug = value
        End If
        If Not IsNull(m_queueEventplayer) Then
            m_queueEventplayer.Debug = value
        End If
        If Not IsNull(m_queueRelayPlayer) Then
            m_queueRelayPlayer.Debug = value
        End If
        If Not IsNull(m_random_event_player) Then
            m_random_event_player.Debug = value
        End If
        If Not IsNull(m_sound_player) Then
            m_sound_player.Debug = value
        End If
        If Not IsNull(m_dof_player) Then
            m_dof_player.Debug = value
        End If
        If Not IsNull(m_slide_player) Then
            m_slide_player.Debug = value
        End If
        If Not IsNull(m_widget_player) Then
            m_widget_player.Debug = value
        End If
        If Not IsNull(m_showplayer) Then
            m_showplayer.Debug = value
        End If
        If Not IsNull(m_segment_display_player) Then
            m_segment_display_player.Debug = value
        End If
        If Not IsNull(m_variableplayer) Then
            m_variableplayer.Debug = value
        End If
        Glf_MonitorModeUpdate Me
    End Property

  Public default Function init(name, priority)
        m_name = "mode_"&name
        m_modename = name
        m_priority = priority
        m_started = False
        Set m_start_events = CreateObject("Scripting.Dictionary")
        Set m_stop_events = CreateObject("Scripting.Dictionary")
        Set m_ballsaves = CreateObject("Scripting.Dictionary")
        Set m_counters = CreateObject("Scripting.Dictionary")
        Set m_timers = CreateObject("Scripting.Dictionary")
        Set m_multiball_locks = CreateObject("Scripting.Dictionary")
        Set m_multiballs = CreateObject("Scripting.Dictionary")
        Set m_shots = CreateObject("Scripting.Dictionary")
        Set m_shot_groups = CreateObject("Scripting.Dictionary")
        Set m_ballholds = CreateObject("Scripting.Dictionary")
        Set m_shot_profiles = CreateObject("Scripting.Dictionary")
        Set m_sequence_shots = CreateObject("Scripting.Dictionary")
        Set m_state_machines = CreateObject("Scripting.Dictionary")
        Set m_extra_balls = CreateObject("Scripting.Dictionary")
        Set m_combo_switches = CreateObject("Scripting.Dictionary")
        Set m_timed_switches = CreateObject("Scripting.Dictionary")

        m_use_wait_queue = False
        m_lightplayer = Null
        m_tilt = Null
        m_showplayer = Null
        m_segment_display_player = Null
        m_high_score = Null
        Set m_eventplayer = (new GlfEventPlayer)(Me)
        Set m_queueEventplayer = (new GlfQueueEventPlayer)(Me)
        Set m_queueRelayPlayer = (new GlfQueueRelayPlayer)(Me)
        Set m_random_event_player = (new GlfRandomEventPlayer)(Me)
        Set m_sound_player = (new GlfSoundPlayer)(Me)
        Set m_dof_player = (new GlfDofPlayer)(Me)
        Set m_slide_player = (new GlfSlidePlayer)(Me)
        Set m_widget_player = (new GlfWidgetPlayer)(Me)
        Set m_variableplayer = (new GlfVariablePlayer)(Me)
        Glf_MonitorModeUpdate Me
        AddPinEventListener m_name & "_starting", m_name & "_starting_end", "ModeEventHandler", -99, Array("started", Me, "")
        AddPinEventListener m_name & "_stopping", m_name & "_stopping_end", "ModeEventHandler", -99, Array("stopped", Me, "")
        Set Init = Me
  End Function

    Public Sub StartMode()
        Log "Starting"
        m_started=True
        If useBcp Then
            bcpController.ModeStart m_modename, m_priority
        End If
        DispatchQueuePinEvent m_name & "_starting", Null
    End Sub

    Public Sub StopMode()
        If m_started = True Then
            m_started = False
            Log "Stopping"
            If useBcp Then
                bcpController.SlidesClear(m_modename)
                bcpController.ModeStop(m_modename)
            End If
            DispatchQueuePinEvent m_name & "_stopping", Null
        End If
    End Sub

    Public Sub Started()
        DispatchPinEvent m_name & "_started", Null
        Glf_MonitorModeUpdate Me
        glf_running_modes = glf_running_modes & "["""&m_modename&""", " & m_priority & "],"
        Log "Started"
    End Sub

    Public Sub Stopped()
        'MsgBox m_name & "Stopped"
        DispatchPinEvent m_name & "_stopped", Null
        Glf_MonitorModeUpdate Me
        glf_running_modes = Replace(glf_running_modes, "["""&m_modename&""", " & m_priority & "],", "")
        Log "Stopped"
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

    Public Function ToYaml()
        dim yaml, child,x, key

        yaml = "#config_version=6" & vbCrLf & vbCrLf

        yaml = yaml & "mode:" & vbCrLf

        If UBound(m_start_events.Keys) > -1 Then
            yaml = yaml & "  start_events: "
            x=0
            For Each key in m_start_events.keys
                yaml = yaml & m_start_events(key).Raw
                If x <> UBound(m_start_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If
        If UBound(m_stop_events.Keys) > -1 Then
            yaml = yaml & "  stop_events: "
            x=0
            For Each key in m_stop_events.keys
                yaml = yaml & m_stop_events(key).Raw
                If x <> UBound(m_stop_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If
        yaml = yaml & "  priority: " & m_priority & vbCrLf

        If UBound(m_ballsaves.Keys)>-1 Then
            yaml = yaml & vbCrLf
            yaml = yaml & "ball_saves: " & vbCrLf
            For Each child in m_ballsaves.Keys
                yaml = yaml & m_ballsaves(child).ToYaml
            Next
        End If

        If UBound(m_combo_switches.Keys)>-1 Then
            yaml = yaml & vbCrLf
            yaml = yaml & "combo_switches: " & vbCrLf
            For Each child in m_combo_switches.Keys
                yaml = yaml & m_combo_switches(child).ToYaml
            Next
        End If

        If UBound(m_sequence_shots.Keys)>-1 Then
            yaml = yaml & vbCrLf
            yaml = yaml & "sequence_shots: " & vbCrLf
            For Each child in m_sequence_shots.Keys
                yaml = yaml & m_sequence_shots(child).ToYaml
            Next
        End If

        If UBound(m_shot_profiles.Keys)>-1 Then
            yaml = yaml & vbCrLf
            yaml = yaml & "shot_profiles: " & vbCrLf
            For Each child in m_shot_profiles.Keys
                yaml = yaml & m_shot_profiles(child).ToYaml
            Next
        End If

        If UBound(m_shots.Keys)>-1 Then
            yaml = yaml & vbCrLf
            yaml = yaml & "shots: " & vbCrLf
            For Each child in m_shots.Keys
                yaml = yaml & m_shots(child).ToYaml
            Next
        End If

        If UBound(m_shot_groups.Keys)>-1 Then
            yaml = yaml & vbCrLf
            yaml = yaml & "shot_groups: " & vbCrLf
            For Each child in m_shot_groups.Keys
                yaml = yaml & m_shot_groups(child).ToYaml
            Next
        End If

        If UBound(m_eventplayer.Events.Keys)>-1 Then
            yaml = yaml & vbCrLf
            yaml = yaml & "event_player: " & vbCrLf
            yaml = yaml & m_eventplayer.ToYaml()
        End If

        If Not IsNull(m_showPlayer) Then
            If UBound(m_showplayer.EventShows)>-1 Then
                yaml = yaml & vbCrLf
                yaml = yaml & "show_player: " & vbCrLf
                yaml = yaml & m_showplayer.ToYaml()
            End If
        End If

        If Not IsNull(m_lightplayer) Then
            If UBound(m_lightplayer.EventNames)>-1 Then
                yaml = yaml & vbCrLf
                yaml = yaml & "light_player: " & vbCrLf
                yaml = yaml & m_lightplayer.ToYaml()
            End If
        End If

        If Not IsNull(m_slide_player) Then
            If UBound(m_slide_player.EventNames)>-1 Then
                yaml = yaml & vbCrLf
                yaml = yaml & "slide_player: " & vbCrLf
                yaml = yaml & m_slide_player.ToYaml()
            End If
        End If

        If Not IsNull(m_widget_player) Then
            If UBound(m_widget_player.EventNames)>-1 Then
                yaml = yaml & vbCrLf
                yaml = yaml & "widget_player: " & vbCrLf
                yaml = yaml & m_widget_player.ToYaml()
            End If
        End If

        If Not IsNull(m_variableplayer) Then
            If UBound(m_variableplayer.EventNames)>-1 Then
                yaml = yaml & vbCrLf
                yaml = yaml & "variable_player: " & vbCrLf
                yaml = yaml & m_variableplayer.ToYaml()
            End If
        End If

        If Not IsNull(m_random_event_player) Then
            If UBound(m_random_event_player.EventNames)>-1 Then
                yaml = yaml & vbCrLf
                yaml = yaml & "random_event_player: " & vbCrLf
                yaml = yaml & m_random_event_player.ToYaml()
            End If
        End If

        If Not IsNull(m_segment_display_player) Then
            If UBound(m_segment_display_player.EventNames)>-1 Then
                yaml = yaml & vbCrLf
                yaml = yaml & "segment_display_player: " & vbCrLf
                For Each child in m_segment_display_player.EventNames
                    yaml = yaml & m_segment_display_player.ToYaml()
                Next
            End If
        End If

        If UBound(m_ballholds.Keys)>-1 Then
            yaml = yaml & vbCrLf
            yaml = yaml & "ball_holds: " & vbCrLf
            For Each child in m_ballholds.Keys
                yaml = yaml & m_ballholds(child).ToYaml
            Next
        End If
        yaml = yaml & vbCrLf


        Dim fso, modesFolder, TxtFileStream
        Set fso = CreateObject("Scripting.FileSystemObject")
        modesFolder = "glf_mpf\modes\" & Replace(m_name, "mode_", "") & "\config"

        If Not fso.FolderExists("glf_mpf") Then
            fso.CreateFolder "glf_mpf"
        End If

        Dim currentFolder
        Dim folderParts
        Dim i

        ' Split the path into parts
        folderParts = Split(modesFolder, "\")

        ' Initialize the current folder as the root
        currentFolder = folderParts(0)

        ' Iterate over each part of the path and create folders as needed
        For i = 1 To UBound(folderParts)
            currentFolder = currentFolder & "\" & folderParts(i)
            If Not fso.FolderExists(currentFolder) Then
                fso.CreateFolder(currentFolder)
            End If
        Next



        Set TxtFileStream = fso.OpenTextFile(modesFolder & "\" & Replace(m_name, "mode_", "") & ".yaml", 2, True)
        TxtFileStream.WriteLine yaml
        TxtFileStream.Close

        ToYaml = yaml
    End Function
End Class

Function ModeEventHandler(args)

    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim mode : Set mode = ownProps(1)
    Dim glfEvent
    Select Case evt
        Case "start"
            Set glfEvent = ownProps(2)
            If glfEvent.Evaluate() = False Then
                If IsObject(args(1)) Then
                    Set ModeEventHandler = kwargs
                Else
                    ModeEventHandler = kwargs
                End If
                Exit Function
            End If
            mode.StartMode
            If mode.UseWaitQueue = True Then
                kwargs.Add "wait_for", mode.Name & "_stopped"
            End If
        Case "stop"
            Set glfEvent = ownProps(2)
            If glfEvent.Evaluate() = False Then
                If IsObject(args(1)) Then
                    Set ModeEventHandler = kwargs
                Else
                    ModeEventHandler = kwargs
                End If
                Exit Function
            End If
            mode.StopMode
        Case "started"
            mode.Started
        Case "stopped"
            mode.Stopped
    End Select
    If IsObject(args(1)) Then
        Set ModeEventHandler = kwargs
    Else
        ModeEventHandler = kwargs
    End If
End Function

Class GlfMultiballLocks

    Private m_name
    Private m_lock_devices
    Private m_priority
    Private m_mode
    Private m_base_device
    Private m_enable_events
    Private m_disable_events
    Private m_balls_to_lock
    Private m_balls_locked
    Private m_balls_to_replace
    Private m_lock_events
    Private m_reset_events
    Private m_enabled
    Private m_debug

    Public Property Get Name(): Name = m_name: End Property
    Public Property Get GetValue(value)
        Select Case value
            Case "enabled":
                GetValue = m_enabled
            Case "locked_balls":
                GetValue = m_balls_locked
        End Select
    End Property
    Public Property Get LockDevices() : LockDevices = m_lock_devices : End Property
    Public Property Let LockDevices(value) : m_lock_devices = value : End Property
    Public Property Let EnableEvents(value) : m_base_device.EnableEvents = value : End Property
    Public Property Let DisableEvents(value) : m_base_device.DisableEvents = value : End Property
    Public Property Let BallsToLock(value) : m_balls_to_lock = value : End Property
    Public Property Let LockEvents(value) : m_lock_events = value : End Property
    Public Property Let ResetEvents(value) : m_reset_events = value : End Property
    Public Property Let BallsToReplace(value) : m_balls_to_replace = value : End Property
    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

  Public default Function init(name, mode)
        m_name = "multiball_lock_" & name
        m_mode = mode.Name
        m_priority = mode.Priority
        m_lock_events = Array()
        m_reset_events = Array()
        m_lock_devices = Array()
        m_balls_to_lock = 0
        m_balls_to_replace = -1
        m_enabled = False
        m_balls_locked = 0
        Set m_base_device = (new GlfBaseModeDevice)(mode, "multiball_lock", Me)
        glf_multiball_locks.Add name, Me
        Set Init = Me
  End Function

    Public Sub Activate()
        If UBound(m_base_device.EnableEvents.Keys()) = -1 Then
            Enable()
        End If
    End Sub

    Public Sub Deactivate()
        Disable()
    End Sub

    Public Sub Enable()
        Log "Enabling"
        m_enabled = True
        Dim lock_device
        For Each lock_device in m_lock_devices
            AddPinEventListener "balldevice_" & lock_device & "_ball_enter", m_mode & "_" & name & "_lock", "MultiballLocksHandler", m_priority, Array("lock", me, lock_device)
        Next
        Dim evt
        For Each evt in m_lock_events
            AddPinEventListener evt, m_name & "_ball_locked", "MultiballLocksHandler", m_priority, Array("virtual_lock", Me, Null)
        Next
        For Each evt in m_reset_events
            AddPinEventListener evt, m_name & "_reset", "MultiballLocksHandler", m_priority, Array("reset", Me)
        Next
    End Sub

    Public Sub Disable()
        Log "Disabling"
        m_enabled = False
        Dim lock_device
        For Each lock_device in m_lock_devices
            RemovePinEventListener "balldevice_" & lock_device & "_ball_enter", m_mode & "_" & name & "_lock"
        Next
        Dim evt
        For Each evt in m_lock_events
            RemovePinEventListener evt, m_name & "_ball_locked"
        Next
        For Each evt in m_reset_events
            RemovePinEventListener evt, m_name & "_reset"
        Next
    End Sub

    Public Function Lock(device, unclaimed_balls)
        Log "Locking for device: " & device & ". Unclaimed Balls: " & unclaimed_balls
        If unclaimed_balls <= 0 Then
            Lock = unclaimed_balls
            Exit Function
        End If

        Dim balls_locked
        If GetPlayerState(m_name & "_balls_locked") = False Then
            balls_locked = 1
        Else
            balls_locked = GetPlayerState(m_name & "_balls_locked") + 1
        End If
        If balls_locked > m_balls_to_lock Then
            Log "Cannot lock balls. Lock is full."
            Lock = unclaimed_balls
            Exit Function
        End If

        SetPlayerState m_name & "_balls_locked", balls_locked


        If Not IsNull(device) Then

            If glf_ball_devices(device).Balls() > balls_locked Then
                glf_ball_devices(device).Eject()
            Else
                If m_balls_to_replace = -1 Or balls_locked <= m_balls_to_replace Then
                    ' glf_BIP = glf_BIP - 1
                    SetDelay m_name & "_queued_release", "MultiballLocksHandler" , Array(Array("queue_release", Me),Null), 1000
                End If
            End If
        End If

        DispatchPinEvent m_name & "_locked_ball", balls_locked

        If balls_locked = m_balls_to_lock Then
            DispatchPinEvent m_name & "_full", balls_locked
        End If

        Lock = unclaimed_balls - 1
    End Function

    Public Sub Reset
        Log "Resetting multiball lock count"
        SetPlayerState m_name & "_balls_locked", 0
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

End Class

Function MultiballLocksHandler(args)

    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim multiball : Set multiball = ownProps(1)
    Select Case evt
        Case "activate"
            multiball.Activate
        Case "deactivate"
            multiball.Deactivate
        Case "enable"
            multiball.Enable
        Case "disable"
            multiball.Disable
        Case "lock"
            kwargs = multiball.Lock(ownProps(2), kwargs)
        Case "virtual_lock"
            multiball.Lock Null, 1
        Case "reset"
            multiball.Reset
        Case "queue_release"
            If glf_plunger.HasBall = False And ballInReleasePostion = True And glf_plunger.IncomingBalls = 0  Then
                Glf_ReleaseBall(Null)
                SetDelay multiball.Name&"_auto_launch", "MultiballLocksHandler" , Array(Array("auto_launch", multiball),Null), 500
            Else
                SetDelay multiball.Name&"_queued_release", "MultiballLocksHandler" , Array(Array("queue_release", multiball), Null), 1000
            End If
        Case "auto_launch"
            If glf_plunger.HasBall = True Then
                glf_plunger.Eject
            Else
                SetDelay multiball.Name&"_auto_launch", "MultiballLocksHandler" , Array(Array("auto_launch", multiball), Null), 500
            End If
    End Select
    If IsObject(args(1)) Then
        Set MultiballLocksHandler = kwargs
    Else
        MultiballLocksHandler = kwargs
    End If
End Function
Class GlfMultiballs

    Private m_name
    Private m_configname
    Private m_mode
    Private m_priority
    Private m_base_device
    Private m_ball_count
    Private m_ball_locks
    Private m_add_a_ball_events
    Private m_add_a_ball_grace_period
    Private m_add_a_ball_hurry_up_time
    Private m_add_a_ball_shoot_again
    Private m_ball_count_type
    Private m_disable_events
    Private m_enable_events
    Private m_grace_period
    Private m_grace_period_enabled
    Private m_hurry_up
    Private m_hurry_up_enabled
    Private m_replace_balls_in_play
    Private m_reset_events
    Private m_shoot_again
    Private m_source_playfield
    Private m_start_events
    Private m_stop_events
    Private m_balls_added_live
    Private m_balls_live_target
    Private m_enabled
    Private m_shoot_again_enabled
    Private m_queued_balls
    Private m_debug

    Public Property Get Name(): Name = m_name: End Property
    Public Property Get GetValue(value)
        Select Case value
            Case "enabled":
                GetValue = m_enabled
        End Select
    End Property

    Public Property Let BallCount(value): Set m_ball_count = CreateGlfInput(value): End Property
    Public Property Let AddABallEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_add_a_ball_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let AddABallGracePeriod(value): Set m_add_a_ball_grace_period = CreateGlfInput(value): End Property
    Public Property Let AddABallHurryUpTime(value): Set m_add_a_ball_hurry_up_time = CreateGlfInput(value): End Property
    Public Property Let AddABallShootAgain(value): Set m_add_a_ball_shoot_again = CreateGlfInput(value): End Property
    Public Property Let BallCountType(value): m_ball_count_type = value: End Property
    Public Property Let BallLocks(value): m_ball_locks = value: End Property
    Public Property Let EnableEvents(value) : m_base_device.EnableEvents = value : End Property
    Public Property Let DisableEvents(value) : m_base_device.DisableEvents = value : End Property
    Public Property Let GracePeriod(value): Set m_grace_period = CreateGlfInput(value): End Property
    Public Property Let HurryUp(value): Set m_hurry_up = CreateGlfInput(value): End Property
    Public Property Let ReplaceBallsInPlay(value): m_replace_balls_in_play = value: End Property
    Public Property Let ResetEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_reset_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let ShootAgain(value): Set m_shoot_again = CreateGlfInput(value): End Property
    Public Property Let StartEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_start_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let StopEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_stop_events.Add newEvent.Raw, newEvent
        Next
    End Property

    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

    Public default Function init(name, mode)
        m_name = "multiball_" & name
        m_configname = name
        m_mode = mode.Name
        m_priority = mode.Priority
        Set m_ball_count = CreateGlfInput(0)
        Set m_add_a_ball_events = CreateObject("Scripting.Dictionary")
        Set m_add_a_ball_grace_period = CreateGlfInput(0)
        Set m_add_a_ball_hurry_up_time = CreateGlfInput(0)
        Set m_add_a_ball_shoot_again = CreateGlfInput(5000)
        m_ball_count_type = "total"
        m_ball_locks = Array()
        Set m_grace_period = CreateGlfInput(0)
        Set m_hurry_up = CreateGlfInput(0)
        m_replace_balls_in_play = False
        Set m_shoot_again = CreateGlfInput(10000)
        Set m_reset_events = CreateObject("Scripting.Dictionary")
        Set m_start_events = CreateObject("Scripting.Dictionary")
        Set m_stop_events = CreateObject("Scripting.Dictionary")
        m_replace_balls_in_play = False
        m_balls_added_live = 0
        m_balls_live_target = 0
        m_queued_balls = 0
        m_enabled = False
        m_shoot_again_enabled = False
        m_grace_period_enabled = False
        m_hurry_up_enabled = False
        Set m_base_device = (new GlfBaseModeDevice)(mode, "multiball", Me)
        glf_multiballs.Add name, Me
        Set Init = Me
    End Function

    Public Sub Activate()
        If UBound(m_base_device.EnableEvents.Keys()) = -1 Then
            Enable()
        End If
    End Sub

    Public Sub Deactivate()
        Disable()
    End Sub

    Public Sub Enable()
        Log "Enabling " & m_name
        m_enabled = True
        Dim evt
        For Each evt in m_start_events.Keys
            AddPinEventListener m_start_events(evt).EventName, m_name & "_" & evt & "_start", "MultiballsHandler", m_priority+m_start_events(evt).Priority, Array("start", Me, m_start_events(evt))
        Next
        For Each evt in m_reset_events.Keys
            AddPinEventListener m_reset_events(evt).EventName, m_name & "_" & evt & "_reset", "MultiballsHandler", m_priority, Array("reset", Me, m_reset_events(evt))
        Next
        For Each evt in m_add_a_ball_events.Keys
            AddPinEventListener m_add_a_ball_events(evt).EventName, m_name & "_" & evt & "_add_a_ball", "MultiballsHandler", m_priority, Array("add_a_ball", Me, m_add_a_ball_events(evt))
        Next
        For Each evt in m_stop_events.Keys
            AddPinEventListener m_stop_events(evt).EventName, m_name & "_" & evt & "_stop", "MultiballsHandler", m_priority+m_stop_events(evt).Priority, Array("stop", Me, m_stop_events(evt))
        Next
    End Sub

    Public Sub Disable()
        Log "Disabling " & m_name
        m_enabled = False
        m_balls_added_live = 0
        m_balls_live_target = 0
        m_shoot_again_enabled = False
        StopMultiball()
        Dim evt
        For Each evt in m_start_events.Keys
            RemovePinEventListener m_start_events(evt).EventName, m_name & "_" & evt & "_start"
        Next
        For Each evt in m_reset_events.Keys
            RemovePinEventListener m_reset_events(evt).EventName, m_name & "_" & evt & "_reset"
        Next
        For Each evt in m_add_a_ball_events.Keys
            RemovePinEventListener m_add_a_ball_events(evt).EventName, m_name & "_" & evt & "_add_a_ball"
        Next
        For Each evt in m_stop_events.Keys
            RemovePinEventListener m_stop_events(evt).EventName, m_name & "_" & evt & "_stop"
        Next
        RemovePinEventListener GLF_BALL_DRAIN, m_name & "_ball_drain"
        'RemoveDelay m_name & "_queued_release"
    End Sub

    Private Sub HandleBallsInPlayAndBallsLive()
        'Dim balls_to_replace
        'If m_replace_balls_in_play = True Then
        '    balls_to_replace = glf_BIP
        'Else
        '    balls_to_replace = 0
        'End If
        'Log("Going to add an additional " & balls_to_replace & " balls for replace_balls_in_play")
        m_balls_added_live = 0
        Dim ball_count_value : ball_count_value = m_ball_count.Value
        If m_ball_count_type = "total" Then
            Log "glf_BIP: " & glf_BIP
            If ball_count_value > glf_BIP Then
                m_balls_added_live = ball_count_value - glf_BIP
                'glf_BIP = m_ball_count
            End If
            m_balls_live_target = ball_count_value
        Else
            m_balls_added_live = ball_count_value
            'glf_BIP = glf_BIP + m_balls_added_live
            m_balls_live_target = glf_BIP + m_balls_added_live
        End If

    End Sub

    Public Function BallsDrained(balls)
        If m_shoot_again_enabled Then
            balls = BallDrainShootAgain(balls)
        Else
            BallDrainCountBalls(balls)
        End If
        BallsDrained = balls
    End Function

    Public Sub Start()
        ' Start multiball.
        If not m_enabled Then
            Exit Sub
        End If

        If m_balls_live_target > 0 Then
            Log("Cannot start MB because " & m_balls_live_target & " are still in play")
            Exit Sub
        End If

        m_shoot_again_enabled = True

        HandleBallsInPlayAndBallsLive()
        Log("Starting multiball with " & m_balls_live_target & " balls (added " & m_balls_added_live & ")")
        'msgbox("Starting multiball with " & m_balls_live_target & " balls (added " & m_balls_added_live & ")")
        Dim balls_added : balls_added = 0

        'eject balls from locks
        Dim ball_lock
        For Each ball_lock in m_ball_locks
            Dim available_balls : available_balls = glf_ball_devices(ball_lock).Balls()
            If available_balls > 0 Then
                glf_ball_devices(ball_lock).EjectAll()
            End If
            balls_added = balls_added + available_balls
        Next

        glf_BIP = m_balls_live_target

        'request remaining balls
        m_queued_balls = (m_balls_added_live - balls_added)
        If m_queued_balls > 0 Then
            SetDelay m_name&"_queued_release", "MultiballsHandler" , Array(Array("queue_release", Me),Null), 1000
        End If

        If m_shoot_again.Value = 0 Then
            'No shoot again. Just stop multiball right away
            StopMultiball()
        else
            'Enable shoot again
            TimerStart()
        End If
        AddPinEventListener GLF_BALL_DRAIN, m_name & "_ball_drain", "MultiballsHandler", m_priority, Array("drain", Me)

        Dim kwargs : Set kwargs = GlfKwargs()
        With kwargs
            .Add "balls", m_balls_live_target
        End With
        DispatchPinEvent m_name & "_started", kwargs
    End Sub

    Sub TimerStart()
        DispatchPinEvent "ball_save_" & m_configname & "_timer_start", Null 'desc: The multiball ball save called (name) has just start its countdown timer.
        StartShootAgain m_shoot_again.Value, m_grace_period.Value, m_hurry_up.Value
    End Sub

    Sub StartShootAgain(shoot_again_ms, grace_period_ms, hurry_up_time_ms)
        'Set callbacks for shoot again, grace period, and hurry up, if values above 0 are provided.
        'This is started for both beginning multiball ball save and add a ball ball save
        If shoot_again_ms > 0 Then
            Log("Starting ball save timer: " & shoot_again_ms)
            SetDelay m_name&"_disable_shoot_again", "MultiballsHandler" , Array(Array("stop", Me),Null), shoot_again_ms+grace_period_ms
        End If
        If grace_period_ms > 0 Then
            m_grace_period_enabled = True
            SetDelay m_name&"_grace_period", "MultiballsHandler" , Array(Array("grace_period", Me),Null), shoot_again_ms
        End If
        If hurry_up_time_ms > 0 Then
            m_hurry_up_enabled = True
            SetDelay m_name&"_hurry_up", "MultiballsHandler" , Array(Array("hurry_up", Me),Null), shoot_again_ms - hurry_up_time_ms
        End If
    End Sub

    Sub RunHurryUp()
        Log("Starting Hurry Up")
        m_hurry_up_enabled = False
        DispatchPinEvent m_name & "_hurry_up", Null
    End Sub

    Sub RunGracePeriod()
        Log("Starting Grace Period")
        m_grace_period_enabled = False
        DispatchPinEvent m_name & "_grace_period", Null
    End Sub

    Public Function BallDrainShootAgain(balls):
        Dim balls_to_save, kwargs

        If balls = 0 Then
            BallDrainShootAgain = balls
            Exit Function
        End If

        balls_to_save = m_balls_live_target - balls

        Log "Balls to save: " & balls_to_save & ". Balls live target: " & m_balls_live_target & ". Balls in Play: " & glf_BIP & ". Balls Drained: " & balls

        If balls_to_save <= 0 Then
            BallDrainShootAgain = balls
        End If

        If balls_to_save > balls Then
            balls_to_save = balls
        End If

        Set kwargs = GlfKwargs()
        With kwargs
            .Add "balls", balls_to_save
        End With
        DispatchPinEvent m_name & "_shoot_again", kwargs

        Log("Ball drained during MB. Requesting a new one")
        m_queued_balls = m_queued_balls + 1
        SetDelay m_name&"_queued_release", "MultiballsHandler" , Array(Array("queue_release", Me, m_queued_balls),Null), 1000

        BallDrainShootAgain = balls - balls_to_save
    End Function

    Function BallDrainCountBalls(balls):
        DispatchPinEvent m_name & "_ball_lost", Null
        If not glf_gameStarted or (glf_BIP - balls) = 1 Then
            m_balls_added_live = 0
            m_balls_live_target = 0
            DispatchPinEvent m_name & "_ended", Null
            RemovePinEventListener GLF_BALL_DRAIN, m_name & "_ball_drain"
            Log("Ball drained. MB ended.")
        End If
        BallDrainCountBalls = balls
    End Function

    Public Sub Reset()
        Log "Resetting multiball: " & m_name
        DispatchPinEvent m_name & "_reset_event", Null

        Disable()
        m_shoot_again_enabled = False
        m_balls_added_live = 0
        m_balls_live_target = 0
    End Sub

    Public Sub AddABall()
        If m_balls_live_target > 0 Then
            Log "Adding a ball to multiball: " & m_name
            m_balls_live_target = m_balls_live_target + 1
            m_balls_added_live = m_balls_added_live + 1
            m_queued_balls = m_queued_balls + 1
            glf_BIP = glf_BIP + 1
            SetDelay m_name&"_queued_release", "MultiballsHandler" , Array(Array("queue_release", Me, m_queued_balls),Null), 1000
        End If
    End Sub

    Public Sub AddAballTimerStart()
        'Start the timer for add a ball ball save.
        'This is started when multiball add a ball is triggered if configured,
        'and the default timer is not still running.
        If m_shoot_again_enabled = True Then
            Exit Sub
        End If

        m_shoot_again_enabled = True

        Dim shoot_again_ms : shoot_again_ms = m_add_a_ball_shoot_again.Value()
        if shoot_again_ms = 0 Then
            'No shoot again. Just stop multiball right away
            StopMultiball()
            Exit Sub
        End If

        DispatchPinEvent "ball_save_" & m_configname & "_add_a_ball_timer_start", Null

        Dim grace_period_ms : grace_period_ms = m_add_a_ball_grace_period.Value()
        Dim hurry_up_time_ms : hurry_up_time_ms = m_add_a_ball_hurry_up_time.Value()
        StartShootAgain shoot_again_ms, grace_period_ms, hurry_up_time_ms
    End Sub

    Public Sub StopMultiball()
        '"""Stop shoot again."""
        Log("Stopping shoot again of multiball")
        m_shoot_again_enabled = False

        '# disable shoot again
        RemoveDelay m_name&"_disable_shoot_again"

        If m_grace_period_enabled Then
            RemoveDelay m_name&"_grace_period"
            RunGracePeriod()
        End If
        If m_hurry_up_enabled Then
            RemoveDelay m_name&"_hurry_up"
            RunHurryUp()
        End If
        Log "Stop Shoot Again, Queued Balls: " & QueuedBalls()
        'RemoveDelay m_name & "_queued_release"

        DispatchPinEvent m_name & "_shoot_again_ended", Null
    End Sub

    Public Function QueuedBalls()
        QueuedBalls = m_queued_balls
    End Function

    Public Function ReleaseQueuedBalls()
        m_queued_balls = m_queued_balls - 1
        Log "Queued Balls: " & m_queued_balls
        ReleaseQueuedBalls = m_queued_balls
    End Function

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

End Class

Function MultiballsHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim multiball : Set multiball = ownProps(1)
    'Check if the evt has a condition to evaluate
    If UBound(ownProps) = 2 Then
        If IsObject(ownProps(2)) Then
            If ownProps(2).Evaluate() = False Then
                If IsObject(args(1)) Then
                    Set MultiballsHandler = kwargs
                Else
                    MultiballsHandler = kwargs
                End If
                Exit Function
            End If
        End If
    End If
    Select Case evt
        Case "start"
            multiball.Start
        Case "reset"
            multiball.Reset
        Case "add_a_ball"
            multiball.AddABall
        Case "stop"
            multiball.StopMultiball
        Case "grace_period"
            multiball.RunGracePeriod
        Case "hurry_up"
            multiball.RunHurryUp
        Case "drain"
            kwargs = multiball.BallsDrained(kwargs)
        Case "queue_release"
            If multiball.QueuedBalls() > 0 Then
                If glf_plunger.HasBall = False And ballInReleasePostion = True And glf_plunger.IncomingBalls = 0 Then
                    Glf_ReleaseBall(Null)
                    SetDelay multiball.Name&"_auto_launch", "MultiballsHandler" , Array(Array("auto_launch", multiball),Null), 500
                    If multiball.ReleaseQueuedBalls() > 0 Then
                        SetDelay multiball.Name&"_queued_release", "MultiballsHandler" , Array(Array("queue_release", multiball), Null), 1000
                    End If
                Else
                    SetDelay multiball.Name&"_queued_release", "MultiballsHandler" , Array(Array("queue_release", multiball), Null), 1000
                End If
            End If
        Case "auto_launch"
            If glf_plunger.HasBall = True Then
                glf_plunger.Eject
            Else
                SetDelay multiball.Name&"_auto_launch", "MultiballsHandler" , Array(Array("auto_launch", multiball), Null), 500
            End If
    End Select

    If IsObject(args(1)) Then
        Set MultiballsHandler = kwargs
    Else
        MultiballsHandler = kwargs
    End If
End Function



Class GlfQueueEventPlayer

    Private m_priority
    Private m_mode
    Private m_debug
    private m_base_device
    Private m_events
    Private m_eventValues

    Public Property Get Name() : Name = "queue_event_player" : End Property

    Public Property Get Events() : Set Events = m_events : End Property
    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

  Public default Function init(mode)
        m_mode = mode.Name
        m_priority = mode.Priority
        m_debug = False
        Set m_events = CreateObject("Scripting.Dictionary")
        Set m_eventValues = CreateObject("Scripting.Dictionary")
        Set m_base_device = (new GlfBaseModeDevice)(mode, "queue_event_player", Me)
        Set Init = Me
  End Function

    Public Sub Add(key, value)
        Dim newEvent : Set newEvent = (new GlfEvent)(key)
        m_events.Add newEvent.Raw, newEvent
        'msgbox newEvent.Name
        m_eventValues.Add newEvent.Raw, value
    End Sub

    Public Sub Activate()
        Dim evt
        For Each evt In m_events.Keys()
            AddPinEventListener m_events(evt).EventName, m_mode & "_" & m_events(evt).Name & "_queue_event_player_play", "QueueEventPlayerEventHandler", m_priority+m_events(evt).Priority, Array("play", Me, evt)
        Next
    End Sub

    Public Sub Deactivate()
        Dim evt
        For Each evt In m_events.Keys()
            RemovePinEventListener m_events(evt).EventName, m_mode & "_" & m_events(evt).Name & "_queue_event_player_play"
        Next
    End Sub

    Public Sub FireEvent(evt)
        If m_events(evt).Evaluate() = False Then
            Exit Sub
        End If
        Dim evtValue
        For Each evtValue In m_eventValues(evt)
            Log "Dispatching Event: " & evtValue
            DispatchQueuePinEvent evtValue, Null
        Next
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_mode & "_queue_event_player", message
        End If
    End Sub

    Public Function ToYaml()
        Dim yaml
        Dim evt
        If UBound(m_events.Keys) > -1 Then
            For Each key in m_events.keys
                yaml = yaml & "  " & m_events(key).Raw & ": " & vbCrLf
                For Each evt in m_eventValues(key)
                    yaml = yaml & "    - " & evt & vbCrLf
                Next
            Next
            yaml = yaml & vbCrLf
        End If
        ToYaml = yaml
    End Function

End Class

Function QueueEventPlayerEventHandler(args)

    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim eventPlayer : Set eventPlayer = ownProps(1)
    Select Case evt
        Case "play"
            eventPlayer.FireEvent ownProps(2)
    End Select
    If IsObject(args(1)) Then
        Set QueueEventPlayerEventHandler = kwargs
    Else
        QueueEventPlayerEventHandler = kwargs
    End If
End Function


Class GlfQueueRelayPlayer

    Private m_priority
    Private m_mode
    Private m_debug
    private m_base_device
    Private m_events
    Private m_eventValues

    Public Property Get Name() : Name = "queue_relay_player" : End Property

    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

  Public default Function init(mode)
        m_mode = mode.Name
        m_priority = mode.Priority
        m_debug = False
        Set m_events = CreateObject("Scripting.Dictionary")
        Set m_eventValues = CreateObject("Scripting.Dictionary")
        Set m_base_device = (new GlfBaseModeDevice)(mode, "queue_relay_player", Me)
        Set Init = Me
  End Function

    Public Property Get Events() : Set Events = m_events : End Property
    Public Property Get EventNames() : EventNames = m_events.Keys() : End Property
    Public Property Get EventName(name)
        If m_events.Exists(name) Then
            Set EventName = m_eventValues(name)
        Else
            Dim new_event : Set new_event = (new GlfEvent)(name)
            m_events.Add new_event.Raw, new_event
            Dim new_event_value : Set new_event_value = (new GlfQueueRelayEvent)()
            m_eventValues.Add new_event.Raw, new_event_value
            Set EventName = new_event_value
        End If
    End Property

    Public Sub Activate()
        Dim evt
        For Each evt In m_events.Keys()
            AddPinEventListener m_events(evt).EventName, m_mode & "_" & evt & "_queue_relay_player_play", "QueueRelayPlayerEventHandler", m_priority+m_events(evt).Priority, Array("play", Me, evt)
        Next
    End Sub

    Public Sub Deactivate()
        Dim evt
        For Each evt In m_events.Keys()
            RemovePinEventListener m_events(evt).EventName, m_mode & "_" & evt & "_queue_relay_player_play"
        Next
    End Sub

    Public Function FireEvent(evt)
        FireEvent=Empty
        If m_events(evt).Evaluate() Then
            'post a new event, and wait for the release
            DispatchPinEvent m_eventValues(evt).Post, Null
            FireEvent = m_eventValues(evt).WaitFor
        End If
    End Function

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_mode & "_queue_relay_player", message
        End If
    End Sub

    Public Function ToYaml()
        Dim yaml
        Dim evt
        If UBound(m_events.Keys) > -1 Then
            For Each key in m_events.keys
                yaml = yaml & "  " & m_events(key).Raw & ": " & vbCrLf
                For Each evt in m_eventValues(key)
                    yaml = yaml & "    - " & evt & vbCrLf
                Next
            Next
            yaml = yaml & vbCrLf
        End If
        ToYaml = yaml
    End Function

End Class

Function QueueRelayPlayerEventHandler(args)

    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim eventPlayer : Set eventPlayer = ownProps(1)
    Select Case evt
        Case "play"
            Dim wait_for : wait_for = eventPlayer.FireEvent(ownProps(2))
            If Not IsEmpty(wait_for) Then
                kwargs.Add "wait_for", wait_for
            End If
    End Select
    If IsObject(args(1)) Then
        Set QueueRelayPlayerEventHandler = kwargs
    Else
        QueueRelayPlayerEventHandler = kwargs
    End If
End Function

Class GlfQueueRelayEvent

  Private m_wait_for, m_post

    Public Property Get WaitFor() : WaitFor = m_wait_for : End Property
    Public Property Let WaitFor(input) : m_wait_for = input : End Property
    Public Property Get Post() : Post = m_post : End Property
    Public Property Let Post(input) : m_post = input : End Property

  Public default Function init()
        m_wait_for = Empty
        m_post = Empty
      Set Init = Me
  End Function

End Class


Class GlfRandomEventPlayer

    Private m_priority
    Private m_mode
    Private m_debug
    private m_base_device
    Private m_events
    Private m_eventValues

    Public Property Get Name() : Name = "random_event_player" : End Property
    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

    Public Property Get EventNames() : EventNames = m_events.Keys : End Property
    Public Property Get EventName(value)

        Dim newEvent : Set newEvent = (new GlfEvent)(value)
        m_events.Add newEvent.Raw, newEvent
        Dim newRandomEvent : Set newRandomEvent = (new GlfRandomEvent)(value, m_mode, UBound(m_events.Keys))
        m_eventValues.Add newEvent.Raw, newRandomEvent

        Set EventName = newRandomEvent
    End Property

  Public default Function init(mode)
        m_mode = mode.Name
        m_priority = mode.Priority

        Set m_events = CreateObject("Scripting.Dictionary")
        Set m_eventValues = CreateObject("Scripting.Dictionary")
        Set m_base_device = (new GlfBaseModeDevice)(mode, "random_event_player", Me)
        Set Init = Me
  End Function

    Public Sub Activate()
        Dim evt
        Log "Activating"
        For Each evt In m_events.Keys()
            Log "Adding: " & m_events(evt).EventName & ". For Key: " & m_mode & "_" & evt & "_random_event_player_play"
            AddPinEventListener m_events(evt).EventName, m_mode & "_" & evt & "_random_event_player_play", "RandomEventPlayerEventHandler", m_priority+m_events(evt).Priority, Array("play", Me, evt)
        Next
    End Sub

    Public Sub Deactivate()
        Dim evt
        For Each evt In m_events.Keys()
            RemovePinEventListener m_events(evt).EventName, m_mode & "_" & evt & "_random_event_player_play"
        Next
    End Sub

    Public Sub FireEvent(evt)
        Log "Firing Random Event:  " & evt
        If m_events(evt).Evaluate() Then
            Dim event_to_fire
            event_to_fire = m_eventValues(evt).GetNextRandomEvent()
            If Not IsEmpty(event_to_fire) Then
                Log "Dispatching Event: " & event_to_fire
                DispatchPinEvent event_to_fire, Null
            Else
                Log "No event available to fire"
            End If
        End If
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_mode & "_random_event_player", message
        End If
    End Sub

    Public Function ToYaml()
            Dim yaml
        Dim evt
        If UBound(m_eventValues.Keys) > -1 Then
            For Each key in m_eventValues.keys
                yaml = yaml & "  " & key & ": " & vbCrLf
                yaml = yaml & m_eventValues(key).ToYaml
            Next
            yaml = yaml & vbCrLf
        End If
        ToYaml = yaml
    End Function

End Class

Function RandomEventPlayerEventHandler(args)

    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim eventPlayer : Set eventPlayer = ownProps(1)
    Select Case evt
        Case "play"
            eventPlayer.FireEvent ownProps(2)
    End Select
    If IsObject(args(1)) Then
        Set RandomEventPlayerEventHandler = kwargs
    Else
        RandomEventPlayerEventHandler = kwargs
    End If
End Function

Class GlfSegmentDisplayPlayer

    Private m_priority
    Private m_mode
    Private m_name
    Private m_debug
    Private m_events
    private m_base_device

    Public Property Get Name() : Name = "segment_player" : End Property
    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

    Public Property Get EventNames() : EventNames = m_events.Keys() : End Property

    Public Property Get EventName(value)
        Dim newEvent : Set newEvent = (new GlfEvent)(value)

        If m_events.Exists(newEvent.Raw) Then
            Set EventName = m_events(newEvent.Raw)
        Else
            Dim new_segment_event : Set new_segment_event = (new GlfSegmentDisplayPlayerEvent)(newEvent)
            m_events.Add newEvent.Raw, new_segment_event
            Set EventName = new_segment_event
        End If
    End Property

  Public default Function init(mode)
        m_name = "segment_player_" & mode.name
        m_mode = mode.Name
        m_priority = mode.Priority
        m_debug = False
        Set m_events = CreateObject("Scripting.Dictionary")
        Set m_base_device = (new GlfBaseModeDevice)(mode, "segment_player", Me)
        Set Init = Me
  End Function

    Public Sub Activate()
        Dim evt
        For Each evt In m_events.Keys()
            AddPinEventListener m_events(evt).GlfEvent.EventName, m_mode & "_" & evt & "_segment_player_play", "SegmentPlayerEventHandler", m_priority+m_events(evt).GlfEvent.Priority, Array("play", Me, m_events(evt), m_events(evt).GlfEvent.EventName)
        Next
    End Sub

    Public Sub Deactivate()
        Dim evt, display
        Dim displays_to_update : Set displays_to_update = CreateObject("Scripting.Dictionary")
        For Each evt In m_events.Keys()
            RemovePinEventListener m_events(evt).GlfEvent.EventName, m_mode & "_" & evt & "_segment_player_play"
            Set displays_to_update = PlayOff(m_events(evt).GlfEvent.EventName, m_events(evt), displays_to_update)
        Next

        For Each display in displays_to_update.Keys()
            glf_segment_displays(display).UpdateStack()
        Next
    End Sub

    Public Sub Play(evt, segment_event)
        Dim i
        Dim segment_event_displays : segment_event_displays = segment_event.Displays()
        For i=0 to UBound(segment_event_displays)
            SegmentPlayerCallbackHandler evt, segment_event_displays(i), m_mode, m_priority
        Next
    End Sub

    Public Function PlayOff(evt, segment_event, displays_to_update)
        Dim i, segment_item
        Dim segment_event_displays : segment_event_displays = segment_event.Displays()
        For i=0 to UBound(segment_event_displays)
            Set segment_item = segment_event_displays(i)
            Dim key
            key = m_mode & "." & "segment_player_player." & segment_item.Display
            If Not IsEmpty(segment_item.Key) Then
                key = key & segment_item.Key
            End If
            Dim display : Set display = glf_segment_displays(segment_item.Display)
            RemoveDelay key
            display.RemoveTextByKeyNoUpdate key
            If Not displays_to_update.Exists(segment_item.Display) Then
                displays_to_update.Add segment_item.Display, True
            End If
        Next
        Set PlayOff = displays_to_update
    End Function

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

    Public Function ToYaml()
        Dim yaml
        Dim evt
        If UBound(m_events.Keys) > -1 Then
            For Each key in m_events.keys
                yaml = yaml & "  " & key & ": " & vbCrLf
                yaml = yaml & m_events(key).ToYaml()
            Next
            yaml = yaml & vbCrLf
        End If
        ToYaml = yaml
    End Function

End Class

Class GlfSegmentDisplayPlayerEvent

    Private m_items
    Private m_event

    Public Property Get Displays() : Displays = m_items.Items() : End Property

    Public Property Get GlfEvent() : Set GlfEvent = m_event : End Property

    Public Property Get Display(value)
        If m_items.Exists(value) Then
            Set Display = m_items(value)
        Else
            Dim new_item : Set new_item = (new GlfSegmentPlayerEventItem)()
            new_item.Display = value
            m_items.add value, new_item
            Set Display = new_item
        End If
    End Property

    Public default Function init(evt)
        Set m_items = CreateObject("Scripting.Dictionary")
        Set m_event = evt
        Set Init = Me
  End Function

End Class

Class GlfSegmentPlayerEventItem

    private m_display
    private m_text
    private m_priority
    private m_action
    private m_expire
    private m_flash_mask
    private m_flashing
    private m_key
    private m_transition
    private m_transition_out
    private m_color

    Public Property Get Display() : Display = m_display : End Property
    Public Property Let Display(input) : m_display = input : End Property

    Public Property Get Text()
        If Not IsNull(m_text) Then
            Set Text = m_text
        Else
            Text = Null
        End If
    End Property
    Public Property Let Text(input)
        Set m_text = (new GlfInput)(input)
    End Property

    Public Property Get Priority() : Priority = m_priority : End Property
    Public Property Let Priority(input) : m_priority = input : End Property

    Public Property Get Action() : Action = m_action : End Property
    Public Property Let Action(input) : m_action = input : End Property

    Public Property Get Expire() : Expire = m_expire : End Property
    Public Property Let Expire(input) : m_expire = input : End Property

    Public Property Get FlashMask() : FlashMask = m_flash_mask : End Property
    Public Property Let FlashMask(input) : m_flash_mask = input : End Property

    Public Property Get Flashing() : Flashing = m_flashing : End Property
    Public Property Let Flashing(input) : m_flashing = input : End Property

    Public Property Get Key() : Key = m_key : End Property
    Public Property Let Key(input) : m_key = input : End Property

    Public Property Get Color() : Color = m_color : End Property
    Public Property Let Color(input) : m_color = input : End Property

    Public Property Get HasTransition() : HasTransition = Not IsNull(m_transition) : End Property
    Public Property Get HasTransitionOut() : HasTransitionOut = Not IsNull(m_transition_out) : End Property

    Public Property Get Transition()
        If IsNull(m_transition) Then
            Set m_transition = (new GlfSegmentPlayerTransition)("bee")
            Set Transition = m_transition
        Else
            Set Transition = m_transition
        End If
    End Property

    Public Property Get TransitionOut()
        If IsNull(m_transition_out) Then
            Set m_transition_out = (new GlfSegmentPlayerTransition)()
            Set TransitionOut = m_transition_out
        Else
            Set TransitionOut = m_transition_out
        End If
    End Property

  Public default Function init()
        m_display = Empty
        m_text = Null
        m_priority = 0
        m_action = "add"
        m_expire = 0
        m_flash_mask = Empty
        m_flashing = "no_flash"
        m_key = Empty
        m_transition = Null
        m_transition_out = Null
        m_color = Rgb(255,255,255)
        Set Init = Me
  End Function

    Public Function ToYaml()
        Dim yaml
        If Not IsEmpty(m_display) Then
            yaml = yaml & "    " & m_display & ": " & vbCrLf
        End If
        If Not IsNull(m_text) Then
            yaml = yaml & "    " & m_text.Raw() & ": " & vbCrLf
        End If
        If m_priority > 0 Then
            yaml = yaml & "    " & m_priority & ": " & vbCrLf
        End If
        If m_action <> "add" Then
            yaml = yaml & "    " & m_action & ": " & vbCrLf
        End If
        If m_expire > 0 Then
            yaml = yaml & "    " & m_expire & ": " & vbCrLf
        End If
        If Not IsEmpty(m_flash_mask) Then
            yaml = yaml & "    " & m_flash_mask & ": " & vbCrLf
        End If
        If m_flashing <> "not_set" Then
            yaml = yaml & "    " & m_flashing & ": " & vbCrLf
        End If
        If Not IsEmpty(m_key) Then
            yaml = yaml & "    " & m_key & ": " & vbCrLf
        End If
        If Not IsEmpty(m_color) Then
            yaml = yaml & "    " & m_color & ": " & vbCrLf
        End If
        If Not IsNull(m_transition) Then
            yaml = yaml & m_transition.ToYaml()
        End If
        If Not IsNull(m_transition_out) Then
            yaml = yaml & m_transition_out.ToYaml()
        End If
        ToYaml = yaml
    End Function

End Class

Class GlfSegmentPlayerTransition

    private m_type
    private m_text
    private m_direction

    Public Property Get TransitionType() : TransitionType = m_type : End Property
    Public Property Let TransitionType(input) : m_type = input : End Property

    Public Property Get Text()
        Text = m_text
    End Property
    Public Property Let Text(input)
        m_text = input
    End Property

    Public Property Get Direction() : Direction = m_direction : End Property
    Public Property Let Direction(input) : m_direction = input : End Property

  Public default Function Init(loo)
        m_type = "push"
        m_text = Empty
        m_direction = "right"
        Set Init = Me
  End Function

    Public Function ToYaml()
        Dim yaml
        yaml = yaml & "    transition:" & vbCrLf
        yaml = yaml & "      " & m_type & ": " & vbCrLf
        yaml = yaml & "      " & m_direction & ": " & vbCrLf
        yaml = yaml & "      " & m_text & ": " & vbCrLf
        ToYaml = yaml
    End Function

End Class

Function SegmentPlayerEventHandler(args)
    Dim ownProps : ownProps = args(0)
    Dim evt : evt = ownProps(0)
    Dim SegmentPlayer : Set SegmentPlayer = ownProps(1)
    Select Case evt
        Case "activate"
            SegmentPlayer.Activate
        Case "deactivate"
            SegmentPlayer.Deactivate
        Case "play"
            If ownProps(2).GlfEvent.Evaluate() Then
                SegmentPlayer.Play ownProps(3), ownProps(2)
            End If
        Case "remove"
            RemoveDelay ownProps(2)
            SegmentPlayer.RemoveTextByKey ownProps(2)
    End Select
    SegmentPlayerEventHandler = Null
End Function


Function SegmentPlayerCallbackHandler(evt, segment_item, mode, priority)

    If IsObject(segment_item) Then
        'Shot Text on a display
        Dim key
        key = mode & "." & "segment_player_player." & segment_item.Display
        If Not IsEmpty(segment_item.Key) Then
            key = key & segment_item.Key
        End If

        Dim display : Set display = glf_segment_displays(segment_item.Display)

        If segment_item.Action = "add" Then
            RemoveDelay key
            Dim transition, transition_out : transition = Null : transition_out = Null
            If segment_item.HasTransition() Then
                Set transition = segment_item.Transition
            End If
            If segment_item.HasTransitionOut() Then
                Set transition_out = segment_item.TransitionOut
            End If
            display.AddTextEntry segment_item.Text, segment_item.Color, segment_item.Flashing, segment_item.FlashMask, transition, transition_out, priority + segment_item.Priority, key

            If segment_item.Expire > 0 Then
                SetDelay key & "_expire", "SegmentPlayerEventHandler",  Array(Array("remove", display, key)), segment_item.Expire
            End If

        ElseIf segment_item.Action = "remove" Then
            RemoveDelay key
            display.RemoveTextByKey key
        ElseIf segment_item.Action = "flash" Then
            display.SetFlashing "all"
        ElseIf segment_item.Action = "flash_match" Then
            display.SetFlashing "match"
        ElseIf segment_item.Action = "flash_mask" Then
            display.SetFlashingMask segment_item.FlashMask
        ElseIf segment_item.Action = "no_flash" Then
            display.SetFlashing "no_flash"
        ElseIf segment_item.Action = "set_color" Then
            If Not IsNull(segment_item.Color) Then
                display.SetColor segment_item.Color
            End If
        End If
    End If

End Function

Class GlfSequenceShots

    Private m_name
    Private m_command_name
    Private m_lock_device
    Private m_priority
    Private m_mode
    Private m_base_device
    Private m_debug

    Private m_cancel_events
    Private m_cancel_switches
    Private m_delay_event_list
    Private m_delay_switch_list
    Private m_event_sequence
    Private m_sequence_timeout
    Private m_switch_sequence
    Private m_start_event
    Private m_sequence_count
    Private m_active_delays
    Private m_active_sequences
    Private m_sequence_events
    Private m_start_time

    Public Property Get Name(): Name = m_name: End Property
    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

    Public Property Get GetValue(value)
        Select Case value
            'Case "":
            '    GetValue =
        End Select
    End Property

    Public Property Let CancelEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_cancel_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let CancelSwitches(value): m_cancel_switches = value: End Property
    Public Property Let DelayEventList(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_delay_event_list.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let DelaySwitchList(value): m_delay_switch_list = value: End Property
    Public Property Let EventSequence(value)
        m_event_sequence = value
        If m_sequence_count = 0 Then
            m_sequence_events = value
        Else
            Redim Preserve m_sequence_events(m_sequence_count+UBound(value))
            Dim i
            For i = 0 To UBound(value)
                m_sequence_events(m_sequence_count + i) = value(i)
            Next
        End If
        m_start_event = value(0)
        m_sequence_count = m_sequence_count + (UBound(m_sequence_events)+1)
    End Property
    Public Property Let SequenceTimeout(value): Set m_sequence_timeout = CreateGlfInput(value): End Property
    Public Property Let SwitchSequence(value)
        m_switch_sequence = value
        If m_sequence_count = 0 Then
            m_start_event = value(0) & "_active"
        End If
        Redim Preserve m_sequence_events(m_sequence_count+UBound(value))
        Dim i
        For i = 0 To UBound(value)
            m_sequence_events(m_sequence_count + i) = value(i) & "_active"
        Next
        m_sequence_count = m_sequence_count + (UBound(m_sequence_events)+1)
    End Property

  Public default Function init(name, mode)
        m_name = "sequence_shot_" & name
        m_command_name = name
        m_mode = mode.Name
        m_priority = mode.Priority

        Set m_cancel_events = CreateObject("Scripting.Dictionary")
        Set m_delay_event_list = CreateObject("Scripting.Dictionary")
        Set m_active_sequences = CreateObject("Scripting.Dictionary")
        Set m_active_delays = CreateObject("Scripting.Dictionary")

        m_sequence_events = Array()
        m_cancel_switches = Array()
        m_start_time = 0
        m_event_sequence = Array()
        m_switch_sequence = Array()
        Set m_sequence_timeout = CreateGlfInput(0)
        m_sequence_count = 0
        m_start_event = Empty
        m_debug = False
        Set m_base_device = (new GlfBaseModeDevice)(mode, "sequence_shot_", Me)

        Set Init = Me
  End Function

    Public Sub Activate()
        Enable()
    End Sub

    Public Sub Deactivate()
        Disable()
    End Sub

    Public Sub Enable()
        Log "Enabling"
        Dim evt
        For Each evt in m_event_sequence
            AddPinEventListener evt, m_name & "_" & evt & "_advance", "SequenceShotsHandler", m_priority, Array("advance", Me, evt)
        Next
        For Each evt in m_switch_sequence
            AddPinEventListener evt & "_active", m_name & "_" & evt & "_advance", "SequenceShotsHandler", m_priority, Array("advance", Me, evt & "_active")
        Next
        For Each evt in m_cancel_events.Keys
            AddPinEventListener m_cancel_events(evt).EventName, m_name & "_" & evt & "_cancel", "SequenceShotsHandler", m_priority+m_cancel_events(evt).Priority, Array("cancel_event", Me, m_cancel_events(evt))
        Next
        For Each evt in m_delay_event_list.Keys
            AddPinEventListener m_delay_event_list(evt).EventName, m_name & "_" & evt & "_delay", "SequenceShotsHandler", m_priority+m_delay_event_list(evt).Priority, Array("delay_event", Me, m_delay_event_list(evt))
        Next
    End Sub

    Public Sub Disable()
        Log "Disabling"
        Dim evt
        For Each evt in m_event_sequence
            RemovePinEventListener evt, m_name & "_" & evt & "_advance"
        Next
        For Each evt in m_switch_sequence
            RemovePinEventListener evt & "_active", m_name & "_" & evt & "_advance"
        Next
        For Each evt in m_cancel_events.Keys
            RemovePinEventListener m_cancel_events(evt).EventName, m_name & "_" & evt & "_cancel"
        Next
        For Each evt in  m_delay_event_list.Keys
            RemovePinEventListener m_delay_event_list(evt).EventName, m_name & "_" & evt & "_delay"
        Next
    End Sub

    Sub SequenceAdvance(event_name)
        ' Since we can track multiple simultaneous sequences (e.g. two balls
        ' going into an orbit in a row), we first have to see whether this
        ' switch is starting a new sequence or continuing an existing one

        Log "Sequence advance: " & event_name

        If event_name = m_start_event Then
            If m_sequence_count > 1 Then
                ' start a new sequence
                StartNewSequence()
            ElseIf UBound(m_active_delays.Keys) = -1 Then
                ' if it only has one step it will finish right away
                Completed()
            End If
        Else
            ' Get the seq_id of the first sequence this switch is next for.
            ' This is not a loop because we only want to advance 1 sequence
            Dim k, seq
            seq = Null
            For Each k In m_active_sequences.Keys
                Log m_active_sequences(k).NextEvent
                If m_active_sequences(k).NextEvent = event_name Then
                    Set seq = m_active_sequences(k)
                    Exit For
                End If
            Next

            If Not IsNull(seq) Then
                ' advance this sequence
                AdvanceSequence(seq)
            End If
        End If
    End Sub

    Public Sub StartNewSequence()
        ' If the sequence hasn't started, make sure we're not within the
        ' delay_switch hit window

        If UBound(m_active_delays.Keys)>-1 Then
            Log "There's a delay timer in effect. Sequence will not be started."
            Exit Sub
        End If

        'record start time
        m_start_time = gametime

        ' create a new sequence
        Dim seq_id : seq_id = "seq_" & glf_SeqCount
        glf_SeqCount = glf_SeqCount + 1

        Dim next_event : next_event = m_sequence_events(1)

        Log "Setting up a new sequence. Next: " & next_event

        m_active_sequences.Add seq_id, (new GlfActiveSequence)(seq_id, 0, next_event)

        ' if this sequence has a time limit, set that up
        If m_sequence_timeout.Value > 0 Then
            Log "Setting up a sequence timer for " & m_sequence_timeout.Value
            SetDelay seq_id, "SequenceShotsHandler" , Array(Array("seq_timeout", Me, seq_id),Null), m_sequence_timeout.Value
        End If
    End Sub

    Public Sub AdvanceSequence(sequence)
        ' Remove this sequence from the list
        If sequence.CurrentPositionIndex = (m_sequence_count - 2) Then  ' complete
            Log "Sequence complete!"
            RemoveDelay sequence.SeqId
            m_active_sequences.Remove sequence.SeqId
            Completed()
        Else
            Dim current_position_index : current_position_index = sequence.CurrentPositionIndex + 1
            Dim next_event : next_event = m_sequence_events(current_position_index + 1)
            Log "Advancing the sequence. Next: " & next_event
            sequence.CurrentPositionIndex = current_position_index
            sequence.NextEvent = next_event
        End If
    End Sub

    Public Sub Completed()
        'measure the elapsed time between start and completion of the sequence
        Dim elapsed
        If m_start_time > 0 Then
            elapsed = gametime - m_start_time
        Else
            elapsed = 0
        End If

        'Post sequence complete event including its elapsed time to complete.
        Dim kwargs : Set kwargs = GlfKwargs()
        With kwargs
            .Add "elapsed", elapsed
        End With
        DispatchPinEvent m_command_name & "_hit", kwargs
    End Sub

    Public Sub ResetAllSequences()
        'Reset all sequences."""
        Dim k
        For Each k in m_active_sequences.Keys
            RemoveDelay m_active_sequences(k).SeqId
        Next

        m_active_sequences.RemoveAll()
    End Sub

    Public Sub DelayEvent(delay, name)
        Log "Delaying sequence by " & delay
        SetDelay name & "_delay_timer", "SequenceShotsHandler" , Array(Array("release_delay", Me, name),Null), delay
        m_active_delays.Add name, True
    End Sub

    Public Sub ReleaseDelay(name)
        m_active_delays.Remove name
    End Sub

    Public Sub FireSequenceTimeout(seq_id)
        Log "Sequence " & seq_id & " timeouted"
        m_active_sequences.Remove seq_id
        DispatchPinEvent m_name & "_timeout", Null
    End Sub

     Public Function ToYaml()
        Dim yaml, key, x
        yaml = "  " & Replace(m_name, "sequence_shot_", "") & ":" & vbCrLf
        If UBound(m_switch_sequence) > -1 Then
            yaml = yaml & "    switch_sequence: " & vbCrLf
            For Each key in m_switch_sequence
                yaml = yaml & "      - " & key & vbCrLf
            Next
        End If
        If UBound(m_event_sequence) > -1 Then
            yaml = yaml & "    event_sequence: " & vbCrLf
            For Each key in m_event_sequence
                yaml = yaml & "      - " & key & vbCrLf
            Next
        End If
        If UBound(m_cancel_events.Keys) > -1 Then
            yaml = yaml & "    cancel_events: " & vbCrLf
            For Each key in m_cancel_events.Keys
                yaml = yaml & "      - " & key & vbCrLf
            Next
        End If
        If UBound(m_cancel_switches) > -1 Then
            yaml = yaml & "    cancel_swithces: " & vbCrLf
            For Each key in m_cancel_switches
                yaml = yaml & "      - " & key & vbCrLf
            Next
        End If
        If UBound(m_delay_event_list.Keys()) > -1 Then
            yaml = yaml & "    delay_event_list: " & vbCrLf
            For Each key in m_delay_event_list.Keys()
                yaml = yaml & "      - " & key & vbCrLf
            Next
        End If
        If m_sequence_timeout.Raw <> 0 Then
            yaml = yaml & "    sequence_timeout: " & m_sequence_timeout.Raw & vbCrLf
        End If

        ToYaml = yaml
    End Function

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

End Class

Class GlfActiveSequence

    Private m_next_event, m_seq_id, m_idx

    Public Property Get SeqId(): SeqId = m_seq_id: End Property
    Public Property Get NextEvent(): NextEvent = m_next_event: End Property
    Public Property Let NextEvent(value): m_next_event = value: End Property
    Public Property Get CurrentPositionIndex(): CurrentPositionIndex = m_idx: End Property
    Public Property Let CurrentPositionIndex(value): m_idx = value: End Property

    Public default Function init(seq_id, idx, next_event)
        m_seq_id = seq_id
        m_idx = idx
        m_next_event = next_event
        Set Init = Me
    End Function

End Class

Function SequenceShotsHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim sequence_shot : Set sequence_shot = ownProps(1)
    Select Case evt
        Case "advance"
            sequence_shot.SequenceAdvance ownProps(2)
        Case "cancel"
            Set glfEvent = ownProps(2)
            If glfEvent.Evaluate() = False Then
                Exit Function
            End If
            sequence_shot.ResetAllSequences
        Case "delay"
            Set glfEvent = ownProps(2)
            If glfEvent.Evaluate() = False Then
                Exit Function
            End If
            sequence_shot.DelayEvent glfEvent.Delay, glfEvent.EventName
        Case "seq_timeout"
            sequence_shot.FireSequenceTimeout ownProps(2)
        Case "release_delay"
            sequence_shot.ReleaseDelay ownProps(2)
    End Select
    If IsObject(args(1)) Then
        Set SequenceShotsHandler = kwargs
    Else
        SequenceShotsHandler = kwargs
    End If
End Function
Class GlfShotGroup
    Private m_name
    Private m_mode
    Private m_priority
    private m_base_device
    private m_debug
    private m_shots
    private m_common_state
    Private m_enable_rotation_events
    Private m_disable_rotation_events
    Private m_restart_events
    Private m_reset_events
    Private m_rotate_events
    Private m_rotate_left_events
    Private m_rotate_right_events
    Private rotation_enabled
    Private m_temp_shots
    Private m_rotation_pattern
    Private m_rotation_enabled
    Private m_isRotating

    Public Property Get Name(): Name = m_name: End Property

    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

    Public Property Get CommonState()
        Dim state : state = m_base_device.Mode.Shots(m_shots(0)).State
        Dim shot
        For Each shot in m_shots
            If state <> m_base_device.Mode.Shots(shot).State Then
                CommonState = Empty
                Exit Property
            End If
        Next
        CommonState = state
    End Property

    Public Property Let Shots(value)
        m_shots = value
        m_rotation_pattern = Glf_CopyArray(Glf_ShotProfiles(m_base_device.Mode.Shots(m_shots(0)).Profile).RotationPattern)
    End Property

    Public Property Let EnableRotationEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_enable_rotation_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let DisableRotationEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_disable_rotation_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let RestartEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_restart_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let ResetEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_reset_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let RotateEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_rotate_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let RotateLeftEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_rotate_left_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let RotateRightEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_rotate_right_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let EnableEvents(value) : m_base_device.EnableEvents = value : End Property
    Public Property Let DisableEvents(value) : m_base_device.DisableEvents = value : End Property

  Public default Function init(name, mode)
        m_name = name
        m_mode = mode.Name
        m_priority = mode.Priority
        m_common_state = Empty
        m_rotation_enabled = True
        m_rotation_pattern = Empty
        m_isRotating = False

        Set m_enable_rotation_events = CreateObject("Scripting.Dictionary")
        Set m_disable_rotation_events = CreateObject("Scripting.Dictionary")
        Set m_restart_events = CreateObject("Scripting.Dictionary")
        Set m_reset_events = CreateObject("Scripting.Dictionary")
        Set m_rotate_events = CreateObject("Scripting.Dictionary")
        Set m_rotate_left_events = CreateObject("Scripting.Dictionary")
        Set m_rotate_right_events = CreateObject("Scripting.Dictionary")
        Set m_temp_shots = CreateObject("Scripting.Dictionary")

        Set m_base_device = (new GlfBaseModeDevice)(mode, "shot_group", Me)

        Set Init = Me
  End Function

    Public Sub Activate
        Dim evt
        For Each evt in m_enable_rotation_events.Keys()
            m_rotation_enabled = False
            AddPinEventListener m_enable_rotation_events(evt).EventName, m_name & "_" & evt & "_enable_rotation", "ShotGroupEventHandler", m_priority+m_enable_rotation_events(evt).Priority, Array("enable_rotation", Me, m_enable_rotation_events(evt))
        Next
        For Each evt in m_disable_rotation_events.Keys()
            AddPinEventListener m_disable_rotation_events(evt).EventName, m_name & "_" & evt & "_disable_rotation", "ShotGroupEventHandler", m_priority+m_disable_rotation_events(evt).Priority, Array("disable_rotation", Me, m_disable_rotation_events(evt))
        Next
        For Each evt in m_restart_events.Keys()
            AddPinEventListener m_restart_events(evt).EventName, m_name & "_" & evt & "_restart", "ShotGroupEventHandler", m_priority+m_restart_events(evt).Priority, Array("restart", Me, m_restart_events(evt))
        Next
        For Each evt in m_reset_events.Keys()
            AddPinEventListener m_reset_events(evt).EventName, m_name & "_" & evt & "_reset", "ShotGroupEventHandler", m_priority+m_reset_events(evt).Priority, Array("reset", Me, m_reset_events(evt))
        Next
        For Each evt in m_rotate_events.Keys()
            AddPinEventListener m_rotate_events(evt).EventName, m_name & "_" & evt & "_rotate", "ShotGroupEventHandler", m_priority+m_rotate_events(evt).Priority, Array("rotate", Me, m_rotate_events(evt))
        Next
        For Each evt in m_rotate_left_events.Keys()
            AddPinEventListener m_rotate_left_events(evt).EventName, m_name & "_" & evt & "_rotate_left", "ShotGroupEventHandler", m_priority+m_rotate_left_events(evt).Priority, Array("rotate_left", Me, m_rotate_left_events(evt))
        Next
        For Each evt in m_rotate_right_events.Keys()
            AddPinEventListener m_rotate_right_events(evt).EventName, m_name & "_" & evt & "_rotate_right", "ShotGroupEventHandler", m_priority+m_rotate_right_events(evt).Priority, Array("rotate_right", Me, m_rotate_right_events(evt))
        Next
        Dim shot_name
        For Each shot_name in m_shots
            AddPinEventListener shot_name & "_hit", m_name & "_" & m_mode & "_hit", "ShotGroupEventHandler", m_priority, Array("hit", Me, Null)
            AddPlayerStateEventListener "shot_" & shot_name, m_name & "_" & m_mode & "_complete", -1, "ShotGroupEventHandler", m_priority, Array("complete", Me, Null)
        Next
    End Sub

    Public Sub Deactivate
        Dim evt
        m_rotation_enabled = True
        For Each evt in m_enable_rotation_events.Keys()
            RemovePinEventListener m_enable_rotation_events(evt).EventName, m_name & "_" & evt & "_enable_rotation"
        Next
        For Each evt in m_disable_rotation_events.Keys()
            RemovePinEventListener m_disable_rotation_events(evt).EventName, m_name & "_" & evt & "_disable_rotation"
        Next
        For Each evt in m_restart_events.Keys()
            RemovePinEventListener m_restart_events(evt).EventName, m_name & "_" & evt & "_restart"
        Next
        For Each evt in m_reset_events.Keys()
            RemovePinEventListener m_reset_events(evt).EventName, m_name & "_" & evt & "_reset"
        Next
        For Each evt in m_rotate_events.Keys()
            RemovePinEventListener m_rotate_events(evt).EventName, m_name & "_" & evt & "_rotate"
        Next
        For Each evt in m_rotate_left_events.Keys()
            RemovePinEventListener m_rotate_left_events(evt).EventName, m_name & "_" & evt & "_rotate_left"
        Next
        For Each evt in m_rotate_right_events.Keys()
            RemovePinEventListener m_rotate_right_events(evt).EventName, m_name & "_" & evt & "_rotate_right"
        Next
        Dim shot_name
        For Each shot_name in m_shots
            RemovePinEventListener shot_name & "_hit", m_name & "_" & m_mode & "_hit"
            RemovePlayerStateEventListener "shot_" & shot_name, m_name & "_" & m_mode & "_complete"
        Next
    End Sub

    Public Function CheckForComplete()
        If m_isRotating Then
            Exit Function
        End If
        Dim state : state = CommonState()
        If state = m_common_state Then
            Exit Function
        End If

        m_common_state = state

        If state = Empty Then
            Exit Function
        End If

        Dim state_name : state_name = Glf_ShotProfiles(m_base_device.Mode.Shots(m_shots(0)).Profile).StateName(m_common_state)

        Log "Shot group is complete with state: " & state_name
        Dim kwargs : Set kwargs = GlfKwargs()
    With kwargs
            .Add "state", state_name
        End With
        DispatchPinEvent m_name & "_complete", kwargs
        DispatchPinEvent m_name & "_" & state_name & "_complete", Null

    End Function

    Public Sub Enable()
        Dim shot
        Log "Enabling"
        For Each shot in m_shots
            m_base_device.Mode.Shots(shot).Enable()
        Next
        Dim evt
    End Sub

    Public Sub Disable()
        Dim shot
        For Each shot in m_shots
            m_base_device.Mode.Shots(shot).Disable()
        Next
    End Sub

    Public Sub EnableRotation
        Log "Enabling Rotation"
        m_rotation_enabled = True
    End Sub

    Public Sub DisableRotation
        Log "Disabling Rotation"
        m_rotation_enabled = False
    End Sub

    Public Sub Restart
        Dim shot
        For Each shot in m_shots
            m_base_device.Mode.Shots(shot).Restart()
        Next
    End Sub

    Public Sub Reset
        Dim shot
        For Each shot in m_shots
            m_base_device.Mode.Shots(shot).Reset()
        Next
    End Sub

    Public Sub Rotate(direction)

        If m_rotation_enabled = False Then
            Exit Sub
        End If
        Dim shots_to_rotate : shots_to_rotate = Array()

        m_temp_shots.RemoveAll
        Dim shot
        For Each shot in m_shots
            If m_base_device.Mode.Shots(shot).CanRotate Then
                m_temp_shots.Add shot, m_base_device.Mode.Shots(shot)
            End If
        Next

        Dim shot_states, x
        x=0
        ReDim shot_states(UBound(m_temp_shots.Keys))
        For Each shot in m_temp_shots.Keys
            shot_states(x) = m_temp_shots(shot).State
            x=x+1
        Next

        If direction = Empty Then
            direction = m_rotation_pattern(0)
            Glf_RotateArray m_rotation_pattern, "l"
        End If

        shot_states = Glf_RotateArray(shot_states, direction)
        x=0
        m_isRotating = True
        For Each shot in m_temp_shots.Keys
            Log "Rotating Shot:" & shot
            m_temp_shots(shot).Jump shot_states(x), True, False
            x=x+1
        Next
        m_isRotating = False
        CheckForComplete()
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

    Public Function ToYaml
        Dim yaml
        yaml = "  " & m_name & ":" & vbCrLf
        yaml = yaml & "    shots: " & Join(m_shots, ",") & vbCrLf

        If UBound(m_enable_rotation_events.Keys) > -1 Then
            yaml = yaml & "    enable_rotation_events: "
            x=0
            For Each key in m_enable_rotation_events.keys
                yaml = yaml & m_enable_rotation_events(key).Raw
                If x <> UBound(m_enable_rotation_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        If UBound(m_disable_rotation_events.Keys) > -1 Then
            yaml = yaml & "    disable_rotation_events: "
            x=0
            For Each key in m_disable_rotation_events.keys
                yaml = yaml & m_disable_rotation_events(key).Raw
                If x <> UBound(m_disable_rotation_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        If UBound(m_restart_events.Keys) > -1 Then
            yaml = yaml & "    restart_events: "
            x=0
            For Each key in m_restart_events.keys
                yaml = yaml & m_restart_events(key).Raw
                If x <> UBound(m_restart_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        If UBound(m_reset_events.Keys) > -1 Then
            yaml = yaml & "    reset_events: "
            x=0
            For Each key in m_reset_events.keys
                yaml = yaml & m_reset_events(key).Raw
                If x <> UBound(m_reset_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        If UBound(m_rotate_events.Keys) > -1 Then
            yaml = yaml & "    rotate_events: "
            x=0
            For Each key in m_rotate_events.keys
                yaml = yaml & m_rotate_events(key).Raw
                If x <> UBound(m_rotate_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        If UBound(m_rotate_left_events.Keys) > -1 Then
            yaml = yaml & "    rotate_left_events: "
            x=0
            For Each key in m_rotate_left_events.keys
                yaml = yaml & m_rotate_left_events(key).Raw
                If x <> UBound(m_rotate_left_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        If UBound(m_rotate_right_events.Keys) > -1 Then
            yaml = yaml & "    rotate_right_events: "
            x=0
            For Each key in m_rotate_right_events.keys
                yaml = yaml & m_rotate_right_events(key).Raw
                If x <> UBound(m_rotate_right_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        If UBound(m_base_device.EnableEvents.Keys) > -1 Then
            yaml = yaml & "    enable_events: "
            x=0
            For Each key in m_base_device.EnableEvents.keys
                yaml = yaml & m_base_device.EnableEvents(key).Raw
                If x <> UBound(m_base_device.EnableEvents.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        If UBound(m_base_device.DisableEvents.Keys) > -1 Then
            yaml = yaml & "    disable_events: "
            x=0
            For Each key in m_base_device.DisableEvents.keys
                yaml = yaml & m_base_device.DisableEvents(key).Raw
                If x <> UBound(m_base_device.DisableEvents.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If


        ToYaml = yaml
        End Function
End Class

Function ShotGroupEventHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim device : Set device = ownProps(1)
    If Not IsNull(ownProps(2)) Then
        Dim glf_event : Set glf_event = ownProps(2)
        If glf_event.Evaluate() = False Then
            If IsObject(args(1)) Then
                Set ShotGroupEventHandler = kwargs
            Else
                ShotGroupEventHandler = kwargs
            End If
            Exit Function
        End If
    End If
    Select Case evt
        Case "hit"
            DispatchPinEvent device.Name & "_hit", Null
            DispatchPinEvent device.Name & "_" & kwargs("state") & "_hit", Null
        Case "complete"
            device.CheckForComplete
        Case "enable_rotation"
            device.EnableRotation
        Case "disable_rotation"
            device.DisableRotation
        Case "restart"
            device.Restart
        Case "reset"
            device.Reset
        Case "rotate"
            device.Rotate Empty
        Case "rotate_left"
            device.Rotate "l"
        Case "rotate_right"
            device.Rotate "r"
    End Select
    If IsObject(args(1)) Then
        Set ShotGroupEventHandler = kwargs
    Else
        ShotGroupEventHandler = kwargs
    End If

End Function

Class GlfShotProfile

    Private m_name
    Private m_advance_on_hit
    Private m_block
    Private m_loop
    Private m_rotation_pattern
    Private m_states
    Private m_states_not_to_rotate
    Private m_states_to_rotate

    Public Property Get Name(): Name = m_name: End Property
    Public Property Get AdvanceOnHit(): AdvanceOnHit = m_advance_on_hit: End Property
    Public Property Get Block(): Block = m_block: End Property
    Public Property Let Block(input): m_block = input: End Property
    Public Property Get ProfileLoop(): ProfileLoop = m_loop: End Property
    Public Property Get RotationPattern(): RotationPattern = m_rotation_pattern: End Property
    Public Property Get States(name)
        If m_states.Exists(name) Then
            Set States = m_states(name)
        Else
            Dim new_state : Set new_state = (new GlfShowPlayerItem)()
            m_states.Add name, new_state
            Set States = new_state
        End If
    End Property
    Public Property Get StateForIndex(index)
        Dim stateItems : stateItems = m_states.Items()
        If UBound(stateItems) >= index Then
            Set StateForIndex = stateItems(index)
        Else
            StateForIndex = Null
        End If
    End Property
    Public Property Get StateName(index)
        Dim stateKeys : stateKeys = m_states.Keys()
        If UBound(stateKeys) >= index Then
            StateName = stateKeys(index)
        Else
            StateName = Empty
        End If
    End Property
    Public Property Get StatesCount()
        StatesCount = UBound(m_states.Keys())
    End Property

    Public Property Get StateNamesToRotate(): StateNamesToRotate = m_states_to_rotate: End Property
    Public Property Let StateNamesToRotate(input): m_states_to_rotate = input: End Property
    Public Property Get StateNamesNotToRotate(): StateNamesNotToRotate = m_states_not_to_rotate: End Property
    Public Property Let StateNamesNotToRotate(input): m_states_not_to_rotate = input: End Property

  Public default Function init(name)
        m_name = "shotprofile_" & name
        m_advance_on_hit = True
        m_block = False
        m_loop = False
        m_rotation_pattern = Array("r")
        m_states_to_rotate = Array()
        m_states_not_to_rotate = Array()
        Set m_states = CreateObject("Scripting.Dictionary")
        Set Init = Me
  End Function

    Public Function ToYaml()
        Dim yaml
        yaml = yaml & "  " & Replace(m_name, "shotprofile_", "") & ":" & vbCrLf
        yaml = yaml & "    states: " & vbCrLf
        Dim token,evt,state,x : x = 0
        For Each evt in m_states.Keys
            Set state = StateForIndex(x)
            yaml = yaml & "     - name: " & StateName(x) & vbCrLf
            yaml = yaml & "       show: " & state.Show.Name & vbCrLf
            yaml = yaml & "       loops: " & m_states(evt).Loops & vbCrLf
            yaml = yaml & "       speed: " & m_states(evt).Speed & vbCrLf
            yaml = yaml & "       sync_ms: " & m_states(evt).SyncMs & vbCrLf
            If UBound(m_states(evt).EventsWhenCompleted) > -1 Then
                yaml = yaml & "       events_when_completed: " & Join(m_states(evt).EventsWhenCompleted, ",") & vbCrLf
            End If

            If Ubound(state.Tokens().Keys)>-1 Then
                yaml = yaml & "       show_tokens: " & vbCrLf
                Dim state_tokens : Set state_tokens = state.Tokens()
                For Each token in state_tokens.Keys()
                    yaml = yaml & "         " & token & ": " & state_tokens(token) & vbCrLf
                Next
            End If

            'yaml = yaml & "     block: " & m_block & vbCrLf
            'yaml = yaml & "     advance_on_hit: " & m_advance_on_hit & vbCrLf
            'yaml = yaml & "     loop: " & m_loop & vbCrLf
            'yaml = yaml & "     rotation_pattern: " & m_rotation_pattern & vbCrLf
            'yaml = yaml & "     state_names_to_not_rotate: " & m_states_not_to_rotate & vbCrLf
            'yaml = yaml & "     state_names_to_rotate: " & m_states_to_rotate & vbCrLf
            x = x +1
        Next
        ToYaml = yaml
    End Function

End Class

Class GlfShot

    Private m_name
    Private m_mode
    Private m_priority
    Private m_base_device
    Private m_debug
    Private m_profile
    Private m_control_events
    Private m_advance_events
    Private m_reset_events
    Private m_restart_events
    Private m_switches
    Private m_tokens
    Private m_hit_events
    Private m_start_enabled
    Private m_show_cache
    Private m_state
    Private m_enabled
    Private m_player_var_name
    Private m_persist
    Private m_internal_cache_id

    Public Property Get Name(): Name = m_name: End Property
    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property
    Public Property Get Profile(): Profile = m_profile: End Property
    Public Property Get ShotKey(): ShotKey = m_name & "_" & m_profile: End Property
    Public Property Get State(): State = m_state: End Property
    Public Property Get Tokens() : Set Tokens = m_tokens : End Property
    Public Property Get CanRotate()
        If Glf_IsInArray(Glf_ShotProfiles(m_profile).StateName(m_state), Glf_ShotProfiles(m_profile).StateNamesNotToRotate) Then
            CanRotate = False
        Else
            CanRotate = True
        End If
    End Property

    Public Property Get InternalCacheId(): InternalCacheId = m_internal_cache_id: End Property
    Public Property Let InternalCacheId(input): m_internal_cache_id = input: End Property

    Public Property Let EnableEvents(value) : m_base_device.EnableEvents = value : End Property
    Public Property Let DisableEvents(value) : m_base_device.DisableEvents = value : End Property
    Public Property Get ControlEvents()
            Dim control_event_count : control_event_count = UBound(m_control_events.Keys)
            Dim newEvent : Set newEvent = (new GlfShotControlEvent)()
            m_control_events.Add CStr(control_event_count+1), newEvent
            Set ControlEvents = newEvent
    End Property
    Public Property Let AdvanceEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_advance_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let ResetEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_reset_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let RestartEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_restart_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let Persist(value) : m_persist = value : End Property
    Public Property Let Profile(value) : m_profile = value : End Property
    Public Property Let Switch(value) : m_switches = Array(value) : End Property
    Public Property Let Switches(value) : m_switches = value : End Property
    Public Property Let StartEnabled(value) : m_start_enabled = value : End Property
    Public Property Let HitEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_hit_events.Add newEvent.Raw, newEvent
        Next
    End Property

  Public default Function init(name, mode)
        m_name = name
        m_mode = mode.Name
        m_priority = mode.Priority
        m_internal_cache_id = -1
        m_enabled = False
        m_persist = True
        Set m_base_device = (new GlfBaseModeDevice)(mode, "shot", Me)
        m_debug = False
        m_profile = "default"
        m_player_var_name = "shot_" & m_name
        m_state = -1
        m_switches = Array()
        m_start_enabled = Empty
        Set m_hit_events = CreateObject("Scripting.Dictionary")
        Set m_tokens = CreateObject("Scripting.Dictionary")
        Set m_show_cache = CreateObject("Scripting.Dictionary")
        Set m_advance_events = CreateObject("Scripting.Dictionary")
        Set m_control_events = CreateObject("Scripting.Dictionary")
        Set m_reset_events = CreateObject("Scripting.Dictionary")
        Set m_restart_events = CreateObject("Scripting.Dictionary")

        Set Init = Me
  End Function

    Public Sub Activate()
        If GetPlayerState(m_player_var_name) = False Then
            m_state = 0
            If m_persist Then
                SetPlayerState m_player_var_name, 0
            End If
        Else
            m_state = GetPlayerState(m_player_var_name)
        End If
        If m_start_enabled = True Then
            Enable()
        Else
            If IsEmpty(m_start_enabled) And UBound(m_base_device.EnableEvents.Keys) = -1 Then
                Enable()
            End If
        End If
    End Sub

    Public Sub Deactivate()
        Disable()
        Dim evt
        For Each evt in m_switches
            RemovePinEventListener evt, m_mode & "_" & m_name & "_hit"
        Next
        For Each evt in m_hit_events.Keys
            RemovePinEventListener m_hit_events(evt).EventName, m_mode & "_" & m_name & "_" & evt & "_hit"
        Next
        For Each evt in m_advance_events.Keys
            RemovePinEventListener m_advance_events(evt).EventName, m_mode & "_" & m_name & "_" & evt & "_advance"
        Next
        For Each evt in m_control_events.Keys
            Dim cEvt
            For Each cEvt in m_control_events(evt).Events().Keys
                Dim control_events_events : Set control_events_events = m_control_events(evt).Events()
                RemovePinEventListener control_events_events(cEvt).EventName, m_mode & "_" & m_name & "_control_" & cEvt
            Next
        Next
        For Each evt in m_reset_events.Keys
            RemovePinEventListener m_reset_events(evt).EventName, m_mode & "_" & m_name & "_" & evt & "_reset"
        Next
        For Each evt in m_restart_events.Keys
            RemovePinEventListener m_restart_events(evt).EventName, m_mode & "_" & m_name & "_" & evt & "_restart"
        Next
    End Sub

    Public Sub Enable()
        Log "Enabling"
        m_enabled = True
        Dim evt
        For Each evt in m_switches
            AddPinEventListener evt & "_active", m_mode & "_" & m_name & "_hit", "ShotEventHandler", m_priority, Array("hit", Me, Null)
        Next
        For Each evt in m_hit_events.Keys
            AddPinEventListener m_hit_events(evt).EventName, m_mode & "_" & m_name & "_" & evt & "_hit", "ShotEventHandler", m_priority, Array("hit", Me, m_hit_events(evt))
        Next
        For Each evt in m_advance_events.Keys
            AddPinEventListener m_advance_events(evt).EventName, m_mode & "_" & m_name & "_" & evt & "_advance", "ShotEventHandler", m_priority, Array("advance", Me, m_advance_events(evt))
        Next
        For Each evt in m_control_events.Keys
            Dim cEvt
            For Each cEvt in m_control_events(evt).Events().Keys
                Dim control_events_events : Set control_events_events = m_control_events(evt).Events()
                AddPinEventListener control_events_events(cEvt).EventName, m_mode & "_" & m_name & "_control_" & cEvt, "ShotEventHandler", m_priority+control_events_events(cEvt).Priority, Array("control", Me, control_events_events(cEvt), m_control_events(evt))
            Next
        Next
        For Each evt in m_reset_events.Keys
            AddPinEventListener m_reset_events(evt).EventName, m_mode & "_" & m_name & "_" & evt & "_reset", "ShotEventHandler", m_priority, Array("reset", Me, m_reset_events(evt))
        Next
        For Each evt in m_restart_events.Keys
            AddPinEventListener m_restart_events(evt).EventName, m_mode & "_" & m_name & "_" & evt & "_restart", "ShotEventHandler", m_priority, Array("restart", Me, m_restart_events(evt))
        Next
        'Play the show for the active state
        PlayShowForState(m_state)
    End Sub

    Public Sub Disable()
        Log "Disabling"
        m_enabled = False
        Dim evt
        For Each evt in m_hit_events.Keys
            RemovePinEventListener m_hit_events(evt).EventName, m_mode & "_" & m_name & "_" & evt  & "_hit"
        Next
        Dim x
        For x=0 to Glf_ShotProfiles(m_profile).StatesCount()
            StopShowForState(x)
        Next
    End Sub

    Private Sub StopShowForState(state)
        Dim profileState : Set profileState = Glf_ShotProfiles(m_profile).StateForIndex(state)
        Log "Removing Shot Show: " & m_mode & "_" & m_name & ". Key: " & profileState.Key
        If glf_running_shows.Exists(m_mode & "_" & CStr(state) & "_" & m_name & "_" & profileState.Key) Then
            glf_running_shows(m_mode & "_" & CStr(state) & "_" & m_name & "_" & profileState.Key).StopRunningShow()
        End If
    End Sub

    Private Sub PlayShowForState(state)
        If m_enabled = False Then
            Exit Sub
        End If
        Dim profileState : Set profileState = Glf_ShotProfiles(m_profile).StateForIndex(state)
        Log "Playing Shot Show: " & m_mode & "_" & m_name & ". Key: " & profileState.Key
        If IsObject(profileState) Then
            If Not IsNull(profileState.Show) Then
                Dim new_running_show
                Set new_running_show = (new GlfRunningShow)(m_mode & "_" & CStr(m_state) & "_" & m_name & "_" & profileState.Key, profileState.Key, profileState, m_priority + profileState.Priority, m_tokens, m_internal_cache_id)
            End If
        End If
    End Sub

    Public Sub Hit(evt)
        If m_enabled = False Then
            Exit Sub
        End If

        Dim profile : Set profile = Glf_ShotProfiles(m_profile)
        Dim old_state : old_state = m_state
        Log "Hit! Profile: "&m_profile&", State: " & profile.StateName(m_state)

        Dim advancing
        If profile.AdvanceOnHit Then
            Log "Advancing shot because advance_on_hit is True."
            advancing = Advance(False)
        Else
            Log "Not advancing shot"
            advancing = False
        End If


        If profile.Block Then
            Glf_EventBlocks(evt).Add Name, True
        Else
            Glf_EventBlocks(evt).Add ShotKey, True
        End If
        Dim kwargs : Set kwargs = GlfKwargs()
    With kwargs
            .Add "profile", m_profile
            .Add "state", profile.StateName(old_state)
            .Add "advancing", advancing
        End With

        DispatchPinEvent m_name & "_hit", kwargs
        DispatchPinEvent m_name & "_" & m_profile & "_hit", kwargs
        DispatchPinEvent m_name & "_" & m_profile & "_" & profile.StateName(old_state) & "_hit", kwargs
        DispatchPinEvent m_name & "_" & profile.StateName(old_state) & "_hit", kwargs

    End Sub

    Public Function Advance(force)

        If m_enabled = False And force = False Then
            Advance = False
            Exit Function
        End If
        Dim profile : Set profile = Glf_ShotProfiles(m_profile)

        Log "Advancing 1 step. Profile: "&m_profile&", Current State: " & profile.StateName(m_state)

        If profile.StatesCount() = m_state Then
            If profile.ProfileLoop Then
                StopShowForState(m_state)
                m_state = 0
                If m_persist Then
                    SetPlayerState m_player_var_name, 0
                End If
                PlayShowForState(m_state)
            Else
                Advance = False
                Exit Function
            End If
        Else
            StopShowForState(m_state)
            m_state = m_state + 1
            If m_persist Then
                SetPlayerState m_player_var_name, m_state
            End If
            PlayShowForState(m_state)
        End If

        Advance = True

    End Function

    Public Sub Reset()
        Jump 0, True, False
    End Sub

    Public Sub Jump(state, force, force_show)
        Log "Received jump request. State: " & state & ", Force: "& force

        If Not m_enabled And Not force Then
            Log "Profile is disabled and force is False. Not jumping"
            Exit Sub
        End If
        If state = m_state And Not force_show Then
            Log "Shot is already in the jump destination state"
            Exit Sub
        End If
        Log "Jumping to profile state " & state

        StopShowForState(m_state)
        m_state = state
        If m_persist Then
            SetPlayerState m_player_var_name, m_state
        End If
        PlayShowForState(m_state)
    End Sub

    Public Sub Restart()
        Reset()
        Enable()
    End Sub


    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

    Public Function ToYaml
        Dim yaml
        yaml = "  " & Replace(m_name, "shot_", "") & ":" & vbCrLf
        If UBound(m_switches) = 0 Then
            yaml = yaml & "    switch: " & m_switches(0) & vbCrLf
        ElseIf UBound(m_switches) > 0 Then
            yaml = yaml & "    switches: " & Join(m_switches, ",") & vbCrLf
        End If
        yaml = yaml & "    show_tokens: " & vbCrLf
        dim key
        For Each key in m_tokens.keys
            If IsArray(m_tokens(key)) Then
                yaml = yaml & "      " & key & ": " & Join(m_tokens(key), ",") & vbCrLf
            Else
                yaml = yaml & "      " & key & ": " & m_tokens(key) & vbCrLf
            End If
        Next

        Dim enable_events_keys : enable_events_keys = m_base_device.EnableEvents().Keys
        Dim enable_events : Set enable_events = m_base_device.EnableEvents()
        If UBound(enable_events_keys) > -1 Then
            yaml = yaml & "    enable_events: "
            x=0
            For Each key in enable_events_keys
                yaml = yaml & enable_events(key).Raw
                If x <> UBound(enable_events_keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If
        Dim disable_events_keys : disable_events_keys = m_base_device.DisableEvents().Keys
        Dim disable_events : Set disable_events = m_base_device.DisableEvents()
        If UBound(disable_events_keys) > -1 Then
            yaml = yaml & "    disable_events: "
            x=0
            For Each key in disable_events_keys
                yaml = yaml & disable_events(key).Raw
                If x <> UBound(disable_events_keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        If UBound(m_advance_events.Keys) > -1 Then
            yaml = yaml & "    advance_events: "
            x=0
            For Each key in m_advance_events.keys
                yaml = yaml & m_advance_events(key).Raw
                If x <> UBound(m_advance_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        If UBound(m_hit_events.Keys) > -1 Then
            yaml = yaml & "    hit_events: "
            x=0
            For Each key in m_hit_events.keys
                yaml = yaml & m_hit_events(key).Raw
                If x <> UBound(m_hit_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        yaml = yaml & "    profile: " & m_profile & vbCrLf
        If Not IsEmpty(m_start_enabled) Then
            yaml = yaml & "    start_enabled: " & m_start_enabled & vbCrLf
        End If
        If UBound(m_restart_events.Keys) > -1 Then
            yaml = yaml & "    restart_events: "
            x=0
            For Each key in m_restart_events.keys
                yaml = yaml & m_restart_events(key).Raw
                If x <> UBound(m_restart_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        If UBound(m_reset_events.Keys) > -1 Then
            yaml = yaml & "    reset_events: "
            x=0
            For Each key in m_reset_events.keys
                yaml = yaml & m_reset_events(key).Raw
                If x <> UBound(m_reset_events.Keys) Then
                    yaml = yaml & ", "
                End If
                x = x + 1
            Next
            yaml = yaml & vbCrLf
        End If

        If UBound(m_control_events.Keys) > -1 Then
            yaml = yaml & "    control_events: " & vbCrLf
            For Each key in m_control_events.keys
                yaml = yaml & "      - events: "
                Dim cEvt
                x=0
                For Each cEvt in m_control_events(key).Events
                    yaml = yaml & cEvt
                    If x <> UBound(m_control_events(key).Events) Then
                        yaml = yaml & ", "
                    End If
                    x = x + 1
                Next
                yaml = yaml & vbCrLf
                yaml = yaml & "        state: " & m_control_events(key).State & vbCrLf
            Next
        End If

        ToYaml = yaml
    End Function
End Class

Function ShotEventHandler(args)
    Dim ownProps, kwargs, e
    ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    e = args(2)
    Dim evt : evt = ownProps(0)
    Dim shot : Set shot = ownProps(1)
    If Not IsNull(ownProps(2)) Then
        Dim glf_event : Set glf_event = ownProps(2)
        If glf_event.Evaluate() = False Then
            If IsObject(args(1)) Then
                Set ShotEventHandler = kwargs
            Else
                ShotEventHandler = kwargs
            End If
            Exit Function
        End If
    End If
    Select Case evt
        Case "activate"
            shot.Activate
        Case "deactivate"
            shot.Deactivate
        Case "enable"
            shot.Enable
        Case "hit"
            If Not Glf_EventBlocks(e).Exists(shot.Name) And Not Glf_EventBlocks(e).Exists(shot.ShotKey) Then
                shot.Hit e
            End If
        Case "advance"
            shot.Advance False
        Case "control"
            shot.Jump ownProps(3).State, ownProps(3).Force, ownProps(3).ForceShow
        Case "reset"
            shot.Reset
        Case "restart"
            shot.Restart

    End Select
    If IsObject(args(1)) Then
        Set ShotEventHandler = kwargs
    Else
        ShotEventHandler = kwargs
    End If
End Function

Class GlfShotControlEvent
  Private m_events, m_state, m_force, m_force_show

  Public Property Get Events(): Set Events = m_events: End Property
    Public Property Let Events(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_events.Add newEvent.Raw, newEvent
        Next
    End Property

    Public Property Get State(): State = m_state End Property
    Public Property Let State(input): m_state = input End Property

    Public Property Get Force(): Force = m_force: End Property
  Public Property Let Force(input): m_force = input: End Property

  Public Property Get ForceShow(): ForceShow = m_force_show: End Property
  Public Property Let ForceShow(input): m_force_show = input: End Property

  Public default Function init()
        Set m_events = CreateObject("Scripting.Dictionary")
        m_state = 0
        m_force = True
        m_force_show = False
      Set Init = Me
  End Function

End Class

Class GlfShowPlayer

    Private m_priority
    Private m_mode
    Private m_events
    Private m_eventValues
    Private m_debug
    Private m_name
    Private m_value
    private m_base_device

    Public Property Get Name() : Name = "show_player" : End Property
    Public Property Get EventShows() : EventShows = m_eventValues.Items() : End Property
    Public Property Get EventName(name)

        Dim newEvent : Set newEvent = (new GlfEvent)(name)
        m_events.Add newEvent.Raw, newEvent
        Dim new_show : Set new_show = (new GlfShowPlayerItem)()
        m_eventValues.Add newEvent.Raw, new_show
        Set EventName = new_show

    End Property
    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

  Public default Function init(mode)
        m_name = "show_player_" & mode.name
        m_mode = mode.Name
        m_priority = mode.Priority
        m_debug = False
        Set m_events = CreateObject("Scripting.Dictionary")
        Set m_eventValues = CreateObject("Scripting.Dictionary")
        Set m_base_device = (new GlfBaseModeDevice)(mode, "show_player", Me)
        Set Init = Me
  End Function

    Public Sub Activate()
        Dim evt
        For Each evt In m_events.Keys()
            AddPinEventListener m_events(evt).EventName, m_mode & "_" & m_eventValues(evt).Key & "_show_player_play", "ShowPlayerEventHandler", m_priority+m_events(evt).Priority, Array("play", Me, evt)
        Next
    End Sub

    Public Sub Deactivate()
        Dim evt
        For Each evt In m_events.Keys()
            RemovePinEventListener m_events(evt).EventName, m_mode & "_" & m_eventValues(evt).Key & "_show_player_play"
            PlayOff m_eventValues(evt).Key
        Next
    End Sub

    Public Function Play(evt)
        Play = Empty
        If m_events(evt).Evaluate() Then
            If m_eventValues(evt).Action = "stop" Then
                PlayOff m_eventValues(evt).Key
            Else
                Dim new_running_show
                Set new_running_show = (new GlfRunningShow)(m_name & "_" & m_eventValues(evt).Key, m_eventValues(evt).Key, m_eventValues(evt), m_priority, Null, Null)
                If m_eventValues(evt).BlockQueue = True Then
                    Play = m_name & "_" & m_eventValues(evt).Key & "_" & m_eventValues(evt).Key  & "_unblock_queue"
                End If
            End If
        End If
    End Function

    Public Sub PlayOff(key)
        If glf_running_shows.Exists(m_name & "_" & key) Then
            glf_running_shows(m_name & "_" & key).StopRunningShow()
        End If
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

    Public Function ToYaml()
        Dim yaml
        Dim evt
        If UBound(m_eventValues.Keys) > -1 Then
            For Each key in m_eventValues.keys
                yaml = yaml & "  " & key & ": " & vbCrLf
                yaml = yaml & m_eventValues(key).ToYaml
            Next
            yaml = yaml & vbCrLf
        End If
        ToYaml = yaml
    End Function

End Class

Function ShowPlayerEventHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim ShowPlayer : Set ShowPlayer = ownProps(1)
    Select Case evt
        Case "activate"
            ShowPlayer.Activate
        Case "deactivate"
            ShowPlayer.Deactivate
        Case "play"
            Dim block_queue
            block_queue = ShowPlayer.Play(ownProps(2))
            If Not IsEmpty(block_queue) Then
                kwargs.Add "wait_for", block_queue
            End If
    End Select
    If IsObject(args(1)) Then
        Set ShowPlayerEventHandler = kwargs
    Else
        ShowPlayerEventHandler = kwargs
    End If
End Function

Class GlfShowPlayerItem
  Private m_key, m_show, m_loops, m_speed, m_tokens, m_action, m_syncms, m_duration, m_priority, m_internal_cache_id
    Private m_block_queue
    Private m_events_when_completed
    Private m_color_lookup

  Public Property Get InternalCacheId(): InternalCacheId = m_internal_cache_id: End Property
    Public Property Let InternalCacheId(input): m_internal_cache_id = input: End Property

    Public Property Get Action(): Action = m_action: End Property
    Public Property Let Action(input): m_action = input: End Property

    Public Property Get Key(): Key = m_key End Property
    Public Property Let Key(input): m_key = input End Property

    Public Property Get Priority(): Priority = m_priority End Property
    Public Property Let Priority(input): m_priority = input End Property

    Public Property Get ColorLookup(): ColorLookup = m_color_lookup End Property
    Public Property Let ColorLookup(input): m_color_lookup = input End Property

    Public Property Get Show()
        If IsNull(m_show) Then
            Show = Null
        Else
            Set Show = m_show
        End If
    End Property
  Public Property Let Show(input)
        'msgbox "input:" & input
        If glf_shows.Exists(input) Then
            Set m_show = glf_shows(input)
        End If
    End Property

  Public Property Get Loops(): Loops = m_loops: End Property
  Public Property Let Loops(input): m_loops = input: End Property

  Public Property Get Speed(): Speed = m_speed: End Property
  Public Property Let Speed(input): m_speed = input: End Property

    Public Property Get SyncMs(): SyncMs = m_syncms: End Property
    Public Property Let SyncMs(input): m_syncms = input: End Property

    Public Property Get BlockQueue(): BlockQueue = m_block_queue : End Property
    Public Property Let BlockQueue(input): m_block_queue = input : End Property

    Public Property Get EventsWhenCompleted(): EventsWhenCompleted = m_events_when_completed : End Property
    Public Property Let EventsWhenCompleted(input): m_events_when_completed = input: End Property

    Public Property Get Tokens()
        Set Tokens = m_tokens
    End Property

    Public Function ToYaml()
        Dim yaml
        yaml = yaml & "    " & m_show.Name &": " & vbCrLf
        If m_action <> "play" Then
            yaml = yaml & "      action: " & m_action & vbCrLf
        End If
        If m_key <> "" Then
            yaml = yaml & "      key: " & m_key & vbCrLf
        End If
        If m_priority <> 0 Then
            yaml = yaml & "      priority: " & m_priority & vbCrLf
        End If
        If m_loops > -1 Then
            yaml = yaml & "      loops: " & m_loops & vbCrLf
        End If
        If m_speed <> 1 Then
            yaml = yaml & "      speed: " & m_speed & vbCrLf
        End If
        If UBound(m_tokens.Keys) > -1 Then
            yaml = yaml & "      show_tokens: " & vbCrLf
            Dim key
            For Each key in m_tokens.Keys
                yaml = yaml & "        " & key & ": " & m_tokens(key) & vbCrLf
            Next
        End If

        If UBound(m_events_when_completed) > -1 Then
            yaml = yaml & "      events_when_completed: " & Join(m_events_when_completed, ",") & vbCrLf
        End If

        If m_syncms > 0 Then
            yaml = yaml & "      sync_ms: " & m_syncms & vbCrLf
        End If
        ToYaml = yaml
    End Function

  Public default Function init()
        m_action = "play"
        m_key = ""
        m_priority = 0
        m_loops = -1
        m_internal_cache_id = -1
        m_speed = 1
        m_syncms = 0
        m_show = Null
        m_color_lookup = Empty
        m_block_queue = False
        m_events_when_completed = Array()
        Set m_tokens = CreateObject("Scripting.Dictionary")
      Set Init = Me
  End Function

End Class


Class GlfShow

    Private m_name
    Private m_steps
    Private m_total_step_time

    Public Property Get Name(): Name = m_name: End Property

    Public Property Get Steps() : Set Steps = m_steps : End Property

    Public Function StepAtIndex(index)
        Dim step_at_index_items : step_at_index_items = m_steps.Items()
        Set StepAtIndex = step_at_index_items(index)
    End Function

    Public default Function init(name)
        m_name = name
        m_total_step_time = 0
        Set m_steps = CreateObject("Scripting.Dictionary")
        Set Init = Me
  End Function

    Public Function AddStep(absolute_time, relative_time, duration)
        Dim new_step : Set new_step = (new GlfShowStep)()
        new_step.Duration = duration
        new_step.RelativeTime = relative_time
        new_step.AbsoluteTime = absolute_time
        new_step.IsLastStep = True

        'Add a empty first step if if show does not start right away
        If UBound(m_steps.Keys) = -1 Then
            If Not IsNull(new_step.Time) And new_step.Time <> 0 Then
                Dim empty_step : Set empty_step = (new GlfShowStep)()
                empty_step.Duration = new_step.Time
                m_total_step_time = new_step.Time
                m_steps.Add CStr(UBound(m_steps.Keys())+1), empty_step
            End If
        End If




        If UBound(m_steps.Keys()) > -1 Then
            Dim steps_items : steps_items = m_steps.Items()
            Dim prevStep : Set prevStep = steps_items(UBound(m_steps.Keys()))
            prevStep.IsLastStep = False
            'need to work out previous steps duration.
            If IsNull(prevStep.Duration) Then
                'The previous steps duration needs calculating.
                'If this step has a relative time then the last steps duration is that time.
                If Not IsNull(new_step.Time) Then
                    If new_step.IsRelativeTime Then
                        prevStep.Duration = new_step.Time
                    Else
                        prevStep.Duration = new_step.Time - m_total_step_time
                    End If
                Else
                    prevStep.Duration = 1
                End If
            End If
            m_total_step_time = m_total_step_time + prevStep.Duration
        Else
            If IsNull(new_step.Duration) Then
                m_total_step_time = m_total_step_time + 1
            Else
                m_total_step_time = m_total_step_time + new_step.Time
            End If
        End If

        m_steps.Add CStr(UBound(m_steps.Keys())+1), new_step
        Set AddStep = new_step
    End Function

    Public Function ToYaml()
        Dim yaml, show_step
        For Each show_step in m_steps.Items()
            If Not IsNull(show_step.Duration) Then
                yaml = yaml & "- duration: " & show_step.Duration & "s" & vbCrLf
            Else
                If Not IsNull(show_step.AbsoluteTime) Then
                    yaml = yaml & "- time: " & show_step.AbsoluteTime & "s" & vbCrLf
                End If
                If Not IsNull(show_step.RelativeTime) Then
                    yaml = yaml & "- time: +" & show_step.RelativeTime & "s" & vbCrLf
                End If
            End If

            yaml = yaml & show_step.toYaml() & vbCrLf
        Next
        ToYaml = yaml
    End Function

End Class

Class GlfRunningShow

    Private m_key
    Private m_show_name
    Private m_show_settings
    Private m_current_step
    Private m_priority
    Private m_total_steps
    Private m_tokens
    Private m_internal_cache_id
    Private m_loops
    Private m_shows_added

    Public Property Get CacheName(): CacheName = m_show_name & "_" & m_internal_cache_id & "_" & ShowSettings.InternalCacheId: End Property
    Public Property Get Tokens(): Set Tokens = m_tokens : End Property

    Public Property Get Key(): Key = m_key: End Property
    Public Property Let Key(input): m_key = input: End Property

    Public Property Get Priority(): Priority = m_priority End Property
    Public Property Let Priority(input): m_priority = input End Property

    Public Property Get CurrentStep(): CurrentStep = m_current_step End Property
    Public Property Let CurrentStep(input): m_current_step = input End Property

    Public Property Get TotalSteps(): TotalSteps = m_total_steps End Property
    Public Property Let TotalSteps(input): m_total_steps = input End Property

    Public Property Get ShowName(): ShowName = m_show_name: End Property
    Public Property Let ShowName(input): m_show_name = input: End Property

    Public Property Get Loops(): Loops = m_loops: End Property
    Public Property Let Loops(input): m_loops = input: End Property

    Public Property Get ShowSettings(): Set ShowSettings = m_show_settings: End Property
    Public Property Let ShowSettings(input)
        Set m_show_settings = input
        m_loops = m_show_settings.Loops
    End Property

    Public Property Get ShowsAdded()
        If IsNull(m_shows_added) Then
            ShowsAdded = Null
        Else
            Set ShowsAdded = m_shows_added
        End If
    End Property

    Public Sub SetShowsAdded(shows)
        Set m_shows_added = shows
    End Sub

    Public Sub ClearShowsAdded()
        m_shows_added = Null
    End Sub

    Public default Function init(rname, rkey, show_settings, priority, tokens, cache_id)
        m_show_name = rname
        m_key = rkey
        m_current_step = 0
        m_priority = priority
        m_internal_cache_id = cache_id
        m_loops=show_settings.Loops
        Set m_show_settings = show_settings
        m_shows_added = Null
        Dim key
        Dim mergedTokens : Set mergedTokens = CreateObject("Scripting.Dictionary")
        If Not IsNull(m_show_settings.Tokens) Then
            Dim show_settings_tokens : Set show_settings_tokens = m_show_settings.Tokens()
            For Each key In show_settings_tokens.Keys()
                mergedTokens.Add key, show_settings_tokens(key)
            Next
        End If
        If Not IsNull(tokens) Then
            For Each key In tokens.Keys
                If mergedTokens.Exists(key) Then
                    mergedTokens(key) = tokens(key)
                Else
                    mergedTokens.Add key, tokens(key)
                End If
            Next
        End If
        Set m_tokens = mergedTokens

        m_total_steps = UBound(m_show_settings.Show.Steps.Keys())
        If glf_running_shows.Exists(m_show_name) Then
            glf_running_shows(m_show_name).StopRunningShow()
            glf_running_shows.Add m_show_name, Me
        Else
            glf_running_shows.Add m_show_name, Me
        End If
        Play
        Set Init = Me
  End Function

    Public Sub Play()
        'Play the show.
        Log "Playing show: " & m_show_name & " With Key: " & m_key
        GlfShowStepHandler(Array(Me))
    End Sub

    Public Sub StopRunningShow()
        Log "Removing show: " & m_show_name & " With Key: " & m_key
        Dim cached_show,light, cached_show_lights
        If glf_cached_shows.Exists(CacheName) Then
            cached_show = glf_cached_shows(CacheName)
            Set cached_show_lights = cached_show(1)
        Else
            msgbox "show " & running_show.CacheName & " not cached! Problem with caching"
        End If
        Dim lightStack
        For Each light in cached_show_lights.Keys()

            Set lightStack = glf_lightStacks(light)

            If Not lightStack.IsEmpty() Then
                lightStack.PopByKey(m_show_name & "_" & m_key)
            End If

            Dim show_key
            For Each show_key in glf_running_shows.Keys
                If Left(show_key, Len("fade_" & m_show_name & "_" & m_key & "_" & light)) = "fade_" & m_show_name & "_" & m_key & "_" & light Then
                    glf_running_shows(show_key).StopRunningShow()
                End If
            Next

            If Not lightStack.IsEmpty() Then
                ' Set the light to the next color on the stack
                Dim nextColor
                Set nextColor = lightStack.Peek()
                Glf_SetLight light, nextColor("Color")
            Else
                ' Turn off the light since there's nothing on the stack
                Glf_SetLight light, "000000"
            End If
        Next

        RemoveDelay Me.ShowName & "_" & Me.Key
        glf_running_shows.Remove m_show_name
    End Sub

    Public Sub Log(message)
        If glf_debug_level = "Debug" Then
            glf_debugLog.WriteToLog "Running Show", message
        End If
    End Sub
End Class

Function GlfShowStepHandler(args)
    Dim running_show : Set running_show = args(0)
    Dim nextStep : Set nextStep = running_show.ShowSettings.Show.StepAtIndex(running_show.CurrentStep)
    If UBound(nextStep.Lights) > -1 Then
        Dim cached_show, cached_show_seq
        If glf_cached_shows.Exists(running_show.CacheName) Then
            cached_show = glf_cached_shows(running_show.CacheName)
            cached_show_seq = cached_show(0)
        Else
            msgbox running_show.CacheName & " show not cached! Problem with caching"
        End If

        If Not IsNull(running_show.ShowsAdded()) Then
            Dim show_added
            For Each show_added in running_show.ShowsAdded().Keys()
                If glf_running_shows.Exists(show_added) Then
                    glf_running_shows(show_added).StopRunningShow()
                End If
            Next
            running_show.ClearShowsAdded()
        End If

        Dim shows_added, replacement_color
        replacement_color = Empty
        If Not IsEmpty(running_show.ShowSettings.ColorLookup) Then
            Dim show_settings_color_lookup : show_settings_color_lookup = running_show.ShowSettings.ColorLookup()
            replacement_color = show_settings_color_lookup(running_show.CurrentStep)
        End If
        shows_added = LightPlayerCallbackHandler(running_show.Key, Array(cached_show_seq(running_show.CurrentStep)), running_show.ShowName, running_show.Priority + running_show.ShowSettings.Priority, True, running_show.ShowSettings.Speed, replacement_color)
        If Not IsNull(shows_added(0)) Then
            'Fade shows were added, log them agains the current show.
            running_show.SetShowsAdded(shows_added(0))
        End If
    End If
    If UBound(nextStep.ShowsInStep().Keys())>-1 Then
        Dim show_item
        Dim show_items : show_items = nextStep.ShowsInStep().Items()
        For Each show_item in show_items
            If show_item.Action = "stop" Then
                If glf_running_shows.Exists(running_show.Key & "_" & show_item.Show & "_" & show_item.Key) Then
                    glf_running_shows(running_show.Key & "_" & show_item.Show & "_" & show_item.Key).StopRunningShow()
                End If
            Else
                Dim new_running_show
                'MsgBox running_show.Priority + running_show.ShowSettings.Priority
                'msgbox running_show.Key & "_" & show_item.Key
                Set new_running_show = (new GlfRunningShow)(show_item.Key, show_item.Key, show_item, running_show.Priority + running_show.ShowSettings.Priority, Null, Null)
            End If
        Next
    End If
    If UBound(nextStep.DOFEventsInStep().Keys())>-1 Then
        Dim dof_item
        Dim dof_items : dof_items = nextStep.DOFEventsInStep().Items()
        For Each dof_item in dof_items
            DOF dof_item.DOFEvent, dof_item.Action
        Next
    End If
    If UBound(nextStep.SlidesInStep().Keys())>-1 Then
        Dim slide_item
        Dim slide_items : slide_items = nextStep.SlidesInStep().Items()
        For Each slide_item in slide_items

        Next
    End If
    If UBound(nextStep.WidgetsInStep().Keys())>-1 Then
        Dim widget_item
        Dim widget_items : widget_items = nextStep.WidgetsInStep().Items()
        For Each widget_item in widget_items

        Next
    End If

    If nextStep.Duration = -1 Then
        'glf_debugLog.WriteToLog "Running Show", "HOLD"
        Exit Function
    End If
    running_show.CurrentStep = running_show.CurrentStep + 1
    If nextStep.IsLastStep = True Then
        'msgbox "last step"
        If IsNull(nextStep.Duration) Then
            'msgbox "5!"
            nextStep.Duration = 1
        End If
    End If
    If running_show.CurrentStep > running_show.TotalSteps Then
        'End of Show
        'glf_debugLog.WriteToLog "Running Show", "END OF SHOW"
        If running_show.Loops = -1 Or running_show.Loops > 1 Then
            If running_show.Loops > 1 Then
                running_show.Loops = running_show.Loops - 1
            End If
            running_show.CurrentStep = 0
            SetDelay running_show.ShowName & "_" & running_show.Key, "GlfShowStepHandler", Array(running_show), (nextStep.Duration / running_show.ShowSettings.Speed) * 1000
        Else
'            glf_debugLog.WriteToLog "Running Show", "STOPPING SHOW, NO Loops"
            If UBound(running_show.ShowSettings().EventsWhenCompleted) > -1 Then
                Dim evt_when_completed
                For Each evt_when_completed in running_show.ShowSettings().EventsWhenCompleted
                    DispatchPinEvent evt_when_completed, Null
                Next
            End If
            DispatchPinEvent running_show.ShowName & "_" & running_show.Key & "_unblock_queue", Null
            running_show.StopRunningShow()
        End If
    Else
'        glf_debugLog.WriteToLog "Running Show", "Scheduling Next Step"
        SetDelay running_show.ShowName & "_" & running_show.Key, "GlfShowStepHandler", Array(running_show), (nextStep.Duration / running_show.ShowSettings.Speed) * 1000
    End If
End Function

Class GlfShowStep

    Private m_lights, m_shows, m_dofs, m_slides, m_widgets, m_time, m_duration, m_isLastStep, m_absTime, m_relTime

    Public Property Get Lights(): Lights = m_lights: End Property
    Public Property Let Lights(input) : m_lights = input: End Property

    Public Property Get ShowsInStep(): Set ShowsInStep = m_shows: End Property
    Public Property Get Shows(name)
        Dim new_show : Set new_show = (new GlfShowPlayerItem)()
        new_show.Show = name
        m_shows.Add name & CStr(UBound(m_shows.Keys)), new_show
        Set Shows = new_show
    End Property

    Public Property Get DOFEventsInStep(): Set DOFEventsInStep = m_dofs: End Property
    Public Property Get DOFEvent(dof_event)
        Dim new_dof : Set new_dof = (new GlfDofPlayerItem)()
        new_dof.DOFEvent = dof_event
        m_dofs.Add dof_event & CStr(UBound(m_dofs.Keys)), new_dof
        Set DOFEvent = new_dof
    End Property

    Public Property Get SlidesInStep(): Set SlidesInStep = m_slides: End Property
    Public Property Get Slides(slide)
        Dim new_slide : Set new_slide = (new GlfSlidePlayerItem)()
        new_slide.Slide = slide
        m_slides.Add slide & CStr(UBound(m_slides.Keys)), new_slide
        Set Slides = new_slide
    End Property

    Public Property Get WidgetsInStep(): Set WidgetsInStep = m_widgets: End Property
    Public Property Get Widgets(widget)
        Dim new_widget : Set new_widget = (new GlfWidgetPlayerItem)()
        new_widget.Widget = widget
        m_widgets.Add widget & CStr(UBound(m_widgets.Keys)), new_widget
        Set Widgets = new_widget
    End Property

    Public Property Get Time()
        If IsNull(m_relTime) Then
            Time = m_absTime
        Else
            Time = m_relTime
        End If
    End Property

    Public Property Get IsRelativeTime()
        If Not IsNull(m_relTime) Then
            IsRelativeTime = True
        Else
            IsRelativeTime = False
        End If
    End Property

    Public Property Get RelativeTime() : RelativeTime = m_relTime: End Property
    Public Property Let RelativeTime(input) : m_relTime = input: End Property
    Public Property Get AbsoluteTime() : AbsoluteTime = m_absTime: End Property
    Public Property Let AbsoluteTime(input) : m_absTime = input: End Property

    Public Property Get Duration(): Duration = m_duration: End Property
    Public Property Let Duration(input) : m_duration = input: End Property

    Public Property Get IsLastStep(): IsLastStep = m_isLastStep: End Property
    Public Property Let IsLastStep(input) : m_isLastStep = input: End Property

    Public default Function init()
        m_lights = Array()
        m_duration = Null
        m_time = Null
        m_absTime = Null
        m_relTime = Null
        m_isLastStep = False
        Set m_shows = CreateObject("Scripting.Dictionary")
        Set m_dofs = CreateObject("Scripting.Dictionary")
        Set m_slides = CreateObject("Scripting.Dictionary")
        Set m_widgets = CreateObject("Scripting.Dictionary")
        Set Init = Me
  End Function

    Public Function ToYaml()
        Dim yaml
        If UBound(m_lights) > -1 Then
            yaml = yaml & "  lights:" & vbCrLf
            Dim light
            For Each light in m_lights
                Dim light_parts
                light_parts = Split(light, "|")
                If UBound(light_parts) = 1 Then
                    yaml = yaml & "    " & light_parts(0) & ": ffffff%" & light_parts(1) & vbCrLf
                Else
                    yaml = yaml & "    " & light_parts(0) & ": " & light_parts(2) & "%" & light_parts(1) & vbCrLf
                End If
            Next
        End If
        ToYaml = yaml
    End Function

End Class


Class GlfSlidePlayer

    Private m_name
    Private m_priority
    Private m_mode
    Private m_debug
    private m_base_device
    Private m_events
    Private m_eventValues

    Public Property Get Name() : Name = "slide_player" : End Property

    Public Property Get EventNames() : EventNames = m_events.Keys() : End Property
    Public Property Get EventName(name)
        Dim newEvent : Set newEvent = (new GlfEvent)(name)
        m_events.Add newEvent.Raw, newEvent
        Dim new_slide : Set new_slide = (new GlfSlidePlayerItem)()
        m_eventValues.Add newEvent.Raw, new_slide
        Set EventName = new_slide
    End Property

    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

  Public default Function init(mode)
        m_name = "slide_player_" & mode.name
        m_mode = mode.ModeName
        m_priority = mode.Priority
        m_debug = False
        Set m_events = CreateObject("Scripting.Dictionary")
        Set m_eventValues = CreateObject("Scripting.Dictionary")
        Set m_base_device = (new GlfBaseModeDevice)(mode, "slide_player", Me)
        Set Init = Me
  End Function

    Public Sub Activate()
        Dim evt
        For Each evt In m_events.Keys()
            AddPinEventListener m_events(evt).EventName, m_mode & "_" & evt & "_slide_player_play", "SlidePlayerEventHandler", m_priority+m_events(evt).Priority, Array("play", Me, evt)
        Next
    End Sub

    Public Sub Deactivate()
        Dim evt
        For Each evt In m_events.Keys()
            RemovePinEventListener m_events(evt).EventName, m_mode & "_" & evt & "_slide_player_play"
        Next
    End Sub

    Public Function Play(evt)
        Play = Empty
        If m_events(evt).Evaluate() Then
            'Fire Slide
            If useBcp = True Then
                bcpController.PlaySlide m_eventValues(evt).Slide, m_mode, m_events(evt).EventName, m_priority+m_eventValues(evt).Priority
            End If
        End If
    End Function

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_mode & "_slide_player", message
        End If
    End Sub

    Public Function ToYaml()
        Dim yaml
        Dim key
        If UBound(m_events.Keys) > -1 Then
            For Each key in m_events.keys
                yaml = yaml & "  " & key & ": " & vbCrLf
                yaml = yaml & m_eventValues(key).ToYaml
            Next
            yaml = yaml & vbCrLf
        End If
        ToYaml = yaml
    End Function

End Class

Function SlidePlayerEventHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim slide_player : Set slide_player = ownProps(1)
    Select Case evt
        Case "activate"
            slide_player.Activate
        Case "deactivate"
            slide_player.Deactivate
        Case "play"
            slide_player.Play(ownProps(2))
    End Select
    If IsObject(args(1)) Then
        Set SlidePlayerEventHandler = kwargs
    Else
        SlidePlayerEventHandler = kwargs
    End If
End Function

Class GlfSlidePlayerItem
  Private m_slide, m_action, m_expire, m_max_queue_time, m_method, m_priority, m_target, m_tokens

    Public Property Get Slide(): Slide = m_slide: End Property
    Public Property Let Slide(input)
        m_slide = input
    End Property

    Public Property Get Action(): Action = m_action: End Property
    Public Property Let Action(input)
        m_action = input
    End Property

    Public Property Get Expire(): Expire = m_expire: End Property
    Public Property Let Expire(input)
        m_expire = input
    End Property

    Public Property Get Priority(): Priority = m_priority: End Property
    Public Property Let Priority(input)
        m_priority = input
    End Property

  Public default Function init()
        m_action = "play"
        m_slide = Empty
        m_expire = Empty
        m_priority = 0
        Set Init = Me
  End Function

    Public Function ToYaml()
        Dim yaml
        yaml = yaml & "    "& m_slide & ":" & vbCrLf
        yaml = yaml & "      action: " & m_action & vbCrLf
        If Not IsEmpty(m_expire) Then
            yaml = yaml & "      expire: " & m_expire & "ms" & vbCrLf
        End If
        If m_priority <> 0 Then
            yaml = yaml & "      priority: " & m_priority & vbCrLf
        End If
        ToYaml = yaml
    End Function

End Class


Class GlfSoundPlayer

    Private m_priority
    Private m_mode
    Private m_events
    Private m_eventValues
    Private m_debug
    Private m_name
    Private m_value
    private m_base_device

    Public Property Get Name() : Name = "sound_player" : End Property
    Public Property Get EventSounds() : EventSounds = m_eventValues.Items() : End Property
    Public Property Get EventName(name)

        Dim newEvent : Set newEvent = (new GlfEvent)(name)
        m_events.Add newEvent.Raw, newEvent
        Dim new_sound : Set new_sound = (new GlfSoundPlayerItem)()
        m_eventValues.Add newEvent.Raw, new_sound
        Set EventName = new_sound

    End Property
    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

  Public default Function init(mode)
        m_name = "sound_player_" & mode.name
        m_mode = mode.Name
        m_priority = mode.Priority
        m_debug = False
        Set m_events = CreateObject("Scripting.Dictionary")
        Set m_eventValues = CreateObject("Scripting.Dictionary")
        Set m_base_device = (new GlfBaseModeDevice)(mode, "sound_player", Me)
        Set Init = Me
  End Function

    Public Sub Activate()
        Dim evt
        For Each evt In m_events.Keys()
            AddPinEventListener m_events(evt).EventName, m_mode & "_" & m_eventValues(evt).Key & "_sound_player_play", "SoundPlayerEventHandler", m_priority+m_events(evt).Priority, Array("play", Me, evt)
        Next
    End Sub

    Public Sub Deactivate()
        Dim evt
        For Each evt In m_events.Keys()
            RemovePinEventListener m_events(evt).EventName, m_mode & "_" & m_eventValues(evt).Key & "_sound_player_play"
            PlayOff evt
        Next
    End Sub

    Public Function Play(evt)
        Play = Empty
        If m_events(evt).Evaluate() Then
            If m_eventValues(evt).Action = "stop" Then
                PlayOff evt
            Else
                glf_sound_buses(m_eventValues(evt).Sound.Bus).Play m_eventValues(evt)
            End If
        End If
    End Function

    Public Sub PlayOff(evt)
        glf_sound_buses(m_eventValues(evt).Sound.Bus).StopSoundWithKey m_eventValues(evt).Sound.File
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

    Public Function ToYaml()
        Dim yaml
        Dim evt
        If UBound(m_events.Keys) > -1 Then
            For Each key in m_events.keys
                yaml = yaml & "  " & key & ": " & vbCrLf
                yaml = yaml & m_events(key).ToYaml
            Next
            yaml = yaml & vbCrLf
        End If
        ToYaml = yaml
    End Function

End Class

Function SoundPlayerEventHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim sound_player : Set sound_player = ownProps(1)
    Select Case evt
        Case "activate"
            sound_player.Activate
        Case "deactivate"
            sound_player.Deactivate
        Case "play"
            'Dim block_queue
            sound_player.Play(ownProps(2))
            'If Not IsEmpty(block_queue) Then
            '    kwargs.Add "wait_for", block_queue
            'End If
    End Select
    If IsObject(args(1)) Then
        Set SoundPlayerEventHandler = kwargs
    Else
        SoundPlayerEventHandler = kwargs
    End If
End Function


Class GlfSoundPlayerItem
  Private m_sound, m_action, m_key, m_volume, m_loops

    Public Property Get Action(): Action = m_action: End Property
    Public Property Let Action(input): m_action = input: End Property

    Public Property Get Volume(): Volume = m_volume: End Property
    Public Property Let Volume(input): m_volume = input: End Property

    Public Property Get Loops(): Loops = m_loops: End Property
    Public Property Let Loops(input): m_loops = input: End Property

    Public Property Get Key(): Key = m_key: End Property
    Public Property Let Key(input): m_key = input: End Property

    Public Property Get Sound()
        If IsNull(m_sound) Then
            Sound = Null
        Else
            Set Sound = m_sound
        End If
    End Property
  Public Property Let Sound(input)
        If glf_sounds.Exists(input) Then
            Set m_sound = glf_sounds(input)
        End If
    End Property

  Public default Function init()
        m_action = "play"
        m_sound = Null
        m_key = Empty
        m_volume = Empty
        m_loops = Empty
        Set Init = Me
  End Function

End Class

Class GlfStateMachine
    Private m_name
    Private m_player_var_name
    Private m_mode
    Private m_debug
    Private m_priority
    Private m_states
    Private m_transitions
    private m_base_device

    Private m_state
    Private m_persist_state
    Private m_starting_state

    Public Property Get Name(): Name = m_name: End Property
    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property


    Public Property Get GetValue(value)
        Select Case value
            Case "state":
                GetValue = State()
        End Select
    End Property

    Public Property Get State()
        If m_persist_state = True Then
            Dim s : s = GetPlayerState(m_player_var_name)
            If s=False Then
                State = Null
            Else
                State = s
            End If
        Else
            State = m_state
        End If
    End Property

    Public Property Let State(value)
        If m_persist_state = True Then
            SetPlayerState m_player_var_name, value
            m_state = value
        Else
            m_state = value
        End If
    End Property

    Public Property Get States(name)
        If m_states.Exists(name) Then
            Set States = m_states(name)
        Else
            Dim new_state : Set new_state = (new GlfStateMachineState)(name)
            m_states.Add name, new_state
            Set States = new_state
        End If
    End Property
    Public Property Get StateItems(): StateItems = m_states.Items(): End Property

    Public Property Get Transitions()
        Dim count : count = UBound(m_transitions.Keys)
        Dim new_transition : Set new_transition = (new GlfStateMachineTranistion)()
        m_transitions.Add CStr(count), new_transition
        Set Transitions = new_transition
    End Property

    Public Property Get PersistState(): PersistState = m_persist_state : End Property
    Public Property Let PersistState(value) : m_persist_state = value : End Property

    Public Property Get StartingState(): StartingState = m_starting_state : End Property
    Public Property Let StartingState(value) : m_starting_state = value : End Property

    Public default Function init(name, mode)
        m_name = name
        m_player_var_name = "state_machine_" & name
        m_mode = mode.Name
        m_priority = mode.Priority
        m_debug = False
        m_persist_state = False
        m_starting_state = "start"
        m_state = Null

        Set m_states = CreateObject("Scripting.Dictionary")
        Set m_transitions = CreateObject("Scripting.Dictionary")

        Set m_base_device = (new GlfBaseModeDevice)(mode, "state_machine", Me)
        glf_state_machines.Add name, Me
        Set Init = Me
    End Function

    Public Sub Activate()
        Enable()
    End Sub

    Public Sub Deactivate()
        Disable()
    End Sub

    Public Sub Enable()
        If IsNull(State()) Then
            StartState m_starting_state
        Else
            AddHandlersForCurrentState()
            RunShowForCurrentState()
        End If

    End Sub

    Public Sub Disable()
        RemoveHandlers()
        StopShowForCurrentState()
        m_state = Null
    End Sub

    Public Sub StartState(start_state)
        Log("Starting state " & start_state)
        If Not m_states.Exists(start_state) Then
            Log("Invalid state " & start_state)
            Exit Sub
        End If

        Dim state_config : Set state_config = m_states(start_state)

        State() = start_state
        If UBound(state_config.EventsWhenStarted().Keys()) > -1 Then
            Dim evt
            For Each evt in state_config.EventsWhenStarted().Items()
                If evt.Evaluate() = True Then
                    DispatchPinEvent evt.EventName, Null
                End If
            Next
        End If

        AddHandlersForCurrentState()
        RunShowForCurrentState()
    End Sub

    Public Sub StopCurrentState()
        Log "Stopping state " & State()
        RemoveHandlers()
        If IsNull(state) Then
            Exit Sub
        End If
        Dim state_config : Set state_config = m_states(state)

        If UBound(state_config.EventsWhenStopped().Keys()) > -1 Then
            Dim evt
            For Each evt in state_config.EventsWhenStopped().Items()
                If evt.Evaluate() = True Then
                    DispatchPinEvent evt.EventName, Null
                End If
            Next
        End If

        StopShowForCurrentState()

        State() = Null
    End Sub

    Public Sub RunShowForCurrentState()
        If IsNull(state) Then
            Exit Sub
        End If
        Log state
        Dim state_config : Set state_config = m_states(state)
        If Not IsNull(state_config.ShowWhenActive().Show) Then
            Dim show : Set show = state_config.ShowWhenActive
            Log "Starting show %s" & m_name & "_" & show.Key
            Dim new_running_show
            Set new_running_show = (new GlfRunningShow)(m_mode & "_" & m_name & "_" & state_config.Name & "_" & show.Key, show.Key, show, m_priority, Null, state_config.InternalCacheId)
        End If
    End Sub

    Public Sub StopShowForCurrentState()
        If IsNull(state) Then
            Exit Sub
        End If
        Dim state_config : Set state_config = m_states(state)
        If Not IsNull(state_config.ShowWhenActive().Show) Then
            Dim show : Set show = state_config.ShowWhenActive
            Log "Stopping show %s" & m_name & "_" & show.Key
            If glf_running_shows.Exists(m_mode & "_" & m_name & "_" & state_config.Name & "_" & show.Key) Then
                glf_running_shows(m_mode & "_" & m_name & "_" & state_config.Name & "_" & show.Key).StopRunningShow()
            End If
        End If
    End Sub

    Public Sub AddHandlersForCurrentState()
        Dim transition, evt
        For Each transition in m_transitions.Items()
            If transition.Source.Exists(State()) Then
                For Each evt in transition.Events.Items()
                    AddPinEventListener evt.EventName, m_name & "_" & transition.Target & "_" & evt.EventName & "_transition", "StateMachineTransitionHandler", m_priority+evt.Priority, Array("transition", Me, evt, transition)
                Next
            End If
        Next
    End Sub

    Public Sub RemoveHandlers()
        Dim transition, evt
        For Each transition in m_transitions.Items()
            For Each evt in transition.Events.Items()
                RemovePinEventListener evt.EventName, m_name & "_" & transition.Target & "_" & evt.EventName & "_transition"
            Next
        Next
    End Sub

    Public Sub MakeTransition(transition)

        Log "Transitioning from " & State() & " to " & transition.Target
        StopCurrentState()
        If UBound(transition.EventsWhenTransitioning().Keys()) > -1 Then
            Dim evt
            For Each evt in transition.EventsWhenTransitioning().Items()
                If evt.Evaluate() = True Then
                    DispatchPinEvent evt.EventName, Null
                End If
            Next
        End If

        StartState transition.Target

    End Sub


    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

End Class

Class GlfStateMachineState
  Private m_name, m_label, m_show_when_active, m_events_when_started, m_events_when_stopped, m_internal_cache_id


    Public Property Get InternalCacheId(): InternalCacheId = m_internal_cache_id: End Property
    Public Property Let InternalCacheId(input): m_internal_cache_id = input: End Property

  Public Property Get Name(): Name = m_name: End Property
    Public Property Let Name(input): m_name = input: End Property

    Public Property Get Label(): Label = m_label: End Property
    Public Property Let Label(input): m_label = input: End Property

    Public Property Get ShowWhenActive()
        Set ShowWhenActive = m_show_when_active
    End Property

    Public Property Get EventsWhenStarted(): Set EventsWhenStarted = m_events_when_started: End Property
    Public Property Let EventsWhenStarted(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_events_when_started.Add newEvent.Raw, newEvent
        Next
    End Property

    Public Property Get EventsWhenStopped(): Set EventsWhenStopped = m_events_when_stopped: End Property
    Public Property Let EventsWhenStopped(input)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_events_when_stopped.Add newEvent.Raw, newEvent
        Next
    End Property

  Public default Function init(name)
        m_name = name
        m_label = Empty
        m_internal_cache_id = -1
        Set m_show_when_active = (new GlfShowPlayerItem)()
        Set m_events_when_started = CreateObject("Scripting.Dictionary")
        Set m_events_when_stopped = CreateObject("Scripting.Dictionary")
      Set Init = Me
  End Function

End Class

Class GlfStateMachineTranistion
  Private m_name, m_sources, m_target, m_events, m_events_when_transitioning

    Public Property Get Source(): Set Source = m_sources: End Property
    Public Property Let Source(value)
        Dim x
        For x=0 to UBound(value)
            m_sources.Add value(x), True
        Next
    End Property

    Public Property Get Target(): Target = m_target: End Property
    Public Property Let Target(input): m_target = input: End Property

    Public Property Get Events(): Set Events = m_events: End Property
    Public Property Let Events(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_events.Add newEvent.Raw, newEvent
        Next
    End Property

    Public Property Get EventsWhenTransitioning(): Set EventsWhenTransitioning = m_events_when_transitioning: End Property
    Public Property Let EventsWhenTransitioning(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_events_when_transitioning.Add newEvent.Raw, newEvent
        Next
    End Property

  Public default Function init()
        Set m_sources = CreateObject("Scripting.Dictionary")
        m_target = Empty
        Set m_events = CreateObject("Scripting.Dictionary")
        Set m_events_when_transitioning = CreateObject("Scripting.Dictionary")
      Set Init = Me
  End Function

End Class


Public Function StateMachineTransitionHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim state_machine : Set state_machine = ownProps(1)
    Select Case evt
        Case "transition"
            Dim glf_event : Set glf_event = ownProps(2)
            If glf_event.Evaluate() = True Then
                state_machine.MakeTransition ownProps(3)
            Else
                If glf_debug_level = "Debug" Then
                    glf_debugLog.WriteToLog "State machine transition",  "failed condition: " & glf_event.Raw
                End If
            End If
    End Select
    If IsObject(args(1)) Then
        Set StateMachineTransitionHandler = kwargs
    Else
        StateMachineTransitionHandler = kwargs
    End If
End Function
Class GlfTilt

    Private m_name
    Private m_priority
    Private m_base_device
    Private m_reset_warnings_events
    Private m_tilt_events
    Private m_tilt_warning_events
    Private m_tilt_slam_tilt_events
    Private m_settle_time
    Private m_warnings_to_tilt
    Private m_multiple_hit_window
    Private m_tilt_warning_switch
    Private m_tilt_switch
    Private m_slam_tilt_switch
    Private m_last_tilt_warning_switch
    Private m_last_warning
    Private m_balls_to_collect
    Private m_debug

    Public Property Get Name(): Name = m_name: End Property
    Public Property Get GetValue(value)
        Select Case value
            Case "enabled":
                GetValue = m_enabled
            Case "tilt_settle_ms_remaining":
                GetValue = TiltSettleMsRemaining()
            Case "tilt_warnings_remaining":
                GetValue = TiltWarningsRemaining()
        End Select
    End Property

    Public Property Let ResetWarningEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_reset_warnings_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let SettleTime(value): Set m_settle_time = CreateGlfInput(value): End Property
    Public Property Let WarningsToTilt(value): Set m_warnings_to_tilt = CreateGlfInput(value): End Property
    Public Property Let MultipleHitWindow(value): Set m_multiple_hit_window = CreateGlfInput(value): End Property

    Private Property Get TiltSettleMsRemaining()
        TiltSettleMsRemaining = 0
        If m_last_tilt_warning_switch > 0 Then
            Dim delta
            delta = m_settle_time.Value - (gametime - m_last_tilt_warning_switch)
            If delta > 0 Then
                TiltSettleMsRemaining = delta
            End If
        End If
    End Property

    Private Property Get TiltWarningsRemaining()
        TiltWarningsRemaining = 0

        If glf_gameStarted Then
            TiltWarningsRemaining = m_warnings_to_tilt.Value() - GetPlayerState("tilt_warnings")
        End If
    End Property

    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

    Public default Function init(mode)
        m_name = "tilt_" & mode.name
        m_priority = mode.Priority
        Set m_reset_warnings_events = CreateObject("Scripting.Dictionary")
        Set m_tilt_events = CreateObject("Scripting.Dictionary")
        Set m_tilt_warning_events = CreateObject("Scripting.Dictionary")
        Set m_tilt_slam_tilt_events = CreateObject("Scripting.Dictionary")
        Set m_settle_time = CreateGlfInput(0)
        Set m_warnings_to_tilt = CreateGlfInput(0)
        Set m_multiple_hit_window = CreateGlfInput(0)
        m_tilt_switch = Empty
        m_tilt_warning_switch = Empty
        m_slam_tilt_switch = Empty
        m_last_tilt_warning_switch = 0
        m_last_warning = 0
        m_balls_to_collect = 0
        Set m_base_device = (new GlfBaseModeDevice)(mode, "tilt", Me)
        Set Init = Me
    End Function

    Public Sub Activate()
        Dim evt
        For Each evt in m_reset_warnings_events.Keys()
            AddPinEventListener m_reset_warnings_events(evt).EventName, m_name & "_" & evt & "_reset_warnings", "TiltHandler", m_priority+m_reset_warnings_events(evt).Priority, Array("reset_warnings", Me, m_reset_warnings_events(evt))
        Next
        For Each evt in m_tilt_events.Keys()
            AddPinEventListener m_tilt_events(evt).EventName, m_name & "_" & evt & "_tilt", "TiltHandler", m_priority+m_tilt_events(evt).Priority, Array("tilt", Me, m_tilt_events(evt))
        Next
        For Each evt in m_tilt_warning_events.Keys()
            AddPinEventListener m_tilt_warning_events(evt).EventName, m_name & "_" & evt & "_tilt_warning", "TiltHandler", m_priority+m_tilt_warning_events(evt).Priority, Array("tilt_warning", Me, m_tilt_warning_events(evt))
        Next
        For Each evt in m_tilt_slam_tilt_events.Keys()
            AddPinEventListener m_tilt_slam_tilt_events(evt).EventName, m_name & "_" & evt & "_slam_tilt", "TiltHandler", m_priority+m_tilt_slam_tilt_events(evt).Priority, Array("slam_tilt", Me, m_tilt_slam_tilt_events(evt))
        Next

        AddPinEventListener  "s_tilt_warning_active", m_name & "_tilt_warning_switch_active", "TiltHandler", m_priority, Array("_tilt_warning_switch_active", Me)
    End Sub

    Public Sub Deactivate()
        Dim evt
        For Each evt in m_reset_warnings_events.Keys()
            RemovePinEventListener m_reset_warnings_events(evt).EventName, m_name & "_" & evt & "_reset_warnings"
        Next
        For Each evt in m_tilt_events.Keys()
            RemovePinEventListener m_tilt_events(evt).EventName, m_name & "_" & evt & "_tilt"
        Next
        For Each evt in m_tilt_warning_events.Keys()
            RemovePinEventListener m_tilt_warning_events(evt).EventName, m_name & "_" & evt & "_tilt_warning"
        Next
        For Each evt in m_tilt_slam_tilt_events.Keys()
            RemovePinEventListener m_tilt_slam_tilt_events(evt).EventName, m_name & "_" & evt & "_slam__tilt"
        Next

        RemovePinEventListener "s_tilt_warning_active", m_name & "_tilt_warning_switch_active"

    End Sub

    Public Sub TiltWarning()
        'Process a tilt warning.
        'If the number of warnings is than the number to cause a tilt, a tilt will be
        'processed.

        m_last_tilt_warning_switch = gametime
        If glf_gameStarted = False Or glf_gameTilted = True Then
            Exit Sub
        End If
        Log "Tilt Warning"
        m_last_warning = gametime
        SetPlayerState "tilt_warnings", GetPlayerState("tilt_warnings")+1
        Dim warnings : warnings = GetPlayerState("tilt_warnings")
        Dim warnings_to_tilt : warnings_to_tilt = m_warnings_to_tilt.Value()
        If warnings>=warnings_to_tilt Then
            Tilt()
        Else
            Dim kwargs
            Set kwargs = GlfKwargs()
            With kwargs
                .Add "warnings", warnings
                .Add "warnings_remaining", warnings_to_tilt - warnings
            End With
            DispatchPinEvent "tilt_warning", kwargs
            DispatchPinEvent "tilt_warning_" & warnings, Null
        End If
    End Sub

    Public Sub ResetWarnings()
        'Reset the tilt warnings for the current player.
        If glf_gamestarted = False or glf_gameEnding = True Then
            Exit Sub
        End If
        SetPlayerState "tilt_warnings", 0
    End Sub

    Public Sub Tilt()
        'Cause the ball to tilt.
        'This will post an event called *tilt*, set the game mode's ``tilted``
        'attribute to *True*, disable the flippers and autofire devices, end the
        'current ball, and wait for all the balls to drain.
        If glf_gameStarted = False or glf_gameTilted=True or glf_gameEnding = True Then
            Exit Sub
        End If
        glf_gametilted = True
        m_balls_to_collect = glf_BIP
        Log "Processing Tilt. Balls to collect: " & m_balls_to_collect
        DispatchPinEvent "tilt", Null
        AddPinEventListener GLF_BALL_ENDING, m_name & "_ball_ending", "TiltHandler", 20, Array("tilt_ball_ending", Me)
        AddPinEventListener GLF_BALL_DRAIN, m_name & "_ball_drain", "TiltHandler", 999999, Array("tilt_ball_drain", Me)
        Glf_EndBall()
    End Sub

    Public Sub TiltedBallDrain(unclaimed_balls)
        Log "Tilted ball drain, unclaimed balls: " & unclaimed_balls
        m_balls_to_collect = m_balls_to_collect - unclaimed_balls
        Log "Tilted ball drain. Balls to collect: " & m_balls_to_collect
        If m_balls_to_collect <= 0 Then
            TiltDone()
        End If
    End Sub

    Public Sub HandleTiltWarningSwitch()
        Log "Handling Tilt Warning Switch"
        If m_last_warning = 0 Or (m_last_warning + m_multiple_hit_window.Value()) <= gametime Then
            TiltWarning()
        End If
    End Sub

    Public Sub BallEndingTilted()
        If m_balls_to_collect<=0 Then
            TiltDone()
        End If
    End Sub

    Public Sub TiltDone()
        If TiltSettleMsRemaining() > 0 Then
            SetDelay "delay_tilt_clear", "TiltHandler", Array(Array("tilt_done", Me), Null), TiltSettleMsRemaining()
            Exit Sub
        End If
        Log "Tilt Done"
        RemovePinEventListener GLF_BALL_ENDING, m_name & "_ball_ending"
        RemovePinEventListener GLF_BALL_DRAIN, m_name & "_ball_drain"
        glf_gameTilted = False
        DispatchPinEvent m_name & "_clear", Null
    End Sub

    Public Sub SlamTilt()
        'Process a slam tilt.
        'This method posts the *slam_tilt* event and (if a game is active) sets
        'the game mode's ``slam_tilted`` attribute to *True*.
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

End Class

Function TiltHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim tilt : Set tilt = ownProps(1)
    'Check if the evt has a condition to evaluate
    If UBound(ownProps) = 2 Then
        If IsObject(ownProps(2)) Then
            If ownProps(2).Evaluate() = False Then
                If IsObject(args(1)) Then
                    Set TiltHandler = kwargs
                Else
                    TiltHandler = kwargs
                End If
                Exit Function
            End If
        End If
    End If
    Select Case evt
        Case "_tilt_warning_switch_active":
            tilt.HandleTiltWarningSwitch
        Case "tilt_ball_ending"
            kwargs.Add "wait_for", tilt.Name & "_clear"
            tilt.BallEndingTilted
        Case "tilt_ball_drain"
            tilt.TiltedBallDrain kwargs
            kwargs = kwargs -1
        Case "tilt_done"
            tilt.TiltDone
        Case "reset_warnings"
            tilt.ResetWarnings
    End Select

    If IsObject(args(1)) Then
        Set TiltHandler = kwargs
    Else
        TiltHandler = kwargs
    End If
End Function

Class GlfTimedSwitches

    Private m_name
    Private m_priority
    Private m_base_device
    Private m_time
    Private m_switches
    Private m_events_when_active
    Private m_events_when_released
    Private m_active_switches
    Private m_debug

    Public Property Get Name(): Name = m_name: End Property
    Public Property Get GetValue(value)
        'Select Case value
            'Case
        'End Select
        GetValue = True
    End Property

    Public Property Let Time(value): Set m_time = CreateGlfInput(value): End Property
    Public Property Get Time(): Time = m_time.Value(): End Property

    Public Property Let Switches(value): m_switches = value: End Property

    Public Property Let EventsWhenActive(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_events_when_active.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let EventsWhenReleased(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_events_when_released.Add newEvent.Raw, newEvent
        Next
    End Property

    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

    Public default Function init(name, mode)
        m_name = "timed_switch_" & name
        m_priority = mode.Priority
        Set m_events_when_active = CreateObject("Scripting.Dictionary")
        Set m_events_when_released = CreateObject("Scripting.Dictionary")
        Set m_time = CreateGlfInput(0)
        m_switches = Array()
        Set m_active_switches = CreateObject("Scripting.Dictionary")
        Set m_base_device = (new GlfBaseModeDevice)(mode, "timed_switch", Me)
        Set Init = Me
    End Function

    Public Sub Activate()
        Dim switch
        For Each switch in m_switches
            AddPinEventListener switch & "_active", m_name & "_active", "TimedSwitchHandler", m_priority, Array("active", Me, switch)
            AddPinEventListener switch & "_inactive", m_name & "_inactive", "TimedSwitchHandler", m_priority, Array("inactive", Me, switch)
        Next
    End Sub

    Public Sub Deactivate()
        Dim switch
        For Each switch in m_switches
            RemovePinEventListener switch & "_active", m_name & "_active"
            RemovePinEventListener switch & "_inactive", m_name & "_inactive"
        Next
    End Sub

    Public Sub SwitchActive(switch)
        If UBound(m_active_switches.Keys()) = -1 Then
            Dim evt
            For Each evt in m_events_when_active.Keys()
                Log "Switch Active: " & switch & ". Event: " & m_events_when_active(evt).EventName
                DispatchPinEvent m_events_when_active(evt).EventName, Null
            Next
        End If
        If Not m_active_switches.Exists(switch) Then
            m_active_switches.Add switch, True
        End If
    End Sub

    Public Sub SwitchInactive(switch)
        RemoveDelay m_name & "_" & switch & "_active"
        If m_active_switches.Exists(switch) Then
            m_active_switches.Remove switch
            If UBound(m_active_switches.Keys()) = -1 Then
                Dim evt
                For Each evt in m_events_when_released.Keys()
                    Log "Switch Release: " & switch & ". Event: " & m_events_when_released(evt).EventName
                    DispatchPinEvent m_events_when_released(evt).EventName, Null
                Next
            End If
        End If
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

End Class

Function TimedSwitchHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim timed_switch : Set timed_switch = ownProps(1)
    'Check if the evt has a condition to evaluate
    If UBound(ownProps) = 2 Then
        If IsObject(ownProps(2)) Then
            If ownProps(2).Evaluate() = False Then
                If IsObject(args(1)) Then
                    Set TimedSwitchHandler = kwargs
                Else
                    TimedSwitchHandler = kwargs
                End If
                Exit Function
            End If
        End If
    End If
    Select Case evt
        Case "active"
            SetDelay timed_switch.Name & "_" & ownProps(2) & "_active" , "TimedSwitchHandler" , Array(Array("passed_time", timed_switch, ownProps(2)),Null), timed_switch.Time
        Case "passed_time"
            timed_switch.SwitchActive ownProps(2)
        Case "inactive"
            timed_switch.SwitchInactive ownProps(2)
    End Select

    If IsObject(args(1)) Then
        Set TimedSwitchHandler = kwargs
    Else
        TimedSwitchHandler = kwargs
    End If
End Function



Class GlfTimer

    Private m_name
    Private m_priority
    Private m_mode
    Private m_base_device
    Private m_debug

    Private m_control_events
    Private m_running
    Private m_ticks
    Private m_ticks_remaining
    Private m_start_value
    Private m_end_value
    Private m_direction
    Private m_tick_interval
    Private m_starting_tick_interval
    Private m_max_value
    Private m_restart_on_complete
    Private m_start_running

    Public Property Get Name() : Name = m_name : End Property
    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property


    Public Property Get ControlEvents()
        Dim count : count = UBound(m_control_events.Keys)
        Dim newEvent : Set newEvent = (new GlfTimerControlEvent)()
        m_control_events.Add CStr(count), newEvent
        Set ControlEvents = newEvent
    End Property
    Public Property Get StartValue() : StartValue = m_start_value : End Property
    Public Property Get EndValue() : EndValue = m_end_value : End Property
    Public Property Get Direction() : Direction = m_direction : End Property
    Public Property Let StartValue(value) : Set m_start_value = CreateGlfInput(value) : End Property
    Public Property Let EndValue(value) : Set m_end_value = CreateGlfInput(value) : End Property
    Public Property Let Direction(value) : m_direction = value : End Property
    Public Property Let MaxValue(value) : m_max_value = value : End Property
    Public Property Let RestartOnComplete(value) : m_restart_on_complete = value : End Property
    Public Property Let StartRunning(value) : m_start_running = value : End Property
    Public Property Let TickInterval(value)
        m_tick_interval = value
        m_starting_tick_interval = value
    End Property

    Public Property Get GetValue(value)
        Select Case value
            Case "ticks"
                GetValue = m_ticks
            Case "ticks_remaining"
              GetValue = m_ticks_remaining
        End Select
    End Property

  Public default Function init(name, mode)
        m_name = "timer_" & name
        m_mode = mode.Name
        m_priority = mode.Priority
        m_direction = "up"
        m_ticks = 0
        m_ticks_remaining = 0
        m_tick_interval = 1000
        m_starting_tick_interval = 1000
        m_restart_on_complete = False
        m_start_running = False
        Set m_start_value = CreateGlfInput(0)
        Set m_end_value = CreateGlfInput(-1)

        Set m_control_events = CreateObject("Scripting.Dictionary")
        m_running = False

        Set m_base_device = (new GlfBaseModeDevice)(mode, "timer", Me)

        glf_timers.Add name, Me

        Set Init = Me
  End Function

    Public Sub Activate()
        Dim evt
        For Each evt in m_control_events.Keys
            AddPinEventListener m_control_events(evt).EventName.EventName, m_name & "_action", "TimerEventHandler", m_priority+m_control_events(evt).EventName.Priority, Array("action", Me, m_control_events(evt))
        Next
        m_ticks = m_start_value.Value
        m_ticks_remaining = m_ticks
        Log "Activating Timer"
        If m_start_running = True Then
            StartTimer()
        End If
    End Sub

    Public Sub Deactivate()
        Dim evt
        For Each evt in m_control_events.Keys
            RemovePinEventListener m_control_events(evt).EventName.EventName, m_name & "_action"
        Next
        RemoveDelay m_name & "_tick"
        m_running = False
    End Sub

    Public Sub Action(controlEvent)

        If Not IsNull(controlEvent.EventName) Then
            If controlEvent.EventName().Evaluate() = False Then
                Exit Sub
            End IF
        End If

        dim value : value = controlEvent.Value
        Select Case controlEvent.Action
            Case "add"
                Add value
            Case "subtract"
                Subtract value
            Case "jump"
                Jump value
            Case "start"
                StartTimer()
            Case "stop"
                StopTimer()
            Case "reset"
                Reset()
            Case "restart"
                Restart()
            Case "pause"
                Pause value
            Case "set_tick_interval"
                SetTickInterval value
            Case "change_tick_interval"
                ChangeTickInterval value
            Case "reset_tick_interval"
                SetTickInterval m_starting_tick_interval
        End Select

    End Sub

    Private Sub StartTimer()
        If m_running Then
            Exit Sub
        End If

        Log "Starting Timer"
        m_running = True
        RemoveDelay m_name & "_unpause"
        Dim kwargs : Set kwargs = GlfKwargs()
        With kwargs
            .Add "ticks", m_ticks
            .Add "ticks_remaining", m_ticks_remaining
        End With
        DispatchPinEvent m_name & "_started", kwargs
        PostTickEvents()
        SetDelay m_name & "_tick", "TimerEventHandler", Array(Array("tick", Me), Null), m_tick_interval
    End Sub

    Private Sub StopTimer()
        Log "Stopping Timer"
        m_running = False
        Dim kwargs : Set kwargs = GlfKwargs()
        With kwargs
            .Add "ticks", m_ticks
            .Add "ticks_remaining", m_ticks_remaining
        End With
        DispatchPinEvent m_name & "_stopped", kwargs
        RemoveDelay m_name & "_tick"
    End Sub

    Public Sub Pause(pause_ms)
        Log "Pausing Timer for "&pause_ms&" ms"
        m_running = False
        RemoveDelay m_name & "_tick"

        Dim kwargs : Set kwargs = GlfKwargs()
        With kwargs
            .Add "ticks", m_ticks
            .Add "ticks_remaining", m_ticks_remaining
        End With
        DispatchPinEvent m_name & "_paused", kwargs

        If pause_ms > 0 Then
            Dim startControlEvent : Set startControlEvent = (new GlfTimerControlEvent)()
            startControlEvent.Action = "start"
            SetDelay m_name & "_unpause", "TimerEventHandler", Array(Array("action", Me, startControlEvent), Null), pause_ms
        End If
    End Sub

    Public Sub Tick()
        Log "Timer Tick"
        If Not m_running Then
            Log "Timer is not running. Will remove."
            Exit Sub
        End If

        Dim newValue
        If m_direction = "down" Then
            newValue = m_ticks - 1
        Else
            newValue = m_ticks + 1
        End If

        Log "ticking: old value: "& m_ticks & ", new Value: " & newValue & ", target: "& m_end_value.Value
        m_ticks = newValue
        If Not PostTickEvents() Then
            SetDelay m_name & "_tick", "TimerEventHandler", Array(Array("tick", Me), Null), m_tick_interval
        End If
    End Sub

    Private Function CheckForDone

        ' Checks to see if this timer is done. Automatically called anytime the
        ' timer's value changes.
        Log "Checking to see if timer is done. Ticks: "&m_ticks&", End Value: "&m_end_value.Value&", Direction: "& m_direction

        if m_direction = "up" And m_end_value.Value<>-1 And m_ticks >= m_end_value.Value Then
            TimerComplete()
            CheckForDone = True
            Exit Function
        End If

        If m_direction = "down" And m_ticks <= m_end_value.Value Then
            TimerComplete()
            CheckForDone = True
            Exit Function
        End If

        If m_end_value.Value<>-1 Then
            m_ticks_remaining = abs(m_end_value.Value - m_ticks)
        End If
        Log "Timer is not done"

        CheckForDone = False

    End Function

    Private Sub TimerComplete

        Log "Timer Complete"

        StopTimer()
        Dim kwargs : Set kwargs = GlfKwargs()
        With kwargs
            .Add "ticks", m_ticks
            .Add "ticks_remaining", m_ticks_remaining
        End With
        DispatchPinEvent m_name & "_complete", kwargs

        If m_restart_on_complete Then
            Log "Restart on complete: True"
            Restart()
        End If
    End Sub

    Private Sub Restart
        Reset()
        If Not m_running Then
            StartTimer()
        Else
            PostTickEvents()
        End If
    End Sub

    Private Sub Reset
        Log "Resetting timer. New value: "& m_start_value.Value
        Jump m_start_value.Value
    End Sub

    Private Sub Jump(timer_value)
        m_ticks = timer_value

        If m_max_value and m_ticks > m_max_value Then
            m_ticks = m_max_value
        End If

        CheckForDone()
    End Sub

    Public Sub ChangeTickInterval(change)
        m_tick_interval = m_tick_interval * change
    End Sub

    Public Sub SetTickInterval(timer_value)
        m_tick_interval = timer_value
    End Sub

    Private Function PostTickEvents()
        PostTickEvents = True
        If Not CheckForDone() Then
            PostTickEvents = False
            Dim kwargs : Set kwargs = GlfKwargs()
            With kwargs
                .Add "ticks", m_ticks
                .Add "ticks_remaining", m_ticks_remaining
            End With
            DispatchPinEvent m_name & "_tick", kwargs
            Log "Ticks: "&m_ticks&", Remaining: " & m_ticks_remaining
        End If
    End Function

    Public Sub Add(timer_value)
        Dim new_value

        new_value = m_ticks + timer_value

        If Not IsEmpty(m_max_value) And new_value > m_max_value Then
            new_value = m_max_value
        End If
        m_ticks = new_value
        timer_value = new_value - timer_value

        With kwargs
            .Add "ticks", m_ticks
            .Add "ticks_added", timer_value
            .Add "ticks_remaining", m_ticks_remaining
        End With
        DispatchPinEvent m_name & "_time_added", kwargs
        CheckForDone()
    End Sub

    Public Sub Subtract(timer_value)
        m_ticks = m_ticks - timer_value
        Dim kwargs : Set kwargs = GlfKwargs()
        With kwargs
            .Add "ticks", m_ticks
            .Add "ticks_subtracted", timer_value
            .Add "ticks_remaining", m_ticks_remaining
        End With
        DispatchPinEvent m_name & "_time_subtracted", kwargs

        CheckForDone()
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

End Class

Function TimerEventHandler(args)

    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim timer : Set timer = ownProps(1)
    'debug.print "TimerEventHandler: " & timer.Name & ": " & evt
    Select Case evt
        Case "action"
            Dim controlEvent : Set controlEvent = ownProps(2)
            timer.Action controlEvent
        Case "tick"
            timer.Tick
    End Select
    If IsObject(args(1)) Then
        Set TimerEventHandler = kwargs
    Else
        TimerEventHandler = kwargs
    End If
End Function

Class GlfTimerControlEvent
  Private m_event, m_action, m_value

  Public Property Get EventName(): Set EventName = m_event: End Property
    Public Property Let EventName(input)
        Dim newEvent : Set newEvent = (new GlfEvent)(input)
        Set m_event = newEvent
    End Property

    Public Property Get Action(): Action = m_action : End Property
    Public Property Let Action(input): m_action = input : End Property

    Public Property Get Value()
        If Not IsNull(m_value) Then
            Value = m_value.Value
        Else
            Value = 0
        End If
    End Property
    Public Property Let Value(input)
        Set m_value = CreateGlfInput(input)
    End Property

  Public default Function init()
        m_event = Null
        m_action = Empty
        m_value = Null
      Set Init = Me
  End Function

End Class
Class GlfVariablePlayer

    Private m_priority
    Private m_name
    Private m_mode
    Private m_events
    Private m_debug
    private m_base_device

    Private m_value

    Public Property Get Name() : Name = m_name : End Property
    Public Property Get EventNames() : EventNames = m_events.Keys() : End Property
    Public Property Get EventName(name)
        Dim newEvent : Set newEvent = (new GlfVariablePlayerEvent)(name)
        m_events.Add newEvent.BaseEvent.Raw, newEvent
        Set EventName = newEvent
    End Property

    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

  Public default Function init(mode)
        m_name = "variable_player_" & mode.name
        m_mode = mode.Name
        m_priority = mode.Priority

        Set m_events = CreateObject("Scripting.Dictionary")
        m_debug = False
        Set m_base_device = (new GlfBaseModeDevice)(mode, "variable_player", Me)
        Set Init = Me
  End Function

    Public Sub Activate()
        Log "Activating"
        Dim evt
        For Each evt In m_events.Keys()
            AddPinEventListener m_events(evt).BaseEvent.EventName, m_mode & "_" & evt & "_variable_player_play", "VariablePlayerEventHandler", m_priority+m_events(evt).BaseEvent.Priority, Array("play", Me, evt)
        Next
    End Sub

    Public Sub Deactivate()
        Log "Deactivating"
        Dim evt
        For Each evt In m_events.Keys()
            RemovePinEventListener m_events(evt).BaseEvent.EventName, m_mode & "_" & evt & "_variable_player_play"
        Next
    End Sub

    Public Sub Play(evt)
        Log "Playing: " & evt
        If m_events(evt).BaseEvent.Evaluate() = False Then
            Exit Sub
        End If
        Dim vKey, v
        For Each vKey in m_events(evt).Variables.Keys
            Set v = m_events(evt).Variable(vKey)
            Dim varValue : varValue = v.VariableValue
            Select Case v.Action
                Case "add"
                    Log "Add Variable " & vKey & ". New Value: " & CStr(GetPlayerState(vKey) + varValue) & " Old Value: " & CStr(GetPlayerState(vKey))
                    SetPlayerState vKey, GetPlayerState(vKey) + varValue
                Case "add_machine"
                    Log "Add Machine Variable " & vKey & ". New Value: " & CStr(GetPlayerState(vKey) + varValue) & " Old Value: " & CStr(GetPlayerState(vKey))
                    'SetPlayerState vKey, GetPlayerState(vKey) + varValue
                    glf_machine_vars(vkey).Value = glf_machine_vars(vkey).Value + varValue
                Case "set"
                    Log "Setting Variable " & vKey & ". New Value: " & CStr(varValue)
                    SetPlayerState vKey, varValue
                Case "set_machine"
                    Log "Setting Machine Variable " & vKey & ". New Value: " & CStr(varValue)
                    glf_machine_vars(vkey).Value = varValue
        End Select
        Next
    End Sub

    Public Function ToYaml()
        Dim yaml
        Dim key
        If UBound(m_events.Keys) > -1 Then
            For Each key in m_events.keys
                yaml = yaml & "  " & key & ": " & vbCrLf
                yaml = yaml & m_events(key).ToYaml
            Next
            yaml = yaml & vbCrLf
        End If
        ToYaml = yaml
    End Function

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_mode & "_variable_player", message
        End If
    End Sub
End Class

Class GlfVariablePlayerEvent

    Private m_event
  Private m_variables

    Public Property Get BaseEvent() : Set BaseEvent = m_event : End Property

  Public Property Get Variable(name)
        If m_variables.Exists(name) Then
            Set Variable = m_variables(name)
        Else
            Dim new_variable : Set new_variable = (new GlfVariablePlayerItem)()
            m_variables.Add name, new_variable
            Set Variable = new_variable
        End If
    End Property

    Public Property Get Variables(): Set Variables = m_variables End Property

  Public default Function init(evt)
        Set m_event = (new GlfEvent)(evt)
        Set m_variables = CreateObject("Scripting.Dictionary")
      Set Init = Me
  End Function

    Public Function ToYaml()
        Dim yaml
        Dim key
        If UBound(m_variables.Keys) > -1 Then
            For Each key in m_variables.keys
                yaml = yaml & "    " & key & ": " & vbCrLf
                yaml = yaml & m_variables(key).ToYaml
            Next
            yaml = yaml & vbCrLf
        End If
        ToYaml = yaml
    End Function

End Class

Class GlfVariablePlayerItem
  Private m_block, m_show, m_float, m_int, m_string, m_player, m_action, m_type

  Public Property Get Action(): Action = m_action: End Property
    Public Property Let Action(input): m_action = input: End Property

    Public Property Get Block(): Block = m_block End Property
    Public Property Let Block(input): m_block = input End Property

  Public Property Let Float(input): Set m_float = CreateGlfInput(input): m_type = "float" : End Property

  Public Property Let Int(input): Set m_int = CreateGlfInput(input): m_type = "int" : End Property

  Public Property Let String(input) : Set m_string = CreateGlfInput(input) : m_type = "string" : End Property

    Public Property Get VariableType(): VariableType = m_type: End Property
    Public Property Get VariableValue()
        Select Case m_type
            Case "float"
                VariableValue = m_float.Value()
            Case "int"
                VariableValue = m_int.Value()
            Case "string"
                VariableValue = m_string.Value()
            Case Else
                VariableValue = Empty
        End Select
    End Property

    Public Property Get Player(): Player = m_player: End Property
    Public Property Let Player(input): m_player = input: End Property

  Public default Function init()
        m_action = "add"
        m_type = Empty
        m_block = False
        m_float = Empty
        m_int = Empty
        m_string = Empty
        m_player = Empty
      Set Init = Me
  End Function

    Public Function ToYaml()
        Dim yaml
        yaml = yaml & "      "& "action" & ": " & m_action & vbCrLf
        If m_block = True Then
            yaml = yaml & "      "& "block" & ": true" & vbCrLf
        End If
        If Not IsEmpty(m_int) Then
            yaml = yaml & "      "& "int" & ": " & m_int.Raw & vbCrLf
        End If
        If Not IsEmpty(m_float) Then
            yaml = yaml & "      "& "float" & ": " & m_float.Raw & vbCrLf
        End If
        If Not IsEmpty(m_string) Then
            yaml = yaml & "      "& "string" & ": " & m_string.Raw & vbCrLf
        End If
        If Not IsEmpty(m_player) Then
            yaml = yaml & "      "& "player" & ": " & m_strinm_playerg & vbCrLf
        End If
        ToYaml = yaml
    End Function

End Class


Function CreateMachineVar(name)
  Dim machine_var : Set machine_var = (new GlfMachineVars)(name)
  Set CreateMachineVar = machine_var
End Function

Class GlfMachineVars

    Private m_name
  Private m_persist
    Private m_value_type
    Private m_value

    Public Property Get Name(): Name = m_name : End Property
    Public Property Let Name(input): m_name = input : End Property

    Public Property Get Value(): Value = m_value : End Property
    Public Property Let Value(input): m_value = input : End Property

    Public Property Let InitialValue(input)
        m_value = input
    End Property

    Public Property Get Persist(): Persist = m_persist : End Property
    Public Property Let Persist(input): m_persist = input : End Property

    Public Property Get ValueType(): ValueType = m_value_type : End Property
    Public Property Let ValueType(input): m_value_type = input : End Property

    Public Function GetValue()
        GetValue = m_value
    End Function

  Public default Function init(name)
        m_name = name
        m_persist = True
        m_value_type = "int"
        m_value = 0
        glf_machine_vars.Add name, Me
      Set Init = Me
  End Function
End Class

Function VariablePlayerEventHandler(args)

    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim variablePlayer : Set variablePlayer = ownProps(1)
    Select Case evt
        Case "play"
            variablePlayer.Play ownProps(2)
    End Select
    If IsObject(args(1)) Then
        Set VariablePlayerEventHandler = kwargs
    Else
        VariablePlayerEventHandler = kwargs
    End If

End Function


Class GlfWidgetPlayer

    Private m_name
    Private m_priority
    Private m_mode
    Private m_debug
    private m_base_device
    Private m_events
    Private m_eventValues

    Public Property Get Name() : Name = "widget_player" : End Property

    Public Property Get EventNames() : EventNames = m_events.Keys() : End Property
    Public Property Get EventName(name)
        Dim newEvent : Set newEvent = (new GlfEvent)(name)
        m_events.Add newEvent.Raw, newEvent
        Dim new_slide : Set new_slide = (new GlfWidgetPlayerItem)()
        m_eventValues.Add newEvent.Raw, new_slide
        Set EventName = new_slide
    End Property

    Public Property Let Debug(value)
        m_debug = value
        m_base_device.Debug = value
    End Property
    Public Property Get IsDebug()
        If m_debug Then : IsDebug = 1 : Else : IsDebug = 0 : End If
    End Property

  Public default Function init(mode)
        m_name = "widget_player_" & mode.name
        m_mode = mode.ModeName
        m_priority = mode.Priority
        m_debug = False
        Set m_events = CreateObject("Scripting.Dictionary")
        Set m_eventValues = CreateObject("Scripting.Dictionary")
        Set m_base_device = (new GlfBaseModeDevice)(mode, "widget_player", Me)
        Set Init = Me
  End Function

    Public Sub Activate()
        Dim evt
        For Each evt In m_events.Keys()
            AddPinEventListener m_events(evt).EventName, m_mode & "_" & evt & "_widget_player_play", "WidgetPlayerEventHandler", m_priority+m_events(evt).Priority, Array("play", Me, evt)
        Next
    End Sub

    Public Sub Deactivate()
        Dim evt
        For Each evt In m_events.Keys()
            RemovePinEventListener m_events(evt).EventName, m_mode & "_" & evt & "_widget_player_play"
        Next
    End Sub

    Public Function Play(evt)
        Play = Empty
        If m_events(evt).Evaluate() Then
            'Fire Widget
            If useBcp = True Then
                bcpController.PlayWidget m_eventValues(evt).Widget, m_mode, m_events(evt).EventName, m_priority+m_eventValues(evt).Priority, m_eventValues(evt).Expire
            End If
        End If
    End Function

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_mode & "_widget_player", message
        End If
    End Sub

    Public Function ToYaml()
        Dim yaml
        Dim key
        If UBound(m_events.Keys) > -1 Then
            For Each key in m_events.keys
                yaml = yaml & "  " & key & ": " & vbCrLf
                yaml = yaml & m_eventValues(key).ToYaml
            Next
            yaml = yaml & vbCrLf
        End If
        ToYaml = yaml
    End Function

End Class

Function WidgetPlayerEventHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim widget_player : Set widget_player = ownProps(1)
    Select Case evt
        Case "activate"
            widget_player.Activate
        Case "deactivate"
            widget_player.Deactivate
        Case "play"
            widget_player.Play(ownProps(2))
    End Select
    If IsObject(args(1)) Then
        Set WidgetPlayerEventHandler = kwargs
    Else
        WidgetPlayerEventHandler = kwargs
    End If
End Function

Class GlfWidgetPlayerItem
  Private m_slide, m_action, m_expire, m_max_queue_time, m_method, m_priority, m_target, m_tokens

    Public Property Get Widget(): Widget = m_slide: End Property
    Public Property Let Widget(input)
        m_slide = input
    End Property

    Public Property Get Action(): Action = m_action: End Property
    Public Property Let Action(input)
        m_action = input
    End Property

    Public Property Get Expire(): Expire = m_expire: End Property
    Public Property Let Expire(input)
        m_expire = input
    End Property

    Public Property Get Priority(): Priority = m_priority: End Property
    Public Property Let Priority(input)
        m_priority = input
    End Property

  Public default Function init()
        m_action = "play"
        m_slide = Empty
        m_expire = Empty
        m_priority = 0
        Set Init = Me
  End Function

    Public Function ToYaml()
        Dim yaml
        yaml = yaml & "    "& m_slide & ":" & vbCrLf
        yaml = yaml & "      action: " & m_action & vbCrLf
        If Not IsEmpty(m_expire) Then
            yaml = yaml & "      expire: " & m_expire & "ms" & vbCrLf
        End If
        If m_priority <> 0 Then
            yaml = yaml & "      priority: " & m_priority & vbCrLf
        End If
        ToYaml = yaml
    End Function

End Class



Class DelayObject
  Private m_name, m_callback, m_ttl, m_args

  Public Property Get Name(): Name = m_name: End Property
  Public Property Let Name(input): m_name = input: End Property

  Public Property Get Callback(): Callback = m_callback: End Property
  Public Property Let Callback(input): m_callback = input: End Property

  Public Property Get TTL(): TTL = m_ttl: End Property
  Public Property Let TTL(input): m_ttl = input: End Property

  Public Property Get Args(): Args = m_args: End Property
  Public Property Let Args(input): m_args = input: End Property

  Public default Function init(name, callback, ttl, args)
    m_name = name
    m_callback = callback
    m_ttl = ttl
    m_args = args

    Set Init = Me
  End Function
End Class

Dim delayQueue : Set delayQueue = CreateObject("Scripting.Dictionary")
Dim delayQueueMap : Set delayQueueMap = CreateObject("Scripting.Dictionary")
Dim delayCallbacks : Set delayCallbacks = CreateObject("Scripting.Dictionary")

Sub SetDelay(name, callbackFunc, args, delayInMs)
    Dim executionTime
    executionTime = gametime + delayInMs

    RemoveDelay name
    If delayQueueMap.Exists(name) Then
        delayQueueMap.Remove name
    End If


    If delayQueue.Exists(executionTime) Then
        If delayQueue(executionTime).Exists(name) Then
            delayQueue(executionTime).Remove name
        End If
    Else
        delayQueue.Add executionTime, CreateObject("Scripting.Dictionary")
    End If
    'Glf_WriteDebugLog "Delay", "Adding delay for " & name & ", callback: " & callbackFunc & ", ExecutionTime: " & executionTime
    delayQueue(executionTime).Add name, (new DelayObject)(name, callbackFunc, executionTime, args)
    delayQueueMap.Add name, executionTime

End Sub

Function AlignToNearest10th(timeMs)
    AlignToNearest10th = Int(timeMs / 100) * 100
End Function

Function RemoveDelay(name)
    If delayQueueMap.Exists(name) Then
        If delayQueue.Exists(delayQueueMap(name)) Then
            If delayQueue(delayQueueMap(name)).Exists(name) Then
                'Glf_WriteDebugLog "Delay", "Removing delay for " & name & " and  Execution Time: " & delayQueueMap(name)
                delayQueue(delayQueueMap(name)).Remove name
            End If
            delayQueueMap.Remove name
            RemoveDelay = True
            'Glf_WriteDebugLog "Delay", "Removing delay for " & name
            Exit Function
        End If
    End If
    RemoveDelay = False
End Function

Sub DelayTick()
    Dim queueItem, key, delayObject
    For Each queueItem in delayQueue.Keys()
        If Int(queueItem) < gametime Then
            For Each key In delayQueue(queueItem).Keys()
                If IsObject(delayQueue(queueItem)(key)) Then
                            Set delayObject = delayQueue(queueItem)(key)
                            'Glf_WriteDebugLog "Delay", "Executing delay: " & key & ", callback: " & delayObject.Callback
                            GetRef(delayObject.Callback)(delayObject.Args)
                End If
            Next
            delayQueue.Remove queueItem
        End If
    Next
End Sub

Function CreateGlfAutoFireDevice(name)
  Dim flipper : Set flipper = (new GlfAutoFireDevice)(name)
  Set CreateGlfAutoFireDevice = flipper
End Function

Class GlfAutoFireDevice

    Private m_name
    Private m_device_name
    Private m_enable_events
    Private m_disable_events
    Private m_enabled
    Private m_switch
    Private m_action_cb
    Private m_disabled_cb
    Private m_enabled_cb
    Private m_exclude_from_ball_search
    Private m_debug

    Public Property Let Switch(value)
        m_switch = value
    End Property
    Public Property Let ExcludeFromBallSearch(value) : m_exclude_from_ball_search = value : End Property
    Public Property Let ActionCallback(value) : m_action_cb = value : End Property
    Public Property Let DisabledCallback(value) : m_disabled_cb = value : End Property
    Public Property Let EnabledCallback(value) : m_enabled_cb = value : End Property
    Public Property Let EnableEvents(value)
        Dim evt
        If IsArray(m_enable_events) Then
            For Each evt in m_enable_events
                RemovePinEventListener evt, m_name & "_enable"
            Next
        End If
        m_enable_events = value
        For Each evt in m_enable_events
            AddPinEventListener evt, m_name & "_enable", "AutoFireDeviceEventHandler", 1000, Array("enable", Me)
        Next
    End Property
    Public Property Let DisableEvents(value)
        Dim evt
        If IsArray(m_disable_events) Then
            For Each evt in m_enable_events
                RemovePinEventListener evt, m_name & "_disable"
            Next
        End If
        m_disable_events = value
        For Each evt in m_disable_events
            AddPinEventListener evt, m_name & "_disable", "AutoFireDeviceEventHandler", 1000, Array("disable", Me)
        Next
    End Property
    Public Property Let Debug(value) : m_debug = value : End Property

  Public default Function init(name)
        m_name = "auto_fire_coil_" & name
        m_device_name = name
        EnableEvents = Array("ball_started")
        DisableEvents = Array("ball_will_end", "service_mode_entered")
        m_enabled = False
        m_action_cb = Empty
        m_disabled_cb = Empty
        m_enabled_cb = Empty
        m_switch = Empty
        m_debug = False
        m_exclude_from_ball_search = False
        glf_autofiredevices.Add name, Me
        Set Init = Me
  End Function

    Public Sub Enable()
        Log "Enabling"
        m_enabled = True
        If Not IsEmpty(m_enabled_cb) Then
            GetRef(m_enabled_cb)(Null)
        End If
        If Not IsEmpty(m_switch) Then
            AddPinEventListener m_switch & "_active", m_name & "_active", "AutoFireDeviceEventHandler", 1000, Array("activate", Me)
            AddPinEventListener m_switch & "_inactive", m_name & "_inactive", "AutoFireDeviceEventHandler", 1000, Array("deactivate", Me)
        End If
    End Sub

    Public Sub Disable()
        Log "Disabling"
        m_enabled = False
        If Not IsEmpty(m_disabled_cb) Then
            GetRef(m_disabled_cb)(Null)
        End If
        Deactivate(Null)
        RemovePinEventListener m_switch & "_active", m_name & "_active"
        RemovePinEventListener m_switch & "_inactive", m_name & "_inactive"
    End Sub

    Public Sub Activate(active_ball)
        Log "Activating"
        If Not IsEmpty(m_action_cb) Then
            GetRef(m_action_cb)(Array(1, active_ball))
        End If
        DispatchPinEvent m_name & "_activate", Null
    End Sub

    Public Sub Deactivate(active_ball)
        Log "Deactivating"
        If Not IsEmpty(m_action_cb) Then
            GetRef(m_action_cb)(Array(0, active_ball))
        End If
        DispatchPinEvent m_name & "_deactivate", Null
    End Sub

    Public Sub BallSearch(phase)
        If m_exclude_from_ball_search = True Then
            Exit Sub
        End If
        Log "Ball Search, phase " & phase
        If Not IsEmpty(m_action_cb) Then
            GetRef(m_action_cb)(Array(1, Null))
        End If
        SetDelay m_name & "ball_search_deactivate", "AutoFireDeviceEventHandler", Array(Array("deactivate", Me), Null), 150
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub
End Class

Function AutoFireDeviceEventHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim flipper : Set flipper = ownProps(1)
    Select Case evt
        Case "enable"
            flipper.Enable
        Case "disable"
            flipper.Disable
        Case "activate"
            flipper.Activate kwargs
        Case "deactivate"
            flipper.Deactivate kwargs
    End Select
    If IsObject(args(1)) Then
        Set AutoFireDeviceEventHandler = kwargs
    Else
        AutoFireDeviceEventHandler = kwargs
    End If
End Function
Function CreateGlfBallDevice(name)
  Dim device : Set device = (new GlfBallDevice)(name)
  Set CreateGlfBallDevice = device
End Function

Class GlfBallDevice

    Private m_name
    Private m_ball_switches
    Private m_player_controlled_eject_event
    Private m_eject_timeout
    Private m_eject_enable_time
    Private m_balls
    Private m_balls_in_device
    Private m_default_device
    Private m_eject_callback
    Private m_eject_all_events
    Private m_balls_to_eject
    Private m_ejecting_all
    Private m_ejecting
    Private m_mechanical_eject
    Private m_eject_targets
    Private m_entrance_count_delay
    Private m_incoming_balls
    Private m_lost_balls
    Private m_exclude_from_ball_search
    Private m_auto_fire_on_unexpected_ball
    Private m_debug

    Public Property Get Name(): Name = m_name : End Property
    Public Property Get GetValue(value)
        Select Case value
            Case "balls":
                GetValue = m_balls_in_device
        End Select
    End Property
    Public Property Let DefaultDevice(value)
        m_default_device = value
        If m_default_device = True Then
            Set glf_plunger = Me
        End If
    End Property
  Public Property Get HasBall()
        HasBall = (Not IsNull(m_balls(0)) And m_ejecting = False)
    End Property

    Public Property Get Balls(): Balls = m_balls_in_device : End Property

    Public Property Let AddIncomingBalls(value) : m_incoming_balls = m_incoming_balls + value : End Property
    Public Property Get IncomingBalls() : IncomingBalls = m_incoming_balls : End Property

    Public Property Let EjectCallback(value) : m_eject_callback = value : End Property
    Public Property Let EjectEnableTime(value) : m_eject_enable_time = value : End Property

    Public Property Let EjectTimeout(value) : m_eject_timeout = value : End Property
    Public Property Let EntranceCountDelay(value) : m_entrance_count_delay = value : End Property
    Public Property Let EjectAllEvents(value)
        m_eject_all_events = value
        Dim evt
        For Each evt in m_eject_all_events
            AddPinEventListener evt, m_name & "_eject_all", "BallDeviceEventHandler", 1000, Array("ball_eject_all", Me)
        Next
    End Property
    Public Property Let EjectTargets(value)
        m_eject_targets = value
        Dim evt
        For Each evt in m_eject_targets
            AddPinEventListener evt & "_active", m_name & "_eject_target", "BallDeviceEventHandler", 1000, Array("eject_timeout", Me)
        Next
    End Property
    Public Property Let PlayerControlledEjectEvent(value)
        m_player_controlled_eject_event = value
        AddPinEventListener m_player_controlled_eject_event, m_name & "_eject_attempt", "BallDeviceEventHandler", 1000, Array("ball_eject", Me)
    End Property
    Public Property Let BallSwitches(value)
        m_ball_switches = value
        ReDim m_balls(Ubound(m_ball_switches))
        Dim x
        For x=0 to UBound(m_ball_switches)
            m_balls(x) = Null
            AddPinEventListener m_ball_switches(x)&"_active", m_name & "_ball_enter", "BallDeviceEventHandler", 1000, Array("ball_entering", Me, x)
            AddPinEventListener m_ball_switches(x)&"_inactive", m_name & "_ball_exiting", "BallDeviceEventHandler", 1000, Array("ball_exiting", Me, x)
        Next
    End Property
    Public Property Let MechanicalEject(value) : m_mechanical_eject = value : End Property
    Public Property Let ExcludeFromBallSearch(value) : m_exclude_from_ball_search = value : End Property
    Public Property Let AutoFireOnUnexpectedBall(value) : m_auto_fire_on_unexpected_ball = value : End Property

    Public Property Let Debug(value) : m_debug = value : End Property

  Public default Function init(name)
        m_name = "balldevice_" & name
        m_ball_switches = Array()
        m_eject_all_events = Array()
        m_eject_targets = Array()
        m_balls = Array()
        m_debug = False
        m_default_device = False
        m_ejecting = False
        m_eject_callback = Null
        m_ejecting_all = False
        m_balls_to_eject = 0
        m_balls_in_device = 0
        m_lost_balls = 0
        m_mechanical_eject = False
        m_eject_timeout = 1000
        m_eject_enable_time = 0
        m_entrance_count_delay = 500
        m_incoming_balls = 0
        m_exclude_from_ball_search = False
        m_auto_fire_on_unexpected_ball = True
        glf_ball_devices.Add name, Me
      Set Init = Me
  End Function

    Public Sub BallEntering(ball, switch)
        Log "Ball Entering"
        If m_default_device = False Then
            SetDelay m_name & "_" & switch & "_ball_enter", "BallDeviceEventHandler", Array(Array("ball_enter", Me, switch), ball), m_entrance_count_delay
        Else
            BallEnter ball, switch
        End If
    End Sub

    Public Sub BallEnter(ball, switch)
        RemoveDelay m_name & "_switch" & switch & "_eject_timeout"
        Set m_balls(switch) = ball
        m_balls_in_device = m_balls_in_device + 1
        Log "Ball Entered"
        If m_lost_balls > 0 Then
            m_lost_balls = m_lost_balls - 1
            Log "Lost Ball Found"
            If m_lost_balls = 0 Then
                RemoveDelay m_name & "_clear_lost_balls"
            End If
            Exit Sub
        End If

        Dim unclaimed_balls: unclaimed_balls = 1
        If m_incoming_balls > 0 Then
            unclaimed_balls = 0
        End If
        If unclaimed_balls > 0 Then
            unclaimed_balls = DispatchRelayPinEvent(m_name & "_ball_enter", 1)
        End If
        Log "Unclaimed Balls: " & unclaimed_balls
        DispatchPinEvent m_name & "_ball_entered", Null
        If unclaimed_balls > 0 And m_auto_fire_on_unexpected_ball = True Then
            SetDelay m_name & "_eject_attempt", "BallDeviceEventHandler", Array(Array("ball_eject", Me), ball), 500
        End If
    End Sub

    Public Sub BallExiting(ball, switch)
        RemoveDelay m_name & "_" & switch & "_ball_enter"
        If m_ejecting = False And m_mechanical_eject = False Then
            Log "Ball Lost, Wasn't Ejecting"
            m_lost_balls = m_lost_balls + 1
            SetDelay m_name & "_clear_lost_balls", "BallDeviceEventHandler", Array(Array("clear_lost_balls", Me), Null), 3000
        End If
        m_balls(switch) = Null
        m_balls_in_device = m_balls_in_device - 1
        DispatchPinEvent m_name & "_ball_exiting", Null
        If m_mechanical_eject = True And m_eject_timeout > 0 Then
            SetDelay m_name & "_switch" & switch & "_eject_timeout", "BallDeviceEventHandler", Array(Array("eject_timeout", Me), ball), m_eject_timeout
        End If
        Log "Ball Exiting"
    End Sub

    Public Sub BallExitSuccess(ball)
        m_ejecting = False

        If m_incoming_balls > 0 Then
            m_incoming_balls = m_incoming_balls - 1
        End If
        DispatchPinEvent m_name & "_ball_eject_success", Null
        Log "Ball successfully exited"
        RemoveDelay m_name & "_eject_attempt"
        If m_ejecting_all = True Then
            If m_balls_to_eject = 0 Then
                m_ejecting_all = False
                Exit Sub
            End If
            If Not IsNull(m_balls(0)) Then
                m_balls_to_eject = m_balls_to_eject - 1
                Eject()
            Else
                SetDelay m_name & "_eject_attempt", "BallDeviceEventHandler", Array(Array("ball_eject", Me), ball), 600
            End If
        End If
    End Sub

    Public Sub Eject

        If Not IsNull(m_eject_callback) Then
            If Not IsNull(m_balls(0)) Then
                Log "Ejecting."
                SetDelay m_name & "_switch0_eject_timeout", "BallDeviceEventHandler", Array(Array("eject_timeout", Me), m_balls(0)), m_eject_timeout
                m_ejecting = True

                GetRef(m_eject_callback)(m_balls(0))
                If m_eject_enable_time > 0 Then
                    SetDelay m_name & "_eject_enable_time", "BallDeviceEventHandler", Array(Array("eject_enable_complete", Me), m_balls(0)), m_eject_enable_time
                End If
            Else
                SetDelay m_name & "_eject_attempt", "BallDeviceEventHandler", Array(Array("ball_eject", Me), Null), 600
            End If
        End If
    End Sub

    Public Sub EjectEnableComplete
        If Not IsNull(m_eject_callback) Then
            GetRef(m_eject_callback)(Null)
        End If
    End Sub

    Public Sub EjectBalls(balls)
        Log "Ejecting "&balls&" Balls."
        m_ejecting_all = True
        m_balls_to_eject = balls - 1
        Eject()
    End Sub

    Public Sub EjectAll
        Log "Ejecting All."
        m_ejecting_all = True
        m_balls_to_eject = m_balls_in_device - 1
        Eject()
    End Sub

    Public Sub ClearLostBalls()
        m_lost_balls = 0
    End Sub

    Public Sub BallSearch(phase)
        If m_exclude_from_ball_search = True Then
            Exit Sub
        End If
        Log "Ball Search, phase " & phase
        If m_default_device = True Then
            Exit Sub
        End If
        If phase = 1 And HasBall() Then
            Exit Sub
        End If
        If Not IsNull(m_eject_callback) Then
            GetRef(m_eject_callback)(m_balls(0))
        End If
    End Sub

    Public Function ToYaml
        Dim yaml
        yaml = "  " & m_name & ":" & vbCrLf
        yaml = yaml + "    ball_switches: " & Join(m_ball_switches, ",") & vbCrLf
        yaml = yaml + "    mechanical_eject: " & m_mechanical_eject & vbCrLf

        ToYaml = yaml
    End Function

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub
End Class

Function BallDeviceEventHandler(args)
    Dim ownProps, ball
    ownProps = args(0)
    Dim evt : evt = ownProps(0)
    Dim ballDevice : Set ballDevice = ownProps(1)
    Dim switch
    'debug.print "Ball Device: " & ballDevice.Name & ". Event: " & evt
    Select Case evt
        Case "ball_entering"
            Set ball = args(1)
            switch = ownProps(2)
            ballDevice.BallEntering ball, switch
        Case "ball_enter"
            Set ball = args(1)
            switch = ownProps(2)
            ballDevice.BallEnter ball, switch
        Case "ball_eject"
            ballDevice.Eject
        Case "ball_eject_all"
            ballDevice.EjectAll
        Case "ball_exiting"
            switch = ownProps(2)
            If RemoveDelay(ballDevice.Name & "_" & switch & "_ball_enter") = False Then
                Set ball = args(1)
                ballDevice.BallExiting ball, switch
            End If
        Case "eject_timeout"
            Set ball = args(1)
            ballDevice.BallExitSuccess ball
        Case "eject_enable_complete"
            ballDevice.EjectEnableComplete
        Case "clear_lost_balls"
            ballDevice.ClearLostBalls
    End Select
End Function
Function CreateGlfDiverter(name)
  Dim diverter : Set diverter = (new GlfDiverter)(name)
  Set CreateGlfDiverter = diverter
End Function

Class GlfDiverter

    Private m_name
    Private m_activate_events
    Private m_deactivate_events
    Private m_activation_time
    Private m_enable_events
    Private m_disable_events
    Private m_activation_switches
    Private m_action_cb
    Private m_enabled
    Private m_active
    Private m_ball_search_hold_time
    Private m_exclude_from_ball_search
    Private m_debug

    Public Property Get Name(): Name = m_name : End Property
    Public Property Get GetValue(value)
        Select Case value
            Case "enabled":
                GetValue = m_enabled
            Case "active":
                GetValue = m_active
        End Select
    End Property

    Public Property Let ActionCallback(value) : m_action_cb = value : End Property
    Public Property Let EnableEvents(value)
        Dim evt
        If IsArray(m_enable_events) Then
            For Each evt in m_enable_events
                RemovePinEventListener evt, m_name & "_enable"
            Next
        End If
        m_enable_events = value
        For Each evt in m_enable_events
            AddPinEventListener evt, m_name & "_enable", "DiverterEventHandler", 1000, Array("enable", Me)
        Next
    End Property
    Public Property Let DisableEvents(value)
        Dim evt
        If IsArray(m_disable_events) Then
            For Each evt in m_enable_events
                RemovePinEventListener evt, m_name & "_disable"
            Next
        End If
        m_disable_events = value
        For Each evt in m_disable_events
            AddPinEventListener evt, m_name & "_disable", "DiverterEventHandler", 1000, Array("disable", Me)
        Next
    End Property
    Public Property Let ActivateEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_activate_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let DeactivateEvents(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_deactivate_events.Add newEvent.Raw, newEvent
        Next
    End Property
    Public Property Let ActivationTime(value) : Set m_activation_time = CreateGlfInput(value) : End Property
    Public Property Let ActivationSwitches(value) : m_activation_switches = value : End Property
    Public Property Let BallSearchHoldTime(value) : Set m_ball_search_hold_time = CreateGlfInput(value) : End Property
    Public Property Let ExcludeFromBallSearch(value) : m_exclude_from_ball_search = value : End Property
    Public Property Let Debug(value) : m_debug = value : End Property

  Public default Function init(name)
        m_name = "diverter_" & name
        m_enable_events = Array()
        m_disable_events = Array()
        Set m_activate_events = CreateObject("Scripting.Dictionary")
        Set m_deactivate_events = CreateObject("Scripting.Dictionary")
        m_activation_switches = Array()
        Set m_activation_time = CreateGlfInput(0)
        Set m_ball_search_hold_time = CreateGlfInput(1000)
        m_debug = False
        m_enabled = False
        m_active = False
        m_exclude_from_ball_search = False
        glf_diverters.Add name, Me
        Set Init = Me
  End Function

    Public Sub Enable()
        Log "Enabling"
        m_enabled = True
        Dim evt
        For Each evt in m_activate_events.Keys()
            AddPinEventListener m_activate_events(evt).EventName, m_name & "_" & evt & "_activate", "DiverterEventHandler", 1000, Array("activate", Me, m_activate_events(evt))
        Next
        For Each evt in m_deactivate_events.Keys()
            AddPinEventListener m_deactivate_events(evt).EventName, m_name & "_" & evt & "_deactivate", "DiverterEventHandler", 1000, Array("deactivate", Me, m_deactivate_events(evt))
        Next
        For Each evt in m_activation_switches
            AddPinEventListener evt & "_active", m_name & "_activate", "DiverterEventHandler", 1000, Array("activate", Me)
        Next
    End Sub

    Public Sub Disable()
        Log "Disabling"
        m_enabled = False
        Dim evt
        For Each evt in m_activate_events.Keys()
            RemovePinEventListener m_activate_events(evt).EventName, m_name & "_" & evt & "_activate"
        Next
        For Each evt in m_deactivate_events.Keys()
            RemovePinEventListener m_deactivate_events(evt).EventName, m_name & "_" & evt & "_deactivate"
        Next
        For Each evt in m_activation_switches
            RemovePinEventListener evt & "_active", m_name & "_activate"
        Next
        RemoveDelay m_name & "_deactivate"
        GetRef(m_action_cb)(0)
    End Sub

    Public Sub Activate()
        Log "Activating"
        m_active = True
        GetRef(m_action_cb)(1)
        If m_activation_time.Value > 0 Then
            SetDelay m_name & "_deactivate", "DiverterEventHandler", Array(Array("deactivate", Me), Null), m_activation_time.Value
        End If
        DispatchPinEvent m_name & "_activating", Null
    End Sub

    Public Sub Deactivate()
        Log "Deactivating"
        m_active = False
        RemoveDelay m_name & "_deactivate"
        GetRef(m_action_cb)(0)
        DispatchPinEvent m_name & "_deactivating", Null
    End Sub

    Public Sub BallSearch(phase)
        If m_exclude_from_ball_search = True Then
            Exit Sub
        End If
        Log "Ball Search, phase " & phase
        If m_active = False Then
            If Not IsEmpty(m_action_cb) Then
                m_active = True
                GetRef(m_action_cb)(1)
            End If
            SetDelay m_name & "ball_search_deactivate", "DiverterEventHandler", Array(Array("deactivate", Me), Null), m_ball_search_hold_time.Value
        Else
            If Not IsEmpty(m_action_cb) Then
                m_active = False
                GetRef(m_action_cb)(0)
            End If
            SetDelay m_name & "ball_search_activate", "DiverterEventHandler", Array(Array("activate", Me), Null), m_ball_search_hold_time.Value
        End If
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub
End Class

Function DiverterEventHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim diverter : Set diverter = ownProps(1)
    'Check if the evt has a condition to evaluate
    If UBound(ownProps) = 2 Then
        If IsObject(ownProps(2)) Then
            If ownProps(2).Evaluate() = False Then
                If IsObject(args(1)) Then
                    Set DiverterEventHandler = kwargs
                Else
                    DiverterEventHandler = kwargs
                End If
                Exit Function
            End If
        End If
    End If
    Select Case evt
        Case "enable"
            diverter.Enable
        Case "disable"
            diverter.Disable
        Case "activate"
            diverter.Activate
        Case "deactivate"
            diverter.Deactivate
    End Select
    If IsObject(args(1)) Then
        Set DiverterEventHandler = kwargs
    Else
        DiverterEventHandler = kwargs
    End If
End Function
Function CreateGlfDroptarget(name)
  Dim droptarget : Set droptarget = (new GlfDroptarget)(name)
  Set CreateGlfDroptarget = droptarget
End Function

Class GlfDroptarget

    Private m_name
  Private m_switch
    Private m_enable_keep_up_events
    Private m_disable_keep_up_events
  Private m_action_cb
  Private m_knockdown_events
  Private m_reset_events
    Private m_complete
    Private m_exclude_from_ball_search
    Private m_use_roth
    Private m_roth_array_index

    Private m_debug


    Public Property Get Name()
        Name = Replace(m_name, "drop_target_", "")
    End Property
  Public Property Let Switch(value)
    m_switch = value
    AddPinEventListener m_switch & "_active", m_name & "_switch_active", "DroptargetEventHandler", 1000, Array("switch_active", Me)
    AddPinEventListener m_switch & "_inactive", m_name & "_switch_inactive", "DroptargetEventHandler", 1000, Array("switch_inactive", Me)
  End Property
    Public Property Get Switch()
        Switch = m_switch
    End Property
    Public Property Let EnableKeepUpEvents(value)
        Dim evt
        If IsArray(m_enable_keep_up_events) Then
            For Each evt in m_enable_keep_up_events
                RemovePinEventListener evt, m_name & "_enable_keepup"
            Next
        End If
        m_enable_keep_up_events = value
        For Each evt in m_enable_keep_up_events
            AddPinEventListener evt, m_name & "_enable_keepup", "DroptargetEventHandler", 1000, Array("enable_keepup", Me)
        Next
    End Property
    Public Property Let DisableKeepUpEvents(value)
        Dim evt
        If IsArray(m_disable_keep_up_events) Then
            For Each evt in m_disable_keep_up_events
                RemovePinEventListener evt, m_name & "_disable_keepup"
            Next
        End If
        m_disable_keep_up_events = value
        For Each evt in m_disable_keep_up_events
            AddPinEventListener evt, m_name & "_disable_keepup", "DroptargetEventHandler", 1000, Array("disable_keepup", Me)
        Next
    End Property

    Public Property Let ActionCallback(value) : m_action_cb = value : End Property
  Public Property Let KnockdownEvents(value)
    Dim evt
    If IsArray(m_knockdown_events) Then
      For Each evt in m_knockdown_events
        RemovePinEventListener evt, m_name & "_knockdown"
      Next
    End If
    m_knockdown_events = value
    For Each evt in m_knockdown_events
      AddPinEventListener evt, m_name & "_knockdown", "DroptargetEventHandler", 1000, Array("knockdown", Me)
    Next
  End Property
  Public Property Let ResetEvents(value)
    Dim evt
    If IsArray(m_reset_events) Then
      For Each evt in m_reset_events
        RemovePinEventListener evt, m_name & "_reset"
      Next
    End If
    m_reset_events = value
    For Each evt in m_reset_events
      AddPinEventListener evt, m_name & "_reset", "DroptargetEventHandler", 1000, Array("reset", Me)
    Next
  End Property
    Public Property Let ExcludeFromBallSearch(value) : m_exclude_from_ball_search = value : End Property
    Public Property Get UseRothDroptarget()
        UseRothDroptarget = m_use_roth
    End Property
    Public Property Let UseRothDroptarget(value)
        m_use_roth = value
    End Property
    Public Property Get RothDTSwitchID()
        RothDTSwitchID = m_roth_array_index
    End Property
    Public Property Let RothDTSwitchID(value)
        m_roth_array_index = value
    End Property

    Public Property Let Debug(value) : m_debug = value : End Property

  Public default Function init(name)
        m_name = "drop_target_" & name
    m_switch = Empty
        EnableKeepUpEvents = Array()
        DisableKeepUpEvents = Array()
    m_action_cb = Empty
    KnockdownEvents = Array()
    ResetEvents = Array()
        m_complete = 0
    m_debug = False
        m_use_roth = False
        m_roth_array_index = -1
        m_exclude_from_ball_search = False
        glf_drop_targets.Add name, Me
        Set Init = Me
  End Function

    Public Sub UpdateStateFromSwitch(is_complete)

    Log "Drop target " & m_name & " switch " & m_switch & " has active value " & is_complete & " compared to drop complete " & m_complete

    If is_complete <> m_complete Then
      If is_complete = 1 Then
        Down()
      Else
        Up()
      End If
    End If
    'UpdateBanks()
    End Sub

    Public Sub Up()
        m_complete = 0
        DispatchPinEvent m_name & "_up", Null
    End Sub

  Public Sub Down()
        m_complete = 1
        DispatchPinEvent m_name & "_down", Null
    End Sub

  Public Sub EnableKeepup()
        If Not IsEmpty(m_action_cb) Then
            GetRef(m_action_cb)(3)
    End If
    End Sub

  Public Sub DisableKeepup()
        If Not IsEmpty(m_action_cb) Then
            GetRef(m_action_cb)(4)
    End If
    End Sub

  Public Sub Knockdown()
        If Not IsEmpty(m_action_cb) And m_complete = 0 Then
            GetRef(m_action_cb)(1)
    End If
    End Sub

  Public Sub Reset()
        If Not IsEmpty(m_action_cb) And m_complete = 1 Then
            GetRef(m_action_cb)(0)
    End If
    End Sub

    Public Sub BallSearch(phase)
        If m_exclude_from_ball_search = True Then
            Exit Sub
        End If
        Log "Ball Search, phase " & phase
        If Not IsEmpty(m_action_cb) And m_complete = 0 Then
            GetRef(m_action_cb)(1) 'Knockdown
            SetDelay m_name & "ball_search_deactivate", "DroptargetEventHandler", Array(Array("reset", Me), Null), 100
    Else
            If Not IsEmpty(m_action_cb) And m_complete = 1 Then
                GetRef(m_action_cb)(0) 'Reset
                SetDelay m_name & "ball_search_deactivate", "DroptargetEventHandler", Array(Array("knockdown", Me), Null), 100
            End If
        End If
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub
End Class

Function DroptargetEventHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim droptarget : Set droptarget = ownProps(1)
    Select Case evt
        Case "switch_active"
            droptarget.UpdateStateFromSwitch 1
        Case "switch_inactive"
            droptarget.UpdateStateFromSwitch 0
        Case "enable_keepup"
            droptarget.EnableKeepup
        Case "disable_keepup"
            droptarget.DisableKeepup
        Case "knockdown"
            droptarget.Knockdown
        Case "reset"
            droptarget.Reset
    End Select
    If IsObject(args(1)) Then
        Set DroptargetEventHandler = kwargs
    Else
        DroptargetEventHandler = kwargs
    End If

End Function

Function CreateGlfFlipper(name)
  Dim flipper : Set flipper = (new GlfFlipper)(name)
  Set CreateGlfFlipper = flipper
End Function

Class GlfFlipper

    Private m_name
    Private m_enable_events
    Private m_disable_events
    Private m_enabled
    Private m_switch
    Private m_action_cb
    Private m_debug

    Public Property Let Switch(value)
        m_switch = value
    End Property
    Public Property Let ActionCallback(value) : m_action_cb = value : End Property
    Public Property Let EnableEvents(value)
        Dim evt
        If IsArray(m_enable_events) Then
            For Each evt in m_enable_events
                RemovePinEventListener evt, m_name & "_enable"
            Next
        End If
        m_enable_events = value
        For Each evt in m_enable_events
            AddPinEventListener evt, m_name & "_enable", "FlipperEventHandler", 1000, Array("enable", Me)
        Next
    End Property
    Public Property Let DisableEvents(value)
        Dim evt
        If IsArray(m_disable_events) Then
            For Each evt in m_enable_events
                RemovePinEventListener evt, m_name & "_disable"
            Next
        End If
        m_disable_events = value
        For Each evt in m_disable_events
            AddPinEventListener evt, m_name & "_disable", "FlipperEventHandler", 1000, Array("disable", Me)
        Next
    End Property
    Public Property Let Debug(value) : m_debug = value : End Property

  Public default Function init(name)
        m_name = "flipper_" & name
        EnableEvents = Array("ball_started")
        DisableEvents = Array("ball_will_end", "service_mode_entered")
        m_enabled = False
        m_action_cb = Empty
        m_switch = Empty
        m_debug = False
        glf_flippers.Add name, Me
        Set Init = Me
  End Function

    Public Sub Enable()
        Log "Enabling"
        m_enabled = True
        Dim evt
        If Not IsEmpty(m_switch) Then
            AddPinEventListener m_switch & "_active", m_name & "_active", "FlipperEventHandler", 1000, Array("activate", Me)
            AddPinEventListener m_switch & "_inactive", m_name & "_inactive", "FlipperEventHandler", 1000, Array("deactivate", Me)
        End If
    End Sub

    Public Sub Disable()
        Log "Disabling"
        m_enabled = False
        Deactivate()
        Dim evt
        RemovePinEventListener m_switch & "_active", m_name & "_active"
        RemovePinEventListener m_switch & "_inactive", m_name & "_inactive"
    End Sub

    Public Sub Activate()
        Log "Activating"
        If Not IsEmpty(m_action_cb) Then
            GetRef(m_action_cb)(1)
        End If
        DispatchPinEvent m_name & "_activate", Null
    End Sub

    Public Sub Deactivate()
        Log "Deactivating"
        If Not IsEmpty(m_action_cb) Then
            GetRef(m_action_cb)(0)
        End If
        DispatchPinEvent m_name & "_deactivate", Null
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub
End Class

Function FlipperEventHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim flipper : Set flipper = ownProps(1)
    Select Case evt
        Case "enable"
            flipper.Enable
        Case "disable"
            flipper.Disable
        Case "activate"
            flipper.Activate
        Case "deactivate"
            flipper.Deactivate
    End Select
    If IsObject(args(1)) Then
        Set FlipperEventHandler = kwargs
    Else
        FlipperEventHandler = kwargs
    End If
End Function
Function CreateGlfLightSegmentDisplay(name)
  Dim segment_display : Set segment_display = (new GlfLightSegmentDisplay)(name)
  Set CreateGlfLightSegmentDisplay = segment_display
End Function

Class GlfLightSegmentDisplay
    private m_name
    private m_flash_on
    private m_flashing
    private m_flash_mask

    private m_text
    private m_current_text
    private m_display_state
    private m_current_state
    private m_current_flashing
    Private m_current_flash_mask
    private m_lights
    private m_light_group
    private m_light_groups
    private m_segmentmap
    private m_segment_type
    private m_size
    private m_update_method
    private m_text_stack
    private m_current_text_stack_entry
    private m_integrated_commas
    private m_integrated_dots
    private m_use_dots_for_commas
    private m_display_flash_duty
    private m_display_flash_display_flash_frequency
    private m_default_transition_update_hz
    private m_color
    private m_flex_dmd_index
    private m_b2s_dmd_index

    Public Property Get Name() : Name = m_name : End Property

    Public Property Get SegmentType() : SegmentType = m_segment_type : End Property
    Public Property Let SegmentType(input)
        m_segment_type = input
        If m_segment_type = "14Segment" Then
            Set m_segmentmap = FOURTEEN_SEGMENTS
        ElseIf m_segment_type = "7Segment" Then
            Set m_segmentmap = SEVEN_SEGMENTS
        End If
        CalculateLights()
    End Property

    Public Property Get LightGroup() : LightGroup = m_light_group : End Property
    Public Property Let LightGroup(input)
        m_light_group = input
        CalculateLights()
    End Property

    Public Property Get LightGroups() : LightGroups = m_light_groups : End Property
    Public Property Let LightGroups(input)
        m_light_groups = input
        CalculateLights()
    End Property

    Public Property Get UpdateMethod() : UpdateMethod = m_update_method : End Property
    Public Property Let UpdateMethod(input) : m_update_method = input : End Property

    Public Property Get SegmentSize() : SegmentSize = m_size : End Property
    Public Property Let SegmentSize(input)
        m_size = input
        CalculateLights()
    End Property

    Public Property Get IntegratedCommas() : IntegratedCommas = m_integrated_commas : End Property
    Public Property Let IntegratedCommas(input) : m_integrated_commas = input : End Property

    Public Property Get IntegratedDots() : IntegratedDots = m_integrated_dots : End Property
    Public Property Let IntegratedDots(input) : m_integrated_dots = input : End Property

    Public Property Get UseDotsForCommas() : UseDotsForCommas = m_use_dots_for_commas : End Property
    Public Property Let UseDotsForCommas(input) : m_use_dots_for_commas = input : End Property

    Public Property Get DefaultColor() : DefaultColor = m_color : End Property
    Public Property Let DefaultColor(input) : m_color = input : End Property

    Public Property Let ExternalFlexDmdSegmentIndex(input)
        m_flex_dmd_index = input
    End Property

    Public Property Let ExternalB2SSegmentIndex(input)
        m_b2s_dmd_index = input
    End Property

    Public Property Get DefaultTransitionUpdateHz() : DefaultTransitionUpdateHz = m_default_transition_update_hz : End Property
    Public Property Let DefaultTransitionUpdateHz(input) : m_default_transition_update_hz = input : End Property

    Public default Function init(name)
        m_name = name
        m_flash_on = True
        m_flashing = "no_flash"
        m_flash_mask = Empty
        m_text = Empty
        m_size = 0
        m_segment_type = Empty
        m_segmentmap = Null
        m_light_group = Empty
        m_light_groups = Array()
        m_current_text = Empty
        m_display_state = Empty
        m_current_state = Null
        m_current_flashing = Empty
        m_current_flash_mask = Empty
        m_current_text_stack_entry = Null
        Set m_text_stack = (new GlfTextStack)()
        m_update_method = "replace"
        m_lights = Array()
        m_integrated_commas = False
        m_integrated_dots = False
        m_use_dots_for_commas = False
        m_flex_dmd_index = -1
        m_b2s_dmd_index = -1

        m_display_flash_duty = 30
        m_default_transition_update_hz = 30
        m_display_flash_display_flash_frequency = 60

        m_color = "ffffff"

        SetDelay m_name & "software_flash", "Glf_SegmentDisplaySoftwareFlashEventHandler", Array(True, Me), 100

        glf_segment_displays.Add name, Me
        Set Init = Me
    End Function

    Private Sub CalculateLights()
        If Not IsEmpty(m_segment_type) And m_size > 0 And (Not IsEmpty(m_light_group) Or Ubound(m_light_groups)>-1) Then
            m_lights = Array()
            If m_segment_type = "14Segment" Then
                ReDim m_lights((m_size * 15)-1)
            ElseIf m_segment_type = "7Segment" Then
                ReDim m_lights((m_size * 8)-1)
            End If

            Dim i, group_idx, current_light_group
            If Not IsEmpty(m_light_group) Then
                current_light_group = m_light_group
            ElseIf UBound(m_light_groups)>-1 Then
                current_light_group = m_light_groups(0)
                group_idx = 0
            End If
            Dim k : k = 0
            For i=0 to UBound(m_lights)
                'On Error Resume Next
                If typename(Eval(current_light_group & CStr(k+1))) = "Light" Then
                    m_lights(i) = current_light_group & CStr(k+1)
                    k=k+1
                Else
                    'msgbox typename(Eval(current_light_group & CStr(k+1)))
                    'msgbox current_light_group & CStr(k+1)
                    current_light_group = m_light_groups(group_idx+1)
                    'msgbox current_light_group
                    group_idx = group_idx + 1
                    k = 0
                    m_lights(i) = current_light_group & CStr(k+1)
                    k=k+1
                End If

            Next
        End If
    End Sub

    Public Sub SetVirtualDMDLights(input)
        If glf_table.ShowDT Then
            If m_flex_dmd_index>-1 Then
                Dim x
                For x=0 to UBound(m_lights)
                    glf_lightNames(m_lights(x)).Visible = input
                Next
            End If
        End If
    End Sub

    Private Sub SetText(text, flashing, flash_mask)
        'Set a text to the display.
        Exit Sub


        'If flashing = "no_flash" Then
        '    m_flash_on = True
        'ElseIf flashing = "flash_mask" Then
            'm_flash_mask = flash_mask.rjust(len(text))
        'End If

        'If flashing = "no_flash" or m_flash_on = True or Not IsNull(text) Then
        '    If text <> m_display_state Then
        '        m_display_state = text
                'Set text to lights.
        '        If text="" Then
        '            text = Glf_FormatValue(text, " >" & CStr(m_size))
        '        Else
        '            text = Right(text, m_size)
        '        End If
        '        If text <> m_current_text Then
        '            m_current_text = text
        '            UpdateText()
        '        End If
        '    End If
        'End If
    End Sub

    Private Sub UpdateDisplay(segment_text, flashing, flash_mask)
        Set m_current_state = segment_text
        m_flashing = flashing
        m_flash_mask = flash_mask
        'SetText m_current_state.ConvertToString(), flashing, flash_mask
        UpdateText()
    End Sub

    Private Sub UpdateText()
        'iterate lights and chars
        Dim mapped_text, segment
        If m_flash_on = True Or m_flashing = "no_flash" Then
            mapped_text = MapSegmentTextToSegments(m_current_state, m_size, m_segmentmap)
        Else
            If m_flashing = "mask" Then
                mapped_text = MapSegmentTextToSegments(m_current_state.BlankSegments(m_flash_mask), m_size, m_segmentmap)
            ElseIf m_flashing = "match" Then
                mapped_text = MapSegmentTextToSegments(m_current_state.BlankSegments(String(m_size, "F")), m_size, m_segmentmap)
            Else
                mapped_text = MapSegmentTextToSegments(m_current_state.BlankSegments(String(m_size, "F")), m_size, m_segmentmap)
            End If
        End If
        Dim segment_idx, i : segment_idx = 0 : i = 0
        For Each segment in mapped_text

            If m_segment_type = "14Segment" Then
                Glf_SetLight m_lights(segment_idx), SegmentColor(segment.a)
                Glf_SetLight m_lights(segment_idx + 1), SegmentColor(segment.b)
                Glf_SetLight m_lights(segment_idx + 2), SegmentColor(segment.c)
                Glf_SetLight m_lights(segment_idx + 3), SegmentColor(segment.d)
                Glf_SetLight m_lights(segment_idx + 4), SegmentColor(segment.e)
                Glf_SetLight m_lights(segment_idx + 5), SegmentColor(segment.f)
                Glf_SetLight m_lights(segment_idx + 6), SegmentColor(segment.g1)
                Glf_SetLight m_lights(segment_idx + 7), SegmentColor(segment.g2)
                Glf_SetLight m_lights(segment_idx + 8), SegmentColor(segment.h)
                Glf_SetLight m_lights(segment_idx + 9), SegmentColor(segment.j)
                Glf_SetLight m_lights(segment_idx + 10), SegmentColor(segment.k)
                Glf_SetLight m_lights(segment_idx + 11), SegmentColor(segment.n)
                Glf_SetLight m_lights(segment_idx + 12), SegmentColor(segment.m)
                Glf_SetLight m_lights(segment_idx + 13), SegmentColor(segment.l)
                Glf_SetLight m_lights(segment_idx + 14), SegmentColor(segment.dp)
                If m_flex_dmd_index > -1 Then
                    'debug.print segment.CharMapping
                    dim hex
                    hex = segment.CharMapping
                    'debug.print typename(hex)
                    On Error Resume Next
            glf_flex_alphadmd_segments(m_flex_dmd_index+i) = hex
            If Err Then Debug.Print "Error: " & Err
                    'glf_flex_alphadmd_segments(m_flex_dmd_index+i) = segment.CharMapping '&h2A0F '0010101000001111
                    glf_flex_alphadmd.Segments = glf_flex_alphadmd_segments
                End If
                If m_b2s_dmd_index > -1 Then
                    dim b2sChar
                    b2sChar = segment.B2SLEDValue
                    On Error Resume Next
            controller.B2SSetLED m_b2s_dmd_index+i, b2sChar
            If Err Then Debug.Print "Error: " & Err
                End If
                segment_idx = segment_idx + 15
            ElseIf m_segment_type = "7Segment" Then
                Glf_SetLight m_lights(segment_idx), SegmentColor(segment.a)
                Glf_SetLight m_lights(segment_idx + 1), SegmentColor(segment.b)
                Glf_SetLight m_lights(segment_idx + 2), SegmentColor(segment.c)
                Glf_SetLight m_lights(segment_idx + 3), SegmentColor(segment.d)
                Glf_SetLight m_lights(segment_idx + 4), SegmentColor(segment.e)
                Glf_SetLight m_lights(segment_idx + 5), SegmentColor(segment.f)
                Glf_SetLight m_lights(segment_idx + 6), SegmentColor(segment.g)
                Glf_SetLight m_lights(segment_idx + 7), SegmentColor(segment.dp)
                segment_idx = segment_idx + 8
            End If
            i = i + 1
        Next
    End Sub

    Private Function SegmentColor(value)
        If value = 1 Then
            SegmentColor = m_color
        Else
            SegmentColor = "000000"
        End If
    End Function

    Public Sub AddTextEntry(text, color, flashing, flash_mask, transition, transition_out, priority, key)

        If m_update_method = "stack" Then
            m_text_stack.Push text,color,flashing,flash_mask,transition,transition_out,priority,key
            UpdateStack()
        Else
            Dim new_text : new_text = Glf_SegmentTextCreateCharacters(text.Value(), m_size, m_integrated_commas, m_integrated_dots, m_use_dots_for_commas, Array())
            Dim display_text : Set display_text = (new GlfSegmentDisplayText)(new_text,m_integrated_commas, m_integrated_dots, m_use_dots_for_commas)
            UpdateDisplay display_text, flashing, flash_mask
        End If
    End Sub

    Public Sub UpdateTransition(transition_runner)
        Dim display_text
        display_text = transition_runner.NextStep()
        If IsNull(display_text) Then
            UpdateStack()
        Else
            Set display_text = (new GlfSegmentDisplayText)(display_text,m_integrated_commas, m_integrated_dots, m_use_dots_for_commas)
            UpdateDisplay display_text, m_flashing, m_flash_mask
            SetDelay m_name & "_update_transition", "Glf_SegmentDisplayUpdateTransition", Array(Me, transition_runner), 1000/m_default_transition_update_hz
        End If
    End Sub

    Public Sub UpdateStack()

        Dim top_text_stack_entry, top_is_current
        top_is_current = False
        If m_text_stack.IsEmpty() Then
            Dim empty_text : Set empty_text = (new GlfInput)("""" & String(m_size, " ") & """")
            Set top_text_stack_entry = (new GlfTextStackEntry)(empty_text,Null,"no_flash","",Null,Null,999999,"")
        Else
            Set top_text_stack_entry = m_text_stack.Peek()
        End If

        Dim previous_text_stack_entry : previous_text_stack_entry = Null
        If Not IsNull(m_current_text_stack_entry) Then
            Set previous_text_stack_entry = m_current_text_stack_entry
            If previous_text_stack_entry.text.IsPlayerState() Then
                RemovePlayerStateEventListener previous_text_stack_entry.text.PlayerStateValue(), m_name
            ElseIf previous_text_stack_entry.text.IsDeviceState() Then
                RemovePinEventListener top_text_stack_entry.text.DeviceStateEvent() , m_name
            End If

            If m_current_text_stack_entry.Key = top_text_stack_entry.Key Then
                top_is_current = True
            End If
        End If

        Set m_current_text_stack_entry = top_text_stack_entry

        'determine if the new key is different than the previous key (out transitions are only applied when changing keys)
        Dim transition_config : transition_config = Null
        If Not IsNull(previous_text_stack_entry) Then
            If top_text_stack_entry.key <> previous_text_stack_entry.key And Not IsNull(previous_text_stack_entry.transition_out) Then
                Set transition_config = previous_text_stack_entry.transition_out
            End If
        End If
        'determine if new text entry has a transition, if so, apply it (overrides any outgoing transition)
        If Not IsNull(top_text_stack_entry.transition) Then
            Set transition_config = top_text_stack_entry.transition
        End If
        'start transition (if configured)
        Dim flashing, flash_mask, display_text
        If Not IsNull(transition_config) And Not top_is_current Then
            'msgbox "starting transition"
            Dim transition_runner
            Select Case transition_config.TransitionType()
                case "push":
                    Set transition_runner = (new GlfPushTransition)(m_size, True, True, True)
                    transition_runner.Direction = transition_config.Direction()
                    transition_runner.TransitionText = transition_config.Text()
                case "cover":
                    Set transition_runner = (new GlfCoverTransition)(m_size, True, True, True)
                    transition_runner.Direction = transition_config.Direction()
                    transition_runner.TransitionText = transition_config.Text()
            End Select

            Dim previous_text
            If Not IsNull(previous_text_stack_entry) Then
                previous_text = previous_text_stack_entry.text.Value()
            Else
                previous_text = String(m_size, " ")
            End If

            If Not IsEmpty(top_text_stack_entry.flashing) Then
                flashing = top_text_stack_entry.flashing
                flash_mask = top_text_stack_entry.flash_mask
            Else
                flashing = m_current_state.flashing
                flash_mask = m_current_state.flash_mask
            End If
            display_text = transition_runner.StartTransition(previous_text, top_text_stack_entry.text.Value(), Array(), Array())
            Set display_text = (new GlfSegmentDisplayText)(display_text,m_integrated_commas, m_integrated_dots, m_use_dots_for_commas)
            UpdateDisplay display_text, flashing, flash_mask
            SetDelay m_name & "_update_transition", "Glf_SegmentDisplayUpdateTransition", Array(Me, transition_runner), 1000/m_default_transition_update_hz
        Else
            'no transition - subscribe to text template changes and update display
            RemoveDelay m_name & "_update_transition"
            If top_text_stack_entry.text.IsPlayerState() Then
                AddPlayerStateEventListener top_text_stack_entry.text.PlayerStateValue(), m_name, top_text_stack_entry.text.PlayerStatePlayer(), "Glf_SegmentTextStackEventHandler", top_text_stack_entry.priority, Me
            ElseIf top_text_stack_entry.text.IsDeviceState() Then
                AddPinEventListener top_text_stack_entry.text.DeviceStateEvent() , m_name, "Glf_SegmentTextStackEventHandler", top_text_stack_entry.priority, Me
            End If

            'set any flashing state specified in the entry
            If Not IsEmpty(top_text_stack_entry.flashing) Then
                flashing = top_text_stack_entry.flashing
                flash_mask = top_text_stack_entry.flash_mask
            Else
                flashing = m_current_state.flashing
                flash_mask = m_current_state.flash_mask
            End If

            'update the display
            Dim text_value : text_value = top_text_stack_entry.text.Value()

            If text_value = False Then
                text_value = String(m_size, " ")
            End If
            Dim new_text : new_text = Glf_SegmentTextCreateCharacters(text_value, m_size, m_integrated_commas, m_integrated_dots, m_use_dots_for_commas, Array())
            Set display_text = (new GlfSegmentDisplayText)(new_text,m_integrated_commas, m_integrated_dots, m_use_dots_for_commas)
            UpdateDisplay display_text, flashing, flash_mask
        End If
    End Sub

    Public Sub CurrentPlaceholderChanged()
        Dim text_value : text_value = m_current_text_stack_entry.text.Value()
        'msgbox text_value
        If text_value = False Then
            text_value = String(m_size, " ")
        End If
        Dim new_text : new_text = Glf_SegmentTextCreateCharacters(text_value, m_size, m_integrated_commas, m_integrated_dots, m_use_dots_for_commas, Array())
        Dim display_text : Set display_text = (new GlfSegmentDisplayText)(new_text,m_integrated_commas, m_integrated_dots, m_use_dots_for_commas)
        UpdateDisplay display_text, m_current_text_stack_entry.flashing, m_current_text_stack_entry.flash_mask
    End Sub

    Public Sub RemoveTextByKey(key)
        m_text_stack.PopByKey key
        UpdateStack()
    End Sub

    Public Sub RemoveTextByKeyNoUpdate(key)
        m_text_stack.PopByKey key
    End Sub

    Public Sub SetFlashing(flash_type)

    End Sub

    Public Sub SetFlashingMask(mask)

    End Sub

    Public Sub SetColor(color)

    End Sub

    Public Sub SetSoftwareFlash(enabled)
        m_flash_on = enabled

        If m_flashing = "no_flash" Then
            Exit Sub
        End If

        If IsNull(m_current_state) Then
            Exit Sub
        End If
        UpdateText
    End Sub

End Class

Sub Glf_SegmentDisplaySoftwareFlashEventHandler(args)
    Dim display, enabled
    Set display = args(1)
    enabled = args(0)
    If enabled = True Then
        SetDelay display.Name & "software_flash", "Glf_SegmentDisplaySoftwareFlashEventHandler", Array(False, display), 100
        display.SetSoftwareFlash True
    Else
        SetDelay display.Name & "software_flash", "Glf_SegmentDisplaySoftwareFlashEventHandler", Array(True, display), 100
        display.SetSoftwareFlash False
    End If


End Sub

Sub Glf_SegmentTextStackEventHandler(args)
    Dim segment
    Set segment = args(0)
    'kwargs = args(1)
    'Dim player_var : player_var = kwargs(0)
    'Dim value : value = kwargs(1)
    'Dim prevValue : prevValue = kwargs(2)
    segment.CurrentPlaceholderChanged()
End Sub

Sub Glf_SegmentDisplayUpdateTransition(args)
    Dim display, runner
    Set display = args(0)
    Set runner = args(1)
    display.UpdateTransition runner
End Sub

Class GlfTextStackEntry
    Public text, colors, flashing, flash_mask, transition, transition_out, priority, key

    Public default Function init(text, colors, flashing, flash_mask, transition, transition_out, priority, key)
        Set Me.text = text
        Me.colors = colors
        Me.flashing = flashing
        Me.flash_mask = flash_mask
        If Not IsNull(transition) Then
            Set Me.transition = transition
        Else
            Me.transition = Null
        End If
        If Not IsNull(transition_out) Then
            Set Me.transition_out = transition_out
        Else
            Me.transition_out = Null
        End If
        Me.priority = priority
        Me.key = key
        Set Init = Me
    End Function
End Class

Class GlfTextStack
    Private stack

    ' Initialize an empty stack
    Public default Function Init()
        ReDim stack(-1)  ' Initialize an empty array
        Set Init = Me
    End Function

    ' Push a new text entry onto the stack or update an existing one
    Public Sub Push(text, colors, flashing, flash_mask, transition, transition_out, priority, key)
        Dim found : found = False
        Dim i

        ' Check if the key already exists in the stack and update it
        For i = LBound(stack) To UBound(stack)
            If stack(i).key = key Then
                ' Replace the existing item if the key matches
                Set stack(i) = CreateTextStackEntry(text, colors, flashing, flash_mask, transition, transition_out, priority, key)
                found = True
                Exit For
            End If
        Next

        If Not found Then
            ' Insert the new item into the array maintaining priority order
            ReDim Preserve stack(UBound(stack) + 1)
            Set stack(UBound(stack)) = CreateTextStackEntry(text, colors, flashing, flash_mask, transition, transition_out, priority, key)
            SortStackByPriority
        End If
    End Sub

    ' Pop a specific entry from the stack by key
    Public Function PopByKey(key)
        Dim i, removedItem, found
        found = False
        Set removedItem = Nothing

        ' Loop through the stack to find the item with the matching key
        For i = LBound(stack) To UBound(stack)
            If stack(i).key = key Then
                ' Store the item to be removed
                Set removedItem = stack(i)
                found = True

                ' Shift all elements after the removed item to the left
                Dim j
                For j = i To UBound(stack) - 1
                    Set stack(j) = stack(j + 1)
                Next

                ' Resize the array to remove the last element
                ReDim Preserve stack(UBound(stack) - 1)
                Exit For
            End If
        Next

        ' Return the removed item (or Nothing if not found)
        If found Then
            Set PopByKey = removedItem
        Else
            Set PopByKey = Nothing
        End If
    End Function

    ' Peek at the top entry of the stack without popping it
    Public Function Peek()
        If UBound(stack) >= 0 Then
            Set Peek = stack(LBound(stack))
        Else
            Set Peek = Nothing
        End If
    End Function

    ' Check if the stack is empty
    Public Function IsEmpty()
        IsEmpty = (UBound(stack) < 0)
    End Function

    ' Create a new GlfTextStackEntry object
    Private Function CreateTextStackEntry(text, colors, flashing, flash_mask, transition, transition_out, priority, key)
        Dim entry
        Set entry = New GlfTextStackEntry
        entry.init text, colors, flashing, flash_mask, transition, transition_out, priority, key
        Set CreateTextStackEntry = entry
    End Function

    ' Sort the stack by priority (descending)
    Private Sub SortStackByPriority()
        Dim i, j
        Dim temp
        For i = LBound(stack) To UBound(stack) - 1
            For j = i + 1 To UBound(stack)
                If stack(i).priority < stack(j).priority Then
                    ' Swap the elements
                    Set temp = stack(i)
                    Set stack(i) = stack(j)
                    Set stack(j) = temp
                End If
            Next
        Next
    End Sub
End Class


Class FourteenSegments
    Public dp, l, m, n, k, j, h, g2, g1, f, e, d, c, b, a, char, hexcode, hexcode_dp

    Public Function CloneMapping()
        Set CloneMapping = (new FourteenSegments)(dp,l,m,n,k,j,h,g2,g1,f,e,d,c,b,a,char)
    End Function

    Public Property Get CharMapping()
        If dp = 1 Then
            CharMapping = hexcode_dp
        Else
            CharMapping = hexcode
        End If
    End Property

    Public Property Get B2SLEDValue()           'to be used with dB2S 15-segments-LED used in Herweh's Designer
        B2SLEDValue = 0                 'default for unknown characters
        select case char
            Case "","": B2SLEDValue = 0
            Case "0": B2SLEDValue = 63
            Case "1": B2SLEDValue = 8704
            Case "2": B2SLEDValue = 2139
            Case "3": B2SLEDValue = 2127
            Case "4": B2SLEDValue = 2150
            Case "5": B2SLEDValue = 2157
            Case "6": B2SLEDValue = 2172
            Case "7": B2SLEDValue = 7
            Case "8": B2SLEDValue = 2175
            Case "9": B2SLEDValue = 2159
            Case "A": B2SLEDValue = 2167
            Case "B": B2SLEDValue = 10767
            Case "C": B2SLEDValue = 57
            Case "D": B2SLEDValue = 8719
            Case "E": B2SLEDValue = 121
            Case "F": B2SLEDValue = 2161
            Case "G": B2SLEDValue = 2109
            Case "H": B2SLEDValue = 2166
            Case "I": B2SLEDValue = 8713
            Case "J": B2SLEDValue = 31
            Case "K": B2SLEDValue = 5232
            Case "L": B2SLEDValue = 56
            Case "M": B2SLEDValue = 1334
            Case "N": B2SLEDValue = 4406
            Case "O": B2SLEDValue = 63
            Case "P": B2SLEDValue = 2163
            Case "Q": B2SLEDValue = 4287
            Case "R": B2SLEDValue = 6259
            Case "S": B2SLEDValue = 2157
            Case "T": B2SLEDValue = 8705
            Case "U": B2SLEDValue = 62
            Case "V": B2SLEDValue = 17456
            Case "W": B2SLEDValue = 20534
            Case "X": B2SLEDValue = 21760
            Case "Y": B2SLEDValue = 9472
            Case "Z": B2SLEDValue = 17417
            Case "<": B2SLEDValue = 5120
            Case ">": B2SLEDValue = 16640
            Case "^": B2SLEDValue = 17414
            Case ".": B2SLEDValue = 8
            Case "!": B2SLEDValue = 0
            Case ".": B2SLEDValue = 128
            Case "*": B2SLEDValue = 32576
            Case "/": B2SLEDValue = 17408
            Case "\": B2SLEDValue = 4352
            Case "|": B2SLEDValue = 8704
            Case "=": B2SLEDValue = 2120
            Case "+": B2SLEDValue = 10816
            Case "-": B2SLEDValue = 2112
        End Select
        B2SLEDValue = cint(B2SLEDValue)
    End Property

    Public default Function init(dp, l, m, n, k, j, h, g2, g1, f, e, d, c, b, a, char)
        Me.dp = dp
        Me.a = a
        Me.b = b
        Me.c = c
        Me.d = d
        Me.e = e
        Me.f = f
        Me.g1 = g1
        Me.g2 = g2
        Me.h = h
        Me.j = j
        Me.k = k
        Me.n = n
        Me.m = m
        Me.l = l
        Me.char = char

        Dim binaryString, decimalValue, i
        binaryString = CStr("0" & n & m & l & g2 & k & j & h & dp & g1 & f & e & d & c & b & a)
        If binaryString = "0000000000000000" Then
            hexcode = 0
        Else
            decimalValue = 0
            For i = 1 To Len(binaryString)
                decimalValue = decimalValue * 2 + Mid(binaryString, i, 1)
            Next
            hexcode = CInt("&H" & Right("0000" & UCase(Hex(decimalValue)), 4))
        End If
        binaryString = CStr("0" & n & m & l & g2 & k & j & h & 1 & g1 & f & e & d & c & b & a)
        decimalValue = 0
        For i = 1 To Len(binaryString)
            decimalValue = decimalValue * 2 + Mid(binaryString, i, 1)
        Next
        hexcode_dp = CInt("&H" & Right("0000" & UCase(Hex(decimalValue)), 4))
        Set Init = Me
    End Function
End Class



Class SevenSegments
    Public dp, g, f, e, d, c, b, a, char

    Public Function CloneMapping()
        Set CloneMapping = (new SevenSegments)(dp,g,f,e,d,c,b,a,char)
    End Function

    Public default Function init(dp, g, f, e, d, c, b, a, char)
        Me.dp = dp
        Me.a = a
        Me.b = b
        Me.c = c
        Me.d = d
        Me.e = e
        Me.f = f
        Me.g = g
        Me.char = char
        Set Init = Me
    End Function
End Class

Dim FOURTEEN_SEGMENTS
Set FOURTEEN_SEGMENTS = CreateObject("Scripting.Dictionary")

FOURTEEN_SEGMENTS.Add Null, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "?")
FOURTEEN_SEGMENTS.Add 32, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, " ")
FOURTEEN_SEGMENTS.Add 33, (New FourteenSegments)(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, "!")
FOURTEEN_SEGMENTS.Add 34, (New FourteenSegments)(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, Chr(34)) ' Character "
FOURTEEN_SEGMENTS.Add 35, (New FourteenSegments)(0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, "#")
FOURTEEN_SEGMENTS.Add 36, (New FourteenSegments)(0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, "$")
FOURTEEN_SEGMENTS.Add 37, (New FourteenSegments)(0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, "%")
FOURTEEN_SEGMENTS.Add 38, (New FourteenSegments)(0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, "&")
FOURTEEN_SEGMENTS.Add 39, (New FourteenSegments)(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, "'")
FOURTEEN_SEGMENTS.Add 40, (New FourteenSegments)(0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "(")
FOURTEEN_SEGMENTS.Add 41, (New FourteenSegments)(0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, ")")
FOURTEEN_SEGMENTS.Add 42, (New FourteenSegments)(0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, "*")
FOURTEEN_SEGMENTS.Add 43, (New FourteenSegments)(0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, "+")
FOURTEEN_SEGMENTS.Add 44, (New FourteenSegments)(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ",")
FOURTEEN_SEGMENTS.Add 45, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, "-")
FOURTEEN_SEGMENTS.Add 46, (New FourteenSegments)(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ".")
FOURTEEN_SEGMENTS.Add 47, (New FourteenSegments)(0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "/")
FOURTEEN_SEGMENTS.Add 48, (New FourteenSegments)(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, "0")
FOURTEEN_SEGMENTS.Add 49, (New FourteenSegments)(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, "1")
FOURTEEN_SEGMENTS.Add 50, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, "2")
FOURTEEN_SEGMENTS.Add 51, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, "3")
FOURTEEN_SEGMENTS.Add 52, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, "4")
FOURTEEN_SEGMENTS.Add 53, (New FourteenSegments)(0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, "5")
FOURTEEN_SEGMENTS.Add 54, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, "6")
FOURTEEN_SEGMENTS.Add 55, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, "7")
FOURTEEN_SEGMENTS.Add 56, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, "8")
FOURTEEN_SEGMENTS.Add 57, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, "9")
FOURTEEN_SEGMENTS.Add 58, (New FourteenSegments)(0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, ":")
FOURTEEN_SEGMENTS.Add 59, (New FourteenSegments)(0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, ";")
FOURTEEN_SEGMENTS.Add 60, (New FourteenSegments)(0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, "<")
FOURTEEN_SEGMENTS.Add 61, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, "=")
FOURTEEN_SEGMENTS.Add 62, (New FourteenSegments)(0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, ">")
FOURTEEN_SEGMENTS.Add 63, (New FourteenSegments)(1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, "?")
FOURTEEN_SEGMENTS.Add 64, (New FourteenSegments)(0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, "@")
FOURTEEN_SEGMENTS.Add 65, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, "A")
FOURTEEN_SEGMENTS.Add 66, (New FourteenSegments)(0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, "B")
FOURTEEN_SEGMENTS.Add 67, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, "C")
FOURTEEN_SEGMENTS.Add 68, (New FourteenSegments)(0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, "D")
FOURTEEN_SEGMENTS.Add 69, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, "E")
FOURTEEN_SEGMENTS.Add 70, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, "F")
FOURTEEN_SEGMENTS.Add 71, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, "G")
FOURTEEN_SEGMENTS.Add 72, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, "H")
FOURTEEN_SEGMENTS.Add 73, (New FourteenSegments)(0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, "I")
FOURTEEN_SEGMENTS.Add 74, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, "J")
FOURTEEN_SEGMENTS.Add 75, (New FourteenSegments)(0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, "K")
FOURTEEN_SEGMENTS.Add 76, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, "L")
FOURTEEN_SEGMENTS.Add 77, (New FourteenSegments)(0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, "M")
FOURTEEN_SEGMENTS.Add 78, (New FourteenSegments)(0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, "N")
FOURTEEN_SEGMENTS.Add 79, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, "O")
FOURTEEN_SEGMENTS.Add 80, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, "P")
FOURTEEN_SEGMENTS.Add 81, (New FourteenSegments)(0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, "Q")
FOURTEEN_SEGMENTS.Add 82, (New FourteenSegments)(0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, "R")
FOURTEEN_SEGMENTS.Add 83, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, "S")
FOURTEEN_SEGMENTS.Add 84, (New FourteenSegments)(0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, "T")
FOURTEEN_SEGMENTS.Add 85, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, "U")
FOURTEEN_SEGMENTS.Add 86, (New FourteenSegments)(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, "V")
FOURTEEN_SEGMENTS.Add 87, (New FourteenSegments)(0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, "W")
FOURTEEN_SEGMENTS.Add 88, (New FourteenSegments)(0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, "X")
FOURTEEN_SEGMENTS.Add 89, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, "Y")
FOURTEEN_SEGMENTS.Add 90, (New FourteenSegments)(0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, "Z")
FOURTEEN_SEGMENTS.Add 91, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, "[")
FOURTEEN_SEGMENTS.Add 92, (New FourteenSegments)(0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, Chr(92)) ' Character \
FOURTEEN_SEGMENTS.Add 93, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, "]")
FOURTEEN_SEGMENTS.Add 94, (New FourteenSegments)(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "^")
FOURTEEN_SEGMENTS.Add 95, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, "_")
FOURTEEN_SEGMENTS.Add 96, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, "`")
FOURTEEN_SEGMENTS.Add 97, (New FourteenSegments)(0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, "a")
FOURTEEN_SEGMENTS.Add 98, (New FourteenSegments)(0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, "b")
FOURTEEN_SEGMENTS.Add 99, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, "c")
FOURTEEN_SEGMENTS.Add 100, (New FourteenSegments)(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, "d")
FOURTEEN_SEGMENTS.Add 101, (New FourteenSegments)(0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, "e")
FOURTEEN_SEGMENTS.Add 102, (New FourteenSegments)(0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, "f")
FOURTEEN_SEGMENTS.Add 103, (New FourteenSegments)(0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, "g")
FOURTEEN_SEGMENTS.Add 104, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, "h")
FOURTEEN_SEGMENTS.Add 105, (New FourteenSegments)(0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "i")
FOURTEEN_SEGMENTS.Add 106, (New FourteenSegments)(0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, "j")
FOURTEEN_SEGMENTS.Add 107, (New FourteenSegments)(0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, "k")
FOURTEEN_SEGMENTS.Add 108, (New FourteenSegments)(0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, "l")
FOURTEEN_SEGMENTS.Add 109, (New FourteenSegments)(0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, "m")
FOURTEEN_SEGMENTS.Add 110, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, "n")
FOURTEEN_SEGMENTS.Add 111, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, "o")
FOURTEEN_SEGMENTS.Add 112, (New FourteenSegments)(0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, "p")
FOURTEEN_SEGMENTS.Add 113, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, "q")
FOURTEEN_SEGMENTS.Add 114, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, "r")
FOURTEEN_SEGMENTS.Add 115, (New FourteenSegments)(0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, "s")
FOURTEEN_SEGMENTS.Add 116, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, "t")
FOURTEEN_SEGMENTS.Add 117, (New FourteenSegments)(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, "u")
FOURTEEN_SEGMENTS.Add 118, (New FourteenSegments)(0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, "v")
FOURTEEN_SEGMENTS.Add 119, (New FourteenSegments)(0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, "w")
FOURTEEN_SEGMENTS.Add 120, (New FourteenSegments)(0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, "x")
FOURTEEN_SEGMENTS.Add 121, (New FourteenSegments)(0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, "y")
FOURTEEN_SEGMENTS.Add 122, (New FourteenSegments)(0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, "z")
FOURTEEN_SEGMENTS.Add 123, (New FourteenSegments)(0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, "{")
FOURTEEN_SEGMENTS.Add 124, (New FourteenSegments)(0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, "|")
FOURTEEN_SEGMENTS.Add 125, (New FourteenSegments)(0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, "}")
FOURTEEN_SEGMENTS.Add 126, (New FourteenSegments)(0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, "~")


Dim SEVEN_SEGMENTS
Set SEVEN_SEGMENTS = CreateObject("Scripting.Dictionary")

SEVEN_SEGMENTS.Add Null, (New SevenSegments)(0, 0, 0, 0, 0, 0, 0, 0, "?")
SEVEN_SEGMENTS.Add 32, (New SevenSegments)(0, 0, 0, 0, 0, 0, 0, 0, " ")
SEVEN_SEGMENTS.Add 33, (New SevenSegments)(1, 0, 0, 0, 0, 1, 1, 0, "!")
SEVEN_SEGMENTS.Add 34, (New SevenSegments)(0, 0, 1, 0, 0, 0, 1, 0, Chr(34)) ' Character "
SEVEN_SEGMENTS.Add 35, (New SevenSegments)(0, 1, 1, 1, 1, 1, 1, 0, "#")
SEVEN_SEGMENTS.Add 36, (New SevenSegments)(0, 1, 1, 0, 1, 1, 0, 1, "$")
SEVEN_SEGMENTS.Add 37, (New SevenSegments)(1, 1, 0, 1, 0, 0, 1, 0, "%")
SEVEN_SEGMENTS.Add 38, (New SevenSegments)(0, 1, 0, 0, 0, 1, 1, 0, "&")
SEVEN_SEGMENTS.Add 39, (New SevenSegments)(0, 0, 1, 0, 0, 0, 0, 0, "'")
SEVEN_SEGMENTS.Add 40, (New SevenSegments)(0, 0, 1, 0, 1, 0, 0, 1, "(")
SEVEN_SEGMENTS.Add 41, (New SevenSegments)(0, 0, 0, 0, 1, 0, 1, 1, ")")
SEVEN_SEGMENTS.Add 42, (New SevenSegments)(0, 0, 1, 0, 0, 0, 0, 1, "*")
SEVEN_SEGMENTS.Add 43, (New SevenSegments)(0, 1, 1, 1, 0, 0, 0, 0, "+")
SEVEN_SEGMENTS.Add 44, (New SevenSegments)(0, 0, 0, 1, 0, 0, 0, 0, ",")
SEVEN_SEGMENTS.Add 45, (New SevenSegments)(0, 1, 0, 0, 0, 0, 0, 0, "-")
SEVEN_SEGMENTS.Add 46, (New SevenSegments)(1, 0, 0, 0, 0, 0, 0, 0, ".")
SEVEN_SEGMENTS.Add 47, (New SevenSegments)(0, 1, 0, 1, 0, 0, 1, 0, "/")
SEVEN_SEGMENTS.Add 48, (New SevenSegments)(0, 0, 1, 1, 1, 1, 1, 1, "0")
SEVEN_SEGMENTS.Add 49, (New SevenSegments)(0, 0, 0, 0, 0, 1, 1, 0, "1")
SEVEN_SEGMENTS.Add 50, (New SevenSegments)(0, 1, 0, 1, 1, 0, 1, 1, "2")
SEVEN_SEGMENTS.Add 51, (New SevenSegments)(0, 1, 0, 0, 1, 1, 1, 1, "3")
SEVEN_SEGMENTS.Add 52, (New SevenSegments)(0, 1, 1, 0, 0, 1, 1, 0, "4")
SEVEN_SEGMENTS.Add 53, (New SevenSegments)(0, 1, 1, 0, 1, 1, 0, 1, "5")
SEVEN_SEGMENTS.Add 54, (New SevenSegments)(0, 1, 1, 1, 1, 1, 0, 1, "6")
SEVEN_SEGMENTS.Add 55, (New SevenSegments)(0, 0, 0, 0, 0, 1, 1, 1, "7")
SEVEN_SEGMENTS.Add 56, (New SevenSegments)(0, 1, 1, 1, 1, 1, 1, 1, "8")
SEVEN_SEGMENTS.Add 57, (New SevenSegments)(0, 1, 1, 0, 1, 1, 1, 1, "9")
SEVEN_SEGMENTS.Add 58, (New SevenSegments)(0, 0, 0, 0, 1, 0, 0, 1, ":")
SEVEN_SEGMENTS.Add 59, (New SevenSegments)(0, 0, 0, 0, 1, 1, 0, 1, ";")
SEVEN_SEGMENTS.Add 60, (New SevenSegments)(0, 1, 1, 0, 0, 0, 0, 1, "<")
SEVEN_SEGMENTS.Add 61, (New SevenSegments)(0, 1, 0, 0, 1, 0, 0, 0, "=")
SEVEN_SEGMENTS.Add 62, (New SevenSegments)(0, 1, 0, 0, 0, 0, 1, 1, ">")
SEVEN_SEGMENTS.Add 63, (New SevenSegments)(1, 1, 0, 1, 0, 0, 1, 1, "?")
SEVEN_SEGMENTS.Add 64, (New SevenSegments)(0, 1, 0, 1, 1, 1, 1, 1, "@")
SEVEN_SEGMENTS.Add 65, (New SevenSegments)(0, 1, 1, 1, 0, 1, 1, 1, "A")
SEVEN_SEGMENTS.Add 66, (New SevenSegments)(0, 1, 1, 1, 1, 1, 0, 0, "B")
SEVEN_SEGMENTS.Add 67, (New SevenSegments)(0, 0, 1, 1, 1, 0, 0, 1, "C")
SEVEN_SEGMENTS.Add 68, (New SevenSegments)(0, 1, 0, 1, 1, 1, 1, 0, "D")
SEVEN_SEGMENTS.Add 69, (New SevenSegments)(0, 1, 1, 1, 1, 0, 0, 1, "E")
SEVEN_SEGMENTS.Add 70, (New SevenSegments)(0, 1, 1, 1, 0, 0, 0, 1, "F")
SEVEN_SEGMENTS.Add 71, (New SevenSegments)(0, 0, 1, 1, 1, 1, 0, 1, "G")
SEVEN_SEGMENTS.Add 72, (New SevenSegments)(0, 1, 1, 1, 0, 1, 1, 0, "H")
SEVEN_SEGMENTS.Add 73, (New SevenSegments)(0, 0, 1, 1, 0, 0, 0, 0, "I")
SEVEN_SEGMENTS.Add 74, (New SevenSegments)(0, 0, 0, 1, 1, 1, 1, 0, "J")
SEVEN_SEGMENTS.Add 75, (New SevenSegments)(0, 1, 1, 1, 0, 1, 0, 1, "K")
SEVEN_SEGMENTS.Add 76, (New SevenSegments)(0, 0, 1, 1, 1, 0, 0, 0, "L")
SEVEN_SEGMENTS.Add 77, (New SevenSegments)(0, 0, 0, 1, 0, 1, 0, 1, "M")
SEVEN_SEGMENTS.Add 78, (New SevenSegments)(0, 0, 1, 1, 0, 1, 1, 1, "N")
SEVEN_SEGMENTS.Add 79, (New SevenSegments)(0, 0, 1, 1, 1, 1, 1, 1, "O")
SEVEN_SEGMENTS.Add 80, (New SevenSegments)(0, 1, 1, 1, 0, 0, 1, 1, "P")
SEVEN_SEGMENTS.Add 81, (New SevenSegments)(0, 1, 1, 0, 1, 0, 1, 1, "Q")
SEVEN_SEGMENTS.Add 82, (New SevenSegments)(0, 0, 1, 1, 0, 0, 1, 1, "R")
SEVEN_SEGMENTS.Add 83, (New SevenSegments)(0, 1, 1, 0, 1, 1, 0, 1, "S")
SEVEN_SEGMENTS.Add 84, (New SevenSegments)(0, 1, 1, 1, 1, 0, 0, 0, "T")
SEVEN_SEGMENTS.Add 85, (New SevenSegments)(0, 0, 1, 1, 1, 1, 1, 0, "U")
SEVEN_SEGMENTS.Add 86, (New SevenSegments)(0, 0, 1, 1, 1, 1, 1, 0, "V")
SEVEN_SEGMENTS.Add 87, (New SevenSegments)(0, 0, 1, 0, 1, 0, 1, 0, "W")
SEVEN_SEGMENTS.Add 88, (New SevenSegments)(0, 1, 1, 1, 0, 1, 1, 0, "X")
SEVEN_SEGMENTS.Add 89, (New SevenSegments)(0, 1, 1, 0, 1, 1, 1, 0, "Y")
SEVEN_SEGMENTS.Add 90, (New SevenSegments)(0, 1, 0, 1, 1, 0, 1, 1, "Z")
SEVEN_SEGMENTS.Add 91, (New SevenSegments)(0, 0, 1, 1, 1, 0, 0, 1, "[")
SEVEN_SEGMENTS.Add 92, (New SevenSegments)(0, 1, 1, 0, 0, 1, 0, 0, Chr(92)) ' Character \
SEVEN_SEGMENTS.Add 93, (New SevenSegments)(0, 0, 0, 0, 1, 1, 1, 1, "]")
SEVEN_SEGMENTS.Add 94, (New SevenSegments)(0, 0, 1, 0, 0, 0, 1, 1, "^")
SEVEN_SEGMENTS.Add 95, (New SevenSegments)(0, 0, 0, 0, 1, 0, 0, 0, "_")
SEVEN_SEGMENTS.Add 96, (New SevenSegments)(0, 0, 0, 0, 0, 0, 1, 0, "`")
SEVEN_SEGMENTS.Add 97, (New SevenSegments)(0, 1, 0, 1, 1, 1, 1, 1, "a")
SEVEN_SEGMENTS.Add 98, (New SevenSegments)(0, 1, 1, 1, 1, 1, 0, 0, "b")
SEVEN_SEGMENTS.Add 99, (New SevenSegments)(0, 1, 0, 1, 1, 0, 0, 0, "c")
SEVEN_SEGMENTS.Add 100, (New SevenSegments)(0, 1, 0, 1, 1, 1, 1, 0, "d")
SEVEN_SEGMENTS.Add 101, (New SevenSegments)(0, 1, 1, 1, 1, 0, 1, 1, "e")
SEVEN_SEGMENTS.Add 102, (New SevenSegments)(0, 1, 1, 1, 0, 0, 0, 1, "f")
SEVEN_SEGMENTS.Add 103, (New SevenSegments)(0, 1, 1, 0, 1, 1, 1, 1, "g")
SEVEN_SEGMENTS.Add 104, (New SevenSegments)(0, 1, 1, 1, 0, 1, 0, 0, "h")
SEVEN_SEGMENTS.Add 105, (New SevenSegments)(0, 0, 0, 1, 0, 0, 0, 0, "i")
SEVEN_SEGMENTS.Add 106, (New SevenSegments)(0, 0, 0, 0, 1, 1, 0, 0, "j")
SEVEN_SEGMENTS.Add 107, (New SevenSegments)(0, 1, 1, 1, 0, 1, 0, 1, "k")
SEVEN_SEGMENTS.Add 108, (New SevenSegments)(0, 0, 1, 1, 0, 0, 0, 0, "l")
SEVEN_SEGMENTS.Add 109, (New SevenSegments)(0, 0, 0, 1, 0, 1, 0, 0, "m")
SEVEN_SEGMENTS.Add 110, (New SevenSegments)(0, 1, 0, 1, 0, 1, 0, 0, "n")
SEVEN_SEGMENTS.Add 111, (New SevenSegments)(0, 1, 0, 1, 1, 1, 0, 0, "o")
SEVEN_SEGMENTS.Add 112, (New SevenSegments)(0, 1, 1, 1, 0, 0, 1, 1, "p")
SEVEN_SEGMENTS.Add 113, (New SevenSegments)(0, 1, 1, 0, 0, 1, 1, 1, "q")
SEVEN_SEGMENTS.Add 114, (New SevenSegments)(0, 1, 0, 1, 0, 0, 0, 0, "r")
SEVEN_SEGMENTS.Add 115, (New SevenSegments)(0, 1, 1, 0, 1, 1, 0, 1, "s")
SEVEN_SEGMENTS.Add 116, (New SevenSegments)(0, 1, 1, 1, 1, 0, 0, 0, "t")
SEVEN_SEGMENTS.Add 117, (New SevenSegments)(0, 0, 0, 1, 1, 1, 0, 0, "u")
SEVEN_SEGMENTS.Add 118, (New SevenSegments)(0, 0, 0, 1, 1, 1, 0, 0, "v")
SEVEN_SEGMENTS.Add 119, (New SevenSegments)(0, 0, 0, 1, 0, 1, 0, 0, "w")
SEVEN_SEGMENTS.Add 120, (New SevenSegments)(0, 1, 1, 1, 0, 1, 1, 0, "x")
SEVEN_SEGMENTS.Add 121, (New SevenSegments)(0, 1, 1, 0, 1, 1, 1, 0, "y")
SEVEN_SEGMENTS.Add 122, (New SevenSegments)(0, 1, 0, 1, 1, 0, 1, 1, "z")
SEVEN_SEGMENTS.Add 123, (New SevenSegments)(0, 1, 0, 0, 0, 1, 1, 0, "{")
SEVEN_SEGMENTS.Add 124, (New SevenSegments)(0, 0, 1, 1, 0, 0, 0, 0, "|")
SEVEN_SEGMENTS.Add 125, (New SevenSegments)(0, 1, 1, 1, 0, 0, 0, 0, "}")
SEVEN_SEGMENTS.Add 126, (New SevenSegments)(0, 0, 0, 0, 0, 0, 0, 1, "~")


Function MapSegmentTextToSegments(text_state, display_width, segment_mapping)
    'Map a segment display text to a certain display mapping.

    Dim text : text = text_state.Text
    Dim segments()
    ReDim segments(UBound(text))

    Dim charCode, char, mapping, i, new_mapping
    For i = 0 To UBound(text)
        Set char = text(i)
        If segment_mapping.Exists(char("char_code")) Then
            Set mapping = segment_mapping(char("char_code"))
            Set new_mapping = mapping.CloneMapping()
            If char("dot") = True Then
                new_mapping.dp = 1
            Else
                new_mapping.dp = 0
            End If
        Else
            Set new_mapping = segment_mapping(Null)
        End If

        Set segments(i) = new_mapping
    Next

    MapSegmentTextToSegments = segments
End Function


Class GlfSegmentDisplayText

    Private m_embed_dots
    Private m_embed_commas
    Private m_use_dots_for_commas
    Private m_text

    Public Property Get Text() : Text = m_text : End Property

    ' Initialize the class
    Public default Function Init(char_list, embed_dots, embed_commas, use_dots_for_commas)
        m_embed_dots = embed_dots
        m_embed_commas = embed_commas
        m_use_dots_for_commas = use_dots_for_commas
        m_text = char_list
        Set Init = Me
    End Function

    ' Get the length of the text
    Public Function Length()
        Length = UBound(m_text) + 1
    End Function

    ' Get a character or a slice of the text
    Public Function GetItem(index)
        If IsArray(index) Then
            Dim slice, i
            slice = Array()
            For i = LBound(index) To UBound(index)
                slice = AppendArray(slice, m_text(index(i)))
            Next
            GetItem = slice
        Else
            GetItem = m_text(index)
        End If
    End Function

    ' Extend the text with another list
    Public Sub Extend(other_text)
        Dim i
        For i = LBound(other_text) To UBound(other_text)
            m_text = AppendArray(m_text, other_text(i))
        Next
    End Sub

    ' Convert the text to a string
    Public Function ConvertToString()
        Dim text, char, i
        text = ""
        For i = LBound(m_text) To UBound(m_text)
            Set char = m_text(i)
            text = text & Chr(char("char_code"))
            If char("dot") Then text = text & "."
            If char("comma") Then text = text & ","
        Next
        ConvertToString = text
    End Function

    ' Get colors (to be implemented in subclasses)
    Public Function GetColors()
        GetColors = Null
    End Function

    Public Function BlankSegments(flash_mask)
        Dim arrFlashMask, i
        ReDim arrFlashMask(Len(flash_mask) - 1)
        For i = 1 To Len(flash_mask)
            arrFlashMask(i - 1) = Mid(flash_mask, i, 1)
        Next


        Dim new_text, char, mask
        new_text = Array()

        ' Iterate over characters and the flash mask
        For i = LBound(m_text) To UBound(m_text)
            Set char = m_text(i)
            mask = arrFlashMask(i)

            ' If mask is "F", blank the character
            If mask = "F" Then
                new_text = AppendArray(new_text, Glf_SegmentTextCreateDisplayCharacter(32, False, False, char("color")))
            Else
                ' Otherwise, keep the character as is
                new_text = AppendArray(new_text, char)
            End If
        Next

        ' Create a new GlfSegmentDisplayText object with the updated text
        Dim blanked_text
        Set blanked_text = (new GlfSegmentDisplayText)(new_text, m_embed_commas, m_embed_dots, m_use_dots_for_commas)
        Set BlankSegments = blanked_text
    End Function


End Class

' Helper function to append to an array
Function AppendArray(arr, value)
    Dim newArr, i
    ReDim newArr(UBound(arr) + 1)
    For i = LBound(arr) To UBound(arr)
        If IsObject(arr(i)) Then
            Set newArr(i) = arr(i)
        Else
            newArr(i) = arr(i)
        End If
    Next
    If IsObject(value) Then
        Set newArr(UBound(newArr)) = value
    Else
        newArr(UBound(newArr)) = value
    End If
    AppendArray = newArr
End Function

' Helper function to slice an array
Function SliceArray(arr, start_idx, end_idx)
    Dim sliced, i, j
    ReDim sliced(end_idx - start_idx)
    j = 0
    For i = start_idx To end_idx
        If IsObject(arr(i)) Then
            Set sliced(j) = arr(i)
        Else
            sliced(j) = arr(i)
        End If
        j = j + 1
    Next
    SliceArray = sliced
End Function

' Helper function to prepend an element to an array
Function PrependArray(arr, value)
    Dim newArr, i
    ReDim newArr(UBound(arr) + 1)
    If IsObject(value) Then
        Set newArr(0) = value
    Else
        newArr(0) = value
    End If

    For i = LBound(arr) To UBound(arr)
        If IsObject(arr(i)) Then
            Set newArr(i + 1) = arr(i)
        Else
            newArr(i + 1) = arr(i)
        End If
    Next
    PrependArray = newArr
End Function


Function Glf_SegmentTextCreateCharacters(text, display_size, collapse_dots, collapse_commas, use_dots_for_commas, colors)



    Dim char_list, uncolored_chars, left_pad_color, default_right_color, i, char, color, current_length
    char_list = Array()

    ' Determine padding and default colors
    If IsArray(colors) And UBound(colors) >= 0 Then

        left_pad_color = colors(0)
        default_right_color = colors(UBound(colors))

    Else
        left_pad_color = Null
        default_right_color = Null
    End If

    ' Embed dots and commas
    uncolored_chars = Glf_SegmentTextEmbedDotsAndCommas(text, collapse_dots, collapse_commas, use_dots_for_commas)

    ' Adjust colors to match the uncolored characters
    If IsArray(colors) And UBound(colors) >= 0 Then
        Dim adjusted_colors
        adjusted_colors = SliceArray(colors, UBound(colors) - UBound(uncolored_chars) + 1, UBound(colors))
    Else
        adjusted_colors = Array()
    End If

    ' Create display characters
    For i = LBound(uncolored_chars) To UBound(uncolored_chars)
        char = uncolored_chars(i)

        If IsArray(adjusted_colors) And UBound(adjusted_colors) >= 0 Then
            color = adjusted_colors(0)
            adjusted_colors = SliceArray(adjusted_colors, 1, UBound(adjusted_colors))
        Else
            color = default_right_color
        End If
        char_list = AppendArray(char_list, Glf_SegmentTextCreateDisplayCharacter(char(0), char(1), char(2), color))
    Next

    ' Adjust the list size to match the display size
    current_length = UBound(char_list) + 1

    If current_length > display_size Then
        ' Truncate characters from the left
        char_list = SliceArray(char_list, current_length - display_size, UBound(char_list))
    ElseIf current_length < display_size Then
        ' Pad with spaces to the left
        Dim padding
        padding = display_size - current_length
        For i = 1 To padding
            char_list = PrependArray(char_list, Glf_SegmentTextCreateDisplayCharacter(32, False, False, left_pad_color))
        Next
    End If
    'msgbox ">"&text&"<"
    'msgbox UBound(char_list)
    Glf_SegmentTextCreateCharacters = char_list
End Function

Function Glf_SegmentTextEmbedDotsAndCommas(text, collapse_dots, collapse_commas, use_dots_for_commas)
    Dim char_has_dot, char_has_comma, char_list
    Dim i, char_code

    char_has_dot = False
    char_has_comma = False
    char_list = Array()

    ' Iterate through the text in reverse
    For i = Len(text) To 1 Step -1
        char_code = Asc(Mid(text, i, 1))

        ' Check for dots and commas and handle collapsing rules
        If (collapse_dots And char_code = Asc(".")) Or (use_dots_for_commas And char_code = Asc(",")) Then
            char_has_dot = True
        ElseIf collapse_commas And char_code = Asc(",") Then
            char_has_comma = True
        Else
            ' Insert the character at the start of the list
            char_list = PrependArray(char_list, Array(char_code, char_has_dot, char_has_comma))
            char_has_dot = False
            char_has_comma = False
        End If
    Next

    Glf_SegmentTextEmbedDotsAndCommas = char_list
End Function

' Helper function to create a display character
Function Glf_SegmentTextCreateDisplayCharacter(char_code, has_dot, has_comma, color)
    Dim display_character
    Set display_character = CreateObject("Scripting.Dictionary")
    display_character.Add "char_code", char_code
    display_character.Add "dot", has_dot
    display_character.Add "comma", has_comma
    display_character.Add "color", color
    Set Glf_SegmentTextCreateDisplayCharacter = display_character
End Function

Function CreateGlfMagnet(name)
  Dim magnet : Set magnet = (new GlfMagnet)(name)
  Set CreateGlfMagnet = magnet
End Function

Class GlfMagnet

    Private m_name
    Private m_enable_events
    Private m_disable_events
    Private m_fling_ball_events
    Private m_fling_drop_time
    Private m_fling_regrab_time
    Private m_grab_ball_events
    Private m_grab_switch
    Private m_grab_time
    Private m_release_ball_events
    Private m_release_time
    Private m_reset_events
    Private m_action_cb

    Private m_active
    Private m_release_in_progress

    Private m_debug

    Public Property Let EnableEvents(value)
        Dim evt
        If IsArray(m_enable_events) Then
            For Each evt in m_enable_events
                RemovePinEventListener evt, m_name & "_enable"
            Next
        End If
        m_enable_events = value
        For Each evt in m_enable_events
            AddPinEventListener evt, m_name & "_enable", "MagnetEventHandler", 1000, Array("enable", Me)
        Next
    End Property
    Public Property Let DisableEvents(value)
        Dim evt
        If IsArray(m_disable_events) Then
            For Each evt in m_enable_events
                RemovePinEventListener evt, m_name & "_disable"
            Next
        End If
        m_disable_events = value
        For Each evt in m_disable_events
            AddPinEventListener evt, m_name & "_disable", "MagnetEventHandler", 1000, Array("disable", Me)
        Next
    End Property
    Public Property Let ActionCallback(value) : m_action_cb = value : End Property
    Public Property Let FlingBallEvents(value) : m_fling_ball_events = value : End Property
    Public Property Let FlingDropTime(value) : Set m_fling_drop_time = CreateGlfInput(value) : End Property
    Public Property Let FlingRegrabTime(value) : Set m_fling_regrab_time = CreateGlfInput(value) : End Property
    Public Property Let GrabBallEvents(value) : m_grab_ball_events = value : End Property
    Public Property Let GrabSwitch(value)
        m_grab_switch = value
    End Property
    Public Property Let GrabTime(value) : Set m_grab_time = CreateGlfInput(value) : End Property
    Public Property Let ReleaseBallEvents(value) : m_release_ball_events = value : End Property
    Public Property Let ReleaseTime(value) : Set m_release_time = CreateGlfInput(value) : End Property
    Public Property Let ResetEvents(value) : m_reset_events = value : End Property
    Public Property Let Debug(value) : m_debug = value : End Property

  Public default Function init(name)
        m_name = "magnet_" & name
        EnableEvents = Array("ball_started")
        DisableEvents = Array("ball_will_end", "service_mode_entered")
        m_action_cb = Empty
        m_fling_ball_events = Array()
        Set m_fling_drop_time = CreateGlfInput(250)
        Set m_fling_regrab_time = CreateGlfInput(50)
        m_grab_ball_events = Array()
        m_grab_switch = Empty
        Set m_grab_time = CreateGlfInput(1500)
        m_release_ball_events = Array()
        Set m_release_time = CreateGlfInput(500)
        m_reset_events = Array("machine_reset_phase_3", "ball_starting")
        m_active = False
        m_release_in_progress = False
        m_debug = False
        glf_magnets.Add name, Me
        Set Init = Me
  End Function

    Public Sub Enable()
        Log "Enabling"
        Dim evt
        For Each evt in m_fling_ball_events
            AddPinEventListener evt, m_name & "_fling", "MagnetEventHandler", 1000, Array("fling", Me)
        Next
        For Each evt in m_grab_ball_events
            AddPinEventListener evt, m_name & "_grab", "MagnetEventHandler", 1000, Array("grab", Me)
        Next
        For Each evt in m_release_ball_events
            AddPinEventListener evt, m_name & "_release", "MagnetEventHandler", 1000, Array("release", Me)
        Next
        AddPinEventListener m_grab_switch & "_active", m_name & "_grab_switch", "MagnetEventHandler", 1000, Array("grab", Me)
    End Sub

    Public Sub Disable()
        Log "Disabling"
        Dim evt
        For Each evt in m_fling_ball_events
            RemovePinEventListener evt, m_name & "_fling"
        Next
        For Each evt in m_grab_ball_events
            RemovePinEventListener evt, m_name & "_grab"
        Next
        For Each evt in m_release_ball_events
            RemovePinEventListener evt, m_name & "_release"
        Next
        RemovePinEventListener m_grab_switch & "_active", m_name & "_grab_switch"
    End Sub

    Public Sub AddBall(ball)
        m_magnet.AddBall ball
    End Sub

    Public Sub RemoveBall(ball)
        m_magnet.RemoveBall ball
    End Sub

    Public Sub Fling()
        If m_active = False or m_release_in_progress = True Then
            Exit Sub
        End If
        m_active = False
        m_release_in_progress = True
        Log "Flinging Ball"
        DispatchPinEvent m_name & "_flinging_ball", Null
        GetRef(m_action_cb)(0)
        SetDelay m_name & "_fling_reenable", "MagnetEventHandler" , Array(Array("fling_reenable", Me),Null), m_fling_drop_time.Value
    End Sub

    Public Sub FlingReenable()
        GetRef(m_action_cb)(1)
        SetDelay m_name & "_fling_regrab", "MagnetEventHandler" , Array(Array("fling_regrab", Me),Null), m_fling_regrab_time.Value
    End Sub

    Public Sub FlingRegrab()
        m_release_in_progress = False
        GetRef(m_action_cb)(0)
        DispatchPinEvent m_name & "_flinged_ball", Null
    End Sub

    Public Sub Grab()
        If m_active = True Or m_release_in_progress = True Then
            Exit Sub
        End If
        Log "Grabbing Ball"
        m_active = True
        GetRef(m_action_cb)(1)
        DispatchPinEvent m_name & "_grabbing_ball", Null
        SetDelay m_name & "_grabbing_done", "MagnetEventHandler" , Array(Array("grabbing_done", Me),Null), m_grab_time.Value
    End Sub

    Public Sub GrabbingDone()
        DispatchPinEvent m_name & "_grabbed_ball", Null
    End Sub

    Public Sub Release()
        If m_active = False or m_release_in_progress = True Then
            Exit Sub
        End If
        m_active = False
        m_release_in_progress = True
        Log "Releasing Ball"
        DispatchPinEvent m_name & "_releasing_ball", Null
        GetRef(m_action_cb)(0)
        SetDelay m_name & "_release_done", "MagnetEventHandler" , Array(Array("release_done", Me),Null), m_release_time.Value
    End Sub

    Public Sub ReleaseDone()
        m_release_in_progress = False
        DispatchPinEvent m_name & "_released_ball", Null
    End Sub

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub
End Class

Function MagnetEventHandler(args)
    Dim ownProps, kwargs : ownProps = args(0)
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If
    Dim evt : evt = ownProps(0)
    Dim magnet : Set magnet = ownProps(1)
    Select Case evt
        Case "enable"
            magnet.Enable
        Case "disable"
            magnet.Disable
        Case "fling"
            magnet.Fling
        Case "grab"
            magnet.Grab
        Case "release"
            magnet.Release
        Case "grabbing_done"
            magnet.GrabbingDone
        Case "release_done"
            magnet.ReleaseDone
        Case "fling_reenable"
            magnet.FlingReenable
        Case "fling_regrab"
            magnet.FlingRegrab
    End Select
    If IsObject(args(1)) Then
        Set MagnetEventHandler = kwargs
    Else
        MagnetEventHandler = kwargs
    End If

End Function
Class GlfCoverTransition

    Private m_output_length
    Private m_collapse_dots
    Private m_collapse_commas
    Private m_use_dots_for_commas

    Private m_current_step
    Private m_total_steps
    Private m_direction
    Private m_transition_text
    Private m_transition_color

    Private m_current_text
    Private m_new_text
    Private m_current_colors
    Private m_new_colors

    ' Initialize the transition class
    Public Default Function Init(output_length, collapse_dots, collapse_commas, use_dots_for_commas)
        m_output_length = output_length
        m_collapse_dots = collapse_dots
        m_collapse_commas = collapse_commas
        m_use_dots_for_commas = use_dots_for_commas

        m_current_step = 0
        m_total_steps = 0
        m_direction = "right"
        m_transition_text = "" ' Default empty transition text
        m_transition_color = Empty

        Set Init = Me
    End Function

    ' Set transition direction
    Public Property Let Direction(value)
        If value = "left" Or value = "right" Then
            m_direction = value
        Else
            m_direction = "right" ' Default to right
        End If
    End Property

    ' Set transition text
    Public Property Let TransitionText(value)
        m_transition_text = value
    End Property

    ' Start transition
    Public Function StartTransition(current_text, new_text, current_colors, new_colors)
        ' Store text and colors
        m_current_text = current_text
        m_new_text = Space(m_output_length - Len(new_text)) & new_text
        m_current_colors = current_colors
        m_new_colors = new_colors
        ' Calculate total steps for transition
        m_total_steps = m_output_length + Len(m_transition_text)
        'If m_total_steps > 0 Then m_total_steps = m_total_steps
        ' Reset step counter
        m_current_step = 0
        StartTransition = NextStep()
    End Function

    ' Manually call this to progress the transition
    Public Function NextStep()
        If m_current_step >= m_total_steps Then
            NextStep = Null
            Exit Function
        End If
        ' Get the correct transition text for this step
        Dim result
        result = GetTransitionStep(m_current_step)
        ' Increment step counter
        m_current_step = m_current_step + 1

        ' Return the current frame's text
        NextStep = result
    End Function

    ' Get the text for the current step
    Private Function GetTransitionStep(current_step)
        Dim transition_sequence, start_idx, end_idx

        If m_direction = "right" Then
            ' Right cover transition: new_text + transition_text moves in
            transition_sequence = m_new_text & m_transition_text & m_current_text
            start_idx = Len(transition_sequence) - (current_step + m_output_length)
            end_idx = start_idx + m_output_length - 1
        ElseIf m_direction = "left" Then
            ' Left cover transition: transition_text + new_text moves in
            transition_sequence = m_current_text & m_transition_text & m_new_text
            start_idx = current_step
            end_idx = start_idx + m_output_length - 1
        End If

        ' Ensure valid slice indices
        If start_idx < 0 Then start_idx = 0
        If end_idx > Len(transition_sequence) - 1 Then end_idx = Len(transition_sequence) - 1

        ' Extract the correct frame of text
        Dim sliced_text
        sliced_text = Mid(transition_sequence, start_idx + 1, end_idx - start_idx + 1)
        If m_output_length>m_current_step Then
            If m_direction = "right" Then
                sliced_text = m_new_text & m_transition_text & Right(m_current_text, m_output_length-current_step)
            ElseIf m_direction = "left" Then
                sliced_text = Left(m_current_text, m_output_length - m_current_step) & Left(m_transition_text & m_new_text, current_step)
            End If
        End If
        'MsgBox "transition_text-"&transition_sequence&", current_step=" & current_step & ", start_idx=" & start_idx & ", end_idx=" & end_idx & ", text=>" & sliced_text &"<, text_len=>" & Len(sliced_text) &"<, Total Steps: "&m_total_steps

        ' Convert only the final sliced text to segment display characters
        GetTransitionStep = Glf_SegmentTextCreateCharacters(sliced_text, m_output_length, m_collapse_dots, m_collapse_commas, m_use_dots_for_commas, m_new_colors)
    End Function

End Class
Class GlfPushTransition

    Private m_output_length
    Private m_collapse_dots
    Private m_collapse_commas
    Private m_use_dots_for_commas

    Private m_current_step
    Private m_total_steps
    Private m_direction
    Private m_transition_text
    Private m_transition_color

    Private m_current_text
    Private m_new_text
    Private m_current_colors
    Private m_new_colors

    ' Initialize the transition class
    Public Default Function Init(output_length, collapse_dots, collapse_commas, use_dots_for_commas)
        m_output_length = output_length
        m_collapse_dots = collapse_dots
        m_collapse_commas = collapse_commas
        m_use_dots_for_commas = use_dots_for_commas

        m_current_step = 0
        m_total_steps = 0
        m_direction = "right"
        m_transition_text = "" ' Default empty transition text
        m_transition_color = Empty

        Set Init = Me
    End Function

    ' Set transition direction
    Public Property Let Direction(value)
        If value = "left" Or value = "right" Then
            m_direction = value
        Else
            m_direction = "right" ' Default to right
        End If
    End Property

    ' Set transition text
    Public Property Let TransitionText(value)
        m_transition_text = value
    End Property

    ' Start transition
    Public Function StartTransition(current_text, new_text, current_colors, new_colors)
        ' Store text and colors
        m_current_text = current_text
        m_new_text = Space(m_output_length - Len(new_text)) & new_text
        m_current_colors = current_colors
        m_new_colors = new_colors
        ' Calculate total steps for transition
        m_total_steps = m_output_length + Len(m_transition_text)
        If m_total_steps > 0 Then m_total_steps = m_total_steps + 1
        'm_total_steps=(m_output_length*2)+1
        ' Reset step counter
        m_current_step = 0
        StartTransition = NextStep()
    End Function

    ' Manually call this to progress the transition
    Public Function NextStep()
        If m_current_step >= m_total_steps Then
            NextStep = Null ' Transition complete
            Exit Function
        End If
        ' Get the correct transition text for this step
        Dim result
        result = GetTransitionStep(m_current_step)
        ' Increment step counter
        m_current_step = m_current_step + 1

        ' Return the current frame's text
        NextStep = result
    End Function

    ' Get the text for the current step
    Private Function GetTransitionStep(current_step)
        Dim transition_sequence, start_idx, end_idx
        'msgbox "Step"
        ' Construct the full transition sequence as plain text
        If m_direction = "right" Then
            ' Right push: [NEW_TEXT + TRANSITION_TEXT + OLD_TEXT] moves LEFT
            transition_sequence = m_new_text & m_transition_text & m_current_text

            ' Calculate slice indices
            start_idx = Len(transition_sequence) - (current_step + m_output_length)
            end_idx = start_idx + m_output_length - 1

        ElseIf m_direction = "left" Then
            ' Left push: [OLD_TEXT + TRANSITION_TEXT + NEW_TEXT] moves RIGHT
            transition_sequence = m_current_text & m_transition_text & m_new_text

            ' Calculate slice indices
            start_idx = current_step
            end_idx = start_idx + m_output_length - 1
        End If

        ' Ensure valid slice indices
        If start_idx < 0 Then start_idx = 0
        If end_idx > Len(transition_sequence) - 1 Then end_idx = Len(transition_sequence) - 1

        ' Extract the correct frame of text
        Dim sliced_text
        sliced_text = Mid(transition_sequence, start_idx + 1, end_idx - start_idx + 1)

        ' Debugging output
        'MsgBox "transition_text-"&transition_sequence&", current_step=" & current_step & ", start_idx=" & start_idx & ", end_idx=" & end_idx & ", text=>" & sliced_text &"<"
        ' Convert only the final sliced text to segment display characters
        GetTransitionStep = Glf_SegmentTextCreateCharacters(sliced_text, m_output_length, m_collapse_dots, m_collapse_commas, m_use_dots_for_commas, m_new_colors)
    End Function

End Class


Function CreateGlfSoundBus(name)
  Dim bus : Set bus = (new GlfSoundBus)(name)
  Set CreateGlfSoundBus = bus
End Function

Class GlfSoundBus

    Private m_name
    Private m_simultaneous_sounds
    Private m_current_sounds
    Private m_volume
    Private m_debug

    Public Property Get Name(): Name = m_name: End Property
    Public Property Get GetValue(value)
        Select Case value
            Case "simultaneous_sounds":
                GetValue = m_simultaneous_sounds
            Case "volume":
                GetValue = m_volume
        End Select
    End Property

    Public Property Get SimultaneousSounds(): SimultaneousSounds = m_simultaneous_sounds: End Property
    Public Property Let SimultaneousSounds(input): m_simultaneous_sounds = input: End Property

    Public Property Get Volume(): Volume = m_volume: End Property
    Public Property Let Volume(input): m_volume = input: End Property

    Public Property Let Debug(value)
        m_debug = value
    End Property

    Public default Function Init(name)
        m_name = "sound_bus_" & name
        m_simultaneous_sounds = 8
        m_volume = 0.5
        Set m_current_sounds = CreateObject("Scripting.Dictionary")
        glf_sound_buses.Add name, Me
        Set Init = Me
    End Function

    Public Sub Play(sound_settings)
        If (UBound(m_current_sounds.Keys)-1) > m_simultaneous_sounds Then
            'TODO: Queue Sound
        Else
            If m_current_sounds.Exists(sound_settings.Sound.File) Then
                m_current_sounds.Remove sound_settings.Sound.File
                RemoveDelay m_name & "_stop_sound_" & sound_settings.Sound.File
            End If
            m_current_sounds.Add sound_settings.Sound.File, sound_settings
            Dim volume : volume = m_volume
            If Not IsEmpty(sound_settings.Sound.Volume) Then
                volume = sound_settings.Sound.Volume
            End If
            If Not IsEmpty(sound_settings.Volume) Then
                volume = sound_settings.Volume
            End If
            Dim loops : loops = 0
            If Not IsEmpty(sound_settings.Sound.Loops) Then
                loops = sound_settings.Sound.Loops
            End If
            If Not IsEmpty(sound_settings.Loops) Then
                loops = sound_settings.Loops
            End If

            PlaySound sound_settings.Sound.File, loops, volume, 0,0,0,0,0,0
            If loops = 0 Then
                SetDelay m_name & "_stop_sound_" & sound_settings.Sound.File, "Glf_SoundBusStopSoundHandler", Array(sound_settings.Sound.File, Me), sound_settings.Sound.Duration
            ElseIf loops>0 Then
                SetDelay m_name & "_stop_sound_" & sound_settings.Sound.File, "Glf_SoundBusStopSoundHandler", Array(sound_settings.Sound.File, Me), sound_settings.Sound.Duration*loops
            End If
        End If
    End Sub

    Public Sub StopSoundWithKey(sound_key)
        If m_current_sounds.Exists(sound_key) Then
            Dim sound_settings : Set sound_settings = m_current_sounds(sound_key)
            StopSound(sound_key)
            Dim evt
            For Each evt in sound_settings.Sound.EventsWhenStopped.Items()
                If evt.Evaluate() Then
                    DispatchPinEvent evt.EventName, Null
                End If
            Next
            m_current_sounds.Remove sound_key
        End If
    End Sub

    Private Sub Log(message)
        If m_debug Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

End Class

Function Glf_SoundBusStopSoundHandler(args)
    Dim sound_key : sound_key = args(0)
    Dim sound_bus : Set sound_bus = args(1)
    sound_bus.StopSoundWithKey sound_key
End Function

Function CreateGlfSound(name)
  Dim sound : Set sound = (new GlfSound)(name)
  Set CreateGlfSound = sound
End Function

Class GlfSound

    Private m_name
    Private m_file
    Private m_events_when_stopped
    Private m_bus
    Private m_volume
    Private m_priority
    Private m_max_queue_time
    Private m_duration
    Private m_loops
    Private m_debug

    Public Property Get Name(): Name = m_name: End Property
    Public Property Get GetValue(value)
        Select Case value
            Case "file":
                GetValue = m_file
            Case "volume":
                GetValue = m_volume
            Case "events_when_stopped":
                Set GetValue = m_events_when_stopped
            Case "bus":
                GetValue = m_bus
            Case "priority":
                GetValue = m_priority
            Case "max_queue_time":
                GetValue = m_max_queue_time
            Case "duration":
                GetValue = m_duration
        End Select
    End Property

    Public Property Get File(): File = m_file: End Property
    Public Property Let File(input): m_file = input: End Property

    Public Property Get Bus(): Bus = m_bus: End Property
    Public Property Let Bus(input): m_bus = input: End Property

    Public Property Get Volume(): Volume = m_volume: End Property
    Public Property Let Volume(input): m_volume = input: End Property

    Public Property Get Loops(): Loops = m_loops: End Property
    Public Property Let Loops(input): m_loops = input: End Property

    Public Property Get Priority(): Priority = m_priority: End Property
    Public Property Let Priority(input): m_priority = input: End Property

    Public Property Get MaxQueueTime(): MaxQueueTime = m_max_queue_time: End Property
    Public Property Let MaxQueueTime(input): m_max_queue_time = input: End Property

    Public Property Get Duration(): Duration = m_duration: End Property
    Public Property Let Duration(input): m_duration = input: End Property

    Public Property Get EventsWhenStopped(): Set EventsWhenStopped = m_events_when_stopped: End Property
    Public Property Let EventsWhenStopped(value)
        Dim x
        For x=0 to UBound(value)
            Dim newEvent : Set newEvent = (new GlfEvent)(value(x))
            m_events_when_stopped.Add x, newEvent
        Next
    End Property

    Public Property Let Debug(value)
        m_debug = value
    End Property

    Public default Function Init(name)
        m_name = "sound_bus_" & name
        m_file = Empty
        m_bus = Empty
        m_volume = Empty
        m_priority = 0
        m_duration = 0
        m_max_queue_time = -1
        m_loops = 0
        Set m_events_when_stopped = CreateObject("Scripting.Dictionary")
        glf_sounds.Add name, Me
        Set Init = Me
    End Function

    Private Sub Log(message)
        If m_debug Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub

End Class
Function CreateGlfStanduptarget(name)
  Dim standuptarget : Set standuptarget = (new GlfStandupTarget)(name)
  Set CreateGlfStanduptarget = standuptarget
End Function

Class GlfStandupTarget

    Private m_name
  Private m_switch
    Private m_use_roth
    Private m_roth_array_index

    Private m_debug

    Public Property Get Name()
        Name = Replace(m_name, "standup_target_", "")
    End Property
  Public Property Let Switch(value)
    m_switch = value
  End Property
    Public Property Get Switch()
        Switch = m_switch
    End Property
    Public Property Get UseRothStanduptarget()
        UseRothStanduptarget = m_use_roth
    End Property
    Public Property Let UseRothStanduptarget(value)
        m_use_roth = value
    End Property
    Public Property Get RothSTSwitchID()
        RothSTSwitchID = m_roth_array_index
    End Property
    Public Property Let RothSTSwitchID(value)
        m_roth_array_index = value
    End Property

    Public Property Let Debug(value) : m_debug = value : End Property

  Public default Function init(name)
        m_name = "standup_target_" & name
    m_switch = Empty
    m_debug = False
        m_use_roth = False
        m_roth_array_index = -1
        glf_standup_targets.Add name, Me
        Set Init = Me
  End Function

    Private Sub Log(message)
        If m_debug = True Then
            glf_debugLog.WriteToLog m_name, message
        End If
    End Sub
End Class

Class GlfEvent
  Private m_raw, m_name, m_event, m_condition, m_delay, m_priority, has_condition

    Public Property Get Name() : Name = m_name : End Property
    Public Property Get EventName() : EventName = m_event : End Property
    Public Property Get Condition() : Condition = m_condition : End Property
    Public Property Get Delay() : Delay = m_delay : End Property
    Public Property Get Raw() : Raw = m_raw : End Property
    Public Property Get Priority() : Priority = m_priority : End Property

    Public Function Evaluate()
        If has_condition = True Then
            Evaluate = GetRef(m_condition)(Null)
        Else
            Evaluate = True
        End If
    End Function

  Public default Function init(evt)
        m_raw = evt
        Dim parsedEvent : parsedEvent = Glf_ParseEventInput(evt)
        m_name = parsedEvent(0)
        m_event = parsedEvent(1)
        m_condition = parsedEvent(2)
        If Not IsNull(m_condition) Then
            has_condition = True
        Else
            has_condition = False
        End If
        m_delay = parsedEvent(3)
        m_priority = parsedEvent(4)
      Set Init = Me
  End Function

End Class

Class GlfEventDispatch
  Private m_raw, m_event, m_kwargs_ref

    Public Property Get EventName() : EventName = m_event : End Property
    Public Property Get Kwargs()
        If IsEmpty(m_kwargs_ref) Then
            Kwargs = Null
        Else
            Set Kwargs = GetRef(m_kwargs_ref)(Null)
        End If
    End Property
    Public Property Get Raw() : Raw = m_raw : End Property

  Public default Function init(evt)
        m_raw = evt
        Dim parsedDispatchEvent : parsedDispatchEvent = Glf_ParseDispatchEventInput(evt)
        m_event = parsedDispatchEvent(0)
        m_kwargs_ref = parsedDispatchEvent(1)
      Set Init = Me
  End Function

End Class

Class GlfRandomEvent

    Private m_parent_key
    Private m_key
    Private m_mode
    Private m_events
    Private m_weights
    Private m_eventIndexMap
    Private m_fallback_event
    Private m_force_all
    Private m_force_different
    Private m_disable_random
    Private m_total_weights

    Public Property Let FallbackEvent(value) : m_fallback_event = value : End Property
    Public Property Let ForceAll(value) : m_force_all = value : End Property
    Public Property Let ForceDifferent(value) : m_force_different = value : End Property
    Public Property Let DisableRandom(value) : m_disable_random = value : End Property

  Public default Function init(evt, mode, key)
        m_parent_key = evt
        m_key = key
        m_mode = mode
        m_fallback_event = Empty
        m_force_all = True
        m_force_different = True
        m_disable_random = False
        m_total_weights = 0
        Set m_events = CreateObject("Scripting.Dictionary")
        Set m_weights = CreateObject("Scripting.Dictionary")
        Set m_eventIndexMap = CreateObject("Scripting.Dictionary")
      Set Init = Me
  End Function

    Public Sub Add(evt, weight)
        Dim newEvent : Set newEvent = (new GlfEvent)(evt)
        m_events.Add newEvent.Raw, newEvent
        m_weights.Add newEvent.Raw, weight
        m_total_weights = m_total_weights + weight
        m_eventIndexMap.Add newEvent.Raw, UBound(m_events.Keys)
    End Sub

    Public Function GetNextRandomEvent()

        Dim valid_events, event_to_fire
        Dim event_keys, event_items
        Dim i, count, key

        Set valid_events = CreateObject("Scripting.Dictionary")
        event_keys = m_events.Keys
        For i = 0 To UBound(event_keys)
            If m_events(event_keys(i)).Evaluate Then
                valid_events.Add event_keys(i), m_events(event_keys(i))
            End If
        Next
        event_to_fire = CheckFallback(valid_events)
        If Not IsEmpty(event_to_fire) Then
            GetNextRandomEvent = event_to_fire
            Exit Function
        End If

        If m_force_all = True Then
            event_keys = valid_events.Keys
            event_items = valid_events.Items
            valid_events.RemoveAll
            For i=0 to UBound(event_keys)
                If GetPlayerState("random_" & m_mode & "_" & m_key & "_" & m_eventIndexMap(event_keys(i))) = False Then
                    valid_events.Add event_keys(i), event_items(i)
                End If
            Next
        End If

        event_to_fire = CheckFallback(valid_events)
        If Not IsEmpty(event_to_fire) Then
            GetNextRandomEvent = event_to_fire
            Exit Function
        End If

        If m_force_different = True Then
            If valid_events.Exists(GetPlayerState("random_" & m_mode & "_" & m_key & "_last")) Then
                valid_events.Remove GetPlayerState("random_" & m_mode & "_" & m_key & "_last")
            End If
        End If

        event_to_fire = CheckFallback(valid_events)
        If Not IsEmpty(event_to_fire) Then
            GetNextRandomEvent = event_to_fire
            Exit Function
        End If

        If UBound(valid_events.Keys) = -1 Then
            GetNextRandomEvent = Empty
            Exit Function
        End If

        'Random Selection From remaining valid events
        Dim chosenKey
        If m_disable_random = False Then
            Dim total_weight
            For Each key In valid_events.Keys
                total_weight = total_weight + m_weights(key)
            Next

            Randomize
            'randomIdx = Int(Rnd() * (UBound(valid_events.Keys)-LBound(valid_events.Keys) + 1) + LBound(valid_events.Keys))
            Dim randVal
            randVal = Rnd() * total_weight
            Dim cumulativeWeight
            cumulativeWeight = 0

            For Each key In valid_events.Keys
                cumulativeWeight = cumulativeWeight + m_weights(key)
                If randVal <= cumulativeWeight Then
                    chosenKey = key
                    Exit For
                End If
            Next


        Else
            event_keys = m_events.Keys
            count = 0
            For i = 0 To UBound(event_keys)
                If GetPlayerState("random_" & m_mode & "_" & m_key & "_" & m_events(event_keys(i)).Raw) = True Then
                    If valid_events.Exists(m_events(event_keys(i)).Raw) Then
                        valid_events.Remove m_events(event_keys(i)).Raw
                    End If
                End If
            Next
            Dim valid_event_keys : valid_event_keys = valid_events.keys()
            chosenKey = valid_event_keys(0)
        End If

        SetPlayerState "random_" & m_mode & "_" & m_key & "_last", valid_events(chosenKey).Raw
        SetPlayerState "random_" & m_mode & "_" & m_key & "_" & valid_events(chosenKey).Raw, True

        event_keys = m_events.Keys
        count = 0
        For i = 0 To UBound(event_keys)
            If GetPlayerState("random_" & m_mode & "_" & m_key & "_" & m_events(event_keys(i)).Raw) = True Then
                count = count + 1
            End If
        Next
        If count = (UBound(event_keys) + 1) Then
            For i = 0 To UBound(event_keys)
                SetPlayerState "random_" & m_mode & "_" & m_key & "_" & m_events(event_keys(i)).Raw, False
            Next
        End If

        GetNextRandomEvent = valid_events(chosenKey).EventName

    End Function

    Public Function CheckFallback(valid_events)
        If UBound(valid_events.Keys()) = -1 Then
            If Not IsEmpty(m_fallback_event) Then
                CheckFallback = m_fallback_event
            Else
                CheckFallback = Empty
            End If
        Else
            CheckFallback = Empty
        End If
    End Function

    Public Function ToYaml
        Dim yaml
        yaml = yaml & "    events:" & vbCrLf
        For Each evt in m_events.Keys
            yaml = yaml & "      " & evt & ": " & m_weights(evt) & vbCrLf
        Next
        ToYaml = yaml

    End Function

End Class


'******************************************************
'*****  Player Setup                               ****
'******************************************************

Sub Glf_AddPlayer()
    Dim kwargs : Set kwargs = GlfKwargs()
    With kwargs
        .Add "num", -1
    End With
    Select Case UBound(glf_playerState.Keys())
        Case -1:
            kwargs("num") = 1
            DispatchPinEvent "player_added", kwargs
            glf_playerState.Add "PLAYER 1", Glf_InitNewPlayer()
            SetPlayerStateByPlayer GLF_SCORE, 0, 0
            SetPlayerStateByPlayer "number", 1, 0
            Glf_BcpAddPlayer 1
            glf_currentPlayer = "PLAYER 1"
        Case 0:
            If GetPlayerState(GLF_CURRENT_BALL) = 1 Then
                kwargs("num") = 2
                DispatchPinEvent "player_added", kwargs
                glf_playerState.Add "PLAYER 2", Glf_InitNewPlayer()
                SetPlayerStateByPlayer GLF_SCORE, 0, 1
                SetPlayerStateByPlayer "number", 2, 1
                Glf_BcpAddPlayer 2
            End If
        Case 1:
            If GetPlayerState(GLF_CURRENT_BALL) = 1 Then
                kwargs("num") = 3
                DispatchPinEvent "player_added", kwargs
                glf_playerState.Add "PLAYER 3", Glf_InitNewPlayer()
                SetPlayerStateByPlayer GLF_SCORE, 0, 2
                SetPlayerStateByPlayer "number", 3, 2
                Glf_BcpAddPlayer 3
            End If
        Case 2:
            If GetPlayerState(GLF_CURRENT_BALL) = 1 Then
                kwargs("num") = 4
                DispatchPinEvent "player_added", kwargs
                glf_playerState.Add "PLAYER 4", Glf_InitNewPlayer()
                SetPlayerStateByPlayer GLF_SCORE, 0, 3
                SetPlayerStateByPlayer "number", 4, 3
                Glf_BcpAddPlayer 4
            End If
            glf_canAddPlayers = False
    End Select
End Sub

Function Glf_InitNewPlayer()
    Dim state : Set state = CreateObject("Scripting.Dictionary")
    state.Add GLF_SCORE, 0
    Glf_MonitorPlayerStateUpdate GLF_SCORE, 0
    state.Add GLF_INITIALS, ""
    Glf_MonitorPlayerStateUpdate GLF_INITIALS, ""
    state.Add GLF_CURRENT_BALL, 1
    Glf_MonitorPlayerStateUpdate GLF_CURRENT_BALL, 1
    state.Add "extra_balls", 0
    Glf_MonitorPlayerStateUpdate "extra_balls", 0
    Dim i
    Dim init_var_keys : init_var_keys = glf_initialVars.Keys()
    Dim init_var_items : init_var_items = glf_initialVars.Items()
    For i=0 To UBound(init_var_keys)
        state.Add init_var_keys(i), init_var_items(i)
        Glf_MonitorPlayerStateUpdate init_var_keys(i), init_var_items(i)
    Next
    Set Glf_InitNewPlayer = state
End Function


'****************************
' Setup Player
' Event Listeners:
    AddPinEventListener GLF_GAME_STARTED,   "start_game_setup",   "Glf_SetupPlayer", 1000, Null
    AddPinEventListener GLF_NEXT_PLAYER,    "next_player_setup",  "Glf_SetupPlayer", 1000, Null
'
'*****************************
Function Glf_SetupPlayer(args)
    EmitAllglf_playerEvents()
End Function

'****************************
' StartGame
'
'*****************************

AddPinEventListener "request_to_start_game", "request_to_start_game_ball_controller", "Glf_BallController", 30, Null
Function Glf_BallController(args)
    Dim balls_in_trough : balls_in_trough = 0
    If glf_troughSize = 1 Then
        If swTrough1.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
    End If
    If glf_troughSize = 2 Then
        If swTrough1.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough2.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
    End If
    If glf_troughSize = 3 Then
        If swTrough1.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough2.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough3.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
    End If
    If glf_troughSize = 4 Then
        If swTrough1.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough2.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough3.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough4.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
    End If
    If glf_troughSize = 5 Then
        If swTrough1.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough2.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough3.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough4.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough5.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
    End If
    If glf_troughSize = 6 Then
        If swTrough1.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough2.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough3.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough4.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough5.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough6.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
    End If
    If glf_troughSize = 7 Then
        If swTrough1.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough2.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough3.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough4.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough5.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough6.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough7.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
    End If
    If glf_troughSize = 8 Then
        If swTrough1.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough2.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough3.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough4.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough5.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough6.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If swTrough7.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
        If Drain.BallCntOver = 1 Then balls_in_trough = balls_in_trough + 1
    End If

    If glf_troughSize <> balls_in_trough Then
        Glf_BallController = False
        Exit Function
    End If

    Glf_BallController = True
End Function

AddPinEventListener "request_to_start_game", "request_to_start_game_result", "Glf_StartGame", 20, Null

Function Glf_StartGame(args)
    If args(1) = True And glf_gameStarted = False Then
        Glf_AddPlayer()
        glf_gameStarted = True
        glf_canAddPlayers = True
        DispatchPinEvent GLF_GAME_START, Null
        SetDelay GLF_GAME_STARTED, "Glf_DispatchGameStarted", Null, 50
    End If
End Function

Sub Glf_EndBall()

    glf_BIP = 0
    DispatchPinEvent GLF_BALL_WILL_END, Null
    DispatchQueuePinEvent GLF_BALL_ENDING, Null
    Dim device
    For Each device in glf_flippers.Items()
        device.Disable()
    Next
    For Each device in glf_autofiredevices.Items()
        device.Disable()
    Next

End Sub

Public Function Glf_DispatchGameStarted(args)
    DispatchPinEvent GLF_GAME_STARTED, Null
End Function


'******************************************************
'*****   Ball Release                              ****
'******************************************************

'****************************
' Release Ball
' Event Listeners:
AddPinEventListener GLF_GAME_STARTED, "start_game_release_ball",   "Glf_ReleaseBall", 20, True
AddPinEventListener GLF_NEXT_PLAYER, "next_player_release_ball",   "Glf_ReleaseBall", 20, True
'
'*****************************
Function Glf_ReleaseBall(args)
    Dim kwargs
    Set kwargs = GlfKwargs()
    If Not IsNull(args) Then
        If args(0) = True Then
            kwargs.Add "new_ball", True
        End If
    End If
    DispatchQueuePinEvent "balldevice_trough_ball_eject_attempt", kwargs
End Function


'****************************
' Release Ball
' Event Listeners:
AddPinEventListener "balldevice_trough_ball_eject_attempt", "trough_eject",  "Glf_TroughReleaseBall", 20, Null
'
'*****************************
Function Glf_TroughReleaseBall(args)

    If Not IsNull(args) Then
        If IsObject(args(1)) Then
            If args(1)("new_ball") = True Then
                glf_BIP = glf_BIP + 1
                DispatchPinEvent GLF_BALL_STARTED, Null
                If useBcp Then
                    bcpController.SendPlayerVariable GLF_CURRENT_BALL, GetPlayerState(GLF_CURRENT_BALL), GetPlayerState(GLF_CURRENT_BALL)-1
                    bcpController.SendPlayerVariable GLF_SCORE, GetPlayerState(GLF_SCORE), GetPlayerState(GLF_SCORE)
                End If
            End If
        End If
    End If
    Glf_WriteDebugLog "Release Ball", "swTrough1: " & swTrough1.BallCntOver
    glf_plunger.AddIncomingBalls = 1
    swTrough1.kick 90, 10
    DispatchPinEvent "trough_eject", Null
    Glf_WriteDebugLog "Release Ball", "Just Kicked"
    If Not IsNull(args) Then
    If IsObject(args(1)) Then
      Set Glf_TroughReleaseBall = args(1)
    Else
      Glf_TroughReleaseBall = args(1)
    End If
  Else
    Glf_TroughReleaseBall = Null
  End If
End Function

'****************************
' Ball Drain
' Event Listeners:
    AddPinEventListener GLF_BALL_DRAIN, "ball_drain", "Glf_Drain", 20, Null
'
'*****************************
Function Glf_Drain(args)

    If Not glf_gameTilted And glf_gameStarted = True Then
        Dim ballsToSave : ballsToSave = args(1)
        Glf_WriteDebugLog "end_of_ball, unclaimed balls", CStr(ballsToSave)
        Glf_WriteDebugLog "end_of_ball, balls in play", CStr(glf_BIP)
        If ballsToSave <= 0 Then
            Exit Function
        End If

        glf_BIP = glf_BIP - 1
        glf_debugLog.WriteToLog "Trough", "Ball Drained: BIP: " & glf_BIP

        If glf_BIP > 0 Then
            Exit Function
        End If

        DispatchPinEvent GLF_BALL_WILL_END, Null
        DispatchQueuePinEvent GLF_BALL_ENDING, Null
    End If

End Function

'****************************
' End Of Ball
' Event Listeners:
AddPinEventListener GLF_BALL_ENDING, "ball_will_end", "Glf_BallWillEnd", 10, Null
'
'*****************************
Function Glf_BallWillEnd(args)
    DispatchPinEvent GLF_BALL_ENDED, Null
    If Not IsNull(args) Then
    If IsObject(args(1)) Then
      Set Glf_BallWillEnd = args(1)
    Else
      Glf_BallWillEnd = args(1)
    End If
  Else
    Glf_BallWillEnd = Null
  End If
End Function

'****************************
' End Of Ball
' Event Listeners:
AddPinEventListener GLF_BALL_ENDED, "end_of_ball", "Glf_EndOfBall", 20, Null
'
'*****************************
Function Glf_EndOfBall(args)

    If GetPlayerState("extra_balls") > 0 Then
        'self.debug_log("Awarded extra ball to Player %s. Shoot Again", self.player.index + 1)
        'self.player.extra_balls -= 1
        SetPlayerState "extra_balls", GetPlayerState("extra_balls") - 1
        SetDelay "end_of_ball_delay", "EndOfBallNextPlayer", Null, 1000
        Exit Function
    End If

    SetPlayerState GLF_CURRENT_BALL, GetPlayerState(GLF_CURRENT_BALL) + 1

    Dim previousPlayerNumber : previousPlayerNumber = Getglf_currentPlayerNumber()
    Select Case glf_currentPlayer
        Case "PLAYER 1":
            If UBound(glf_playerState.Keys()) > 0 Then
                glf_currentPlayer = "PLAYER 2"
            End If
        Case "PLAYER 2":
            If UBound(glf_playerState.Keys()) > 1 Then
                glf_currentPlayer = "PLAYER 3"
            Else
                glf_currentPlayer = "PLAYER 1"
            End If
        Case "PLAYER 3":
            If UBound(glf_playerState.Keys()) > 2 Then
                glf_currentPlayer = "PLAYER 4"
            Else
                glf_currentPlayer = "PLAYER 1"
            End If
        Case "PLAYER 4":
            glf_currentPlayer = "PLAYER 1"
    End Select

    If GetPlayerState(GLF_CURRENT_BALL) > glf_game.BallsPerGame() Then
        Dim device
        For Each device in glf_ball_devices.Items()
            If device.HasBall() Then
                device.EjectAll()
            End If
        Next
        DispatchPinEvent "game_will_end", Null
        DispatchQueuePinEvent "game_ending", Null
    Else
        SetDelay "end_of_ball_delay", "EndOfBallNextPlayer", Null, 1000
    End If



End Function

'****************************
' Game Over
' Event Listeners:
AddPinEventListener "game_ending", "glf_game_over", "Glf_EndGame", 20, Null
'
'*****************************
Function Glf_EndGame(args)
    If GetPlayerStateForPlayer("0", "score") = False Then
        glf_machine_vars("player1_score").Value = 0
    Else
        glf_machine_vars("player1_score").Value = GetPlayerStateForPlayer("0", "score")
    End If
    If GetPlayerStateForPlayer("1", "score") = False Then
        glf_machine_vars("player2_score").Value = 0
    Else
        glf_machine_vars("player2_score").Value = GetPlayerStateForPlayer("1", "score")
    End If
    If GetPlayerStateForPlayer("2", "score") = False Then
        glf_machine_vars("player3_score").Value = 0
    Else
        glf_machine_vars("player3_score").Value = GetPlayerStateForPlayer("2", "score")
    End If
    If GetPlayerStateForPlayer("3", "score") = False Then
        glf_machine_vars("player4_score").Value = 0
    Else
        glf_machine_vars("player4_score").Value = GetPlayerStateForPlayer("3", "score")
    End If
    glf_gameStarted = False
    glf_currentPlayer = Null
    glf_playerState.RemoveAll()

    DispatchPinEvent "game_ended", Null
    If Not IsNull(args) Then
    If IsObject(args(1)) Then
      Set Glf_EndGame = args(1)
    Else
      Glf_EndGame = args(1)
    End If
  Else
    Glf_EndGame = Null
  End If
End Function

AddPinEventListener "glf_game_cancel", "glf_game_cancel", "Glf_GameCancel", 20, Null

Function Glf_GameCancel(args)
    Dim device
    For Each device in glf_ball_devices.Items()
        If device.HasBall() Then
            device.EjectAll()
        End If
    Next
    Dim mode
    For Each mode in glf_modes.Items()
        mode.StopMode()
    Next
    Dim flipper
    For Each flipper in glf_flippers.Items()
        flipper.Disable()
    Next
    Dim auto_fire_device
    For Each auto_fire_device in glf_autofiredevices.Items()
        auto_fire_device.Disable()
    Next
    glf_bip = 0
    Glf_EndGame Null
    Glf_Reset(Null)
End Function

Public Function EndOfBallNextPlayer(args)
    DispatchPinEvent GLF_NEXT_PLAYER, Null
End Function

'*****************************************************************************************************************************************
'  ERROR LOGS by baldgeek
'*****************************************************************************************************************************************
Class GlfDebugLogFile
  Private Filename
  Private TxtFileStream

  Public default Function init()
        Dim timestamp : timestamp = GetTimeStamp(True)
        Filename = cGameName + "_" & timestamp & "_debug_log.txt"
    TxtFileStream = Null
    Set Init = Me
  End Function

  Public Sub EnableLogs()
    If glf_debugEnabled = True Then
      DisableLogs()
      Dim FormattedMsg, Timestamp, fso, logFolder
      Set fso = CreateObject("Scripting.FileSystemObject")
      logFolder = "glf_logs"
      If Not fso.FolderExists(logFolder) Then
        fso.CreateFolder logFolder
      End If
      Set TxtFileStream = fso.OpenTextFile(logFolder & "\" & Filename, 8, True)
    End If
  End Sub

  Public Sub DisableLogs()
    If Not IsNull(TxtFileStream) Then
      TxtFileStream.Close
    End If
  End Sub

  Private Function LZ(ByVal Number, ByVal Places)
    Dim Zeros
    Zeros = String(CInt(Places), "0")
    LZ = Right(Zeros & CStr(Number), Places)
  End Function

  Private Function GetTimeStamp(full)
    Dim CurrTime, Elapsed, MilliSecs
    CurrTime = Now()
    Elapsed = Timer()
    MilliSecs = Int((Elapsed - Int(Elapsed)) * 1000)
        If full = True Then
            GetTimeStamp = _
            LZ(Year(CurrTime),   4) & "-" _
            & LZ(Month(CurrTime),  2) & "-" _
            & LZ(Day(CurrTime), 2) & "_" _
            & LZ(Hour(CurrTime),   2) & "_" _
            & LZ(Minute(CurrTime), 2) & "_" _
            & LZ(Second(CurrTime), 2) & "_" _
            & LZ(MilliSecs, 4)
        Else
            GetTimeStamp = _
            LZ(Hour(CurrTime),   2) & "_" _
            & LZ(Minute(CurrTime), 2) & "_" _
            & LZ(Second(CurrTime), 2)
        End If
  End Function

  ' *** Debug.Print the time with milliseconds, and a message of your choice
  Public Sub WriteToLog(label, message)
    If glf_debugEnabled = True Then
      Dim FormattedMsg, Timestamp
      Timestamp = GetTimeStamp(False)
      FormattedMsg = Timestamp & ": " & label & ": " & message
      TxtFileStream.WriteLine FormattedMsg
      Debug.Print label & ": " & message
    End If
    Glf_MonitorEventStream label, message
  End Sub
End Class

'*****************************************************************************************************************************************
'  END ERROR LOGS by baldgeek
'*****************************************************************************************************************************************


Dim glf_lastPinEvent : glf_lastPinEvent = Null

Dim glf_dispatch_parent : glf_dispatch_parent = 0
Dim glf_dispatch_q : Set glf_dispatch_q = CreateObject("Scripting.Dictionary")

Dim glf_frame_dispatch_count : glf_frame_dispatch_count = 0
Dim glf_frame_handler_count : glf_frame_handler_count = 0

Dim glf_dispatch_queue_int : glf_dispatch_queue_int = 0

Sub DispatchPinEvent(e, kwargs)
    AddToDispatchEvents e, kwargs, 1
End Sub

Sub AddToDispatchEvents(e, kwargs, event_type)
    If glf_dispatch_await.Exists(e) Then
        glf_dispatch_await.Remove e
    End If
    glf_dispatch_await.Add e & ";" & glf_dispatch_queue_int, Array(kwargs, event_type)
    glf_dispatch_queue_int = glf_dispatch_queue_int + 1
End Sub

Function DispatchPinHandlers(e, args)
    DispatchPinHandlers = Empty
    Dim handler : handler = args(0)
    Dim event_args, retArgs
    event_args = args(1)
    glf_frame_handler_count = glf_frame_handler_count + 1
    If IsNull(event_args(0)) Then
        Set retArgs = GlfKwargs()
    Else
        If IsObject(event_args(0)) Then
            Set retArgs = event_args(0)
        Else
            retArgs = event_args(0)
        End If
    End If
    If IsObject(retArgs) Then
        Set glf_dispatch_current_kwargs = retArgs
    Else
        glf_dispatch_current_kwargs = retArgs
    End If
    If event_args(1) = 2 Then 'Queue Event
        Set retArgs = GetRef(handler(0))(Array(handler(2), retArgs, args(2)))
        If IsObject(retArgs) Then
            If retArgs.Exists("wait_for") Then
                DispatchPinHandlers = retArgs("wait_for")
            End If
        End If
    Else
        GetRef(handler(0))(Array(handler(2), event_args(0), args(2)))
    End If
End Function

Sub RunDispatchPinEvent(eKey, kwargs)
    Dim e
    Dim split_key : split_key = Split(eKey, ";")
    e=split_key(0)
    If Not glf_pinEvents.Exists(e) Then
        Glf_WriteDebugLog "DispatchPinEvent", e & " has no listeners"
        Exit Sub
    End If

    If Not Glf_EventBlocks.Exists(e) Then
        Glf_EventBlocks.Add e, CreateObject("Scripting.Dictionary")
    End If

    glf_lastPinEvent = e
    Dim k
    Dim handlers : Set handlers = glf_pinEvents(e)
    Glf_WriteDebugLog "DispatchPinEvent", e
    Dim handler
    For Each k In glf_pinEventsOrder(e)
        Glf_WriteDebugLog "DispatchPinEvent_"&e, "key: " & k(1) & ", priority: " & k(0)
        If handlers.Exists(k(1)) Then
            handler = handlers(k(1))
            glf_frame_dispatch_count = glf_frame_dispatch_count + 1
            glf_dispatch_handlers_await.Add e&"_"&k(1), Array(handler, kwargs, e)
        Else
            Glf_WriteDebugLog "DispatchPinEvent_"&e, "Handler does not exist: " & k(1)
        End If
    Next
End Sub

Sub RunAutoFireDispatchPinEvent(e, kwargs)

    If Not glf_pinEvents.Exists(e) Then
        Glf_WriteDebugLog "DispatchPinEvent", e & " has no listeners"
        Exit Sub
    End If

    If Not Glf_EventBlocks.Exists(e) Then
        Glf_EventBlocks.Add e, CreateObject("Scripting.Dictionary")
    End If
    glf_lastPinEvent = e
    Dim k
    Dim handlers : Set handlers = glf_pinEvents(e)
    Glf_WriteDebugLog "DispatchPinEvent", e
    Dim handler
    For Each k In glf_pinEventsOrder(e)
        Glf_WriteDebugLog "DispatchPinEvent_"&e, "key: " & k(1) & ", priority: " & k(0)
        If handlers.Exists(k(1)) Then
            handler = handlers(k(1))
            glf_frame_dispatch_count = glf_frame_dispatch_count + 1
            'debug.print "Adding Handler for: " & e&"_"&k(1)
            'glf_dispatch_handlers_await.Add e&"_"&k(1), Array(handler, kwargs, e)
            'If SwitchHandler(handler(0), Array(handler(2), kwargs, e)) = False Then
                'debug.print e&"_"&k(1)
                GetRef(handler(0))(Array(handler(2), kwargs, e))
            'End If
        Else
            Glf_WriteDebugLog "DispatchPinEvent_"&e, "Handler does not exist: " & k(1)
        End If
    Next
    Glf_EventBlocks(e).RemoveAll

End Sub

Function DispatchRelayPinEvent(e, kwargs)
    If Not glf_pinEvents.Exists(e) Then
        Glf_WriteDebugLog "DispatchRelayPinEvent", e & " has no listeners"
        DispatchRelayPinEvent = kwargs
        Exit Function
    End If
    If Not Glf_EventBlocks.Exists(e) Then
        Glf_EventBlocks.Add e, CreateObject("Scripting.Dictionary")
    End If
    glf_lastPinEvent = e
    Dim k
    Dim handlers : Set handlers = glf_pinEvents(e)
    Glf_WriteDebugLog "DispatchReplayPinEvent", e
    For Each k In glf_pinEventsOrder(e)
        Glf_WriteDebugLog "DispatchReplayPinEvent_"&e, "key: " & k(1) & ", priority: " & k(0)
        Dim handlers_a1 : handlers_a1 = handlers(k(1))
        kwargs = GetRef(handlers_a1(0))(Array(handlers_a1(2), kwargs, e))
    Next
    DispatchRelayPinEvent = kwargs
    Glf_EventBlocks(e).RemoveAll
End Function

Function DispatchQueuePinEvent(e, kwargs)

    AddToDispatchEvents e, kwargs, 2
    Exit Function

    If Not glf_pinEvents.Exists(e) Then
        Glf_WriteDebugLog "DispatchQueuePinEvent", e & " has no listeners"
        Exit Function
    End If
    If Not Glf_EventBlocks.Exists(e) Then
        Glf_EventBlocks.Add e, CreateObject("Scripting.Dictionary")
    End If
    glf_lastPinEvent = e
    Dim k,i,retArgs
    Dim handlers : Set handlers = glf_pinEvents(e)
    If IsNull(kwargs) Then
        Set kwargs = GlfKwargs()
    End If
    Glf_WriteDebugLog "DispatchQueuePinEvent", e
    Dim glf_dis_events : glf_dis_events = glf_pinEventsOrder(e)
    For i=0 to UBound(glf_dis_events)
        k = glf_dis_events(i)
        Glf_WriteDebugLog "DispatchQueuePinEvent"&e, "key: " & k(1) & ", priority: " & k(0)
        'Call the handlers.
        'The handlers might return a waitfor command.
        'If NO wait for command, continue calling handlers.
        'IF wait for command, then AddPinEventListener for the waitfor event. The callback handler needs to be ContinueDispatchQueuePinEvent.
        Dim handlers_a1 : handlers_a1 = handlers(k(1))
        Set retArgs = GetRef(handlers_a1(0))(Array(handlers_a1(2), kwargs, e))
        If retArgs.Exists("wait_for") And i<Ubound(glf_dis_events) Then
            'pause execution of handlers at index I.
            Glf_WriteDebugLog "DispatchQueuePinEvent"&e, k(1) & "_wait_for"
            Dim wait_for : wait_for = retArgs("wait_for")
            kwargs.Remove "wait_for"
            AddPinEventListener wait_for, k(1) & "_wait_for", "ContinueDispatchQueuePinEvent", k(0), Array(e, kwargs, i+1)
            Exit For
            'add event listener for the wait_for event.
            'pass in the index and handlers from this.
            'in the handler for resume queue event, process from the index the remaining handlers.
        End If
    Next
    Glf_EventBlocks(e).RemoveAll
End Function


'args Array(3)
' Array(original_event, orignal_kwargs, index)
' wait_for kwargs
' event
Function ContinueDispatchQueuePinEvent(args)

    Dim ownProps : ownProps = args(0)
    Dim kwargs
    If IsObject(args(1)) Then
        Set kwargs = args(1)
    Else
        kwargs = args(1)
    End If


    Dim i,key,keys,items
    keys=ownProps(0)
    items=ownProps(1)

    'Inject handlers back into dispatch
    For i=0 to UBound(keys)
        glf_dispatch_handlers_await.Add keys(i), items(i)
    Next
    Exit Function


End Function

Sub AddPinEventListener(evt, key, callbackName, priority, args)
    Dim i, inserted, tempArray
    If Not glf_pinEvents.Exists(evt) Then
        glf_pinEvents.Add evt, CreateObject("Scripting.Dictionary")
    End If
    If Not glf_pinEvents(evt).Exists(key) Then
        glf_pinEvents(evt).Add key, Array(callbackName, priority, args)
        Sortglf_pinEventsByPriority evt, priority, key, True
    End If
End Sub

Sub RemovePinEventListener(evt, key)
    If glf_pinEvents.Exists(evt) Then
        If glf_pinEvents(evt).Exists(key) Then
            glf_pinEvents(evt).Remove key
            Sortglf_pinEventsByPriority evt, Null, key, False
        End If
    End If
End Sub

Sub Sortglf_pinEventsByPriority(evt, priority, key, isAdding)
    Dim tempArray, i, inserted, foundIndex

    ' Initialize or update the glf_pinEventsOrder to maintain order based on priority
    If Not glf_pinEventsOrder.Exists(evt) Then
        ' If the event does not exist in glf_pinEventsOrder, just add it directly if we're adding
        If isAdding Then
            glf_pinEventsOrder.Add evt, Array(Array(priority, key))
        End If
    Else
        tempArray = glf_pinEventsOrder(evt)
        If isAdding Then
            ' Prepare to add one more element if adding
            ReDim Preserve tempArray(UBound(tempArray) + 1)
            inserted = False

            For i = 0 To UBound(tempArray) - 1
                Dim temp_a1 : temp_a1 = tempArray(i)
                If priority > temp_a1(0) Then ' Compare priorities
                    ' Move existing elements to insert the new callback at the correct position
                    Dim j
                    For j = UBound(tempArray) To i + 1 Step -1
                        tempArray(j) = tempArray(j - 1)
                    Next
                    ' Insert the new callback
                    tempArray(i) = Array(priority, key)
                    inserted = True
                    Exit For
                End If
            Next

            ' If the new callback has the lowest priority, add it at the end
            If Not inserted Then
                tempArray(UBound(tempArray)) = Array(priority, key)
            End If
        Else
            ' Code to remove an element by key
            foundIndex = -1 ' Initialize to an invalid index

            ' First, find the element's index
            For i = 0 To UBound(tempArray)
                Dim temp_a2 : temp_a2 = tempArray(i)
                If temp_a2(1) = key Then
                    foundIndex = i
                    Exit For
                End If
            Next

            ' If found, remove the element by shifting others
            If foundIndex <> -1 Then
                For i = foundIndex To UBound(tempArray) - 1
                    tempArray(i) = tempArray(i + 1)
                Next

                ' Resize the array to reflect the removal
                ReDim Preserve tempArray(UBound(tempArray) - 1)
            End If
        End If

        ' Update the glf_pinEventsOrder with the newly ordered or modified list
        glf_pinEventsOrder(evt) = tempArray
    End If
End Sub
Function GetPlayerState(key)
    If IsNull(glf_currentPlayer) Then
        Exit Function
    End If

    If glf_playerState(glf_currentPlayer).Exists(key)  Then
        GetPlayerState = glf_playerState(glf_currentPlayer)(key)
    Else
        GetPlayerState = False
    End If
End Function

Function GetPlayerStateForPlayer(player, key)
    dim p
    Select Case player
        Case 0:
            p = "PLAYER 1"
        Case 1:
            p = "PLAYER 2"
        Case 2:
            p = "PLAYER 3"
        Case 3:
            p = "PLAYER 4"
    End Select

    If glf_playerState.Exists(p) Then
        GetPlayerStateForPlayer = glf_playerState(p)(key)
    Else
        GetPlayerStateForPlayer = False
    End If
End Function

Function Getglf_currentPlayerNumber()
    Select Case glf_currentPlayer
        Case "PLAYER 1":
            Getglf_currentPlayerNumber = 0
        Case "PLAYER 2":
            Getglf_currentPlayerNumber = 1
        Case "PLAYER 3":
            Getglf_currentPlayerNumber = 2
        Case "PLAYER 4":
            Getglf_currentPlayerNumber = 3
    End Select
End Function

Function Getglf_PlayerName(player)
    Select Case player
        Case 0:
            Getglf_PlayerName = "PLAYER 1"
        Case 1:
            Getglf_PlayerName = "PLAYER 2"
        Case 2:
            Getglf_PlayerName = "PLAYER 3"
        Case 3:
            Getglf_PlayerName = "PLAYER 4"
    End Select
End Function

Function SetPlayerState(key, value)
    If IsNull(glf_currentPlayer) Then
        Exit Function
    End If

    If IsArray(value) Then
        If Join(GetPlayerState(key)) = Join(value) Then
            Exit Function
        End If
    Else
        If VarType(GetPlayerState(key)) <> vbBoolean Then
            If GetPlayerState(key) = value Then
                Exit Function
            End If
        End If
    End If
    Dim prevValue
    If glf_playerState(glf_currentPlayer).Exists(key) Then
        prevValue = glf_playerState(glf_currentPlayer)(key)
        glf_playerState(glf_currentPlayer).Remove key
    End If
    glf_playerState(glf_currentPlayer).Add key, value
    If glf_debug_level = "Debug" Then
        Dim p,v : p = prevValue : v = value
        If IsNull(prevValue) Then
            p=""
        End If
        If IsNull(value) Then
            v=""
        End If
        Glf_WriteDebugLog "Player State", "Variable "& key &" changed from " & CStr(p) & " to " & CStr(v)
    End If
    Glf_MonitorPlayerStateUpdate key, value
    If glf_monitor_player_vars = True Then
        Glf_BcpSendPlayerVar Array(Null, Array(key, value, prevValue))
    End If
    If glf_playerEvents.Exists(key) Then
        SetDelay "FirePlayerEventHandlers_" & key, "FirePlayerEventHandlersProxy",  Array(key, value, prevValue, -1), 200
        'FirePlayerEventHandlers key, value, prevValue, -1
    End If

    SetPlayerState = Null
End Function

Function SetPlayerStateByPlayer(key, value, player)

    If IsArray(value) Then
        If Join(GetPlayerStateForPlayer(player, key)) = Join(value) Then
            Exit Function
        End If
    Else
        If GetPlayerStateForPlayer(player, key) = value Then
            Exit Function
        End If
    End If
    Dim prevValue, player_name
    player_name = Getglf_PlayerName(player)
    If glf_playerState(player_name).Exists(key) Then
        prevValue = glf_playerState(player_name)(key)
        glf_playerState(player_name).Remove key
    End If
    glf_playerState(player_name).Add key, value

    If glf_playerEvents.Exists(key) Then
        SetDelay "FirePlayerEventHandlers_" & key, "FirePlayerEventHandlersProxy",  Array(key, value, prevValue, player), 200
        'FirePlayerEventHandlers key, value, prevValue, player
    End If

    SetPlayerStateByPlayer = Null
End Function

Sub FirePlayerEventHandlersProxy(args)
    FirePlayerEventHandlers args(0), args(1), args(2), args(3)
End Sub

Sub FirePlayerEventHandlers(evt, value, prevValue, player)
    If Not glf_playerEvents.Exists(evt) Then
        Exit Sub
    End If
    Dim k
    Dim handlers : Set handlers = glf_playerEvents(evt)
    For Each k In glf_playerEventsOrder(evt)
        Dim handlers_a1 : handlers_a1 = handlers(k(1))
        If handlers_a1(3) = player or handlers_a1(3) = Getglf_currentPlayerNumber() Then
            GetRef(handlers_a1(0))(Array(handlers_a1(2), Array(evt,value,prevValue)))
        End If
    Next
End Sub

Sub AddPlayerStateEventListener(evt, key, player, callbackName, priority, args)
    If Not glf_playerEvents.Exists(evt) Then
        glf_playerEvents.Add evt, CreateObject("Scripting.Dictionary")
    End If
    If Not glf_playerEvents(evt).Exists(key) Then
        glf_playerEvents(evt).Add key, Array(callbackName, priority, args, player)
        Sortglf_playerEventsByPriority evt, priority, key, True
    End If
End Sub

Sub RemovePlayerStateEventListener(evt, key)
    If glf_playerEvents.Exists(evt) Then
        If glf_playerEvents(evt).Exists(key) Then
            glf_playerEvents(evt).Remove key
            Sortglf_playerEventsByPriority evt, Null, key, False
        End If
    End If
End Sub

Sub Sortglf_playerEventsByPriority(evt, priority, key, isAdding)
    Dim tempArray, i, inserted, foundIndex

    ' Initialize or update the glf_playerEventsOrder to maintain order based on priority
    If Not glf_playerEventsOrder.Exists(evt) Then
        ' If the event does not exist in glf_playerEventsOrder, just add it directly if we're adding
        If isAdding Then
            glf_playerEventsOrder.Add evt, Array(Array(priority, key))
        End If
    Else
        tempArray = glf_playerEventsOrder(evt)
        If isAdding Then
            ' Prepare to add one more element if adding
            ReDim Preserve tempArray(UBound(tempArray) + 1)
            inserted = False

            For i = 0 To UBound(tempArray) - 1
                Dim temp_a3 : temp_a3 = tempArray(i)
                If priority > temp_a3(0) Then ' Compare priorities
                    ' Move existing elements to insert the new callback at the correct position
                    Dim j
                    For j = UBound(tempArray) To i + 1 Step -1
                        tempArray(j) = tempArray(j - 1)
                    Next
                    ' Insert the new callback
                    tempArray(i) = Array(priority, key)
                    inserted = True
                    Exit For
                End If
            Next

            ' If the new callback has the lowest priority, add it at the end
            If Not inserted Then
                tempArray(UBound(tempArray)) = Array(priority, key)
            End If
        Else
            ' Code to remove an element by key
            foundIndex = -1 ' Initialize to an invalid index

            ' First, find the element's index
            For i = 0 To UBound(tempArray)
                Dim temp_a4 : temp_a4 = tempArray(i)
                If temp_a4(1) = key Then
                    foundIndex = i
                    Exit For
                End If
            Next

            ' If found, remove the element by shifting others
            If foundIndex <> -1 Then
                For i = foundIndex To UBound(tempArray) - 1
                    tempArray(i) = tempArray(i + 1)
                Next

                ' Resize the array to reflect the removal
                ReDim Preserve tempArray(UBound(tempArray) - 1)
            End If
        End If

        ' Update the glf_playerEventsOrder with the newly ordered or modified list
        glf_playerEventsOrder(evt) = tempArray
    End If
End Sub

Sub EmitAllglf_playerEvents()
    Dim key
    For Each key in glf_playerState(glf_currentPlayer).Keys()
        FirePlayerEventHandlers key, GetPlayerState(key), GetPlayerState(key), -1
    Next
End Sub

'*******************************************
'  Drain, Trough, and Ball Release
'*******************************************
' It is best practice to never destroy balls. This leads to more stable and accurate pinball game simulations.
' The following code supports a "physical trough" where balls are not destroyed.
' To use this,
'   - The trough geometry needs to be modeled with walls, and a set of kickers needs to be added to
'  the trough. The number of kickers depends on the number of physical balls on the table.
'   - A timer called "UpdateTroughTimer" needs to be added to the table. It should have an interval of 100 and be initially disabled.
'   - The balls need to be created within the Table1_Init sub. A global ball array (gBOT) can be created and used throughout the script


Dim ballInReleasePostion : ballInReleasePostion = False
'TROUGH
Sub swTrough1_Hit
  ballInReleasePostion = True
  UpdateTrough
End Sub
Sub swTrough1_UnHit
  ballInReleasePostion = False
  UpdateTrough
End Sub
Sub swTrough2_Hit
  UpdateTrough
End Sub
Sub swTrough2_UnHit
  UpdateTrough
End Sub
Sub swTrough3_Hit
  UpdateTrough
End Sub
Sub swTrough3_UnHit
  UpdateTrough
End Sub
Sub swTrough4_Hit
  UpdateTrough
End Sub
Sub swTrough4_UnHit
  UpdateTrough
End Sub
Sub swTrough5_Hit
  UpdateTrough
End Sub
Sub swTrough5_UnHit
  UpdateTrough
End Sub
Sub swTrough6_Hit
  UpdateTrough
End Sub
Sub swTrough6_UnHit
  UpdateTrough
End Sub
Sub swTrough7_Hit
  UpdateTrough
End Sub
Sub swTrough7_UnHit
  UpdateTrough
End Sub
Sub Drain_Hit
  UpdateTrough
    If glf_gameStarted = True Then
        DispatchRelayPinEvent GLF_BALL_DRAIN, 1
    End If
End Sub
Sub Drain_UnHit
  UpdateTrough
End Sub

Sub UpdateTrough
  SetDelay "update_trough", "UpdateTroughDebounced", Null, 100
End Sub

Sub UpdateTroughDebounced(args)
  If glf_troughSize > 1 Then
    If swTrough1.BallCntOver = 0 Then swTrough2.kick 57, 10
  End If
  If glf_troughSize > 2 Then
    If swTrough2.BallCntOver = 0 Then swTrough3.kick 57, 10
  End If
  If glf_troughSize > 3 Then
    If swTrough3.BallCntOver = 0 Then swTrough4.kick 57, 10
  End If
  If glf_troughSize > 4 Then
    If swTrough4.BallCntOver = 0 Then swTrough5.kick 57, 10
  End If
  If glf_troughSize > 5 Then
    If swTrough5.BallCntOver = 0 Then swTrough6.kick 57, 10
  End If
  If glf_troughSize > 6 Then
    If swTrough6.BallCntOver = 0 Then swTrough7.kick 57, 10
  End If

  If glf_lastTroughSw.BallCntOver = 0 Then Drain.kick 57, 10
End Sub

Function Glf_0(args)
  On Error Resume Next
      Glf_0 = glf_dispatch_current_kwargs("num")=1
  If Err Then Glf_0 = False
End Function
glf_funcRefMap.Add "player_added{kwargs.num==1}", "Glf_0"
Function Glf_1(args)
  On Error Resume Next
      Glf_1 = glf_dispatch_current_kwargs("num")=2
  If Err Then Glf_1 = False
End Function
glf_funcRefMap.Add "player_added{kwargs.num==2}", "Glf_1"
Function Glf_2(args)
  On Error Resume Next
      Glf_2 = glf_dispatch_current_kwargs("num")=3
  If Err Then Glf_2 = False
End Function
glf_funcRefMap.Add "player_added{kwargs.num==3}", "Glf_2"
Function Glf_3(args)
  On Error Resume Next
      Glf_3 = glf_dispatch_current_kwargs("num")=4
  If Err Then Glf_3 = False
End Function
glf_funcRefMap.Add "player_added{kwargs.num==4}", "Glf_3"
Function Glf_4(args)
  Glf_4 = 0
End Function
glf_funcRefMap.Add "0", "Glf_4"
Function Glf_5(args)
  Glf_5 = -1
End Function
glf_funcRefMap.Add "-1", "Glf_5"
Function Glf_6(args)
  Glf_6 = 4
End Function
glf_funcRefMap.Add "4", "Glf_6"
Function Glf_7(args)
  Glf_7 = 1
End Function
glf_funcRefMap.Add "1", "Glf_7"
Function Glf_8(args)
  Glf_8 = ""
End Function
glf_funcRefMap.Add """""", "Glf_8"
Function Glf_9(args)
  Glf_9 = "WARNING"
End Function
glf_funcRefMap.Add """WARNING""", "Glf_9"
Function Glf_10(args)
  Glf_10 = "TILT"
End Function
glf_funcRefMap.Add """TILT""", "Glf_10"
Function Glf_11(args)
  On Error Resume Next
      Glf_11 = glf_timers("attract_shows").GetValue("ticks") = 8
  If Err Then Glf_11 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 8}", "Glf_11"
Function Glf_12(args)
  On Error Resume Next
      Glf_12 = glf_timers("attract_shows").GetValue("ticks") = 16
  If Err Then Glf_12 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 16}", "Glf_12"
Function Glf_13(args)
  On Error Resume Next
      Glf_13 = glf_timers("attract_shows").GetValue("ticks") = 26
  If Err Then Glf_13 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 26}", "Glf_13"
Function Glf_14(args)
  On Error Resume Next
      Glf_14 = glf_timers("attract_shows").GetValue("ticks") = 30
  If Err Then Glf_14 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 30}", "Glf_14"
Function Glf_15(args)
  On Error Resume Next
      Glf_15 = glf_timers("attract_shows").GetValue("ticks") = 38
  If Err Then Glf_15 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 38}", "Glf_15"
Function Glf_16(args)
  On Error Resume Next
      Glf_16 = glf_timers("attract_shows").GetValue("ticks") = 42
  If Err Then Glf_16 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 42}", "Glf_16"
Function Glf_17(args)
  On Error Resume Next
      Glf_17 = glf_timers("attract_shows").GetValue("ticks") = 44
  If Err Then Glf_17 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 44}", "Glf_17"
Function Glf_18(args)
  On Error Resume Next
      Glf_18 = glf_timers("attract_shows").GetValue("ticks") = 45
  If Err Then Glf_18 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 45}", "Glf_18"
Function Glf_19(args)
  On Error Resume Next
      Glf_19 = glf_timers("attract_shows").GetValue("ticks") = 54
  If Err Then Glf_19 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 54}", "Glf_19"
Function Glf_20(args)
  On Error Resume Next
      Glf_20 = glf_timers("attract_shows").GetValue("ticks") = 60
  If Err Then Glf_20 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 60}", "Glf_20"
Function Glf_21(args)
  On Error Resume Next
      Glf_21 = glf_timers("attract_shows").GetValue("ticks") = 61
  If Err Then Glf_21 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 61}", "Glf_21"
Function Glf_22(args)
  On Error Resume Next
      Glf_22 = glf_timers("attract_shows").GetValue("ticks") = 70
  If Err Then Glf_22 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 70}", "Glf_22"
Function Glf_23(args)
  On Error Resume Next
      Glf_23 = glf_timers("attract_shows").GetValue("ticks") = 71
  If Err Then Glf_23 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 71}", "Glf_23"
Function Glf_24(args)
  On Error Resume Next
      Glf_24 = glf_timers("attract_shows").GetValue("ticks") = 80
  If Err Then Glf_24 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 80}", "Glf_24"
Function Glf_25(args)
  On Error Resume Next
      Glf_25 = glf_timers("attract_shows").GetValue("ticks") = 88
  If Err Then Glf_25 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 88}", "Glf_25"
Function Glf_26(args)
  On Error Resume Next
      Glf_26 = glf_timers("attract_shows").GetValue("ticks") = 98
  If Err Then Glf_26 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 98}", "Glf_26"
Function Glf_27(args)
  On Error Resume Next
      Glf_27 = glf_timers("attract_shows").GetValue("ticks") = 102
  If Err Then Glf_27 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 102}", "Glf_27"
Function Glf_28(args)
  On Error Resume Next
      Glf_28 = glf_timers("attract_shows").GetValue("ticks") = 103
  If Err Then Glf_28 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 103}", "Glf_28"
Function Glf_29(args)
  On Error Resume Next
      Glf_29 = glf_timers("attract_shows").GetValue("ticks") = 116
  If Err Then Glf_29 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 116}", "Glf_29"
Function Glf_30(args)
  On Error Resume Next
      Glf_30 = glf_timers("attract_shows").GetValue("ticks") = 126
  If Err Then Glf_30 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 126}", "Glf_30"
Function Glf_31(args)
  On Error Resume Next
      Glf_31 = glf_timers("attract_shows").GetValue("ticks") = 128
  If Err Then Glf_31 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 128}", "Glf_31"
Function Glf_32(args)
  On Error Resume Next
      Glf_32 = glf_timers("attract_shows").GetValue("ticks") = 132
  If Err Then Glf_32 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 132}", "Glf_32"
Function Glf_33(args)
  On Error Resume Next
      Glf_33 = glf_timers("attract_shows").GetValue("ticks") = 133
  If Err Then Glf_33 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 133}", "Glf_33"
Function Glf_34(args)
  On Error Resume Next
      Glf_34 = glf_timers("attract_shows").GetValue("ticks") = 150
  If Err Then Glf_34 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 150}", "Glf_34"
Function Glf_35(args)
  On Error Resume Next
      Glf_35 = glf_timers("attract_shows").GetValue("ticks") = 151
  If Err Then Glf_35 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 151}", "Glf_35"
Function Glf_36(args)
  On Error Resume Next
      Glf_36 = glf_timers("attract_shows").GetValue("ticks") = 164
  If Err Then Glf_36 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 164}", "Glf_36"
Function Glf_37(args)
  On Error Resume Next
      Glf_37 = glf_timers("attract_shows").GetValue("ticks") = 178
  If Err Then Glf_37 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 178}", "Glf_37"
Function Glf_38(args)
  On Error Resume Next
      Glf_38 = glf_timers("attract_shows").GetValue("ticks") = 182
  If Err Then Glf_38 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 182}", "Glf_38"
Function Glf_39(args)
  On Error Resume Next
      Glf_39 = glf_timers("attract_shows").GetValue("ticks") = 184
  If Err Then Glf_39 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 184}", "Glf_39"
Function Glf_40(args)
  On Error Resume Next
      Glf_40 = glf_timers("attract_shows").GetValue("ticks") = 198
  If Err Then Glf_40 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 198}", "Glf_40"
Function Glf_41(args)
  On Error Resume Next
      Glf_41 = glf_timers("attract_shows").GetValue("ticks") = 202
  If Err Then Glf_41 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 202}", "Glf_41"
Function Glf_42(args)
  On Error Resume Next
      Glf_42 = glf_timers("attract_shows").GetValue("ticks") = 203
  If Err Then Glf_42 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 203}", "Glf_42"
Function Glf_43(args)
  On Error Resume Next
      Glf_43 = glf_timers("attract_shows").GetValue("ticks") = 208
  If Err Then Glf_43 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 208}", "Glf_43"
Function Glf_44(args)
  On Error Resume Next
      Glf_44 = glf_timers("attract_shows").GetValue("ticks") = 209
  If Err Then Glf_44 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 209}", "Glf_44"
Function Glf_45(args)
  On Error Resume Next
      Glf_45 = glf_timers("attract_shows").GetValue("ticks") = 216
  If Err Then Glf_45 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 216}", "Glf_45"
Function Glf_46(args)
  On Error Resume Next
      Glf_46 = glf_timers("attract_shows").GetValue("ticks") = 218
  If Err Then Glf_46 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 218}", "Glf_46"
Function Glf_47(args)
  On Error Resume Next
      Glf_47 = glf_timers("attract_shows").GetValue("ticks") = 224
  If Err Then Glf_47 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 224}", "Glf_47"
Function Glf_48(args)
  On Error Resume Next
      Glf_48 = glf_timers("attract_shows").GetValue("ticks") = 225
  If Err Then Glf_48 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 225}", "Glf_48"
Function Glf_49(args)
  On Error Resume Next
      Glf_49 = glf_timers("attract_shows").GetValue("ticks") = 228
  If Err Then Glf_49 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 228}", "Glf_49"
Function Glf_50(args)
  On Error Resume Next
      Glf_50 = glf_timers("attract_shows").GetValue("ticks") = 229
  If Err Then Glf_50 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 229}", "Glf_50"
Function Glf_51(args)
  On Error Resume Next
      Glf_51 = glf_timers("attract_shows").GetValue("ticks") = 232
  If Err Then Glf_51 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 232}", "Glf_51"
Function Glf_52(args)
  On Error Resume Next
      Glf_52 = glf_timers("attract_shows").GetValue("ticks") = 233
  If Err Then Glf_52 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 233}", "Glf_52"
Function Glf_53(args)
  On Error Resume Next
      Glf_53 = glf_timers("attract_shows").GetValue("ticks") = 238
  If Err Then Glf_53 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 238}", "Glf_53"
Function Glf_54(args)
  On Error Resume Next
      Glf_54 = glf_timers("attract_shows").GetValue("ticks") = 239
  If Err Then Glf_54 = False
End Function
glf_funcRefMap.Add "timer_attract_shows_tick{devices.timers.attract_shows.ticks == 239}", "Glf_54"
Function Glf_55(args)
  On Error Resume Next
      Glf_55 = glf_timers("attract_display").GetValue("ticks") = 1
  If Err Then Glf_55 = False
End Function
glf_funcRefMap.Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 1}", "Glf_55"
Function Glf_56(args)
  On Error Resume Next
      Glf_56 = glf_timers("attract_display").GetValue("ticks") = 7
  If Err Then Glf_56 = False
End Function
glf_funcRefMap.Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 7}", "Glf_56"
Function Glf_57(args)
  On Error Resume Next
      Glf_57 = glf_timers("attract_display").GetValue("ticks") = 17
  If Err Then Glf_57 = False
End Function
glf_funcRefMap.Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 17}", "Glf_57"
Function Glf_58(args)
  On Error Resume Next
      Glf_58 = glf_timers("attract_display").GetValue("ticks") = 21
  If Err Then Glf_58 = False
End Function
glf_funcRefMap.Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 21}", "Glf_58"
Function Glf_59(args)
  On Error Resume Next
      Glf_59 = glf_timers("attract_display").GetValue("ticks") = 25
  If Err Then Glf_59 = False
End Function
glf_funcRefMap.Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 25}", "Glf_59"
Function Glf_60(args)
  On Error Resume Next
      Glf_60 = glf_timers("attract_display").GetValue("ticks") = 29
  If Err Then Glf_60 = False
End Function
glf_funcRefMap.Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 29}", "Glf_60"
Function Glf_61(args)
  On Error Resume Next
      Glf_61 = glf_timers("attract_display").GetValue("ticks") = 33
  If Err Then Glf_61 = False
End Function
glf_funcRefMap.Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 33}", "Glf_61"
Function Glf_62(args)
  On Error Resume Next
      Glf_62 = glf_timers("attract_display").GetValue("ticks") = 36
  If Err Then Glf_62 = False
End Function
glf_funcRefMap.Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 36}", "Glf_62"
Function Glf_63(args)
  On Error Resume Next
      Glf_63 = glf_timers("attract_display").GetValue("ticks") = 40
  If Err Then Glf_63 = False
End Function
glf_funcRefMap.Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 40}", "Glf_63"
Function Glf_64(args)
  On Error Resume Next
      Glf_64 = glf_timers("attract_display").GetValue("ticks") = 46
  If Err Then Glf_64 = False
End Function
glf_funcRefMap.Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 46}", "Glf_64"
Function Glf_65(args)
  On Error Resume Next
      Glf_65 = glf_timers("attract_display").GetValue("ticks") = 48
  If Err Then Glf_65 = False
End Function
glf_funcRefMap.Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 48}", "Glf_65"
Function Glf_66(args)
  On Error Resume Next
      Glf_66 = glf_timers("attract_display").GetValue("ticks") = 50
  If Err Then Glf_66 = False
End Function
glf_funcRefMap.Add "timer_attract_display_tick{devices.timers.attract_display.ticks == 50}", "Glf_66"
Function Glf_67(args)
  Glf_67 = 3
End Function
glf_funcRefMap.Add "3", "Glf_67"
Function Glf_68(args)
  Glf_68 = 240
End Function
glf_funcRefMap.Add "240", "Glf_68"
Function Glf_69(args)
  Glf_69 = 55
End Function
glf_funcRefMap.Add "55", "Glf_69"
Function Glf_70(args)
  Glf_70 = "DARK "
End Function
glf_funcRefMap.Add """DARK """, "Glf_70"
Function Glf_71(args)
  Glf_71 = "CHAOS   "
End Function
glf_funcRefMap.Add """CHAOS   """, "Glf_71"
Function Glf_72(args)
  Glf_72 = glf_machine_vars("score_1_label").GetValue()
End Function
glf_funcRefMap.Add "machine.score_1_label", "Glf_72"
Function Glf_73(args)
  Glf_73 = glf_machine_vars("score_1_name").GetValue() & " "
End Function
glf_funcRefMap.Add "machine.score_1_name & "" """, "Glf_73"
Function Glf_74(args)
  Glf_74 = glf_machine_vars("score_1_value").GetValue()
End Function
glf_funcRefMap.Add "machine.score_1_value", "Glf_74"
Function Glf_75(args)
  Glf_75 = glf_machine_vars("score_2_label").GetValue()
End Function
glf_funcRefMap.Add "machine.score_2_label", "Glf_75"
Function Glf_76(args)
  Glf_76 = glf_machine_vars("score_2_name").GetValue() & " "
End Function
glf_funcRefMap.Add "machine.score_2_name & "" """, "Glf_76"
Function Glf_77(args)
  Glf_77 = glf_machine_vars("score_2_value").GetValue()
End Function
glf_funcRefMap.Add "machine.score_2_value", "Glf_77"
Function Glf_78(args)
  Glf_78 = glf_machine_vars("score_3_label").GetValue()
End Function
glf_funcRefMap.Add "machine.score_3_label", "Glf_78"
Function Glf_79(args)
  Glf_79 = glf_machine_vars("score_3_name").GetValue() & " "
End Function
glf_funcRefMap.Add "machine.score_3_name & "" """, "Glf_79"
Function Glf_80(args)
  Glf_80 = glf_machine_vars("score_3_value").GetValue()
End Function
glf_funcRefMap.Add "machine.score_3_value", "Glf_80"
Function Glf_81(args)
  Glf_81 = glf_machine_vars("score_4_label").GetValue()
End Function
glf_funcRefMap.Add "machine.score_4_label", "Glf_81"
Function Glf_82(args)
  Glf_82 = glf_machine_vars("score_4_name").GetValue() & " "
End Function
glf_funcRefMap.Add "machine.score_4_name & "" """, "Glf_82"
Function Glf_83(args)
  Glf_83 = glf_machine_vars("score_4_value").GetValue()
End Function
glf_funcRefMap.Add "machine.score_4_value", "Glf_83"
Function Glf_84(args)
  Glf_84 = "LAST "
End Function
glf_funcRefMap.Add """LAST """, "Glf_84"
Function Glf_85(args)
  Glf_85 = "SCORES "
End Function
glf_funcRefMap.Add """SCORES """, "Glf_85"
Function Glf_86(args)
  Glf_86 = glf_machine_vars("player1_score").GetValue()
End Function
glf_funcRefMap.Add "machine.player1_score", "Glf_86"
Function Glf_87(args)
  Glf_87 = glf_machine_vars("player2_score").GetValue()
End Function
glf_funcRefMap.Add "machine.player2_score", "Glf_87"
Function Glf_88(args)
  Glf_88 = glf_machine_vars("player3_score").GetValue()
End Function
glf_funcRefMap.Add "machine.player3_score", "Glf_88"
Function Glf_89(args)
  Glf_89 = glf_machine_vars("player4_score").GetValue()
End Function
glf_funcRefMap.Add "machine.player4_score", "Glf_89"
Function Glf_90(args)
  Glf_90 = "APOPHIS"
End Function
glf_funcRefMap.Add """APOPHIS""", "Glf_90"
Function Glf_91(args)
  Glf_91 = "FLUX  "
End Function
glf_funcRefMap.Add """FLUX  """, "Glf_91"
Function Glf_92(args)
  Glf_92 = "UNSAVORY"
End Function
glf_funcRefMap.Add """UNSAVORY""", "Glf_92"
Function Glf_93(args)
  On Error Resume Next
      Glf_93 = Glf_GameVariable("tilted") = False
  If Err Then Glf_93 = False
End Function
glf_funcRefMap.Add "ball_ending{game.tilted == False}", "Glf_93"
Function Glf_94(args)
  On Error Resume Next
      Glf_94 = GetPlayerState("shot_cluster_bomb1") = 1
  If Err Then Glf_94 = False
End Function
glf_funcRefMap.Add "check_bonus_bomb1{current_player.shot_cluster_bomb1 == 1}", "Glf_94"
Function Glf_95(args)
  On Error Resume Next
      Glf_95 = GetPlayerState("shot_cluster_bomb2") = 1
  If Err Then Glf_95 = False
End Function
glf_funcRefMap.Add "check_bonus_bomb2{current_player.shot_cluster_bomb2 == 1}", "Glf_95"
Function Glf_96(args)
  On Error Resume Next
      Glf_96 = GetPlayerState("shot_moon_missile1") = 1
  If Err Then Glf_96 = False
End Function
glf_funcRefMap.Add "check_bonus_missile1{current_player.shot_moon_missile1 == 1}", "Glf_96"
Function Glf_97(args)
  On Error Resume Next
      Glf_97 = GetPlayerState("shot_moon_missile2") = 1
  If Err Then Glf_97 = False
End Function
glf_funcRefMap.Add "check_bonus_missile2{current_player.shot_moon_missile2 == 1}", "Glf_97"
Function Glf_98(args)
  On Error Resume Next
      Glf_98 = GetPlayerState("shot_proton_round1") = 1
  If Err Then Glf_98 = False
End Function
glf_funcRefMap.Add "check_bonus_proton1{current_player.shot_proton_round1 == 1}", "Glf_98"
Function Glf_99(args)
  On Error Resume Next
      Glf_99 = GetPlayerState("shot_proton_round2") = 1
  If Err Then Glf_99 = False
End Function
glf_funcRefMap.Add "check_bonus_proton2{current_player.shot_proton_round2 == 1}", "Glf_99"
Function Glf_100(args)
  On Error Resume Next
      Glf_100 = GetPlayerState("shot_proton_round3") = 1
  If Err Then Glf_100 = False
End Function
glf_funcRefMap.Add "check_bonus_proton3{current_player.shot_proton_round3 == 1}", "Glf_100"
Function Glf_101(args)
  On Error Resume Next
      Glf_101 = GetPlayerState("shot_proton_round4") = 1
  If Err Then Glf_101 = False
End Function
glf_funcRefMap.Add "check_bonus_proton4{current_player.shot_proton_round4 == 1}", "Glf_101"
Function Glf_102(args)
  On Error Resume Next
      Glf_102 = GetPlayerState("shot_proton_round5") = 1
  If Err Then Glf_102 = False
End Function
glf_funcRefMap.Add "check_bonus_proton5{current_player.shot_proton_round5 == 1}", "Glf_102"
Function Glf_103(args)
  On Error Resume Next
      Glf_103 = GetPlayerState("shot_proton_round6") = 1
  If Err Then Glf_103 = False
End Function
glf_funcRefMap.Add "check_bonus_proton6{current_player.shot_proton_round6 == 1}", "Glf_103"
Function Glf_104(args)
  On Error Resume Next
      Glf_104 = GetPlayerState("shot_meteor_wave1") = 2
  If Err Then Glf_104 = False
End Function
glf_funcRefMap.Add "check_bonus_waves{current_player.shot_meteor_wave1 == 2}", "Glf_104"
Function Glf_105(args)
  On Error Resume Next
      Glf_105 = GetPlayerState("shot_meteor_wave2") = 2
  If Err Then Glf_105 = False
End Function
glf_funcRefMap.Add "check_bonus_waves{current_player.shot_meteor_wave2 == 2}", "Glf_105"
Function Glf_106(args)
  On Error Resume Next
      Glf_106 = GetPlayerState("shot_meteor_wave3") = 2
  If Err Then Glf_106 = False
End Function
glf_funcRefMap.Add "check_bonus_waves{current_player.shot_meteor_wave3 == 2}", "Glf_106"
Function Glf_107(args)
  On Error Resume Next
      Glf_107 = GetPlayerState("shot_meteor_wave4") = 2
  If Err Then Glf_107 = False
End Function
glf_funcRefMap.Add "check_bonus_waves{current_player.shot_meteor_wave4 == 2}", "Glf_107"
Function Glf_108(args)
  On Error Resume Next
      Glf_108 = GetPlayerState("shot_meteor_wave5") = 2
  If Err Then Glf_108 = False
End Function
glf_funcRefMap.Add "check_bonus_waves{current_player.shot_meteor_wave5 == 2}", "Glf_108"
Function Glf_109(args)
  On Error Resume Next
      Glf_109 = GetPlayerState("shot_meteor_wave6") = 2
  If Err Then Glf_109 = False
End Function
glf_funcRefMap.Add "check_bonus_waves{current_player.shot_meteor_wave6 == 2}", "Glf_109"
Function Glf_110(args)
  On Error Resume Next
      Glf_110 = GetPlayerState("shot_meteor_wave7") = 2
  If Err Then Glf_110 = False
End Function
glf_funcRefMap.Add "check_bonus_waves{current_player.shot_meteor_wave7 == 2}", "Glf_110"
Function Glf_111(args)
  On Error Resume Next
      Glf_111 = GetPlayerState("shot_meteor_wave8") = 2
  If Err Then Glf_111 = False
End Function
glf_funcRefMap.Add "check_bonus_waves{current_player.shot_meteor_wave8 == 2}", "Glf_111"
Function Glf_112(args)
  On Error Resume Next
      Glf_112 = GetPlayerState("shot_meteor_wave9") = 2
  If Err Then Glf_112 = False
End Function
glf_funcRefMap.Add "check_bonus_waves{current_player.shot_meteor_wave9 == 2}", "Glf_112"
Function Glf_113(args)
  On Error Resume Next
      Glf_113 = glf_timers("bonus").GetValue("ticks") = 17
  If Err Then Glf_113 = False
End Function
glf_funcRefMap.Add "timer_bonus_tick{devices.timers.bonus.ticks == 17}", "Glf_113"
Function Glf_114(args)
  On Error Resume Next
      Glf_114 = glf_timers("bonus").GetValue("ticks") = 2 And GetPlayerState("bonus_multiplier") = 2
  If Err Then Glf_114 = False
End Function
glf_funcRefMap.Add "timer_bonus_tick{devices.timers.bonus.ticks == 2 && current_player.bonus_multiplier == 2}", "Glf_114"
Function Glf_115(args)
  On Error Resume Next
      Glf_115 = glf_timers("bonus").GetValue("ticks") = 3
  If Err Then Glf_115 = False
End Function
glf_funcRefMap.Add "timer_bonus_tick{devices.timers.bonus.ticks == 3}", "Glf_115"
Function Glf_116(args)
  On Error Resume Next
      Glf_116 = glf_timers("bonus").GetValue("ticks") = 6
  If Err Then Glf_116 = False
End Function
glf_funcRefMap.Add "timer_bonus_tick{devices.timers.bonus.ticks == 6}", "Glf_116"
Function Glf_117(args)
  On Error Resume Next
      Glf_117 = glf_timers("bonus").GetValue("ticks") = 9
  If Err Then Glf_117 = False
End Function
glf_funcRefMap.Add "timer_bonus_tick{devices.timers.bonus.ticks == 9}", "Glf_117"
Function Glf_118(args)
  On Error Resume Next
      Glf_118 = glf_timers("bonus").GetValue("ticks") = 12
  If Err Then Glf_118 = False
End Function
glf_funcRefMap.Add "timer_bonus_tick{devices.timers.bonus.ticks == 12}", "Glf_118"
Function Glf_119(args)
  On Error Resume Next
      Glf_119 = glf_timers("bonus").GetValue("ticks") = 15
  If Err Then Glf_119 = False
End Function
glf_funcRefMap.Add "timer_bonus_tick{devices.timers.bonus.ticks == 15}", "Glf_119"
Function Glf_120(args)
  On Error Resume Next
      Glf_120 = glf_timers("bonus").GetValue("ticks") = 18
  If Err Then Glf_120 = False
End Function
glf_funcRefMap.Add "timer_bonus_tick{devices.timers.bonus.ticks == 18}", "Glf_120"
Function Glf_121(args)
  Glf_121 = 24
End Function
glf_funcRefMap.Add "24", "Glf_121"
Function Glf_122(args)
  On Error Resume Next
      Glf_122 = GetPlayerState("bonus_comboflip_block")=0 And glf_timers("bonus").GetValue("ticks") < 16
  If Err Then Glf_122 = False
End Function
glf_funcRefMap.Add "skip_bonus_tally{current_player.bonus_comboflip_block==0 && devices.timers.bonus.ticks < 16}", "Glf_122"
Function Glf_123(args)
  Glf_123 = 16
End Function
glf_funcRefMap.Add "16", "Glf_123"
Function Glf_124(args)
  Glf_124 = "BONUS  "
End Function
glf_funcRefMap.Add """BONUS  """, "Glf_124"
Function Glf_125(args)
  Glf_125 = " X 2  "
End Function
glf_funcRefMap.Add """ X 2  """, "Glf_125"
Function Glf_126(args)
  Glf_126 = "WAVES"
End Function
glf_funcRefMap.Add """WAVES""", "Glf_126"
Function Glf_127(args)
  Glf_127 = Glf_FormatValue(GetPlayerState("bonus_waves"), "0>2")
End Function
glf_funcRefMap.Add "{current_player.bonus_waves:0>2}", "Glf_127"
Function Glf_128(args)
  Glf_128 = "TRAINING"
End Function
glf_funcRefMap.Add """TRAINING""", "Glf_128"
Function Glf_129(args)
  Glf_129 = Glf_FormatValue(GetPlayerState("bonus_training"), "0>2")
End Function
glf_funcRefMap.Add "{current_player.bonus_training:0>2}", "Glf_129"
Function Glf_130(args)
  Glf_130 = "BOMBS"
End Function
glf_funcRefMap.Add """BOMBS""", "Glf_130"
Function Glf_131(args)
  Glf_131 = Glf_FormatValue(GetPlayerState("bonus_bombs"), "0>2")
End Function
glf_funcRefMap.Add "{current_player.bonus_bombs:0>2}", "Glf_131"
Function Glf_132(args)
  Glf_132 = "MISSILES"
End Function
glf_funcRefMap.Add """MISSILES""", "Glf_132"
Function Glf_133(args)
  Glf_133 = Glf_FormatValue(GetPlayerState("bonus_missiles"), "0>2")
End Function
glf_funcRefMap.Add "{current_player.bonus_missiles:0>2}", "Glf_133"
Function Glf_134(args)
  Glf_134 = "PROTONS"
End Function
glf_funcRefMap.Add """PROTONS""", "Glf_134"
Function Glf_135(args)
  Glf_135 = Glf_FormatValue(GetPlayerState("bonus_protons"), "0>2")
End Function
glf_funcRefMap.Add "{current_player.bonus_protons:0>2}", "Glf_135"
Function Glf_136(args)
  Glf_136 = "TOTAL"
End Function
glf_funcRefMap.Add """TOTAL""", "Glf_136"
Function Glf_137(args)
  Glf_137 = Glf_FormatValue(GetPlayerState("bonus_total"), "0>2")
End Function
glf_funcRefMap.Add "{current_player.bonus_total:0>2}", "Glf_137"
Function Glf_138(args)
  Glf_138 = 100000 * GetPlayerState("num_waves_completed_this_ball") * GetPlayerState("num_waves_completed")
End Function
glf_funcRefMap.Add "100000 * current_player.num_waves_completed_this_ball * current_player.num_waves_completed", "Glf_138"
Function Glf_139(args)
  Glf_139 = 250000 * GetPlayerState("training_total_achieved")
End Function
glf_funcRefMap.Add "250000 * current_player.training_total_achieved", "Glf_139"
Function Glf_140(args)
  Glf_140 = 250000
End Function
glf_funcRefMap.Add "250000", "Glf_140"
Function Glf_141(args)
  Glf_141 = 50000
End Function
glf_funcRefMap.Add "50000", "Glf_141"
Function Glf_142(args)
  Glf_142 = (GetPlayerState("bonus_waves") + GetPlayerState("bonus_training") + GetPlayerState("bonus_bombs") + GetPlayerState("bonus_missiles") + GetPlayerState("bonus_protons")) * GetPlayerState("bonus_multiplier")
End Function
glf_funcRefMap.Add "(current_player.bonus_waves + current_player.bonus_training + current_player.bonus_bombs + current_player.bonus_missiles + current_player.bonus_protons) * current_player.bonus_multiplier", "Glf_142"
Function Glf_143(args)
  Glf_143 = GetPlayerState("bonus_total")
End Function
glf_funcRefMap.Add "current_player.bonus_total", "Glf_143"
Function Glf_144(args)
  On Error Resume Next
      Glf_144 = glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_144 = False
End Function
glf_funcRefMap.Add "mode_post_game_started{machine.won_game == 0}", "Glf_144"
Function Glf_145(args)
  On Error Resume Next
      Glf_145 = glf_machine_vars("won_game").GetValue() = 1
  If Err Then Glf_145 = False
End Function
glf_funcRefMap.Add "mode_post_game_started{machine.won_game == 1}", "Glf_145"
Function Glf_146(args)
  On Error Resume Next
      Glf_146 = glf_timers("post_game_show").GetValue("ticks") = 1
  If Err Then Glf_146 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 1}", "Glf_146"
Function Glf_147(args)
  On Error Resume Next
      Glf_147 = glf_timers("post_game_show").GetValue("ticks") = 2
  If Err Then Glf_147 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 2}", "Glf_147"
Function Glf_148(args)
  On Error Resume Next
      Glf_148 = glf_timers("post_game_show").GetValue("ticks") = 4
  If Err Then Glf_148 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 4}", "Glf_148"
Function Glf_149(args)
  On Error Resume Next
      Glf_149 = glf_timers("post_game_show").GetValue("ticks") = 8
  If Err Then Glf_149 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 8}", "Glf_149"
Function Glf_150(args)
  On Error Resume Next
      Glf_150 = glf_timers("post_game_show").GetValue("ticks") = 10
  If Err Then Glf_150 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 10}", "Glf_150"
Function Glf_151(args)
  On Error Resume Next
      Glf_151 = glf_timers("post_game_show").GetValue("ticks") = 12
  If Err Then Glf_151 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 12}", "Glf_151"
Function Glf_152(args)
  On Error Resume Next
      Glf_152 = glf_timers("post_game_show").GetValue("ticks") = 16
  If Err Then Glf_152 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 16}", "Glf_152"
Function Glf_153(args)
  On Error Resume Next
      Glf_153 = glf_timers("post_game_show").GetValue("ticks") = 17
  If Err Then Glf_153 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 17}", "Glf_153"
Function Glf_154(args)
  On Error Resume Next
      Glf_154 = glf_timers("post_game_show").GetValue("ticks") = 18
  If Err Then Glf_154 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 18}", "Glf_154"
Function Glf_155(args)
  On Error Resume Next
      Glf_155 = glf_timers("post_game_show").GetValue("ticks") = 19
  If Err Then Glf_155 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 19}", "Glf_155"
Function Glf_156(args)
  On Error Resume Next
      Glf_156 = glf_timers("post_game_show").GetValue("ticks") = 20
  If Err Then Glf_156 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 20}", "Glf_156"
Function Glf_157(args)
  On Error Resume Next
      Glf_157 = glf_timers("post_game_show").GetValue("ticks") = 24
  If Err Then Glf_157 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 24}", "Glf_157"
Function Glf_158(args)
  On Error Resume Next
      Glf_158 = glf_timers("post_game_show").GetValue("ticks") = 25
  If Err Then Glf_158 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 25}", "Glf_158"
Function Glf_159(args)
  On Error Resume Next
      Glf_159 = glf_timers("post_game_show").GetValue("ticks") = 26
  If Err Then Glf_159 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 26}", "Glf_159"
Function Glf_160(args)
  On Error Resume Next
      Glf_160 = glf_timers("post_game_show").GetValue("ticks") = 27
  If Err Then Glf_160 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 27}", "Glf_160"
Function Glf_161(args)
  On Error Resume Next
      Glf_161 = glf_timers("post_game_show").GetValue("ticks") = 28
  If Err Then Glf_161 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 28}", "Glf_161"
Function Glf_162(args)
  On Error Resume Next
      Glf_162 = glf_timers("post_game_show").GetValue("ticks") = 29
  If Err Then Glf_162 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 29}", "Glf_162"
Function Glf_163(args)
  On Error Resume Next
      Glf_163 = glf_timers("post_game_show").GetValue("ticks") = 30
  If Err Then Glf_163 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 30}", "Glf_163"
Function Glf_164(args)
  On Error Resume Next
      Glf_164 = glf_timers("post_game_show").GetValue("ticks") = 31
  If Err Then Glf_164 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 31}", "Glf_164"
Function Glf_165(args)
  On Error Resume Next
      Glf_165 = glf_timers("post_game_show").GetValue("ticks") = 32
  If Err Then Glf_165 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 32}", "Glf_165"
Function Glf_166(args)
  On Error Resume Next
      Glf_166 = glf_timers("post_game_show").GetValue("ticks") = 33
  If Err Then Glf_166 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 33}", "Glf_166"
Function Glf_167(args)
  On Error Resume Next
      Glf_167 = glf_timers("post_game_show").GetValue("ticks") = 34
  If Err Then Glf_167 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 34}", "Glf_167"
Function Glf_168(args)
  On Error Resume Next
      Glf_168 = glf_timers("post_game_show").GetValue("ticks") = 35
  If Err Then Glf_168 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 35}", "Glf_168"
Function Glf_169(args)
  On Error Resume Next
      Glf_169 = glf_timers("post_game_show").GetValue("ticks") = 36
  If Err Then Glf_169 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 36}", "Glf_169"
Function Glf_170(args)
  On Error Resume Next
      Glf_170 = glf_timers("post_game_show").GetValue("ticks") = 37
  If Err Then Glf_170 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 37}", "Glf_170"
Function Glf_171(args)
  On Error Resume Next
      Glf_171 = glf_timers("post_game_show").GetValue("ticks") = 38
  If Err Then Glf_171 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 38}", "Glf_171"
Function Glf_172(args)
  On Error Resume Next
      Glf_172 = glf_timers("post_game_show").GetValue("ticks") = 39
  If Err Then Glf_172 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 39}", "Glf_172"
Function Glf_173(args)
  On Error Resume Next
      Glf_173 = glf_timers("post_game_show").GetValue("ticks") = 40
  If Err Then Glf_173 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 40}", "Glf_173"
Function Glf_174(args)
  On Error Resume Next
      Glf_174 = glf_timers("post_game_show").GetValue("ticks") = 41
  If Err Then Glf_174 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 41}", "Glf_174"
Function Glf_175(args)
  On Error Resume Next
      Glf_175 = glf_timers("post_game_show").GetValue("ticks") = 42
  If Err Then Glf_175 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 42}", "Glf_175"
Function Glf_176(args)
  On Error Resume Next
      Glf_176 = glf_timers("post_game_show").GetValue("ticks") = 43
  If Err Then Glf_176 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 43}", "Glf_176"
Function Glf_177(args)
  On Error Resume Next
      Glf_177 = glf_timers("post_game_show").GetValue("ticks") = 44
  If Err Then Glf_177 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 44}", "Glf_177"
Function Glf_178(args)
  On Error Resume Next
      Glf_178 = glf_timers("post_game_show").GetValue("ticks") = 45
  If Err Then Glf_178 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 45}", "Glf_178"
Function Glf_179(args)
  On Error Resume Next
      Glf_179 = glf_timers("post_game_show").GetValue("ticks") = 46
  If Err Then Glf_179 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 46}", "Glf_179"
Function Glf_180(args)
  On Error Resume Next
      Glf_180 = glf_timers("post_game_show").GetValue("ticks") = 47
  If Err Then Glf_180 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 47}", "Glf_180"
Function Glf_181(args)
  On Error Resume Next
      Glf_181 = glf_timers("post_game_show").GetValue("ticks") = 48
  If Err Then Glf_181 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 48}", "Glf_181"
Function Glf_182(args)
  On Error Resume Next
      Glf_182 = glf_timers("post_game_show").GetValue("ticks") = 49
  If Err Then Glf_182 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 49}", "Glf_182"
Function Glf_183(args)
  On Error Resume Next
      Glf_183 = glf_timers("post_game_show").GetValue("ticks") = 50
  If Err Then Glf_183 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 50}", "Glf_183"
Function Glf_184(args)
  On Error Resume Next
      Glf_184 = glf_timers("post_game_show").GetValue("ticks") = 51
  If Err Then Glf_184 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 51}", "Glf_184"
Function Glf_185(args)
  On Error Resume Next
      Glf_185 = glf_timers("post_game_show").GetValue("ticks") = 52
  If Err Then Glf_185 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 52}", "Glf_185"
Function Glf_186(args)
  On Error Resume Next
      Glf_186 = glf_timers("post_game_show").GetValue("ticks") = 53
  If Err Then Glf_186 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 53}", "Glf_186"
Function Glf_187(args)
  On Error Resume Next
      Glf_187 = glf_timers("post_game_show").GetValue("ticks") = 54
  If Err Then Glf_187 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 54}", "Glf_187"
Function Glf_188(args)
  On Error Resume Next
      Glf_188 = glf_timers("post_game_show").GetValue("ticks") = 55
  If Err Then Glf_188 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 55}", "Glf_188"
Function Glf_189(args)
  On Error Resume Next
      Glf_189 = glf_timers("post_game_show").GetValue("ticks") = 56
  If Err Then Glf_189 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 56}", "Glf_189"
Function Glf_190(args)
  On Error Resume Next
      Glf_190 = glf_timers("post_game_show").GetValue("ticks") = 57
  If Err Then Glf_190 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 57}", "Glf_190"
Function Glf_191(args)
  On Error Resume Next
      Glf_191 = glf_timers("post_game_show").GetValue("ticks") = 58
  If Err Then Glf_191 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 58}", "Glf_191"
Function Glf_192(args)
  On Error Resume Next
      Glf_192 = glf_timers("post_game_show").GetValue("ticks") = 59
  If Err Then Glf_192 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 59}", "Glf_192"
Function Glf_193(args)
  On Error Resume Next
      Glf_193 = glf_timers("post_game_show").GetValue("ticks") = 60
  If Err Then Glf_193 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 60}", "Glf_193"
Function Glf_194(args)
  On Error Resume Next
      Glf_194 = glf_timers("post_game_show").GetValue("ticks") = 61
  If Err Then Glf_194 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 61}", "Glf_194"
Function Glf_195(args)
  On Error Resume Next
      Glf_195 = glf_timers("post_game_show").GetValue("ticks") = 62
  If Err Then Glf_195 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 62}", "Glf_195"
Function Glf_196(args)
  On Error Resume Next
      Glf_196 = glf_timers("post_game_show").GetValue("ticks") = 63
  If Err Then Glf_196 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 63}", "Glf_196"
Function Glf_197(args)
  On Error Resume Next
      Glf_197 = glf_timers("post_game_show").GetValue("ticks") = 64
  If Err Then Glf_197 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 64}", "Glf_197"
Function Glf_198(args)
  On Error Resume Next
      Glf_198 = glf_timers("post_game_show").GetValue("ticks") = 65
  If Err Then Glf_198 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 65}", "Glf_198"
Function Glf_199(args)
  On Error Resume Next
      Glf_199 = glf_timers("post_game_show").GetValue("ticks") = 66
  If Err Then Glf_199 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 66}", "Glf_199"
Function Glf_200(args)
  On Error Resume Next
      Glf_200 = glf_timers("post_game_show").GetValue("ticks") = 67
  If Err Then Glf_200 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 67}", "Glf_200"
Function Glf_201(args)
  On Error Resume Next
      Glf_201 = glf_timers("post_game_show").GetValue("ticks") = 68
  If Err Then Glf_201 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 68}", "Glf_201"
Function Glf_202(args)
  On Error Resume Next
      Glf_202 = glf_timers("post_game_show").GetValue("ticks") = 69
  If Err Then Glf_202 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 69}", "Glf_202"
Function Glf_203(args)
  On Error Resume Next
      Glf_203 = glf_timers("post_game_show").GetValue("ticks") = 70
  If Err Then Glf_203 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 70}", "Glf_203"
Function Glf_204(args)
  On Error Resume Next
      Glf_204 = glf_timers("post_game_show").GetValue("ticks") = 71
  If Err Then Glf_204 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 71}", "Glf_204"
Function Glf_205(args)
  On Error Resume Next
      Glf_205 = glf_timers("post_game_show").GetValue("ticks") = 72
  If Err Then Glf_205 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 72}", "Glf_205"
Function Glf_206(args)
  On Error Resume Next
      Glf_206 = glf_timers("post_game_show").GetValue("ticks") = 73
  If Err Then Glf_206 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 73}", "Glf_206"
Function Glf_207(args)
  On Error Resume Next
      Glf_207 = glf_timers("post_game_show").GetValue("ticks") = 74
  If Err Then Glf_207 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 74}", "Glf_207"
Function Glf_208(args)
  On Error Resume Next
      Glf_208 = glf_timers("post_game_show").GetValue("ticks") = 75
  If Err Then Glf_208 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 75}", "Glf_208"
Function Glf_209(args)
  On Error Resume Next
      Glf_209 = glf_timers("post_game_show").GetValue("ticks") = 76
  If Err Then Glf_209 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 76}", "Glf_209"
Function Glf_210(args)
  On Error Resume Next
      Glf_210 = glf_timers("post_game_show").GetValue("ticks") = 78
  If Err Then Glf_210 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 78}", "Glf_210"
Function Glf_211(args)
  On Error Resume Next
      Glf_211 = glf_timers("post_game_show").GetValue("ticks") = 79
  If Err Then Glf_211 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 79}", "Glf_211"
Function Glf_212(args)
  On Error Resume Next
      Glf_212 = glf_timers("post_game_show").GetValue("ticks") = 80
  If Err Then Glf_212 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 80}", "Glf_212"
Function Glf_213(args)
  On Error Resume Next
      Glf_213 = glf_timers("post_game_show").GetValue("ticks") = 81
  If Err Then Glf_213 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 81}", "Glf_213"
Function Glf_214(args)
  On Error Resume Next
      Glf_214 = glf_timers("post_game_show").GetValue("ticks") = 82
  If Err Then Glf_214 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 82}", "Glf_214"
Function Glf_215(args)
  On Error Resume Next
      Glf_215 = glf_timers("post_game_show").GetValue("ticks") = 83
  If Err Then Glf_215 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 83}", "Glf_215"
Function Glf_216(args)
  On Error Resume Next
      Glf_216 = glf_timers("post_game_show").GetValue("ticks") = 84
  If Err Then Glf_216 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 84}", "Glf_216"
Function Glf_217(args)
  On Error Resume Next
      Glf_217 = glf_timers("post_game_show").GetValue("ticks") = 85
  If Err Then Glf_217 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 85}", "Glf_217"
Function Glf_218(args)
  On Error Resume Next
      Glf_218 = glf_timers("post_game_show").GetValue("ticks") = 86
  If Err Then Glf_218 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 86}", "Glf_218"
Function Glf_219(args)
  On Error Resume Next
      Glf_219 = glf_timers("post_game_show").GetValue("ticks") = 87
  If Err Then Glf_219 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 87}", "Glf_219"
Function Glf_220(args)
  On Error Resume Next
      Glf_220 = glf_timers("post_game_show").GetValue("ticks") = 88
  If Err Then Glf_220 = False
End Function
glf_funcRefMap.Add "timer_post_game_show_tick{devices.timers.post_game_show.ticks == 88}", "Glf_220"
Function Glf_221(args)
  On Error Resume Next
      Glf_221 = glf_machine_vars("message_num").GetValue() = 1 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_221 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 1 && machine.won_game == 0}", "Glf_221"
Function Glf_222(args)
  On Error Resume Next
      Glf_222 = glf_machine_vars("message_num").GetValue() = 2 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_222 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 2 && machine.won_game == 0}", "Glf_222"
Function Glf_223(args)
  On Error Resume Next
      Glf_223 = glf_machine_vars("message_num").GetValue() = 3 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_223 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 3 && machine.won_game == 0}", "Glf_223"
Function Glf_224(args)
  On Error Resume Next
      Glf_224 = glf_machine_vars("message_num").GetValue() = 4 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_224 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 4 && machine.won_game == 0}", "Glf_224"
Function Glf_225(args)
  On Error Resume Next
      Glf_225 = glf_machine_vars("message_num").GetValue() = 5 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_225 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 5 && machine.won_game == 0}", "Glf_225"
Function Glf_226(args)
  On Error Resume Next
      Glf_226 = glf_machine_vars("message_num").GetValue() = 6 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_226 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 6 && machine.won_game == 0}", "Glf_226"
Function Glf_227(args)
  On Error Resume Next
      Glf_227 = glf_machine_vars("message_num").GetValue() = 7 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_227 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 7 && machine.won_game == 0}", "Glf_227"
Function Glf_228(args)
  On Error Resume Next
      Glf_228 = glf_machine_vars("message_num").GetValue() = 8 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_228 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 8 && machine.won_game == 0}", "Glf_228"
Function Glf_229(args)
  On Error Resume Next
      Glf_229 = glf_machine_vars("message_num").GetValue() = 9 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_229 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 9 && machine.won_game == 0}", "Glf_229"
Function Glf_230(args)
  On Error Resume Next
      Glf_230 = glf_machine_vars("message_num").GetValue() = 10 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_230 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 10 && machine.won_game == 0}", "Glf_230"
Function Glf_231(args)
  On Error Resume Next
      Glf_231 = glf_machine_vars("message_num").GetValue() = 11 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_231 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 11 && machine.won_game == 0}", "Glf_231"
Function Glf_232(args)
  On Error Resume Next
      Glf_232 = glf_machine_vars("message_num").GetValue() = 12 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_232 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 12 && machine.won_game == 0}", "Glf_232"
Function Glf_233(args)
  On Error Resume Next
      Glf_233 = glf_machine_vars("message_num").GetValue() = 13 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_233 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 13 && machine.won_game == 0}", "Glf_233"
Function Glf_234(args)
  On Error Resume Next
      Glf_234 = glf_machine_vars("message_num").GetValue() = 14 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_234 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 14 && machine.won_game == 0}", "Glf_234"
Function Glf_235(args)
  On Error Resume Next
      Glf_235 = glf_machine_vars("message_num").GetValue() = 15 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_235 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 15 && machine.won_game == 0}", "Glf_235"
Function Glf_236(args)
  On Error Resume Next
      Glf_236 = glf_machine_vars("message_num").GetValue() = 16 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_236 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 16 && machine.won_game == 0}", "Glf_236"
Function Glf_237(args)
  On Error Resume Next
      Glf_237 = glf_machine_vars("message_num").GetValue() = 17 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_237 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 17 && machine.won_game == 0}", "Glf_237"
Function Glf_238(args)
  On Error Resume Next
      Glf_238 = glf_machine_vars("message_num").GetValue() = 18 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_238 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 18 && machine.won_game == 0}", "Glf_238"
Function Glf_239(args)
  On Error Resume Next
      Glf_239 = glf_machine_vars("message_num").GetValue() = 19 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_239 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 19 && machine.won_game == 0}", "Glf_239"
Function Glf_240(args)
  On Error Resume Next
      Glf_240 = glf_machine_vars("message_num").GetValue() = 20 And glf_machine_vars("won_game").GetValue() = 0
  If Err Then Glf_240 = False
End Function
glf_funcRefMap.Add "check_loser_message{machine.message_num == 20 && machine.won_game == 0}", "Glf_240"
Function Glf_241(args)
  On Error Resume Next
      Glf_241 = glf_machine_vars("won_game").GetValue() = 1
  If Err Then Glf_241 = False
End Function
glf_funcRefMap.Add "check_winner_message1{machine.won_game == 1}", "Glf_241"
Function Glf_242(args)
  On Error Resume Next
      Glf_242 = glf_machine_vars("won_game").GetValue() = 1
  If Err Then Glf_242 = False
End Function
glf_funcRefMap.Add "check_winner_message2{machine.won_game == 1}", "Glf_242"
Function Glf_243(args)
  On Error Resume Next
      Glf_243 = glf_machine_vars("won_game").GetValue() = 1
  If Err Then Glf_243 = False
End Function
glf_funcRefMap.Add "check_winner_message3{machine.won_game == 1}", "Glf_243"
Function Glf_244(args)
  On Error Resume Next
      Glf_244 = glf_machine_vars("won_game").GetValue() = 1
  If Err Then Glf_244 = False
End Function
glf_funcRefMap.Add "check_winner_message4{machine.won_game == 1}", "Glf_244"
Function Glf_245(args)
  On Error Resume Next
      Glf_245 = glf_machine_vars("won_game").GetValue() = 1
  If Err Then Glf_245 = False
End Function
glf_funcRefMap.Add "check_winner_message5{machine.won_game == 1}", "Glf_245"
Function Glf_246(args)
  On Error Resume Next
      Glf_246 = glf_machine_vars("won_game").GetValue() = 1
  If Err Then Glf_246 = False
End Function
glf_funcRefMap.Add "check_winner_message6{machine.won_game == 1}", "Glf_246"
Function Glf_247(args)
  Glf_247 = 93
End Function
glf_funcRefMap.Add "93", "Glf_247"
Function Glf_248(args)
  Glf_248 = "YOU"
End Function
glf_funcRefMap.Add """YOU""", "Glf_248"
Function Glf_249(args)
  Glf_249 = "FAILED"
End Function
glf_funcRefMap.Add """FAILED""", "Glf_249"
Function Glf_250(args)
  Glf_250 = "WE ALL"
End Function
glf_funcRefMap.Add """WE ALL""", "Glf_250"
Function Glf_251(args)
  Glf_251 = "DIED"
End Function
glf_funcRefMap.Add """DIED""", "Glf_251"
Function Glf_252(args)
  Glf_252 = "PLAY"
End Function
glf_funcRefMap.Add """PLAY""", "Glf_252"
Function Glf_253(args)
  Glf_253 = "BETTER"
End Function
glf_funcRefMap.Add """BETTER""", "Glf_253"
Function Glf_254(args)
  Glf_254 = "NEXT"
End Function
glf_funcRefMap.Add """NEXT""", "Glf_254"
Function Glf_255(args)
  Glf_255 = "TIME"
End Function
glf_funcRefMap.Add """TIME""", "Glf_255"
Function Glf_256(args)
  Glf_256 = "EARTH"
End Function
glf_funcRefMap.Add """EARTH""", "Glf_256"
Function Glf_257(args)
  Glf_257 = "THANKS"
End Function
glf_funcRefMap.Add """THANKS""", "Glf_257"
Function Glf_258(args)
  Glf_258 = "TO YOU"
End Function
glf_funcRefMap.Add """TO YOU""", "Glf_258"
Function Glf_259(args)
  Glf_259 = "COME ON "
End Function
glf_funcRefMap.Add """COME ON """, "Glf_259"
Function Glf_260(args)
  Glf_260 = "HOW HARD"
End Function
glf_funcRefMap.Add """HOW HARD""", "Glf_260"
Function Glf_261(args)
  Glf_261 = "IS IT"
End Function
glf_funcRefMap.Add """IS IT""", "Glf_261"
Function Glf_262(args)
  Glf_262 = "REALLY"
End Function
glf_funcRefMap.Add """REALLY""", "Glf_262"
Function Glf_263(args)
  Glf_263 = "HIT THE"
End Function
glf_funcRefMap.Add """HIT THE""", "Glf_263"
Function Glf_264(args)
  Glf_264 = "METEORS"
End Function
glf_funcRefMap.Add """METEORS""", "Glf_264"
Function Glf_265(args)
  Glf_265 = "NEXTTIME"
End Function
glf_funcRefMap.Add """NEXTTIME""", "Glf_265"
Function Glf_266(args)
  Glf_266 = "PLEASE"
End Function
glf_funcRefMap.Add """PLEASE""", "Glf_266"
Function Glf_267(args)
  Glf_267 = "OH WOW "
End Function
glf_funcRefMap.Add """OH WOW """, "Glf_267"
Function Glf_268(args)
  Glf_268 = "YOU LOST"
End Function
glf_funcRefMap.Add """YOU LOST""", "Glf_268"
Function Glf_269(args)
  Glf_269 = "AGAIN "
End Function
glf_funcRefMap.Add """AGAIN """, "Glf_269"
Function Glf_270(args)
  Glf_270 = "SURPRISE"
End Function
glf_funcRefMap.Add """SURPRISE""", "Glf_270"
Function Glf_271(args)
  Glf_271 = "ITS EASY"
End Function
glf_funcRefMap.Add """ITS EASY""", "Glf_271"
Function Glf_272(args)
  Glf_272 = "YOU JUST"
End Function
glf_funcRefMap.Add """YOU JUST""", "Glf_272"
Function Glf_273(args)
  Glf_273 = "NEED TO "
End Function
glf_funcRefMap.Add """NEED TO """, "Glf_273"
Function Glf_274(args)
  Glf_274 = "NOT SUCK"
End Function
glf_funcRefMap.Add """NOT SUCK""", "Glf_274"
Function Glf_275(args)
  Glf_275 = "PRACTICE"
End Function
glf_funcRefMap.Add """PRACTICE""", "Glf_275"
Function Glf_276(args)
  Glf_276 = "DAMN"
End Function
glf_funcRefMap.Add """DAMN""", "Glf_276"
Function Glf_277(args)
  Glf_277 = "LUCKILY"
End Function
glf_funcRefMap.Add """LUCKILY""", "Glf_277"
Function Glf_278(args)
  Glf_278 = "THIS IS "
End Function
glf_funcRefMap.Add """THIS IS """, "Glf_278"
Function Glf_279(args)
  Glf_279 = "NOT REAL"
End Function
glf_funcRefMap.Add """NOT REAL""", "Glf_279"
Function Glf_280(args)
  Glf_280 = "GAMEOVER"
End Function
glf_funcRefMap.Add """GAMEOVER""", "Glf_280"
Function Glf_281(args)
  Glf_281 = "MAN"
End Function
glf_funcRefMap.Add """MAN""", "Glf_281"
Function Glf_282(args)
  Glf_282 = "WE ALL "
End Function
glf_funcRefMap.Add """WE ALL """, "Glf_282"
Function Glf_283(args)
  Glf_283 = "DEAD NOW"
End Function
glf_funcRefMap.Add """DEAD NOW""", "Glf_283"
Function Glf_284(args)
  Glf_284 = "MORE"
End Function
glf_funcRefMap.Add """MORE""", "Glf_284"
Function Glf_285(args)
  Glf_285 = "BEER"
End Function
glf_funcRefMap.Add """BEER""", "Glf_285"
Function Glf_286(args)
  Glf_286 = "MIGHT"
End Function
glf_funcRefMap.Add """MIGHT""", "Glf_286"
Function Glf_287(args)
  Glf_287 = "HELP"
End Function
glf_funcRefMap.Add """HELP""", "Glf_287"
Function Glf_288(args)
  Glf_288 = "UNLUCKY"
End Function
glf_funcRefMap.Add """UNLUCKY""", "Glf_288"
Function Glf_289(args)
  Glf_289 = "SHOT"
End Function
glf_funcRefMap.Add """SHOT""", "Glf_289"
Function Glf_290(args)
  Glf_290 = "EARTH-"
End Function
glf_funcRefMap.Add """EARTH-""", "Glf_290"
Function Glf_291(args)
  Glf_291 = "LING"
End Function
glf_funcRefMap.Add """LING""", "Glf_291"
Function Glf_292(args)
  Glf_292 = "THE"
End Function
glf_funcRefMap.Add """THE""", "Glf_292"
Function Glf_293(args)
  Glf_293 = "DINOS"
End Function
glf_funcRefMap.Add """DINOS""", "Glf_293"
Function Glf_294(args)
  Glf_294 = "LASTED"
End Function
glf_funcRefMap.Add """LASTED""", "Glf_294"
Function Glf_295(args)
  Glf_295 = "LONGER"
End Function
glf_funcRefMap.Add """LONGER""", "Glf_295"
Function Glf_296(args)
  Glf_296 = "ASTEROID"
End Function
glf_funcRefMap.Add """ASTEROID""", "Glf_296"
Function Glf_297(args)
  Glf_297 = "+ ONE"
End Function
glf_funcRefMap.Add """+ ONE""", "Glf_297"
Function Glf_298(args)
  Glf_298 = "HUMANS"
End Function
glf_funcRefMap.Add """HUMANS""", "Glf_298"
Function Glf_299(args)
  Glf_299 = "ZERO"
End Function
glf_funcRefMap.Add """ZERO""", "Glf_299"
Function Glf_300(args)
  Glf_300 = "THE ODDS"
End Function
glf_funcRefMap.Add """THE ODDS""", "Glf_300"
Function Glf_301(args)
  Glf_301 = "WERE"
End Function
glf_funcRefMap.Add """WERE""", "Glf_301"
Function Glf_302(args)
  Glf_302 = "3720"
End Function
glf_funcRefMap.Add """3720""", "Glf_302"
Function Glf_303(args)
  Glf_303 = "TO ONE"
End Function
glf_funcRefMap.Add """TO ONE""", "Glf_303"
Function Glf_304(args)
  Glf_304 = "ONE"
End Function
glf_funcRefMap.Add """ONE""", "Glf_304"
Function Glf_305(args)
  Glf_305 = "GIANT"
End Function
glf_funcRefMap.Add """GIANT""", "Glf_305"
Function Glf_306(args)
  Glf_306 = "WEEP FOR"
End Function
glf_funcRefMap.Add """WEEP FOR""", "Glf_306"
Function Glf_307(args)
  Glf_307 = "MANKIND"
End Function
glf_funcRefMap.Add """MANKIND""", "Glf_307"
Function Glf_308(args)
  Glf_308 = "THE DARK"
End Function
glf_funcRefMap.Add """THE DARK""", "Glf_308"
Function Glf_309(args)
  Glf_309 = "CHAOS"
End Function
glf_funcRefMap.Add """CHAOS""", "Glf_309"
Function Glf_310(args)
  Glf_310 = "GOD IS"
End Function
glf_funcRefMap.Add """GOD IS""", "Glf_310"
Function Glf_311(args)
  Glf_311 = "HAPPY"
End Function
glf_funcRefMap.Add """HAPPY""", "Glf_311"
Function Glf_312(args)
  Glf_312 = "TRY JUST"
End Function
glf_funcRefMap.Add """TRY JUST""", "Glf_312"
Function Glf_313(args)
  Glf_313 = "YOU ARE"
End Function
glf_funcRefMap.Add """YOU ARE""", "Glf_313"
Function Glf_314(args)
  Glf_314 = "LUCKY"
End Function
glf_funcRefMap.Add """LUCKY""", "Glf_314"
Function Glf_315(args)
  Glf_315 = "ITS ON "
End Function
glf_funcRefMap.Add """ITS ON """, "Glf_315"
Function Glf_316(args)
  Glf_316 = "FREEPLAY"
End Function
glf_funcRefMap.Add """FREEPLAY""", "Glf_316"
Function Glf_317(args)
  Glf_317 = "KEEP"
End Function
glf_funcRefMap.Add """KEEP""", "Glf_317"
Function Glf_318(args)
  Glf_318 = "CALM"
End Function
glf_funcRefMap.Add """CALM""", "Glf_318"
Function Glf_319(args)
  Glf_319 = "PINBALL"
End Function
glf_funcRefMap.Add """PINBALL""", "Glf_319"
Function Glf_320(args)
  Glf_320 = "A VILE"
End Function
glf_funcRefMap.Add """A VILE""", "Glf_320"
Function Glf_321(args)
  Glf_321 = "DARK"
End Function
glf_funcRefMap.Add """DARK""", "Glf_321"
Function Glf_322(args)
  Glf_322 = "LOOMED"
End Function
glf_funcRefMap.Add """LOOMED""", "Glf_322"
Function Glf_323(args)
  Glf_323 = "COSMIC"
End Function
glf_funcRefMap.Add """COSMIC""", "Glf_323"
Function Glf_324(args)
  Glf_324 = "IMPACTS"
End Function
glf_funcRefMap.Add """IMPACTS""", "Glf_324"
Function Glf_325(args)
  Glf_325 = "TORE AND"
End Function
glf_funcRefMap.Add """TORE AND""", "Glf_325"
Function Glf_326(args)
  Glf_326 = "BOOMED"
End Function
glf_funcRefMap.Add """BOOMED""", "Glf_326"
Function Glf_327(args)
  Glf_327 = "TURMOIL "
End Function
glf_funcRefMap.Add """TURMOIL """, "Glf_327"
Function Glf_328(args)
  Glf_328 = "AND FEAR"
End Function
glf_funcRefMap.Add """AND FEAR""", "Glf_328"
Function Glf_329(args)
  Glf_329 = "HUMANITY"
End Function
glf_funcRefMap.Add """HUMANITY""", "Glf_329"
Function Glf_330(args)
  Glf_330 = "DOOMED"
End Function
glf_funcRefMap.Add """DOOMED""", "Glf_330"
Function Glf_331(args)
  Glf_331 = "A HERO "
End Function
glf_funcRefMap.Add """A HERO """, "Glf_331"
Function Glf_332(args)
  Glf_332 = "ASCENDED"
End Function
glf_funcRefMap.Add """ASCENDED""", "Glf_332"
Function Glf_333(args)
  Glf_333 = "INTO THE"
End Function
glf_funcRefMap.Add """INTO THE""", "Glf_333"
Function Glf_334(args)
  Glf_334 = "NIGHT"
End Function
glf_funcRefMap.Add """NIGHT""", "Glf_334"
Function Glf_335(args)
  Glf_335 = "A FIERY"
End Function
glf_funcRefMap.Add """A FIERY""", "Glf_335"
Function Glf_336(args)
  Glf_336 = "BATTLE"
End Function
glf_funcRefMap.Add """BATTLE""", "Glf_336"
Function Glf_337(args)
  Glf_337 = "WON THE"
End Function
glf_funcRefMap.Add """WON THE""", "Glf_337"
Function Glf_338(args)
  Glf_338 = "FIGHT"
End Function
glf_funcRefMap.Add """FIGHT""", "Glf_338"
Function Glf_339(args)
  Glf_339 = "SPARKS"
End Function
glf_funcRefMap.Add """SPARKS""", "Glf_339"
Function Glf_340(args)
  Glf_340 = "OF HOPE"
End Function
glf_funcRefMap.Add """OF HOPE""", "Glf_340"
Function Glf_341(args)
  Glf_341 = "FLICKER "
End Function
glf_funcRefMap.Add """FLICKER """, "Glf_341"
Function Glf_342(args)
  Glf_342 = "OF LIGHT"
End Function
glf_funcRefMap.Add """OF LIGHT""", "Glf_342"
Function Glf_343(args)
  Glf_343 = 2
End Function
glf_funcRefMap.Add "2", "Glf_343"
Function Glf_344(args)
  Glf_344 = 5
End Function
glf_funcRefMap.Add "5", "Glf_344"
Function Glf_345(args)
  Glf_345 = 6
End Function
glf_funcRefMap.Add "6", "Glf_345"
Function Glf_346(args)
  Glf_346 = 7
End Function
glf_funcRefMap.Add "7", "Glf_346"
Function Glf_347(args)
  Glf_347 = 8
End Function
glf_funcRefMap.Add "8", "Glf_347"
Function Glf_348(args)
  Glf_348 = 9
End Function
glf_funcRefMap.Add "9", "Glf_348"
Function Glf_349(args)
  Glf_349 = 10
End Function
glf_funcRefMap.Add "10", "Glf_349"
Function Glf_350(args)
  Glf_350 = 11
End Function
glf_funcRefMap.Add "11", "Glf_350"
Function Glf_351(args)
  Glf_351 = 12
End Function
glf_funcRefMap.Add "12", "Glf_351"
Function Glf_352(args)
  Glf_352 = 13
End Function
glf_funcRefMap.Add "13", "Glf_352"
Function Glf_353(args)
  Glf_353 = 14
End Function
glf_funcRefMap.Add "14", "Glf_353"
Function Glf_354(args)
  Glf_354 = 15
End Function
glf_funcRefMap.Add "15", "Glf_354"
Function Glf_355(args)
  Glf_355 = 17
End Function
glf_funcRefMap.Add "17", "Glf_355"
Function Glf_356(args)
  Glf_356 = 18
End Function
glf_funcRefMap.Add "18", "Glf_356"
Function Glf_357(args)
  Glf_357 = 19
End Function
glf_funcRefMap.Add "19", "Glf_357"
Function Glf_358(args)
  Glf_358 = 20
End Function
glf_funcRefMap.Add "20", "Glf_358"
Function Glf_359(args)
  On Error Resume Next
      Glf_359 = GetPlayerState("score") > -1000000
  If Err Then Glf_359 = False
End Function
glf_funcRefMap.Add "score_m100000{current_player.score > -1000000}", "Glf_359"
Function Glf_360(args)
  On Error Resume Next
      Glf_360 = GetPlayerState("score") < -1000000
  If Err Then Glf_360 = False
End Function
glf_funcRefMap.Add "apply_score_m100000.1{current_player.score < -1000000}", "Glf_360"
Function Glf_361(args)
  Glf_361 = -1000000
End Function
glf_funcRefMap.Add "-1000000", "Glf_361"
Function Glf_362(args)
  Glf_362 = 930 * GetPlayerState("scoring_multiplier") * GetPlayerState("spin_multiplier")
End Function
glf_funcRefMap.Add "930 * current_player.scoring_multiplier * current_player.spin_multiplier", "Glf_362"
Function Glf_363(args)
  Glf_363 = 1000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "1000 * current_player.scoring_multiplier", "Glf_363"
Function Glf_364(args)
  Glf_364 = 1000 * GetPlayerState("scoring_multiplier") * GetPlayerState("pop_multiplier")
End Function
glf_funcRefMap.Add "1000 * current_player.scoring_multiplier * current_player.pop_multiplier", "Glf_364"
Function Glf_365(args)
  Glf_365 = 2000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "2000 * current_player.scoring_multiplier", "Glf_365"
Function Glf_366(args)
  Glf_366 = 3000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "3000 * current_player.scoring_multiplier", "Glf_366"
Function Glf_367(args)
  Glf_367 = 4000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "4000 * current_player.scoring_multiplier", "Glf_367"
Function Glf_368(args)
  Glf_368 = 5000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "5000 * current_player.scoring_multiplier", "Glf_368"
Function Glf_369(args)
  Glf_369 = 8000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "8000 * current_player.scoring_multiplier", "Glf_369"
Function Glf_370(args)
  Glf_370 = 9000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "9000 * current_player.scoring_multiplier", "Glf_370"
Function Glf_371(args)
  Glf_371 = 10000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "10000 * current_player.scoring_multiplier", "Glf_371"
Function Glf_372(args)
  Glf_372 = 15000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "15000 * current_player.scoring_multiplier", "Glf_372"
Function Glf_373(args)
  Glf_373 = 20000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "20000 * current_player.scoring_multiplier", "Glf_373"
Function Glf_374(args)
  Glf_374 = 25000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "25000 * current_player.scoring_multiplier", "Glf_374"
Function Glf_375(args)
  Glf_375 = 30000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "30000 * current_player.scoring_multiplier", "Glf_375"
Function Glf_376(args)
  Glf_376 = 40000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "40000 * current_player.scoring_multiplier", "Glf_376"
Function Glf_377(args)
  Glf_377 = 50000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "50000 * current_player.scoring_multiplier", "Glf_377"
Function Glf_378(args)
  Glf_378 = 60000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "60000 * current_player.scoring_multiplier", "Glf_378"
Function Glf_379(args)
  Glf_379 = 70000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "70000 * current_player.scoring_multiplier", "Glf_379"
Function Glf_380(args)
  Glf_380 = 80000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "80000 * current_player.scoring_multiplier", "Glf_380"
Function Glf_381(args)
  Glf_381 = 90000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "90000 * current_player.scoring_multiplier", "Glf_381"
Function Glf_382(args)
  Glf_382 = 100000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "100000 * current_player.scoring_multiplier", "Glf_382"
Function Glf_383(args)
  Glf_383 = -100000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "-100000 * current_player.scoring_multiplier", "Glf_383"
Function Glf_384(args)
  Glf_384 = 150000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "150000 * current_player.scoring_multiplier", "Glf_384"
Function Glf_385(args)
  Glf_385 = 200000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "200000 * current_player.scoring_multiplier", "Glf_385"
Function Glf_386(args)
  Glf_386 = 250000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "250000 * current_player.scoring_multiplier", "Glf_386"
Function Glf_387(args)
  Glf_387 = 300000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "300000 * current_player.scoring_multiplier", "Glf_387"
Function Glf_388(args)
  Glf_388 = 400000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "400000 * current_player.scoring_multiplier", "Glf_388"
Function Glf_389(args)
  Glf_389 = 500000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "500000 * current_player.scoring_multiplier", "Glf_389"
Function Glf_390(args)
  Glf_390 = 600000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "600000 * current_player.scoring_multiplier", "Glf_390"
Function Glf_391(args)
  Glf_391 = 700000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "700000 * current_player.scoring_multiplier", "Glf_391"
Function Glf_392(args)
  Glf_392 = 750000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "750000 * current_player.scoring_multiplier", "Glf_392"
Function Glf_393(args)
  Glf_393 = 800000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "800000 * current_player.scoring_multiplier", "Glf_393"
Function Glf_394(args)
  Glf_394 = 900000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "900000 * current_player.scoring_multiplier", "Glf_394"
Function Glf_395(args)
  Glf_395 = 1000000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "1000000 * current_player.scoring_multiplier", "Glf_395"
Function Glf_396(args)
  Glf_396 = 1100000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "1100000 * current_player.scoring_multiplier", "Glf_396"
Function Glf_397(args)
  Glf_397 = 1200000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "1200000 * current_player.scoring_multiplier", "Glf_397"
Function Glf_398(args)
  Glf_398 = 1300000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "1300000 * current_player.scoring_multiplier", "Glf_398"
Function Glf_399(args)
  Glf_399 = 1400000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "1400000 * current_player.scoring_multiplier", "Glf_399"
Function Glf_400(args)
  Glf_400 = 1500000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "1500000 * current_player.scoring_multiplier", "Glf_400"
Function Glf_401(args)
  Glf_401 = 1600000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "1600000 * current_player.scoring_multiplier", "Glf_401"
Function Glf_402(args)
  Glf_402 = 1700000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "1700000 * current_player.scoring_multiplier", "Glf_402"
Function Glf_403(args)
  Glf_403 = 1800000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "1800000 * current_player.scoring_multiplier", "Glf_403"
Function Glf_404(args)
  Glf_404 = 1900000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "1900000 * current_player.scoring_multiplier", "Glf_404"
Function Glf_405(args)
  Glf_405 = 2000000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "2000000 * current_player.scoring_multiplier", "Glf_405"
Function Glf_406(args)
  Glf_406 = 3000000 * GetPlayerState("scoring_multiplier")
End Function
glf_funcRefMap.Add "3000000 * current_player.scoring_multiplier", "Glf_406"
Function Glf_407(args)
  On Error Resume Next
      Glf_407 = GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_407 = False
End Function
glf_funcRefMap.Add "s_right_magna_key_active{current_player.hs_input_ready == 1}", "Glf_407"
Function Glf_408(args)
  On Error Resume Next
      Glf_408 = GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_408 = False
End Function
glf_funcRefMap.Add "s_plunger_key_active{current_player.hs_input_ready == 1}", "Glf_408"
Function Glf_409(args)
  On Error Resume Next
      Glf_409 = GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_409 = False
End Function
glf_funcRefMap.Add "s_lockbar_key_active{current_player.hs_input_ready == 1}", "Glf_409"
Function Glf_410(args)
  On Error Resume Next
      Glf_410 = GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_410 = False
End Function
glf_funcRefMap.Add "s_start_active{current_player.hs_input_ready == 1}", "Glf_410"
Function Glf_411(args)
  On Error Resume Next
      Glf_411 = glf_machine_vars("high_score_initials_chars").GetValue() = 3
  If Err Then Glf_411 = False
End Function
glf_funcRefMap.Add "text_inputted.1{machine.high_score_initials_chars == 3}", "Glf_411"
Function Glf_414(args)
  On Error Resume Next
      Glf_414 = glf_machine_vars("high_score_initials_chars").GetValue() < 3
  If Err Then Glf_414 = False
End Function
glf_funcRefMap.Add "text_inputted{machine.high_score_initials_chars < 3}", "Glf_414"
Function Glf_415(args)
  On Error Resume Next
      Glf_415 = GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_415 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.2{current_player.hs_input_ready == 1}", "Glf_415"
Function Glf_416(args)
  On Error Resume Next
      Glf_416 = GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_416 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.2{current_player.hs_input_ready == 1}", "Glf_416"
Function Glf_417(args)
  On Error Resume Next
      Glf_417 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 0
  If Err Then Glf_417 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 0}", "Glf_417"
Function Glf_418(args)
  Glf_418 = glf_machine_vars("high_score_initials").GetValue() & "A"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""A""", "Glf_418"
Function Glf_419(args)
  On Error Resume Next
      Glf_419 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 1
  If Err Then Glf_419 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 1}", "Glf_419"
Function Glf_420(args)
  Glf_420 = glf_machine_vars("high_score_initials").GetValue() & "B"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""B""", "Glf_420"
Function Glf_421(args)
  On Error Resume Next
      Glf_421 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 2
  If Err Then Glf_421 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 2}", "Glf_421"
Function Glf_422(args)
  Glf_422 = glf_machine_vars("high_score_initials").GetValue() & "C"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""C""", "Glf_422"
Function Glf_423(args)
  On Error Resume Next
      Glf_423 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 3
  If Err Then Glf_423 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 3}", "Glf_423"
Function Glf_424(args)
  Glf_424 = glf_machine_vars("high_score_initials").GetValue() & "D"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""D""", "Glf_424"
Function Glf_425(args)
  On Error Resume Next
      Glf_425 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 4
  If Err Then Glf_425 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 4}", "Glf_425"
Function Glf_426(args)
  Glf_426 = glf_machine_vars("high_score_initials").GetValue() & "E"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""E""", "Glf_426"
Function Glf_427(args)
  On Error Resume Next
      Glf_427 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 5
  If Err Then Glf_427 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 5}", "Glf_427"
Function Glf_428(args)
  Glf_428 = glf_machine_vars("high_score_initials").GetValue() & "F"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""F""", "Glf_428"
Function Glf_429(args)
  On Error Resume Next
      Glf_429 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 6
  If Err Then Glf_429 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 6}", "Glf_429"
Function Glf_430(args)
  Glf_430 = glf_machine_vars("high_score_initials").GetValue() & "G"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""G""", "Glf_430"
Function Glf_431(args)
  On Error Resume Next
      Glf_431 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 7
  If Err Then Glf_431 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 7}", "Glf_431"
Function Glf_432(args)
  Glf_432 = glf_machine_vars("high_score_initials").GetValue() & "H"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""H""", "Glf_432"
Function Glf_433(args)
  On Error Resume Next
      Glf_433 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 8
  If Err Then Glf_433 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 8}", "Glf_433"
Function Glf_434(args)
  Glf_434 = glf_machine_vars("high_score_initials").GetValue() & "I"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""I""", "Glf_434"
Function Glf_435(args)
  On Error Resume Next
      Glf_435 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 9
  If Err Then Glf_435 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 9}", "Glf_435"
Function Glf_436(args)
  Glf_436 = glf_machine_vars("high_score_initials").GetValue() & "J"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""J""", "Glf_436"
Function Glf_437(args)
  On Error Resume Next
      Glf_437 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 10
  If Err Then Glf_437 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 10}", "Glf_437"
Function Glf_438(args)
  Glf_438 = glf_machine_vars("high_score_initials").GetValue() & "K"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""K""", "Glf_438"
Function Glf_439(args)
  On Error Resume Next
      Glf_439 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 11
  If Err Then Glf_439 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 11}", "Glf_439"
Function Glf_440(args)
  Glf_440 = glf_machine_vars("high_score_initials").GetValue() & "L"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""L""", "Glf_440"
Function Glf_441(args)
  On Error Resume Next
      Glf_441 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 12
  If Err Then Glf_441 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 12}", "Glf_441"
Function Glf_442(args)
  Glf_442 = glf_machine_vars("high_score_initials").GetValue() & "M"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""M""", "Glf_442"
Function Glf_443(args)
  On Error Resume Next
      Glf_443 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 13
  If Err Then Glf_443 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 13}", "Glf_443"
Function Glf_444(args)
  Glf_444 = glf_machine_vars("high_score_initials").GetValue() & "N"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""N""", "Glf_444"
Function Glf_445(args)
  On Error Resume Next
      Glf_445 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 14
  If Err Then Glf_445 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 14}", "Glf_445"
Function Glf_446(args)
  Glf_446 = glf_machine_vars("high_score_initials").GetValue() & "O"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""O""", "Glf_446"
Function Glf_447(args)
  On Error Resume Next
      Glf_447 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 15
  If Err Then Glf_447 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 15}", "Glf_447"
Function Glf_448(args)
  Glf_448 = glf_machine_vars("high_score_initials").GetValue() & "P"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""P""", "Glf_448"
Function Glf_449(args)
  On Error Resume Next
      Glf_449 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 16
  If Err Then Glf_449 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 16}", "Glf_449"
Function Glf_450(args)
  Glf_450 = glf_machine_vars("high_score_initials").GetValue() & "Q"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""Q""", "Glf_450"
Function Glf_451(args)
  On Error Resume Next
      Glf_451 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 17
  If Err Then Glf_451 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 17}", "Glf_451"
Function Glf_452(args)
  Glf_452 = glf_machine_vars("high_score_initials").GetValue() & "R"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""R""", "Glf_452"
Function Glf_453(args)
  On Error Resume Next
      Glf_453 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 18
  If Err Then Glf_453 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 18}", "Glf_453"
Function Glf_454(args)
  Glf_454 = glf_machine_vars("high_score_initials").GetValue() & "S"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""S""", "Glf_454"
Function Glf_455(args)
  On Error Resume Next
      Glf_455 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 19
  If Err Then Glf_455 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 19}", "Glf_455"
Function Glf_456(args)
  Glf_456 = glf_machine_vars("high_score_initials").GetValue() & "T"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""T""", "Glf_456"
Function Glf_457(args)
  On Error Resume Next
      Glf_457 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 20
  If Err Then Glf_457 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 20}", "Glf_457"
Function Glf_458(args)
  Glf_458 = glf_machine_vars("high_score_initials").GetValue() & "U"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""U""", "Glf_458"
Function Glf_459(args)
  On Error Resume Next
      Glf_459 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 21
  If Err Then Glf_459 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 21}", "Glf_459"
Function Glf_460(args)
  Glf_460 = glf_machine_vars("high_score_initials").GetValue() & "V"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""V""", "Glf_460"
Function Glf_461(args)
  On Error Resume Next
      Glf_461 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 22
  If Err Then Glf_461 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 22}", "Glf_461"
Function Glf_462(args)
  Glf_462 = glf_machine_vars("high_score_initials").GetValue() & "W"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""W""", "Glf_462"
Function Glf_463(args)
  On Error Resume Next
      Glf_463 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 23
  If Err Then Glf_463 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 23}", "Glf_463"
Function Glf_464(args)
  Glf_464 = glf_machine_vars("high_score_initials").GetValue() & "X"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""X""", "Glf_464"
Function Glf_465(args)
  On Error Resume Next
      Glf_465 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 24
  If Err Then Glf_465 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 24}", "Glf_465"
Function Glf_466(args)
  Glf_466 = glf_machine_vars("high_score_initials").GetValue() & "Y"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""Y""", "Glf_466"
Function Glf_467(args)
  On Error Resume Next
      Glf_467 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 25
  If Err Then Glf_467 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 25}", "Glf_467"
Function Glf_468(args)
  Glf_468 = glf_machine_vars("high_score_initials").GetValue() & "Z"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""Z""", "Glf_468"
Function Glf_469(args)
  On Error Resume Next
      Glf_469 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 26
  If Err Then Glf_469 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 26}", "Glf_469"
Function Glf_470(args)
  Glf_470 = glf_machine_vars("high_score_initials").GetValue() & "0"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""0""", "Glf_470"
Function Glf_471(args)
  On Error Resume Next
      Glf_471 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 27
  If Err Then Glf_471 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 27}", "Glf_471"
Function Glf_472(args)
  Glf_472 = glf_machine_vars("high_score_initials").GetValue() & "1"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""1""", "Glf_472"
Function Glf_473(args)
  On Error Resume Next
      Glf_473 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 28
  If Err Then Glf_473 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 28}", "Glf_473"
Function Glf_474(args)
  Glf_474 = glf_machine_vars("high_score_initials").GetValue() & "2"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""2""", "Glf_474"
Function Glf_475(args)
  On Error Resume Next
      Glf_475 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 29
  If Err Then Glf_475 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 29}", "Glf_475"
Function Glf_476(args)
  Glf_476 = glf_machine_vars("high_score_initials").GetValue() & "3"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""3""", "Glf_476"
Function Glf_477(args)
  On Error Resume Next
      Glf_477 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 30
  If Err Then Glf_477 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 30}", "Glf_477"
Function Glf_478(args)
  Glf_478 = glf_machine_vars("high_score_initials").GetValue() & "4"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""4""", "Glf_478"
Function Glf_479(args)
  On Error Resume Next
      Glf_479 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 31
  If Err Then Glf_479 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 31}", "Glf_479"
Function Glf_480(args)
  Glf_480 = glf_machine_vars("high_score_initials").GetValue() & "5"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""5""", "Glf_480"
Function Glf_481(args)
  On Error Resume Next
      Glf_481 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 32
  If Err Then Glf_481 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 32}", "Glf_481"
Function Glf_482(args)
  Glf_482 = glf_machine_vars("high_score_initials").GetValue() & "6"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""6""", "Glf_482"
Function Glf_483(args)
  On Error Resume Next
      Glf_483 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 33
  If Err Then Glf_483 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 33}", "Glf_483"
Function Glf_484(args)
  Glf_484 = glf_machine_vars("high_score_initials").GetValue() & "7"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""7""", "Glf_484"
Function Glf_485(args)
  On Error Resume Next
      Glf_485 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 34
  If Err Then Glf_485 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 34}", "Glf_485"
Function Glf_486(args)
  Glf_486 = glf_machine_vars("high_score_initials").GetValue() & "8"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""8""", "Glf_486"
Function Glf_487(args)
  On Error Resume Next
      Glf_487 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 35
  If Err Then Glf_487 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 35}", "Glf_487"
Function Glf_488(args)
  Glf_488 = glf_machine_vars("high_score_initials").GetValue() & "9"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""9""", "Glf_488"
Function Glf_489(args)
  On Error Resume Next
      Glf_489 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 36
  If Err Then Glf_489 = False
End Function
glf_funcRefMap.Add "text_inputted.3{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 36}", "Glf_489"
Function Glf_490(args)
  Glf_490 = glf_machine_vars("high_score_initials").GetValue() & "_"
End Function
glf_funcRefMap.Add "machine.high_score_initials & ""_""", "Glf_490"
Function Glf_491(args)
  Glf_491 = 60
End Function
glf_funcRefMap.Add "60", "Glf_491"
Function Glf_492(args)
  Glf_492 = Glf_FormatValue(glf_timers("high_score_timeout").GetValue("ticks"), "0>2")
End Function
glf_funcRefMap.Add "{devices.timers.high_score_timeout.ticks:0>2}", "Glf_492"
Function Glf_493(args)
  On Error Resume Next
      Glf_493 = glf_dispatch_current_kwargs("player_num")=1
  If Err Then Glf_493 = False
End Function
glf_funcRefMap.Add "high_score_enter_initials{kwargs.player_num==1}", "Glf_493"
Function Glf_494(args)
  Glf_494 = "P1 "
End Function
glf_funcRefMap.Add """P1 """, "Glf_494"
Function Glf_495(args)
  On Error Resume Next
      Glf_495 = glf_dispatch_current_kwargs("player_num")=2
  If Err Then Glf_495 = False
End Function
glf_funcRefMap.Add "high_score_enter_initials{kwargs.player_num==2}", "Glf_495"
Function Glf_496(args)
  Glf_496 = "P2 "
End Function
glf_funcRefMap.Add """P2 """, "Glf_496"
Function Glf_497(args)
  On Error Resume Next
      Glf_497 = glf_dispatch_current_kwargs("player_num")=3
  If Err Then Glf_497 = False
End Function
glf_funcRefMap.Add "high_score_enter_initials{kwargs.player_num==3}", "Glf_497"
Function Glf_498(args)
  Glf_498 = "P3 "
End Function
glf_funcRefMap.Add """P3 """, "Glf_498"
Function Glf_499(args)
  On Error Resume Next
      Glf_499 = glf_dispatch_current_kwargs("player_num")=4
  If Err Then Glf_499 = False
End Function
glf_funcRefMap.Add "high_score_enter_initials{kwargs.player_num==4}", "Glf_499"
Function Glf_500(args)
  Glf_500 = "P4 "
End Function
glf_funcRefMap.Add """P4 """, "Glf_500"
Function Glf_501(args)
  Glf_501 = "INITIALS"
End Function
glf_funcRefMap.Add """INITIALS""", "Glf_501"
Function Glf_502(args)
  Glf_502 = "A"
End Function
glf_funcRefMap.Add """A""", "Glf_502"
Function Glf_503(args)
  On Error Resume Next
      Glf_503 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 0 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_503 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 0 && current_player.hs_input_ready == 1}", "Glf_503"
Function Glf_504(args)
  On Error Resume Next
      Glf_504 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 0 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_504 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 0 && current_player.hs_input_ready == 1}", "Glf_504"
Function Glf_505(args)
  On Error Resume Next
      Glf_505 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 1 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_505 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 1 && current_player.hs_input_ready == 1}", "Glf_505"
Function Glf_506(args)
  On Error Resume Next
      Glf_506 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 1 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_506 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 1 && current_player.hs_input_ready == 1}", "Glf_506"
Function Glf_507(args)
  On Error Resume Next
      Glf_507 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 2 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_507 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 2 && current_player.hs_input_ready == 1}", "Glf_507"
Function Glf_508(args)
  On Error Resume Next
      Glf_508 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 2 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_508 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 2 && current_player.hs_input_ready == 1}", "Glf_508"
Function Glf_509(args)
  On Error Resume Next
      Glf_509 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 3 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_509 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 3 && current_player.hs_input_ready == 1}", "Glf_509"
Function Glf_510(args)
  On Error Resume Next
      Glf_510 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 3 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_510 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 3 && current_player.hs_input_ready == 1}", "Glf_510"
Function Glf_511(args)
  On Error Resume Next
      Glf_511 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 4 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_511 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 4 && current_player.hs_input_ready == 1}", "Glf_511"
Function Glf_512(args)
  On Error Resume Next
      Glf_512 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 4 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_512 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 4 && current_player.hs_input_ready == 1}", "Glf_512"
Function Glf_513(args)
  On Error Resume Next
      Glf_513 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 5 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_513 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 5 && current_player.hs_input_ready == 1}", "Glf_513"
Function Glf_514(args)
  On Error Resume Next
      Glf_514 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 5 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_514 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 5 && current_player.hs_input_ready == 1}", "Glf_514"
Function Glf_515(args)
  On Error Resume Next
      Glf_515 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 6 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_515 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 6 && current_player.hs_input_ready == 1}", "Glf_515"
Function Glf_516(args)
  On Error Resume Next
      Glf_516 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 6 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_516 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 6 && current_player.hs_input_ready == 1}", "Glf_516"
Function Glf_517(args)
  On Error Resume Next
      Glf_517 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 7 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_517 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 7 && current_player.hs_input_ready == 1}", "Glf_517"
Function Glf_518(args)
  On Error Resume Next
      Glf_518 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 7 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_518 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 7 && current_player.hs_input_ready == 1}", "Glf_518"
Function Glf_519(args)
  On Error Resume Next
      Glf_519 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 8 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_519 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 8 && current_player.hs_input_ready == 1}", "Glf_519"
Function Glf_520(args)
  On Error Resume Next
      Glf_520 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 8 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_520 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 8 && current_player.hs_input_ready == 1}", "Glf_520"
Function Glf_521(args)
  On Error Resume Next
      Glf_521 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 9 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_521 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 9 && current_player.hs_input_ready == 1}", "Glf_521"
Function Glf_522(args)
  On Error Resume Next
      Glf_522 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 9 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_522 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 9 && current_player.hs_input_ready == 1}", "Glf_522"
Function Glf_523(args)
  On Error Resume Next
      Glf_523 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 10 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_523 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 10 && current_player.hs_input_ready == 1}", "Glf_523"
Function Glf_524(args)
  On Error Resume Next
      Glf_524 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 10 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_524 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 10 && current_player.hs_input_ready == 1}", "Glf_524"
Function Glf_525(args)
  On Error Resume Next
      Glf_525 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 11 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_525 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 11 && current_player.hs_input_ready == 1}", "Glf_525"
Function Glf_526(args)
  On Error Resume Next
      Glf_526 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 11 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_526 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 11 && current_player.hs_input_ready == 1}", "Glf_526"
Function Glf_527(args)
  On Error Resume Next
      Glf_527 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 12 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_527 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 12 && current_player.hs_input_ready == 1}", "Glf_527"
Function Glf_528(args)
  On Error Resume Next
      Glf_528 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 12 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_528 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 12 && current_player.hs_input_ready == 1}", "Glf_528"
Function Glf_529(args)
  On Error Resume Next
      Glf_529 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 13 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_529 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 13 && current_player.hs_input_ready == 1}", "Glf_529"
Function Glf_530(args)
  On Error Resume Next
      Glf_530 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 13 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_530 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 13 && current_player.hs_input_ready == 1}", "Glf_530"
Function Glf_531(args)
  On Error Resume Next
      Glf_531 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 14 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_531 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 14 && current_player.hs_input_ready == 1}", "Glf_531"
Function Glf_532(args)
  On Error Resume Next
      Glf_532 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 14 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_532 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 14 && current_player.hs_input_ready == 1}", "Glf_532"
Function Glf_533(args)
  On Error Resume Next
      Glf_533 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 15 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_533 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 15 && current_player.hs_input_ready == 1}", "Glf_533"
Function Glf_534(args)
  On Error Resume Next
      Glf_534 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 15 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_534 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 15 && current_player.hs_input_ready == 1}", "Glf_534"
Function Glf_535(args)
  On Error Resume Next
      Glf_535 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 16 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_535 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 16 && current_player.hs_input_ready == 1}", "Glf_535"
Function Glf_536(args)
  On Error Resume Next
      Glf_536 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 16 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_536 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 16 && current_player.hs_input_ready == 1}", "Glf_536"
Function Glf_537(args)
  On Error Resume Next
      Glf_537 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 17 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_537 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 17 && current_player.hs_input_ready == 1}", "Glf_537"
Function Glf_538(args)
  On Error Resume Next
      Glf_538 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 17 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_538 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 17 && current_player.hs_input_ready == 1}", "Glf_538"
Function Glf_539(args)
  On Error Resume Next
      Glf_539 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 18 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_539 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 18 && current_player.hs_input_ready == 1}", "Glf_539"
Function Glf_540(args)
  On Error Resume Next
      Glf_540 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 18 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_540 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 18 && current_player.hs_input_ready == 1}", "Glf_540"
Function Glf_541(args)
  On Error Resume Next
      Glf_541 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 19 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_541 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 19 && current_player.hs_input_ready == 1}", "Glf_541"
Function Glf_542(args)
  On Error Resume Next
      Glf_542 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 19 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_542 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 19 && current_player.hs_input_ready == 1}", "Glf_542"
Function Glf_543(args)
  On Error Resume Next
      Glf_543 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 20 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_543 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 20 && current_player.hs_input_ready == 1}", "Glf_543"
Function Glf_544(args)
  On Error Resume Next
      Glf_544 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 20 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_544 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 20 && current_player.hs_input_ready == 1}", "Glf_544"
Function Glf_545(args)
  On Error Resume Next
      Glf_545 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 21 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_545 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 21 && current_player.hs_input_ready == 1}", "Glf_545"
Function Glf_546(args)
  On Error Resume Next
      Glf_546 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 21 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_546 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 21 && current_player.hs_input_ready == 1}", "Glf_546"
Function Glf_547(args)
  On Error Resume Next
      Glf_547 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 22 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_547 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 22 && current_player.hs_input_ready == 1}", "Glf_547"
Function Glf_548(args)
  On Error Resume Next
      Glf_548 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 22 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_548 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 22 && current_player.hs_input_ready == 1}", "Glf_548"
Function Glf_549(args)
  On Error Resume Next
      Glf_549 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 23 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_549 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 23 && current_player.hs_input_ready == 1}", "Glf_549"
Function Glf_550(args)
  On Error Resume Next
      Glf_550 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 23 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_550 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 23 && current_player.hs_input_ready == 1}", "Glf_550"
Function Glf_551(args)
  On Error Resume Next
      Glf_551 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 24 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_551 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 24 && current_player.hs_input_ready == 1}", "Glf_551"
Function Glf_552(args)
  On Error Resume Next
      Glf_552 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 24 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_552 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 24 && current_player.hs_input_ready == 1}", "Glf_552"
Function Glf_553(args)
  On Error Resume Next
      Glf_553 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 25 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_553 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 25 && current_player.hs_input_ready == 1}", "Glf_553"
Function Glf_554(args)
  On Error Resume Next
      Glf_554 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 25 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_554 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 25 && current_player.hs_input_ready == 1}", "Glf_554"
Function Glf_555(args)
  On Error Resume Next
      Glf_555 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 26 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_555 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 26 && current_player.hs_input_ready == 1}", "Glf_555"
Function Glf_556(args)
  On Error Resume Next
      Glf_556 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 26 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_556 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 26 && current_player.hs_input_ready == 1}", "Glf_556"
Function Glf_557(args)
  On Error Resume Next
      Glf_557 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 27 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_557 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 27 && current_player.hs_input_ready == 1}", "Glf_557"
Function Glf_558(args)
  On Error Resume Next
      Glf_558 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 27 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_558 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 27 && current_player.hs_input_ready == 1}", "Glf_558"
Function Glf_559(args)
  On Error Resume Next
      Glf_559 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 28 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_559 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 28 && current_player.hs_input_ready == 1}", "Glf_559"
Function Glf_560(args)
  On Error Resume Next
      Glf_560 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 28 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_560 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 28 && current_player.hs_input_ready == 1}", "Glf_560"
Function Glf_561(args)
  On Error Resume Next
      Glf_561 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 29 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_561 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 29 && current_player.hs_input_ready == 1}", "Glf_561"
Function Glf_562(args)
  On Error Resume Next
      Glf_562 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 29 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_562 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 29 && current_player.hs_input_ready == 1}", "Glf_562"
Function Glf_563(args)
  On Error Resume Next
      Glf_563 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 30 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_563 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 30 && current_player.hs_input_ready == 1}", "Glf_563"
Function Glf_564(args)
  On Error Resume Next
      Glf_564 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 30 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_564 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 30 && current_player.hs_input_ready == 1}", "Glf_564"
Function Glf_565(args)
  On Error Resume Next
      Glf_565 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 31 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_565 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 31 && current_player.hs_input_ready == 1}", "Glf_565"
Function Glf_566(args)
  On Error Resume Next
      Glf_566 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 31 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_566 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 31 && current_player.hs_input_ready == 1}", "Glf_566"
Function Glf_567(args)
  On Error Resume Next
      Glf_567 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 32 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_567 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 32 && current_player.hs_input_ready == 1}", "Glf_567"
Function Glf_568(args)
  On Error Resume Next
      Glf_568 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 32 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_568 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 32 && current_player.hs_input_ready == 1}", "Glf_568"
Function Glf_569(args)
  On Error Resume Next
      Glf_569 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 33 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_569 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 33 && current_player.hs_input_ready == 1}", "Glf_569"
Function Glf_570(args)
  On Error Resume Next
      Glf_570 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 33 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_570 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 33 && current_player.hs_input_ready == 1}", "Glf_570"
Function Glf_571(args)
  On Error Resume Next
      Glf_571 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 34 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_571 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 34 && current_player.hs_input_ready == 1}", "Glf_571"
Function Glf_572(args)
  On Error Resume Next
      Glf_572 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 34 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_572 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 34 && current_player.hs_input_ready == 1}", "Glf_572"
Function Glf_573(args)
  On Error Resume Next
      Glf_573 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 35 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_573 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 35 && current_player.hs_input_ready == 1}", "Glf_573"
Function Glf_574(args)
  On Error Resume Next
      Glf_574 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 35 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_574 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 35 && current_player.hs_input_ready == 1}", "Glf_574"
Function Glf_575(args)
  On Error Resume Next
      Glf_575 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 36 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_575 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 36 && current_player.hs_input_ready == 1}", "Glf_575"
Function Glf_576(args)
  On Error Resume Next
      Glf_576 = (((glf_machine_vars("high_score_initials_index").GetValue() Mod 37) + 37) Mod 37) = 36 And GetPlayerState("hs_input_ready") = 1
  If Err Then Glf_576 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active.1{(((machine.high_score_initials_index Mod 37) + 37) Mod 37) == 36 && current_player.hs_input_ready == 1}", "Glf_576"
Function Glf_577(args)
  On Error Resume Next
      Glf_577 = glf_machine_vars("high_score_initials_chars").GetValue()<3
  If Err Then Glf_577 = False
End Function
glf_funcRefMap.Add "text_inputted.1{machine.high_score_initials_chars<3}", "Glf_577"
Function Glf_578(args)
  On Error Resume Next
      Glf_578 = glf_dispatch_current_kwargs("position") = 1
  If Err Then Glf_578 = False
End Function
glf_funcRefMap.Add "high_score_award_display{kwargs.position == 1}", "Glf_578"
Function Glf_579(args)
  Glf_579 = "  GRAND "
End Function
glf_funcRefMap.Add """  GRAND """, "Glf_579"
Function Glf_580(args)
  Glf_580 = "CHAMPION"
End Function
glf_funcRefMap.Add """CHAMPION""", "Glf_580"
Function Glf_581(args)
  Glf_581 = "     " & glf_machine_vars("high_score_initials").GetValue()
End Function
glf_funcRefMap.Add """     "" & machine.high_score_initials", "Glf_581"
Function Glf_582(args)
  On Error Resume Next
      Glf_582 = glf_dispatch_current_kwargs("position") = 2
  If Err Then Glf_582 = False
End Function
glf_funcRefMap.Add "high_score_award_display{kwargs.position == 2}", "Glf_582"
Function Glf_583(args)
  Glf_583 = "   HIGH "
End Function
glf_funcRefMap.Add """   HIGH """, "Glf_583"
Function Glf_584(args)
  Glf_584 = "SCORE 1 "
End Function
glf_funcRefMap.Add """SCORE 1 """, "Glf_584"
Function Glf_585(args)
  On Error Resume Next
      Glf_585 = glf_dispatch_current_kwargs("position") = 3
  If Err Then Glf_585 = False
End Function
glf_funcRefMap.Add "high_score_award_display{kwargs.position == 3}", "Glf_585"
Function Glf_586(args)
  Glf_586 = "SCORE 2 "
End Function
glf_funcRefMap.Add """SCORE 2 """, "Glf_586"
Function Glf_587(args)
  On Error Resume Next
      Glf_587 = glf_dispatch_current_kwargs("position") = 4
  If Err Then Glf_587 = False
End Function
glf_funcRefMap.Add "high_score_award_display{kwargs.position == 4}", "Glf_587"
Function Glf_588(args)
  Glf_588 = "SCORE 3 "
End Function
glf_funcRefMap.Add """SCORE 3 """, "Glf_588"
Function Glf_589(args)
  On Error Resume Next
      Glf_589 = GetPlayerState("wizard_final_hit_count") > 0
  If Err Then Glf_589 = False
End Function
glf_funcRefMap.Add "mode_base_started{current_player.wizard_final_hit_count > 0}", "Glf_589"
Function Glf_590(args)
  On Error Resume Next
      Glf_590 = GetPlayerState("number") = 1
  If Err Then Glf_590 = False
End Function
glf_funcRefMap.Add "mode_base_started{current_player.number == 1}", "Glf_590"
Function Glf_591(args)
  On Error Resume Next
      Glf_591 = GetPlayerState("number") = 2
  If Err Then Glf_591 = False
End Function
glf_funcRefMap.Add "mode_base_started{current_player.number == 2}", "Glf_591"
Function Glf_592(args)
  On Error Resume Next
      Glf_592 = GetPlayerState("number") = 3
  If Err Then Glf_592 = False
End Function
glf_funcRefMap.Add "mode_base_started{current_player.number == 3}", "Glf_592"
Function Glf_593(args)
  On Error Resume Next
      Glf_593 = GetPlayerState("number") = 4
  If Err Then Glf_593 = False
End Function
glf_funcRefMap.Add "mode_base_started{current_player.number == 4}", "Glf_593"
Function Glf_594(args)
  On Error Resume Next
      Glf_594 = GetPlayerState("wizard_final_hit_count") > 0 And GetPlayerState("ball_just_started")=1
  If Err Then Glf_594 = False
End Function
glf_funcRefMap.Add "s_Plunger2_active{current_player.wizard_final_hit_count > 0 && current_player.ball_just_started==1}", "Glf_594"
Function Glf_595(args)
  On Error Resume Next
      Glf_595 = GetPlayerState("nuke_acquired") = 1 And GetPlayerState("nuke_used") = 0
  If Err Then Glf_595 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.nuke_acquired == 1 && current_player.nuke_used == 0}", "Glf_595"
Function Glf_596(args)
  On Error Resume Next
      Glf_596 = GetPlayerState("shot_meteor_wave1") = 0
  If Err Then Glf_596 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave1 == 0}", "Glf_596"
Function Glf_597(args)
  On Error Resume Next
      Glf_597 = GetPlayerState("shot_meteor_wave1") = 1
  If Err Then Glf_597 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave1 == 1}", "Glf_597"
Function Glf_598(args)
  On Error Resume Next
      Glf_598 = GetPlayerState("shot_meteor_wave2") = 1
  If Err Then Glf_598 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave2 == 1}", "Glf_598"
Function Glf_599(args)
  On Error Resume Next
      Glf_599 = GetPlayerState("shot_meteor_wave3") = 1
  If Err Then Glf_599 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave3 == 1}", "Glf_599"
Function Glf_600(args)
  On Error Resume Next
      Glf_600 = GetPlayerState("shot_meteor_wave4") = 1
  If Err Then Glf_600 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave4 == 1}", "Glf_600"
Function Glf_601(args)
  On Error Resume Next
      Glf_601 = GetPlayerState("shot_meteor_wave5") = 1
  If Err Then Glf_601 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave5 == 1}", "Glf_601"
Function Glf_602(args)
  On Error Resume Next
      Glf_602 = GetPlayerState("shot_meteor_wave6") = 1
  If Err Then Glf_602 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave6 == 1}", "Glf_602"
Function Glf_603(args)
  On Error Resume Next
      Glf_603 = GetPlayerState("shot_meteor_wave7") = 1
  If Err Then Glf_603 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave7 == 1}", "Glf_603"
Function Glf_604(args)
  On Error Resume Next
      Glf_604 = GetPlayerState("shot_meteor_wave8") = 1
  If Err Then Glf_604 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave8 == 1}", "Glf_604"
Function Glf_605(args)
  On Error Resume Next
      Glf_605 = GetPlayerState("shot_meteor_wave9") = 1
  If Err Then Glf_605 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave9 == 1}", "Glf_605"
Function Glf_606(args)
  On Error Resume Next
      Glf_606 = GetPlayerState("shot_meteor_wave1") = 2 And GetPlayerState("shot_meteor_wave2") = 0
  If Err Then Glf_606 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave1 == 2 && current_player.shot_meteor_wave2 == 0}", "Glf_606"
Function Glf_607(args)
  On Error Resume Next
      Glf_607 = GetPlayerState("shot_meteor_wave2") = 2 And GetPlayerState("shot_meteor_wave3") = 0
  If Err Then Glf_607 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave2 == 2 && current_player.shot_meteor_wave3 == 0}", "Glf_607"
Function Glf_608(args)
  On Error Resume Next
      Glf_608 = GetPlayerState("shot_meteor_wave3") = 2 And GetPlayerState("shot_meteor_wave4") = 0
  If Err Then Glf_608 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave3 == 2 && current_player.shot_meteor_wave4 == 0}", "Glf_608"
Function Glf_609(args)
  On Error Resume Next
      Glf_609 = GetPlayerState("shot_meteor_wave4") = 2 And GetPlayerState("shot_meteor_wave5") = 0
  If Err Then Glf_609 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave4 == 2 && current_player.shot_meteor_wave5 == 0}", "Glf_609"
Function Glf_610(args)
  On Error Resume Next
      Glf_610 = GetPlayerState("shot_meteor_wave5") = 2 And GetPlayerState("shot_meteor_wave6") = 0
  If Err Then Glf_610 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave5 == 2 && current_player.shot_meteor_wave6 == 0}", "Glf_610"
Function Glf_611(args)
  On Error Resume Next
      Glf_611 = GetPlayerState("shot_meteor_wave6") = 2 And GetPlayerState("shot_meteor_wave7") = 0
  If Err Then Glf_611 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave6 == 2 && current_player.shot_meteor_wave7 == 0}", "Glf_611"
Function Glf_612(args)
  On Error Resume Next
      Glf_612 = GetPlayerState("shot_meteor_wave7") = 2 And GetPlayerState("shot_meteor_wave8") = 0
  If Err Then Glf_612 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave7 == 2 && current_player.shot_meteor_wave8 == 0}", "Glf_612"
Function Glf_613(args)
  On Error Resume Next
      Glf_613 = GetPlayerState("shot_meteor_wave8") = 2 And GetPlayerState("shot_meteor_wave9") = 0
  If Err Then Glf_613 = False
End Function
glf_funcRefMap.Add "check_base_restart{current_player.shot_meteor_wave8 == 2 && current_player.shot_meteor_wave9 == 0}", "Glf_613"
Function Glf_614(args)
  On Error Resume Next
      Glf_614 = GetPlayerState("shot_final_wave_wizard") = 2 And GetPlayerState("victory") = 0
  If Err Then Glf_614 = False
End Function
glf_funcRefMap.Add "mode_base_started{current_player.shot_final_wave_wizard == 2 && current_player.victory == 0}", "Glf_614"
Function Glf_615(args)
  On Error Resume Next
      Glf_615 = GetPlayerState("shot_final_wave_wizard") = 1 And GetPlayerState("victory") = 0
  If Err Then Glf_615 = False
End Function
glf_funcRefMap.Add "mode_base_started{current_player.shot_final_wave_wizard == 1 && current_player.victory == 0}", "Glf_615"
Function Glf_616(args)
  On Error Resume Next
      Glf_616 = GetPlayerState("shot_combo_command_wizard") = 1 And GetPlayerState("victory") = 0
  If Err Then Glf_616 = False
End Function
glf_funcRefMap.Add "mode_base_started{current_player.shot_combo_command_wizard == 1 && current_player.victory == 0}", "Glf_616"
Function Glf_617(args)
  On Error Resume Next
      Glf_617 = GetPlayerState("shot_fully_loaded_wizard") = 1 And GetPlayerState("victory") = 0
  If Err Then Glf_617 = False
End Function
glf_funcRefMap.Add "mode_base_started{current_player.shot_fully_loaded_wizard == 1 && current_player.victory == 0}", "Glf_617"
Function Glf_618(args)
  On Error Resume Next
      Glf_618 = GetPlayerState("victory") = 1
  If Err Then Glf_618 = False
End Function
glf_funcRefMap.Add "mode_base_started{current_player.victory == 1}", "Glf_618"
Function Glf_619(args)
  On Error Resume Next
      Glf_619 = GetPlayerState("shot_fully_loaded_wizard") = 0 And GetPlayerState("shot_cluster_bomb2") = 1 And GetPlayerState("shot_proton_round6") = 1 And  GetPlayerState("shot_moon_missile2") = 1
  If Err Then Glf_619 = False
End Function
glf_funcRefMap.Add "check_fully_loaded{current_player.shot_fully_loaded_wizard == 0 && current_player.shot_cluster_bomb2 == 1 && current_player.shot_proton_round6 == 1 &&  current_player.shot_moon_missile2 == 1}", "Glf_619"
Function Glf_620(args)
  On Error Resume Next
      Glf_620 = GetPlayerState("meteor_wave_running") = 0
  If Err Then Glf_620 = False
End Function
glf_funcRefMap.Add "prime_fully_loaded_wizard{current_player.meteor_wave_running == 0}", "Glf_620"
Function Glf_621(args)
  On Error Resume Next
      Glf_621 = GetPlayerState("shot_final_wave_wizard") = 1
  If Err Then Glf_621 = False
End Function
glf_funcRefMap.Add "stop_meteor_wave{current_player.shot_final_wave_wizard == 1}", "Glf_621"
Function Glf_622(args)
  On Error Resume Next
      Glf_622 = GetPlayerState("shot_combo_command_wizard") = 1
  If Err Then Glf_622 = False
End Function
glf_funcRefMap.Add "stop_meteor_wave{current_player.shot_combo_command_wizard == 1}", "Glf_622"
Function Glf_623(args)
  On Error Resume Next
      Glf_623 = GetPlayerState("shot_fully_loaded_wizard") = 1
  If Err Then Glf_623 = False
End Function
glf_funcRefMap.Add "stop_meteor_wave{current_player.shot_fully_loaded_wizard == 1}", "Glf_623"
Function Glf_624(args)
  On Error Resume Next
      Glf_624 = GetPlayerState("shot_final_wave_wizard") = 1
  If Err Then Glf_624 = False
End Function
glf_funcRefMap.Add "run_ccwiz_scoop_show{current_player.shot_final_wave_wizard == 1}", "Glf_624"
Function Glf_625(args)
  On Error Resume Next
      Glf_625 = GetPlayerState("shot_combo_command_wizard") = 1 or GetPlayerState("shot_final_wave_wizard") = 1
  If Err Then Glf_625 = False
End Function
glf_funcRefMap.Add "run_flwiz_scoop_show{current_player.shot_combo_command_wizard == 1 or current_player.shot_final_wave_wizard == 1}", "Glf_625"
Function Glf_626(args)
  On Error Resume Next
      Glf_626 = GetPlayerState("wizard_mode_is_ready") = 1 And GetPlayerState("shot_final_wave_wizard") = 1 And GetPlayerState("meteor_wave_running") = 0
  If Err Then Glf_626 = False
End Function
glf_funcRefMap.Add "balldevice_scoop_ball_entered{current_player.wizard_mode_is_ready == 1 && current_player.shot_final_wave_wizard == 1 && current_player.meteor_wave_running == 0}", "Glf_626"
Function Glf_627(args)
  On Error Resume Next
      Glf_627 = GetPlayerState("wizard_mode_is_ready") = 1 And GetPlayerState("shot_combo_command_wizard") = 1 And GetPlayerState("shot_final_wave_wizard") <> 1 And GetPlayerState("meteor_wave_running") = 0
  If Err Then Glf_627 = False
End Function
glf_funcRefMap.Add "balldevice_scoop_ball_entered{current_player.wizard_mode_is_ready == 1 && current_player.shot_combo_command_wizard == 1 && current_player.shot_final_wave_wizard != 1 && current_player.meteor_wave_running == 0}", "Glf_627"
Function Glf_628(args)
  On Error Resume Next
      Glf_628 = GetPlayerState("wizard_mode_is_ready") = 1 And GetPlayerState("shot_fully_loaded_wizard") = 1  And GetPlayerState("shot_combo_command_wizard") <> 1 And GetPlayerState("shot_final_wave_wizard") <> 1 And GetPlayerState("meteor_wave_running") = 0
  If Err Then Glf_628 = False
End Function
glf_funcRefMap.Add "balldevice_scoop_ball_entered{current_player.wizard_mode_is_ready == 1 && current_player.shot_fully_loaded_wizard == 1  && current_player.shot_combo_command_wizard != 1 && current_player.shot_final_wave_wizard != 1 && current_player.meteor_wave_running == 0}", "Glf_628"
Function Glf_629(args)
  On Error Resume Next
      Glf_629 = GetPlayerState("shot_final_wave_wizard") = 1
  If Err Then Glf_629 = False
End Function
glf_funcRefMap.Add "balldevice_moon_lock_ball_enter{current_player.shot_final_wave_wizard == 1}", "Glf_629"
Function Glf_630(args)
  On Error Resume Next
      Glf_630 = GetPlayerState("ball_just_started")=0
  If Err Then Glf_630 = False
End Function
glf_funcRefMap.Add "check_plunger{current_player.ball_just_started==0}", "Glf_630"
Function Glf_631(args)
  Glf_631 = 5000
End Function
glf_funcRefMap.Add "5000", "Glf_631"
Function Glf_632(args)
  Glf_632 = Glf_FormatValue(GetPlayerStateForPlayer(0, "score"), "0>2,")
End Function
glf_funcRefMap.Add "{players[0].score:0>2,}", "Glf_632"
Function Glf_633(args)
  Glf_633 = Glf_FormatValue(GetPlayerStateForPlayer(1, "score"), "0>2,")
End Function
glf_funcRefMap.Add "{players[1].score:0>2,}", "Glf_633"
Function Glf_634(args)
  Glf_634 = Glf_FormatValue(GetPlayerStateForPlayer(2, "score"), "0>2,")
End Function
glf_funcRefMap.Add "{players[2].score:0>2,}", "Glf_634"
Function Glf_635(args)
  Glf_635 = Glf_FormatValue(GetPlayerStateForPlayer(3, "score"), "0>2,")
End Function
glf_funcRefMap.Add "{players[3].score:0>2,}", "Glf_635"
Function Glf_636(args)
  Glf_636 = Glf_FormatValue(GetPlayerState("ball"), "0>2")
End Function
glf_funcRefMap.Add "{current_player.ball:0>2}", "Glf_636"
Function Glf_637(args)
  Glf_637 = Glf_FormatValue(GetPlayerStateForPlayer(0, "score"), "0>2")
End Function
glf_funcRefMap.Add "{players[0].score:0>2}", "Glf_637"
Function Glf_638(args)
  Glf_638 = Glf_FormatValue(GetPlayerStateForPlayer(1, "score"), "0>2")
End Function
glf_funcRefMap.Add "{players[1].score:0>2}", "Glf_638"
Function Glf_639(args)
  Glf_639 = Glf_FormatValue(GetPlayerStateForPlayer(2, "score"), "0>2")
End Function
glf_funcRefMap.Add "{players[2].score:0>2}", "Glf_639"
Function Glf_640(args)
  Glf_640 = Glf_FormatValue(GetPlayerStateForPlayer(3, "score"), "0>2")
End Function
glf_funcRefMap.Add "{players[3].score:0>2}", "Glf_640"
Function Glf_641(args)
  Glf_641 = "BALL"
End Function
glf_funcRefMap.Add """BALL""", "Glf_641"
Function Glf_642(args)
  Glf_642 = 500
End Function
glf_funcRefMap.Add "500", "Glf_642"
Function Glf_643(args)
  Glf_643 = 300
End Function
glf_funcRefMap.Add "300", "Glf_643"
Function Glf_644(args)
  Glf_644 = 600
End Function
glf_funcRefMap.Add "600", "Glf_644"
Function Glf_645(args)
  On Error Resume Next
      Glf_645 = glf_timers("meteor_countdown").GetValue("ticks") = 3
  If Err Then Glf_645 = False
End Function
glf_funcRefMap.Add "timer_meteor_countdown_tick{devices.timers.meteor_countdown.ticks == 3}", "Glf_645"
Function Glf_646(args)
  Glf_646 = 6000
End Function
glf_funcRefMap.Add "6000", "Glf_646"
Function Glf_647(args)
  Glf_647 = 3000
End Function
glf_funcRefMap.Add "3000", "Glf_647"
Function Glf_648(args)
  Glf_648 = 2000
End Function
glf_funcRefMap.Add "2000", "Glf_648"
Function Glf_649(args)
  Glf_649 = 1500
End Function
glf_funcRefMap.Add "1500", "Glf_649"
Function Glf_650(args)
  On Error Resume Next
      Glf_650 = glf_timers("meteor_countdown").GetValue("ticks") = 1
  If Err Then Glf_650 = False
End Function
glf_funcRefMap.Add "timer_meteor_countdown_tick{devices.timers.meteor_countdown.ticks == 1}", "Glf_650"
Function Glf_651(args)
  On Error Resume Next
      Glf_651 = Glf_GameVariable("balls_in_play") = 1 And GetPlayerState("ball_just_started") = 0
  If Err Then Glf_651 = False
End Function
glf_funcRefMap.Add "flipper_cradle{game.balls_in_play == 1 && current_player.ball_just_started == 0}", "Glf_651"
Function Glf_652(args)
  On Error Resume Next
      Glf_652 = GetPlayerState("ball_cradled") = 1
  If Err Then Glf_652 = False
End Function
glf_funcRefMap.Add "s_left_flipper_active{current_player.ball_cradled == 1}", "Glf_652"
Function Glf_653(args)
  On Error Resume Next
      Glf_653 = GetPlayerState("ball_cradled") = 1
  If Err Then Glf_653 = False
End Function
glf_funcRefMap.Add "s_right_flipper_active{current_player.ball_cradled == 1}", "Glf_653"
Function Glf_654(args)
  On Error Resume Next
      Glf_654 = GetPlayerState("ball_cradled") = 1
  If Err Then Glf_654 = False
End Function
glf_funcRefMap.Add "s_right_staged_flipper_key_active{current_player.ball_cradled == 1}", "Glf_654"
Function Glf_655(args)
  On Error Resume Next
      Glf_655 = glf_timers("info").GetValue("ticks") = 0
  If Err Then Glf_655 = False
End Function
glf_funcRefMap.Add "timer_info_tick{devices.timers.info.ticks == 0}", "Glf_655"
Function Glf_656(args)
  On Error Resume Next
      Glf_656 = glf_timers("info").GetValue("ticks") = 1
  If Err Then Glf_656 = False
End Function
glf_funcRefMap.Add "timer_info_tick{devices.timers.info.ticks == 1}", "Glf_656"
Function Glf_657(args)
  On Error Resume Next
      Glf_657 = glf_timers("info").GetValue("ticks") = 2
  If Err Then Glf_657 = False
End Function
glf_funcRefMap.Add "timer_info_tick{devices.timers.info.ticks == 2}", "Glf_657"
Function Glf_658(args)
  On Error Resume Next
      Glf_658 = glf_timers("info").GetValue("ticks") = 3
  If Err Then Glf_658 = False
End Function
glf_funcRefMap.Add "timer_info_tick{devices.timers.info.ticks == 3}", "Glf_658"
Function Glf_659(args)
  On Error Resume Next
      Glf_659 = GetPlayerState("number") = 1 or GetPlayerState("number") = 2
  If Err Then Glf_659 = False
End Function
glf_funcRefMap.Add "info_ball_num{current_player.number == 1 or current_player.number == 2}", "Glf_659"
Function Glf_660(args)
  On Error Resume Next
      Glf_660 = GetPlayerState("number") = 3 or GetPlayerState("number") = 4
  If Err Then Glf_660 = False
End Function
glf_funcRefMap.Add "info_ball_num{current_player.number == 3 or current_player.number == 4}", "Glf_660"
Function Glf_661(args)
  On Error Resume Next
      Glf_661 = GetPlayerState("number") = 1 or GetPlayerState("number") = 2
  If Err Then Glf_661 = False
End Function
glf_funcRefMap.Add "info_trained_num{current_player.number == 1 or current_player.number == 2}", "Glf_661"
Function Glf_662(args)
  Glf_662 = "TRAINED"
End Function
glf_funcRefMap.Add """TRAINED""", "Glf_662"
Function Glf_663(args)
  Glf_663 = Glf_FormatValue(GetPlayerState("training_total_achieved"), "0>2")
End Function
glf_funcRefMap.Add "{current_player.training_total_achieved:0>2}", "Glf_663"
Function Glf_664(args)
  On Error Resume Next
      Glf_664 = GetPlayerState("number") = 3 or GetPlayerState("number") = 4
  If Err Then Glf_664 = False
End Function
glf_funcRefMap.Add "info_trained_num{current_player.number == 3 or current_player.number == 4}", "Glf_664"
Function Glf_665(args)
  On Error Resume Next
      Glf_665 = GetPlayerState("number") = 1 or GetPlayerState("number") = 2
  If Err Then Glf_665 = False
End Function
glf_funcRefMap.Add "info_eb_num{current_player.number == 1 or current_player.number == 2}", "Glf_665"
Function Glf_666(args)
  Glf_666 = "EB NUM"
End Function
glf_funcRefMap.Add """EB NUM""", "Glf_666"
Function Glf_667(args)
  Glf_667 = Glf_FormatValue(GetPlayerState("extra_balls"), "0>2")
End Function
glf_funcRefMap.Add "{current_player.extra_balls:0>2}", "Glf_667"
Function Glf_668(args)
  On Error Resume Next
      Glf_668 = GetPlayerState("number") = 3 or GetPlayerState("number") = 4
  If Err Then Glf_668 = False
End Function
glf_funcRefMap.Add "info_eb_num{current_player.number == 3 or current_player.number == 4}", "Glf_668"
Function Glf_669(args)
  On Error Resume Next
      Glf_669 = GetPlayerState("nuke_acquired") = 0
  If Err Then Glf_669 = False
End Function
glf_funcRefMap.Add "mode_nuke_started{current_player.nuke_acquired == 0}", "Glf_669"
Function Glf_670(args)
  On Error Resume Next
      Glf_670 = GetPlayerState("nuke_acquired") = 1 And GetPlayerState("nuke_used") = 0
  If Err Then Glf_670 = False
End Function
glf_funcRefMap.Add "mode_nuke_started{current_player.nuke_acquired == 1 && current_player.nuke_used == 0}", "Glf_670"
Function Glf_671(args)
  On Error Resume Next
      Glf_671 = GetPlayerState("nuke_acquired") = 1 And GetPlayerState("nuke_used") = 0
  If Err Then Glf_671 = False
End Function
glf_funcRefMap.Add "check_detonate_nuke{current_player.nuke_acquired == 1 && current_player.nuke_used == 0}", "Glf_671"
Function Glf_672(args)
  On Error Resume Next
      Glf_672 = GetPlayerState("ball_just_started")=1 And GetPlayerState("shot_meteor_wave9") < 2
  If Err Then Glf_672 = False
End Function
glf_funcRefMap.Add "mode_skillshots_started{current_player.ball_just_started==1 && current_player.shot_meteor_wave9 < 2}", "Glf_672"
Function Glf_673(args)
  On Error Resume Next
      Glf_673 = GetPlayerState("shot_ss")=1
  If Err Then Glf_673 = False
End Function
glf_funcRefMap.Add "s_TargetMystery2_active{current_player.shot_ss==1}", "Glf_673"
Function Glf_674(args)
  On Error Resume Next
      Glf_674 = GetPlayerState("shot_ss")=1
  If Err Then Glf_674 = False
End Function
glf_funcRefMap.Add "left_side_hit{current_player.shot_ss==1}", "Glf_674"
Function Glf_675(args)
  On Error Resume Next
      Glf_675 = GetPlayerState("shot_ss")=1 And GetPlayerState("flag_ss") = 1
  If Err Then Glf_675 = False
End Function
glf_funcRefMap.Add "right_ramp_hit{current_player.shot_ss==1 && current_player.flag_ss == 1}", "Glf_675"
Function Glf_676(args)
  On Error Resume Next
      Glf_676 = GetPlayerState("shot_ss")=1 And GetPlayerState("flag_ss") = 2
  If Err Then Glf_676 = False
End Function
glf_funcRefMap.Add "left_ramp_hit{current_player.shot_ss==1 && current_player.flag_ss == 2}", "Glf_676"
Function Glf_677(args)
  On Error Resume Next
      Glf_677 = GetPlayerState("num_skillshots")=3
  If Err Then Glf_677 = False
End Function
glf_funcRefMap.Add "sss_achieved.1{current_player.num_skillshots==3}", "Glf_677"
Function Glf_678(args)
  On Error Resume Next
      Glf_678 = GetPlayerState("num_skillshots")=3
  If Err Then Glf_678 = False
End Function
glf_funcRefMap.Add "voc_ss_stopped{current_player.num_skillshots==3}", "Glf_678"
Function Glf_679(args)
  On Error Resume Next
      Glf_679 = GetPlayerState("num_skillshots")=3
  If Err Then Glf_679 = False
End Function
glf_funcRefMap.Add "voc_sss_stopped{current_player.num_skillshots==3}", "Glf_679"
Function Glf_680(args)
  On Error Resume Next
      Glf_680 = GetPlayerState("shot_meteor_wave2") = 2 And GetPlayerState("shot_meteor_wave3") = 0
  If Err Then Glf_680 = False
End Function
glf_funcRefMap.Add "mode_alien_attack_started{current_player.shot_meteor_wave2 == 2 && current_player.shot_meteor_wave3 == 0}", "Glf_680"
Function Glf_681(args)
  On Error Resume Next
      Glf_681 = GetPlayerState("shot_meteor_wave4") = 2 And GetPlayerState("shot_meteor_wave5") = 0
  If Err Then Glf_681 = False
End Function
glf_funcRefMap.Add "mode_alien_attack_started{current_player.shot_meteor_wave4 == 2 && current_player.shot_meteor_wave5 == 0}", "Glf_681"
Function Glf_682(args)
  On Error Resume Next
      Glf_682 = GetPlayerState("shot_meteor_wave6") = 2 And GetPlayerState("shot_meteor_wave7") = 0
  If Err Then Glf_682 = False
End Function
glf_funcRefMap.Add "mode_alien_attack_started{current_player.shot_meteor_wave6 == 2 && current_player.shot_meteor_wave7 == 0}", "Glf_682"
Function Glf_683(args)
  On Error Resume Next
      Glf_683 = GetPlayerState("shot_meteor_wave8") = 2 And GetPlayerState("shot_meteor_wave9") = 0
  If Err Then Glf_683 = False
End Function
glf_funcRefMap.Add "mode_alien_attack_started{current_player.shot_meteor_wave8 == 2 && current_player.shot_meteor_wave9 == 0}", "Glf_683"
Function Glf_684(args)
  On Error Resume Next
      Glf_684 = glf_timers("alien_attack").GetValue("ticks") > 0
  If Err Then Glf_684 = False
End Function
glf_funcRefMap.Add "timer_alien_attack_tick{devices.timers.alien_attack.ticks > 0}", "Glf_684"
Function Glf_685(args)
  On Error Resume Next
      Glf_685 = glf_timers("timewarp").GetValue("ticks")=1
  If Err Then Glf_685 = False
End Function
glf_funcRefMap.Add "timer_timewarp_tick{devices.timers.timewarp.ticks==1}", "Glf_685"
Function Glf_686(args)
  On Error Resume Next
      Glf_686 = GetPlayerState("alien_attack_dir") = 0
  If Err Then Glf_686 = False
End Function
glf_funcRefMap.Add "alien_attacking{current_player.alien_attack_dir == 0}", "Glf_686"
Function Glf_687(args)
  On Error Resume Next
      Glf_687 = GetPlayerState("alien_attack_dir") = 1
  If Err Then Glf_687 = False
End Function
glf_funcRefMap.Add "alien_attacking{current_player.alien_attack_dir == 1}", "Glf_687"
Function Glf_688(args)
  On Error Resume Next
      Glf_688 = GetPlayerState("alien_attack_dir") = 0 And glf_timers("alien_attack").GetValue("ticks") = 2
  If Err Then Glf_688 = False
End Function
glf_funcRefMap.Add "timer_alien_attack_tick{current_player.alien_attack_dir == 0 && devices.timers.alien_attack.ticks == 2}", "Glf_688"
Function Glf_689(args)
  On Error Resume Next
      Glf_689 = GetPlayerState("alien_attack_dir") = 0 And glf_timers("alien_attack").GetValue("ticks") = 3
  If Err Then Glf_689 = False
End Function
glf_funcRefMap.Add "timer_alien_attack_tick{current_player.alien_attack_dir == 0 && devices.timers.alien_attack.ticks == 3}", "Glf_689"
Function Glf_690(args)
  On Error Resume Next
      Glf_690 = GetPlayerState("alien_attack_dir") = 0 And glf_timers("alien_attack").GetValue("ticks") = 4
  If Err Then Glf_690 = False
End Function
glf_funcRefMap.Add "timer_alien_attack_tick{current_player.alien_attack_dir == 0 && devices.timers.alien_attack.ticks == 4}", "Glf_690"
Function Glf_691(args)
  On Error Resume Next
      Glf_691 = GetPlayerState("alien_attack_dir") = 0 And glf_timers("alien_attack").GetValue("ticks") = 5
  If Err Then Glf_691 = False
End Function
glf_funcRefMap.Add "timer_alien_attack_tick{current_player.alien_attack_dir == 0 && devices.timers.alien_attack.ticks == 5}", "Glf_691"
Function Glf_692(args)
  On Error Resume Next
      Glf_692 = GetPlayerState("alien_attack_dir") = 0 And glf_timers("alien_attack").GetValue("ticks") = 6
  If Err Then Glf_692 = False
End Function
glf_funcRefMap.Add "timer_alien_attack_tick{current_player.alien_attack_dir == 0 && devices.timers.alien_attack.ticks == 6}", "Glf_692"
Function Glf_693(args)
  On Error Resume Next
      Glf_693 = GetPlayerState("alien_attack_dir") = 0 And glf_timers("alien_attack").GetValue("ticks") = 7
  If Err Then Glf_693 = False
End Function
glf_funcRefMap.Add "timer_alien_attack_tick{current_player.alien_attack_dir == 0 && devices.timers.alien_attack.ticks == 7}", "Glf_693"
Function Glf_694(args)
  On Error Resume Next
      Glf_694 = GetPlayerState("alien_attack_dir") = 0 And glf_timers("alien_attack").GetValue("ticks") = 8
  If Err Then Glf_694 = False
End Function
glf_funcRefMap.Add "timer_alien_attack_tick{current_player.alien_attack_dir == 0 && devices.timers.alien_attack.ticks == 8}", "Glf_694"
Function Glf_695(args)
  On Error Resume Next
      Glf_695 = GetPlayerState("alien_attack_dir") = 1 And glf_timers("alien_attack").GetValue("ticks") = 8
  If Err Then Glf_695 = False
End Function
glf_funcRefMap.Add "timer_alien_attack_tick{current_player.alien_attack_dir == 1 && devices.timers.alien_attack.ticks == 8}", "Glf_695"
Function Glf_696(args)
  On Error Resume Next
      Glf_696 = GetPlayerState("alien_attack_dir") = 1 And glf_timers("alien_attack").GetValue("ticks") = 7
  If Err Then Glf_696 = False
End Function
glf_funcRefMap.Add "timer_alien_attack_tick{current_player.alien_attack_dir == 1 && devices.timers.alien_attack.ticks == 7}", "Glf_696"
Function Glf_697(args)
  On Error Resume Next
      Glf_697 = GetPlayerState("alien_attack_dir") = 1 And glf_timers("alien_attack").GetValue("ticks") = 6
  If Err Then Glf_697 = False
End Function
glf_funcRefMap.Add "timer_alien_attack_tick{current_player.alien_attack_dir == 1 && devices.timers.alien_attack.ticks == 6}", "Glf_697"
Function Glf_698(args)
  On Error Resume Next
      Glf_698 = GetPlayerState("alien_attack_dir") = 1 And glf_timers("alien_attack").GetValue("ticks") = 5
  If Err Then Glf_698 = False
End Function
glf_funcRefMap.Add "timer_alien_attack_tick{current_player.alien_attack_dir == 1 && devices.timers.alien_attack.ticks == 5}", "Glf_698"
Function Glf_699(args)
  On Error Resume Next
      Glf_699 = GetPlayerState("alien_attack_dir") = 1 And glf_timers("alien_attack").GetValue("ticks") = 4
  If Err Then Glf_699 = False
End Function
glf_funcRefMap.Add "timer_alien_attack_tick{current_player.alien_attack_dir == 1 && devices.timers.alien_attack.ticks == 4}", "Glf_699"
Function Glf_700(args)
  On Error Resume Next
      Glf_700 = GetPlayerState("alien_attack_dir") = 1 And glf_timers("alien_attack").GetValue("ticks") = 3
  If Err Then Glf_700 = False
End Function
glf_funcRefMap.Add "timer_alien_attack_tick{current_player.alien_attack_dir == 1 && devices.timers.alien_attack.ticks == 3}", "Glf_700"
Function Glf_701(args)
  On Error Resume Next
      Glf_701 = GetPlayerState("alien_attack_dir") = 1 And glf_timers("alien_attack").GetValue("ticks") = 2
  If Err Then Glf_701 = False
End Function
glf_funcRefMap.Add "timer_alien_attack_tick{current_player.alien_attack_dir == 1 && devices.timers.alien_attack.ticks == 2}", "Glf_701"
Function Glf_702(args)
  On Error Resume Next
      Glf_702 = GetPlayerState("alien_attack_dir") = 1 And GetPlayerState("alien_grace_time") = 1
  If Err Then Glf_702 = False
End Function
glf_funcRefMap.Add "left_orbit_hit{current_player.alien_attack_dir == 1 && current_player.alien_grace_time == 1}", "Glf_702"
Function Glf_703(args)
  On Error Resume Next
      Glf_703 = GetPlayerState("alien_attack_dir") = 0 And GetPlayerState("alien_grace_time") = 1
  If Err Then Glf_703 = False
End Function
glf_funcRefMap.Add "left_side_hit{current_player.alien_attack_dir == 0 && current_player.alien_grace_time == 1}", "Glf_703"
Function Glf_704(args)
  On Error Resume Next
      Glf_704 = GetPlayerState("alien_attack_dir") = 1 And GetPlayerState("alien_grace_time") = 1
  If Err Then Glf_704 = False
End Function
glf_funcRefMap.Add "left_ramp_hit{current_player.alien_attack_dir == 1 && current_player.alien_grace_time == 1}", "Glf_704"
Function Glf_705(args)
  On Error Resume Next
      Glf_705 = GetPlayerState("alien_attack_dir") = 0 And GetPlayerState("alien_grace_time") = 1
  If Err Then Glf_705 = False
End Function
glf_funcRefMap.Add "left_orbit_hit{current_player.alien_attack_dir == 0 && current_player.alien_grace_time == 1}", "Glf_705"
Function Glf_706(args)
  On Error Resume Next
      Glf_706 = GetPlayerState("alien_attack_dir") = 1 And GetPlayerState("alien_grace_time") = 1
  If Err Then Glf_706 = False
End Function
glf_funcRefMap.Add "inner_orbit_hit{current_player.alien_attack_dir == 1 && current_player.alien_grace_time == 1}", "Glf_706"
Function Glf_707(args)
  On Error Resume Next
      Glf_707 = GetPlayerState("alien_attack_dir") = 0 And GetPlayerState("alien_grace_time") = 1
  If Err Then Glf_707 = False
End Function
glf_funcRefMap.Add "left_ramp_hit{current_player.alien_attack_dir == 0 && current_player.alien_grace_time == 1}", "Glf_707"
Function Glf_708(args)
  On Error Resume Next
      Glf_708 = GetPlayerState("alien_attack_dir") = 1 And GetPlayerState("alien_grace_time") = 1
  If Err Then Glf_708 = False
End Function
glf_funcRefMap.Add "center_orbit_left_hit{current_player.alien_attack_dir == 1 && current_player.alien_grace_time == 1}", "Glf_708"
Function Glf_709(args)
  On Error Resume Next
      Glf_709 = GetPlayerState("alien_attack_dir") = 0 And GetPlayerState("alien_grace_time") = 1
  If Err Then Glf_709 = False
End Function
glf_funcRefMap.Add "inner_orbit_hit{current_player.alien_attack_dir == 0 && current_player.alien_grace_time == 1}", "Glf_709"
Function Glf_710(args)
  On Error Resume Next
      Glf_710 = GetPlayerState("alien_attack_dir") = 1 And GetPlayerState("alien_grace_time") = 1
  If Err Then Glf_710 = False
End Function
glf_funcRefMap.Add "center_orbit_right_hit{current_player.alien_attack_dir == 1 && current_player.alien_grace_time == 1}", "Glf_710"
Function Glf_711(args)
  On Error Resume Next
      Glf_711 = GetPlayerState("alien_attack_dir") = 0 And GetPlayerState("alien_grace_time") = 1
  If Err Then Glf_711 = False
End Function
glf_funcRefMap.Add "center_orbit_left_hit{current_player.alien_attack_dir == 0 && current_player.alien_grace_time == 1}", "Glf_711"
Function Glf_712(args)
  On Error Resume Next
      Glf_712 = GetPlayerState("alien_attack_dir") = 1 And GetPlayerState("alien_grace_time") = 1
  If Err Then Glf_712 = False
End Function
glf_funcRefMap.Add "right_ramp_hit{current_player.alien_attack_dir == 1 && current_player.alien_grace_time == 1}", "Glf_712"
Function Glf_713(args)
  On Error Resume Next
      Glf_713 = GetPlayerState("alien_attack_dir") = 0 And GetPlayerState("alien_grace_time") = 1
  If Err Then Glf_713 = False
End Function
glf_funcRefMap.Add "center_orbit_right_hit{current_player.alien_attack_dir == 0 && current_player.alien_grace_time == 1}", "Glf_713"
Function Glf_714(args)
  On Error Resume Next
      Glf_714 = GetPlayerState("alien_attack_dir") = 1 And GetPlayerState("alien_grace_time") = 1
  If Err Then Glf_714 = False
End Function
glf_funcRefMap.Add "right_orbit_hit{current_player.alien_attack_dir == 1 && current_player.alien_grace_time == 1}", "Glf_714"
Function Glf_715(args)
  On Error Resume Next
      Glf_715 = GetPlayerState("alien_attack_dir") = 0 And GetPlayerState("alien_grace_time") = 1
  If Err Then Glf_715 = False
End Function
glf_funcRefMap.Add "right_ramp_hit{current_player.alien_attack_dir == 0 && current_player.alien_grace_time == 1}", "Glf_715"
Function Glf_716(args)
  Glf_716 = GetPlayerState("alien_tick_count")
End Function
glf_funcRefMap.Add "current_player.alien_tick_count", "Glf_716"
Function Glf_717(args)
  Glf_717 = glf_timers("alien_attack").GetValue("ticks")
End Function
glf_funcRefMap.Add "devices.timers.alien_attack.ticks", "Glf_717"
Function Glf_718(args)
  On Error Resume Next
      Glf_718 = GetPlayerState("training_shields_achieved")=1
  If Err Then Glf_718 = False
End Function
glf_funcRefMap.Add "mode_shields_started{current_player.training_shields_achieved==1}", "Glf_718"
Function Glf_719(args)
  On Error Resume Next
      Glf_719 = GetPlayerState("training_shields_achieved")=1
  If Err Then Glf_719 = False
End Function
glf_funcRefMap.Add "restart_qualify_shields{current_player.training_shields_achieved==1}", "Glf_719"
Function Glf_720(args)
  On Error Resume Next
      Glf_720 = GetPlayerState("shot_shield_left")=1
  If Err Then Glf_720 = False
End Function
glf_funcRefMap.Add "mode_shields_started{current_player.shot_shield_left==1}", "Glf_720"
Function Glf_721(args)
  On Error Resume Next
      Glf_721 = GetPlayerState("shot_shield_left")=1
  If Err Then Glf_721 = False
End Function
glf_funcRefMap.Add "s_LeftOutlane_active{current_player.shot_shield_left==1}", "Glf_721"
Function Glf_722(args)
  On Error Resume Next
      Glf_722 = GetPlayerState("shot_shield_right")=1
  If Err Then Glf_722 = False
End Function
glf_funcRefMap.Add "s_RightOutlane_active{current_player.shot_shield_right==1}", "Glf_722"
Function Glf_723(args)
  Glf_723 = "SHIELDS"
End Function
glf_funcRefMap.Add """SHIELDS""", "Glf_723"
Function Glf_724(args)
  On Error Resume Next
      Glf_724 = GetPlayerState("shot_ship_charge1")=0
  If Err Then Glf_724 = False
End Function
glf_funcRefMap.Add "mode_ship_save_started{current_player.shot_ship_charge1==0}", "Glf_724"
Function Glf_725(args)
  On Error Resume Next
      Glf_725 = GetPlayerState("training_ship_save_achieved")=1 And GetPlayerState("shot_ship_charge3")<>2
  If Err Then Glf_725 = False
End Function
glf_funcRefMap.Add "mode_ship_save_started{current_player.training_ship_save_achieved==1 && current_player.shot_ship_charge3!=2}", "Glf_725"
Function Glf_726(args)
  On Error Resume Next
      Glf_726 = GetPlayerState("shot_ship_charge3")=2 And GetPlayerState("meteor_mb_shootagain_time") =6000
  If Err Then Glf_726 = False
End Function
glf_funcRefMap.Add "mode_ship_save_started{current_player.shot_ship_charge3==2 && current_player.meteor_mb_shootagain_time ==6000}", "Glf_726"
Function Glf_727(args)
  On Error Resume Next
      Glf_727 = GetPlayerState("training_ship_save_achieved")=0
  If Err Then Glf_727 = False
End Function
glf_funcRefMap.Add "restart_ship_save{current_player.training_ship_save_achieved==0}", "Glf_727"
Function Glf_728(args)
  On Error Resume Next
      Glf_728 = GetPlayerState("training_ship_save_achieved")=1
  If Err Then Glf_728 = False
End Function
glf_funcRefMap.Add "restart_ship_save{current_player.training_ship_save_achieved==1}", "Glf_728"
Function Glf_729(args)
  On Error Resume Next
      Glf_729 = GetPlayerState("shot_ship_charge3") = 2
  If Err Then Glf_729 = False
End Function
glf_funcRefMap.Add "mode_ship_save_started{current_player.shot_ship_charge3 == 2}", "Glf_729"
Function Glf_730(args)
  On Error Resume Next
      Glf_730 = GetPlayerState("shot_ship_charge1") = 1
  If Err Then Glf_730 = False
End Function
glf_funcRefMap.Add "right_orbit_hit{current_player.shot_ship_charge1 == 1}", "Glf_730"
Function Glf_731(args)
  On Error Resume Next
      Glf_731 = GetPlayerState("shot_ship_charge1") = 2 And GetPlayerState("shot_ship_charge2") = 1
  If Err Then Glf_731 = False
End Function
glf_funcRefMap.Add "right_orbit_hit{current_player.shot_ship_charge1 == 2 && current_player.shot_ship_charge2 == 1}", "Glf_731"
Function Glf_732(args)
  On Error Resume Next
      Glf_732 = GetPlayerState("shot_ship_charge2") = 2 And GetPlayerState("shot_ship_charge3") = 1
  If Err Then Glf_732 = False
End Function
glf_funcRefMap.Add "right_orbit_hit{current_player.shot_ship_charge2 == 2 && current_player.shot_ship_charge3 == 1}", "Glf_732"
Function Glf_733(args)
  Glf_733 = 15000
End Function
glf_funcRefMap.Add "15000", "Glf_733"
Function Glf_734(args)
  Glf_734 = " SHIP "
End Function
glf_funcRefMap.Add """ SHIP """, "Glf_734"
Function Glf_735(args)
  Glf_735 = " SAVER "
End Function
glf_funcRefMap.Add """ SAVER """, "Glf_735"
Function Glf_736(args)
  On Error Resume Next
      Glf_736 = GetPlayerState("ball_just_started")=1
  If Err Then Glf_736 = False
End Function
glf_funcRefMap.Add "mode_combos_started{current_player.ball_just_started==1}", "Glf_736"
Function Glf_737(args)
  On Error Resume Next
      Glf_737 = GetPlayerState("combos_value")=0
  If Err Then Glf_737 = False
End Function
glf_funcRefMap.Add "check_add_combos{current_player.combos_value==0}", "Glf_737"
Function Glf_738(args)
  On Error Resume Next
      Glf_738 = GetPlayerState("combos_value")=1
  If Err Then Glf_738 = False
End Function
glf_funcRefMap.Add "check_add_combos{current_player.combos_value==1}", "Glf_738"
Function Glf_739(args)
  On Error Resume Next
      Glf_739 = GetPlayerState("combos_value")=2
  If Err Then Glf_739 = False
End Function
glf_funcRefMap.Add "check_add_combos{current_player.combos_value==2}", "Glf_739"
Function Glf_740(args)
  On Error Resume Next
      Glf_740 = GetPlayerState("combos_value")=3
  If Err Then Glf_740 = False
End Function
glf_funcRefMap.Add "check_add_combos{current_player.combos_value==3}", "Glf_740"
Function Glf_741(args)
  On Error Resume Next
      Glf_741 = GetPlayerState("combos_value")=4
  If Err Then Glf_741 = False
End Function
glf_funcRefMap.Add "check_add_combos{current_player.combos_value==4}", "Glf_741"
Function Glf_742(args)
  On Error Resume Next
      Glf_742 = GetPlayerState("combos_value")=5
  If Err Then Glf_742 = False
End Function
glf_funcRefMap.Add "check_add_combos{current_player.combos_value==5}", "Glf_742"
Function Glf_743(args)
  On Error Resume Next
      Glf_743 = GetPlayerState("combos_value")=6
  If Err Then Glf_743 = False
End Function
glf_funcRefMap.Add "check_add_combos{current_player.combos_value==6}", "Glf_743"
Function Glf_744(args)
  On Error Resume Next
      Glf_744 = GetPlayerState("combos_value")=7
  If Err Then Glf_744 = False
End Function
glf_funcRefMap.Add "check_add_combos{current_player.combos_value==7}", "Glf_744"
Function Glf_745(args)
  On Error Resume Next
      Glf_745 = GetPlayerState("combos_value")=8
  If Err Then Glf_745 = False
End Function
glf_funcRefMap.Add "check_add_combos{current_player.combos_value==8}", "Glf_745"
Function Glf_746(args)
  On Error Resume Next
      Glf_746 = GetPlayerState("shot_combo_command_wizard") = 0
  If Err Then Glf_746 = False
End Function
glf_funcRefMap.Add "check_combo_command_wizard{current_player.shot_combo_command_wizard == 0}", "Glf_746"
Function Glf_747(args)
  On Error Resume Next
      Glf_747 = GetPlayerState("combos_value")=8
  If Err Then Glf_747 = False
End Function
glf_funcRefMap.Add "check_subtract_combos{current_player.combos_value==8}", "Glf_747"
Function Glf_748(args)
  On Error Resume Next
      Glf_748 = GetPlayerState("combos_value")=7
  If Err Then Glf_748 = False
End Function
glf_funcRefMap.Add "check_subtract_combos{current_player.combos_value==7}", "Glf_748"
Function Glf_749(args)
  On Error Resume Next
      Glf_749 = GetPlayerState("combos_value")=6
  If Err Then Glf_749 = False
End Function
glf_funcRefMap.Add "check_subtract_combos{current_player.combos_value==6}", "Glf_749"
Function Glf_750(args)
  On Error Resume Next
      Glf_750 = GetPlayerState("combos_value")=5
  If Err Then Glf_750 = False
End Function
glf_funcRefMap.Add "check_subtract_combos{current_player.combos_value==5}", "Glf_750"
Function Glf_751(args)
  On Error Resume Next
      Glf_751 = GetPlayerState("combos_value")=4
  If Err Then Glf_751 = False
End Function
glf_funcRefMap.Add "check_subtract_combos{current_player.combos_value==4}", "Glf_751"
Function Glf_752(args)
  On Error Resume Next
      Glf_752 = GetPlayerState("combos_value")=3
  If Err Then Glf_752 = False
End Function
glf_funcRefMap.Add "check_subtract_combos{current_player.combos_value==3}", "Glf_752"
Function Glf_753(args)
  On Error Resume Next
      Glf_753 = GetPlayerState("combos_value")=2
  If Err Then Glf_753 = False
End Function
glf_funcRefMap.Add "check_subtract_combos{current_player.combos_value==2}", "Glf_753"
Function Glf_754(args)
  On Error Resume Next
      Glf_754 = GetPlayerState("combos_value")=1
  If Err Then Glf_754 = False
End Function
glf_funcRefMap.Add "check_subtract_combos{current_player.combos_value==1}", "Glf_754"
Function Glf_755(args)
  On Error Resume Next
      Glf_755 = GetPlayerState("combos_value")>0
  If Err Then Glf_755 = False
End Function
glf_funcRefMap.Add "left_side_hit{current_player.combos_value>0}", "Glf_755"
Function Glf_756(args)
  On Error Resume Next
      Glf_756 = GetPlayerState("combos_value")>0
  If Err Then Glf_756 = False
End Function
glf_funcRefMap.Add "left_orbit_hit{current_player.combos_value>0}", "Glf_756"
Function Glf_757(args)
  On Error Resume Next
      Glf_757 = GetPlayerState("combos_value")>0
  If Err Then Glf_757 = False
End Function
glf_funcRefMap.Add "left_ramp_hit{current_player.combos_value>0}", "Glf_757"
Function Glf_758(args)
  On Error Resume Next
      Glf_758 = GetPlayerState("combos_value")>0
  If Err Then Glf_758 = False
End Function
glf_funcRefMap.Add "inner_orbit_hit{current_player.combos_value>0}", "Glf_758"
Function Glf_759(args)
  On Error Resume Next
      Glf_759 = GetPlayerState("combos_value")>0
  If Err Then Glf_759 = False
End Function
glf_funcRefMap.Add "center_orbit_left_hit{current_player.combos_value>0}", "Glf_759"
Function Glf_760(args)
  On Error Resume Next
      Glf_760 = GetPlayerState("combos_value")>0
  If Err Then Glf_760 = False
End Function
glf_funcRefMap.Add "center_orbit_right_hit{current_player.combos_value>0}", "Glf_760"
Function Glf_761(args)
  On Error Resume Next
      Glf_761 = GetPlayerState("combos_value")>0
  If Err Then Glf_761 = False
End Function
glf_funcRefMap.Add "right_ramp_hit{current_player.combos_value>0}", "Glf_761"
Function Glf_762(args)
  On Error Resume Next
      Glf_762 = GetPlayerState("combos_value")>0
  If Err Then Glf_762 = False
End Function
glf_funcRefMap.Add "right_orbit_hit{current_player.combos_value>0}", "Glf_762"
Function Glf_763(args)
  Glf_763 = GetPlayerState("combo_ticks")
End Function
glf_funcRefMap.Add "current_player.combo_ticks", "Glf_763"
Function Glf_764(args)
  Glf_764 = GetPlayerState("combo_decay_ticks")
End Function
glf_funcRefMap.Add "current_player.combo_decay_ticks", "Glf_764"
Function Glf_765(args)
  On Error Resume Next
      Glf_765 = GetPlayerState("shot_timewarp1")=0
  If Err Then Glf_765 = False
End Function
glf_funcRefMap.Add "mode_timewarp_started{current_player.shot_timewarp1==0}", "Glf_765"
Function Glf_766(args)
  On Error Resume Next
      Glf_766 = GetPlayerState("ball_just_started")=0
  If Err Then Glf_766 = False
End Function
glf_funcRefMap.Add "mode_timewarp_started{current_player.ball_just_started==0}", "Glf_766"
Function Glf_767(args)
  On Error Resume Next
      Glf_767 = GetPlayerState("warping")=0 And GetPlayerState("shot_timewarp1")=1
  If Err Then Glf_767 = False
End Function
glf_funcRefMap.Add "s_TimewarpRamp_active{current_player.warping==0 && current_player.shot_timewarp1==1}", "Glf_767"
Function Glf_768(args)
  On Error Resume Next
      Glf_768 = GetPlayerState("warping")=0 And GetPlayerState("shot_timewarp1")=2 And GetPlayerState("shot_timewarp2")=1
  If Err Then Glf_768 = False
End Function
glf_funcRefMap.Add "s_TimewarpRamp_active{current_player.warping==0 && current_player.shot_timewarp1==2 && current_player.shot_timewarp2==1}", "Glf_768"
Function Glf_769(args)
  Glf_769 = Glf_FormatValue(glf_timers("meteor_countdown").GetValue("ticks"), "0>2")
End Function
glf_funcRefMap.Add "{devices.timers.meteor_countdown.ticks:0>2}", "Glf_769"
Function Glf_770(args)
  Glf_770 = "WARPING"
End Function
glf_funcRefMap.Add """WARPING""", "Glf_770"
Function Glf_771(args)
  On Error Resume Next
      Glf_771 = GetPlayerState("light_the_eb") = 1 And GetPlayerState("flippers_are_dead")=0
  If Err Then Glf_771 = False
End Function
glf_funcRefMap.Add "check_eb{current_player.light_the_eb == 1 && current_player.flippers_are_dead==0}", "Glf_771"
Function Glf_772(args)
  On Error Resume Next
      Glf_772 = GetPlayerState("extra_balls") = 0
  If Err Then Glf_772 = False
End Function
glf_funcRefMap.Add "check_eb{current_player.extra_balls == 0}", "Glf_772"
Function Glf_773(args)
  On Error Resume Next
      Glf_773 = GetPlayerState("extra_balls") > 0
  If Err Then Glf_773 = False
End Function
glf_funcRefMap.Add "check_eb{current_player.extra_balls > 0}", "Glf_773"
Function Glf_774(args)
  On Error Resume Next
      Glf_774 = GetPlayerState("shot_eb_ready") = 0 And GetPlayerState("wizard_mode_is_ready")=0
  If Err Then Glf_774 = False
End Function
glf_funcRefMap.Add "balldevice_scoop_ball_entered{current_player.shot_eb_ready == 0 && current_player.wizard_mode_is_ready==0}", "Glf_774"
Function Glf_775(args)
  On Error Resume Next
      Glf_775 = GetPlayerState("shot_eb_ready") = 1 And GetPlayerState("wizard_mode_is_ready")=0
  If Err Then Glf_775 = False
End Function
glf_funcRefMap.Add "balldevice_scoop_ball_entered{current_player.shot_eb_ready == 1 && current_player.wizard_mode_is_ready==0}", "Glf_775"
Function Glf_776(args)
  On Error Resume Next
      Glf_776 = GetPlayerState("shot_mystery_ready")=0 And GetPlayerState("shot_training_ready")=0
  If Err Then Glf_776 = False
End Function
glf_funcRefMap.Add "eb_complete{current_player.shot_mystery_ready==0 && current_player.shot_training_ready==0}", "Glf_776"
Function Glf_777(args)
  Glf_777 = " EXTRA "
End Function
glf_funcRefMap.Add """ EXTRA """, "Glf_777"
Function Glf_778(args)
  Glf_778 = " BALL "
End Function
glf_funcRefMap.Add """ BALL """, "Glf_778"
Function Glf_779(args)
  On Error Resume Next
      Glf_779 = GetPlayerState("shot_mystery_ready")=1 And GetPlayerState("flippers_are_dead")=0
  If Err Then Glf_779 = False
End Function
glf_funcRefMap.Add "mode_mystery_started{current_player.shot_mystery_ready==1 && current_player.flippers_are_dead==0}", "Glf_779"
Function Glf_780(args)
  On Error Resume Next
      Glf_780 = GetPlayerState("shot_mystery_ready")=0 And GetPlayerState("flippers_are_dead")=0
  If Err Then Glf_780 = False
End Function
glf_funcRefMap.Add "check_mystery{current_player.shot_mystery_ready==0 && current_player.flippers_are_dead==0}", "Glf_780"
Function Glf_781(args)
  On Error Resume Next
      Glf_781 = GetPlayerState("shot_mystery_ready")=1 And GetPlayerState("flippers_are_dead")=0
  If Err Then Glf_781 = False
End Function
glf_funcRefMap.Add "check_mystery{current_player.shot_mystery_ready==1 && current_player.flippers_are_dead==0}", "Glf_781"
Function Glf_782(args)
  On Error Resume Next
      Glf_782 = GetPlayerState("shot_training_ready")=0
  If Err Then Glf_782 = False
End Function
glf_funcRefMap.Add "restart_qualify_mystery{current_player.shot_training_ready==0}", "Glf_782"
Function Glf_783(args)
  On Error Resume Next
      Glf_783 = GetPlayerState("flag_sss_mystery") = 0
  If Err Then Glf_783 = False
End Function
glf_funcRefMap.Add "qualify_mystery_on_complete{current_player.flag_sss_mystery == 0}", "Glf_783"
Function Glf_784(args)
  On Error Resume Next
      Glf_784 = GetPlayerState("shot_health9_light") = 0
  If Err Then Glf_784 = False
End Function
glf_funcRefMap.Add "mystery_full_health{current_player.shot_health9_light == 0}", "Glf_784"
Function Glf_785(args)
  On Error Resume Next
      Glf_785 = GetPlayerState("shot_proton_round6") = 0
  If Err Then Glf_785 = False
End Function
glf_funcRefMap.Add "mystery_full_protons{current_player.shot_proton_round6 == 0}", "Glf_785"
Function Glf_786(args)
  On Error Resume Next
      Glf_786 = GetPlayerState("shot_cluster_bomb2") = 0
  If Err Then Glf_786 = False
End Function
glf_funcRefMap.Add "mystery_added_cluster{current_player.shot_cluster_bomb2 == 0}", "Glf_786"
Function Glf_787(args)
  On Error Resume Next
      Glf_787 = GetPlayerState("shot_ship_charge3") <> 2
  If Err Then Glf_787 = False
End Function
glf_funcRefMap.Add "mystery_added_saver{current_player.shot_ship_charge3 != 2}", "Glf_787"
Function Glf_788(args)
  On Error Resume Next
      Glf_788 = GetPlayerState("shot_shield_left") = 0
  If Err Then Glf_788 = False
End Function
glf_funcRefMap.Add "mystery_added_shields{current_player.shot_shield_left == 0}", "Glf_788"
Function Glf_789(args)
  On Error Resume Next
      Glf_789 = GetPlayerState("shot_moon_missile2") = 0 And glf_state_machines("moon_mb").GetValue("state")<>"locking"
  If Err Then Glf_789 = False
End Function
glf_funcRefMap.Add "mystery_moon_ready{current_player.shot_moon_missile2 == 0 && devices.state_machines.moon_mb.state!=""locking""}", "Glf_789"
Function Glf_790(args)
  On Error Resume Next
      Glf_790 = GetPlayerState("scoring_multiplier") = 1
  If Err Then Glf_790 = False
End Function
glf_funcRefMap.Add "mystery_double_scoring{current_player.scoring_multiplier == 1}", "Glf_790"
Function Glf_791(args)
  On Error Resume Next
      Glf_791 = GetPlayerState("spin_multiplier") = 1
  If Err Then Glf_791 = False
End Function
glf_funcRefMap.Add "mystery_super_spinner{current_player.spin_multiplier == 1}", "Glf_791"
Function Glf_792(args)
  On Error Resume Next
      Glf_792 = GetPlayerState("pop_multiplier") = 1
  If Err Then Glf_792 = False
End Function
glf_funcRefMap.Add "mystery_super_pops{current_player.pop_multiplier == 1}", "Glf_792"
Function Glf_793(args)
  On Error Resume Next
      Glf_793 = GetPlayerState("bonus_multiplier") = 1
  If Err Then Glf_793 = False
End Function
glf_funcRefMap.Add "mystery_double_bonus{current_player.bonus_multiplier == 1}", "Glf_793"
Function Glf_794(args)
  On Error Resume Next
      Glf_794 = GetPlayerState("combos_relaxed") = 0
  If Err Then Glf_794 = False
End Function
glf_funcRefMap.Add "mystery_relaxed_combos{current_player.combos_relaxed == 0}", "Glf_794"
Function Glf_795(args)
  On Error Resume Next
      Glf_795 = GetPlayerState("nuke_acquired") = 0
  If Err Then Glf_795 = False
End Function
glf_funcRefMap.Add "activate_nuke{current_player.nuke_acquired == 0}", "Glf_795"
Function Glf_796(args)
  Glf_796 = "CLAIM"
End Function
glf_funcRefMap.Add """CLAIM""", "Glf_796"
Function Glf_797(args)
  Glf_797 = "MYSTERY"
End Function
glf_funcRefMap.Add """MYSTERY""", "Glf_797"
Function Glf_798(args)
  Glf_798 = " FULL "
End Function
glf_funcRefMap.Add """ FULL """, "Glf_798"
Function Glf_799(args)
  Glf_799 = "HEALTH"
End Function
glf_funcRefMap.Add """HEALTH""", "Glf_799"
Function Glf_800(args)
  Glf_800 = " ADDED "
End Function
glf_funcRefMap.Add """ ADDED """, "Glf_800"
Function Glf_801(args)
  Glf_801 = "CLUSTER"
End Function
glf_funcRefMap.Add """CLUSTER""", "Glf_801"
Function Glf_802(args)
  Glf_802 = " MOON "
End Function
glf_funcRefMap.Add """ MOON """, "Glf_802"
Function Glf_803(args)
  Glf_803 = " READY "
End Function
glf_funcRefMap.Add """ READY """, "Glf_803"
Function Glf_804(args)
  Glf_804 = "TRAINER"
End Function
glf_funcRefMap.Add """TRAINER""", "Glf_804"
Function Glf_805(args)
  Glf_805 = "DOUBLE"
End Function
glf_funcRefMap.Add """DOUBLE""", "Glf_805"
Function Glf_806(args)
  Glf_806 = "SCORING"
End Function
glf_funcRefMap.Add """SCORING""", "Glf_806"
Function Glf_807(args)
  Glf_807 = " SUPER "
End Function
glf_funcRefMap.Add """ SUPER """, "Glf_807"
Function Glf_808(args)
  Glf_808 = "SPINNER"
End Function
glf_funcRefMap.Add """SPINNER""", "Glf_808"
Function Glf_809(args)
  Glf_809 = "  POPS  "
End Function
glf_funcRefMap.Add """  POPS  """, "Glf_809"
Function Glf_810(args)
  Glf_810 = " BONUS "
End Function
glf_funcRefMap.Add """ BONUS """, "Glf_810"
Function Glf_811(args)
  Glf_811 = "RELAXED"
End Function
glf_funcRefMap.Add """RELAXED""", "Glf_811"
Function Glf_812(args)
  Glf_812 = "COMBOS"
End Function
glf_funcRefMap.Add """COMBOS""", "Glf_812"
Function Glf_813(args)
  Glf_813 = " EB IS "
End Function
glf_funcRefMap.Add """ EB IS """, "Glf_813"
Function Glf_814(args)
  Glf_814 = " LIT "
End Function
glf_funcRefMap.Add """ LIT """, "Glf_814"
Function Glf_815(args)
  On Error Resume Next
      Glf_815 = GetPlayerState("shot_moon_missile2") = 1
  If Err Then Glf_815 = False
End Function
glf_funcRefMap.Add "mode_moon_multiball_qualify_started{current_player.shot_moon_missile2 == 1}", "Glf_815"
Function Glf_816(args)
  On Error Resume Next
      Glf_816 = GetPlayerState("training_moon_missile_used")=1
  If Err Then Glf_816 = False
End Function
glf_funcRefMap.Add "mode_moon_multiball_qualify_started{current_player.training_moon_missile_used==1}", "Glf_816"
Function Glf_817(args)
  On Error Resume Next
      Glf_817 = GetPlayerState("training_moon_missile_achieved")=1 And glf_state_machines("moon_mb").GetValue("state")<>"locking" And GetPlayerState("shot_moon_missile2") = 0
  If Err Then Glf_817 = False
End Function
glf_funcRefMap.Add "mode_moon_multiball_qualify_started{current_player.training_moon_missile_achieved==1 && devices.state_machines.moon_mb.state!=""locking"" && current_player.shot_moon_missile2 == 0}", "Glf_817"
Function Glf_818(args)
  On Error Resume Next
      Glf_818 = GetPlayerState("training_moon_missile_achieved")=1
  If Err Then Glf_818 = False
End Function
glf_funcRefMap.Add "restart_moon_qualify_shots{current_player.training_moon_missile_achieved==1}", "Glf_818"
Function Glf_819(args)
  On Error Resume Next
      Glf_819 = GetPlayerState("shot_moon_missile1") = 1
  If Err Then Glf_819 = False
End Function
glf_funcRefMap.Add "mode_moon_multiball_qualify_started{current_player.shot_moon_missile1 == 1}", "Glf_819"
Function Glf_820(args)
  On Error Resume Next
      Glf_820 = glf_state_machines("moon_mb").GetValue("state")<>"locking" And glf_ball_devices("moon_lock").GetValue("balls")=0
  If Err Then Glf_820 = False
End Function
glf_funcRefMap.Add "s_MoonRamp_active{devices.state_machines.moon_mb.state!=""locking"" && devices.ball_devices.moon_lock.balls==0}", "Glf_820"
Function Glf_821(args)
  On Error Resume Next
      Glf_821 = glf_state_machines("moon_mb").GetValue("state")<>"locking" And glf_ball_devices("moon_lock").GetValue("balls") > GetPlayerState("multiball_lock_moon_launch_balls_locked") And glf_ball_devices("moon_lock").GetValue("balls") > GetPlayerState("leftover_balls_in_lock")
  If Err Then Glf_821 = False
End Function
glf_funcRefMap.Add "balldevice_moon_lock_ball_entered{devices.state_machines.moon_mb.state!=""locking"" && devices.ball_devices.moon_lock.balls > current_player.multiball_lock_moon_launch_balls_locked && devices.ball_devices.moon_lock.balls > current_player.leftover_balls_in_lock}", "Glf_821"
Function Glf_822(args)
  On Error Resume Next
      Glf_822 = glf_state_machines("moon_mb").GetValue("state")="in_progress"
  If Err Then Glf_822 = False
End Function
glf_funcRefMap.Add "balldevice_moon_lock_ball_entered{devices.state_machines.moon_mb.state==""in_progress""}", "Glf_822"
Function Glf_823(args)
  On Error Resume Next
      Glf_823 = glf_ball_devices("moon_lock").GetValue("balls") > GetPlayerState("multiball_lock_moon_launch_balls_locked")
  If Err Then Glf_823 = False
End Function
glf_funcRefMap.Add "multiball_lock_moon_launch_locked_ball{devices.ball_devices.moon_lock.balls > current_player.multiball_lock_moon_launch_balls_locked}", "Glf_823"
Function Glf_824(args)
  On Error Resume Next
      Glf_824 = GetPlayerState("multiball_lock_moon_launch_balls_locked")=1
  If Err Then Glf_824 = False
End Function
glf_funcRefMap.Add "multiball_lock_moon_launch_locked_ball{current_player.multiball_lock_moon_launch_balls_locked==1}", "Glf_824"
Function Glf_825(args)
  On Error Resume Next
      Glf_825 = GetPlayerState("multiball_lock_moon_launch_balls_locked")=2
  If Err Then Glf_825 = False
End Function
glf_funcRefMap.Add "multiball_lock_moon_launch_locked_ball{current_player.multiball_lock_moon_launch_balls_locked==2}", "Glf_825"
Function Glf_826(args)
  On Error Resume Next
      Glf_826 = GetPlayerState("shot_moon_missile2") = 0
  If Err Then Glf_826 = False
End Function
glf_funcRefMap.Add "stop_meteor_wave{current_player.shot_moon_missile2 == 0}", "Glf_826"
Function Glf_827(args)
  On Error Resume Next
      Glf_827 = glf_state_machines("moon_mb").GetValue("state")="locking"
  If Err Then Glf_827 = False
End Function
glf_funcRefMap.Add "mode_moon_multiball_qualify_started{devices.state_machines.moon_mb.state==""locking""}", "Glf_827"
Function Glf_828(args)
  On Error Resume Next
      Glf_828 = GetPlayerState("ball_just_started") = 0
  If Err Then Glf_828 = False
End Function
glf_funcRefMap.Add "restart_moon_qualify_shots{current_player.ball_just_started == 0}", "Glf_828"
Function Glf_829(args)
  Glf_829 = glf_ball_devices("moon_lock").GetValue("balls")
End Function
glf_funcRefMap.Add "devices.ball_devices.moon_lock.balls", "Glf_829"
Function Glf_830(args)
  Glf_830 = "MOON"
End Function
glf_funcRefMap.Add """MOON""", "Glf_830"
Function Glf_831(args)
  Glf_831 = "LAUNCH"
End Function
glf_funcRefMap.Add """LAUNCH""", "Glf_831"
Function Glf_832(args)
  Glf_832 = "LOCK"
End Function
glf_funcRefMap.Add """LOCK""", "Glf_832"
Function Glf_833(args)
  On Error Resume Next
      Glf_833 = GetPlayerState("multiball_lock_moon_launch_balls_locked")>0 And GetPlayerState("disable_moon_launch")=0 And GetPlayerState("wizard_mode_running")=0
  If Err Then Glf_833 = False
End Function
glf_funcRefMap.Add "s_right_magna_key_active{current_player.multiball_lock_moon_launch_balls_locked>0 && current_player.disable_moon_launch==0 && current_player.wizard_mode_running==0}", "Glf_833"
Function Glf_834(args)
  On Error Resume Next
      Glf_834 = GetPlayerState("multiball_lock_moon_launch_balls_locked")=0 And GetPlayerState("disable_moon_launch")=0
  If Err Then Glf_834 = False
End Function
glf_funcRefMap.Add "s_right_magna_key_active{current_player.multiball_lock_moon_launch_balls_locked==0 && current_player.disable_moon_launch==0}", "Glf_834"
Function Glf_835(args)
  Glf_835 = 10000
End Function
glf_funcRefMap.Add "10000", "Glf_835"
Function Glf_836(args)
  Glf_836 = GetPlayerState("multiball_lock_moon_launch_balls_locked")
End Function
glf_funcRefMap.Add "current_player.multiball_lock_moon_launch_balls_locked", "Glf_836"
Function Glf_837(args)
  On Error Resume Next
      Glf_837 = GetPlayerState("wizard_mode_running") = 0
  If Err Then Glf_837 = False
End Function
glf_funcRefMap.Add "start_moon_multiball.1{current_player.wizard_mode_running == 0}", "Glf_837"
Function Glf_838(args)
  On Error Resume Next
      Glf_838 = glf_timers("double_scoring").GetValue("ticks") = 55
  If Err Then Glf_838 = False
End Function
glf_funcRefMap.Add "timer_double_scoring_tick{devices.timers.double_scoring.ticks == 55}", "Glf_838"
Function Glf_839(args)
  Glf_839 = " DOUBLE "
End Function
glf_funcRefMap.Add """ DOUBLE """, "Glf_839"
Function Glf_840(args)
  On Error Resume Next
      Glf_840 = glf_timers("super_spinner").GetValue("ticks") = 55
  If Err Then Glf_840 = False
End Function
glf_funcRefMap.Add "timer_super_spinner_tick{devices.timers.super_spinner.ticks == 55}", "Glf_840"
Function Glf_841(args)
  Glf_841 = 69
End Function
glf_funcRefMap.Add "69", "Glf_841"
Function Glf_842(args)
  On Error Resume Next
      Glf_842 = glf_timers("super_pops").GetValue("ticks") = 55
  If Err Then Glf_842 = False
End Function
glf_funcRefMap.Add "timer_super_pops_tick{devices.timers.super_pops.ticks == 55}", "Glf_842"
Function Glf_843(args)
  On Error Resume Next
      Glf_843 = GetPlayerState("ball_just_started")=1
  If Err Then Glf_843 = False
End Function
glf_funcRefMap.Add "mode_health_started{current_player.ball_just_started==1}", "Glf_843"
Function Glf_844(args)
  On Error Resume Next
      Glf_844 = GetPlayerState("training_heal_achieved")=1
  If Err Then Glf_844 = False
End Function
glf_funcRefMap.Add "mode_health_started{current_player.training_heal_achieved==1}", "Glf_844"
Function Glf_845(args)
  On Error Resume Next
      Glf_845 = GetPlayerState("health_bump_value")<9
  If Err Then Glf_845 = False
End Function
glf_funcRefMap.Add "check_add_health_bump{current_player.health_bump_value<9}", "Glf_845"
Function Glf_846(args)
  On Error Resume Next
      Glf_846 = GetPlayerState("health_bump_value")>=9
  If Err Then Glf_846 = False
End Function
glf_funcRefMap.Add "check_add_health_bump{current_player.health_bump_value>=9}", "Glf_846"
Function Glf_847(args)
  On Error Resume Next
      Glf_847 = GetPlayerState("health_value")=8
  If Err Then Glf_847 = False
End Function
glf_funcRefMap.Add "check_add_health{current_player.health_value==8}", "Glf_847"
Function Glf_848(args)
  On Error Resume Next
      Glf_848 = GetPlayerState("health_value")=7
  If Err Then Glf_848 = False
End Function
glf_funcRefMap.Add "check_add_health{current_player.health_value==7}", "Glf_848"
Function Glf_849(args)
  On Error Resume Next
      Glf_849 = GetPlayerState("health_value")=6
  If Err Then Glf_849 = False
End Function
glf_funcRefMap.Add "check_add_health{current_player.health_value==6}", "Glf_849"
Function Glf_850(args)
  On Error Resume Next
      Glf_850 = GetPlayerState("health_value")=5
  If Err Then Glf_850 = False
End Function
glf_funcRefMap.Add "check_add_health{current_player.health_value==5}", "Glf_850"
Function Glf_851(args)
  On Error Resume Next
      Glf_851 = GetPlayerState("health_value")=4
  If Err Then Glf_851 = False
End Function
glf_funcRefMap.Add "check_add_health{current_player.health_value==4}", "Glf_851"
Function Glf_852(args)
  On Error Resume Next
      Glf_852 = GetPlayerState("health_value")=3
  If Err Then Glf_852 = False
End Function
glf_funcRefMap.Add "check_add_health{current_player.health_value==3}", "Glf_852"
Function Glf_853(args)
  On Error Resume Next
      Glf_853 = GetPlayerState("health_value")=2
  If Err Then Glf_853 = False
End Function
glf_funcRefMap.Add "check_add_health{current_player.health_value==2}", "Glf_853"
Function Glf_854(args)
  On Error Resume Next
      Glf_854 = GetPlayerState("health_value")=1
  If Err Then Glf_854 = False
End Function
glf_funcRefMap.Add "check_add_health{current_player.health_value==1}", "Glf_854"
Function Glf_855(args)
  On Error Resume Next
      Glf_855 = GetPlayerState("health_value")=9
  If Err Then Glf_855 = False
End Function
glf_funcRefMap.Add "check_remove_health{current_player.health_value==9}", "Glf_855"
Function Glf_856(args)
  On Error Resume Next
      Glf_856 = GetPlayerState("health_value")=8
  If Err Then Glf_856 = False
End Function
glf_funcRefMap.Add "check_remove_health{current_player.health_value==8}", "Glf_856"
Function Glf_857(args)
  On Error Resume Next
      Glf_857 = GetPlayerState("health_value")=7
  If Err Then Glf_857 = False
End Function
glf_funcRefMap.Add "check_remove_health{current_player.health_value==7}", "Glf_857"
Function Glf_858(args)
  On Error Resume Next
      Glf_858 = GetPlayerState("health_value")=6
  If Err Then Glf_858 = False
End Function
glf_funcRefMap.Add "check_remove_health{current_player.health_value==6}", "Glf_858"
Function Glf_859(args)
  On Error Resume Next
      Glf_859 = GetPlayerState("health_value")=5
  If Err Then Glf_859 = False
End Function
glf_funcRefMap.Add "check_remove_health{current_player.health_value==5}", "Glf_859"
Function Glf_860(args)
  On Error Resume Next
      Glf_860 = GetPlayerState("health_value")=4
  If Err Then Glf_860 = False
End Function
glf_funcRefMap.Add "check_remove_health{current_player.health_value==4}", "Glf_860"
Function Glf_861(args)
  On Error Resume Next
      Glf_861 = GetPlayerState("health_value")=3
  If Err Then Glf_861 = False
End Function
glf_funcRefMap.Add "check_remove_health{current_player.health_value==3}", "Glf_861"
Function Glf_862(args)
  On Error Resume Next
      Glf_862 = GetPlayerState("health_value")=2
  If Err Then Glf_862 = False
End Function
glf_funcRefMap.Add "check_remove_health{current_player.health_value==2}", "Glf_862"
Function Glf_863(args)
  On Error Resume Next
      Glf_863 = GetPlayerState("health_value")=1
  If Err Then Glf_863 = False
End Function
glf_funcRefMap.Add "check_remove_health{current_player.health_value==1}", "Glf_863"
Function Glf_864(args)
  On Error Resume Next
      Glf_864 = GetPlayerState("health_value")>0
  If Err Then Glf_864 = False
End Function
glf_funcRefMap.Add "earth_hit{current_player.health_value>0}", "Glf_864"
Function Glf_865(args)
  On Error Resume Next
      Glf_865 = GetPlayerState("shot_proton_charge1")=0
  If Err Then Glf_865 = False
End Function
glf_funcRefMap.Add "mode_proton_cannon_started{current_player.shot_proton_charge1==0}", "Glf_865"
Function Glf_866(args)
  On Error Resume Next
      Glf_866 = GetPlayerState("training_proton_cannon_achieved")=1
  If Err Then Glf_866 = False
End Function
glf_funcRefMap.Add "mode_proton_cannon_started{current_player.training_proton_cannon_achieved==1}", "Glf_866"
Function Glf_867(args)
  On Error Resume Next
      Glf_867 = GetPlayerState("training_proton_cannon_achieved")=0
  If Err Then Glf_867 = False
End Function
glf_funcRefMap.Add "reset_proton_charges{current_player.training_proton_cannon_achieved==0}", "Glf_867"
Function Glf_868(args)
  On Error Resume Next
      Glf_868 = GetPlayerState("training_proton_cannon_achieved")=1
  If Err Then Glf_868 = False
End Function
glf_funcRefMap.Add "reset_proton_charges{current_player.training_proton_cannon_achieved==1}", "Glf_868"
Function Glf_869(args)
  On Error Resume Next
      Glf_869 = GetPlayerState("shot_proton_charge1") = 1
  If Err Then Glf_869 = False
End Function
glf_funcRefMap.Add "inner_orbit_hit{current_player.shot_proton_charge1 == 1}", "Glf_869"
Function Glf_870(args)
  On Error Resume Next
      Glf_870 = GetPlayerState("shot_proton_charge1") = 2 And GetPlayerState("shot_proton_charge2") = 1
  If Err Then Glf_870 = False
End Function
glf_funcRefMap.Add "inner_orbit_hit{current_player.shot_proton_charge1 == 2 && current_player.shot_proton_charge2 == 1}", "Glf_870"
Function Glf_871(args)
  On Error Resume Next
      Glf_871 = GetPlayerState("shot_proton_charge2") = 2 And GetPlayerState("shot_proton_charge3") = 1
  If Err Then Glf_871 = False
End Function
glf_funcRefMap.Add "inner_orbit_hit{current_player.shot_proton_charge2 == 2 && current_player.shot_proton_charge3 == 1}", "Glf_871"
Function Glf_872(args)
  On Error Resume Next
      Glf_872 = GetPlayerState("shot_proton_round1") = 0
  If Err Then Glf_872 = False
End Function
glf_funcRefMap.Add "light_proton_charge3{current_player.shot_proton_round1 == 0}", "Glf_872"
Function Glf_873(args)
  On Error Resume Next
      Glf_873 = GetPlayerState("shot_proton_round1") = 1 And GetPlayerState("shot_proton_round2") = 0
  If Err Then Glf_873 = False
End Function
glf_funcRefMap.Add "light_proton_charge3{current_player.shot_proton_round1 == 1 && current_player.shot_proton_round2 == 0}", "Glf_873"
Function Glf_874(args)
  On Error Resume Next
      Glf_874 = GetPlayerState("shot_proton_round2") = 1 And GetPlayerState("shot_proton_round3") = 0
  If Err Then Glf_874 = False
End Function
glf_funcRefMap.Add "light_proton_charge3{current_player.shot_proton_round2 == 1 && current_player.shot_proton_round3 == 0}", "Glf_874"
Function Glf_875(args)
  On Error Resume Next
      Glf_875 = GetPlayerState("shot_proton_round3") = 1 And GetPlayerState("shot_proton_round4") = 0
  If Err Then Glf_875 = False
End Function
glf_funcRefMap.Add "light_proton_charge3{current_player.shot_proton_round3 == 1 && current_player.shot_proton_round4 == 0}", "Glf_875"
Function Glf_876(args)
  On Error Resume Next
      Glf_876 = GetPlayerState("shot_proton_round4") = 1 And GetPlayerState("shot_proton_round5") = 0
  If Err Then Glf_876 = False
End Function
glf_funcRefMap.Add "light_proton_charge3{current_player.shot_proton_round4 == 1 && current_player.shot_proton_round5 == 0}", "Glf_876"
Function Glf_877(args)
  On Error Resume Next
      Glf_877 = GetPlayerState("shot_proton_round5") = 1 And GetPlayerState("shot_proton_round6") = 0
  If Err Then Glf_877 = False
End Function
glf_funcRefMap.Add "light_proton_charge3{current_player.shot_proton_round5 == 1 && current_player.shot_proton_round6 == 0}", "Glf_877"
Function Glf_878(args)
  Glf_878 = "PROTON"
End Function
glf_funcRefMap.Add """PROTON""", "Glf_878"
Function Glf_879(args)
  On Error Resume Next
      Glf_879 = GetPlayerState("shot_cluster_charge1")=0
  If Err Then Glf_879 = False
End Function
glf_funcRefMap.Add "mode_cluster_bombs_started{current_player.shot_cluster_charge1==0}", "Glf_879"
Function Glf_880(args)
  On Error Resume Next
      Glf_880 = GetPlayerState("training_cluster_bomb_achieved")=1
  If Err Then Glf_880 = False
End Function
glf_funcRefMap.Add "mode_cluster_bombs_started{current_player.training_cluster_bomb_achieved==1}", "Glf_880"
Function Glf_881(args)
  On Error Resume Next
      Glf_881 = GetPlayerState("training_cluster_bomb_achieved")=0
  If Err Then Glf_881 = False
End Function
glf_funcRefMap.Add "reset_cluster_charges{current_player.training_cluster_bomb_achieved==0}", "Glf_881"
Function Glf_882(args)
  On Error Resume Next
      Glf_882 = GetPlayerState("training_cluster_bomb_achieved")=1
  If Err Then Glf_882 = False
End Function
glf_funcRefMap.Add "reset_cluster_charges{current_player.training_cluster_bomb_achieved==1}", "Glf_882"
Function Glf_883(args)
  On Error Resume Next
      Glf_883 = GetPlayerState("shot_cluster_bomb1") = 1
  If Err Then Glf_883 = False
End Function
glf_funcRefMap.Add "mode_cluster_bombs_started{current_player.shot_cluster_bomb1 == 1}", "Glf_883"
Function Glf_884(args)
  On Error Resume Next
      Glf_884 = GetPlayerState("shot_cluster_charge1") = 1
  If Err Then Glf_884 = False
End Function
glf_funcRefMap.Add "left_orbit_hit{current_player.shot_cluster_charge1 == 1}", "Glf_884"
Function Glf_885(args)
  On Error Resume Next
      Glf_885 = GetPlayerState("shot_cluster_charge1") = 2 And GetPlayerState("shot_cluster_charge2") = 1
  If Err Then Glf_885 = False
End Function
glf_funcRefMap.Add "left_orbit_hit{current_player.shot_cluster_charge1 == 2 && current_player.shot_cluster_charge2 == 1}", "Glf_885"
Function Glf_886(args)
  On Error Resume Next
      Glf_886 = GetPlayerState("shot_cluster_charge2") = 2 And GetPlayerState("shot_cluster_charge3") = 1
  If Err Then Glf_886 = False
End Function
glf_funcRefMap.Add "left_orbit_hit{current_player.shot_cluster_charge2 == 2 && current_player.shot_cluster_charge3 == 1}", "Glf_886"
Function Glf_887(args)
  On Error Resume Next
      Glf_887 = GetPlayerState("shot_cluster_bomb1") = 0
  If Err Then Glf_887 = False
End Function
glf_funcRefMap.Add "light_cluster_charge3{current_player.shot_cluster_bomb1 == 0}", "Glf_887"
Function Glf_888(args)
  On Error Resume Next
      Glf_888 = GetPlayerState("shot_cluster_bomb1") = 1 And GetPlayerState("shot_cluster_bomb2") = 0
  If Err Then Glf_888 = False
End Function
glf_funcRefMap.Add "light_cluster_charge3{current_player.shot_cluster_bomb1 == 1 && current_player.shot_cluster_bomb2 == 0}", "Glf_888"
Function Glf_889(args)
  On Error Resume Next
      Glf_889 = GetPlayerState("shot_cluster_bomb1") = 1 And GetPlayerState("shot_cluster_bomb2") = 0
  If Err Then Glf_889 = False
End Function
glf_funcRefMap.Add "s_left_magna_key_active{current_player.shot_cluster_bomb1 == 1 && current_player.shot_cluster_bomb2 == 0}", "Glf_889"
Function Glf_890(args)
  On Error Resume Next
      Glf_890 = GetPlayerState("shot_cluster_bomb2") = 1
  If Err Then Glf_890 = False
End Function
glf_funcRefMap.Add "s_left_magna_key_active{current_player.shot_cluster_bomb2 == 1}", "Glf_890"
Function Glf_891(args)
  On Error Resume Next
      Glf_891 = GetPlayerState("shot_cluster_bomb1") = 0
  If Err Then Glf_891 = False
End Function
glf_funcRefMap.Add "s_left_magna_key_active{current_player.shot_cluster_bomb1 == 0}", "Glf_891"
Function Glf_892(args)
  On Error Resume Next
      Glf_892 = GetPlayerState("num_training_shots_hit") = GetPlayerState("num_training_shots")
  If Err Then Glf_892 = False
End Function
glf_funcRefMap.Add "mode_training_qualify_started{current_player.num_training_shots_hit == current_player.num_training_shots}", "Glf_892"
Function Glf_893(args)
  On Error Resume Next
      Glf_893 = GetPlayerState("training_just_finished") = 1
  If Err Then Glf_893 = False
End Function
glf_funcRefMap.Add "mode_training_qualify_started{current_player.training_just_finished == 1}", "Glf_893"
Function Glf_894(args)
  On Error Resume Next
      Glf_894 = GetPlayerState("training_total_achieved") < 6
  If Err Then Glf_894 = False
End Function
glf_funcRefMap.Add "restart_qualify_training{current_player.training_total_achieved < 6}", "Glf_894"
Function Glf_895(args)
  On Error Resume Next
      Glf_895 = GetPlayerState("training_total_achieved") = 3
  If Err Then Glf_895 = False
End Function
glf_funcRefMap.Add "restart_qualify_training{current_player.training_total_achieved == 3}", "Glf_895"
Function Glf_896(args)
  On Error Resume Next
      Glf_896 = GetPlayerState("shot_training_shot1") = 1
  If Err Then Glf_896 = False
End Function
glf_funcRefMap.Add "left_side_hit{current_player.shot_training_shot1 == 1}", "Glf_896"
Function Glf_897(args)
  On Error Resume Next
      Glf_897 = GetPlayerState("shot_training_shot2") = 1
  If Err Then Glf_897 = False
End Function
glf_funcRefMap.Add "left_orbit_hit{current_player.shot_training_shot2 == 1}", "Glf_897"
Function Glf_898(args)
  On Error Resume Next
      Glf_898 = GetPlayerState("shot_training_shot3") = 1
  If Err Then Glf_898 = False
End Function
glf_funcRefMap.Add "left_ramp_hit{current_player.shot_training_shot3 == 1}", "Glf_898"
Function Glf_899(args)
  On Error Resume Next
      Glf_899 = GetPlayerState("shot_training_shot4") = 1
  If Err Then Glf_899 = False
End Function
glf_funcRefMap.Add "inner_orbit_hit{current_player.shot_training_shot4 == 1}", "Glf_899"
Function Glf_900(args)
  On Error Resume Next
      Glf_900 = GetPlayerState("shot_training_shot5") = 1
  If Err Then Glf_900 = False
End Function
glf_funcRefMap.Add "center_orbit_left_hit{current_player.shot_training_shot5 == 1}", "Glf_900"
Function Glf_901(args)
  On Error Resume Next
      Glf_901 = GetPlayerState("shot_training_shot6") = 1
  If Err Then Glf_901 = False
End Function
glf_funcRefMap.Add "center_orbit_right_hit{current_player.shot_training_shot6 == 1}", "Glf_901"
Function Glf_902(args)
  On Error Resume Next
      Glf_902 = GetPlayerState("shot_training_shot7") = 1
  If Err Then Glf_902 = False
End Function
glf_funcRefMap.Add "right_ramp_hit{current_player.shot_training_shot7 == 1}", "Glf_902"
Function Glf_903(args)
  On Error Resume Next
      Glf_903 = GetPlayerState("shot_training_shot8") = 1
  If Err Then Glf_903 = False
End Function
glf_funcRefMap.Add "right_orbit_hit{current_player.shot_training_shot8 == 1}", "Glf_903"
Function Glf_904(args)
  On Error Resume Next
      Glf_904 = GetPlayerState("num_training_shots_hit") = GetPlayerState("num_training_shots")
  If Err Then Glf_904 = False
End Function
glf_funcRefMap.Add "check_training_qualify{current_player.num_training_shots_hit == current_player.num_training_shots}", "Glf_904"
Function Glf_905(args)
  On Error Resume Next
      Glf_905 = GetPlayerState("shot_training_ready") = 1 And GetPlayerState("wizard_mode_is_ready")=0 And GetPlayerState("flippers_are_dead")=0
  If Err Then Glf_905 = False
End Function
glf_funcRefMap.Add "s_Scoop_active{current_player.shot_training_ready == 1 && current_player.wizard_mode_is_ready==0 && current_player.flippers_are_dead==0}", "Glf_905"
Function Glf_906(args)
  On Error Resume Next
      Glf_906 = GetPlayerState("shot_training_ready")=1 And GetPlayerState("flippers_are_dead")=0
  If Err Then Glf_906 = False
End Function
glf_funcRefMap.Add "check_training{current_player.shot_training_ready==1 && current_player.flippers_are_dead==0}", "Glf_906"
Function Glf_907(args)
  On Error Resume Next
      Glf_907 = GetPlayerState("shot_training_ready") = 0
  If Err Then Glf_907 = False
End Function
glf_funcRefMap.Add "ss_trainer_ready{current_player.shot_training_ready == 0}", "Glf_907"
Function Glf_908(args)
  On Error Resume Next
      Glf_908 = GetPlayerState("shot_training_shot1") = 0
  If Err Then Glf_908 = False
End Function
glf_funcRefMap.Add "left_side_training_on{current_player.shot_training_shot1 == 0}", "Glf_908"
Function Glf_909(args)
  On Error Resume Next
      Glf_909 = GetPlayerState("shot_training_shot2") = 0
  If Err Then Glf_909 = False
End Function
glf_funcRefMap.Add "left_orbit_training_on{current_player.shot_training_shot2 == 0}", "Glf_909"
Function Glf_910(args)
  On Error Resume Next
      Glf_910 = GetPlayerState("shot_training_shot3") = 0
  If Err Then Glf_910 = False
End Function
glf_funcRefMap.Add "left_ramp_training_on{current_player.shot_training_shot3 == 0}", "Glf_910"
Function Glf_911(args)
  On Error Resume Next
      Glf_911 = GetPlayerState("shot_training_shot4") = 0
  If Err Then Glf_911 = False
End Function
glf_funcRefMap.Add "inner_orbit_training_on{current_player.shot_training_shot4 == 0}", "Glf_911"
Function Glf_912(args)
  On Error Resume Next
      Glf_912 = GetPlayerState("shot_training_shot5") = 0
  If Err Then Glf_912 = False
End Function
glf_funcRefMap.Add "center_orbit_left_training_on{current_player.shot_training_shot5 == 0}", "Glf_912"
Function Glf_913(args)
  On Error Resume Next
      Glf_913 = GetPlayerState("shot_training_shot6") = 0
  If Err Then Glf_913 = False
End Function
glf_funcRefMap.Add "center_orbit_right_training_on{current_player.shot_training_shot6 == 0}", "Glf_913"
Function Glf_914(args)
  On Error Resume Next
      Glf_914 = GetPlayerState("shot_training_shot7") = 0
  If Err Then Glf_914 = False
End Function
glf_funcRefMap.Add "right_ramp_training_on{current_player.shot_training_shot7 == 0}", "Glf_914"
Function Glf_915(args)
  On Error Resume Next
      Glf_915 = GetPlayerState("shot_training_shot8") = 0
  If Err Then Glf_915 = False
End Function
glf_funcRefMap.Add "right_orbit_training_on{current_player.shot_training_shot8 == 0}", "Glf_915"
Function Glf_916(args)
  Glf_916 = GetPlayerState("num_training_shots")
End Function
glf_funcRefMap.Add "current_player.num_training_shots", "Glf_916"
Function Glf_917(args)
  On Error Resume Next
      Glf_917 = GetPlayerState("num_training_shots") < 8
  If Err Then Glf_917 = False
End Function
glf_funcRefMap.Add "training_shots_completed{current_player.num_training_shots < 8}", "Glf_917"
Function Glf_918(args)
  Glf_918 = "START"
End Function
glf_funcRefMap.Add """START""", "Glf_918"
Function Glf_919(args)
  On Error Resume Next
      Glf_919 = glf_timers("training_select").GetValue("ticks") = 7
  If Err Then Glf_919 = False
End Function
glf_funcRefMap.Add "timer_training_select_tick{devices.timers.training_select.ticks == 7}", "Glf_919"
Function Glf_920(args)
  On Error Resume Next
      Glf_920 = glf_state_machines("training_select").GetValue("state")="heal"
  If Err Then Glf_920 = False
End Function
glf_funcRefMap.Add "make_selection{devices.state_machines.training_select.state==""heal""}", "Glf_920"
Function Glf_921(args)
  On Error Resume Next
      Glf_921 = glf_state_machines("training_select").GetValue("state")="cluster_bomb"
  If Err Then Glf_921 = False
End Function
glf_funcRefMap.Add "make_selection{devices.state_machines.training_select.state==""cluster_bomb""}", "Glf_921"
Function Glf_922(args)
  On Error Resume Next
      Glf_922 = glf_state_machines("training_select").GetValue("state")="proton_cannon"
  If Err Then Glf_922 = False
End Function
glf_funcRefMap.Add "make_selection{devices.state_machines.training_select.state==""proton_cannon""}", "Glf_922"
Function Glf_923(args)
  On Error Resume Next
      Glf_923 = glf_state_machines("training_select").GetValue("state")="moon_missile"
  If Err Then Glf_923 = False
End Function
glf_funcRefMap.Add "make_selection{devices.state_machines.training_select.state==""moon_missile""}", "Glf_923"
Function Glf_924(args)
  On Error Resume Next
      Glf_924 = glf_state_machines("training_select").GetValue("state")="ship_save"
  If Err Then Glf_924 = False
End Function
glf_funcRefMap.Add "make_selection{devices.state_machines.training_select.state==""ship_save""}", "Glf_924"
Function Glf_925(args)
  On Error Resume Next
      Glf_925 = glf_state_machines("training_select").GetValue("state")="shields"
  If Err Then Glf_925 = False
End Function
glf_funcRefMap.Add "make_selection{devices.state_machines.training_select.state==""shields""}", "Glf_925"
Function Glf_926(args)
  On Error Resume Next
      Glf_926 = glf_state_machines("training_select").GetValue("state")="skip"
  If Err Then Glf_926 = False
End Function
glf_funcRefMap.Add "make_selection{devices.state_machines.training_select.state==""skip""}", "Glf_926"
Function Glf_927(args)
  On Error Resume Next
      Glf_927 = glf_ball_devices("moon_lock").GetValue("balls") > GetPlayerState("multiball_lock_moon_launch_balls_locked")
  If Err Then Glf_927 = False
End Function
glf_funcRefMap.Add "balldevice_moon_lock_ball_enter{devices.ball_devices.moon_lock.balls > current_player.multiball_lock_moon_launch_balls_locked}", "Glf_927"
Function Glf_928(args)
  Glf_928 = "right"
End Function
glf_funcRefMap.Add """right""", "Glf_928"
Function Glf_929(args)
  Glf_929 = "left"
End Function
glf_funcRefMap.Add """left""", "Glf_929"
Function Glf_930(args)
  On Error Resume Next
      Glf_930 = GetPlayerState("ts_hurry_up")=0
  If Err Then Glf_930 = False
End Function
glf_funcRefMap.Add "heal_selected{current_player.ts_hurry_up==0}", "Glf_930"
Function Glf_931(args)
  On Error Resume Next
      Glf_931 = GetPlayerState("ts_hurry_up")=1
  If Err Then Glf_931 = False
End Function
glf_funcRefMap.Add "heal_selected{current_player.ts_hurry_up==1}", "Glf_931"
Function Glf_932(args)
  On Error Resume Next
      Glf_932 = glf_state_machines("training_select").GetValue("state")="heal"
  If Err Then Glf_932 = False
End Function
glf_funcRefMap.Add "selection_hurry_up{devices.state_machines.training_select.state==""heal""}", "Glf_932"
Function Glf_933(args)
  On Error Resume Next
      Glf_933 = GetPlayerState("ts_hurry_up")=0
  If Err Then Glf_933 = False
End Function
glf_funcRefMap.Add "cluster_bomb_selected{current_player.ts_hurry_up==0}", "Glf_933"
Function Glf_934(args)
  On Error Resume Next
      Glf_934 = GetPlayerState("ts_hurry_up")=1
  If Err Then Glf_934 = False
End Function
glf_funcRefMap.Add "cluster_bomb_selected{current_player.ts_hurry_up==1}", "Glf_934"
Function Glf_935(args)
  On Error Resume Next
      Glf_935 = glf_state_machines("training_select").GetValue("state")="cluster_bomb"
  If Err Then Glf_935 = False
End Function
glf_funcRefMap.Add "selection_hurry_up{devices.state_machines.training_select.state==""cluster_bomb""}", "Glf_935"
Function Glf_936(args)
  On Error Resume Next
      Glf_936 = GetPlayerState("ts_hurry_up")=0
  If Err Then Glf_936 = False
End Function
glf_funcRefMap.Add "proton_cannon_selected{current_player.ts_hurry_up==0}", "Glf_936"
Function Glf_937(args)
  On Error Resume Next
      Glf_937 = GetPlayerState("ts_hurry_up")=1
  If Err Then Glf_937 = False
End Function
glf_funcRefMap.Add "proton_cannon_selected{current_player.ts_hurry_up==1}", "Glf_937"
Function Glf_938(args)
  On Error Resume Next
      Glf_938 = glf_state_machines("training_select").GetValue("state")="proton_cannon"
  If Err Then Glf_938 = False
End Function
glf_funcRefMap.Add "selection_hurry_up{devices.state_machines.training_select.state==""proton_cannon""}", "Glf_938"
Function Glf_939(args)
  On Error Resume Next
      Glf_939 = GetPlayerState("ts_hurry_up")=0
  If Err Then Glf_939 = False
End Function
glf_funcRefMap.Add "moon_missile_selected{current_player.ts_hurry_up==0}", "Glf_939"
Function Glf_940(args)
  On Error Resume Next
      Glf_940 = GetPlayerState("ts_hurry_up")=1
  If Err Then Glf_940 = False
End Function
glf_funcRefMap.Add "moon_missile_selected{current_player.ts_hurry_up==1}", "Glf_940"
Function Glf_941(args)
  On Error Resume Next
      Glf_941 = glf_state_machines("training_select").GetValue("state")="moon_missile"
  If Err Then Glf_941 = False
End Function
glf_funcRefMap.Add "selection_hurry_up{devices.state_machines.training_select.state==""moon_missile""}", "Glf_941"
Function Glf_942(args)
  On Error Resume Next
      Glf_942 = GetPlayerState("ts_hurry_up")=0
  If Err Then Glf_942 = False
End Function
glf_funcRefMap.Add "ship_save_selected{current_player.ts_hurry_up==0}", "Glf_942"
Function Glf_943(args)
  On Error Resume Next
      Glf_943 = GetPlayerState("ts_hurry_up")=1
  If Err Then Glf_943 = False
End Function
glf_funcRefMap.Add "ship_save_selected{current_player.ts_hurry_up==1}", "Glf_943"
Function Glf_944(args)
  On Error Resume Next
      Glf_944 = glf_state_machines("training_select").GetValue("state")="ship_save"
  If Err Then Glf_944 = False
End Function
glf_funcRefMap.Add "selection_hurry_up{devices.state_machines.training_select.state==""ship_save""}", "Glf_944"
Function Glf_945(args)
  On Error Resume Next
      Glf_945 = GetPlayerState("ts_hurry_up")=0
  If Err Then Glf_945 = False
End Function
glf_funcRefMap.Add "shields_selected{current_player.ts_hurry_up==0}", "Glf_945"
Function Glf_946(args)
  On Error Resume Next
      Glf_946 = GetPlayerState("ts_hurry_up")=1
  If Err Then Glf_946 = False
End Function
glf_funcRefMap.Add "shields_selected{current_player.ts_hurry_up==1}", "Glf_946"
Function Glf_947(args)
  On Error Resume Next
      Glf_947 = glf_state_machines("training_select").GetValue("state")="shields"
  If Err Then Glf_947 = False
End Function
glf_funcRefMap.Add "selection_hurry_up{devices.state_machines.training_select.state==""shields""}", "Glf_947"
Function Glf_948(args)
  On Error Resume Next
      Glf_948 = GetPlayerState("ts_last_move")="left" And GetPlayerState("training_heal_achieved")=1
  If Err Then Glf_948 = False
End Function
glf_funcRefMap.Add "training_select_left{current_player.ts_last_move==""left"" && current_player.training_heal_achieved==1}", "Glf_948"
Function Glf_949(args)
  On Error Resume Next
      Glf_949 = GetPlayerState("ts_last_move")="right" And GetPlayerState("training_heal_achieved")=1
  If Err Then Glf_949 = False
End Function
glf_funcRefMap.Add "training_select_right{current_player.ts_last_move==""right"" && current_player.training_heal_achieved==1}", "Glf_949"
Function Glf_950(args)
  On Error Resume Next
      Glf_950 = GetPlayerState("ts_last_move")="left" And GetPlayerState("training_cluster_bomb_achieved")=1
  If Err Then Glf_950 = False
End Function
glf_funcRefMap.Add "training_select_left{current_player.ts_last_move==""left"" && current_player.training_cluster_bomb_achieved==1}", "Glf_950"
Function Glf_951(args)
  On Error Resume Next
      Glf_951 = GetPlayerState("ts_last_move")="right" And GetPlayerState("training_cluster_bomb_achieved")=1
  If Err Then Glf_951 = False
End Function
glf_funcRefMap.Add "training_select_right{current_player.ts_last_move==""right"" && current_player.training_cluster_bomb_achieved==1}", "Glf_951"
Function Glf_952(args)
  On Error Resume Next
      Glf_952 = GetPlayerState("ts_last_move")="left" And GetPlayerState("training_proton_cannon_achieved")=1
  If Err Then Glf_952 = False
End Function
glf_funcRefMap.Add "training_select_left{current_player.ts_last_move==""left"" && current_player.training_proton_cannon_achieved==1}", "Glf_952"
Function Glf_953(args)
  On Error Resume Next
      Glf_953 = GetPlayerState("ts_last_move")="right" And GetPlayerState("training_proton_cannon_achieved")=1
  If Err Then Glf_953 = False
End Function
glf_funcRefMap.Add "training_select_right{current_player.ts_last_move==""right"" && current_player.training_proton_cannon_achieved==1}", "Glf_953"
Function Glf_954(args)
  On Error Resume Next
      Glf_954 = GetPlayerState("ts_last_move")="left" And GetPlayerState("training_moon_missile_achieved")=1
  If Err Then Glf_954 = False
End Function
glf_funcRefMap.Add "training_select_left{current_player.ts_last_move==""left"" && current_player.training_moon_missile_achieved==1}", "Glf_954"
Function Glf_955(args)
  On Error Resume Next
      Glf_955 = GetPlayerState("ts_last_move")="right" And GetPlayerState("training_moon_missile_achieved")=1
  If Err Then Glf_955 = False
End Function
glf_funcRefMap.Add "training_select_right{current_player.ts_last_move==""right"" && current_player.training_moon_missile_achieved==1}", "Glf_955"
Function Glf_956(args)
  On Error Resume Next
      Glf_956 = GetPlayerState("ts_last_move")="left" And GetPlayerState("training_ship_save_achieved")=1
  If Err Then Glf_956 = False
End Function
glf_funcRefMap.Add "training_select_left{current_player.ts_last_move==""left"" && current_player.training_ship_save_achieved==1}", "Glf_956"
Function Glf_957(args)
  On Error Resume Next
      Glf_957 = GetPlayerState("ts_last_move")="right" And GetPlayerState("training_ship_save_achieved")=1
  If Err Then Glf_957 = False
End Function
glf_funcRefMap.Add "training_select_right{current_player.ts_last_move==""right"" && current_player.training_ship_save_achieved==1}", "Glf_957"
Function Glf_958(args)
  On Error Resume Next
      Glf_958 = GetPlayerState("ts_last_move")="left" And GetPlayerState("training_shields_achieved")=1
  If Err Then Glf_958 = False
End Function
glf_funcRefMap.Add "training_select_left{current_player.ts_last_move==""left"" && current_player.training_shields_achieved==1}", "Glf_958"
Function Glf_959(args)
  On Error Resume Next
      Glf_959 = GetPlayerState("ts_last_move")="right" And GetPlayerState("training_shields_achieved")=1
  If Err Then Glf_959 = False
End Function
glf_funcRefMap.Add "training_select_right{current_player.ts_last_move==""right"" && current_player.training_shields_achieved==1}", "Glf_959"
Function Glf_960(args)
  Glf_960 = "SELECT"
End Function
glf_funcRefMap.Add """SELECT""", "Glf_960"
Function Glf_961(args)
  On Error Resume Next
      Glf_961 = GetPlayerState("training_heal_achieved")=0
  If Err Then Glf_961 = False
End Function
glf_funcRefMap.Add "heal_selected{current_player.training_heal_achieved==0}", "Glf_961"
Function Glf_962(args)
  Glf_962 = "HEAL "
End Function
glf_funcRefMap.Add """HEAL """, "Glf_962"
Function Glf_963(args)
  On Error Resume Next
      Glf_963 = GetPlayerState("training_cluster_bomb_achieved")=0
  If Err Then Glf_963 = False
End Function
glf_funcRefMap.Add "cluster_bomb_selected{current_player.training_cluster_bomb_achieved==0}", "Glf_963"
Function Glf_964(args)
  On Error Resume Next
      Glf_964 = GetPlayerState("training_proton_cannon_achieved")=0
  If Err Then Glf_964 = False
End Function
glf_funcRefMap.Add "proton_cannon_selected{current_player.training_proton_cannon_achieved==0}", "Glf_964"
Function Glf_965(args)
  On Error Resume Next
      Glf_965 = GetPlayerState("training_moon_missile_achieved")=0
  If Err Then Glf_965 = False
End Function
glf_funcRefMap.Add "moon_missile_selected{current_player.training_moon_missile_achieved==0}", "Glf_965"
Function Glf_966(args)
  Glf_966 = "MOON "
End Function
glf_funcRefMap.Add """MOON """, "Glf_966"
Function Glf_967(args)
  On Error Resume Next
      Glf_967 = GetPlayerState("training_ship_save_achieved")=0
  If Err Then Glf_967 = False
End Function
glf_funcRefMap.Add "ship_save_selected{current_player.training_ship_save_achieved==0}", "Glf_967"
Function Glf_968(args)
  Glf_968 = "SAVER "
End Function
glf_funcRefMap.Add """SAVER """, "Glf_968"
Function Glf_969(args)
  On Error Resume Next
      Glf_969 = GetPlayerState("training_shields_achieved")=0
  If Err Then Glf_969 = False
End Function
glf_funcRefMap.Add "shields_selected{current_player.training_shields_achieved==0}", "Glf_969"
Function Glf_970(args)
  Glf_970 = "SKIP "
End Function
glf_funcRefMap.Add """SKIP """, "Glf_970"
Function Glf_971(args)
  On Error Resume Next
      Glf_971 = GetPlayerState("training_health_bump_value")<3
  If Err Then Glf_971 = False
End Function
glf_funcRefMap.Add "check_add_training_health_bump{current_player.training_health_bump_value<3}", "Glf_971"
Function Glf_972(args)
  On Error Resume Next
      Glf_972 = GetPlayerState("training_health_bump_value")>=3
  If Err Then Glf_972 = False
End Function
glf_funcRefMap.Add "check_add_training_health_bump{current_player.training_health_bump_value>=3}", "Glf_972"
Function Glf_973(args)
  On Error Resume Next
      Glf_973 = GetPlayerState("shot_training_health1") = 0
  If Err Then Glf_973 = False
End Function
glf_funcRefMap.Add "check_add_training_health{current_player.shot_training_health1 == 0}", "Glf_973"
Function Glf_974(args)
  On Error Resume Next
      Glf_974 = GetPlayerState("shot_training_health1") = 1 And GetPlayerState("shot_training_health2") = 0
  If Err Then Glf_974 = False
End Function
glf_funcRefMap.Add "check_add_training_health{current_player.shot_training_health1 == 1 && current_player.shot_training_health2 == 0}", "Glf_974"
Function Glf_975(args)
  On Error Resume Next
      Glf_975 = GetPlayerState("shot_training_health2") = 1 And GetPlayerState("shot_training_health3") = 0
  If Err Then Glf_975 = False
End Function
glf_funcRefMap.Add "check_add_training_health{current_player.shot_training_health2 == 1 && current_player.shot_training_health3 == 0}", "Glf_975"
Function Glf_976(args)
  On Error Resume Next
      Glf_976 = GetPlayerState("shot_training_health3") = 1 And GetPlayerState("shot_training_health4") = 0
  If Err Then Glf_976 = False
End Function
glf_funcRefMap.Add "check_add_training_health{current_player.shot_training_health3 == 1 && current_player.shot_training_health4 == 0}", "Glf_976"
Function Glf_977(args)
  On Error Resume Next
      Glf_977 = GetPlayerState("shot_training_health4") = 1 And GetPlayerState("shot_training_health5") = 0
  If Err Then Glf_977 = False
End Function
glf_funcRefMap.Add "check_add_training_health{current_player.shot_training_health4 == 1 && current_player.shot_training_health5 == 0}", "Glf_977"
Function Glf_978(args)
  On Error Resume Next
      Glf_978 = GetPlayerState("shot_training_health5") = 1 And GetPlayerState("shot_training_health6") = 0
  If Err Then Glf_978 = False
End Function
glf_funcRefMap.Add "check_add_training_health{current_player.shot_training_health5 == 1 && current_player.shot_training_health6 == 0}", "Glf_978"
Function Glf_979(args)
  On Error Resume Next
      Glf_979 = GetPlayerState("shot_training_health6") = 1 And GetPlayerState("shot_training_health7") = 0
  If Err Then Glf_979 = False
End Function
glf_funcRefMap.Add "check_add_training_health{current_player.shot_training_health6 == 1 && current_player.shot_training_health7 == 0}", "Glf_979"
Function Glf_980(args)
  On Error Resume Next
      Glf_980 = GetPlayerState("shot_training_health7") = 1 And GetPlayerState("shot_training_health8") = 0
  If Err Then Glf_980 = False
End Function
glf_funcRefMap.Add "check_add_training_health{current_player.shot_training_health7 == 1 && current_player.shot_training_health8 == 0}", "Glf_980"
Function Glf_981(args)
  On Error Resume Next
      Glf_981 = GetPlayerState("shot_training_health8") = 1 And GetPlayerState("shot_training_health9") = 0
  If Err Then Glf_981 = False
End Function
glf_funcRefMap.Add "check_add_training_health{current_player.shot_training_health8 == 1 && current_player.shot_training_health9 == 0}", "Glf_981"
Function Glf_982(args)
  On Error Resume Next
      Glf_982 = GetPlayerState("training_heal_achieved")=0
  If Err Then Glf_982 = False
End Function
glf_funcRefMap.Add "mode_training_heal_stopping{current_player.training_heal_achieved==0}", "Glf_982"
Function Glf_983(args)
  Glf_983 = "TRAIN "
End Function
glf_funcRefMap.Add """TRAIN """, "Glf_983"
Function Glf_984(args)
  Glf_984 = Glf_FormatValue(glf_timers("training_heal").GetValue("ticks"), "0>2")
End Function
glf_funcRefMap.Add "{devices.timers.training_heal.ticks:0>2}", "Glf_984"
Function Glf_985(args)
  On Error Resume Next
      Glf_985 = GetPlayerState("shot_training_cluster_charge1") = 0
  If Err Then Glf_985 = False
End Function
glf_funcRefMap.Add "left_orbit_hit{current_player.shot_training_cluster_charge1 == 0}", "Glf_985"
Function Glf_986(args)
  On Error Resume Next
      Glf_986 = GetPlayerState("shot_training_cluster_charge1") = 1 And GetPlayerState("shot_training_cluster_charge2") = 0
  If Err Then Glf_986 = False
End Function
glf_funcRefMap.Add "left_orbit_hit{current_player.shot_training_cluster_charge1 == 1 && current_player.shot_training_cluster_charge2 == 0}", "Glf_986"
Function Glf_987(args)
  On Error Resume Next
      Glf_987 = GetPlayerState("shot_training_cluster_charge2") = 1 And GetPlayerState("shot_training_cluster_charge3") = 0
  If Err Then Glf_987 = False
End Function
glf_funcRefMap.Add "left_orbit_hit{current_player.shot_training_cluster_charge2 == 1 && current_player.shot_training_cluster_charge3 == 0}", "Glf_987"
Function Glf_988(args)
  Glf_988 = Glf_FormatValue(glf_timers("training_cluster_bomb").GetValue("ticks"), "0>2")
End Function
glf_funcRefMap.Add "{devices.timers.training_cluster_bomb.ticks:0>2}", "Glf_988"
Function Glf_989(args)
  On Error Resume Next
      Glf_989 = GetPlayerState("shot_training_proton_charge1") = 0
  If Err Then Glf_989 = False
End Function
glf_funcRefMap.Add "inner_orbit_hit{current_player.shot_training_proton_charge1 == 0}", "Glf_989"
Function Glf_990(args)
  On Error Resume Next
      Glf_990 = GetPlayerState("shot_training_proton_charge1") = 1 And GetPlayerState("shot_training_proton_charge2") = 0
  If Err Then Glf_990 = False
End Function
glf_funcRefMap.Add "inner_orbit_hit{current_player.shot_training_proton_charge1 == 1 && current_player.shot_training_proton_charge2 == 0}", "Glf_990"
Function Glf_991(args)
  On Error Resume Next
      Glf_991 = GetPlayerState("shot_training_proton_charge2") = 1 And GetPlayerState("shot_training_proton_charge3") = 0
  If Err Then Glf_991 = False
End Function
glf_funcRefMap.Add "inner_orbit_hit{current_player.shot_training_proton_charge2 == 1 && current_player.shot_training_proton_charge3 == 0}", "Glf_991"
Function Glf_992(args)
  Glf_992 = Glf_FormatValue(glf_timers("training_proton_cannon").GetValue("ticks"), "0>2")
End Function
glf_funcRefMap.Add "{devices.timers.training_proton_cannon.ticks:0>2}", "Glf_992"
Function Glf_993(args)
  On Error Resume Next
      Glf_993 = GetPlayerState("shot_training_moon_lane1")=0
  If Err Then Glf_993 = False
End Function
glf_funcRefMap.Add "update_training_select_moon_lane{current_player.shot_training_moon_lane1==0}", "Glf_993"
Function Glf_994(args)
  On Error Resume Next
      Glf_994 = GetPlayerState("shot_training_moon_lane1")=1
  If Err Then Glf_994 = False
End Function
glf_funcRefMap.Add "update_training_select_moon_lane{current_player.shot_training_moon_lane1==1}", "Glf_994"
Function Glf_995(args)
  On Error Resume Next
      Glf_995 = GetPlayerState("shot_training_moon_lane2")=0
  If Err Then Glf_995 = False
End Function
glf_funcRefMap.Add "update_training_select_moon_lane{current_player.shot_training_moon_lane2==0}", "Glf_995"
Function Glf_996(args)
  On Error Resume Next
      Glf_996 = GetPlayerState("shot_training_moon_lane2")=1
  If Err Then Glf_996 = False
End Function
glf_funcRefMap.Add "update_training_select_moon_lane{current_player.shot_training_moon_lane2==1}", "Glf_996"
Function Glf_997(args)
  On Error Resume Next
      Glf_997 = GetPlayerState("shot_training_moon_lane3")=0
  If Err Then Glf_997 = False
End Function
glf_funcRefMap.Add "update_training_select_moon_lane{current_player.shot_training_moon_lane3==0}", "Glf_997"
Function Glf_998(args)
  On Error Resume Next
      Glf_998 = GetPlayerState("shot_training_moon_lane3")=1
  If Err Then Glf_998 = False
End Function
glf_funcRefMap.Add "update_training_select_moon_lane{current_player.shot_training_moon_lane3==1}", "Glf_998"
Function Glf_999(args)
  On Error Resume Next
      Glf_999 = GetPlayerState("shot_training_moon_lane4")=0
  If Err Then Glf_999 = False
End Function
glf_funcRefMap.Add "update_training_select_moon_lane{current_player.shot_training_moon_lane4==0}", "Glf_999"
Function Glf_1000(args)
  On Error Resume Next
      Glf_1000 = GetPlayerState("shot_training_moon_lane4")=1
  If Err Then Glf_1000 = False
End Function
glf_funcRefMap.Add "update_training_select_moon_lane{current_player.shot_training_moon_lane4==1}", "Glf_1000"
Function Glf_1001(args)
  Glf_1001 = Glf_FormatValue(glf_timers("training_moon_missile").GetValue("ticks"), "0>2")
End Function
glf_funcRefMap.Add "{devices.timers.training_moon_missile.ticks:0>2}", "Glf_1001"
Function Glf_1002(args)
  On Error Resume Next
      Glf_1002 = GetPlayerState("shot_training_ship_charge1") = 0
  If Err Then Glf_1002 = False
End Function
glf_funcRefMap.Add "right_orbit_hit{current_player.shot_training_ship_charge1 == 0}", "Glf_1002"
Function Glf_1003(args)
  On Error Resume Next
      Glf_1003 = GetPlayerState("shot_training_ship_charge1") = 1 And GetPlayerState("shot_training_ship_charge2") = 0
  If Err Then Glf_1003 = False
End Function
glf_funcRefMap.Add "right_orbit_hit{current_player.shot_training_ship_charge1 == 1 && current_player.shot_training_ship_charge2 == 0}", "Glf_1003"
Function Glf_1004(args)
  On Error Resume Next
      Glf_1004 = GetPlayerState("shot_training_ship_charge2") = 1 And GetPlayerState("shot_training_ship_charge3") = 0
  If Err Then Glf_1004 = False
End Function
glf_funcRefMap.Add "right_orbit_hit{current_player.shot_training_ship_charge2 == 1 && current_player.shot_training_ship_charge3 == 0}", "Glf_1004"
Function Glf_1005(args)
  Glf_1005 = "SAVER"
End Function
glf_funcRefMap.Add """SAVER""", "Glf_1005"
Function Glf_1006(args)
  Glf_1006 = Glf_FormatValue(glf_timers("training_ship_save").GetValue("ticks"), "0>2")
End Function
glf_funcRefMap.Add "{devices.timers.training_ship_save.ticks:0>2}", "Glf_1006"
Function Glf_1007(args)
  On Error Resume Next
      Glf_1007 = GetPlayerState("shot_training_shield_charge1")=0
  If Err Then Glf_1007 = False
End Function
glf_funcRefMap.Add "update_training_select_shields{current_player.shot_training_shield_charge1==0}", "Glf_1007"
Function Glf_1008(args)
  On Error Resume Next
      Glf_1008 = GetPlayerState("shot_training_shield_charge1")=1
  If Err Then Glf_1008 = False
End Function
glf_funcRefMap.Add "update_training_select_shields{current_player.shot_training_shield_charge1==1}", "Glf_1008"
Function Glf_1009(args)
  On Error Resume Next
      Glf_1009 = GetPlayerState("shot_training_shield_charge2")=0
  If Err Then Glf_1009 = False
End Function
glf_funcRefMap.Add "update_training_select_shields{current_player.shot_training_shield_charge2==0}", "Glf_1009"
Function Glf_1010(args)
  On Error Resume Next
      Glf_1010 = GetPlayerState("shot_training_shield_charge2")=1
  If Err Then Glf_1010 = False
End Function
glf_funcRefMap.Add "update_training_select_shields{current_player.shot_training_shield_charge2==1}", "Glf_1010"
Function Glf_1011(args)
  On Error Resume Next
      Glf_1011 = GetPlayerState("shot_training_shield_charge3")=0
  If Err Then Glf_1011 = False
End Function
glf_funcRefMap.Add "update_training_select_shields{current_player.shot_training_shield_charge3==0}", "Glf_1011"
Function Glf_1012(args)
  On Error Resume Next
      Glf_1012 = GetPlayerState("shot_training_shield_charge3")=1
  If Err Then Glf_1012 = False
End Function
glf_funcRefMap.Add "update_training_select_shields{current_player.shot_training_shield_charge3==1}", "Glf_1012"
Function Glf_1013(args)
  Glf_1013 = Glf_FormatValue(glf_timers("training_shields").GetValue("ticks"), "0>2")
End Function
glf_funcRefMap.Add "{devices.timers.training_shields.ticks:0>2}", "Glf_1013"
Function Glf_1014(args)
  On Error Resume Next
      Glf_1014 = GetPlayerState("meteor_countdown_value") = 0
  If Err Then Glf_1014 = False
End Function
glf_funcRefMap.Add "mode_meteor_wave_qualify_started{current_player.meteor_countdown_value == 0}", "Glf_1014"
Function Glf_1015(args)
  On Error Resume Next
      Glf_1015 = GetPlayerState("meteor_countdown_value") > 0
  If Err Then Glf_1015 = False
End Function
glf_funcRefMap.Add "mode_meteor_wave_qualify_started{current_player.meteor_countdown_value > 0}", "Glf_1015"
Function Glf_1016(args)
  On Error Resume Next
      Glf_1016 = GetPlayerState("ball_just_started") = 0
  If Err Then Glf_1016 = False
End Function
glf_funcRefMap.Add "init_mwq_timer{current_player.ball_just_started == 0}", "Glf_1016"
Function Glf_1017(args)
  On Error Resume Next
      Glf_1017 = GetPlayerState("ball_just_started") = 1
  If Err Then Glf_1017 = False
End Function
glf_funcRefMap.Add "s_Plunger1_inactive{current_player.ball_just_started == 1}", "Glf_1017"
Function Glf_1018(args)
  On Error Resume Next
      Glf_1018 = glf_timers("meteor_countdown").GetValue("ticks") = 4
  If Err Then Glf_1018 = False
End Function
glf_funcRefMap.Add "timer_meteor_countdown_tick{devices.timers.meteor_countdown.ticks == 4}", "Glf_1018"
Function Glf_1019(args)
  On Error Resume Next
      Glf_1019 = glf_timers("meteor_countdown").GetValue("ticks") = 2
  If Err Then Glf_1019 = False
End Function
glf_funcRefMap.Add "timer_meteor_countdown_tick{devices.timers.meteor_countdown.ticks == 2}", "Glf_1019"
Function Glf_1020(args)
  Glf_1020 = GetPlayerState("meteor_countdown_value")
End Function
glf_funcRefMap.Add "current_player.meteor_countdown_value", "Glf_1020"
Function Glf_1021(args)
  Glf_1021 = 45
End Function
glf_funcRefMap.Add "45", "Glf_1021"
Function Glf_1022(args)
  Glf_1022 = glf_timers("meteor_countdown").GetValue("ticks")
End Function
glf_funcRefMap.Add "devices.timers.meteor_countdown.ticks", "Glf_1022"
Function Glf_1023(args)
  On Error Resume Next
      Glf_1023 = GetPlayerState("shot_meteor_wave1") = 0
  If Err Then Glf_1023 = False
End Function
glf_funcRefMap.Add "mode_meteor_wave_started{current_player.shot_meteor_wave1 == 0}", "Glf_1023"
Function Glf_1024(args)
  On Error Resume Next
      Glf_1024 = GetPlayerState("shot_meteor_wave1") = 2 And GetPlayerState("shot_meteor_wave2") = 0
  If Err Then Glf_1024 = False
End Function
glf_funcRefMap.Add "mode_meteor_wave_started{current_player.shot_meteor_wave1 == 2 && current_player.shot_meteor_wave2 == 0}", "Glf_1024"
Function Glf_1025(args)
  On Error Resume Next
      Glf_1025 = GetPlayerState("shot_meteor_wave2") = 2 And GetPlayerState("shot_meteor_wave3") = 0
  If Err Then Glf_1025 = False
End Function
glf_funcRefMap.Add "mode_meteor_wave_started{current_player.shot_meteor_wave2 == 2 && current_player.shot_meteor_wave3 == 0}", "Glf_1025"
Function Glf_1026(args)
  On Error Resume Next
      Glf_1026 = GetPlayerState("shot_meteor_wave3") = 2 And GetPlayerState("shot_meteor_wave4") = 0
  If Err Then Glf_1026 = False
End Function
glf_funcRefMap.Add "mode_meteor_wave_started{current_player.shot_meteor_wave3 == 2 && current_player.shot_meteor_wave4 == 0}", "Glf_1026"
Function Glf_1027(args)
  On Error Resume Next
      Glf_1027 = GetPlayerState("shot_meteor_wave4") = 2 And GetPlayerState("shot_meteor_wave5") = 0
  If Err Then Glf_1027 = False
End Function
glf_funcRefMap.Add "mode_meteor_wave_started{current_player.shot_meteor_wave4 == 2 && current_player.shot_meteor_wave5 == 0}", "Glf_1027"
Function Glf_1028(args)
  On Error Resume Next
      Glf_1028 = GetPlayerState("shot_meteor_wave5") = 2 And GetPlayerState("shot_meteor_wave6") = 0
  If Err Then Glf_1028 = False
End Function
glf_funcRefMap.Add "mode_meteor_wave_started{current_player.shot_meteor_wave5 == 2 && current_player.shot_meteor_wave6 == 0}", "Glf_1028"
Function Glf_1029(args)
  On Error Resume Next
      Glf_1029 = GetPlayerState("shot_meteor_wave6") = 2 And GetPlayerState("shot_meteor_wave7") = 0
  If Err Then Glf_1029 = False
End Function
glf_funcRefMap.Add "mode_meteor_wave_started{current_player.shot_meteor_wave6 == 2 && current_player.shot_meteor_wave7 == 0}", "Glf_1029"
Function Glf_1030(args)
  On Error Resume Next
      Glf_1030 = GetPlayerState("shot_meteor_wave7") = 2 And GetPlayerState("shot_meteor_wave8") = 0
  If Err Then Glf_1030 = False
End Function
glf_funcRefMap.Add "mode_meteor_wave_started{current_player.shot_meteor_wave7 == 2 && current_player.shot_meteor_wave8 == 0}", "Glf_1030"
Function Glf_1031(args)
  On Error Resume Next
      Glf_1031 = GetPlayerState("shot_meteor_wave8") = 2 And GetPlayerState("shot_meteor_wave9") = 0
  If Err Then Glf_1031 = False
End Function
glf_funcRefMap.Add "mode_meteor_wave_started{current_player.shot_meteor_wave8 == 2 && current_player.shot_meteor_wave9 == 0}", "Glf_1031"
Function Glf_1032(args)
  On Error Resume Next
      Glf_1032 = GetPlayerState("shot_proton_round1") = 1 And GetPlayerState("shot_proton_round2") = 0
  If Err Then Glf_1032 = False
End Function
glf_funcRefMap.Add "s_TargetMystery3_active{current_player.shot_proton_round1 == 1 && current_player.shot_proton_round2 == 0}", "Glf_1032"
Function Glf_1033(args)
  On Error Resume Next
      Glf_1033 = GetPlayerState("shot_proton_round2") = 1 And GetPlayerState("shot_proton_round3") = 0
  If Err Then Glf_1033 = False
End Function
glf_funcRefMap.Add "s_TargetMystery3_active{current_player.shot_proton_round2 == 1 && current_player.shot_proton_round3 == 0}", "Glf_1033"
Function Glf_1034(args)
  On Error Resume Next
      Glf_1034 = GetPlayerState("shot_proton_round3") = 1 And GetPlayerState("shot_proton_round4") = 0
  If Err Then Glf_1034 = False
End Function
glf_funcRefMap.Add "s_TargetMystery3_active{current_player.shot_proton_round3 == 1 && current_player.shot_proton_round4 == 0}", "Glf_1034"
Function Glf_1035(args)
  On Error Resume Next
      Glf_1035 = GetPlayerState("shot_proton_round4") = 1 And GetPlayerState("shot_proton_round5") = 0
  If Err Then Glf_1035 = False
End Function
glf_funcRefMap.Add "s_TargetMystery3_active{current_player.shot_proton_round4 == 1 && current_player.shot_proton_round5 == 0}", "Glf_1035"
Function Glf_1036(args)
  On Error Resume Next
      Glf_1036 = GetPlayerState("shot_proton_round5") = 1 And GetPlayerState("shot_proton_round6") = 0
  If Err Then Glf_1036 = False
End Function
glf_funcRefMap.Add "s_TargetMystery3_active{current_player.shot_proton_round5 == 1 && current_player.shot_proton_round6 == 0}", "Glf_1036"
Function Glf_1037(args)
  On Error Resume Next
      Glf_1037 = GetPlayerState("shot_proton_round6") = 1
  If Err Then Glf_1037 = False
End Function
glf_funcRefMap.Add "s_TargetMystery3_active{current_player.shot_proton_round6 == 1}", "Glf_1037"
Function Glf_1038(args)
  On Error Resume Next
      Glf_1038 = GetPlayerState("shot_proton_round1") = 1 And GetPlayerState("shot_proton_round2") = 0
  If Err Then Glf_1038 = False
End Function
glf_funcRefMap.Add "center_orbit_left_hit{current_player.shot_proton_round1 == 1 && current_player.shot_proton_round2 == 0}", "Glf_1038"
Function Glf_1039(args)
  On Error Resume Next
      Glf_1039 = GetPlayerState("shot_proton_round2") = 1 And GetPlayerState("shot_proton_round3") = 0
  If Err Then Glf_1039 = False
End Function
glf_funcRefMap.Add "center_orbit_left_hit{current_player.shot_proton_round2 == 1 && current_player.shot_proton_round3 == 0}", "Glf_1039"
Function Glf_1040(args)
  On Error Resume Next
      Glf_1040 = GetPlayerState("shot_proton_round3") = 1 And GetPlayerState("shot_proton_round4") = 0
  If Err Then Glf_1040 = False
End Function
glf_funcRefMap.Add "center_orbit_left_hit{current_player.shot_proton_round3 == 1 && current_player.shot_proton_round4 == 0}", "Glf_1040"
Function Glf_1041(args)
  On Error Resume Next
      Glf_1041 = GetPlayerState("shot_proton_round4") = 1 And GetPlayerState("shot_proton_round5") = 0
  If Err Then Glf_1041 = False
End Function
glf_funcRefMap.Add "center_orbit_left_hit{current_player.shot_proton_round4 == 1 && current_player.shot_proton_round5 == 0}", "Glf_1041"
Function Glf_1042(args)
  On Error Resume Next
      Glf_1042 = GetPlayerState("shot_proton_round5") = 1 And GetPlayerState("shot_proton_round6") = 0
  If Err Then Glf_1042 = False
End Function
glf_funcRefMap.Add "center_orbit_left_hit{current_player.shot_proton_round5 == 1 && current_player.shot_proton_round6 == 0}", "Glf_1042"
Function Glf_1043(args)
  On Error Resume Next
      Glf_1043 = GetPlayerState("shot_proton_round6") = 1
  If Err Then Glf_1043 = False
End Function
glf_funcRefMap.Add "center_orbit_left_hit{current_player.shot_proton_round6 == 1}", "Glf_1043"
Function Glf_1044(args)
  On Error Resume Next
      Glf_1044 = GetPlayerState("shot_proton_round1") = 1 And GetPlayerState("shot_proton_round2") = 0
  If Err Then Glf_1044 = False
End Function
glf_funcRefMap.Add "center_orbit_right_hit{current_player.shot_proton_round1 == 1 && current_player.shot_proton_round2 == 0}", "Glf_1044"
Function Glf_1045(args)
  On Error Resume Next
      Glf_1045 = GetPlayerState("shot_proton_round2") = 1 And GetPlayerState("shot_proton_round3") = 0
  If Err Then Glf_1045 = False
End Function
glf_funcRefMap.Add "center_orbit_right_hit{current_player.shot_proton_round2 == 1 && current_player.shot_proton_round3 == 0}", "Glf_1045"
Function Glf_1046(args)
  On Error Resume Next
      Glf_1046 = GetPlayerState("shot_proton_round3") = 1 And GetPlayerState("shot_proton_round4") = 0
  If Err Then Glf_1046 = False
End Function
glf_funcRefMap.Add "center_orbit_right_hit{current_player.shot_proton_round3 == 1 && current_player.shot_proton_round4 == 0}", "Glf_1046"
Function Glf_1047(args)
  On Error Resume Next
      Glf_1047 = GetPlayerState("shot_proton_round4") = 1 And GetPlayerState("shot_proton_round5") = 0
  If Err Then Glf_1047 = False
End Function
glf_funcRefMap.Add "center_orbit_right_hit{current_player.shot_proton_round4 == 1 && current_player.shot_proton_round5 == 0}", "Glf_1047"
Function Glf_1048(args)
  On Error Resume Next
      Glf_1048 = GetPlayerState("shot_proton_round5") = 1 And GetPlayerState("shot_proton_round6") = 0
  If Err Then Glf_1048 = False
End Function
glf_funcRefMap.Add "center_orbit_right_hit{current_player.shot_proton_round5 == 1 && current_player.shot_proton_round6 == 0}", "Glf_1048"
Function Glf_1049(args)
  On Error Resume Next
      Glf_1049 = GetPlayerState("shot_proton_round6") = 1
  If Err Then Glf_1049 = False
End Function
glf_funcRefMap.Add "center_orbit_right_hit{current_player.shot_proton_round6 == 1}", "Glf_1049"
Function Glf_1050(args)
  On Error Resume Next
      Glf_1050 = GetPlayerState("num_meteors_to_drop") < 0
  If Err Then Glf_1050 = False
End Function
glf_funcRefMap.Add "check_meteor_wave.4{current_player.num_meteors_to_drop < 0}", "Glf_1050"
Function Glf_1051(args)
  On Error Resume Next
      Glf_1051 = GetPlayerState("num_meteors_to_drop") <= 0 And GetPlayerState("nuke_just_used") = 0
  If Err Then Glf_1051 = False
End Function
glf_funcRefMap.Add "check_meteor_wave.1{current_player.num_meteors_to_drop <= 0 && current_player.nuke_just_used == 0}", "Glf_1051"
Function Glf_1052(args)
  On Error Resume Next
      Glf_1052 = GetPlayerState("meteor_wave_running") = 1
  If Err Then Glf_1052 = False
End Function
glf_funcRefMap.Add "meteor_wave_done{current_player.meteor_wave_running == 1}", "Glf_1052"
Function Glf_1053(args)
  On Error Resume Next
      Glf_1053 = GetPlayerState("meteor_wave_running") = 1
  If Err Then Glf_1053 = False
End Function
glf_funcRefMap.Add "detonate_nuke{current_player.meteor_wave_running == 1}", "Glf_1053"
Function Glf_1054(args)
  On Error Resume Next
      Glf_1054 = GetPlayerState("shot_meteor_wave1") = 1
  If Err Then Glf_1054 = False
End Function
glf_funcRefMap.Add "meteor_wave_done_done.2{current_player.shot_meteor_wave1 == 1}", "Glf_1054"
Function Glf_1055(args)
  On Error Resume Next
      Glf_1055 = GetPlayerState("shot_meteor_wave2") = 1
  If Err Then Glf_1055 = False
End Function
glf_funcRefMap.Add "meteor_wave_done_done.2{current_player.shot_meteor_wave2 == 1}", "Glf_1055"
Function Glf_1056(args)
  On Error Resume Next
      Glf_1056 = GetPlayerState("shot_meteor_wave3") = 1
  If Err Then Glf_1056 = False
End Function
glf_funcRefMap.Add "meteor_wave_done_done.2{current_player.shot_meteor_wave3 == 1}", "Glf_1056"
Function Glf_1057(args)
  On Error Resume Next
      Glf_1057 = GetPlayerState("shot_meteor_wave4") = 1
  If Err Then Glf_1057 = False
End Function
glf_funcRefMap.Add "meteor_wave_done_done.2{current_player.shot_meteor_wave4 == 1}", "Glf_1057"
Function Glf_1058(args)
  On Error Resume Next
      Glf_1058 = GetPlayerState("shot_meteor_wave5") = 1
  If Err Then Glf_1058 = False
End Function
glf_funcRefMap.Add "meteor_wave_done_done.2{current_player.shot_meteor_wave5 == 1}", "Glf_1058"
Function Glf_1059(args)
  On Error Resume Next
      Glf_1059 = GetPlayerState("shot_meteor_wave6") = 1
  If Err Then Glf_1059 = False
End Function
glf_funcRefMap.Add "meteor_wave_done_done.2{current_player.shot_meteor_wave6 == 1}", "Glf_1059"
Function Glf_1060(args)
  On Error Resume Next
      Glf_1060 = GetPlayerState("shot_meteor_wave7") = 1
  If Err Then Glf_1060 = False
End Function
glf_funcRefMap.Add "meteor_wave_done_done.2{current_player.shot_meteor_wave7 == 1}", "Glf_1060"
Function Glf_1061(args)
  On Error Resume Next
      Glf_1061 = GetPlayerState("shot_meteor_wave8") = 1
  If Err Then Glf_1061 = False
End Function
glf_funcRefMap.Add "meteor_wave_done_done.2{current_player.shot_meteor_wave8 == 1}", "Glf_1061"
Function Glf_1062(args)
  On Error Resume Next
      Glf_1062 = GetPlayerState("shot_meteor_wave9") = 1
  If Err Then Glf_1062 = False
End Function
glf_funcRefMap.Add "meteor_wave_done_done.2{current_player.shot_meteor_wave9 == 1}", "Glf_1062"
Function Glf_1063(args)
  On Error Resume Next
      Glf_1063 = GetPlayerState("training_heal_achieved")=0
  If Err Then Glf_1063 = False
End Function
glf_funcRefMap.Add "meteor_wave_done_done.2{current_player.training_heal_achieved==0}", "Glf_1063"
Function Glf_1064(args)
  On Error Resume Next
      Glf_1064 = GetPlayerState("shot_proton_round1")=0
  If Err Then Glf_1064 = False
End Function
glf_funcRefMap.Add "check_protons{current_player.shot_proton_round1==0}", "Glf_1064"
Function Glf_1065(args)
  On Error Resume Next
      Glf_1065 = GetPlayerState("shot_meteor1_light") > 0
  If Err Then Glf_1065 = False
End Function
glf_funcRefMap.Add "meteor1_proton_hit{current_player.shot_meteor1_light > 0}", "Glf_1065"
Function Glf_1066(args)
  On Error Resume Next
      Glf_1066 = GetPlayerState("shot_meteor2_light") > 0
  If Err Then Glf_1066 = False
End Function
glf_funcRefMap.Add "meteor2_proton_hit{current_player.shot_meteor2_light > 0}", "Glf_1066"
Function Glf_1067(args)
  On Error Resume Next
      Glf_1067 = GetPlayerState("shot_meteor3_light") > 0
  If Err Then Glf_1067 = False
End Function
glf_funcRefMap.Add "meteor3_proton_hit{current_player.shot_meteor3_light > 0}", "Glf_1067"
Function Glf_1068(args)
  On Error Resume Next
      Glf_1068 = GetPlayerState("shot_meteor4_light") > 0
  If Err Then Glf_1068 = False
End Function
glf_funcRefMap.Add "meteor4_proton_hit{current_player.shot_meteor4_light > 0}", "Glf_1068"
Function Glf_1069(args)
  On Error Resume Next
      Glf_1069 = GetPlayerState("shot_proton_round1")=1
  If Err Then Glf_1069 = False
End Function
glf_funcRefMap.Add "mode_meteor_wave_started{current_player.shot_proton_round1==1}", "Glf_1069"
Function Glf_1070(args)
  On Error Resume Next
      Glf_1070 = GetPlayerState("num_meteors_to_raise")>0 And glf_timers("meteor1").GetValue("ticks")=2
  If Err Then Glf_1070 = False
End Function
glf_funcRefMap.Add "timer_meteor1_tick{current_player.num_meteors_to_raise>0 && devices.timers.meteor1.ticks==2}", "Glf_1070"
Function Glf_1071(args)
  On Error Resume Next
      Glf_1071 = glf_timers("meteor1").GetValue("ticks")=6
  If Err Then Glf_1071 = False
End Function
glf_funcRefMap.Add "timer_meteor1_tick{devices.timers.meteor1.ticks==6}", "Glf_1071"
Function Glf_1072(args)
  On Error Resume Next
      Glf_1072 = glf_timers("meteor1").GetValue("ticks")=10
  If Err Then Glf_1072 = False
End Function
glf_funcRefMap.Add "timer_meteor1_tick{devices.timers.meteor1.ticks==10}", "Glf_1072"
Function Glf_1073(args)
  On Error Resume Next
      Glf_1073 = GetPlayerState("num_meteors_to_raise")>0 And glf_timers("meteor2").GetValue("ticks")=2
  If Err Then Glf_1073 = False
End Function
glf_funcRefMap.Add "timer_meteor2_tick{current_player.num_meteors_to_raise>0 && devices.timers.meteor2.ticks==2}", "Glf_1073"
Function Glf_1074(args)
  On Error Resume Next
      Glf_1074 = glf_timers("meteor2").GetValue("ticks")=6
  If Err Then Glf_1074 = False
End Function
glf_funcRefMap.Add "timer_meteor2_tick{devices.timers.meteor2.ticks==6}", "Glf_1074"
Function Glf_1075(args)
  On Error Resume Next
      Glf_1075 = glf_timers("meteor2").GetValue("ticks")=10
  If Err Then Glf_1075 = False
End Function
glf_funcRefMap.Add "timer_meteor2_tick{devices.timers.meteor2.ticks==10}", "Glf_1075"
Function Glf_1076(args)
  On Error Resume Next
      Glf_1076 = GetPlayerState("num_meteors_to_raise")>0 And glf_timers("meteor3").GetValue("ticks")=2
  If Err Then Glf_1076 = False
End Function
glf_funcRefMap.Add "timer_meteor3_tick{current_player.num_meteors_to_raise>0 && devices.timers.meteor3.ticks==2}", "Glf_1076"
Function Glf_1077(args)
  On Error Resume Next
      Glf_1077 = glf_timers("meteor3").GetValue("ticks")=6
  If Err Then Glf_1077 = False
End Function
glf_funcRefMap.Add "timer_meteor3_tick{devices.timers.meteor3.ticks==6}", "Glf_1077"
Function Glf_1078(args)
  On Error Resume Next
      Glf_1078 = glf_timers("meteor3").GetValue("ticks")=10
  If Err Then Glf_1078 = False
End Function
glf_funcRefMap.Add "timer_meteor3_tick{devices.timers.meteor3.ticks==10}", "Glf_1078"
Function Glf_1079(args)
  On Error Resume Next
      Glf_1079 = GetPlayerState("num_meteors_to_raise")>0 And glf_timers("meteor4").GetValue("ticks")=2
  If Err Then Glf_1079 = False
End Function
glf_funcRefMap.Add "timer_meteor4_tick{current_player.num_meteors_to_raise>0 && devices.timers.meteor4.ticks==2}", "Glf_1079"
Function Glf_1080(args)
  On Error Resume Next
      Glf_1080 = glf_timers("meteor4").GetValue("ticks")=6
  If Err Then Glf_1080 = False
End Function
glf_funcRefMap.Add "timer_meteor4_tick{devices.timers.meteor4.ticks==6}", "Glf_1080"
Function Glf_1081(args)
  On Error Resume Next
      Glf_1081 = glf_timers("meteor4").GetValue("ticks")=10
  If Err Then Glf_1081 = False
End Function
glf_funcRefMap.Add "timer_meteor4_tick{devices.timers.meteor4.ticks==10}", "Glf_1081"
Function Glf_1082(args)
  On Error Resume Next
      Glf_1082 = GetPlayerState("nuke_just_used") = 0
  If Err Then Glf_1082 = False
End Function
glf_funcRefMap.Add "finish_meteor_wave{current_player.nuke_just_used == 0}", "Glf_1082"
Function Glf_1083(args)
  On Error Resume Next
      Glf_1083 = GetPlayerState("nuke_just_used") = 1
  If Err Then Glf_1083 = False
End Function
glf_funcRefMap.Add "finish_meteor_wave{current_player.nuke_just_used == 1}", "Glf_1083"
Function Glf_1084(args)
  Glf_1084 = GetPlayerState("meteors_per_wave")
End Function
glf_funcRefMap.Add "current_player.meteors_per_wave", "Glf_1084"
Function Glf_1085(args)
  Glf_1085 = Glf_FormatValue(GetPlayerState("num_meteors_to_drop"), "0>2")
End Function
glf_funcRefMap.Add "{current_player.num_meteors_to_drop:0>2}", "Glf_1085"
Function Glf_1086(args)
  Glf_1086 = "00"
End Function
glf_funcRefMap.Add """00""", "Glf_1086"
Function Glf_1087(args)
  Glf_1087 = "  NUKED "
End Function
glf_funcRefMap.Add """  NUKED """, "Glf_1087"
Function Glf_1088(args)
  Glf_1088 = " NUKED  "
End Function
glf_funcRefMap.Add """ NUKED  """, "Glf_1088"
Function Glf_1089(args)
  On Error Resume Next
      Glf_1089 = GetPlayerState("number") = 1 or GetPlayerState("number") = 2
  If Err Then Glf_1089 = False
End Function
glf_funcRefMap.Add "mode_meteor_wave_started{current_player.number == 1 or current_player.number == 2}", "Glf_1089"
Function Glf_1090(args)
  Glf_1090 = "METEOR "
End Function
glf_funcRefMap.Add """METEOR """, "Glf_1090"
Function Glf_1091(args)
  Glf_1091 = "WAVE  "
End Function
glf_funcRefMap.Add """WAVE  """, "Glf_1091"
Function Glf_1092(args)
  On Error Resume Next
      Glf_1092 = GetPlayerState("number") = 3 or GetPlayerState("number") = 4
  If Err Then Glf_1092 = False
End Function
glf_funcRefMap.Add "mode_meteor_wave_started{current_player.number == 3 or current_player.number == 4}", "Glf_1092"
Function Glf_1093(args)
  On Error Resume Next
      Glf_1093 = GetPlayerState("number") = 1 or GetPlayerState("number") = 2
  If Err Then Glf_1093 = False
End Function
glf_funcRefMap.Add "check_meteor_wave.2{current_player.number == 1 or current_player.number == 2}", "Glf_1093"
Function Glf_1094(args)
  On Error Resume Next
      Glf_1094 = GetPlayerState("number") = 3 or GetPlayerState("number") = 4
  If Err Then Glf_1094 = False
End Function
glf_funcRefMap.Add "check_meteor_wave.2{current_player.number == 3 or current_player.number == 4}", "Glf_1094"
Function Glf_1095(args)
  Glf_1095 = GetPlayerState("meteor_mb_shootagain_time")
End Function
glf_funcRefMap.Add "current_player.meteor_mb_shootagain_time", "Glf_1095"
Function Glf_1096(args)
  On Error Resume Next
      Glf_1096 = GetPlayerState("shot_flwiz_proton1")=1
  If Err Then Glf_1096 = False
End Function
glf_funcRefMap.Add "s_TargetMystery1_active{current_player.shot_flwiz_proton1==1}", "Glf_1096"
Function Glf_1097(args)
  On Error Resume Next
      Glf_1097 = GetPlayerState("shot_flwiz_proton2")=1
  If Err Then Glf_1097 = False
End Function
glf_funcRefMap.Add "s_TargetMystery2_active{current_player.shot_flwiz_proton2==1}", "Glf_1097"
Function Glf_1098(args)
  On Error Resume Next
      Glf_1098 = GetPlayerState("shot_flwiz_proton3")=1
  If Err Then Glf_1098 = False
End Function
glf_funcRefMap.Add "s_TargetMystery3_active{current_player.shot_flwiz_proton3==1}", "Glf_1098"
Function Glf_1099(args)
  On Error Resume Next
      Glf_1099 = GetPlayerState("shot_flwiz_proton4")=1
  If Err Then Glf_1099 = False
End Function
glf_funcRefMap.Add "s_TargetMystery4_active{current_player.shot_flwiz_proton4==1}", "Glf_1099"
Function Glf_1100(args)
  On Error Resume Next
      Glf_1100 = GetPlayerState("shot_flwiz_proton5")=1
  If Err Then Glf_1100 = False
End Function
glf_funcRefMap.Add "s_TargetMystery5_active{current_player.shot_flwiz_proton5==1}", "Glf_1100"
Function Glf_1101(args)
  On Error Resume Next
      Glf_1101 = GetPlayerState("shot_flwiz_proton6")=1
  If Err Then Glf_1101 = False
End Function
glf_funcRefMap.Add "shield_bank_hit{current_player.shot_flwiz_proton6==1}", "Glf_1101"
Function Glf_1102(args)
  On Error Resume Next
      Glf_1102 = GetPlayerState("shot_flwiz_cluster") = 1 And GetPlayerState("wizard_fully_loaded_phase") = 1
  If Err Then Glf_1102 = False
End Function
glf_funcRefMap.Add "left_ramp_hit{current_player.shot_flwiz_cluster == 1 && current_player.wizard_fully_loaded_phase == 1}", "Glf_1102"
Function Glf_1103(args)
  On Error Resume Next
      Glf_1103 = GetPlayerState("shot_flwiz_moon") = 1 And GetPlayerState("wizard_fully_loaded_phase") = 1
  If Err Then Glf_1103 = False
End Function
glf_funcRefMap.Add "right_ramp_hit{current_player.shot_flwiz_moon == 1 && current_player.wizard_fully_loaded_phase == 1}", "Glf_1103"
Function Glf_1104(args)
  On Error Resume Next
      Glf_1104 = GetPlayerState("wizard_fully_loaded_phase") = 1
  If Err Then Glf_1104 = False
End Function
glf_funcRefMap.Add "flwiz_shots_on_complete{current_player.wizard_fully_loaded_phase == 1}", "Glf_1104"
Function Glf_1105(args)
  On Error Resume Next
      Glf_1105 = GetPlayerState("wizard_fully_loaded_phase") = 1 And GetPlayerState("flwiz_super_jp") = 1
  If Err Then Glf_1105 = False
End Function
glf_funcRefMap.Add "balldevice_scoop_ball_entered{current_player.wizard_fully_loaded_phase == 1 && current_player.flwiz_super_jp == 1}", "Glf_1105"
Function Glf_1106(args)
  On Error Resume Next
      Glf_1106 = GetPlayerState("shot_flwiz_proton1") = 1 And GetPlayerState("wizard_fully_loaded_phase") = 2
  If Err Then Glf_1106 = False
End Function
glf_funcRefMap.Add "s_TargetMystery1_active{current_player.shot_flwiz_proton1 == 1 && current_player.wizard_fully_loaded_phase == 2}", "Glf_1106"
Function Glf_1107(args)
  On Error Resume Next
      Glf_1107 = GetPlayerState("shot_flwiz_proton2") = 1 And GetPlayerState("wizard_fully_loaded_phase") = 2
  If Err Then Glf_1107 = False
End Function
glf_funcRefMap.Add "s_TargetMystery2_active{current_player.shot_flwiz_proton2 == 1 && current_player.wizard_fully_loaded_phase == 2}", "Glf_1107"
Function Glf_1108(args)
  On Error Resume Next
      Glf_1108 = GetPlayerState("shot_flwiz_proton3") = 1 And GetPlayerState("wizard_fully_loaded_phase") = 2
  If Err Then Glf_1108 = False
End Function
glf_funcRefMap.Add "s_TargetMystery3_active{current_player.shot_flwiz_proton3 == 1 && current_player.wizard_fully_loaded_phase == 2}", "Glf_1108"
Function Glf_1109(args)
  On Error Resume Next
      Glf_1109 = GetPlayerState("shot_flwiz_proton4") = 1 And GetPlayerState("wizard_fully_loaded_phase") = 2
  If Err Then Glf_1109 = False
End Function
glf_funcRefMap.Add "s_TargetMystery4_active{current_player.shot_flwiz_proton4 == 1 && current_player.wizard_fully_loaded_phase == 2}", "Glf_1109"
Function Glf_1110(args)
  On Error Resume Next
      Glf_1110 = GetPlayerState("shot_flwiz_proton5") = 1 And GetPlayerState("wizard_fully_loaded_phase") = 2
  If Err Then Glf_1110 = False
End Function
glf_funcRefMap.Add "s_TargetMystery5_active{current_player.shot_flwiz_proton5 == 1 && current_player.wizard_fully_loaded_phase == 2}", "Glf_1110"
Function Glf_1111(args)
  On Error Resume Next
      Glf_1111 = GetPlayerState("shot_flwiz_proton6") = 1 And GetPlayerState("wizard_fully_loaded_phase") = 2
  If Err Then Glf_1111 = False
End Function
glf_funcRefMap.Add "shield_bank_hit{current_player.shot_flwiz_proton6 == 1 && current_player.wizard_fully_loaded_phase == 2}", "Glf_1111"
Function Glf_1112(args)
  On Error Resume Next
      Glf_1112 = GetPlayerState("shot_flwiz_cluster") = 1 And GetPlayerState("wizard_fully_loaded_phase") = 2
  If Err Then Glf_1112 = False
End Function
glf_funcRefMap.Add "left_ramp_hit{current_player.shot_flwiz_cluster == 1 && current_player.wizard_fully_loaded_phase == 2}", "Glf_1112"
Function Glf_1113(args)
  On Error Resume Next
      Glf_1113 = GetPlayerState("shot_flwiz_moon") = 1 And GetPlayerState("wizard_fully_loaded_phase") = 2
  If Err Then Glf_1113 = False
End Function
glf_funcRefMap.Add "right_ramp_hit{current_player.shot_flwiz_moon == 1 && current_player.wizard_fully_loaded_phase == 2}", "Glf_1113"
Function Glf_1114(args)
  On Error Resume Next
      Glf_1114 = GetPlayerState("wizard_fully_loaded_phase") = 2
  If Err Then Glf_1114 = False
End Function
glf_funcRefMap.Add "flwiz_shots_on_complete{current_player.wizard_fully_loaded_phase == 2}", "Glf_1114"
Function Glf_1115(args)
  On Error Resume Next
      Glf_1115 = GetPlayerState("flwiz_super_jp") = 2
  If Err Then Glf_1115 = False
End Function
glf_funcRefMap.Add "balldevice_scoop_ball_entered{current_player.flwiz_super_jp == 2}", "Glf_1115"
Function Glf_1116(args)
  On Error Resume Next
      Glf_1116 = GetPlayerState("wizard_fully_loaded_phase") = 1
  If Err Then Glf_1116 = False
End Function
glf_funcRefMap.Add "timer_flwiz_bumper_lights_tick{current_player.wizard_fully_loaded_phase == 1}", "Glf_1116"
Function Glf_1117(args)
  On Error Resume Next
      Glf_1117 = GetPlayerState("wizard_fully_loaded_phase") = 2
  If Err Then Glf_1117 = False
End Function
glf_funcRefMap.Add "timer_flwiz_bumper_lights_tick{current_player.wizard_fully_loaded_phase == 2}", "Glf_1117"
Function Glf_1118(args)
  On Error Resume Next
      Glf_1118 = GetPlayerState("shot_flwiz_proton1") = 0
  If Err Then Glf_1118 = False
End Function
glf_funcRefMap.Add "flwiz_proton1_ready{current_player.shot_flwiz_proton1 == 0}", "Glf_1118"
Function Glf_1119(args)
  On Error Resume Next
      Glf_1119 = GetPlayerState("shot_flwiz_proton2") = 0
  If Err Then Glf_1119 = False
End Function
glf_funcRefMap.Add "flwiz_proton2_ready{current_player.shot_flwiz_proton2 == 0}", "Glf_1119"
Function Glf_1120(args)
  On Error Resume Next
      Glf_1120 = GetPlayerState("shot_flwiz_proton3") = 0
  If Err Then Glf_1120 = False
End Function
glf_funcRefMap.Add "flwiz_proton3_ready{current_player.shot_flwiz_proton3 == 0}", "Glf_1120"
Function Glf_1121(args)
  On Error Resume Next
      Glf_1121 = GetPlayerState("shot_flwiz_proton4") = 0
  If Err Then Glf_1121 = False
End Function
glf_funcRefMap.Add "flwiz_proton4_ready{current_player.shot_flwiz_proton4 == 0}", "Glf_1121"
Function Glf_1122(args)
  On Error Resume Next
      Glf_1122 = GetPlayerState("shot_flwiz_proton5") = 0
  If Err Then Glf_1122 = False
End Function
glf_funcRefMap.Add "flwiz_proton5_ready{current_player.shot_flwiz_proton5 == 0}", "Glf_1122"
Function Glf_1123(args)
  On Error Resume Next
      Glf_1123 = GetPlayerState("shot_flwiz_proton6") = 0
  If Err Then Glf_1123 = False
End Function
glf_funcRefMap.Add "flwiz_proton6_ready{current_player.shot_flwiz_proton6 == 0}", "Glf_1123"
Function Glf_1124(args)
  On Error Resume Next
      Glf_1124 = GetPlayerState("shot_flwiz_cluster") = 0
  If Err Then Glf_1124 = False
End Function
glf_funcRefMap.Add "flwiz_cluster_ready{current_player.shot_flwiz_cluster == 0}", "Glf_1124"
Function Glf_1125(args)
  On Error Resume Next
      Glf_1125 = GetPlayerState("shot_flwiz_moon") = 0
  If Err Then Glf_1125 = False
End Function
glf_funcRefMap.Add "flwiz_moon_ready{current_player.shot_flwiz_moon == 0}", "Glf_1125"
Function Glf_1126(args)
  Glf_1126 = 20000
End Function
glf_funcRefMap.Add "20000", "Glf_1126"
Function Glf_1127(args)
  Glf_1127 = 100000
End Function
glf_funcRefMap.Add "100000", "Glf_1127"
Function Glf_1128(args)
  Glf_1128 = " FULLY "
End Function
glf_funcRefMap.Add """ FULLY """, "Glf_1128"
Function Glf_1129(args)
  Glf_1129 = " LOADED "
End Function
glf_funcRefMap.Add """ LOADED """, "Glf_1129"
Function Glf_1130(args)
  Glf_1130 = " WIZARD "
End Function
glf_funcRefMap.Add """ WIZARD """, "Glf_1130"
Function Glf_1131(args)
  Glf_1131 = "  MODE  "
End Function
glf_funcRefMap.Add """  MODE  """, "Glf_1131"
Function Glf_1132(args)
  On Error Resume Next
      Glf_1132 = glf_timers("fully_loaded_message").GetValue("ticks") = 1
  If Err Then Glf_1132 = False
End Function
glf_funcRefMap.Add "timer_fully_loaded_message_tick{devices.timers.fully_loaded_message.ticks == 1}", "Glf_1132"
Function Glf_1133(args)
  Glf_1133 = "   EB   "
End Function
glf_funcRefMap.Add """   EB   """, "Glf_1133"
Function Glf_1134(args)
  Glf_1134 = "  ADDED "
End Function
glf_funcRefMap.Add """  ADDED """, "Glf_1134"
Function Glf_1135(args)
  On Error Resume Next
      Glf_1135 = glf_timers("fully_loaded_message").GetValue("ticks") = 2
  If Err Then Glf_1135 = False
End Function
glf_funcRefMap.Add "timer_fully_loaded_message_tick{devices.timers.fully_loaded_message.ticks == 2}", "Glf_1135"
Function Glf_1136(args)
  Glf_1136 = "HIT ALL"
End Function
glf_funcRefMap.Add """HIT ALL""", "Glf_1136"
Function Glf_1137(args)
  Glf_1137 = "  SHOTS "
End Function
glf_funcRefMap.Add """  SHOTS """, "Glf_1137"
Function Glf_1138(args)
  On Error Resume Next
      Glf_1138 = GetPlayerState("shot_combo_command1") = 1 And GetPlayerState("wizard_combo_command_phase") = 1
  If Err Then Glf_1138 = False
End Function
glf_funcRefMap.Add "left_side_hit{current_player.shot_combo_command1 == 1 && current_player.wizard_combo_command_phase == 1}", "Glf_1138"
Function Glf_1139(args)
  On Error Resume Next
      Glf_1139 = GetPlayerState("shot_combo_command2") = 1 And GetPlayerState("wizard_combo_command_phase") = 1
  If Err Then Glf_1139 = False
End Function
glf_funcRefMap.Add "left_orbit_hit{current_player.shot_combo_command2 == 1 && current_player.wizard_combo_command_phase == 1}", "Glf_1139"
Function Glf_1140(args)
  On Error Resume Next
      Glf_1140 = GetPlayerState("shot_combo_command3") = 1 And GetPlayerState("wizard_combo_command_phase") = 1
  If Err Then Glf_1140 = False
End Function
glf_funcRefMap.Add "left_ramp_hit{current_player.shot_combo_command3 == 1 && current_player.wizard_combo_command_phase == 1}", "Glf_1140"
Function Glf_1141(args)
  On Error Resume Next
      Glf_1141 = GetPlayerState("shot_combo_command4") = 1 And GetPlayerState("wizard_combo_command_phase") = 1
  If Err Then Glf_1141 = False
End Function
glf_funcRefMap.Add "inner_orbit_hit{current_player.shot_combo_command4 == 1 && current_player.wizard_combo_command_phase == 1}", "Glf_1141"
Function Glf_1142(args)
  On Error Resume Next
      Glf_1142 = GetPlayerState("shot_combo_command5") = 1 And GetPlayerState("wizard_combo_command_phase") = 1
  If Err Then Glf_1142 = False
End Function
glf_funcRefMap.Add "center_orbit_left_hit{current_player.shot_combo_command5 == 1 && current_player.wizard_combo_command_phase == 1}", "Glf_1142"
Function Glf_1143(args)
  On Error Resume Next
      Glf_1143 = GetPlayerState("shot_combo_command6") = 1 And GetPlayerState("wizard_combo_command_phase") = 1
  If Err Then Glf_1143 = False
End Function
glf_funcRefMap.Add "center_orbit_right_hit{current_player.shot_combo_command6 == 1 && current_player.wizard_combo_command_phase == 1}", "Glf_1143"
Function Glf_1144(args)
  On Error Resume Next
      Glf_1144 = GetPlayerState("shot_combo_command7") = 1 And GetPlayerState("wizard_combo_command_phase") = 1
  If Err Then Glf_1144 = False
End Function
glf_funcRefMap.Add "right_ramp_hit{current_player.shot_combo_command7 == 1 && current_player.wizard_combo_command_phase == 1}", "Glf_1144"
Function Glf_1145(args)
  On Error Resume Next
      Glf_1145 = GetPlayerState("shot_combo_command8") = 1 And GetPlayerState("wizard_combo_command_phase") = 1
  If Err Then Glf_1145 = False
End Function
glf_funcRefMap.Add "right_orbit_hit{current_player.shot_combo_command8 == 1 && current_player.wizard_combo_command_phase == 1}", "Glf_1145"
Function Glf_1146(args)
  On Error Resume Next
      Glf_1146 = GetPlayerState("wizard_combo_command_phase") = 1
  If Err Then Glf_1146 = False
End Function
glf_funcRefMap.Add "ccwiz_shots_on_complete{current_player.wizard_combo_command_phase == 1}", "Glf_1146"
Function Glf_1147(args)
  On Error Resume Next
      Glf_1147 = GetPlayerState("wizard_combo_command_phase") = 1 And GetPlayerState("ccwiz_super_jp") = 1
  If Err Then Glf_1147 = False
End Function
glf_funcRefMap.Add "balldevice_scoop_ball_entered{current_player.wizard_combo_command_phase == 1 && current_player.ccwiz_super_jp == 1}", "Glf_1147"
Function Glf_1148(args)
  On Error Resume Next
      Glf_1148 = GetPlayerState("shot_combo_command1") = 1 And GetPlayerState("wizard_combo_command_phase") = 2
  If Err Then Glf_1148 = False
End Function
glf_funcRefMap.Add "left_side_hit{current_player.shot_combo_command1 == 1 && current_player.wizard_combo_command_phase == 2}", "Glf_1148"
Function Glf_1149(args)
  On Error Resume Next
      Glf_1149 = GetPlayerState("shot_combo_command2") = 1 And GetPlayerState("wizard_combo_command_phase") = 2
  If Err Then Glf_1149 = False
End Function
glf_funcRefMap.Add "left_orbit_hit{current_player.shot_combo_command2 == 1 && current_player.wizard_combo_command_phase == 2}", "Glf_1149"
Function Glf_1150(args)
  On Error Resume Next
      Glf_1150 = GetPlayerState("shot_combo_command3") = 1 And GetPlayerState("wizard_combo_command_phase") = 2
  If Err Then Glf_1150 = False
End Function
glf_funcRefMap.Add "left_ramp_hit{current_player.shot_combo_command3 == 1 && current_player.wizard_combo_command_phase == 2}", "Glf_1150"
Function Glf_1151(args)
  On Error Resume Next
      Glf_1151 = GetPlayerState("shot_combo_command4") = 1 And GetPlayerState("wizard_combo_command_phase") = 2
  If Err Then Glf_1151 = False
End Function
glf_funcRefMap.Add "inner_orbit_hit{current_player.shot_combo_command4 == 1 && current_player.wizard_combo_command_phase == 2}", "Glf_1151"
Function Glf_1152(args)
  On Error Resume Next
      Glf_1152 = GetPlayerState("shot_combo_command5") = 1 And GetPlayerState("wizard_combo_command_phase") = 2
  If Err Then Glf_1152 = False
End Function
glf_funcRefMap.Add "center_orbit_left_hit{current_player.shot_combo_command5 == 1 && current_player.wizard_combo_command_phase == 2}", "Glf_1152"
Function Glf_1153(args)
  On Error Resume Next
      Glf_1153 = GetPlayerState("shot_combo_command6") = 1 And GetPlayerState("wizard_combo_command_phase") = 2
  If Err Then Glf_1153 = False
End Function
glf_funcRefMap.Add "center_orbit_right_hit{current_player.shot_combo_command6 == 1 && current_player.wizard_combo_command_phase == 2}", "Glf_1153"
Function Glf_1154(args)
  On Error Resume Next
      Glf_1154 = GetPlayerState("shot_combo_command7") = 1 And GetPlayerState("wizard_combo_command_phase") = 2
  If Err Then Glf_1154 = False
End Function
glf_funcRefMap.Add "right_ramp_hit{current_player.shot_combo_command7 == 1 && current_player.wizard_combo_command_phase == 2}", "Glf_1154"
Function Glf_1155(args)
  On Error Resume Next
      Glf_1155 = GetPlayerState("shot_combo_command8") = 1 And GetPlayerState("wizard_combo_command_phase") = 2
  If Err Then Glf_1155 = False
End Function
glf_funcRefMap.Add "right_orbit_hit{current_player.shot_combo_command8 == 1 && current_player.wizard_combo_command_phase == 2}", "Glf_1155"
Function Glf_1156(args)
  On Error Resume Next
      Glf_1156 = GetPlayerState("wizard_combo_command_phase") = 2
  If Err Then Glf_1156 = False
End Function
glf_funcRefMap.Add "ccwiz_shots_on_complete{current_player.wizard_combo_command_phase == 2}", "Glf_1156"
Function Glf_1157(args)
  On Error Resume Next
      Glf_1157 = GetPlayerState("ccwiz_super_jp") = 2
  If Err Then Glf_1157 = False
End Function
glf_funcRefMap.Add "balldevice_scoop_ball_entered{current_player.ccwiz_super_jp == 2}", "Glf_1157"
Function Glf_1158(args)
  On Error Resume Next
      Glf_1158 = GetPlayerState("wizard_combo_command_phase") = 1
  If Err Then Glf_1158 = False
End Function
glf_funcRefMap.Add "timer_ccwiz_bumper_lights_tick{current_player.wizard_combo_command_phase == 1}", "Glf_1158"
Function Glf_1159(args)
  On Error Resume Next
      Glf_1159 = GetPlayerState("wizard_combo_command_phase") = 2
  If Err Then Glf_1159 = False
End Function
glf_funcRefMap.Add "timer_ccwiz_bumper_lights_tick{current_player.wizard_combo_command_phase == 2}", "Glf_1159"
Function Glf_1160(args)
  On Error Resume Next
      Glf_1160 = GetPlayerState("shot_combo_command1") = 0
  If Err Then Glf_1160 = False
End Function
glf_funcRefMap.Add "combo_command1_ready{current_player.shot_combo_command1 == 0}", "Glf_1160"
Function Glf_1161(args)
  On Error Resume Next
      Glf_1161 = GetPlayerState("shot_combo_command2") = 0
  If Err Then Glf_1161 = False
End Function
glf_funcRefMap.Add "combo_command2_ready{current_player.shot_combo_command2 == 0}", "Glf_1161"
Function Glf_1162(args)
  On Error Resume Next
      Glf_1162 = GetPlayerState("shot_combo_command3") = 0
  If Err Then Glf_1162 = False
End Function
glf_funcRefMap.Add "combo_command3_ready{current_player.shot_combo_command3 == 0}", "Glf_1162"
Function Glf_1163(args)
  On Error Resume Next
      Glf_1163 = GetPlayerState("shot_combo_command4") = 0
  If Err Then Glf_1163 = False
End Function
glf_funcRefMap.Add "combo_command4_ready{current_player.shot_combo_command4 == 0}", "Glf_1163"
Function Glf_1164(args)
  On Error Resume Next
      Glf_1164 = GetPlayerState("shot_combo_command5") = 0
  If Err Then Glf_1164 = False
End Function
glf_funcRefMap.Add "combo_command5_ready{current_player.shot_combo_command5 == 0}", "Glf_1164"
Function Glf_1165(args)
  On Error Resume Next
      Glf_1165 = GetPlayerState("shot_combo_command6") = 0
  If Err Then Glf_1165 = False
End Function
glf_funcRefMap.Add "combo_command6_ready{current_player.shot_combo_command6 == 0}", "Glf_1165"
Function Glf_1166(args)
  On Error Resume Next
      Glf_1166 = GetPlayerState("shot_combo_command7") = 0
  If Err Then Glf_1166 = False
End Function
glf_funcRefMap.Add "combo_command7_ready{current_player.shot_combo_command7 == 0}", "Glf_1166"
Function Glf_1167(args)
  On Error Resume Next
      Glf_1167 = GetPlayerState("shot_combo_command8") = 0
  If Err Then Glf_1167 = False
End Function
glf_funcRefMap.Add "combo_command8_ready{current_player.shot_combo_command8 == 0}", "Glf_1167"
Function Glf_1168(args)
  On Error Resume Next
      Glf_1168 = GetPlayerState("shot_combo_command1")=1
  If Err Then Glf_1168 = False
End Function
glf_funcRefMap.Add "left_side_hit{current_player.shot_combo_command1==1}", "Glf_1168"
Function Glf_1169(args)
  On Error Resume Next
      Glf_1169 = GetPlayerState("shot_combo_command2")=1
  If Err Then Glf_1169 = False
End Function
glf_funcRefMap.Add "left_orbit_hit{current_player.shot_combo_command2==1}", "Glf_1169"
Function Glf_1170(args)
  On Error Resume Next
      Glf_1170 = GetPlayerState("shot_combo_command3")=1
  If Err Then Glf_1170 = False
End Function
glf_funcRefMap.Add "left_ramp_hit{current_player.shot_combo_command3==1}", "Glf_1170"
Function Glf_1171(args)
  On Error Resume Next
      Glf_1171 = GetPlayerState("shot_combo_command4")=1
  If Err Then Glf_1171 = False
End Function
glf_funcRefMap.Add "inner_orbit_hit{current_player.shot_combo_command4==1}", "Glf_1171"
Function Glf_1172(args)
  On Error Resume Next
      Glf_1172 = GetPlayerState("shot_combo_command5")=1
  If Err Then Glf_1172 = False
End Function
glf_funcRefMap.Add "center_orbit_left_hit{current_player.shot_combo_command5==1}", "Glf_1172"
Function Glf_1173(args)
  On Error Resume Next
      Glf_1173 = GetPlayerState("shot_combo_command6")=1
  If Err Then Glf_1173 = False
End Function
glf_funcRefMap.Add "center_orbit_right_hit{current_player.shot_combo_command6==1}", "Glf_1173"
Function Glf_1174(args)
  On Error Resume Next
      Glf_1174 = GetPlayerState("shot_combo_command7")=1
  If Err Then Glf_1174 = False
End Function
glf_funcRefMap.Add "right_ramp_hit{current_player.shot_combo_command7==1}", "Glf_1174"
Function Glf_1175(args)
  On Error Resume Next
      Glf_1175 = GetPlayerState("shot_combo_command8")=1
  If Err Then Glf_1175 = False
End Function
glf_funcRefMap.Add "right_orbit_hit{current_player.shot_combo_command8==1}", "Glf_1175"
Function Glf_1176(args)
  Glf_1176 = " COMBO "
End Function
glf_funcRefMap.Add """ COMBO """, "Glf_1176"
Function Glf_1177(args)
  Glf_1177 = "COMMAND"
End Function
glf_funcRefMap.Add """COMMAND""", "Glf_1177"
Function Glf_1178(args)
  On Error Resume Next
      Glf_1178 = glf_timers("combo_command_message").GetValue("ticks") = 1
  If Err Then Glf_1178 = False
End Function
glf_funcRefMap.Add "timer_combo_command_message_tick{devices.timers.combo_command_message.ticks == 1}", "Glf_1178"
Function Glf_1179(args)
  On Error Resume Next
      Glf_1179 = glf_timers("combo_command_message").GetValue("ticks") = 2
  If Err Then Glf_1179 = False
End Function
glf_funcRefMap.Add "timer_combo_command_message_tick{devices.timers.combo_command_message.ticks == 2}", "Glf_1179"
Function Glf_1180(args)
  On Error Resume Next
      Glf_1180 = GetPlayerState("wizard_final_hit_count") = 20
  If Err Then Glf_1180 = False
End Function
glf_funcRefMap.Add "mode_final_wave_wizard_started{current_player.wizard_final_hit_count == 20}", "Glf_1180"
Function Glf_1181(args)
  On Error Resume Next
      Glf_1181 = GetPlayerState("wizard_final_hit_count") < 20
  If Err Then Glf_1181 = False
End Function
glf_funcRefMap.Add "mode_final_wave_wizard_started{current_player.wizard_final_hit_count < 20}", "Glf_1181"
Function Glf_1182(args)
  On Error Resume Next
      Glf_1182 = GetPlayerState("fwwiz_add_ball_ready") = 1
  If Err Then Glf_1182 = False
End Function
glf_funcRefMap.Add "left_ramp_hit{current_player.fwwiz_add_ball_ready == 1}", "Glf_1182"
Function Glf_1183(args)
  On Error Resume Next
      Glf_1183 = GetPlayerState("fwwiz_add_ball_ready") = 1
  If Err Then Glf_1183 = False
End Function
glf_funcRefMap.Add "right_ramp_hit{current_player.fwwiz_add_ball_ready == 1}", "Glf_1183"
Function Glf_1184(args)
  On Error Resume Next
      Glf_1184 = GetPlayerState("fwwiz_add_ball_ready") = 2
  If Err Then Glf_1184 = False
End Function
glf_funcRefMap.Add "left_ramp_hit{current_player.fwwiz_add_ball_ready == 2}", "Glf_1184"
Function Glf_1185(args)
  On Error Resume Next
      Glf_1185 = GetPlayerState("fwwiz_add_ball_ready") = 2
  If Err Then Glf_1185 = False
End Function
glf_funcRefMap.Add "right_ramp_hit{current_player.fwwiz_add_ball_ready == 2}", "Glf_1185"
Function Glf_1186(args)
  On Error Resume Next
      Glf_1186 = GetPlayerState("wizard_final_hit_count") > 0
  If Err Then Glf_1186 = False
End Function
glf_funcRefMap.Add "asteroid_hit{current_player.wizard_final_hit_count > 0}", "Glf_1186"
Function Glf_1187(args)
  On Error Resume Next
      Glf_1187 = GetPlayerState("wizard_final_hit_count") = 3
  If Err Then Glf_1187 = False
End Function
glf_funcRefMap.Add "check_fwwiz_done{current_player.wizard_final_hit_count == 3}", "Glf_1187"
Function Glf_1188(args)
  On Error Resume Next
      Glf_1188 = GetPlayerState("wizard_final_hit_count") <= 0
  If Err Then Glf_1188 = False
End Function
glf_funcRefMap.Add "check_fwwiz_done{current_player.wizard_final_hit_count <= 0}", "Glf_1188"
Function Glf_1189(args)
  On Error Resume Next
      Glf_1189 = GetPlayerState("wizard_final_hit_count") = 19
  If Err Then Glf_1189 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 19}", "Glf_1189"
Function Glf_1190(args)
  On Error Resume Next
      Glf_1190 = GetPlayerState("wizard_final_hit_count") = 18
  If Err Then Glf_1190 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 18}", "Glf_1190"
Function Glf_1191(args)
  On Error Resume Next
      Glf_1191 = GetPlayerState("wizard_final_hit_count") = 17
  If Err Then Glf_1191 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 17}", "Glf_1191"
Function Glf_1192(args)
  On Error Resume Next
      Glf_1192 = GetPlayerState("wizard_final_hit_count") = 16
  If Err Then Glf_1192 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 16}", "Glf_1192"
Function Glf_1193(args)
  On Error Resume Next
      Glf_1193 = GetPlayerState("wizard_final_hit_count") = 15
  If Err Then Glf_1193 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 15}", "Glf_1193"
Function Glf_1194(args)
  On Error Resume Next
      Glf_1194 = GetPlayerState("wizard_final_hit_count") = 14
  If Err Then Glf_1194 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 14}", "Glf_1194"
Function Glf_1195(args)
  On Error Resume Next
      Glf_1195 = GetPlayerState("wizard_final_hit_count") = 13
  If Err Then Glf_1195 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 13}", "Glf_1195"
Function Glf_1196(args)
  On Error Resume Next
      Glf_1196 = GetPlayerState("wizard_final_hit_count") = 12
  If Err Then Glf_1196 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 12}", "Glf_1196"
Function Glf_1197(args)
  On Error Resume Next
      Glf_1197 = GetPlayerState("wizard_final_hit_count") = 11
  If Err Then Glf_1197 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 11}", "Glf_1197"
Function Glf_1198(args)
  On Error Resume Next
      Glf_1198 = GetPlayerState("wizard_final_hit_count") = 10
  If Err Then Glf_1198 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 10}", "Glf_1198"
Function Glf_1199(args)
  On Error Resume Next
      Glf_1199 = GetPlayerState("wizard_final_hit_count") = 9
  If Err Then Glf_1199 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 9}", "Glf_1199"
Function Glf_1200(args)
  On Error Resume Next
      Glf_1200 = GetPlayerState("wizard_final_hit_count") = 8
  If Err Then Glf_1200 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 8}", "Glf_1200"
Function Glf_1201(args)
  On Error Resume Next
      Glf_1201 = GetPlayerState("wizard_final_hit_count") = 7
  If Err Then Glf_1201 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 7}", "Glf_1201"
Function Glf_1202(args)
  On Error Resume Next
      Glf_1202 = GetPlayerState("wizard_final_hit_count") = 6
  If Err Then Glf_1202 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 6}", "Glf_1202"
Function Glf_1203(args)
  On Error Resume Next
      Glf_1203 = GetPlayerState("wizard_final_hit_count") = 5
  If Err Then Glf_1203 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 5}", "Glf_1203"
Function Glf_1204(args)
  On Error Resume Next
      Glf_1204 = GetPlayerState("wizard_final_hit_count") = 4
  If Err Then Glf_1204 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 4}", "Glf_1204"
Function Glf_1205(args)
  On Error Resume Next
      Glf_1205 = GetPlayerState("wizard_final_hit_count") = 3
  If Err Then Glf_1205 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 3}", "Glf_1205"
Function Glf_1206(args)
  On Error Resume Next
      Glf_1206 = GetPlayerState("wizard_final_hit_count") = 2
  If Err Then Glf_1206 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 2}", "Glf_1206"
Function Glf_1207(args)
  On Error Resume Next
      Glf_1207 = GetPlayerState("wizard_final_hit_count") = 1
  If Err Then Glf_1207 = False
End Function
glf_funcRefMap.Add "update_asteroid_glow{current_player.wizard_final_hit_count == 1}", "Glf_1207"
Function Glf_1208(args)
  On Error Resume Next
      Glf_1208 = GetPlayerState("wizard_final_hit_count") = 19
  If Err Then Glf_1208 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 19}", "Glf_1208"
Function Glf_1209(args)
  On Error Resume Next
      Glf_1209 = GetPlayerState("wizard_final_hit_count") = 18
  If Err Then Glf_1209 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 18}", "Glf_1209"
Function Glf_1210(args)
  On Error Resume Next
      Glf_1210 = GetPlayerState("wizard_final_hit_count") = 17
  If Err Then Glf_1210 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 17}", "Glf_1210"
Function Glf_1211(args)
  On Error Resume Next
      Glf_1211 = GetPlayerState("wizard_final_hit_count") = 16
  If Err Then Glf_1211 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 16}", "Glf_1211"
Function Glf_1212(args)
  On Error Resume Next
      Glf_1212 = GetPlayerState("wizard_final_hit_count") = 15
  If Err Then Glf_1212 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 15}", "Glf_1212"
Function Glf_1213(args)
  On Error Resume Next
      Glf_1213 = GetPlayerState("wizard_final_hit_count") = 14
  If Err Then Glf_1213 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 14}", "Glf_1213"
Function Glf_1214(args)
  On Error Resume Next
      Glf_1214 = GetPlayerState("wizard_final_hit_count") = 13
  If Err Then Glf_1214 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 13}", "Glf_1214"
Function Glf_1215(args)
  On Error Resume Next
      Glf_1215 = GetPlayerState("wizard_final_hit_count") = 12
  If Err Then Glf_1215 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 12}", "Glf_1215"
Function Glf_1216(args)
  On Error Resume Next
      Glf_1216 = GetPlayerState("wizard_final_hit_count") = 11
  If Err Then Glf_1216 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 11}", "Glf_1216"
Function Glf_1217(args)
  On Error Resume Next
      Glf_1217 = GetPlayerState("wizard_final_hit_count") = 10
  If Err Then Glf_1217 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 10}", "Glf_1217"
Function Glf_1218(args)
  On Error Resume Next
      Glf_1218 = GetPlayerState("wizard_final_hit_count") = 9
  If Err Then Glf_1218 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 9}", "Glf_1218"
Function Glf_1219(args)
  On Error Resume Next
      Glf_1219 = GetPlayerState("wizard_final_hit_count") = 8
  If Err Then Glf_1219 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 8}", "Glf_1219"
Function Glf_1220(args)
  On Error Resume Next
      Glf_1220 = GetPlayerState("wizard_final_hit_count") = 7
  If Err Then Glf_1220 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 7}", "Glf_1220"
Function Glf_1221(args)
  On Error Resume Next
      Glf_1221 = GetPlayerState("wizard_final_hit_count") = 6
  If Err Then Glf_1221 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 6}", "Glf_1221"
Function Glf_1222(args)
  On Error Resume Next
      Glf_1222 = GetPlayerState("wizard_final_hit_count") = 5
  If Err Then Glf_1222 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 5}", "Glf_1222"
Function Glf_1223(args)
  On Error Resume Next
      Glf_1223 = GetPlayerState("wizard_final_hit_count") = 4
  If Err Then Glf_1223 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 4}", "Glf_1223"
Function Glf_1224(args)
  On Error Resume Next
      Glf_1224 = GetPlayerState("wizard_final_hit_count") = 3
  If Err Then Glf_1224 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 3}", "Glf_1224"
Function Glf_1225(args)
  On Error Resume Next
      Glf_1225 = GetPlayerState("wizard_final_hit_count") = 2
  If Err Then Glf_1225 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 2}", "Glf_1225"
Function Glf_1226(args)
  On Error Resume Next
      Glf_1226 = GetPlayerState("wizard_final_hit_count") = 1
  If Err Then Glf_1226 = False
End Function
glf_funcRefMap.Add "update_fwwiz_score{current_player.wizard_final_hit_count == 1}", "Glf_1226"
Function Glf_1227(args)
  On Error Resume Next
      Glf_1227 = GetPlayerState("wizard_final_hit_count") > 1
  If Err Then Glf_1227 = False
End Function
glf_funcRefMap.Add "s_DTMeteor1_active{current_player.wizard_final_hit_count > 1}", "Glf_1227"
Function Glf_1228(args)
  On Error Resume Next
      Glf_1228 = GetPlayerState("wizard_final_hit_count") > 1
  If Err Then Glf_1228 = False
End Function
glf_funcRefMap.Add "s_DTMeteor2_active{current_player.wizard_final_hit_count > 1}", "Glf_1228"
Function Glf_1229(args)
  On Error Resume Next
      Glf_1229 = GetPlayerState("wizard_final_hit_count") > 1
  If Err Then Glf_1229 = False
End Function
glf_funcRefMap.Add "s_DTMeteor3_active{current_player.wizard_final_hit_count > 1}", "Glf_1229"
Function Glf_1230(args)
  On Error Resume Next
      Glf_1230 = GetPlayerState("wizard_final_hit_count") > 1
  If Err Then Glf_1230 = False
End Function
glf_funcRefMap.Add "s_DTMeteor4_active{current_player.wizard_final_hit_count > 1}", "Glf_1230"
Function Glf_1231(args)
  On Error Resume Next
      Glf_1231 = GetPlayerState("wizard_final_hit_count") > 1
  If Err Then Glf_1231 = False
End Function
glf_funcRefMap.Add "timer_fwwiz_add_meteor_complete{current_player.wizard_final_hit_count > 1}", "Glf_1231"
Function Glf_1232(args)
  On Error Resume Next
      Glf_1232 = glf_timers("asteroid_explodes").GetValue("ticks") = 4
  If Err Then Glf_1232 = False
End Function
glf_funcRefMap.Add "timer_asteroid_explodes_tick{devices.timers.asteroid_explodes.ticks == 4}", "Glf_1232"
Function Glf_1233(args)
  On Error Resume Next
      Glf_1233 = glf_timers("final_wave_gi").GetValue("ticks") = 1
  If Err Then Glf_1233 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 1}", "Glf_1233"
Function Glf_1234(args)
  On Error Resume Next
      Glf_1234 = glf_timers("final_wave_gi").GetValue("ticks") = 2
  If Err Then Glf_1234 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 2}", "Glf_1234"
Function Glf_1235(args)
  On Error Resume Next
      Glf_1235 = glf_timers("final_wave_gi").GetValue("ticks") = 3
  If Err Then Glf_1235 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 3}", "Glf_1235"
Function Glf_1236(args)
  On Error Resume Next
      Glf_1236 = glf_timers("final_wave_gi").GetValue("ticks") = 4
  If Err Then Glf_1236 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 4}", "Glf_1236"
Function Glf_1237(args)
  On Error Resume Next
      Glf_1237 = glf_timers("final_wave_gi").GetValue("ticks") = 5
  If Err Then Glf_1237 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 5}", "Glf_1237"
Function Glf_1238(args)
  On Error Resume Next
      Glf_1238 = glf_timers("final_wave_gi").GetValue("ticks") = 6
  If Err Then Glf_1238 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 6}", "Glf_1238"
Function Glf_1239(args)
  On Error Resume Next
      Glf_1239 = glf_timers("final_wave_gi").GetValue("ticks") = 7
  If Err Then Glf_1239 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 7}", "Glf_1239"
Function Glf_1240(args)
  On Error Resume Next
      Glf_1240 = glf_timers("final_wave_gi").GetValue("ticks") = 8
  If Err Then Glf_1240 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 8}", "Glf_1240"
Function Glf_1241(args)
  On Error Resume Next
      Glf_1241 = glf_timers("final_wave_gi").GetValue("ticks") = 9
  If Err Then Glf_1241 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 9}", "Glf_1241"
Function Glf_1242(args)
  On Error Resume Next
      Glf_1242 = glf_timers("final_wave_gi").GetValue("ticks") = 10
  If Err Then Glf_1242 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 10}", "Glf_1242"
Function Glf_1243(args)
  On Error Resume Next
      Glf_1243 = glf_timers("final_wave_gi").GetValue("ticks") = 11
  If Err Then Glf_1243 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 11}", "Glf_1243"
Function Glf_1244(args)
  On Error Resume Next
      Glf_1244 = glf_timers("final_wave_gi").GetValue("ticks") = 12
  If Err Then Glf_1244 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 12}", "Glf_1244"
Function Glf_1245(args)
  On Error Resume Next
      Glf_1245 = glf_timers("final_wave_gi").GetValue("ticks") = 13
  If Err Then Glf_1245 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 13}", "Glf_1245"
Function Glf_1246(args)
  On Error Resume Next
      Glf_1246 = glf_timers("final_wave_gi").GetValue("ticks") = 14
  If Err Then Glf_1246 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 14}", "Glf_1246"
Function Glf_1247(args)
  On Error Resume Next
      Glf_1247 = glf_timers("final_wave_gi").GetValue("ticks") = 15
  If Err Then Glf_1247 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 15}", "Glf_1247"
Function Glf_1248(args)
  On Error Resume Next
      Glf_1248 = glf_timers("final_wave_gi").GetValue("ticks") = 16
  If Err Then Glf_1248 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 16}", "Glf_1248"
Function Glf_1249(args)
  On Error Resume Next
      Glf_1249 = glf_timers("final_wave_gi").GetValue("ticks") = 17
  If Err Then Glf_1249 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 17}", "Glf_1249"
Function Glf_1250(args)
  On Error Resume Next
      Glf_1250 = glf_timers("final_wave_gi").GetValue("ticks") = 18
  If Err Then Glf_1250 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 18}", "Glf_1250"
Function Glf_1251(args)
  On Error Resume Next
      Glf_1251 = glf_timers("final_wave_gi").GetValue("ticks") = 19
  If Err Then Glf_1251 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 19}", "Glf_1251"
Function Glf_1252(args)
  On Error Resume Next
      Glf_1252 = glf_timers("final_wave_gi").GetValue("ticks") = 20
  If Err Then Glf_1252 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 20}", "Glf_1252"
Function Glf_1253(args)
  On Error Resume Next
      Glf_1253 = glf_timers("final_wave_gi").GetValue("ticks") = 21
  If Err Then Glf_1253 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 21}", "Glf_1253"
Function Glf_1254(args)
  On Error Resume Next
      Glf_1254 = glf_timers("final_wave_gi").GetValue("ticks") = 22
  If Err Then Glf_1254 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 22}", "Glf_1254"
Function Glf_1255(args)
  On Error Resume Next
      Glf_1255 = glf_timers("final_wave_gi").GetValue("ticks") = 23
  If Err Then Glf_1255 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 23}", "Glf_1255"
Function Glf_1256(args)
  On Error Resume Next
      Glf_1256 = glf_timers("final_wave_gi").GetValue("ticks") = 24
  If Err Then Glf_1256 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 24}", "Glf_1256"
Function Glf_1257(args)
  On Error Resume Next
      Glf_1257 = glf_timers("final_wave_gi").GetValue("ticks") = 25
  If Err Then Glf_1257 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 25}", "Glf_1257"
Function Glf_1258(args)
  On Error Resume Next
      Glf_1258 = glf_timers("final_wave_gi").GetValue("ticks") = 26
  If Err Then Glf_1258 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 26}", "Glf_1258"
Function Glf_1259(args)
  On Error Resume Next
      Glf_1259 = glf_timers("final_wave_gi").GetValue("ticks") = 27
  If Err Then Glf_1259 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 27}", "Glf_1259"
Function Glf_1260(args)
  On Error Resume Next
      Glf_1260 = glf_timers("final_wave_gi").GetValue("ticks") = 28
  If Err Then Glf_1260 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 28}", "Glf_1260"
Function Glf_1261(args)
  On Error Resume Next
      Glf_1261 = glf_timers("final_wave_gi").GetValue("ticks") = 29
  If Err Then Glf_1261 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 29}", "Glf_1261"
Function Glf_1262(args)
  On Error Resume Next
      Glf_1262 = glf_timers("final_wave_gi").GetValue("ticks") = 30
  If Err Then Glf_1262 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 30}", "Glf_1262"
Function Glf_1263(args)
  On Error Resume Next
      Glf_1263 = glf_timers("final_wave_gi").GetValue("ticks") = 31
  If Err Then Glf_1263 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 31}", "Glf_1263"
Function Glf_1264(args)
  On Error Resume Next
      Glf_1264 = glf_timers("final_wave_gi").GetValue("ticks") = 32
  If Err Then Glf_1264 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 32}", "Glf_1264"
Function Glf_1265(args)
  On Error Resume Next
      Glf_1265 = glf_timers("final_wave_gi").GetValue("ticks") = 33
  If Err Then Glf_1265 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 33}", "Glf_1265"
Function Glf_1266(args)
  On Error Resume Next
      Glf_1266 = glf_timers("final_wave_gi").GetValue("ticks") = 34
  If Err Then Glf_1266 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 34}", "Glf_1266"
Function Glf_1267(args)
  On Error Resume Next
      Glf_1267 = glf_timers("final_wave_gi").GetValue("ticks") = 35
  If Err Then Glf_1267 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 35}", "Glf_1267"
Function Glf_1268(args)
  On Error Resume Next
      Glf_1268 = glf_timers("final_wave_gi").GetValue("ticks") = 36
  If Err Then Glf_1268 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 36}", "Glf_1268"
Function Glf_1269(args)
  On Error Resume Next
      Glf_1269 = glf_timers("final_wave_gi").GetValue("ticks") = 37
  If Err Then Glf_1269 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 37}", "Glf_1269"
Function Glf_1270(args)
  On Error Resume Next
      Glf_1270 = glf_timers("final_wave_gi").GetValue("ticks") = 38
  If Err Then Glf_1270 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 38}", "Glf_1270"
Function Glf_1271(args)
  On Error Resume Next
      Glf_1271 = glf_timers("final_wave_gi").GetValue("ticks") = 39
  If Err Then Glf_1271 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 39}", "Glf_1271"
Function Glf_1272(args)
  On Error Resume Next
      Glf_1272 = glf_timers("final_wave_gi").GetValue("ticks") = 40
  If Err Then Glf_1272 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 40}", "Glf_1272"
Function Glf_1273(args)
  On Error Resume Next
      Glf_1273 = glf_timers("final_wave_gi").GetValue("ticks") = 41
  If Err Then Glf_1273 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 41}", "Glf_1273"
Function Glf_1274(args)
  On Error Resume Next
      Glf_1274 = glf_timers("final_wave_gi").GetValue("ticks") = 42
  If Err Then Glf_1274 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 42}", "Glf_1274"
Function Glf_1275(args)
  On Error Resume Next
      Glf_1275 = glf_timers("final_wave_gi").GetValue("ticks") = 43
  If Err Then Glf_1275 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 43}", "Glf_1275"
Function Glf_1276(args)
  On Error Resume Next
      Glf_1276 = glf_timers("final_wave_gi").GetValue("ticks") = 44
  If Err Then Glf_1276 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 44}", "Glf_1276"
Function Glf_1277(args)
  On Error Resume Next
      Glf_1277 = glf_timers("final_wave_gi").GetValue("ticks") = 45
  If Err Then Glf_1277 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 45}", "Glf_1277"
Function Glf_1278(args)
  On Error Resume Next
      Glf_1278 = glf_timers("final_wave_gi").GetValue("ticks") = 46
  If Err Then Glf_1278 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 46}", "Glf_1278"
Function Glf_1279(args)
  On Error Resume Next
      Glf_1279 = glf_timers("final_wave_gi").GetValue("ticks") = 47
  If Err Then Glf_1279 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 47}", "Glf_1279"
Function Glf_1280(args)
  On Error Resume Next
      Glf_1280 = glf_timers("final_wave_gi").GetValue("ticks") = 48
  If Err Then Glf_1280 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 48}", "Glf_1280"
Function Glf_1281(args)
  On Error Resume Next
      Glf_1281 = glf_timers("final_wave_gi").GetValue("ticks") = 49
  If Err Then Glf_1281 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 49}", "Glf_1281"
Function Glf_1282(args)
  On Error Resume Next
      Glf_1282 = glf_timers("final_wave_gi").GetValue("ticks") = 50
  If Err Then Glf_1282 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 50}", "Glf_1282"
Function Glf_1283(args)
  On Error Resume Next
      Glf_1283 = glf_timers("final_wave_gi").GetValue("ticks") = 51
  If Err Then Glf_1283 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 51}", "Glf_1283"
Function Glf_1284(args)
  On Error Resume Next
      Glf_1284 = glf_timers("final_wave_gi").GetValue("ticks") = 52
  If Err Then Glf_1284 = False
End Function
glf_funcRefMap.Add "timer_final_wave_gi_tick{devices.timers.final_wave_gi.ticks == 52}", "Glf_1284"
Function Glf_1285(args)
  On Error Resume Next
      Glf_1285 = glf_timers("final_wave_flicker").GetValue("ticks") = 1
  If Err Then Glf_1285 = False
End Function
glf_funcRefMap.Add "timer_final_wave_flicker_tick{devices.timers.final_wave_flicker.ticks == 1}", "Glf_1285"
Function Glf_1286(args)
  On Error Resume Next
      Glf_1286 = glf_timers("final_wave_flicker").GetValue("ticks") = 7
  If Err Then Glf_1286 = False
End Function
glf_funcRefMap.Add "timer_final_wave_flicker_tick{devices.timers.final_wave_flicker.ticks == 7}", "Glf_1286"
Function Glf_1287(args)
  On Error Resume Next
      Glf_1287 = glf_timers("final_wave_flicker").GetValue("ticks") = 10
  If Err Then Glf_1287 = False
End Function
glf_funcRefMap.Add "timer_final_wave_flicker_tick{devices.timers.final_wave_flicker.ticks == 10}", "Glf_1287"
Function Glf_1288(args)
  On Error Resume Next
      Glf_1288 = glf_timers("final_wave_flicker").GetValue("ticks") = 15
  If Err Then Glf_1288 = False
End Function
glf_funcRefMap.Add "timer_final_wave_flicker_tick{devices.timers.final_wave_flicker.ticks == 15}", "Glf_1288"
Function Glf_1289(args)
  On Error Resume Next
      Glf_1289 = glf_timers("final_wave_flicker").GetValue("ticks") = 22
  If Err Then Glf_1289 = False
End Function
glf_funcRefMap.Add "timer_final_wave_flicker_tick{devices.timers.final_wave_flicker.ticks == 22}", "Glf_1289"
Function Glf_1290(args)
  On Error Resume Next
      Glf_1290 = glf_timers("final_wave_flicker").GetValue("ticks") = 24
  If Err Then Glf_1290 = False
End Function
glf_funcRefMap.Add "timer_final_wave_flicker_tick{devices.timers.final_wave_flicker.ticks == 24}", "Glf_1290"
Function Glf_1291(args)
  On Error Resume Next
      Glf_1291 = glf_timers("final_wave_flicker").GetValue("ticks") = 29
  If Err Then Glf_1291 = False
End Function
glf_funcRefMap.Add "timer_final_wave_flicker_tick{devices.timers.final_wave_flicker.ticks == 29}", "Glf_1291"
Function Glf_1292(args)
  On Error Resume Next
      Glf_1292 = GetPlayerState("shot_fwwiz_meteor1") = 0
  If Err Then Glf_1292 = False
End Function
glf_funcRefMap.Add "meteor1_raise{current_player.shot_fwwiz_meteor1 == 0}", "Glf_1292"
Function Glf_1293(args)
  On Error Resume Next
      Glf_1293 = GetPlayerState("shot_fwwiz_meteor2") = 0
  If Err Then Glf_1293 = False
End Function
glf_funcRefMap.Add "meteor2_raise{current_player.shot_fwwiz_meteor2 == 0}", "Glf_1293"
Function Glf_1294(args)
  On Error Resume Next
      Glf_1294 = GetPlayerState("shot_fwwiz_meteor3") = 0
  If Err Then Glf_1294 = False
End Function
glf_funcRefMap.Add "meteor3_raise{current_player.shot_fwwiz_meteor3 == 0}", "Glf_1294"
Function Glf_1295(args)
  On Error Resume Next
      Glf_1295 = GetPlayerState("shot_fwwiz_meteor4") = 0
  If Err Then Glf_1295 = False
End Function
glf_funcRefMap.Add "meteor4_raise{current_player.shot_fwwiz_meteor4 == 0}", "Glf_1295"
Function Glf_1296(args)
  On Error Resume Next
      Glf_1296 = glf_modes("final_wave_wizard").GetValue("active") And GetPlayerState("wizard_final_hit_count") = 0
  If Err Then Glf_1296 = False
End Function
glf_funcRefMap.Add "balldevice_trough_ball_eject_attempt{modes.final_wave_wizard.active && current_player.wizard_final_hit_count == 0}", "Glf_1296"
Function Glf_1297(args)
  Glf_1297 = 60000
End Function
glf_funcRefMap.Add "60000", "Glf_1297"
Function Glf_1298(args)
  On Error Resume Next
      Glf_1298 = glf_timers("final_wave_message").GetValue("ticks") = 2
  If Err Then Glf_1298 = False
End Function
glf_funcRefMap.Add "timer_final_wave_message_tick{devices.timers.final_wave_message.ticks == 2}", "Glf_1298"
Function Glf_1299(args)
  Glf_1299 = -10
End Function
glf_funcRefMap.Add "-10", "Glf_1299"
Function Glf_1300(args)
  On Error Resume Next
      Glf_1300 = GetPlayerState("wizard_final_hit_count") < 0
  If Err Then Glf_1300 = False
End Function
glf_funcRefMap.Add "detonate_nuke.2{current_player.wizard_final_hit_count < 0}", "Glf_1300"
Function Glf_1301(args)
  Glf_1301 = 50
End Function
glf_funcRefMap.Add "50", "Glf_1301"
Function Glf_1302(args)
  Glf_1302 = 53
End Function
glf_funcRefMap.Add "53", "Glf_1302"
Function Glf_1303(args)
  Glf_1303 = 30
End Function
glf_funcRefMap.Add "30", "Glf_1303"
Function Glf_1304(args)
  Glf_1304 = "  THE  "
End Function
glf_funcRefMap.Add """  THE  """, "Glf_1304"
Function Glf_1305(args)
  Glf_1305 = " FINAL "
End Function
glf_funcRefMap.Add """ FINAL """, "Glf_1305"
Function Glf_1306(args)
  Glf_1306 = "  WAVE  "
End Function
glf_funcRefMap.Add """  WAVE  """, "Glf_1306"
Function Glf_1307(args)
  Glf_1307 = "IS HERE "
End Function
glf_funcRefMap.Add """IS HERE """, "Glf_1307"
Function Glf_1308(args)
  On Error Resume Next
      Glf_1308 = glf_timers("final_wave_message").GetValue("ticks") = 1
  If Err Then Glf_1308 = False
End Function
glf_funcRefMap.Add "timer_final_wave_message_tick{devices.timers.final_wave_message.ticks == 1}", "Glf_1308"
Function Glf_1309(args)
  Glf_1309 = " RAMPS "
End Function
glf_funcRefMap.Add """ RAMPS """, "Glf_1309"
Function Glf_1310(args)
  Glf_1310 = " ADD A  "
End Function
glf_funcRefMap.Add """ ADD A  """, "Glf_1310"
Function Glf_1311(args)
  Glf_1311 = "  BALL  "
End Function
glf_funcRefMap.Add """  BALL  """, "Glf_1311"
Function Glf_1312(args)
  Glf_1312 = "--------"
End Function
glf_funcRefMap.Add """--------""", "Glf_1312"
Function Glf_1313(args)
  Glf_1313 = "DESTROY"
End Function
glf_funcRefMap.Add """DESTROY""", "Glf_1313"
Function Glf_1314(args)
  Glf_1314 = "HITSLEFT"
End Function
glf_funcRefMap.Add """HITSLEFT""", "Glf_1314"
Function Glf_1315(args)
  Glf_1315 = Glf_FormatValue(GetPlayerState("wizard_final_hit_count"), "0>2")
End Function
glf_funcRefMap.Add "{current_player.wizard_final_hit_count:0>2}", "Glf_1315"
Function Glf_1316(args)
  On Error Resume Next
      Glf_1316 = glf_modes("final_wave_wizard").GetValue("active")
  If Err Then Glf_1316 = False
End Function
glf_funcRefMap.Add "mode_victory_lap_started{modes.final_wave_wizard.active}", "Glf_1316"
Function Glf_1317(args)
  On Error Resume Next
      Glf_1317 = GetPlayerState("victory_lap_running") = 0
  If Err Then Glf_1317 = False
End Function
glf_funcRefMap.Add "ball_launch_hit{current_player.victory_lap_running == 0}", "Glf_1317"
Function Glf_1318(args)
  On Error Resume Next
      Glf_1318 = GetPlayerState("victory_lap_running") = 0
  If Err Then Glf_1318 = False
End Function
glf_funcRefMap.Add "s_Plunger1_active{current_player.victory_lap_running == 0}", "Glf_1318"
Function Glf_1319(args)
  Glf_1319 = 13000
End Function
glf_funcRefMap.Add "13000", "Glf_1319"
Function Glf_1320(args)
  Glf_1320 = 45000
End Function
glf_funcRefMap.Add "45000", "Glf_1320"
Function Glf_1321(args)
  Glf_1321 = " YOU "
End Function
glf_funcRefMap.Add """ YOU """, "Glf_1321"
Function Glf_1322(args)
  Glf_1322 = " SAVED "
End Function
glf_funcRefMap.Add """ SAVED """, "Glf_1322"
Function Glf_1323(args)
  Glf_1323 = "US  "
End Function
glf_funcRefMap.Add """US  """, "Glf_1323"
Function Glf_1324(args)
  Glf_1324 = "ALL "
End Function
glf_funcRefMap.Add """ALL """, "Glf_1324"
Function Glf_1325(args)
  Glf_1325 = Glf_FormatValue(glf_timers("victory_countdown").GetValue("ticks"), "0>2")
End Function
glf_funcRefMap.Add "{devices.timers.victory_countdown.ticks:0>2}", "Glf_1325"
Function Glf_1326(args)
  Glf_1326 = 150
End Function
glf_funcRefMap.Add "150", "Glf_1326"
Function Glf_1327(args)
  Glf_1327 = 4000
End Function
glf_funcRefMap.Add "4000", "Glf_1327"
Function Glf_1328(args)
  Glf_1328 = 65000
End Function
glf_funcRefMap.Add "65000", "Glf_1328"
Function Glf_1329(args)
  Glf_1329 = 1000
End Function
glf_funcRefMap.Add "1000", "Glf_1329"
Function Glf_1330(args)
  On Error Resume Next
      Glf_1330 = glf_ball_devices("moon_lock").GetValue("balls") > 0
  If Err Then Glf_1330 = False
End Function
glf_funcRefMap.Add "game_ended{devices.ball_devices.moon_lock.balls > 0}", "Glf_1330"
Function Glf_1331(args)
  Glf_1331 = 250
End Function
glf_funcRefMap.Add "250", "Glf_1331"
Dim glf_gi17_lmarr : glf_gi17_lmarr = Array(lm_gi_gi17_bs2,lm_gi_gi17_bmpbot,lm_gi_gi17_parts,lm_gi_gi17_playfield)
glf_lightMaps.Add "gi17", glf_gi17_lmarr
Dim glf_giapron_lmarr : glf_giapron_lmarr = Array(lm_gi_giapron_lflip,lm_gi_giapron_lflipu,lm_gi_giapron_parts,lm_gi_giapron_playfield,lm_gi_giapron_rflip,lm_gi_giapron_rflipu,lm_gi_giapron_rsling1,lm_gi_giapron_rsling2,lm_gi_giapron_rsling3,lm_gi_giapron_screen,lm_gi_giapron_trustpost,lm_gi_giapron_underpf,lm_gi_giapron_swp1)
glf_lightMaps.Add "giapron", glf_giapron_lmarr
Dim glf_gi22_lmarr : glf_gi22_lmarr = Array(lm_gi_gi22_asteroid1,lm_gi_gi22_asteroid2,lm_gi_gi22_asteroid3,lm_gi_gi22_asteroid4,lm_gi_gi22_br2,lm_gi_gi22_br3,lm_gi_gi22_bs2,lm_gi_gi22_bs3,lm_gi_gi22_bmpbot,lm_gi_gi22_layer1,lm_gi_gi22_parts,lm_gi_gi22_playfield,lm_gi_gi22_tm4,lm_gi_gi22_underpf,lm_gi_gi22_swc3,lm_gi_gi22_swr2)
glf_lightMaps.Add "gi22", glf_gi22_lmarr
Dim glf_LStars_lmarr : glf_LStars_lmarr = Array()
glf_lightMaps.Add "LStars", glf_LStars_lmarr
Dim glf_gi20_lmarr : glf_gi20_lmarr = Array(lm_gi_gi20_asteroid1,lm_gi_gi20_asteroid2,lm_gi_gi20_asteroid3,lm_gi_gi20_asteroid4,lm_gi_gi20_bs1,lm_gi_gi20_gatel,lm_gi_gi20_parts,lm_gi_gi20_playfield,lm_gi_gi20_ramp,lm_gi_gi20_spin,lm_gi_gi20_spinu,lm_gi_gi20_spinwire,lm_gi_gi20_tm2,lm_gi_gi20_underpf,lm_gi_gi20_swi1,lm_gi_gi20_swl1,lm_gi_gi20_swl2)
glf_lightMaps.Add "gi20", glf_gi20_lmarr
Dim glf_gi21_lmarr : glf_gi21_lmarr = Array(lm_gi_gi21_asteroid1,lm_gi_gi21_asteroid2,lm_gi_gi21_asteroid3,lm_gi_gi21_asteroid4,lm_gi_gi21_gatel,lm_gi_gi21_parts,lm_gi_gi21_playfield,lm_gi_gi21_ramp,lm_gi_gi21_spin,lm_gi_gi21_spinu,lm_gi_gi21_spinwire,lm_gi_gi21_swl1,lm_gi_gi21_swl2)
glf_lightMaps.Add "gi21", glf_gi21_lmarr
Dim glf_gi19_lmarr : glf_gi19_lmarr = Array(lm_gi_gi19_lockpin,lm_gi_gi19_parts,lm_gi_gi19_playfield,lm_gi_gi19_rflip1,lm_gi_gi19_rflip1u,lm_gi_gi19_underpf)
glf_lightMaps.Add "gi19", glf_gi19_lmarr
Dim glf_gi18_lmarr : glf_gi18_lmarr = Array(lm_gi_gi18_parts,lm_gi_gi18_playfield)
glf_lightMaps.Add "gi18", glf_gi18_lmarr
Dim glf_gi16_lmarr : glf_gi16_lmarr = Array(lm_gi_gi16_parts,lm_gi_gi16_playfield,lm_gi_gi16_ramp)
glf_lightMaps.Add "gi16", glf_gi16_lmarr
Dim glf_gi15_lmarr : glf_gi15_lmarr = Array(lm_gi_gi15_lockpin,lm_gi_gi15_parts,lm_gi_gi15_playfield,lm_gi_gi15_rflip1,lm_gi_gi15_rflip1u,lm_gi_gi15_underpf,lm_gi_gi15_swr1)
glf_lightMaps.Add "gi15", glf_gi15_lmarr
Dim glf_gi14_lmarr : glf_gi14_lmarr = Array(lm_gi_gi14_gate2,lm_gi_gi14_lockpin,lm_gi_gi14_parts,lm_gi_gi14_playfield,lm_gi_gi14_rflip1,lm_gi_gi14_rflip1u)
glf_lightMaps.Add "gi14", glf_gi14_lmarr
Dim glf_gi13_lmarr : glf_gi13_lmarr = Array(lm_gi_gi13_br2,lm_gi_gi13_br3,lm_gi_gi13_bs2,lm_gi_gi13_bs3,lm_gi_gi13_bmpbot,lm_gi_gi13_parts,lm_gi_gi13_playfield,lm_gi_gi13_rflip1,lm_gi_gi13_rflip1u,lm_gi_gi13_tm4,lm_gi_gi13_tm5,lm_gi_gi13_underpf,lm_gi_gi13_swr1)
glf_lightMaps.Add "gi13", glf_gi13_lmarr
Dim glf_gi12_lmarr : glf_gi12_lmarr = Array(lm_gi_gi12_bmpbot,lm_gi_gi12_parts,lm_gi_gi12_playfield)
glf_lightMaps.Add "gi12", glf_gi12_lmarr
Dim glf_gi11_lmarr : glf_gi11_lmarr = Array(lm_gi_gi11_bs1,lm_gi_gi11_parts,lm_gi_gi11_playfield)
glf_lightMaps.Add "gi11", glf_gi11_lmarr
Dim glf_gi10_lmarr : glf_gi10_lmarr = Array(lm_gi_gi10_gate2,lm_gi_gi10_parts,lm_gi_gi10_playfield,lm_gi_gi10_rarm,lm_gi_gi10_rflip1u,lm_gi_gi10_ts1,lm_gi_gi10_ts2,lm_gi_gi10_ts3,lm_gi_gi10_underpf,lm_gi_gi10_swro)
glf_lightMaps.Add "gi10", glf_gi10_lmarr
Dim glf_gi09_lmarr : glf_gi09_lmarr = Array(lm_gi_gi09_parts,lm_gi_gi09_playfield,lm_gi_gi09_rarm,lm_gi_gi09_swli)
glf_lightMaps.Add "gi09", glf_gi09_lmarr
Dim glf_gi08_lmarr : glf_gi08_lmarr = Array(lm_gi_gi08_lsling3,lm_gi_gi08_parts,lm_gi_gi08_playfield,lm_gi_gi08_rarm,lm_gi_gi08_rflip,lm_gi_gi08_rflipu,lm_gi_gi08_rsling1,lm_gi_gi08_rsling2,lm_gi_gi08_rsling3,lm_gi_gi08_underpf,lm_gi_gi08_swri,lm_gi_gi08_swro)
glf_lightMaps.Add "gi08", glf_gi08_lmarr
Dim glf_gi07_lmarr : glf_gi07_lmarr = Array(lm_gi_gi07_lflip,lm_gi_gi07_lflipu,lm_gi_gi07_lsling2,lm_gi_gi07_lsling3,lm_gi_gi07_parts,lm_gi_gi07_playfield,lm_gi_gi07_rarm,lm_gi_gi07_rflip,lm_gi_gi07_rflipu,lm_gi_gi07_rsling1,lm_gi_gi07_rsling2,lm_gi_gi07_rsling3,lm_gi_gi07_swri)
glf_lightMaps.Add "gi07", glf_gi07_lmarr
Dim glf_gi06_lmarr : glf_gi06_lmarr = Array(lm_gi_gi06_parts,lm_gi_gi06_playfield,lm_gi_gi06_rarm,lm_gi_gi06_rflip,lm_gi_gi06_rflipu,lm_gi_gi06_rsling1,lm_gi_gi06_rsling2,lm_gi_gi06_rsling3,lm_gi_gi06_swri,lm_gi_gi06_swro)
glf_lightMaps.Add "gi06", glf_gi06_lmarr
Dim glf_gi05_lmarr : glf_gi05_lmarr = Array(lm_gi_gi05_lflip,lm_gi_gi05_lflipu,lm_gi_gi05_parts,lm_gi_gi05_playfield,lm_gi_gi05_rarm,lm_gi_gi05_rflip,lm_gi_gi05_rflipu,lm_gi_gi05_rsling1,lm_gi_gi05_rsling2,lm_gi_gi05_rsling3,lm_gi_gi05_underpf,lm_gi_gi05_swri,lm_gi_gi05_swro)
glf_lightMaps.Add "gi05", glf_gi05_lmarr
Dim glf_gi04_lmarr : glf_gi04_lmarr = Array(lm_gi_gi04_larm,lm_gi_gi04_lflip,lm_gi_gi04_lflipu,lm_gi_gi04_lsling1,lm_gi_gi04_lsling2,lm_gi_gi04_lsling3,lm_gi_gi04_parts,lm_gi_gi04_playfield,lm_gi_gi04_rsling3,lm_gi_gi04_underpf,lm_gi_gi04_swli,lm_gi_gi04_swlo)
glf_lightMaps.Add "gi04", glf_gi04_lmarr
Dim glf_gi03_lmarr : glf_gi03_lmarr = Array(lm_gi_gi03_larm,lm_gi_gi03_lflip,lm_gi_gi03_lflipu,lm_gi_gi03_lsling1,lm_gi_gi03_lsling2,lm_gi_gi03_lsling3,lm_gi_gi03_parts,lm_gi_gi03_playfield,lm_gi_gi03_rflip,lm_gi_gi03_rflipu,lm_gi_gi03_rsling2,lm_gi_gi03_rsling3,lm_gi_gi03_swli)
glf_lightMaps.Add "gi03", glf_gi03_lmarr
Dim glf_gi02_lmarr : glf_gi02_lmarr = Array(lm_gi_gi02_br1,lm_gi_gi02_larm,lm_gi_gi02_lflip,lm_gi_gi02_lflipu,lm_gi_gi02_lsling1,lm_gi_gi02_lsling2,lm_gi_gi02_lsling3,lm_gi_gi02_parts,lm_gi_gi02_playfield,lm_gi_gi02_rarm,lm_gi_gi02_rflip,lm_gi_gi02_rflipu,lm_gi_gi02_rsling3,lm_gi_gi02_underpf,lm_gi_gi02_swli,lm_gi_gi02_swlo)
glf_lightMaps.Add "gi02", glf_gi02_lmarr
Dim glf_gi01_lmarr : glf_gi01_lmarr = Array(lm_gi_gi01_larm,lm_gi_gi01_lflip,lm_gi_gi01_lflipu,lm_gi_gi01_lsling1,lm_gi_gi01_lsling2,lm_gi_gi01_lsling3,lm_gi_gi01_parts,lm_gi_gi01_playfield,lm_gi_gi01_rarm,lm_gi_gi01_rflip,lm_gi_gi01_rflipu,lm_gi_gi01_rsling1,lm_gi_gi01_rsling3,lm_gi_gi01_underpf,lm_gi_gi01_swli,lm_gi_gi01_swlo)
glf_lightMaps.Add "gi01", glf_gi01_lmarr
Dim glf_LPF_lmarr : glf_LPF_lmarr = Array(lm_l_lpf_asteroid1,lm_l_lpf_asteroid2,lm_l_lpf_asteroid3,lm_l_lpf_asteroid4,lm_l_lpf_parts,lm_l_lpf_playfield,lm_l_lpf_tm3,lm_l_lpf_underpf)
glf_lightMaps.Add "LPF", glf_LPF_lmarr
Dim glf_LEBR_lmarr : glf_LEBR_lmarr = Array(lm_l_lebr_parts,lm_l_lebr_playfield,lm_l_lebr_underpf)
glf_lightMaps.Add "LEBR", glf_LEBR_lmarr
Dim glf_LS5_lmarr : glf_LS5_lmarr = Array(lm_l_ls5_parts,lm_l_ls5_playfield,lm_l_ls5_rflip1u,lm_l_ls5_underpf)
glf_lightMaps.Add "LS5", glf_LS5_lmarr
Dim glf_LS1_lmarr : glf_LS1_lmarr = Array(lm_l_ls1_bs1,lm_l_ls1_parts,lm_l_ls1_playfield,lm_l_ls1_tm1,lm_l_ls1_underpf)
glf_lightMaps.Add "LS1", glf_LS1_lmarr
Dim glf_LS2_lmarr : glf_LS2_lmarr = Array(lm_l_ls2_bs1,lm_l_ls2_bmpbot,lm_l_ls2_parts,lm_l_ls2_playfield,lm_l_ls2_underpf)
glf_lightMaps.Add "LS2", glf_LS2_lmarr
Dim glf_LS3_lmarr : glf_LS3_lmarr = Array(lm_l_ls3_parts,lm_l_ls3_playfield,lm_l_ls3_underpf)
glf_lightMaps.Add "LS3", glf_LS3_lmarr
Dim glf_LS4_lmarr : glf_LS4_lmarr = Array(lm_l_ls4_parts,lm_l_ls4_playfield,lm_l_ls4_underpf)
glf_lightMaps.Add "LS4", glf_LS4_lmarr
Dim glf_LS6_lmarr : glf_LS6_lmarr = Array(lm_l_ls6_parts,lm_l_ls6_playfield,lm_l_ls6_rflip1,lm_l_ls6_rflip1u,lm_l_ls6_underpf)
glf_lightMaps.Add "LS6", glf_LS6_lmarr
Dim glf_LSwC3_lmarr : glf_LSwC3_lmarr = Array(lm_l_lswc3_asteroid1,lm_l_lswc3_asteroid2,lm_l_lswc3_asteroid3,lm_l_lswc3_asteroid4,lm_l_lswc3_parts,lm_l_lswc3_playfield,lm_l_lswc3_underpf,lm_l_lswc3_swc2,lm_l_lswc3_swc3)
glf_lightMaps.Add "LSwC3", glf_LSwC3_lmarr
Dim glf_LSwC2_lmarr : glf_LSwC2_lmarr = Array(lm_l_lswc2_asteroid1,lm_l_lswc2_asteroid2,lm_l_lswc2_asteroid3,lm_l_lswc2_asteroid4,lm_l_lswc2_parts,lm_l_lswc2_playfield,lm_l_lswc2_tm3,lm_l_lswc2_underpf,lm_l_lswc2_swc1,lm_l_lswc2_swc2)
glf_lightMaps.Add "LSwC2", glf_LSwC2_lmarr
Dim glf_LSwC1_lmarr : glf_LSwC1_lmarr = Array(lm_l_lswc1_asteroid1,lm_l_lswc1_asteroid2,lm_l_lswc1_asteroid3,lm_l_lswc1_asteroid4,lm_l_lswc1_parts,lm_l_lswc1_playfield,lm_l_lswc1_underpf,lm_l_lswc1_swc1,lm_l_lswc1_swc2)
glf_lightMaps.Add "LSwC1", glf_LSwC1_lmarr
Dim glf_LCWiz_lmarr : glf_LCWiz_lmarr = Array(lm_l_lcwiz_parts,lm_l_lcwiz_playfield,lm_l_lcwiz_underpf)
glf_lightMaps.Add "LCWiz", glf_LCWiz_lmarr
Dim glf_LLWiz_lmarr : glf_LLWiz_lmarr = Array(lm_l_llwiz_parts,lm_l_llwiz_playfield,lm_l_llwiz_underpf)
glf_lightMaps.Add "LLWiz", glf_LLWiz_lmarr
Dim glf_LC1_lmarr : glf_LC1_lmarr = Array(lm_l_lc1_lflip,lm_l_lc1_lflipu,lm_l_lc1_lsling1,lm_l_lc1_lsling2,lm_l_lc1_lsling3,lm_l_lc1_parts,lm_l_lc1_playfield,lm_l_lc1_underpf)
glf_lightMaps.Add "LC1", glf_LC1_lmarr
Dim glf_LC2_lmarr : glf_LC2_lmarr = Array(lm_l_lc2_lflip,lm_l_lc2_lflipu,lm_l_lc2_playfield,lm_l_lc2_underpf)
glf_lightMaps.Add "LC2", glf_LC2_lmarr
Dim glf_LC3_lmarr : glf_LC3_lmarr = Array(lm_l_lc3_lflip,lm_l_lc3_lflipu,lm_l_lc3_playfield,lm_l_lc3_rflipu,lm_l_lc3_underpf)
glf_lightMaps.Add "LC3", glf_LC3_lmarr
Dim glf_LC4_lmarr : glf_LC4_lmarr = Array(lm_l_lc4_lflip,lm_l_lc4_lflipu,lm_l_lc4_playfield,lm_l_lc4_rflipu,lm_l_lc4_underpf)
glf_lightMaps.Add "LC4", glf_LC4_lmarr
Dim glf_LC5_lmarr : glf_LC5_lmarr = Array(lm_l_lc5_lflipu,lm_l_lc5_playfield,lm_l_lc5_rflip,lm_l_lc5_rflipu,lm_l_lc5_underpf)
glf_lightMaps.Add "LC5", glf_LC5_lmarr
Dim glf_LC6_lmarr : glf_LC6_lmarr = Array(lm_l_lc6_lflipu,lm_l_lc6_playfield,lm_l_lc6_rflip,lm_l_lc6_rflipu,lm_l_lc6_underpf)
glf_lightMaps.Add "LC6", glf_LC6_lmarr
Dim glf_LC7_lmarr : glf_LC7_lmarr = Array(lm_l_lc7_playfield,lm_l_lc7_rflip,lm_l_lc7_rflipu,lm_l_lc7_underpf)
glf_lightMaps.Add "LC7", glf_LC7_lmarr
Dim glf_LC8_lmarr : glf_LC8_lmarr = Array(lm_l_lc8_parts,lm_l_lc8_playfield,lm_l_lc8_rflip,lm_l_lc8_rflipu,lm_l_lc8_rsling1,lm_l_lc8_rsling2,lm_l_lc8_rsling3,lm_l_lc8_underpf)
glf_lightMaps.Add "LC8", glf_LC8_lmarr
Dim glf_LWiz_lmarr : glf_LWiz_lmarr = Array(lm_l_lwiz_parts,lm_l_lwiz_playfield,lm_l_lwiz_underpf)
glf_lightMaps.Add "LWiz", glf_LWiz_lmarr
Dim glf_LW9_lmarr : glf_LW9_lmarr = Array(lm_l_lw9_parts,lm_l_lw9_playfield,lm_l_lw9_underpf)
glf_lightMaps.Add "LW9", glf_LW9_lmarr
Dim glf_LW8_lmarr : glf_LW8_lmarr = Array(lm_l_lw8_parts,lm_l_lw8_playfield,lm_l_lw8_underpf)
glf_lightMaps.Add "LW8", glf_LW8_lmarr
Dim glf_LW7_lmarr : glf_LW7_lmarr = Array(lm_l_lw7_parts,lm_l_lw7_playfield,lm_l_lw7_underpf)
glf_lightMaps.Add "LW7", glf_LW7_lmarr
Dim glf_LW6_lmarr : glf_LW6_lmarr = Array(lm_l_lw6_parts,lm_l_lw6_playfield,lm_l_lw6_underpf)
glf_lightMaps.Add "LW6", glf_LW6_lmarr
Dim glf_LW5_lmarr : glf_LW5_lmarr = Array(lm_l_lw5_parts,lm_l_lw5_playfield,lm_l_lw5_underpf)
glf_lightMaps.Add "LW5", glf_LW5_lmarr
Dim glf_LW4_lmarr : glf_LW4_lmarr = Array(lm_l_lw4_parts,lm_l_lw4_playfield,lm_l_lw4_underpf)
glf_lightMaps.Add "LW4", glf_LW4_lmarr
Dim glf_LW3_lmarr : glf_LW3_lmarr = Array(lm_l_lw3_parts,lm_l_lw3_playfield,lm_l_lw3_underpf)
glf_lightMaps.Add "LW3", glf_LW3_lmarr
Dim glf_LW2_lmarr : glf_LW2_lmarr = Array(lm_l_lw2_parts,lm_l_lw2_playfield,lm_l_lw2_underpf)
glf_lightMaps.Add "LW2", glf_LW2_lmarr
Dim glf_LW1_lmarr : glf_LW1_lmarr = Array(lm_l_lw1_parts,lm_l_lw1_playfield,lm_l_lw1_underpf)
glf_lightMaps.Add "LW1", glf_LW1_lmarr
Dim glf_LMLR_lmarr : glf_LMLR_lmarr = Array(lm_l_lmlr_parts,lm_l_lmlr_playfield,lm_l_lmlr_underpf)
glf_lightMaps.Add "LMLR", glf_LMLR_lmarr
Dim glf_LMR_lmarr : glf_LMR_lmarr = Array(lm_l_lmr_parts,lm_l_lmr_playfield,lm_l_lmr_underpf)
glf_lightMaps.Add "LMR", glf_LMR_lmarr
Dim glf_LX_lmarr : glf_LX_lmarr = Array(lm_l_lx_gater,lm_l_lx_parts,lm_l_lx_playfield,lm_l_lx_tm4,lm_l_lx_underpf)
glf_lightMaps.Add "LX", glf_LX_lmarr
Dim glf_LPC5_lmarr : glf_LPC5_lmarr = Array(lm_l_lpc5_asteroid1,lm_l_lpc5_asteroid2,lm_l_lpc5_asteroid3,lm_l_lpc5_asteroid4,lm_l_lpc5_parts,lm_l_lpc5_playfield,lm_l_lpc5_tm3,lm_l_lpc5_tm4,lm_l_lpc5_underpf,lm_l_lpc5_swc3)
glf_lightMaps.Add "LPC5", glf_LPC5_lmarr
Dim glf_LPC4_lmarr : glf_LPC4_lmarr = Array(lm_l_lpc4_asteroid1,lm_l_lpc4_asteroid2,lm_l_lpc4_asteroid3,lm_l_lpc4_asteroid4,lm_l_lpc4_parts,lm_l_lpc4_playfield,lm_l_lpc4_ramp,lm_l_lpc4_tm3,lm_l_lpc4_underpf,lm_l_lpc4_swc1)
glf_lightMaps.Add "LPC4", glf_LPC4_lmarr
Dim glf_LSC3_lmarr : glf_LSC3_lmarr = Array(lm_l_lsc3_parts,lm_l_lsc3_playfield,lm_l_lsc3_ts3,lm_l_lsc3_underpf)
glf_lightMaps.Add "LSC3", glf_LSC3_lmarr
Dim glf_LSC2_lmarr : glf_LSC2_lmarr = Array(lm_l_lsc2_parts,lm_l_lsc2_playfield,lm_l_lsc2_ts1,lm_l_lsc2_ts2,lm_l_lsc2_ts3,lm_l_lsc2_underpf)
glf_lightMaps.Add "LSC2", glf_LSC2_lmarr
Dim glf_LSC1_lmarr : glf_LSC1_lmarr = Array(lm_l_lsc1_parts,lm_l_lsc1_playfield,lm_l_lsc1_ts1,lm_l_lsc1_ts2,lm_l_lsc1_underpf)
glf_lightMaps.Add "LSC1", glf_LSC1_lmarr
Dim glf_LF3_lmarr : glf_LF3_lmarr = Array(lm_l_lf3_parts,lm_l_lf3_playfield,lm_l_lf3_tm5,lm_l_lf3_underpf)
glf_lightMaps.Add "LF3", glf_LF3_lmarr
Dim glf_LF2_lmarr : glf_LF2_lmarr = Array(lm_l_lf2_parts,lm_l_lf2_playfield,lm_l_lf2_tm5,lm_l_lf2_underpf)
glf_lightMaps.Add "LF2", glf_LF2_lmarr
Dim glf_LF1_lmarr : glf_LF1_lmarr = Array(lm_l_lf1_parts,lm_l_lf1_playfield,lm_l_lf1_underpf,lm_l_lf1_swr1)
glf_lightMaps.Add "LF1", glf_LF1_lmarr
Dim glf_LPC3_lmarr : glf_LPC3_lmarr = Array(lm_l_lpc3_parts,lm_l_lpc3_playfield,lm_l_lpc3_underpf)
glf_lightMaps.Add "LPC3", glf_LPC3_lmarr
Dim glf_LPC2_lmarr : glf_LPC2_lmarr = Array(lm_l_lpc2_parts,lm_l_lpc2_playfield,lm_l_lpc2_tm2,lm_l_lpc2_underpf)
glf_lightMaps.Add "LPC2", glf_LPC2_lmarr
Dim glf_LPC1_lmarr : glf_LPC1_lmarr = Array(lm_l_lpc1_asteroid1,lm_l_lpc1_gatel,lm_l_lpc1_parts,lm_l_lpc1_playfield,lm_l_lpc1_ramp,lm_l_lpc1_tm2,lm_l_lpc1_underpf)
glf_lightMaps.Add "LPC1", glf_LPC1_lmarr
Dim glf_LTW2_lmarr : glf_LTW2_lmarr = Array(lm_l_ltw2_parts,lm_l_ltw2_playfield,lm_l_ltw2_underpf)
glf_lightMaps.Add "LTW2", glf_LTW2_lmarr
Dim glf_LTW1_lmarr : glf_LTW1_lmarr = Array(lm_l_ltw1_parts,lm_l_ltw1_playfield,lm_l_ltw1_ramp,lm_l_ltw1_underpf)
glf_lightMaps.Add "LTW1", glf_LTW1_lmarr
Dim glf_LCC3_lmarr : glf_LCC3_lmarr = Array(lm_l_lcc3_parts,lm_l_lcc3_playfield,lm_l_lcc3_underpf)
glf_lightMaps.Add "LCC3", glf_LCC3_lmarr
Dim glf_LCC2_lmarr : glf_LCC2_lmarr = Array(lm_l_lcc2_parts,lm_l_lcc2_playfield,lm_l_lcc2_underpf)
glf_lightMaps.Add "LCC2", glf_LCC2_lmarr
Dim glf_LCC1_lmarr : glf_LCC1_lmarr = Array(lm_l_lcc1_parts,lm_l_lcc1_playfield,lm_l_lcc1_ramp,lm_l_lcc1_underpf,lm_l_lcc1_swl1)
glf_lightMaps.Add "LCC1", glf_LCC1_lmarr
Dim glf_LMet4_lmarr : glf_LMet4_lmarr = Array(lm_l_lmet4_parts,lm_l_lmet4_playfield,lm_l_lmet4_tmet4,lm_l_lmet4_underpf)
glf_lightMaps.Add "LMet4", glf_LMet4_lmarr
Dim glf_LMet3_lmarr : glf_LMet3_lmarr = Array(lm_l_lmet3_parts,lm_l_lmet3_playfield,lm_l_lmet3_tmet3,lm_l_lmet3_underpf)
glf_lightMaps.Add "LMet3", glf_LMet3_lmarr
Dim glf_LMet2_lmarr : glf_LMet2_lmarr = Array(lm_l_lmet2_bmpbot,lm_l_lmet2_parts,lm_l_lmet2_playfield,lm_l_lmet2_tmet2,lm_l_lmet2_underpf)
glf_lightMaps.Add "LMet2", glf_LMet2_lmarr
Dim glf_LMet1_lmarr : glf_LMet1_lmarr = Array(lm_l_lmet1_br1,lm_l_lmet1_bs1,lm_l_lmet1_parts,lm_l_lmet1_playfield,lm_l_lmet1_tmet1,lm_l_lmet1_underpf)
glf_lightMaps.Add "LMet1", glf_LMet1_lmarr
Dim glf_LM5_lmarr : glf_LM5_lmarr = Array(lm_l_lm5_parts,lm_l_lm5_playfield,lm_l_lm5_tm5,lm_l_lm5_underpf)
glf_lightMaps.Add "LM5", glf_LM5_lmarr
Dim glf_LM4_lmarr : glf_LM4_lmarr = Array(lm_l_lm4_parts,lm_l_lm4_playfield,lm_l_lm4_tm4,lm_l_lm4_underpf)
glf_lightMaps.Add "LM4", glf_LM4_lmarr
Dim glf_LM3_lmarr : glf_LM3_lmarr = Array(lm_l_lm3_asteroid1,lm_l_lm3_asteroid2,lm_l_lm3_asteroid3,lm_l_lm3_asteroid4,lm_l_lm3_playfield,lm_l_lm3_tm3,lm_l_lm3_underpf)
glf_lightMaps.Add "LM3", glf_LM3_lmarr
Dim glf_LM2_lmarr : glf_LM2_lmarr = Array(lm_l_lm2_parts,lm_l_lm2_playfield,lm_l_lm2_tm2,lm_l_lm2_underpf)
glf_lightMaps.Add "LM2", glf_LM2_lmarr
Dim glf_LM1_lmarr : glf_LM1_lmarr = Array(lm_l_lm1_parts,lm_l_lm1_playfield,lm_l_lm1_tm1,lm_l_lm1_underpf)
glf_lightMaps.Add "LM1", glf_LM1_lmarr
Dim glf_LSA_lmarr : glf_LSA_lmarr = Array(lm_l_lsa_lflip,lm_l_lsa_lflipu,lm_l_lsa_playfield,lm_l_lsa_rflip,lm_l_lsa_rflipu,lm_l_lsa_trustpost,lm_l_lsa_underpf)
glf_lightMaps.Add "LSA", glf_LSA_lmarr
Dim glf_LH9_lmarr : glf_LH9_lmarr = Array(lm_l_lh9_parts,lm_l_lh9_playfield,lm_l_lh9_rflip,lm_l_lh9_rflipu,lm_l_lh9_rsling1,lm_l_lh9_rsling2,lm_l_lh9_rsling3,lm_l_lh9_underpf)
glf_lightMaps.Add "LH9", glf_LH9_lmarr
Dim glf_LH8_lmarr : glf_LH8_lmarr = Array(lm_l_lh8_playfield,lm_l_lh8_rflip,lm_l_lh8_rflipu,lm_l_lh8_rsling1,lm_l_lh8_rsling2,lm_l_lh8_rsling3,lm_l_lh8_underpf)
glf_lightMaps.Add "LH8", glf_LH8_lmarr
Dim glf_LH7_lmarr : glf_LH7_lmarr = Array(lm_l_lh7_playfield,lm_l_lh7_rflip,lm_l_lh7_rflipu,lm_l_lh7_underpf)
glf_lightMaps.Add "LH7", glf_LH7_lmarr
Dim glf_LH6_lmarr : glf_LH6_lmarr = Array(lm_l_lh6_lflipu,lm_l_lh6_playfield,lm_l_lh6_rflip,lm_l_lh6_rflipu,lm_l_lh6_underpf)
glf_lightMaps.Add "LH6", glf_LH6_lmarr
Dim glf_LH5_lmarr : glf_LH5_lmarr = Array(lm_l_lh5_lflip,lm_l_lh5_lflipu,lm_l_lh5_parts,lm_l_lh5_playfield,lm_l_lh5_rflip,lm_l_lh5_rflipu,lm_l_lh5_underpf)
glf_lightMaps.Add "LH5", glf_LH5_lmarr
Dim glf_LH4_lmarr : glf_LH4_lmarr = Array(lm_l_lh4_lflip,lm_l_lh4_lflipu,lm_l_lh4_playfield,lm_l_lh4_rflipu,lm_l_lh4_underpf)
glf_lightMaps.Add "LH4", glf_LH4_lmarr
Dim glf_LH3_lmarr : glf_LH3_lmarr = Array(lm_l_lh3_lflip,lm_l_lh3_lflipu,lm_l_lh3_parts,lm_l_lh3_playfield,lm_l_lh3_underpf)
glf_lightMaps.Add "LH3", glf_LH3_lmarr
Dim glf_LH2_lmarr : glf_LH2_lmarr = Array(lm_l_lh2_lflip,lm_l_lh2_lflipu,lm_l_lh2_lsling1,lm_l_lh2_lsling2,lm_l_lh2_lsling3,lm_l_lh2_parts,lm_l_lh2_playfield,lm_l_lh2_underpf)
glf_lightMaps.Add "LH2", glf_LH2_lmarr
Dim glf_LH1_lmarr : glf_LH1_lmarr = Array(lm_l_lh1_lflip,lm_l_lh1_lflipu,lm_l_lh1_lsling1,lm_l_lh1_lsling2,lm_l_lh1_lsling3,lm_l_lh1_parts,lm_l_lh1_playfield,lm_l_lh1_underpf)
glf_lightMaps.Add "LH1", glf_LH1_lmarr
Dim glf_LPR1_lmarr : glf_LPR1_lmarr = Array(lm_l_lpr1_parts,lm_l_lpr1_playfield,lm_l_lpr1_underpf)
glf_lightMaps.Add "LPR1", glf_LPR1_lmarr
Dim glf_LPR3_lmarr : glf_LPR3_lmarr = Array(lm_l_lpr3_parts,lm_l_lpr3_playfield,lm_l_lpr3_underpf)
glf_lightMaps.Add "LPR3", glf_LPR3_lmarr
Dim glf_LPR2_lmarr : glf_LPR2_lmarr = Array(lm_l_lpr2_parts,lm_l_lpr2_playfield,lm_l_lpr2_underpf)
glf_lightMaps.Add "LPR2", glf_LPR2_lmarr
Dim glf_LPR6_lmarr : glf_LPR6_lmarr = Array(lm_l_lpr6_parts,lm_l_lpr6_playfield,lm_l_lpr6_rflipu,lm_l_lpr6_underpf)
glf_lightMaps.Add "LPR6", glf_LPR6_lmarr
Dim glf_LPR5_lmarr : glf_LPR5_lmarr = Array(lm_l_lpr5_lflipu,lm_l_lpr5_playfield,lm_l_lpr5_rflipu,lm_l_lpr5_underpf)
glf_lightMaps.Add "LPR5", glf_LPR5_lmarr
Dim glf_LPR4_lmarr : glf_LPR4_lmarr = Array(lm_l_lpr4_lflip,lm_l_lpr4_lflipu,lm_l_lpr4_parts,lm_l_lpr4_playfield,lm_l_lpr4_underpf)
glf_lightMaps.Add "LPR4", glf_LPR4_lmarr
Dim glf_LMR2_lmarr : glf_LMR2_lmarr = Array(lm_l_lmr2_parts,lm_l_lmr2_playfield,lm_l_lmr2_rsling1,lm_l_lmr2_rsling2,lm_l_lmr2_rsling3,lm_l_lmr2_underpf)
glf_lightMaps.Add "LMR2", glf_LMR2_lmarr
Dim glf_LMR1_lmarr : glf_LMR1_lmarr = Array(lm_l_lmr1_parts,lm_l_lmr1_playfield,lm_l_lmr1_rarm,lm_l_lmr1_rsling3,lm_l_lmr1_underpf)
glf_lightMaps.Add "LMR1", glf_LMR1_lmarr
Dim glf_LCR2_lmarr : glf_LCR2_lmarr = Array(lm_l_lcr2_lsling1,lm_l_lcr2_lsling2,lm_l_lcr2_lsling3,lm_l_lcr2_parts,lm_l_lcr2_playfield,lm_l_lcr2_underpf)
glf_lightMaps.Add "LCR2", glf_LCR2_lmarr
Dim glf_LCR1_lmarr : glf_LCR1_lmarr = Array(lm_l_lcr1_parts,lm_l_lcr1_playfield,lm_l_lcr1_underpf)
glf_lightMaps.Add "LCR1", glf_LCR1_lmarr
Dim glf_LRI_lmarr : glf_LRI_lmarr = Array(lm_l_lri_parts,lm_l_lri_playfield,lm_l_lri_rarm,lm_l_lri_rsling1,lm_l_lri_rsling2,lm_l_lri_rsling3,lm_l_lri_underpf,lm_l_lri_swri)
glf_lightMaps.Add "LRI", glf_LRI_lmarr
Dim glf_LRO_lmarr : glf_LRO_lmarr = Array(lm_l_lro_parts,lm_l_lro_playfield,lm_l_lro_underpf,lm_l_lro_swro)
glf_lightMaps.Add "LRO", glf_LRO_lmarr
Dim glf_LLI_lmarr : glf_LLI_lmarr = Array(lm_l_lli_lsling1,lm_l_lli_lsling2,lm_l_lli_lsling3,lm_l_lli_parts,lm_l_lli_playfield,lm_l_lli_underpf,lm_l_lli_swli,lm_l_lli_swlo)
glf_lightMaps.Add "LLI", glf_LLI_lmarr
Dim glf_LLO_lmarr : glf_LLO_lmarr = Array(lm_l_llo_parts,lm_l_llo_playfield,lm_l_llo_underpf,lm_l_llo_swlo)
glf_lightMaps.Add "LLO", glf_LLO_lmarr
Dim glf_LSR_lmarr : glf_LSR_lmarr = Array(lm_l_lsr_parts,lm_l_lsr_playfield,lm_l_lsr_underpf)
glf_lightMaps.Add "LSR", glf_LSR_lmarr
Dim glf_LSL_lmarr : glf_LSL_lmarr = Array(lm_l_lsl_parts,lm_l_lsl_playfield,lm_l_lsl_underpf)
glf_lightMaps.Add "LSL", glf_LSL_lmarr
Dim glf_LB2_lmarr : glf_LB2_lmarr = Array(lm_l_lb2_asteroid1,lm_l_lb2_asteroid2,lm_l_lb2_asteroid3,lm_l_lb2_asteroid4,lm_l_lb2_br2,lm_l_lb2_br3,lm_l_lb2_bs2,lm_l_lb2_bs3,lm_l_lb2_bmpbot,lm_l_lb2_diverterpin,lm_l_lb2_layer1,lm_l_lb2_parts,lm_l_lb2_playfield,lm_l_lb2_underpf,lm_l_lb2_swr2)
glf_lightMaps.Add "LB2", glf_LB2_lmarr
Dim glf_LB3_lmarr : glf_LB3_lmarr = Array(lm_l_lb3_asteroid1,lm_l_lb3_asteroid2,lm_l_lb3_asteroid3,lm_l_lb3_asteroid4,lm_l_lb3_br2,lm_l_lb3_br3,lm_l_lb3_bs2,lm_l_lb3_bs3,lm_l_lb3_bmpbot,lm_l_lb3_diverterpin,lm_l_lb3_layer1,lm_l_lb3_parts,lm_l_lb3_playfield,lm_l_lb3_tm4,lm_l_lb3_underpf,lm_l_lb3_swc3,lm_l_lb3_swi2)
glf_lightMaps.Add "LB3", glf_LB3_lmarr
Dim glf_LShip_lmarr : glf_LShip_lmarr = Array(lm_l_lship_parts,lm_l_lship_ship)
glf_lightMaps.Add "LShip", glf_LShip_lmarr
Dim glf_LSpot2_lmarr : glf_LSpot2_lmarr = Array()
glf_lightMaps.Add "LSpot2", glf_LSpot2_lmarr
Dim glf_LSpot2a_lmarr : glf_LSpot2a_lmarr = Array()
glf_lightMaps.Add "LSpot2a", glf_LSpot2a_lmarr
Dim glf_LSpot1_lmarr : glf_LSpot1_lmarr = Array(lm_l_lspot1_asteroid1,lm_l_lspot1_asteroid2,lm_l_lspot1_asteroid3,lm_l_lspot1_asteroid4,lm_l_lspot1_br2,lm_l_lspot1_bs3,lm_l_lspot1_bmpbot,lm_l_lspot1_gater,lm_l_lspot1_layer1,lm_l_lspot1_parts,lm_l_lspot1_playfield,lm_l_lspot1_ramp,lm_l_lspot1_spin,lm_l_lspot1_spinu,lm_l_lspot1_spinwire,lm_l_lspot1_tm3,lm_l_lspot1_tm4,lm_l_lspot1_underpf,lm_l_lspot1_swc1,lm_l_lspot1_swc2,lm_l_lspot1_swc3,lm_l_lspot1_swi2)
glf_lightMaps.Add "LSpot1", glf_LSpot1_lmarr
Dim glf_LB1_lmarr : glf_LB1_lmarr = Array(lm_l_lb1_br1,lm_l_lb1_bs1,lm_l_lb1_bmpbot,lm_l_lb1_parts,lm_l_lb1_playfield,lm_l_lb1_ship,lm_l_lb1_tm1,lm_l_lb1_swlb)
glf_lightMaps.Add "LB1", glf_LB1_lmarr
Dim glf_LB4_lmarr : glf_LB4_lmarr = Array()
glf_lightMaps.Add "LB4", glf_LB4_lmarr
Dim glf_FL6_lmarr : glf_FL6_lmarr = Array()
glf_lightMaps.Add "FL6", glf_FL6_lmarr
Dim glf_FL4_lmarr : glf_FL4_lmarr = Array(lm_f_fl4_asteroid1,lm_f_fl4_asteroid2,lm_f_fl4_asteroid3,lm_f_fl4_asteroid4,lm_f_fl4_bs3,lm_f_fl4_bmpbot,lm_f_fl4_layer1,lm_f_fl4_parts,lm_f_fl4_playfield,lm_f_fl4_rflip1,lm_f_fl4_rflip1u,lm_f_fl4_ramp,lm_f_fl4_spin,lm_f_fl4_spinu,lm_f_fl4_tm2,lm_f_fl4_tm3,lm_f_fl4_tm4,lm_f_fl4_underpf,lm_f_fl4_swc1,lm_f_fl4_swc2,lm_f_fl4_swc3)
glf_lightMaps.Add "FL4", glf_FL4_lmarr
Dim glf_FL5_lmarr : glf_FL5_lmarr = Array()
glf_lightMaps.Add "FL5", glf_FL5_lmarr
Dim glf_FL1_lmarr : glf_FL1_lmarr = Array(lm_f_fl1_asteroid1,lm_f_fl1_asteroid2,lm_f_fl1_asteroid3,lm_f_fl1_asteroid4,lm_f_fl1_br2,lm_f_fl1_br3,lm_f_fl1_bs2,lm_f_fl1_bs3,lm_f_fl1_bmpbot,lm_f_fl1_lockpin,lm_f_fl1_parts,lm_f_fl1_playfield,lm_f_fl1_rflip1,lm_f_fl1_rflip1u,lm_f_fl1_tm4,lm_f_fl1_tm5,lm_f_fl1_underpf,lm_f_fl1_swc3,lm_f_fl1_swr1,lm_f_fl1_swr2)
glf_lightMaps.Add "FL1", glf_FL1_lmarr
Dim glf_FL2_lmarr : glf_FL2_lmarr = Array(lm_f_fl2_asteroid1,lm_f_fl2_asteroid2,lm_f_fl2_asteroid3,lm_f_fl2_asteroid4,lm_f_fl2_bs2,lm_f_fl2_bs3,lm_f_fl2_bmpbot,lm_f_fl2_gatel,lm_f_fl2_parts,lm_f_fl2_playfield,lm_f_fl2_ramp,lm_f_fl2_spin,lm_f_fl2_spinu,lm_f_fl2_spinwire,lm_f_fl2_tm3,lm_f_fl2_swc1,lm_f_fl2_swi1,lm_f_fl2_swi2,lm_f_fl2_swl2,lm_f_fl2_swr2)
glf_lightMaps.Add "FL2", glf_FL2_lmarr
Dim glf_FL3_lmarr : glf_FL3_lmarr = Array(lm_f_fl3_asteroid1,lm_f_fl3_asteroid2,lm_f_fl3_asteroid3,lm_f_fl3_asteroid4,lm_f_fl3_br2,lm_f_fl3_br3,lm_f_fl3_bs2,lm_f_fl3_bs3,lm_f_fl3_bmpbot,lm_f_fl3_diverterpin,lm_f_fl3_parts,lm_f_fl3_playfield,lm_f_fl3_ramp,lm_f_fl3_spin,lm_f_fl3_spinu,lm_f_fl3_tm2,lm_f_fl3_tm3,lm_f_fl3_underpf,lm_f_fl3_swc1,lm_f_fl3_swc2,lm_f_fl3_swc3,lm_f_fl3_swi1,lm_f_fl3_swi2,lm_f_fl3_swl2,lm_f_fl3_swr1)
glf_lightMaps.Add "FL3", glf_FL3_lmarr
Dim glf_LDS_lmarr : glf_LDS_lmarr = Array(lm_l_lds_gate2,lm_l_lds_parts,lm_l_lds_playfield,lm_l_lds_rflip1,lm_l_lds_rflip1u,lm_l_lds_underpf)
glf_lightMaps.Add "LDS", glf_LDS_lmarr
Dim glf_LDP_lmarr : glf_LDP_lmarr = Array(lm_l_ldp_br2,lm_l_ldp_br3,lm_l_ldp_bs2,lm_l_ldp_bs3,lm_l_ldp_bmpbot,lm_l_ldp_diverterpin,lm_l_ldp_parts,lm_l_ldp_playfield,lm_l_ldp_underpf)
glf_lightMaps.Add "LDP", glf_LDP_lmarr
Dim glf_FL7a_lmarr : glf_FL7a_lmarr = Array(lm_f_fl7a_asteroid1,lm_f_fl7a_asteroid2,lm_f_fl7a_asteroid3,lm_f_fl7a_asteroid4,lm_f_fl7a_br2,lm_f_fl7a_br3,lm_f_fl7a_bs2,lm_f_fl7a_bs3,lm_f_fl7a_bmpbot,lm_f_fl7a_diverterpin,lm_f_fl7a_gatel,lm_f_fl7a_gater,lm_f_fl7a_layer1,lm_f_fl7a_parts,lm_f_fl7a_playfield,lm_f_fl7a_ramp,lm_f_fl7a_ship,lm_f_fl7a_spin,lm_f_fl7a_spinu,lm_f_fl7a_spinwire,lm_f_fl7a_tm2,lm_f_fl7a_tm3,lm_f_fl7a_tm4,lm_f_fl7a_underpf,lm_f_fl7a_swc1,lm_f_fl7a_swc2,lm_f_fl7a_swc3,lm_f_fl7a_swi1,lm_f_fl7a_swi2,lm_f_fl7a_swl1,lm_f_fl7a_swr1)
glf_lightMaps.Add "FL7a", glf_FL7a_lmarr
Dim glf_FL5a_lmarr : glf_FL5a_lmarr = Array(lm_f_fl5a_larm,lm_f_fl5a_lflip,lm_f_fl5a_lflipu,lm_f_fl5a_lsling1,lm_f_fl5a_lsling2,lm_f_fl5a_lsling3,lm_f_fl5a_parts,lm_f_fl5a_playfield,lm_f_fl5a_rflip,lm_f_fl5a_rflipu,lm_f_fl5a_underpf,lm_f_fl5a_swlo)
glf_lightMaps.Add "FL5a", glf_FL5a_lmarr
Dim glf_FL6a_lmarr : glf_FL6a_lmarr = Array(lm_f_fl6a_lflip,lm_f_fl6a_lflipu,lm_f_fl6a_parts,lm_f_fl6a_playfield,lm_f_fl6a_rarm,lm_f_fl6a_rflip,lm_f_fl6a_rflipu,lm_f_fl6a_rsling1,lm_f_fl6a_rsling2,lm_f_fl6a_rsling3)
glf_lightMaps.Add "FL6a", glf_FL6a_lmarr
Dim glf_FL6h_lmarr : glf_FL6h_lmarr = Array(lm_f_fl6h_parts,lm_f_fl6h_playfield,lm_f_fl6h_rarm,lm_f_fl6h_rflip,lm_f_fl6h_rflipu,lm_f_fl6h_rsling1,lm_f_fl6h_rsling2,lm_f_fl6h_rsling3)
glf_lightMaps.Add "FL6h", glf_FL6h_lmarr
Dim glf_FL6g_lmarr : glf_FL6g_lmarr = Array(lm_f_fl6g_lflipu,lm_f_fl6g_parts,lm_f_fl6g_playfield,lm_f_fl6g_rarm,lm_f_fl6g_rflipu,lm_f_fl6g_rsling1,lm_f_fl6g_rsling2,lm_f_fl6g_rsling3)
glf_lightMaps.Add "FL6g", glf_FL6g_lmarr
Dim glf_FL6f_lmarr : glf_FL6f_lmarr = Array(lm_f_fl6f_parts,lm_f_fl6f_playfield,lm_f_fl6f_rarm,lm_f_fl6f_rflip,lm_f_fl6f_rflipu,lm_f_fl6f_rsling1,lm_f_fl6f_rsling2,lm_f_fl6f_rsling3)
glf_lightMaps.Add "FL6f", glf_FL6f_lmarr
Dim glf_FL6e_lmarr : glf_FL6e_lmarr = Array(lm_f_fl6e_parts,lm_f_fl6e_playfield,lm_f_fl6e_rarm,lm_f_fl6e_rflip,lm_f_fl6e_rflipu,lm_f_fl6e_rsling1,lm_f_fl6e_rsling2,lm_f_fl6e_rsling3)
glf_lightMaps.Add "FL6e", glf_FL6e_lmarr
Dim glf_FL6d_lmarr : glf_FL6d_lmarr = Array(lm_f_fl6d_parts,lm_f_fl6d_playfield,lm_f_fl6d_rarm,lm_f_fl6d_rflip,lm_f_fl6d_rflipu,lm_f_fl6d_rsling1,lm_f_fl6d_rsling2,lm_f_fl6d_rsling3)
glf_lightMaps.Add "FL6d", glf_FL6d_lmarr
Dim glf_FL6c_lmarr : glf_FL6c_lmarr = Array(lm_f_fl6c_parts,lm_f_fl6c_playfield,lm_f_fl6c_rarm,lm_f_fl6c_rflip,lm_f_fl6c_rflipu,lm_f_fl6c_rsling1,lm_f_fl6c_rsling2,lm_f_fl6c_rsling3)
glf_lightMaps.Add "FL6c", glf_FL6c_lmarr
Dim glf_FL6b_lmarr : glf_FL6b_lmarr = Array(lm_f_fl6b_lflip,lm_f_fl6b_lflipu,lm_f_fl6b_parts,lm_f_fl6b_playfield,lm_f_fl6b_rarm,lm_f_fl6b_rflip,lm_f_fl6b_rflipu,lm_f_fl6b_rsling1,lm_f_fl6b_rsling2,lm_f_fl6b_rsling3)
glf_lightMaps.Add "FL6b", glf_FL6b_lmarr
Dim glf_FL5h_lmarr : glf_FL5h_lmarr = Array(lm_f_fl5h_larm,lm_f_fl5h_lflip,lm_f_fl5h_lflipu,lm_f_fl5h_lsling1,lm_f_fl5h_lsling2,lm_f_fl5h_lsling3,lm_f_fl5h_parts,lm_f_fl5h_playfield,lm_f_fl5h_rflipu,lm_f_fl5h_underpf,lm_f_fl5h_swli,lm_f_fl5h_swlo)
glf_lightMaps.Add "FL5h", glf_FL5h_lmarr
Dim glf_FL5g_lmarr : glf_FL5g_lmarr = Array(lm_f_fl5g_larm,lm_f_fl5g_lflip,lm_f_fl5g_lflipu,lm_f_fl5g_lsling1,lm_f_fl5g_lsling2,lm_f_fl5g_lsling3,lm_f_fl5g_parts,lm_f_fl5g_playfield,lm_f_fl5g_underpf,lm_f_fl5g_swlo)
glf_lightMaps.Add "FL5g", glf_FL5g_lmarr
Dim glf_FL5f_lmarr : glf_FL5f_lmarr = Array(lm_f_fl5f_larm,lm_f_fl5f_lflip,lm_f_fl5f_lflipu,lm_f_fl5f_lsling1,lm_f_fl5f_lsling2,lm_f_fl5f_lsling3,lm_f_fl5f_parts,lm_f_fl5f_playfield,lm_f_fl5f_underpf)
glf_lightMaps.Add "FL5f", glf_FL5f_lmarr
Dim glf_FL5e_lmarr : glf_FL5e_lmarr = Array(lm_f_fl5e_br1,lm_f_fl5e_larm,lm_f_fl5e_lflip,lm_f_fl5e_lflipu,lm_f_fl5e_lsling1,lm_f_fl5e_lsling2,lm_f_fl5e_lsling3,lm_f_fl5e_parts,lm_f_fl5e_playfield,lm_f_fl5e_underpf)
glf_lightMaps.Add "FL5e", glf_FL5e_lmarr
Dim glf_FL5d_lmarr : glf_FL5d_lmarr = Array(lm_f_fl5d_larm,lm_f_fl5d_lflip,lm_f_fl5d_lflipu,lm_f_fl5d_lsling1,lm_f_fl5d_lsling2,lm_f_fl5d_lsling3,lm_f_fl5d_parts,lm_f_fl5d_playfield,lm_f_fl5d_underpf)
glf_lightMaps.Add "FL5d", glf_FL5d_lmarr
Dim glf_FL5c_lmarr : glf_FL5c_lmarr = Array(lm_f_fl5c_larm,lm_f_fl5c_lflip,lm_f_fl5c_lflipu,lm_f_fl5c_lsling1,lm_f_fl5c_lsling2,lm_f_fl5c_lsling3,lm_f_fl5c_parts,lm_f_fl5c_playfield,lm_f_fl5c_underpf)
glf_lightMaps.Add "FL5c", glf_FL5c_lmarr
Dim glf_FL5b_lmarr : glf_FL5b_lmarr = Array(lm_f_fl5b_br1,lm_f_fl5b_larm,lm_f_fl5b_lflip,lm_f_fl5b_lflipu,lm_f_fl5b_lsling1,lm_f_fl5b_lsling2,lm_f_fl5b_lsling3,lm_f_fl5b_parts,lm_f_fl5b_playfield,lm_f_fl5b_rflipu,lm_f_fl5b_underpf)
glf_lightMaps.Add "FL5b", glf_FL5b_lmarr
Dim glf_ball_seg30_lmarr : glf_ball_seg30_lmarr = Array(p_ball_seg30_vr)
glf_lightMaps.Add "ball_seg30", glf_ball_seg30_lmarr
Dim glf_p4_seg120_lmarr : glf_p4_seg120_lmarr = Array(p_p4_seg120_,p_p4_seg120_vr)
glf_lightMaps.Add "p4_seg120", glf_p4_seg120_lmarr
Dim glf_p4_seg119_lmarr : glf_p4_seg119_lmarr = Array(p_p4_seg119_,p_p4_seg119_vr)
glf_lightMaps.Add "p4_seg119", glf_p4_seg119_lmarr
Dim glf_p4_seg118_lmarr : glf_p4_seg118_lmarr = Array(p_p4_seg118_,p_p4_seg118_vr)
glf_lightMaps.Add "p4_seg118", glf_p4_seg118_lmarr
Dim glf_p4_seg117_lmarr : glf_p4_seg117_lmarr = Array(p_p4_seg117_,p_p4_seg117_vr)
glf_lightMaps.Add "p4_seg117", glf_p4_seg117_lmarr
Dim glf_p4_seg116_lmarr : glf_p4_seg116_lmarr = Array(p_p4_seg116_,p_p4_seg116_vr)
glf_lightMaps.Add "p4_seg116", glf_p4_seg116_lmarr
Dim glf_p4_seg115_lmarr : glf_p4_seg115_lmarr = Array(p_p4_seg115_,p_p4_seg115_vr)
glf_lightMaps.Add "p4_seg115", glf_p4_seg115_lmarr
Dim glf_p4_seg114_lmarr : glf_p4_seg114_lmarr = Array(p_p4_seg114_,p_p4_seg114_vr)
glf_lightMaps.Add "p4_seg114", glf_p4_seg114_lmarr
Dim glf_p4_seg113_lmarr : glf_p4_seg113_lmarr = Array(p_p4_seg113_,p_p4_seg113_vr)
glf_lightMaps.Add "p4_seg113", glf_p4_seg113_lmarr
Dim glf_p4_seg112_lmarr : glf_p4_seg112_lmarr = Array(p_p4_seg112_,p_p4_seg112_vr)
glf_lightMaps.Add "p4_seg112", glf_p4_seg112_lmarr
Dim glf_p4_seg111_lmarr : glf_p4_seg111_lmarr = Array(p_p4_seg111_,p_p4_seg111_vr)
glf_lightMaps.Add "p4_seg111", glf_p4_seg111_lmarr
Dim glf_p4_seg110_lmarr : glf_p4_seg110_lmarr = Array(p_p4_seg110_,p_p4_seg110_vr)
glf_lightMaps.Add "p4_seg110", glf_p4_seg110_lmarr
Dim glf_p4_seg109_lmarr : glf_p4_seg109_lmarr = Array(p_p4_seg109_,p_p4_seg109_vr)
glf_lightMaps.Add "p4_seg109", glf_p4_seg109_lmarr
Dim glf_p4_seg108_lmarr : glf_p4_seg108_lmarr = Array(p_p4_seg108_,p_p4_seg108_vr)
glf_lightMaps.Add "p4_seg108", glf_p4_seg108_lmarr
Dim glf_p4_seg107_lmarr : glf_p4_seg107_lmarr = Array(p_p4_seg107_,p_p4_seg107_vr)
glf_lightMaps.Add "p4_seg107", glf_p4_seg107_lmarr
Dim glf_p4_seg106_lmarr : glf_p4_seg106_lmarr = Array(p_p4_seg106_,p_p4_seg106_vr)
glf_lightMaps.Add "p4_seg106", glf_p4_seg106_lmarr
Dim glf_p3_seg120_lmarr : glf_p3_seg120_lmarr = Array(p_p3_seg120_,p_p3_seg120_vr)
glf_lightMaps.Add "p3_seg120", glf_p3_seg120_lmarr
Dim glf_p3_seg119_lmarr : glf_p3_seg119_lmarr = Array(p_p3_seg119_,p_p3_seg119_vr)
glf_lightMaps.Add "p3_seg119", glf_p3_seg119_lmarr
Dim glf_p3_seg118_lmarr : glf_p3_seg118_lmarr = Array(p_p3_seg118_,p_p3_seg118_vr)
glf_lightMaps.Add "p3_seg118", glf_p3_seg118_lmarr
Dim glf_p3_seg117_lmarr : glf_p3_seg117_lmarr = Array(p_p3_seg117_,p_p3_seg117_vr)
glf_lightMaps.Add "p3_seg117", glf_p3_seg117_lmarr
Dim glf_p3_seg116_lmarr : glf_p3_seg116_lmarr = Array(p_p3_seg116_,p_p3_seg116_vr)
glf_lightMaps.Add "p3_seg116", glf_p3_seg116_lmarr
Dim glf_p3_seg115_lmarr : glf_p3_seg115_lmarr = Array(p_p3_seg115_,p_p3_seg115_vr)
glf_lightMaps.Add "p3_seg115", glf_p3_seg115_lmarr
Dim glf_p3_seg114_lmarr : glf_p3_seg114_lmarr = Array(p_p3_seg114_,p_p3_seg114_vr)
glf_lightMaps.Add "p3_seg114", glf_p3_seg114_lmarr
Dim glf_p3_seg113_lmarr : glf_p3_seg113_lmarr = Array(p_p3_seg113_,p_p3_seg113_vr)
glf_lightMaps.Add "p3_seg113", glf_p3_seg113_lmarr
Dim glf_p3_seg112_lmarr : glf_p3_seg112_lmarr = Array(p_p3_seg112_,p_p3_seg112_vr)
glf_lightMaps.Add "p3_seg112", glf_p3_seg112_lmarr
Dim glf_p3_seg111_lmarr : glf_p3_seg111_lmarr = Array(p_p3_seg111_,p_p3_seg111_vr)
glf_lightMaps.Add "p3_seg111", glf_p3_seg111_lmarr
Dim glf_p3_seg110_lmarr : glf_p3_seg110_lmarr = Array(p_p3_seg110_,p_p3_seg110_vr)
glf_lightMaps.Add "p3_seg110", glf_p3_seg110_lmarr
Dim glf_p3_seg109_lmarr : glf_p3_seg109_lmarr = Array(p_p3_seg109_,p_p3_seg109_vr)
glf_lightMaps.Add "p3_seg109", glf_p3_seg109_lmarr
Dim glf_p3_seg108_lmarr : glf_p3_seg108_lmarr = Array(p_p3_seg108_,p_p3_seg108_vr)
glf_lightMaps.Add "p3_seg108", glf_p3_seg108_lmarr
Dim glf_p3_seg107_lmarr : glf_p3_seg107_lmarr = Array(p_p3_seg107_,p_p3_seg107_vr)
glf_lightMaps.Add "p3_seg107", glf_p3_seg107_lmarr
Dim glf_p3_seg106_lmarr : glf_p3_seg106_lmarr = Array(p_p3_seg106_,p_p3_seg106_vr)
glf_lightMaps.Add "p3_seg106", glf_p3_seg106_lmarr
Dim glf_p2_seg120_lmarr : glf_p2_seg120_lmarr = Array(p_p2_seg120_,p_p2_seg120_vr)
glf_lightMaps.Add "p2_seg120", glf_p2_seg120_lmarr
Dim glf_p2_seg119_lmarr : glf_p2_seg119_lmarr = Array(p_p2_seg119_,p_p2_seg119_vr)
glf_lightMaps.Add "p2_seg119", glf_p2_seg119_lmarr
Dim glf_p2_seg118_lmarr : glf_p2_seg118_lmarr = Array(p_p2_seg118_,p_p2_seg118_vr)
glf_lightMaps.Add "p2_seg118", glf_p2_seg118_lmarr
Dim glf_p2_seg117_lmarr : glf_p2_seg117_lmarr = Array(p_p2_seg117_,p_p2_seg117_vr)
glf_lightMaps.Add "p2_seg117", glf_p2_seg117_lmarr
Dim glf_p2_seg116_lmarr : glf_p2_seg116_lmarr = Array(p_p2_seg116_,p_p2_seg116_vr)
glf_lightMaps.Add "p2_seg116", glf_p2_seg116_lmarr
Dim glf_p2_seg115_lmarr : glf_p2_seg115_lmarr = Array(p_p2_seg115_,p_p2_seg115_vr)
glf_lightMaps.Add "p2_seg115", glf_p2_seg115_lmarr
Dim glf_p2_seg114_lmarr : glf_p2_seg114_lmarr = Array(p_p2_seg114_,p_p2_seg114_vr)
glf_lightMaps.Add "p2_seg114", glf_p2_seg114_lmarr
Dim glf_p2_seg113_lmarr : glf_p2_seg113_lmarr = Array(p_p2_seg113_,p_p2_seg113_vr)
glf_lightMaps.Add "p2_seg113", glf_p2_seg113_lmarr
Dim glf_p2_seg112_lmarr : glf_p2_seg112_lmarr = Array(p_p2_seg112_,p_p2_seg112_vr)
glf_lightMaps.Add "p2_seg112", glf_p2_seg112_lmarr
Dim glf_p2_seg111_lmarr : glf_p2_seg111_lmarr = Array(p_p2_seg111_,p_p2_seg111_vr)
glf_lightMaps.Add "p2_seg111", glf_p2_seg111_lmarr
Dim glf_p2_seg110_lmarr : glf_p2_seg110_lmarr = Array(p_p2_seg110_,p_p2_seg110_vr)
glf_lightMaps.Add "p2_seg110", glf_p2_seg110_lmarr
Dim glf_p2_seg109_lmarr : glf_p2_seg109_lmarr = Array(p_p2_seg109_,p_p2_seg109_vr)
glf_lightMaps.Add "p2_seg109", glf_p2_seg109_lmarr
Dim glf_p2_seg108_lmarr : glf_p2_seg108_lmarr = Array(p_p2_seg108_,p_p2_seg108_vr)
glf_lightMaps.Add "p2_seg108", glf_p2_seg108_lmarr
Dim glf_p2_seg107_lmarr : glf_p2_seg107_lmarr = Array(p_p2_seg107_,p_p2_seg107_vr)
glf_lightMaps.Add "p2_seg107", glf_p2_seg107_lmarr
Dim glf_p2_seg106_lmarr : glf_p2_seg106_lmarr = Array(p_p2_seg106_,p_p2_seg106_vr)
glf_lightMaps.Add "p2_seg106", glf_p2_seg106_lmarr
Dim glf_p1_seg120_lmarr : glf_p1_seg120_lmarr = Array(p_p1_seg120_,p_p1_seg120_vr)
glf_lightMaps.Add "p1_seg120", glf_p1_seg120_lmarr
Dim glf_p1_seg119_lmarr : glf_p1_seg119_lmarr = Array(p_p1_seg119_,p_p1_seg119_vr)
glf_lightMaps.Add "p1_seg119", glf_p1_seg119_lmarr
Dim glf_p1_seg118_lmarr : glf_p1_seg118_lmarr = Array(p_p1_seg118_,p_p1_seg118_vr)
glf_lightMaps.Add "p1_seg118", glf_p1_seg118_lmarr
Dim glf_p1_seg117_lmarr : glf_p1_seg117_lmarr = Array(p_p1_seg117_,p_p1_seg117_vr)
glf_lightMaps.Add "p1_seg117", glf_p1_seg117_lmarr
Dim glf_p1_seg116_lmarr : glf_p1_seg116_lmarr = Array(p_p1_seg116_,p_p1_seg116_vr)
glf_lightMaps.Add "p1_seg116", glf_p1_seg116_lmarr
Dim glf_p1_seg115_lmarr : glf_p1_seg115_lmarr = Array(p_p1_seg115_,p_p1_seg115_vr)
glf_lightMaps.Add "p1_seg115", glf_p1_seg115_lmarr
Dim glf_p1_seg114_lmarr : glf_p1_seg114_lmarr = Array(p_p1_seg114_,p_p1_seg114_vr)
glf_lightMaps.Add "p1_seg114", glf_p1_seg114_lmarr
Dim glf_p1_seg113_lmarr : glf_p1_seg113_lmarr = Array(p_p1_seg113_,p_p1_seg113_vr)
glf_lightMaps.Add "p1_seg113", glf_p1_seg113_lmarr
Dim glf_p1_seg112_lmarr : glf_p1_seg112_lmarr = Array(p_p1_seg112_,p_p1_seg112_vr)
glf_lightMaps.Add "p1_seg112", glf_p1_seg112_lmarr
Dim glf_p1_seg111_lmarr : glf_p1_seg111_lmarr = Array(p_p1_seg111_,p_p1_seg111_vr)
glf_lightMaps.Add "p1_seg111", glf_p1_seg111_lmarr
Dim glf_p1_seg110_lmarr : glf_p1_seg110_lmarr = Array(p_p1_seg110_,p_p1_seg110_vr)
glf_lightMaps.Add "p1_seg110", glf_p1_seg110_lmarr
Dim glf_p1_seg109_lmarr : glf_p1_seg109_lmarr = Array(p_p1_seg109_,p_p1_seg109_vr)
glf_lightMaps.Add "p1_seg109", glf_p1_seg109_lmarr
Dim glf_p1_seg108_lmarr : glf_p1_seg108_lmarr = Array(p_p1_seg108_,p_p1_seg108_vr)
glf_lightMaps.Add "p1_seg108", glf_p1_seg108_lmarr
Dim glf_p1_seg107_lmarr : glf_p1_seg107_lmarr = Array(p_p1_seg107_,p_p1_seg107_vr)
glf_lightMaps.Add "p1_seg107", glf_p1_seg107_lmarr
Dim glf_p1_seg106_lmarr : glf_p1_seg106_lmarr = Array(p_p1_seg106_,p_p1_seg106_vr)
glf_lightMaps.Add "p1_seg106", glf_p1_seg106_lmarr
Dim glf_p4_seg105_lmarr : glf_p4_seg105_lmarr = Array(p_p4_seg105_,p_p4_seg105_vr)
glf_lightMaps.Add "p4_seg105", glf_p4_seg105_lmarr
Dim glf_p3_seg105_lmarr : glf_p3_seg105_lmarr = Array(p_p3_seg105_,p_p3_seg105_vr)
glf_lightMaps.Add "p3_seg105", glf_p3_seg105_lmarr
Dim glf_p2_seg105_lmarr : glf_p2_seg105_lmarr = Array(p_p2_seg105_,p_p2_seg105_vr)
glf_lightMaps.Add "p2_seg105", glf_p2_seg105_lmarr
Dim glf_p4_seg104_lmarr : glf_p4_seg104_lmarr = Array(p_p4_seg104_,p_p4_seg104_vr)
glf_lightMaps.Add "p4_seg104", glf_p4_seg104_lmarr
Dim glf_p3_seg104_lmarr : glf_p3_seg104_lmarr = Array(p_p3_seg104_,p_p3_seg104_vr)
glf_lightMaps.Add "p3_seg104", glf_p3_seg104_lmarr
Dim glf_p2_seg104_lmarr : glf_p2_seg104_lmarr = Array(p_p2_seg104_,p_p2_seg104_vr)
glf_lightMaps.Add "p2_seg104", glf_p2_seg104_lmarr
Dim glf_p4_seg103_lmarr : glf_p4_seg103_lmarr = Array(p_p4_seg103_,p_p4_seg103_vr)
glf_lightMaps.Add "p4_seg103", glf_p4_seg103_lmarr
Dim glf_p3_seg103_lmarr : glf_p3_seg103_lmarr = Array(p_p3_seg103_,p_p3_seg103_vr)
glf_lightMaps.Add "p3_seg103", glf_p3_seg103_lmarr
Dim glf_p2_seg103_lmarr : glf_p2_seg103_lmarr = Array(p_p2_seg103_,p_p2_seg103_vr)
glf_lightMaps.Add "p2_seg103", glf_p2_seg103_lmarr
Dim glf_p4_seg102_lmarr : glf_p4_seg102_lmarr = Array(p_p4_seg102_,p_p4_seg102_vr)
glf_lightMaps.Add "p4_seg102", glf_p4_seg102_lmarr
Dim glf_p3_seg102_lmarr : glf_p3_seg102_lmarr = Array(p_p3_seg102_,p_p3_seg102_vr)
glf_lightMaps.Add "p3_seg102", glf_p3_seg102_lmarr
Dim glf_p2_seg102_lmarr : glf_p2_seg102_lmarr = Array(p_p2_seg102_,p_p2_seg102_vr)
glf_lightMaps.Add "p2_seg102", glf_p2_seg102_lmarr
Dim glf_p4_seg101_lmarr : glf_p4_seg101_lmarr = Array(p_p4_seg101_,p_p4_seg101_vr)
glf_lightMaps.Add "p4_seg101", glf_p4_seg101_lmarr
Dim glf_p3_seg101_lmarr : glf_p3_seg101_lmarr = Array(p_p3_seg101_,p_p3_seg101_vr)
glf_lightMaps.Add "p3_seg101", glf_p3_seg101_lmarr
Dim glf_p2_seg101_lmarr : glf_p2_seg101_lmarr = Array(p_p2_seg101_,p_p2_seg101_vr)
glf_lightMaps.Add "p2_seg101", glf_p2_seg101_lmarr
Dim glf_p4_seg100_lmarr : glf_p4_seg100_lmarr = Array(p_p4_seg100_,p_p4_seg100_vr)
glf_lightMaps.Add "p4_seg100", glf_p4_seg100_lmarr
Dim glf_p3_seg100_lmarr : glf_p3_seg100_lmarr = Array(p_p3_seg100_,p_p3_seg100_vr)
glf_lightMaps.Add "p3_seg100", glf_p3_seg100_lmarr
Dim glf_p2_seg100_lmarr : glf_p2_seg100_lmarr = Array(p_p2_seg100_,p_p2_seg100_vr)
glf_lightMaps.Add "p2_seg100", glf_p2_seg100_lmarr
Dim glf_p4_seg99_lmarr : glf_p4_seg99_lmarr = Array(p_p4_seg99_,p_p4_seg99_vr)
glf_lightMaps.Add "p4_seg99", glf_p4_seg99_lmarr
Dim glf_p3_seg99_lmarr : glf_p3_seg99_lmarr = Array(p_p3_seg99_,p_p3_seg99_vr)
glf_lightMaps.Add "p3_seg99", glf_p3_seg99_lmarr
Dim glf_p2_seg99_lmarr : glf_p2_seg99_lmarr = Array(p_p2_seg99_,p_p2_seg99_vr)
glf_lightMaps.Add "p2_seg99", glf_p2_seg99_lmarr
Dim glf_p4_seg98_lmarr : glf_p4_seg98_lmarr = Array(p_p4_seg98_,p_p4_seg98_vr)
glf_lightMaps.Add "p4_seg98", glf_p4_seg98_lmarr
Dim glf_p3_seg98_lmarr : glf_p3_seg98_lmarr = Array(p_p3_seg98_,p_p3_seg98_vr)
glf_lightMaps.Add "p3_seg98", glf_p3_seg98_lmarr
Dim glf_p2_seg98_lmarr : glf_p2_seg98_lmarr = Array(p_p2_seg98_,p_p2_seg98_vr)
glf_lightMaps.Add "p2_seg98", glf_p2_seg98_lmarr
Dim glf_p4_seg97_lmarr : glf_p4_seg97_lmarr = Array(p_p4_seg97_,p_p4_seg97_vr)
glf_lightMaps.Add "p4_seg97", glf_p4_seg97_lmarr
Dim glf_p3_seg97_lmarr : glf_p3_seg97_lmarr = Array(p_p3_seg97_,p_p3_seg97_vr)
glf_lightMaps.Add "p3_seg97", glf_p3_seg97_lmarr
Dim glf_p2_seg97_lmarr : glf_p2_seg97_lmarr = Array(p_p2_seg97_,p_p2_seg97_vr)
glf_lightMaps.Add "p2_seg97", glf_p2_seg97_lmarr
Dim glf_p4_seg96_lmarr : glf_p4_seg96_lmarr = Array(p_p4_seg96_,p_p4_seg96_vr)
glf_lightMaps.Add "p4_seg96", glf_p4_seg96_lmarr
Dim glf_p3_seg96_lmarr : glf_p3_seg96_lmarr = Array(p_p3_seg96_,p_p3_seg96_vr)
glf_lightMaps.Add "p3_seg96", glf_p3_seg96_lmarr
Dim glf_p2_seg96_lmarr : glf_p2_seg96_lmarr = Array(p_p2_seg96_,p_p2_seg96_vr)
glf_lightMaps.Add "p2_seg96", glf_p2_seg96_lmarr
Dim glf_p4_seg95_lmarr : glf_p4_seg95_lmarr = Array(p_p4_seg95_,p_p4_seg95_vr)
glf_lightMaps.Add "p4_seg95", glf_p4_seg95_lmarr
Dim glf_p3_seg95_lmarr : glf_p3_seg95_lmarr = Array(p_p3_seg95_,p_p3_seg95_vr)
glf_lightMaps.Add "p3_seg95", glf_p3_seg95_lmarr
Dim glf_p2_seg95_lmarr : glf_p2_seg95_lmarr = Array(p_p2_seg95_,p_p2_seg95_vr)
glf_lightMaps.Add "p2_seg95", glf_p2_seg95_lmarr
Dim glf_p4_seg94_lmarr : glf_p4_seg94_lmarr = Array(p_p4_seg94_,p_p4_seg94_vr)
glf_lightMaps.Add "p4_seg94", glf_p4_seg94_lmarr
Dim glf_p3_seg94_lmarr : glf_p3_seg94_lmarr = Array(p_p3_seg94_,p_p3_seg94_vr)
glf_lightMaps.Add "p3_seg94", glf_p3_seg94_lmarr
Dim glf_p2_seg94_lmarr : glf_p2_seg94_lmarr = Array(p_p2_seg94_,p_p2_seg94_vr)
glf_lightMaps.Add "p2_seg94", glf_p2_seg94_lmarr
Dim glf_p4_seg93_lmarr : glf_p4_seg93_lmarr = Array(p_p4_seg93_,p_p4_seg93_vr)
glf_lightMaps.Add "p4_seg93", glf_p4_seg93_lmarr
Dim glf_p3_seg93_lmarr : glf_p3_seg93_lmarr = Array(p_p3_seg93_,p_p3_seg93_vr)
glf_lightMaps.Add "p3_seg93", glf_p3_seg93_lmarr
Dim glf_p2_seg93_lmarr : glf_p2_seg93_lmarr = Array(p_p2_seg93_,p_p2_seg93_vr)
glf_lightMaps.Add "p2_seg93", glf_p2_seg93_lmarr
Dim glf_p4_seg92_lmarr : glf_p4_seg92_lmarr = Array(p_p4_seg92_,p_p4_seg92_vr)
glf_lightMaps.Add "p4_seg92", glf_p4_seg92_lmarr
Dim glf_p3_seg92_lmarr : glf_p3_seg92_lmarr = Array(p_p3_seg92_,p_p3_seg92_vr)
glf_lightMaps.Add "p3_seg92", glf_p3_seg92_lmarr
Dim glf_p2_seg92_lmarr : glf_p2_seg92_lmarr = Array(p_p2_seg92_,p_p2_seg92_vr)
glf_lightMaps.Add "p2_seg92", glf_p2_seg92_lmarr
Dim glf_p4_seg91_lmarr : glf_p4_seg91_lmarr = Array(p_p4_seg91_,p_p4_seg91_vr)
glf_lightMaps.Add "p4_seg91", glf_p4_seg91_lmarr
Dim glf_p3_seg91_lmarr : glf_p3_seg91_lmarr = Array(p_p3_seg91_,p_p3_seg91_vr)
glf_lightMaps.Add "p3_seg91", glf_p3_seg91_lmarr
Dim glf_p2_seg91_lmarr : glf_p2_seg91_lmarr = Array(p_p2_seg91_,p_p2_seg91_vr)
glf_lightMaps.Add "p2_seg91", glf_p2_seg91_lmarr
Dim glf_p4_seg90_lmarr : glf_p4_seg90_lmarr = Array(p_p4_seg90_,p_p4_seg90_vr)
glf_lightMaps.Add "p4_seg90", glf_p4_seg90_lmarr
Dim glf_p3_seg90_lmarr : glf_p3_seg90_lmarr = Array(p_p3_seg90_,p_p3_seg90_vr)
glf_lightMaps.Add "p3_seg90", glf_p3_seg90_lmarr
Dim glf_p2_seg90_lmarr : glf_p2_seg90_lmarr = Array(p_p2_seg90_,p_p2_seg90_vr)
glf_lightMaps.Add "p2_seg90", glf_p2_seg90_lmarr
Dim glf_p4_seg89_lmarr : glf_p4_seg89_lmarr = Array(p_p4_seg89_,p_p4_seg89_vr)
glf_lightMaps.Add "p4_seg89", glf_p4_seg89_lmarr
Dim glf_p3_seg89_lmarr : glf_p3_seg89_lmarr = Array(p_p3_seg89_,p_p3_seg89_vr)
glf_lightMaps.Add "p3_seg89", glf_p3_seg89_lmarr
Dim glf_p2_seg89_lmarr : glf_p2_seg89_lmarr = Array(p_p2_seg89_,p_p2_seg89_vr)
glf_lightMaps.Add "p2_seg89", glf_p2_seg89_lmarr
Dim glf_p4_seg88_lmarr : glf_p4_seg88_lmarr = Array(p_p4_seg88_,p_p4_seg88_vr)
glf_lightMaps.Add "p4_seg88", glf_p4_seg88_lmarr
Dim glf_p3_seg88_lmarr : glf_p3_seg88_lmarr = Array(p_p3_seg88_,p_p3_seg88_vr)
glf_lightMaps.Add "p3_seg88", glf_p3_seg88_lmarr
Dim glf_p2_seg88_lmarr : glf_p2_seg88_lmarr = Array(p_p2_seg88_,p_p2_seg88_vr)
glf_lightMaps.Add "p2_seg88", glf_p2_seg88_lmarr
Dim glf_p4_seg87_lmarr : glf_p4_seg87_lmarr = Array(p_p4_seg87_,p_p4_seg87_vr)
glf_lightMaps.Add "p4_seg87", glf_p4_seg87_lmarr
Dim glf_p3_seg87_lmarr : glf_p3_seg87_lmarr = Array(p_p3_seg87_,p_p3_seg87_vr)
glf_lightMaps.Add "p3_seg87", glf_p3_seg87_lmarr
Dim glf_p2_seg87_lmarr : glf_p2_seg87_lmarr = Array(p_p2_seg87_,p_p2_seg87_vr)
glf_lightMaps.Add "p2_seg87", glf_p2_seg87_lmarr
Dim glf_p4_seg86_lmarr : glf_p4_seg86_lmarr = Array(p_p4_seg86_,p_p4_seg86_vr)
glf_lightMaps.Add "p4_seg86", glf_p4_seg86_lmarr
Dim glf_p3_seg86_lmarr : glf_p3_seg86_lmarr = Array(p_p3_seg86_,p_p3_seg86_vr)
glf_lightMaps.Add "p3_seg86", glf_p3_seg86_lmarr
Dim glf_p2_seg86_lmarr : glf_p2_seg86_lmarr = Array(p_p2_seg86_,p_p2_seg86_vr)
glf_lightMaps.Add "p2_seg86", glf_p2_seg86_lmarr
Dim glf_p4_seg85_lmarr : glf_p4_seg85_lmarr = Array(p_p4_seg85_,p_p4_seg85_vr)
glf_lightMaps.Add "p4_seg85", glf_p4_seg85_lmarr
Dim glf_p3_seg85_lmarr : glf_p3_seg85_lmarr = Array(p_p3_seg85_,p_p3_seg85_vr)
glf_lightMaps.Add "p3_seg85", glf_p3_seg85_lmarr
Dim glf_p2_seg85_lmarr : glf_p2_seg85_lmarr = Array(p_p2_seg85_,p_p2_seg85_vr)
glf_lightMaps.Add "p2_seg85", glf_p2_seg85_lmarr
Dim glf_p4_seg84_lmarr : glf_p4_seg84_lmarr = Array(p_p4_seg84_,p_p4_seg84_vr)
glf_lightMaps.Add "p4_seg84", glf_p4_seg84_lmarr
Dim glf_p3_seg84_lmarr : glf_p3_seg84_lmarr = Array(p_p3_seg84_,p_p3_seg84_vr)
glf_lightMaps.Add "p3_seg84", glf_p3_seg84_lmarr
Dim glf_p2_seg84_lmarr : glf_p2_seg84_lmarr = Array(p_p2_seg84_,p_p2_seg84_vr)
glf_lightMaps.Add "p2_seg84", glf_p2_seg84_lmarr
Dim glf_p4_seg83_lmarr : glf_p4_seg83_lmarr = Array(p_p4_seg83_,p_p4_seg83_vr)
glf_lightMaps.Add "p4_seg83", glf_p4_seg83_lmarr
Dim glf_p3_seg83_lmarr : glf_p3_seg83_lmarr = Array(p_p3_seg83_,p_p3_seg83_vr)
glf_lightMaps.Add "p3_seg83", glf_p3_seg83_lmarr
Dim glf_p2_seg83_lmarr : glf_p2_seg83_lmarr = Array(p_p2_seg83_,p_p2_seg83_vr)
glf_lightMaps.Add "p2_seg83", glf_p2_seg83_lmarr
Dim glf_p4_seg82_lmarr : glf_p4_seg82_lmarr = Array(p_p4_seg82_,p_p4_seg82_vr)
glf_lightMaps.Add "p4_seg82", glf_p4_seg82_lmarr
Dim glf_p3_seg82_lmarr : glf_p3_seg82_lmarr = Array(p_p3_seg82_,p_p3_seg82_vr)
glf_lightMaps.Add "p3_seg82", glf_p3_seg82_lmarr
Dim glf_p2_seg82_lmarr : glf_p2_seg82_lmarr = Array(p_p2_seg82_,p_p2_seg82_vr)
glf_lightMaps.Add "p2_seg82", glf_p2_seg82_lmarr
Dim glf_p4_seg81_lmarr : glf_p4_seg81_lmarr = Array(p_p4_seg81_,p_p4_seg81_vr)
glf_lightMaps.Add "p4_seg81", glf_p4_seg81_lmarr
Dim glf_p3_seg81_lmarr : glf_p3_seg81_lmarr = Array(p_p3_seg81_,p_p3_seg81_vr)
glf_lightMaps.Add "p3_seg81", glf_p3_seg81_lmarr
Dim glf_p2_seg81_lmarr : glf_p2_seg81_lmarr = Array(p_p2_seg81_,p_p2_seg81_vr)
glf_lightMaps.Add "p2_seg81", glf_p2_seg81_lmarr
Dim glf_p4_seg80_lmarr : glf_p4_seg80_lmarr = Array(p_p4_seg80_,p_p4_seg80_vr)
glf_lightMaps.Add "p4_seg80", glf_p4_seg80_lmarr
Dim glf_p3_seg80_lmarr : glf_p3_seg80_lmarr = Array(p_p3_seg80_,p_p3_seg80_vr)
glf_lightMaps.Add "p3_seg80", glf_p3_seg80_lmarr
Dim glf_p2_seg80_lmarr : glf_p2_seg80_lmarr = Array(p_p2_seg80_,p_p2_seg80_vr)
glf_lightMaps.Add "p2_seg80", glf_p2_seg80_lmarr
Dim glf_p4_seg79_lmarr : glf_p4_seg79_lmarr = Array(p_p4_seg79_,p_p4_seg79_vr)
glf_lightMaps.Add "p4_seg79", glf_p4_seg79_lmarr
Dim glf_p3_seg79_lmarr : glf_p3_seg79_lmarr = Array(p_p3_seg79_,p_p3_seg79_vr)
glf_lightMaps.Add "p3_seg79", glf_p3_seg79_lmarr
Dim glf_p2_seg79_lmarr : glf_p2_seg79_lmarr = Array(p_p2_seg79_,p_p2_seg79_vr)
glf_lightMaps.Add "p2_seg79", glf_p2_seg79_lmarr
Dim glf_p4_seg78_lmarr : glf_p4_seg78_lmarr = Array(p_p4_seg78_,p_p4_seg78_vr)
glf_lightMaps.Add "p4_seg78", glf_p4_seg78_lmarr
Dim glf_p3_seg78_lmarr : glf_p3_seg78_lmarr = Array(p_p3_seg78_,p_p3_seg78_vr)
glf_lightMaps.Add "p3_seg78", glf_p3_seg78_lmarr
Dim glf_p2_seg78_lmarr : glf_p2_seg78_lmarr = Array(p_p2_seg78_,p_p2_seg78_vr)
glf_lightMaps.Add "p2_seg78", glf_p2_seg78_lmarr
Dim glf_p4_seg77_lmarr : glf_p4_seg77_lmarr = Array(p_p4_seg77_,p_p4_seg77_vr)
glf_lightMaps.Add "p4_seg77", glf_p4_seg77_lmarr
Dim glf_p3_seg77_lmarr : glf_p3_seg77_lmarr = Array(p_p3_seg77_,p_p3_seg77_vr)
glf_lightMaps.Add "p3_seg77", glf_p3_seg77_lmarr
Dim glf_p2_seg77_lmarr : glf_p2_seg77_lmarr = Array(p_p2_seg77_,p_p2_seg77_vr)
glf_lightMaps.Add "p2_seg77", glf_p2_seg77_lmarr
Dim glf_p4_seg76_lmarr : glf_p4_seg76_lmarr = Array(p_p4_seg76_,p_p4_seg76_vr)
glf_lightMaps.Add "p4_seg76", glf_p4_seg76_lmarr
Dim glf_p3_seg76_lmarr : glf_p3_seg76_lmarr = Array(p_p3_seg76_,p_p3_seg76_vr)
glf_lightMaps.Add "p3_seg76", glf_p3_seg76_lmarr
Dim glf_p2_seg76_lmarr : glf_p2_seg76_lmarr = Array(p_p2_seg76_,p_p2_seg76_vr)
glf_lightMaps.Add "p2_seg76", glf_p2_seg76_lmarr
Dim glf_p4_seg75_lmarr : glf_p4_seg75_lmarr = Array(p_p4_seg75_,p_p4_seg75_vr)
glf_lightMaps.Add "p4_seg75", glf_p4_seg75_lmarr
Dim glf_p3_seg75_lmarr : glf_p3_seg75_lmarr = Array(p_p3_seg75_,p_p3_seg75_vr)
glf_lightMaps.Add "p3_seg75", glf_p3_seg75_lmarr
Dim glf_p2_seg75_lmarr : glf_p2_seg75_lmarr = Array(p_p2_seg75_,p_p2_seg75_vr)
glf_lightMaps.Add "p2_seg75", glf_p2_seg75_lmarr
Dim glf_p4_seg74_lmarr : glf_p4_seg74_lmarr = Array(p_p4_seg74_,p_p4_seg74_vr)
glf_lightMaps.Add "p4_seg74", glf_p4_seg74_lmarr
Dim glf_p3_seg74_lmarr : glf_p3_seg74_lmarr = Array(p_p3_seg74_,p_p3_seg74_vr)
glf_lightMaps.Add "p3_seg74", glf_p3_seg74_lmarr
Dim glf_p2_seg74_lmarr : glf_p2_seg74_lmarr = Array(p_p2_seg74_,p_p2_seg74_vr)
glf_lightMaps.Add "p2_seg74", glf_p2_seg74_lmarr
Dim glf_p4_seg73_lmarr : glf_p4_seg73_lmarr = Array(p_p4_seg73_,p_p4_seg73_vr)
glf_lightMaps.Add "p4_seg73", glf_p4_seg73_lmarr
Dim glf_p3_seg73_lmarr : glf_p3_seg73_lmarr = Array(p_p3_seg73_,p_p3_seg73_vr)
glf_lightMaps.Add "p3_seg73", glf_p3_seg73_lmarr
Dim glf_p2_seg73_lmarr : glf_p2_seg73_lmarr = Array(p_p2_seg73_,p_p2_seg73_vr)
glf_lightMaps.Add "p2_seg73", glf_p2_seg73_lmarr
Dim glf_p4_seg72_lmarr : glf_p4_seg72_lmarr = Array(p_p4_seg72_,p_p4_seg72_vr)
glf_lightMaps.Add "p4_seg72", glf_p4_seg72_lmarr
Dim glf_p3_seg72_lmarr : glf_p3_seg72_lmarr = Array(p_p3_seg72_,p_p3_seg72_vr)
glf_lightMaps.Add "p3_seg72", glf_p3_seg72_lmarr
Dim glf_p2_seg72_lmarr : glf_p2_seg72_lmarr = Array(p_p2_seg72_,p_p2_seg72_vr)
glf_lightMaps.Add "p2_seg72", glf_p2_seg72_lmarr
Dim glf_p4_seg71_lmarr : glf_p4_seg71_lmarr = Array(p_p4_seg71_,p_p4_seg71_vr)
glf_lightMaps.Add "p4_seg71", glf_p4_seg71_lmarr
Dim glf_p3_seg71_lmarr : glf_p3_seg71_lmarr = Array(p_p3_seg71_,p_p3_seg71_vr)
glf_lightMaps.Add "p3_seg71", glf_p3_seg71_lmarr
Dim glf_p2_seg71_lmarr : glf_p2_seg71_lmarr = Array(p_p2_seg71_,p_p2_seg71_vr)
glf_lightMaps.Add "p2_seg71", glf_p2_seg71_lmarr
Dim glf_p4_seg70_lmarr : glf_p4_seg70_lmarr = Array(p_p4_seg70_,p_p4_seg70_vr)
glf_lightMaps.Add "p4_seg70", glf_p4_seg70_lmarr
Dim glf_p3_seg70_lmarr : glf_p3_seg70_lmarr = Array(p_p3_seg70_,p_p3_seg70_vr)
glf_lightMaps.Add "p3_seg70", glf_p3_seg70_lmarr
Dim glf_p2_seg70_lmarr : glf_p2_seg70_lmarr = Array(p_p2_seg70_,p_p2_seg70_vr)
glf_lightMaps.Add "p2_seg70", glf_p2_seg70_lmarr
Dim glf_p4_seg69_lmarr : glf_p4_seg69_lmarr = Array(p_p4_seg69_,p_p4_seg69_vr)
glf_lightMaps.Add "p4_seg69", glf_p4_seg69_lmarr
Dim glf_p3_seg69_lmarr : glf_p3_seg69_lmarr = Array(p_p3_seg69_,p_p3_seg69_vr)
glf_lightMaps.Add "p3_seg69", glf_p3_seg69_lmarr
Dim glf_p2_seg69_lmarr : glf_p2_seg69_lmarr = Array(p_p2_seg69_,p_p2_seg69_vr)
glf_lightMaps.Add "p2_seg69", glf_p2_seg69_lmarr
Dim glf_p4_seg68_lmarr : glf_p4_seg68_lmarr = Array(p_p4_seg68_,p_p4_seg68_vr)
glf_lightMaps.Add "p4_seg68", glf_p4_seg68_lmarr
Dim glf_p3_seg68_lmarr : glf_p3_seg68_lmarr = Array(p_p3_seg68_,p_p3_seg68_vr)
glf_lightMaps.Add "p3_seg68", glf_p3_seg68_lmarr
Dim glf_p2_seg68_lmarr : glf_p2_seg68_lmarr = Array(p_p2_seg68_,p_p2_seg68_vr)
glf_lightMaps.Add "p2_seg68", glf_p2_seg68_lmarr
Dim glf_p4_seg67_lmarr : glf_p4_seg67_lmarr = Array(p_p4_seg67_,p_p4_seg67_vr)
glf_lightMaps.Add "p4_seg67", glf_p4_seg67_lmarr
Dim glf_p3_seg67_lmarr : glf_p3_seg67_lmarr = Array(p_p3_seg67_,p_p3_seg67_vr)
glf_lightMaps.Add "p3_seg67", glf_p3_seg67_lmarr
Dim glf_p2_seg67_lmarr : glf_p2_seg67_lmarr = Array(p_p2_seg67_,p_p2_seg67_vr)
glf_lightMaps.Add "p2_seg67", glf_p2_seg67_lmarr
Dim glf_p4_seg66_lmarr : glf_p4_seg66_lmarr = Array(p_p4_seg66_,p_p4_seg66_vr)
glf_lightMaps.Add "p4_seg66", glf_p4_seg66_lmarr
Dim glf_p3_seg66_lmarr : glf_p3_seg66_lmarr = Array(p_p3_seg66_,p_p3_seg66_vr)
glf_lightMaps.Add "p3_seg66", glf_p3_seg66_lmarr
Dim glf_p2_seg66_lmarr : glf_p2_seg66_lmarr = Array(p_p2_seg66_,p_p2_seg66_vr)
glf_lightMaps.Add "p2_seg66", glf_p2_seg66_lmarr
Dim glf_p4_seg65_lmarr : glf_p4_seg65_lmarr = Array(p_p4_seg65_,p_p4_seg65_vr)
glf_lightMaps.Add "p4_seg65", glf_p4_seg65_lmarr
Dim glf_p3_seg65_lmarr : glf_p3_seg65_lmarr = Array(p_p3_seg65_,p_p3_seg65_vr)
glf_lightMaps.Add "p3_seg65", glf_p3_seg65_lmarr
Dim glf_p2_seg65_lmarr : glf_p2_seg65_lmarr = Array(p_p2_seg65_,p_p2_seg65_vr)
glf_lightMaps.Add "p2_seg65", glf_p2_seg65_lmarr
Dim glf_p4_seg64_lmarr : glf_p4_seg64_lmarr = Array(p_p4_seg64_,p_p4_seg64_vr)
glf_lightMaps.Add "p4_seg64", glf_p4_seg64_lmarr
Dim glf_p3_seg64_lmarr : glf_p3_seg64_lmarr = Array(p_p3_seg64_,p_p3_seg64_vr)
glf_lightMaps.Add "p3_seg64", glf_p3_seg64_lmarr
Dim glf_p2_seg64_lmarr : glf_p2_seg64_lmarr = Array(p_p2_seg64_,p_p2_seg64_vr)
glf_lightMaps.Add "p2_seg64", glf_p2_seg64_lmarr
Dim glf_p4_seg63_lmarr : glf_p4_seg63_lmarr = Array(p_p4_seg63_,p_p4_seg63_vr)
glf_lightMaps.Add "p4_seg63", glf_p4_seg63_lmarr
Dim glf_p3_seg63_lmarr : glf_p3_seg63_lmarr = Array(p_p3_seg63_,p_p3_seg63_vr)
glf_lightMaps.Add "p3_seg63", glf_p3_seg63_lmarr
Dim glf_p2_seg63_lmarr : glf_p2_seg63_lmarr = Array(p_p2_seg63_,p_p2_seg63_vr)
glf_lightMaps.Add "p2_seg63", glf_p2_seg63_lmarr
Dim glf_p4_seg62_lmarr : glf_p4_seg62_lmarr = Array(p_p4_seg62_,p_p4_seg62_vr)
glf_lightMaps.Add "p4_seg62", glf_p4_seg62_lmarr
Dim glf_p3_seg62_lmarr : glf_p3_seg62_lmarr = Array(p_p3_seg62_,p_p3_seg62_vr)
glf_lightMaps.Add "p3_seg62", glf_p3_seg62_lmarr
Dim glf_p2_seg62_lmarr : glf_p2_seg62_lmarr = Array(p_p2_seg62_,p_p2_seg62_vr)
glf_lightMaps.Add "p2_seg62", glf_p2_seg62_lmarr
Dim glf_p4_seg61_lmarr : glf_p4_seg61_lmarr = Array(p_p4_seg61_,p_p4_seg61_vr)
glf_lightMaps.Add "p4_seg61", glf_p4_seg61_lmarr
Dim glf_p3_seg61_lmarr : glf_p3_seg61_lmarr = Array(p_p3_seg61_,p_p3_seg61_vr)
glf_lightMaps.Add "p3_seg61", glf_p3_seg61_lmarr
Dim glf_p2_seg61_lmarr : glf_p2_seg61_lmarr = Array(p_p2_seg61_,p_p2_seg61_vr)
glf_lightMaps.Add "p2_seg61", glf_p2_seg61_lmarr
Dim glf_p4_seg60_lmarr : glf_p4_seg60_lmarr = Array(p_p4_seg60_,p_p4_seg60_vr)
glf_lightMaps.Add "p4_seg60", glf_p4_seg60_lmarr
Dim glf_p3_seg60_lmarr : glf_p3_seg60_lmarr = Array(p_p3_seg60_,p_p3_seg60_vr)
glf_lightMaps.Add "p3_seg60", glf_p3_seg60_lmarr
Dim glf_p2_seg60_lmarr : glf_p2_seg60_lmarr = Array(p_p2_seg60_,p_p2_seg60_vr)
glf_lightMaps.Add "p2_seg60", glf_p2_seg60_lmarr
Dim glf_p4_seg59_lmarr : glf_p4_seg59_lmarr = Array(p_p4_seg59_,p_p4_seg59_vr)
glf_lightMaps.Add "p4_seg59", glf_p4_seg59_lmarr
Dim glf_p3_seg59_lmarr : glf_p3_seg59_lmarr = Array(p_p3_seg59_,p_p3_seg59_vr)
glf_lightMaps.Add "p3_seg59", glf_p3_seg59_lmarr
Dim glf_p2_seg59_lmarr : glf_p2_seg59_lmarr = Array(p_p2_seg59_,p_p2_seg59_vr)
glf_lightMaps.Add "p2_seg59", glf_p2_seg59_lmarr
Dim glf_p4_seg58_lmarr : glf_p4_seg58_lmarr = Array(p_p4_seg58_,p_p4_seg58_vr)
glf_lightMaps.Add "p4_seg58", glf_p4_seg58_lmarr
Dim glf_p3_seg58_lmarr : glf_p3_seg58_lmarr = Array(p_p3_seg58_,p_p3_seg58_vr)
glf_lightMaps.Add "p3_seg58", glf_p3_seg58_lmarr
Dim glf_p2_seg58_lmarr : glf_p2_seg58_lmarr = Array(p_p2_seg58_,p_p2_seg58_vr)
glf_lightMaps.Add "p2_seg58", glf_p2_seg58_lmarr
Dim glf_p4_seg57_lmarr : glf_p4_seg57_lmarr = Array(p_p4_seg57_,p_p4_seg57_vr)
glf_lightMaps.Add "p4_seg57", glf_p4_seg57_lmarr
Dim glf_p3_seg57_lmarr : glf_p3_seg57_lmarr = Array(p_p3_seg57_,p_p3_seg57_vr)
glf_lightMaps.Add "p3_seg57", glf_p3_seg57_lmarr
Dim glf_p2_seg57_lmarr : glf_p2_seg57_lmarr = Array(p_p2_seg57_,p_p2_seg57_vr)
glf_lightMaps.Add "p2_seg57", glf_p2_seg57_lmarr
Dim glf_p4_seg56_lmarr : glf_p4_seg56_lmarr = Array(p_p4_seg56_,p_p4_seg56_vr)
glf_lightMaps.Add "p4_seg56", glf_p4_seg56_lmarr
Dim glf_p3_seg56_lmarr : glf_p3_seg56_lmarr = Array(p_p3_seg56_,p_p3_seg56_vr)
glf_lightMaps.Add "p3_seg56", glf_p3_seg56_lmarr
Dim glf_p2_seg56_lmarr : glf_p2_seg56_lmarr = Array(p_p2_seg56_,p_p2_seg56_vr)
glf_lightMaps.Add "p2_seg56", glf_p2_seg56_lmarr
Dim glf_p4_seg55_lmarr : glf_p4_seg55_lmarr = Array(p_p4_seg55_,p_p4_seg55_vr)
glf_lightMaps.Add "p4_seg55", glf_p4_seg55_lmarr
Dim glf_p3_seg55_lmarr : glf_p3_seg55_lmarr = Array(p_p3_seg55_,p_p3_seg55_vr)
glf_lightMaps.Add "p3_seg55", glf_p3_seg55_lmarr
Dim glf_p2_seg55_lmarr : glf_p2_seg55_lmarr = Array(p_p2_seg55_,p_p2_seg55_vr)
glf_lightMaps.Add "p2_seg55", glf_p2_seg55_lmarr
Dim glf_p4_seg54_lmarr : glf_p4_seg54_lmarr = Array(p_p4_seg54_,p_p4_seg54_vr)
glf_lightMaps.Add "p4_seg54", glf_p4_seg54_lmarr
Dim glf_p3_seg54_lmarr : glf_p3_seg54_lmarr = Array(p_p3_seg54_,p_p3_seg54_vr)
glf_lightMaps.Add "p3_seg54", glf_p3_seg54_lmarr
Dim glf_p2_seg54_lmarr : glf_p2_seg54_lmarr = Array(p_p2_seg54_,p_p2_seg54_vr)
glf_lightMaps.Add "p2_seg54", glf_p2_seg54_lmarr
Dim glf_p4_seg53_lmarr : glf_p4_seg53_lmarr = Array(p_p4_seg53_,p_p4_seg53_vr)
glf_lightMaps.Add "p4_seg53", glf_p4_seg53_lmarr
Dim glf_p3_seg53_lmarr : glf_p3_seg53_lmarr = Array(p_p3_seg53_,p_p3_seg53_vr)
glf_lightMaps.Add "p3_seg53", glf_p3_seg53_lmarr
Dim glf_p2_seg53_lmarr : glf_p2_seg53_lmarr = Array(p_p2_seg53_,p_p2_seg53_vr)
glf_lightMaps.Add "p2_seg53", glf_p2_seg53_lmarr
Dim glf_p4_seg52_lmarr : glf_p4_seg52_lmarr = Array(p_p4_seg52_,p_p4_seg52_vr)
glf_lightMaps.Add "p4_seg52", glf_p4_seg52_lmarr
Dim glf_p3_seg52_lmarr : glf_p3_seg52_lmarr = Array(p_p3_seg52_,p_p3_seg52_vr)
glf_lightMaps.Add "p3_seg52", glf_p3_seg52_lmarr
Dim glf_p2_seg52_lmarr : glf_p2_seg52_lmarr = Array(p_p2_seg52_,p_p2_seg52_vr)
glf_lightMaps.Add "p2_seg52", glf_p2_seg52_lmarr
Dim glf_p4_seg51_lmarr : glf_p4_seg51_lmarr = Array(p_p4_seg51_,p_p4_seg51_vr)
glf_lightMaps.Add "p4_seg51", glf_p4_seg51_lmarr
Dim glf_p3_seg51_lmarr : glf_p3_seg51_lmarr = Array(p_p3_seg51_,p_p3_seg51_vr)
glf_lightMaps.Add "p3_seg51", glf_p3_seg51_lmarr
Dim glf_p2_seg51_lmarr : glf_p2_seg51_lmarr = Array(p_p2_seg51_,p_p2_seg51_vr)
glf_lightMaps.Add "p2_seg51", glf_p2_seg51_lmarr
Dim glf_p4_seg50_lmarr : glf_p4_seg50_lmarr = Array(p_p4_seg50_,p_p4_seg50_vr)
glf_lightMaps.Add "p4_seg50", glf_p4_seg50_lmarr
Dim glf_p3_seg50_lmarr : glf_p3_seg50_lmarr = Array(p_p3_seg50_,p_p3_seg50_vr)
glf_lightMaps.Add "p3_seg50", glf_p3_seg50_lmarr
Dim glf_p2_seg50_lmarr : glf_p2_seg50_lmarr = Array(p_p2_seg50_,p_p2_seg50_vr)
glf_lightMaps.Add "p2_seg50", glf_p2_seg50_lmarr
Dim glf_p4_seg49_lmarr : glf_p4_seg49_lmarr = Array(p_p4_seg49_,p_p4_seg49_vr)
glf_lightMaps.Add "p4_seg49", glf_p4_seg49_lmarr
Dim glf_p3_seg49_lmarr : glf_p3_seg49_lmarr = Array(p_p3_seg49_,p_p3_seg49_vr)
glf_lightMaps.Add "p3_seg49", glf_p3_seg49_lmarr
Dim glf_p2_seg49_lmarr : glf_p2_seg49_lmarr = Array(p_p2_seg49_,p_p2_seg49_vr)
glf_lightMaps.Add "p2_seg49", glf_p2_seg49_lmarr
Dim glf_p4_seg48_lmarr : glf_p4_seg48_lmarr = Array(p_p4_seg48_,p_p4_seg48_vr)
glf_lightMaps.Add "p4_seg48", glf_p4_seg48_lmarr
Dim glf_p3_seg48_lmarr : glf_p3_seg48_lmarr = Array(p_p3_seg48_,p_p3_seg48_vr)
glf_lightMaps.Add "p3_seg48", glf_p3_seg48_lmarr
Dim glf_p2_seg48_lmarr : glf_p2_seg48_lmarr = Array(p_p2_seg48_,p_p2_seg48_vr)
glf_lightMaps.Add "p2_seg48", glf_p2_seg48_lmarr
Dim glf_p4_seg47_lmarr : glf_p4_seg47_lmarr = Array(p_p4_seg47_,p_p4_seg47_vr)
glf_lightMaps.Add "p4_seg47", glf_p4_seg47_lmarr
Dim glf_p3_seg47_lmarr : glf_p3_seg47_lmarr = Array(p_p3_seg47_,p_p3_seg47_vr)
glf_lightMaps.Add "p3_seg47", glf_p3_seg47_lmarr
Dim glf_p2_seg47_lmarr : glf_p2_seg47_lmarr = Array(p_p2_seg47_,p_p2_seg47_vr)
glf_lightMaps.Add "p2_seg47", glf_p2_seg47_lmarr
Dim glf_p4_seg46_lmarr : glf_p4_seg46_lmarr = Array(p_p4_seg46_,p_p4_seg46_vr)
glf_lightMaps.Add "p4_seg46", glf_p4_seg46_lmarr
Dim glf_p3_seg46_lmarr : glf_p3_seg46_lmarr = Array(p_p3_seg46_,p_p3_seg46_vr)
glf_lightMaps.Add "p3_seg46", glf_p3_seg46_lmarr
Dim glf_p2_seg46_lmarr : glf_p2_seg46_lmarr = Array(p_p2_seg46_,p_p2_seg46_vr)
glf_lightMaps.Add "p2_seg46", glf_p2_seg46_lmarr
Dim glf_p4_seg45_lmarr : glf_p4_seg45_lmarr = Array(p_p4_seg45_,p_p4_seg45_vr)
glf_lightMaps.Add "p4_seg45", glf_p4_seg45_lmarr
Dim glf_p3_seg45_lmarr : glf_p3_seg45_lmarr = Array(p_p3_seg45_,p_p3_seg45_vr)
glf_lightMaps.Add "p3_seg45", glf_p3_seg45_lmarr
Dim glf_p2_seg45_lmarr : glf_p2_seg45_lmarr = Array(p_p2_seg45_,p_p2_seg45_vr)
glf_lightMaps.Add "p2_seg45", glf_p2_seg45_lmarr
Dim glf_p4_seg44_lmarr : glf_p4_seg44_lmarr = Array(p_p4_seg44_,p_p4_seg44_vr)
glf_lightMaps.Add "p4_seg44", glf_p4_seg44_lmarr
Dim glf_p3_seg44_lmarr : glf_p3_seg44_lmarr = Array(p_p3_seg44_,p_p3_seg44_vr)
glf_lightMaps.Add "p3_seg44", glf_p3_seg44_lmarr
Dim glf_p2_seg44_lmarr : glf_p2_seg44_lmarr = Array(p_p2_seg44_,p_p2_seg44_vr)
glf_lightMaps.Add "p2_seg44", glf_p2_seg44_lmarr
Dim glf_p4_seg43_lmarr : glf_p4_seg43_lmarr = Array(p_p4_seg43_,p_p4_seg43_vr)
glf_lightMaps.Add "p4_seg43", glf_p4_seg43_lmarr
Dim glf_p3_seg43_lmarr : glf_p3_seg43_lmarr = Array(p_p3_seg43_,p_p3_seg43_vr)
glf_lightMaps.Add "p3_seg43", glf_p3_seg43_lmarr
Dim glf_p2_seg43_lmarr : glf_p2_seg43_lmarr = Array(p_p2_seg43_,p_p2_seg43_vr)
glf_lightMaps.Add "p2_seg43", glf_p2_seg43_lmarr
Dim glf_p4_seg42_lmarr : glf_p4_seg42_lmarr = Array(p_p4_seg42_,p_p4_seg42_vr)
glf_lightMaps.Add "p4_seg42", glf_p4_seg42_lmarr
Dim glf_p3_seg42_lmarr : glf_p3_seg42_lmarr = Array(p_p3_seg42_,p_p3_seg42_vr)
glf_lightMaps.Add "p3_seg42", glf_p3_seg42_lmarr
Dim glf_p2_seg42_lmarr : glf_p2_seg42_lmarr = Array(p_p2_seg42_,p_p2_seg42_vr)
glf_lightMaps.Add "p2_seg42", glf_p2_seg42_lmarr
Dim glf_p4_seg41_lmarr : glf_p4_seg41_lmarr = Array(p_p4_seg41_,p_p4_seg41_vr)
glf_lightMaps.Add "p4_seg41", glf_p4_seg41_lmarr
Dim glf_p3_seg41_lmarr : glf_p3_seg41_lmarr = Array(p_p3_seg41_,p_p3_seg41_vr)
glf_lightMaps.Add "p3_seg41", glf_p3_seg41_lmarr
Dim glf_p2_seg41_lmarr : glf_p2_seg41_lmarr = Array(p_p2_seg41_,p_p2_seg41_vr)
glf_lightMaps.Add "p2_seg41", glf_p2_seg41_lmarr
Dim glf_p4_seg40_lmarr : glf_p4_seg40_lmarr = Array(p_p4_seg40_,p_p4_seg40_vr)
glf_lightMaps.Add "p4_seg40", glf_p4_seg40_lmarr
Dim glf_p3_seg40_lmarr : glf_p3_seg40_lmarr = Array(p_p3_seg40_,p_p3_seg40_vr)
glf_lightMaps.Add "p3_seg40", glf_p3_seg40_lmarr
Dim glf_p2_seg40_lmarr : glf_p2_seg40_lmarr = Array(p_p2_seg40_,p_p2_seg40_vr)
glf_lightMaps.Add "p2_seg40", glf_p2_seg40_lmarr
Dim glf_p4_seg39_lmarr : glf_p4_seg39_lmarr = Array(p_p4_seg39_,p_p4_seg39_vr)
glf_lightMaps.Add "p4_seg39", glf_p4_seg39_lmarr
Dim glf_p3_seg39_lmarr : glf_p3_seg39_lmarr = Array(p_p3_seg39_,p_p3_seg39_vr)
glf_lightMaps.Add "p3_seg39", glf_p3_seg39_lmarr
Dim glf_p2_seg39_lmarr : glf_p2_seg39_lmarr = Array(p_p2_seg39_,p_p2_seg39_vr)
glf_lightMaps.Add "p2_seg39", glf_p2_seg39_lmarr
Dim glf_p4_seg38_lmarr : glf_p4_seg38_lmarr = Array(p_p4_seg38_,p_p4_seg38_vr)
glf_lightMaps.Add "p4_seg38", glf_p4_seg38_lmarr
Dim glf_p3_seg38_lmarr : glf_p3_seg38_lmarr = Array(p_p3_seg38_,p_p3_seg38_vr)
glf_lightMaps.Add "p3_seg38", glf_p3_seg38_lmarr
Dim glf_p2_seg38_lmarr : glf_p2_seg38_lmarr = Array(p_p2_seg38_,p_p2_seg38_vr)
glf_lightMaps.Add "p2_seg38", glf_p2_seg38_lmarr
Dim glf_p4_seg37_lmarr : glf_p4_seg37_lmarr = Array(p_p4_seg37_,p_p4_seg37_vr)
glf_lightMaps.Add "p4_seg37", glf_p4_seg37_lmarr
Dim glf_p3_seg37_lmarr : glf_p3_seg37_lmarr = Array(p_p3_seg37_,p_p3_seg37_vr)
glf_lightMaps.Add "p3_seg37", glf_p3_seg37_lmarr
Dim glf_p2_seg37_lmarr : glf_p2_seg37_lmarr = Array(p_p2_seg37_,p_p2_seg37_vr)
glf_lightMaps.Add "p2_seg37", glf_p2_seg37_lmarr
Dim glf_p4_seg36_lmarr : glf_p4_seg36_lmarr = Array(p_p4_seg36_,p_p4_seg36_vr)
glf_lightMaps.Add "p4_seg36", glf_p4_seg36_lmarr
Dim glf_p3_seg36_lmarr : glf_p3_seg36_lmarr = Array(p_p3_seg36_,p_p3_seg36_vr)
glf_lightMaps.Add "p3_seg36", glf_p3_seg36_lmarr
Dim glf_p2_seg36_lmarr : glf_p2_seg36_lmarr = Array(p_p2_seg36_,p_p2_seg36_vr)
glf_lightMaps.Add "p2_seg36", glf_p2_seg36_lmarr
Dim glf_p4_seg35_lmarr : glf_p4_seg35_lmarr = Array(p_p4_seg35_,p_p4_seg35_vr)
glf_lightMaps.Add "p4_seg35", glf_p4_seg35_lmarr
Dim glf_p3_seg35_lmarr : glf_p3_seg35_lmarr = Array(p_p3_seg35_,p_p3_seg35_vr)
glf_lightMaps.Add "p3_seg35", glf_p3_seg35_lmarr
Dim glf_p2_seg35_lmarr : glf_p2_seg35_lmarr = Array(p_p2_seg35_,p_p2_seg35_vr)
glf_lightMaps.Add "p2_seg35", glf_p2_seg35_lmarr
Dim glf_p4_seg34_lmarr : glf_p4_seg34_lmarr = Array(p_p4_seg34_,p_p4_seg34_vr)
glf_lightMaps.Add "p4_seg34", glf_p4_seg34_lmarr
Dim glf_p3_seg34_lmarr : glf_p3_seg34_lmarr = Array(p_p3_seg34_,p_p3_seg34_vr)
glf_lightMaps.Add "p3_seg34", glf_p3_seg34_lmarr
Dim glf_p2_seg34_lmarr : glf_p2_seg34_lmarr = Array(p_p2_seg34_,p_p2_seg34_vr)
glf_lightMaps.Add "p2_seg34", glf_p2_seg34_lmarr
Dim glf_p4_seg33_lmarr : glf_p4_seg33_lmarr = Array(p_p4_seg33_,p_p4_seg33_vr)
glf_lightMaps.Add "p4_seg33", glf_p4_seg33_lmarr
Dim glf_p3_seg33_lmarr : glf_p3_seg33_lmarr = Array(p_p3_seg33_,p_p3_seg33_vr)
glf_lightMaps.Add "p3_seg33", glf_p3_seg33_lmarr
Dim glf_p2_seg33_lmarr : glf_p2_seg33_lmarr = Array(p_p2_seg33_,p_p2_seg33_vr)
glf_lightMaps.Add "p2_seg33", glf_p2_seg33_lmarr
Dim glf_p4_seg32_lmarr : glf_p4_seg32_lmarr = Array(p_p4_seg32_,p_p4_seg32_vr)
glf_lightMaps.Add "p4_seg32", glf_p4_seg32_lmarr
Dim glf_p3_seg32_lmarr : glf_p3_seg32_lmarr = Array(p_p3_seg32_,p_p3_seg32_vr)
glf_lightMaps.Add "p3_seg32", glf_p3_seg32_lmarr
Dim glf_p2_seg32_lmarr : glf_p2_seg32_lmarr = Array(p_p2_seg32_,p_p2_seg32_vr)
glf_lightMaps.Add "p2_seg32", glf_p2_seg32_lmarr
Dim glf_p4_seg31_lmarr : glf_p4_seg31_lmarr = Array(p_p4_seg31_,p_p4_seg31_vr)
glf_lightMaps.Add "p4_seg31", glf_p4_seg31_lmarr
Dim glf_p3_seg31_lmarr : glf_p3_seg31_lmarr = Array(p_p3_seg31_,p_p3_seg31_vr)
glf_lightMaps.Add "p3_seg31", glf_p3_seg31_lmarr
Dim glf_p2_seg31_lmarr : glf_p2_seg31_lmarr = Array(p_p2_seg31_,p_p2_seg31_vr)
glf_lightMaps.Add "p2_seg31", glf_p2_seg31_lmarr
Dim glf_p4_seg30_lmarr : glf_p4_seg30_lmarr = Array(p_p4_seg30_,p_p4_seg30_vr)
glf_lightMaps.Add "p4_seg30", glf_p4_seg30_lmarr
Dim glf_p3_seg30_lmarr : glf_p3_seg30_lmarr = Array(p_p3_seg30_,p_p3_seg30_vr)
glf_lightMaps.Add "p3_seg30", glf_p3_seg30_lmarr
Dim glf_p2_seg30_lmarr : glf_p2_seg30_lmarr = Array(p_p2_seg30_,p_p2_seg30_vr)
glf_lightMaps.Add "p2_seg30", glf_p2_seg30_lmarr
Dim glf_p4_seg29_lmarr : glf_p4_seg29_lmarr = Array(p_p4_seg29_,p_p4_seg29_vr)
glf_lightMaps.Add "p4_seg29", glf_p4_seg29_lmarr
Dim glf_p3_seg29_lmarr : glf_p3_seg29_lmarr = Array(p_p3_seg29_,p_p3_seg29_vr)
glf_lightMaps.Add "p3_seg29", glf_p3_seg29_lmarr
Dim glf_p2_seg29_lmarr : glf_p2_seg29_lmarr = Array(p_p2_seg29_,p_p2_seg29_vr)
glf_lightMaps.Add "p2_seg29", glf_p2_seg29_lmarr
Dim glf_p4_seg28_lmarr : glf_p4_seg28_lmarr = Array(p_p4_seg28_,p_p4_seg28_vr)
glf_lightMaps.Add "p4_seg28", glf_p4_seg28_lmarr
Dim glf_p3_seg28_lmarr : glf_p3_seg28_lmarr = Array(p_p3_seg28_,p_p3_seg28_vr)
glf_lightMaps.Add "p3_seg28", glf_p3_seg28_lmarr
Dim glf_p2_seg28_lmarr : glf_p2_seg28_lmarr = Array(p_p2_seg28_,p_p2_seg28_vr)
glf_lightMaps.Add "p2_seg28", glf_p2_seg28_lmarr
Dim glf_p4_seg27_lmarr : glf_p4_seg27_lmarr = Array(p_p4_seg27_,p_p4_seg27_vr)
glf_lightMaps.Add "p4_seg27", glf_p4_seg27_lmarr
Dim glf_p3_seg27_lmarr : glf_p3_seg27_lmarr = Array(p_p3_seg27_,p_p3_seg27_vr)
glf_lightMaps.Add "p3_seg27", glf_p3_seg27_lmarr
Dim glf_p2_seg27_lmarr : glf_p2_seg27_lmarr = Array(p_p2_seg27_,p_p2_seg27_vr)
glf_lightMaps.Add "p2_seg27", glf_p2_seg27_lmarr
Dim glf_p4_seg26_lmarr : glf_p4_seg26_lmarr = Array(p_p4_seg26_,p_p4_seg26_vr)
glf_lightMaps.Add "p4_seg26", glf_p4_seg26_lmarr
Dim glf_p3_seg26_lmarr : glf_p3_seg26_lmarr = Array(p_p3_seg26_,p_p3_seg26_vr)
glf_lightMaps.Add "p3_seg26", glf_p3_seg26_lmarr
Dim glf_p2_seg26_lmarr : glf_p2_seg26_lmarr = Array(p_p2_seg26_,p_p2_seg26_vr)
glf_lightMaps.Add "p2_seg26", glf_p2_seg26_lmarr
Dim glf_p4_seg25_lmarr : glf_p4_seg25_lmarr = Array(p_p4_seg25_,p_p4_seg25_vr)
glf_lightMaps.Add "p4_seg25", glf_p4_seg25_lmarr
Dim glf_p3_seg25_lmarr : glf_p3_seg25_lmarr = Array(p_p3_seg25_,p_p3_seg25_vr)
glf_lightMaps.Add "p3_seg25", glf_p3_seg25_lmarr
Dim glf_p2_seg25_lmarr : glf_p2_seg25_lmarr = Array(p_p2_seg25_,p_p2_seg25_vr)
glf_lightMaps.Add "p2_seg25", glf_p2_seg25_lmarr
Dim glf_p4_seg24_lmarr : glf_p4_seg24_lmarr = Array(p_p4_seg24_,p_p4_seg24_vr)
glf_lightMaps.Add "p4_seg24", glf_p4_seg24_lmarr
Dim glf_p3_seg24_lmarr : glf_p3_seg24_lmarr = Array(p_p3_seg24_,p_p3_seg24_vr)
glf_lightMaps.Add "p3_seg24", glf_p3_seg24_lmarr
Dim glf_p2_seg24_lmarr : glf_p2_seg24_lmarr = Array(p_p2_seg24_,p_p2_seg24_vr)
glf_lightMaps.Add "p2_seg24", glf_p2_seg24_lmarr
Dim glf_p4_seg23_lmarr : glf_p4_seg23_lmarr = Array(p_p4_seg23_,p_p4_seg23_vr)
glf_lightMaps.Add "p4_seg23", glf_p4_seg23_lmarr
Dim glf_p3_seg23_lmarr : glf_p3_seg23_lmarr = Array(p_p3_seg23_,p_p3_seg23_vr)
glf_lightMaps.Add "p3_seg23", glf_p3_seg23_lmarr
Dim glf_p2_seg23_lmarr : glf_p2_seg23_lmarr = Array(p_p2_seg23_,p_p2_seg23_vr)
glf_lightMaps.Add "p2_seg23", glf_p2_seg23_lmarr
Dim glf_p4_seg22_lmarr : glf_p4_seg22_lmarr = Array(p_p4_seg22_,p_p4_seg22_vr)
glf_lightMaps.Add "p4_seg22", glf_p4_seg22_lmarr
Dim glf_p3_seg22_lmarr : glf_p3_seg22_lmarr = Array(p_p3_seg22_,p_p3_seg22_vr)
glf_lightMaps.Add "p3_seg22", glf_p3_seg22_lmarr
Dim glf_p2_seg22_lmarr : glf_p2_seg22_lmarr = Array(p_p2_seg22_,p_p2_seg22_vr)
glf_lightMaps.Add "p2_seg22", glf_p2_seg22_lmarr
Dim glf_p4_seg21_lmarr : glf_p4_seg21_lmarr = Array(p_p4_seg21_,p_p4_seg21_vr)
glf_lightMaps.Add "p4_seg21", glf_p4_seg21_lmarr
Dim glf_p3_seg21_lmarr : glf_p3_seg21_lmarr = Array(p_p3_seg21_,p_p3_seg21_vr)
glf_lightMaps.Add "p3_seg21", glf_p3_seg21_lmarr
Dim glf_p2_seg21_lmarr : glf_p2_seg21_lmarr = Array(p_p2_seg21_,p_p2_seg21_vr)
glf_lightMaps.Add "p2_seg21", glf_p2_seg21_lmarr
Dim glf_p4_seg20_lmarr : glf_p4_seg20_lmarr = Array(p_p4_seg20_,p_p4_seg20_vr)
glf_lightMaps.Add "p4_seg20", glf_p4_seg20_lmarr
Dim glf_p3_seg20_lmarr : glf_p3_seg20_lmarr = Array(p_p3_seg20_,p_p3_seg20_vr)
glf_lightMaps.Add "p3_seg20", glf_p3_seg20_lmarr
Dim glf_p2_seg20_lmarr : glf_p2_seg20_lmarr = Array(p_p2_seg20_,p_p2_seg20_vr)
glf_lightMaps.Add "p2_seg20", glf_p2_seg20_lmarr
Dim glf_p4_seg19_lmarr : glf_p4_seg19_lmarr = Array(p_p4_seg19_,p_p4_seg19_vr)
glf_lightMaps.Add "p4_seg19", glf_p4_seg19_lmarr
Dim glf_p3_seg19_lmarr : glf_p3_seg19_lmarr = Array(p_p3_seg19_,p_p3_seg19_vr)
glf_lightMaps.Add "p3_seg19", glf_p3_seg19_lmarr
Dim glf_p2_seg19_lmarr : glf_p2_seg19_lmarr = Array(p_p2_seg19_,p_p2_seg19_vr)
glf_lightMaps.Add "p2_seg19", glf_p2_seg19_lmarr
Dim glf_p4_seg18_lmarr : glf_p4_seg18_lmarr = Array(p_p4_seg18_,p_p4_seg18_vr)
glf_lightMaps.Add "p4_seg18", glf_p4_seg18_lmarr
Dim glf_p3_seg18_lmarr : glf_p3_seg18_lmarr = Array(p_p3_seg18_,p_p3_seg18_vr)
glf_lightMaps.Add "p3_seg18", glf_p3_seg18_lmarr
Dim glf_p2_seg18_lmarr : glf_p2_seg18_lmarr = Array(p_p2_seg18_,p_p2_seg18_vr)
glf_lightMaps.Add "p2_seg18", glf_p2_seg18_lmarr
Dim glf_p4_seg17_lmarr : glf_p4_seg17_lmarr = Array(p_p4_seg17_,p_p4_seg17_vr)
glf_lightMaps.Add "p4_seg17", glf_p4_seg17_lmarr
Dim glf_p3_seg17_lmarr : glf_p3_seg17_lmarr = Array(p_p3_seg17_,p_p3_seg17_vr)
glf_lightMaps.Add "p3_seg17", glf_p3_seg17_lmarr
Dim glf_p2_seg17_lmarr : glf_p2_seg17_lmarr = Array(p_p2_seg17_,p_p2_seg17_vr)
glf_lightMaps.Add "p2_seg17", glf_p2_seg17_lmarr
Dim glf_p4_seg16_lmarr : glf_p4_seg16_lmarr = Array(p_p4_seg16_,p_p4_seg16_vr)
glf_lightMaps.Add "p4_seg16", glf_p4_seg16_lmarr
Dim glf_p3_seg16_lmarr : glf_p3_seg16_lmarr = Array(p_p3_seg16_,p_p3_seg16_vr)
glf_lightMaps.Add "p3_seg16", glf_p3_seg16_lmarr
Dim glf_p2_seg16_lmarr : glf_p2_seg16_lmarr = Array(p_p2_seg16_,p_p2_seg16_vr)
glf_lightMaps.Add "p2_seg16", glf_p2_seg16_lmarr
Dim glf_p4_seg15_lmarr : glf_p4_seg15_lmarr = Array(p_p4_seg15_,p_p4_seg15_vr)
glf_lightMaps.Add "p4_seg15", glf_p4_seg15_lmarr
Dim glf_p3_seg15_lmarr : glf_p3_seg15_lmarr = Array(p_p3_seg15_,p_p3_seg15_vr)
glf_lightMaps.Add "p3_seg15", glf_p3_seg15_lmarr
Dim glf_p2_seg15_lmarr : glf_p2_seg15_lmarr = Array(p_p2_seg15_,p_p2_seg15_vr)
glf_lightMaps.Add "p2_seg15", glf_p2_seg15_lmarr
Dim glf_p4_seg14_lmarr : glf_p4_seg14_lmarr = Array(p_p4_seg14_,p_p4_seg14_vr)
glf_lightMaps.Add "p4_seg14", glf_p4_seg14_lmarr
Dim glf_p3_seg14_lmarr : glf_p3_seg14_lmarr = Array(p_p3_seg14_,p_p3_seg14_vr)
glf_lightMaps.Add "p3_seg14", glf_p3_seg14_lmarr
Dim glf_p2_seg14_lmarr : glf_p2_seg14_lmarr = Array(p_p2_seg14_,p_p2_seg14_vr)
glf_lightMaps.Add "p2_seg14", glf_p2_seg14_lmarr
Dim glf_p4_seg13_lmarr : glf_p4_seg13_lmarr = Array(p_p4_seg13_,p_p4_seg13_vr)
glf_lightMaps.Add "p4_seg13", glf_p4_seg13_lmarr
Dim glf_p3_seg13_lmarr : glf_p3_seg13_lmarr = Array(p_p3_seg13_,p_p3_seg13_vr)
glf_lightMaps.Add "p3_seg13", glf_p3_seg13_lmarr
Dim glf_p2_seg13_lmarr : glf_p2_seg13_lmarr = Array(p_p2_seg13_,p_p2_seg13_vr)
glf_lightMaps.Add "p2_seg13", glf_p2_seg13_lmarr
Dim glf_p4_seg12_lmarr : glf_p4_seg12_lmarr = Array(p_p4_seg12_,p_p4_seg12_vr)
glf_lightMaps.Add "p4_seg12", glf_p4_seg12_lmarr
Dim glf_p3_seg12_lmarr : glf_p3_seg12_lmarr = Array(p_p3_seg12_,p_p3_seg12_vr)
glf_lightMaps.Add "p3_seg12", glf_p3_seg12_lmarr
Dim glf_p2_seg12_lmarr : glf_p2_seg12_lmarr = Array(p_p2_seg12_,p_p2_seg12_vr)
glf_lightMaps.Add "p2_seg12", glf_p2_seg12_lmarr
Dim glf_p4_seg11_lmarr : glf_p4_seg11_lmarr = Array(p_p4_seg11_,p_p4_seg11_vr)
glf_lightMaps.Add "p4_seg11", glf_p4_seg11_lmarr
Dim glf_p3_seg11_lmarr : glf_p3_seg11_lmarr = Array(p_p3_seg11_,p_p3_seg11_vr)
glf_lightMaps.Add "p3_seg11", glf_p3_seg11_lmarr
Dim glf_p2_seg11_lmarr : glf_p2_seg11_lmarr = Array(p_p2_seg11_,p_p2_seg11_vr)
glf_lightMaps.Add "p2_seg11", glf_p2_seg11_lmarr
Dim glf_p4_seg10_lmarr : glf_p4_seg10_lmarr = Array(p_p4_seg10_,p_p4_seg10_vr)
glf_lightMaps.Add "p4_seg10", glf_p4_seg10_lmarr
Dim glf_p3_seg10_lmarr : glf_p3_seg10_lmarr = Array(p_p3_seg10_,p_p3_seg10_vr)
glf_lightMaps.Add "p3_seg10", glf_p3_seg10_lmarr
Dim glf_p2_seg10_lmarr : glf_p2_seg10_lmarr = Array(p_p2_seg10_,p_p2_seg10_vr)
glf_lightMaps.Add "p2_seg10", glf_p2_seg10_lmarr
Dim glf_p4_seg9_lmarr : glf_p4_seg9_lmarr = Array(p_p4_seg9_,p_p4_seg9_vr)
glf_lightMaps.Add "p4_seg9", glf_p4_seg9_lmarr
Dim glf_p3_seg9_lmarr : glf_p3_seg9_lmarr = Array(p_p3_seg9_,p_p3_seg9_vr)
glf_lightMaps.Add "p3_seg9", glf_p3_seg9_lmarr
Dim glf_p2_seg9_lmarr : glf_p2_seg9_lmarr = Array(p_p2_seg9_,p_p2_seg9_vr)
glf_lightMaps.Add "p2_seg9", glf_p2_seg9_lmarr
Dim glf_p4_seg8_lmarr : glf_p4_seg8_lmarr = Array(p_p4_seg8_,p_p4_seg8_vr)
glf_lightMaps.Add "p4_seg8", glf_p4_seg8_lmarr
Dim glf_p3_seg8_lmarr : glf_p3_seg8_lmarr = Array(p_p3_seg8_,p_p3_seg8_vr)
glf_lightMaps.Add "p3_seg8", glf_p3_seg8_lmarr
Dim glf_p2_seg8_lmarr : glf_p2_seg8_lmarr = Array(p_p2_seg8_,p_p2_seg8_vr)
glf_lightMaps.Add "p2_seg8", glf_p2_seg8_lmarr
Dim glf_p4_seg7_lmarr : glf_p4_seg7_lmarr = Array(p_p4_seg7_,p_p4_seg7_vr)
glf_lightMaps.Add "p4_seg7", glf_p4_seg7_lmarr
Dim glf_p3_seg7_lmarr : glf_p3_seg7_lmarr = Array(p_p3_seg7_,p_p3_seg7_vr)
glf_lightMaps.Add "p3_seg7", glf_p3_seg7_lmarr
Dim glf_p2_seg7_lmarr : glf_p2_seg7_lmarr = Array(p_p2_seg7_,p_p2_seg7_vr)
glf_lightMaps.Add "p2_seg7", glf_p2_seg7_lmarr
Dim glf_p4_seg6_lmarr : glf_p4_seg6_lmarr = Array(p_p4_seg6_,p_p4_seg6_vr)
glf_lightMaps.Add "p4_seg6", glf_p4_seg6_lmarr
Dim glf_p3_seg6_lmarr : glf_p3_seg6_lmarr = Array(p_p3_seg6_,p_p3_seg6_vr)
glf_lightMaps.Add "p3_seg6", glf_p3_seg6_lmarr
Dim glf_p2_seg6_lmarr : glf_p2_seg6_lmarr = Array(p_p2_seg6_,p_p2_seg6_vr)
glf_lightMaps.Add "p2_seg6", glf_p2_seg6_lmarr
Dim glf_p4_seg5_lmarr : glf_p4_seg5_lmarr = Array(p_p4_seg5_,p_p4_seg5_vr)
glf_lightMaps.Add "p4_seg5", glf_p4_seg5_lmarr
Dim glf_p3_seg5_lmarr : glf_p3_seg5_lmarr = Array(p_p3_seg5_,p_p3_seg5_vr)
glf_lightMaps.Add "p3_seg5", glf_p3_seg5_lmarr
Dim glf_p2_seg5_lmarr : glf_p2_seg5_lmarr = Array(p_p2_seg5_,p_p2_seg5_vr)
glf_lightMaps.Add "p2_seg5", glf_p2_seg5_lmarr
Dim glf_p4_seg4_lmarr : glf_p4_seg4_lmarr = Array(p_p4_seg4_,p_p4_seg4_vr)
glf_lightMaps.Add "p4_seg4", glf_p4_seg4_lmarr
Dim glf_p3_seg4_lmarr : glf_p3_seg4_lmarr = Array(p_p3_seg4_,p_p3_seg4_vr)
glf_lightMaps.Add "p3_seg4", glf_p3_seg4_lmarr
Dim glf_p2_seg4_lmarr : glf_p2_seg4_lmarr = Array(p_p2_seg4_,p_p2_seg4_vr)
glf_lightMaps.Add "p2_seg4", glf_p2_seg4_lmarr
Dim glf_p4_seg3_lmarr : glf_p4_seg3_lmarr = Array(p_p4_seg3_,p_p4_seg3_vr)
glf_lightMaps.Add "p4_seg3", glf_p4_seg3_lmarr
Dim glf_p3_seg3_lmarr : glf_p3_seg3_lmarr = Array(p_p3_seg3_,p_p3_seg3_vr)
glf_lightMaps.Add "p3_seg3", glf_p3_seg3_lmarr
Dim glf_p2_seg3_lmarr : glf_p2_seg3_lmarr = Array(p_p2_seg3_,p_p2_seg3_vr)
glf_lightMaps.Add "p2_seg3", glf_p2_seg3_lmarr
Dim glf_p4_seg2_lmarr : glf_p4_seg2_lmarr = Array(p_p4_seg2_,p_p4_seg2_vr)
glf_lightMaps.Add "p4_seg2", glf_p4_seg2_lmarr
Dim glf_p3_seg2_lmarr : glf_p3_seg2_lmarr = Array(p_p3_seg2_,p_p3_seg2_vr)
glf_lightMaps.Add "p3_seg2", glf_p3_seg2_lmarr
Dim glf_p2_seg2_lmarr : glf_p2_seg2_lmarr = Array(p_p2_seg2_,p_p2_seg2_vr)
glf_lightMaps.Add "p2_seg2", glf_p2_seg2_lmarr
Dim glf_p4_seg1_lmarr : glf_p4_seg1_lmarr = Array(p_p4_seg1_,p_p4_seg1_vr)
glf_lightMaps.Add "p4_seg1", glf_p4_seg1_lmarr
Dim glf_p3_seg1_lmarr : glf_p3_seg1_lmarr = Array(p_p3_seg1_,p_p3_seg1_vr)
glf_lightMaps.Add "p3_seg1", glf_p3_seg1_lmarr
Dim glf_p2_seg1_lmarr : glf_p2_seg1_lmarr = Array(p_p2_seg1_,p_p2_seg1_vr)
glf_lightMaps.Add "p2_seg1", glf_p2_seg1_lmarr
Dim glf_ball_seg29_lmarr : glf_ball_seg29_lmarr = Array(p_ball_seg29_vr)
glf_lightMaps.Add "ball_seg29", glf_ball_seg29_lmarr
Dim glf_ball_seg28_lmarr : glf_ball_seg28_lmarr = Array(p_ball_seg28_vr)
glf_lightMaps.Add "ball_seg28", glf_ball_seg28_lmarr
Dim glf_ball_seg27_lmarr : glf_ball_seg27_lmarr = Array(p_ball_seg27_vr)
glf_lightMaps.Add "ball_seg27", glf_ball_seg27_lmarr
Dim glf_ball_seg26_lmarr : glf_ball_seg26_lmarr = Array(p_ball_seg26_vr)
glf_lightMaps.Add "ball_seg26", glf_ball_seg26_lmarr
Dim glf_ball_seg25_lmarr : glf_ball_seg25_lmarr = Array(p_ball_seg25_vr)
glf_lightMaps.Add "ball_seg25", glf_ball_seg25_lmarr
Dim glf_ball_seg24_lmarr : glf_ball_seg24_lmarr = Array(p_ball_seg24_vr)
glf_lightMaps.Add "ball_seg24", glf_ball_seg24_lmarr
Dim glf_ball_seg23_lmarr : glf_ball_seg23_lmarr = Array(p_ball_seg23_vr)
glf_lightMaps.Add "ball_seg23", glf_ball_seg23_lmarr
Dim glf_ball_seg22_lmarr : glf_ball_seg22_lmarr = Array(p_ball_seg22_vr)
glf_lightMaps.Add "ball_seg22", glf_ball_seg22_lmarr
Dim glf_ball_seg21_lmarr : glf_ball_seg21_lmarr = Array(p_ball_seg21_vr)
glf_lightMaps.Add "ball_seg21", glf_ball_seg21_lmarr
Dim glf_ball_seg20_lmarr : glf_ball_seg20_lmarr = Array(p_ball_seg20_vr)
glf_lightMaps.Add "ball_seg20", glf_ball_seg20_lmarr
Dim glf_ball_seg19_lmarr : glf_ball_seg19_lmarr = Array(p_ball_seg19_vr)
glf_lightMaps.Add "ball_seg19", glf_ball_seg19_lmarr
Dim glf_ball_seg18_lmarr : glf_ball_seg18_lmarr = Array(p_ball_seg18_vr)
glf_lightMaps.Add "ball_seg18", glf_ball_seg18_lmarr
Dim glf_ball_seg17_lmarr : glf_ball_seg17_lmarr = Array(p_ball_seg17_vr)
glf_lightMaps.Add "ball_seg17", glf_ball_seg17_lmarr
Dim glf_ball_seg16_lmarr : glf_ball_seg16_lmarr = Array(p_ball_seg16_vr)
glf_lightMaps.Add "ball_seg16", glf_ball_seg16_lmarr
Dim glf_ball_seg15_lmarr : glf_ball_seg15_lmarr = Array(p_ball_seg15_vr)
glf_lightMaps.Add "ball_seg15", glf_ball_seg15_lmarr
Dim glf_ball_seg14_lmarr : glf_ball_seg14_lmarr = Array(p_ball_seg14_vr)
glf_lightMaps.Add "ball_seg14", glf_ball_seg14_lmarr
Dim glf_ball_seg13_lmarr : glf_ball_seg13_lmarr = Array(p_ball_seg13_vr)
glf_lightMaps.Add "ball_seg13", glf_ball_seg13_lmarr
Dim glf_ball_seg12_lmarr : glf_ball_seg12_lmarr = Array(p_ball_seg12_vr)
glf_lightMaps.Add "ball_seg12", glf_ball_seg12_lmarr
Dim glf_ball_seg11_lmarr : glf_ball_seg11_lmarr = Array(p_ball_seg11_vr)
glf_lightMaps.Add "ball_seg11", glf_ball_seg11_lmarr
Dim glf_ball_seg10_lmarr : glf_ball_seg10_lmarr = Array(p_ball_seg10_vr)
glf_lightMaps.Add "ball_seg10", glf_ball_seg10_lmarr
Dim glf_ball_seg9_lmarr : glf_ball_seg9_lmarr = Array(p_ball_seg9_vr)
glf_lightMaps.Add "ball_seg9", glf_ball_seg9_lmarr
Dim glf_ball_seg8_lmarr : glf_ball_seg8_lmarr = Array(p_ball_seg8_vr)
glf_lightMaps.Add "ball_seg8", glf_ball_seg8_lmarr
Dim glf_ball_seg7_lmarr : glf_ball_seg7_lmarr = Array(p_ball_seg7_vr)
glf_lightMaps.Add "ball_seg7", glf_ball_seg7_lmarr
Dim glf_ball_seg6_lmarr : glf_ball_seg6_lmarr = Array(p_ball_seg6_vr)
glf_lightMaps.Add "ball_seg6", glf_ball_seg6_lmarr
Dim glf_ball_seg5_lmarr : glf_ball_seg5_lmarr = Array(p_ball_seg5_vr)
glf_lightMaps.Add "ball_seg5", glf_ball_seg5_lmarr
Dim glf_ball_seg4_lmarr : glf_ball_seg4_lmarr = Array(p_ball_seg4_vr)
glf_lightMaps.Add "ball_seg4", glf_ball_seg4_lmarr
Dim glf_ball_seg3_lmarr : glf_ball_seg3_lmarr = Array(p_ball_seg3_vr)
glf_lightMaps.Add "ball_seg3", glf_ball_seg3_lmarr
Dim glf_ball_seg2_lmarr : glf_ball_seg2_lmarr = Array(p_ball_seg2_vr)
glf_lightMaps.Add "ball_seg2", glf_ball_seg2_lmarr
Dim glf_ball_seg1_lmarr : glf_ball_seg1_lmarr = Array(p_ball_seg1_vr)
glf_lightMaps.Add "ball_seg1", glf_ball_seg1_lmarr
Dim glf_p1_seg105_lmarr : glf_p1_seg105_lmarr = Array(p_p1_seg105_,p_p1_seg105_vr)
glf_lightMaps.Add "p1_seg105", glf_p1_seg105_lmarr
Dim glf_p1_seg104_lmarr : glf_p1_seg104_lmarr = Array(p_p1_seg104_,p_p1_seg104_vr)
glf_lightMaps.Add "p1_seg104", glf_p1_seg104_lmarr
Dim glf_p1_seg103_lmarr : glf_p1_seg103_lmarr = Array(p_p1_seg103_,p_p1_seg103_vr)
glf_lightMaps.Add "p1_seg103", glf_p1_seg103_lmarr
Dim glf_p1_seg102_lmarr : glf_p1_seg102_lmarr = Array(p_p1_seg102_,p_p1_seg102_vr)
glf_lightMaps.Add "p1_seg102", glf_p1_seg102_lmarr
Dim glf_p1_seg101_lmarr : glf_p1_seg101_lmarr = Array(p_p1_seg101_,p_p1_seg101_vr)
glf_lightMaps.Add "p1_seg101", glf_p1_seg101_lmarr
Dim glf_p1_seg100_lmarr : glf_p1_seg100_lmarr = Array(p_p1_seg100_,p_p1_seg100_vr)
glf_lightMaps.Add "p1_seg100", glf_p1_seg100_lmarr
Dim glf_p1_seg99_lmarr : glf_p1_seg99_lmarr = Array(p_p1_seg99_,p_p1_seg99_vr)
glf_lightMaps.Add "p1_seg99", glf_p1_seg99_lmarr
Dim glf_p1_seg98_lmarr : glf_p1_seg98_lmarr = Array(p_p1_seg98_,p_p1_seg98_vr)
glf_lightMaps.Add "p1_seg98", glf_p1_seg98_lmarr
Dim glf_p1_seg97_lmarr : glf_p1_seg97_lmarr = Array(p_p1_seg97_,p_p1_seg97_vr)
glf_lightMaps.Add "p1_seg97", glf_p1_seg97_lmarr
Dim glf_p1_seg96_lmarr : glf_p1_seg96_lmarr = Array(p_p1_seg96_,p_p1_seg96_vr)
glf_lightMaps.Add "p1_seg96", glf_p1_seg96_lmarr
Dim glf_p1_seg95_lmarr : glf_p1_seg95_lmarr = Array(p_p1_seg95_,p_p1_seg95_vr)
glf_lightMaps.Add "p1_seg95", glf_p1_seg95_lmarr
Dim glf_p1_seg94_lmarr : glf_p1_seg94_lmarr = Array(p_p1_seg94_,p_p1_seg94_vr)
glf_lightMaps.Add "p1_seg94", glf_p1_seg94_lmarr
Dim glf_p1_seg93_lmarr : glf_p1_seg93_lmarr = Array(p_p1_seg93_,p_p1_seg93_vr)
glf_lightMaps.Add "p1_seg93", glf_p1_seg93_lmarr
Dim glf_p1_seg92_lmarr : glf_p1_seg92_lmarr = Array(p_p1_seg92_,p_p1_seg92_vr)
glf_lightMaps.Add "p1_seg92", glf_p1_seg92_lmarr
Dim glf_p1_seg91_lmarr : glf_p1_seg91_lmarr = Array(p_p1_seg91_,p_p1_seg91_vr)
glf_lightMaps.Add "p1_seg91", glf_p1_seg91_lmarr
Dim glf_p1_seg90_lmarr : glf_p1_seg90_lmarr = Array(p_p1_seg90_,p_p1_seg90_vr)
glf_lightMaps.Add "p1_seg90", glf_p1_seg90_lmarr
Dim glf_p1_seg89_lmarr : glf_p1_seg89_lmarr = Array(p_p1_seg89_,p_p1_seg89_vr)
glf_lightMaps.Add "p1_seg89", glf_p1_seg89_lmarr
Dim glf_p1_seg88_lmarr : glf_p1_seg88_lmarr = Array(p_p1_seg88_,p_p1_seg88_vr)
glf_lightMaps.Add "p1_seg88", glf_p1_seg88_lmarr
Dim glf_p1_seg87_lmarr : glf_p1_seg87_lmarr = Array(p_p1_seg87_,p_p1_seg87_vr)
glf_lightMaps.Add "p1_seg87", glf_p1_seg87_lmarr
Dim glf_p1_seg86_lmarr : glf_p1_seg86_lmarr = Array(p_p1_seg86_,p_p1_seg86_vr)
glf_lightMaps.Add "p1_seg86", glf_p1_seg86_lmarr
Dim glf_p1_seg85_lmarr : glf_p1_seg85_lmarr = Array(p_p1_seg85_,p_p1_seg85_vr)
glf_lightMaps.Add "p1_seg85", glf_p1_seg85_lmarr
Dim glf_p1_seg84_lmarr : glf_p1_seg84_lmarr = Array(p_p1_seg84_,p_p1_seg84_vr)
glf_lightMaps.Add "p1_seg84", glf_p1_seg84_lmarr
Dim glf_p1_seg83_lmarr : glf_p1_seg83_lmarr = Array(p_p1_seg83_,p_p1_seg83_vr)
glf_lightMaps.Add "p1_seg83", glf_p1_seg83_lmarr
Dim glf_p1_seg82_lmarr : glf_p1_seg82_lmarr = Array(p_p1_seg82_,p_p1_seg82_vr)
glf_lightMaps.Add "p1_seg82", glf_p1_seg82_lmarr
Dim glf_p1_seg81_lmarr : glf_p1_seg81_lmarr = Array(p_p1_seg81_,p_p1_seg81_vr)
glf_lightMaps.Add "p1_seg81", glf_p1_seg81_lmarr
Dim glf_p1_seg80_lmarr : glf_p1_seg80_lmarr = Array(p_p1_seg80_,p_p1_seg80_vr)
glf_lightMaps.Add "p1_seg80", glf_p1_seg80_lmarr
Dim glf_p1_seg79_lmarr : glf_p1_seg79_lmarr = Array(p_p1_seg79_,p_p1_seg79_vr)
glf_lightMaps.Add "p1_seg79", glf_p1_seg79_lmarr
Dim glf_p1_seg78_lmarr : glf_p1_seg78_lmarr = Array(p_p1_seg78_,p_p1_seg78_vr)
glf_lightMaps.Add "p1_seg78", glf_p1_seg78_lmarr
Dim glf_p1_seg77_lmarr : glf_p1_seg77_lmarr = Array(p_p1_seg77_,p_p1_seg77_vr)
glf_lightMaps.Add "p1_seg77", glf_p1_seg77_lmarr
Dim glf_p1_seg76_lmarr : glf_p1_seg76_lmarr = Array(p_p1_seg76_,p_p1_seg76_vr)
glf_lightMaps.Add "p1_seg76", glf_p1_seg76_lmarr
Dim glf_p1_seg75_lmarr : glf_p1_seg75_lmarr = Array(p_p1_seg75_,p_p1_seg75_vr)
glf_lightMaps.Add "p1_seg75", glf_p1_seg75_lmarr
Dim glf_p1_seg74_lmarr : glf_p1_seg74_lmarr = Array(p_p1_seg74_,p_p1_seg74_vr)
glf_lightMaps.Add "p1_seg74", glf_p1_seg74_lmarr
Dim glf_p1_seg73_lmarr : glf_p1_seg73_lmarr = Array(p_p1_seg73_,p_p1_seg73_vr)
glf_lightMaps.Add "p1_seg73", glf_p1_seg73_lmarr
Dim glf_p1_seg72_lmarr : glf_p1_seg72_lmarr = Array(p_p1_seg72_,p_p1_seg72_vr)
glf_lightMaps.Add "p1_seg72", glf_p1_seg72_lmarr
Dim glf_p1_seg71_lmarr : glf_p1_seg71_lmarr = Array(p_p1_seg71_,p_p1_seg71_vr)
glf_lightMaps.Add "p1_seg71", glf_p1_seg71_lmarr
Dim glf_p1_seg70_lmarr : glf_p1_seg70_lmarr = Array(p_p1_seg70_,p_p1_seg70_vr)
glf_lightMaps.Add "p1_seg70", glf_p1_seg70_lmarr
Dim glf_p1_seg69_lmarr : glf_p1_seg69_lmarr = Array(p_p1_seg69_,p_p1_seg69_vr)
glf_lightMaps.Add "p1_seg69", glf_p1_seg69_lmarr
Dim glf_p1_seg68_lmarr : glf_p1_seg68_lmarr = Array(p_p1_seg68_,p_p1_seg68_vr)
glf_lightMaps.Add "p1_seg68", glf_p1_seg68_lmarr
Dim glf_p1_seg67_lmarr : glf_p1_seg67_lmarr = Array(p_p1_seg67_,p_p1_seg67_vr)
glf_lightMaps.Add "p1_seg67", glf_p1_seg67_lmarr
Dim glf_p1_seg66_lmarr : glf_p1_seg66_lmarr = Array(p_p1_seg66_,p_p1_seg66_vr)
glf_lightMaps.Add "p1_seg66", glf_p1_seg66_lmarr
Dim glf_p1_seg65_lmarr : glf_p1_seg65_lmarr = Array(p_p1_seg65_,p_p1_seg65_vr)
glf_lightMaps.Add "p1_seg65", glf_p1_seg65_lmarr
Dim glf_p1_seg64_lmarr : glf_p1_seg64_lmarr = Array(p_p1_seg64_,p_p1_seg64_vr)
glf_lightMaps.Add "p1_seg64", glf_p1_seg64_lmarr
Dim glf_p1_seg63_lmarr : glf_p1_seg63_lmarr = Array(p_p1_seg63_,p_p1_seg63_vr)
glf_lightMaps.Add "p1_seg63", glf_p1_seg63_lmarr
Dim glf_p1_seg62_lmarr : glf_p1_seg62_lmarr = Array(p_p1_seg62_,p_p1_seg62_vr)
glf_lightMaps.Add "p1_seg62", glf_p1_seg62_lmarr
Dim glf_p1_seg61_lmarr : glf_p1_seg61_lmarr = Array(p_p1_seg61_,p_p1_seg61_vr)
glf_lightMaps.Add "p1_seg61", glf_p1_seg61_lmarr
Dim glf_p1_seg60_lmarr : glf_p1_seg60_lmarr = Array(p_p1_seg60_,p_p1_seg60_vr)
glf_lightMaps.Add "p1_seg60", glf_p1_seg60_lmarr
Dim glf_p1_seg59_lmarr : glf_p1_seg59_lmarr = Array(p_p1_seg59_,p_p1_seg59_vr)
glf_lightMaps.Add "p1_seg59", glf_p1_seg59_lmarr
Dim glf_p1_seg58_lmarr : glf_p1_seg58_lmarr = Array(p_p1_seg58_,p_p1_seg58_vr)
glf_lightMaps.Add "p1_seg58", glf_p1_seg58_lmarr
Dim glf_p1_seg57_lmarr : glf_p1_seg57_lmarr = Array(p_p1_seg57_,p_p1_seg57_vr)
glf_lightMaps.Add "p1_seg57", glf_p1_seg57_lmarr
Dim glf_p1_seg56_lmarr : glf_p1_seg56_lmarr = Array(p_p1_seg56_,p_p1_seg56_vr)
glf_lightMaps.Add "p1_seg56", glf_p1_seg56_lmarr
Dim glf_p1_seg55_lmarr : glf_p1_seg55_lmarr = Array(p_p1_seg55_,p_p1_seg55_vr)
glf_lightMaps.Add "p1_seg55", glf_p1_seg55_lmarr
Dim glf_p1_seg54_lmarr : glf_p1_seg54_lmarr = Array(p_p1_seg54_,p_p1_seg54_vr)
glf_lightMaps.Add "p1_seg54", glf_p1_seg54_lmarr
Dim glf_p1_seg53_lmarr : glf_p1_seg53_lmarr = Array(p_p1_seg53_,p_p1_seg53_vr)
glf_lightMaps.Add "p1_seg53", glf_p1_seg53_lmarr
Dim glf_p1_seg52_lmarr : glf_p1_seg52_lmarr = Array(p_p1_seg52_,p_p1_seg52_vr)
glf_lightMaps.Add "p1_seg52", glf_p1_seg52_lmarr
Dim glf_p1_seg51_lmarr : glf_p1_seg51_lmarr = Array(p_p1_seg51_,p_p1_seg51_vr)
glf_lightMaps.Add "p1_seg51", glf_p1_seg51_lmarr
Dim glf_p1_seg50_lmarr : glf_p1_seg50_lmarr = Array(p_p1_seg50_,p_p1_seg50_vr)
glf_lightMaps.Add "p1_seg50", glf_p1_seg50_lmarr
Dim glf_p1_seg49_lmarr : glf_p1_seg49_lmarr = Array(p_p1_seg49_,p_p1_seg49_vr)
glf_lightMaps.Add "p1_seg49", glf_p1_seg49_lmarr
Dim glf_p1_seg48_lmarr : glf_p1_seg48_lmarr = Array(p_p1_seg48_,p_p1_seg48_vr)
glf_lightMaps.Add "p1_seg48", glf_p1_seg48_lmarr
Dim glf_p1_seg47_lmarr : glf_p1_seg47_lmarr = Array(p_p1_seg47_,p_p1_seg47_vr)
glf_lightMaps.Add "p1_seg47", glf_p1_seg47_lmarr
Dim glf_p1_seg46_lmarr : glf_p1_seg46_lmarr = Array(p_p1_seg46_,p_p1_seg46_vr)
glf_lightMaps.Add "p1_seg46", glf_p1_seg46_lmarr
Dim glf_p1_seg45_lmarr : glf_p1_seg45_lmarr = Array(p_p1_seg45_,p_p1_seg45_vr)
glf_lightMaps.Add "p1_seg45", glf_p1_seg45_lmarr
Dim glf_p1_seg44_lmarr : glf_p1_seg44_lmarr = Array(p_p1_seg44_,p_p1_seg44_vr)
glf_lightMaps.Add "p1_seg44", glf_p1_seg44_lmarr
Dim glf_p1_seg43_lmarr : glf_p1_seg43_lmarr = Array(p_p1_seg43_,p_p1_seg43_vr)
glf_lightMaps.Add "p1_seg43", glf_p1_seg43_lmarr
Dim glf_p1_seg42_lmarr : glf_p1_seg42_lmarr = Array(p_p1_seg42_,p_p1_seg42_vr)
glf_lightMaps.Add "p1_seg42", glf_p1_seg42_lmarr
Dim glf_p1_seg41_lmarr : glf_p1_seg41_lmarr = Array(p_p1_seg41_,p_p1_seg41_vr)
glf_lightMaps.Add "p1_seg41", glf_p1_seg41_lmarr
Dim glf_p1_seg40_lmarr : glf_p1_seg40_lmarr = Array(p_p1_seg40_,p_p1_seg40_vr)
glf_lightMaps.Add "p1_seg40", glf_p1_seg40_lmarr
Dim glf_p1_seg39_lmarr : glf_p1_seg39_lmarr = Array(p_p1_seg39_,p_p1_seg39_vr)
glf_lightMaps.Add "p1_seg39", glf_p1_seg39_lmarr
Dim glf_p1_seg38_lmarr : glf_p1_seg38_lmarr = Array(p_p1_seg38_,p_p1_seg38_vr)
glf_lightMaps.Add "p1_seg38", glf_p1_seg38_lmarr
Dim glf_p1_seg37_lmarr : glf_p1_seg37_lmarr = Array(p_p1_seg37_,p_p1_seg37_vr)
glf_lightMaps.Add "p1_seg37", glf_p1_seg37_lmarr
Dim glf_p1_seg36_lmarr : glf_p1_seg36_lmarr = Array(p_p1_seg36_,p_p1_seg36_vr)
glf_lightMaps.Add "p1_seg36", glf_p1_seg36_lmarr
Dim glf_p1_seg35_lmarr : glf_p1_seg35_lmarr = Array(p_p1_seg35_,p_p1_seg35_vr)
glf_lightMaps.Add "p1_seg35", glf_p1_seg35_lmarr
Dim glf_p1_seg34_lmarr : glf_p1_seg34_lmarr = Array(p_p1_seg34_,p_p1_seg34_vr)
glf_lightMaps.Add "p1_seg34", glf_p1_seg34_lmarr
Dim glf_p1_seg33_lmarr : glf_p1_seg33_lmarr = Array(p_p1_seg33_,p_p1_seg33_vr)
glf_lightMaps.Add "p1_seg33", glf_p1_seg33_lmarr
Dim glf_p1_seg32_lmarr : glf_p1_seg32_lmarr = Array(p_p1_seg32_,p_p1_seg32_vr)
glf_lightMaps.Add "p1_seg32", glf_p1_seg32_lmarr
Dim glf_p1_seg31_lmarr : glf_p1_seg31_lmarr = Array(p_p1_seg31_,p_p1_seg31_vr)
glf_lightMaps.Add "p1_seg31", glf_p1_seg31_lmarr
Dim glf_p1_seg30_lmarr : glf_p1_seg30_lmarr = Array(p_p1_seg30_,p_p1_seg30_vr)
glf_lightMaps.Add "p1_seg30", glf_p1_seg30_lmarr
Dim glf_p1_seg29_lmarr : glf_p1_seg29_lmarr = Array(p_p1_seg29_,p_p1_seg29_vr)
glf_lightMaps.Add "p1_seg29", glf_p1_seg29_lmarr
Dim glf_p1_seg28_lmarr : glf_p1_seg28_lmarr = Array(p_p1_seg28_,p_p1_seg28_vr)
glf_lightMaps.Add "p1_seg28", glf_p1_seg28_lmarr
Dim glf_p1_seg27_lmarr : glf_p1_seg27_lmarr = Array(p_p1_seg27_,p_p1_seg27_vr)
glf_lightMaps.Add "p1_seg27", glf_p1_seg27_lmarr
Dim glf_p1_seg26_lmarr : glf_p1_seg26_lmarr = Array(p_p1_seg26_,p_p1_seg26_vr)
glf_lightMaps.Add "p1_seg26", glf_p1_seg26_lmarr
Dim glf_p1_seg25_lmarr : glf_p1_seg25_lmarr = Array(p_p1_seg25_,p_p1_seg25_vr)
glf_lightMaps.Add "p1_seg25", glf_p1_seg25_lmarr
Dim glf_p1_seg24_lmarr : glf_p1_seg24_lmarr = Array(p_p1_seg24_,p_p1_seg24_vr)
glf_lightMaps.Add "p1_seg24", glf_p1_seg24_lmarr
Dim glf_p1_seg23_lmarr : glf_p1_seg23_lmarr = Array(p_p1_seg23_,p_p1_seg23_vr)
glf_lightMaps.Add "p1_seg23", glf_p1_seg23_lmarr
Dim glf_p1_seg22_lmarr : glf_p1_seg22_lmarr = Array(p_p1_seg22_,p_p1_seg22_vr)
glf_lightMaps.Add "p1_seg22", glf_p1_seg22_lmarr
Dim glf_p1_seg21_lmarr : glf_p1_seg21_lmarr = Array(p_p1_seg21_,p_p1_seg21_vr)
glf_lightMaps.Add "p1_seg21", glf_p1_seg21_lmarr
Dim glf_p1_seg20_lmarr : glf_p1_seg20_lmarr = Array(p_p1_seg20_,p_p1_seg20_vr)
glf_lightMaps.Add "p1_seg20", glf_p1_seg20_lmarr
Dim glf_p1_seg19_lmarr : glf_p1_seg19_lmarr = Array(p_p1_seg19_,p_p1_seg19_vr)
glf_lightMaps.Add "p1_seg19", glf_p1_seg19_lmarr
Dim glf_p1_seg18_lmarr : glf_p1_seg18_lmarr = Array(p_p1_seg18_,p_p1_seg18_vr)
glf_lightMaps.Add "p1_seg18", glf_p1_seg18_lmarr
Dim glf_p1_seg17_lmarr : glf_p1_seg17_lmarr = Array(p_p1_seg17_,p_p1_seg17_vr)
glf_lightMaps.Add "p1_seg17", glf_p1_seg17_lmarr
Dim glf_p1_seg16_lmarr : glf_p1_seg16_lmarr = Array(p_p1_seg16_,p_p1_seg16_vr)
glf_lightMaps.Add "p1_seg16", glf_p1_seg16_lmarr
Dim glf_p1_seg15_lmarr : glf_p1_seg15_lmarr = Array(p_p1_seg15_,p_p1_seg15_vr)
glf_lightMaps.Add "p1_seg15", glf_p1_seg15_lmarr
Dim glf_p1_seg14_lmarr : glf_p1_seg14_lmarr = Array(p_p1_seg14_,p_p1_seg14_vr)
glf_lightMaps.Add "p1_seg14", glf_p1_seg14_lmarr
Dim glf_p1_seg13_lmarr : glf_p1_seg13_lmarr = Array(p_p1_seg13_,p_p1_seg13_vr)
glf_lightMaps.Add "p1_seg13", glf_p1_seg13_lmarr
Dim glf_p1_seg12_lmarr : glf_p1_seg12_lmarr = Array(p_p1_seg12_,p_p1_seg12_vr)
glf_lightMaps.Add "p1_seg12", glf_p1_seg12_lmarr
Dim glf_p1_seg11_lmarr : glf_p1_seg11_lmarr = Array(p_p1_seg11_,p_p1_seg11_vr)
glf_lightMaps.Add "p1_seg11", glf_p1_seg11_lmarr
Dim glf_p1_seg10_lmarr : glf_p1_seg10_lmarr = Array(p_p1_seg10_,p_p1_seg10_vr)
glf_lightMaps.Add "p1_seg10", glf_p1_seg10_lmarr
Dim glf_p1_seg9_lmarr : glf_p1_seg9_lmarr = Array(p_p1_seg9_,p_p1_seg9_vr)
glf_lightMaps.Add "p1_seg9", glf_p1_seg9_lmarr
Dim glf_p1_seg8_lmarr : glf_p1_seg8_lmarr = Array(p_p1_seg8_,p_p1_seg8_vr)
glf_lightMaps.Add "p1_seg8", glf_p1_seg8_lmarr
Dim glf_p1_seg7_lmarr : glf_p1_seg7_lmarr = Array(p_p1_seg7_,p_p1_seg7_vr)
glf_lightMaps.Add "p1_seg7", glf_p1_seg7_lmarr
Dim glf_p1_seg6_lmarr : glf_p1_seg6_lmarr = Array(p_p1_seg6_,p_p1_seg6_vr)
glf_lightMaps.Add "p1_seg6", glf_p1_seg6_lmarr
Dim glf_p1_seg5_lmarr : glf_p1_seg5_lmarr = Array(p_p1_seg5_,p_p1_seg5_vr)
glf_lightMaps.Add "p1_seg5", glf_p1_seg5_lmarr
Dim glf_p1_seg4_lmarr : glf_p1_seg4_lmarr = Array(p_p1_seg4_,p_p1_seg4_vr)
glf_lightMaps.Add "p1_seg4", glf_p1_seg4_lmarr
Dim glf_p1_seg3_lmarr : glf_p1_seg3_lmarr = Array(p_p1_seg3_,p_p1_seg3_vr)
glf_lightMaps.Add "p1_seg3", glf_p1_seg3_lmarr
Dim glf_p1_seg2_lmarr : glf_p1_seg2_lmarr = Array(p_p1_seg2_,p_p1_seg2_vr)
glf_lightMaps.Add "p1_seg2", glf_p1_seg2_lmarr
Dim glf_p1_seg1_lmarr : glf_p1_seg1_lmarr = Array(p_p1_seg1_,p_p1_seg1_vr)
glf_lightMaps.Add "p1_seg1", glf_p1_seg1_lmarr
Dim glf_pf_seg30_lmarr : glf_pf_seg30_lmarr = Array(p_pf_seg30_)
glf_lightMaps.Add "pf_seg30", glf_pf_seg30_lmarr
Dim glf_pf_seg29_lmarr : glf_pf_seg29_lmarr = Array(p_pf_seg29_)
glf_lightMaps.Add "pf_seg29", glf_pf_seg29_lmarr
Dim glf_pf_seg28_lmarr : glf_pf_seg28_lmarr = Array(p_pf_seg28_)
glf_lightMaps.Add "pf_seg28", glf_pf_seg28_lmarr
Dim glf_pf_seg27_lmarr : glf_pf_seg27_lmarr = Array(p_pf_seg27_)
glf_lightMaps.Add "pf_seg27", glf_pf_seg27_lmarr
Dim glf_pf_seg26_lmarr : glf_pf_seg26_lmarr = Array(p_pf_seg26_)
glf_lightMaps.Add "pf_seg26", glf_pf_seg26_lmarr
Dim glf_pf_seg25_lmarr : glf_pf_seg25_lmarr = Array(p_pf_seg25_)
glf_lightMaps.Add "pf_seg25", glf_pf_seg25_lmarr
Dim glf_pf_seg24_lmarr : glf_pf_seg24_lmarr = Array(p_pf_seg24_)
glf_lightMaps.Add "pf_seg24", glf_pf_seg24_lmarr
Dim glf_pf_seg23_lmarr : glf_pf_seg23_lmarr = Array(p_pf_seg23_)
glf_lightMaps.Add "pf_seg23", glf_pf_seg23_lmarr
Dim glf_pf_seg22_lmarr : glf_pf_seg22_lmarr = Array(p_pf_seg22_)
glf_lightMaps.Add "pf_seg22", glf_pf_seg22_lmarr
Dim glf_pf_seg21_lmarr : glf_pf_seg21_lmarr = Array(p_pf_seg21_)
glf_lightMaps.Add "pf_seg21", glf_pf_seg21_lmarr
Dim glf_pf_seg20_lmarr : glf_pf_seg20_lmarr = Array(p_pf_seg20_)
glf_lightMaps.Add "pf_seg20", glf_pf_seg20_lmarr
Dim glf_pf_seg19_lmarr : glf_pf_seg19_lmarr = Array(p_pf_seg19_)
glf_lightMaps.Add "pf_seg19", glf_pf_seg19_lmarr
Dim glf_pf_seg18_lmarr : glf_pf_seg18_lmarr = Array(p_pf_seg18_)
glf_lightMaps.Add "pf_seg18", glf_pf_seg18_lmarr
Dim glf_pf_seg17_lmarr : glf_pf_seg17_lmarr = Array(p_pf_seg17_)
glf_lightMaps.Add "pf_seg17", glf_pf_seg17_lmarr
Dim glf_pf_seg16_lmarr : glf_pf_seg16_lmarr = Array(p_pf_seg16_)
glf_lightMaps.Add "pf_seg16", glf_pf_seg16_lmarr
Dim glf_pf_seg15_lmarr : glf_pf_seg15_lmarr = Array(p_pf_seg15_)
glf_lightMaps.Add "pf_seg15", glf_pf_seg15_lmarr
Dim glf_pf_seg14_lmarr : glf_pf_seg14_lmarr = Array(p_pf_seg14_)
glf_lightMaps.Add "pf_seg14", glf_pf_seg14_lmarr
Dim glf_pf_seg13_lmarr : glf_pf_seg13_lmarr = Array(p_pf_seg13_)
glf_lightMaps.Add "pf_seg13", glf_pf_seg13_lmarr
Dim glf_pf_seg12_lmarr : glf_pf_seg12_lmarr = Array(p_pf_seg12_)
glf_lightMaps.Add "pf_seg12", glf_pf_seg12_lmarr
Dim glf_pf_seg11_lmarr : glf_pf_seg11_lmarr = Array(p_pf_seg11_)
glf_lightMaps.Add "pf_seg11", glf_pf_seg11_lmarr
Dim glf_pf_seg10_lmarr : glf_pf_seg10_lmarr = Array(p_pf_seg10_)
glf_lightMaps.Add "pf_seg10", glf_pf_seg10_lmarr
Dim glf_pf_seg9_lmarr : glf_pf_seg9_lmarr = Array(p_pf_seg9_)
glf_lightMaps.Add "pf_seg9", glf_pf_seg9_lmarr
Dim glf_pf_seg8_lmarr : glf_pf_seg8_lmarr = Array(p_pf_seg8_)
glf_lightMaps.Add "pf_seg8", glf_pf_seg8_lmarr
Dim glf_pf_seg7_lmarr : glf_pf_seg7_lmarr = Array(p_pf_seg7_)
glf_lightMaps.Add "pf_seg7", glf_pf_seg7_lmarr
Dim glf_pf_seg6_lmarr : glf_pf_seg6_lmarr = Array(p_pf_seg6_)
glf_lightMaps.Add "pf_seg6", glf_pf_seg6_lmarr
Dim glf_pf_seg5_lmarr : glf_pf_seg5_lmarr = Array(p_pf_seg5_)
glf_lightMaps.Add "pf_seg5", glf_pf_seg5_lmarr
Dim glf_pf_seg4_lmarr : glf_pf_seg4_lmarr = Array(p_pf_seg4_)
glf_lightMaps.Add "pf_seg4", glf_pf_seg4_lmarr
Dim glf_pf_seg3_lmarr : glf_pf_seg3_lmarr = Array(p_pf_seg3_)
glf_lightMaps.Add "pf_seg3", glf_pf_seg3_lmarr
Dim glf_pf_seg2_lmarr : glf_pf_seg2_lmarr = Array(p_pf_seg2_)
glf_lightMaps.Add "pf_seg2", glf_pf_seg2_lmarr
Dim glf_pf_seg1_lmarr : glf_pf_seg1_lmarr = Array(p_pf_seg1_)
glf_lightMaps.Add "pf_seg1", glf_pf_seg1_lmarr
Dim glf_LBG08_lmarr : glf_LBG08_lmarr = Array(f_lbg08_)
glf_lightMaps.Add "LBG08", glf_LBG08_lmarr
Dim glf_LBG16_lmarr : glf_LBG16_lmarr = Array(f_lbg16_)
glf_lightMaps.Add "LBG16", glf_LBG16_lmarr
Dim glf_LBG15_lmarr : glf_LBG15_lmarr = Array(f_lbg15_)
glf_lightMaps.Add "LBG15", glf_LBG15_lmarr
Dim glf_LBG14_lmarr : glf_LBG14_lmarr = Array(f_lbg14_)
glf_lightMaps.Add "LBG14", glf_LBG14_lmarr
Dim glf_LBG13_lmarr : glf_LBG13_lmarr = Array(f_lbg13_)
glf_lightMaps.Add "LBG13", glf_LBG13_lmarr
Dim glf_LBG12_lmarr : glf_LBG12_lmarr = Array(f_lbg12_)
glf_lightMaps.Add "LBG12", glf_LBG12_lmarr
Dim glf_LBG11_lmarr : glf_LBG11_lmarr = Array(f_lbg11_)
glf_lightMaps.Add "LBG11", glf_LBG11_lmarr
Dim glf_LBG10_lmarr : glf_LBG10_lmarr = Array(f_lbg10_)
glf_lightMaps.Add "LBG10", glf_LBG10_lmarr
Dim glf_LBG09_lmarr : glf_LBG09_lmarr = Array(f_lbg09_)
glf_lightMaps.Add "LBG09", glf_LBG09_lmarr
Dim glf_LBG07_lmarr : glf_LBG07_lmarr = Array(f_lbg07_)
glf_lightMaps.Add "LBG07", glf_LBG07_lmarr
Dim glf_LBG06_lmarr : glf_LBG06_lmarr = Array(f_lbg06_)
glf_lightMaps.Add "LBG06", glf_LBG06_lmarr
Dim glf_LBG05_lmarr : glf_LBG05_lmarr = Array(f_lbg05_)
glf_lightMaps.Add "LBG05", glf_LBG05_lmarr
Dim glf_LBG04_lmarr : glf_LBG04_lmarr = Array(f_lbg04_)
glf_lightMaps.Add "LBG04", glf_LBG04_lmarr
Dim glf_LBG03_lmarr : glf_LBG03_lmarr = Array(f_lbg03_)
glf_lightMaps.Add "LBG03", glf_LBG03_lmarr
Dim glf_LBG02_lmarr : glf_LBG02_lmarr = Array(f_lbg02_a,f_lbg02_b,f_lbg02_c,f_lbg02_d)
glf_lightMaps.Add "LBG02", glf_LBG02_lmarr
Dim glf_LBG01_lmarr : glf_LBG01_lmarr = Array(f_lbg01_a,f_lbg01_b,f_lbg01_c,f_lbg01_d)
glf_lightMaps.Add "LBG01", glf_LBG01_lmarr
Dim glf_LL_lmarr : glf_LL_lmarr = Array(lm_l_ll_parts,lm_l_ll_playfield,lm_l_ll_underpf)
glf_lightMaps.Add "LL", glf_LL_lmarr


